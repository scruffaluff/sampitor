# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: test

# Trigger workflow on push or pull request to the develop, main, and master
# branches.
on:
  pull_request:
    branches:
      - develop
      - main
      - master
  push:
    branches:
      - develop
      - main
      - master

jobs:
  check:
    name: Check that code compiles over multiple Rust versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install ALSA packages
        run: |
          sudo apt-get update
          sudo apt-get install -y alsa-utils libasound2-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy, rustfmt
          toolchain: stable
      - name: Install Rust packages from cache
        uses: swatinem/rust-cache@v2
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Run Rust code linters
        uses: actions-rs/cargo@v1
        with:
          args: check
          command: make

  test:
    name: Run test suite for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: Linux
            runner: ubuntu-latest
          - os: MacOS
            runner: macos-latest
          - os: Windows
            runner: windows-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install ALSA packages
        if: matrix.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y alsa-utils libasound2-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Rust packages from cache
        uses: swatinem/rust-cache@v2
      - name: Run Rust tests
        env:
          RUST_BACKTRACE: 1
        uses: actions-rs/cargo@v1
        with:
          command: test

  test-cross:
    name: Run cross test suite for ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build target Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.${{ matrix.target }}
          load: true
          push: false
          tags: scruffaluff/cross-sampitor:${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run Rust cross tests
        uses: actions-rs/cargo@v1
        with:
          args: --target ${{ matrix.target }}
          command: test
          use-cross: true

  coverage:
    name: Check code for test coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install ALSA packages
        run: |
          sudo apt-get update
          sudo apt-get install -y alsa-utils libasound2-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Rust packages from cache
        uses: swatinem/rust-cache@v2
      - name: Run test code coverage
        uses: actions-rs/tarpaulin@v0.1

  benchmark:
    name: Check for benchmark performance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v3
      - name: Install ALSA packages
        run: |
          sudo apt-get update
          sudo apt-get install -y alsa-utils libasound2-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Rust packages from cache
        uses: swatinem/rust-cache@v2
      - name: Run benchmark suite
        uses: actions-rs/cargo@v1
        with:
          command: bench
