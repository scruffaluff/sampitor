var searchIndex = JSON.parse('{\
"addr2line":{"doc":"This crate provides a cross-platform library and binary …","i":[[3,"Context","addr2line","The state necessary to perform address to line …",null,null],[11,"from_sections","","Construct a new <code>Context</code> from DWARF sections.",0,[[["debugaddr",3],["debugranges",3],["debuglinestr",3],["debugline",3],["debugrnglists",3],["debugabbrev",3],["debugstroffsets",3],["debuginfo",3],["debugstr",3]],[["error",4],["result",4]]]],[11,"from_dwarf","","Construct a new <code>Context</code> from an existing [<code>gimli::Dwarf</code>] …",0,[[["dwarf",3]],[["error",4],["result",4]]]],[11,"dwarf","","The dwarf sections associated with this <code>Context</code>.",0,[[],["dwarf",3]]],[11,"find_dwarf_unit","","Find the DWARF unit corresponding to the given virtual …",0,[[["u64",15]],[["option",4],["unit",3]]]],[11,"find_location","","Find the source file and line corresponding to the given …",0,[[["u64",15]],[["error",4],["result",4],["option",4]]]],[11,"find_location_range","","Return source file and lines for a range of addresses. …",0,[[["u64",15]],[["error",4],["result",4],["locationrangeiter",3]]]],[11,"find_frames","","Return an iterator for the function frames corresponding …",0,[[["u64",15]],[["frameiter",3],["error",4],["result",4]]]],[3,"LocationRangeIter","","Iterator over <code>Location</code>s in a range of addresses, returned …",null,null],[3,"FrameIter","","An iterator over function frames.",null,null],[11,"next","","Advances the iterator and returns the next frame.",1,[[],[["error",4],["option",4],["result",4]]]],[3,"Frame","","A function frame.",null,null],[12,"dw_die_offset","","The DWARF unit offset corresponding to the DIE of the …",2,null],[12,"function","","The name of the function.",2,null],[12,"location","","The source location corresponding to this frame.",2,null],[3,"FunctionName","","A function name.",null,null],[12,"name","","The name of the function.",3,null],[12,"language","","The language of the compilation unit containing this …",3,null],[11,"raw_name","","The raw name of this function before demangling.",3,[[],[["error",4],["cow",4],["result",4]]]],[11,"demangle","","The name of this function after demangling (if …",3,[[],[["error",4],["cow",4],["result",4]]]],[5,"demangle","","Demangle a symbol name using the demangling scheme for …",null,[[["dwlang",3],["str",15]],[["option",4],["string",3]]]],[5,"demangle_auto","","Apply \'best effort\' demangling of a symbol name.",null,[[["dwlang",3],["option",4],["cow",4],["str",15]],[["cow",4],["str",15]]]],[3,"Location","","A source location.",null,null],[12,"file","","The file name.",4,null],[12,"line","","The line number.",4,null],[12,"column","","The column number.",4,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"next","","",5,[[],["option",4]]]],"p":[[3,"Context"],[3,"FrameIter"],[3,"Frame"],[3,"FunctionName"],[3,"Location"],[3,"LocationRangeIter"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","i":[[3,"Adler32","adler","Adler-32 checksum calculator.",null,null],[11,"new","","Creates a new Adler-32 instance with default state.",0,[[]]],[11,"from_checksum","","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …",0,[[["u32",15]]]],[11,"checksum","","Returns the calculated checksum at this point in time.",0,[[],["u32",15]]],[11,"write_slice","","Adds <code>bytes</code> to the checksum calculation.",0,[[]]],[5,"adler32_slice","","Calculates the Adler-32 checksum of a byte slice.",null,[[],["u32",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"finish","","",0,[[],["u64",15]]],[11,"write","","",0,[[]]],[11,"clone","","",0,[[],["adler32",3]]],[11,"default","","",0,[[]]]],"p":[[3,"Adler32"]]},\
"alsa":{"doc":"Thin but safe wrappers for ALSA.","i":[[0,"card","alsa","Sound card enumeration",null,null],[3,"Card","alsa::card","An ALSA sound card, uniquely identified by its index.",null,null],[3,"Iter","","Iterate over existing sound cards.",null,null],[11,"new","","",0,[[],["iter",3]]],[11,"new","","",1,[[["c_int",6]],["card",3]]],[11,"from_str","","",1,[[["cstr",3]],[["result",6],["card",3]]]],[11,"get_name","","",1,[[],[["string",3],["result",6]]]],[11,"get_longname","","",1,[[],[["string",3],["result",6]]]],[11,"get_index","","",1,[[],["c_int",6]]],[0,"ctl","alsa","Control device API",null,null],[3,"Ctl","alsa::ctl","snd_ctl_t wrapper",null,null],[3,"CardInfo","","snd_ctl_card_info_t wrapper",null,null],[4,"ElemIface","","SND_CTL_ELEM_IFACE_xxx constants",null,null],[13,"Card","","",2,null],[13,"Hwdep","","",2,null],[13,"Mixer","","",2,null],[13,"PCM","","",2,null],[13,"Rawmidi","","",2,null],[13,"Timer","","",2,null],[13,"Sequencer","","",2,null],[3,"ElemId","","snd_ctl_elem_id_t wrapper",null,null],[4,"ElemType","","SND_CTL_ELEM_TYPE_xxx constants",null,null],[13,"None","","",3,null],[13,"Boolean","","",3,null],[13,"Integer","","",3,null],[13,"Enumerated","","",3,null],[13,"Bytes","","",3,null],[13,"IEC958","","",3,null],[13,"Integer64","","",3,null],[3,"ElemValue","","snd_ctl_elem_value_t wrapper",null,null],[3,"ElemInfo","","snd_ctl_elem_info_t wrapper",null,null],[0,"hctl","alsa","HCtl API - for mixer control and jack detection",null,null],[3,"HCtl","alsa::hctl","snd_hctl_t wrapper",null,null],[11,"new","","Wrapper around open that takes a &str instead of a &CStr",4,[[["bool",15],["str",15]],[["hctl",3],["result",6]]]],[11,"open","","Open does not support async mode (it\'s not very Rustic …",4,[[["bool",15],["cstr",3]],[["hctl",3],["result",6]]]],[11,"load","","",4,[[],["result",6]]],[11,"elem_iter","","",4,[[],["elemiter",3]]],[11,"find_elem","","",4,[[["elemid",3]],[["elem",3],["option",4]]]],[11,"wait","","",4,[[["u32",15],["option",4]],[["bool",15],["result",6]]]],[3,"ElemIter","","Iterates over elements for a <code>HCtl</code>",null,null],[3,"Elem","","snd_hctl_elem_t wrapper",null,null],[11,"get_id","","",5,[[],[["result",6],["elemid",3]]]],[11,"info","","",5,[[],[["eleminfo",3],["result",6]]]],[11,"read","","",5,[[],[["result",6],["elemvalue",3]]]],[11,"write","","",5,[[["elemvalue",3]],[["bool",15],["result",6]]]],[0,"pcm","alsa","Audio playback and capture",null,null],[3,"Chmap","alsa::pcm","snd_pcm_chmap_t wrapper",null,null],[4,"ChmapPosition","","SND_CHMAP_xxx constants",null,null],[13,"Unknown","","",6,null],[13,"NA","","",6,null],[13,"Mono","","",6,null],[13,"FL","","",6,null],[13,"FR","","",6,null],[13,"RL","","",6,null],[13,"SR","","",6,null],[13,"RC","","",6,null],[13,"FLC","","",6,null],[13,"FRC","","",6,null],[13,"RLC","","",6,null],[13,"RRC","","",6,null],[13,"FLW","","",6,null],[13,"FRW","","",6,null],[13,"FLH","","",6,null],[13,"FCH","","",6,null],[13,"FRH","","",6,null],[13,"TC","","",6,null],[13,"TFL","","",6,null],[13,"TFR","","",6,null],[13,"TFC","","",6,null],[13,"TRL","","",6,null],[13,"TRR","","",6,null],[13,"TRC","","",6,null],[13,"TFLC","","",6,null],[13,"TFRC","","",6,null],[13,"TSL","","",6,null],[13,"TSR","","",6,null],[13,"LLFE","","",6,null],[13,"RLFE","","",6,null],[13,"BC","","",6,null],[13,"BLC","","",6,null],[13,"BRC","","",6,null],[4,"ChmapType","","SND_CHMAP_TYPE_xxx constants",null,null],[13,"None","","",7,null],[13,"Fixed","","",7,null],[13,"Var","","",7,null],[13,"Paired","","",7,null],[3,"ChmapsQuery","","Iterator over available channel maps - see …",null,null],[6,"Frames","","snd_pcm_sframes_t",null,null],[3,"Info","","",null,null],[11,"new","","",8,[[],[["result",6],["info",3]]]],[11,"get_card","","",8,[[],["i32",15]]],[11,"get_device","","",8,[[],["u32",15]]],[11,"get_subdevice","","",8,[[],["u32",15]]],[11,"get_id","","",8,[[],[["result",6],["str",15]]]],[11,"get_name","","",8,[[],[["result",6],["str",15]]]],[11,"get_subdevice_name","","",8,[[],[["result",6],["str",15]]]],[11,"get_stream","","",8,[[],["direction",4]]],[3,"PCM","","snd_pcm_t wrapper - start here for audio playback and …",null,null],[11,"new","","Wrapper around open that takes a &str instead of a &CStr",9,[[["bool",15],["direction",4],["str",15]],[["result",6],["pcm",3]]]],[11,"open","","",9,[[["bool",15],["cstr",3],["direction",4]],[["result",6],["pcm",3]]]],[11,"start","","",9,[[],["result",6]]],[11,"drop","","",9,[[],["result",6]]],[11,"pause","","",9,[[["bool",15]],["result",6]]],[11,"resume","","",9,[[],["result",6]]],[11,"drain","","",9,[[],["result",6]]],[11,"prepare","","",9,[[],["result",6]]],[11,"reset","","",9,[[],["result",6]]],[11,"recover","","",9,[[["bool",15],["c_int",6]],["result",6]]],[11,"try_recover","","Wrapper around snd_pcm_recover.",9,[[["bool",15],["error",3]],["result",6]]],[11,"wait","","",9,[[["u32",15],["option",4]],[["bool",15],["result",6]]]],[11,"state","","",9,[[],["state",4]]],[11,"bytes_to_frames","","",9,[[["isize",15]],["frames",6]]],[11,"frames_to_bytes","","",9,[[["frames",6]],["isize",15]]],[11,"avail_update","","",9,[[],[["frames",6],["result",6]]]],[11,"avail","","",9,[[],[["frames",6],["result",6]]]],[11,"avail_delay","","",9,[[],["result",6]]],[11,"delay","","",9,[[],[["frames",6],["result",6]]]],[11,"status","","",9,[[],[["result",6],["status",3]]]],[11,"io_i8","","",9,[[],[["result",6],["io",3]]]],[11,"io_u8","","",9,[[],[["result",6],["io",3]]]],[11,"io_i16","","",9,[[],[["result",6],["io",3]]]],[11,"io_u16","","",9,[[],[["result",6],["io",3]]]],[11,"io_i32","","",9,[[],[["result",6],["io",3]]]],[11,"io_u32","","",9,[[],[["result",6],["io",3]]]],[11,"io_f32","","",9,[[],[["result",6],["io",3]]]],[11,"io_f64","","",9,[[],[["result",6],["io",3]]]],[11,"io_checked","","",9,[[],[["result",6],["io",3]]]],[11,"io","","",9,[[],[["u8",15],["io",3]]]],[11,"io_bytes","","",9,[[],[["u8",15],["io",3]]]],[11,"direct_mmap_capture","","Read buffers by talking to the kernel directly, bypassing …",9,[[],[["result",6],["mmapcapture",6]]]],[11,"direct_mmap_playback","","Write buffers by talking to the kernel directly, …",9,[[],[["mmapplayback",6],["result",6]]]],[11,"hw_params","","Sets hw parameters. Note: No IO object can exist for this …",9,[[["hwparams",3]],["result",6]]],[11,"hw_params_current","","Retreive current PCM hardware configuration.",9,[[],[["result",6],["hwparams",3]]]],[11,"sw_params","","",9,[[["swparams",3]],["result",6]]],[11,"sw_params_current","","",9,[[],[["swparams",3],["result",6]]]],[11,"get_params","","Wraps <code>snd_pcm_get_params</code>, returns …",9,[[],["result",6]]],[11,"info","","",9,[[],[["result",6],["info",3]]]],[11,"dump","","",9,[[["output",3]],["result",6]]],[11,"dump_hw_setup","","",9,[[["output",3]],["result",6]]],[11,"dump_sw_setup","","",9,[[["output",3]],["result",6]]],[11,"query_chmaps","","",9,[[],["chmapsquery",3]]],[11,"set_chmap","","",9,[[["chmap",3]],["result",6]]],[11,"get_chmap","","",9,[[],[["chmap",3],["result",6]]]],[11,"link","","",9,[[["pcm",3]],["result",6]]],[11,"unlink","","",9,[[],["result",6]]],[3,"IO","","Sample format dependent struct for reading from and …",null,null],[11,"writei","","On success, returns number of <em>frames</em> written. (Multiply …",10,[[],[["usize",15],["result",6]]]],[11,"readi","","On success, returns number of <em>frames</em> read. (Multiply with …",10,[[],[["usize",15],["result",6]]]],[11,"mmap","","Wrapper around snd_pcm_mmap_begin and snd_pcm_mmap_commit.",10,[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]]],[4,"State","","SND_PCM_STATE_xxx constants",null,null],[13,"Open","","",11,null],[13,"Setup","","",11,null],[13,"Prepared","","",11,null],[13,"Running","","",11,null],[13,"XRun","","",11,null],[13,"Draining","","",11,null],[13,"Paused","","",11,null],[13,"Suspended","","",11,null],[13,"Disconnected","","",11,null],[11,"all","","Returns a slice of all possible values; useful for …",11,[[]]],[4,"Format","","SND_PCM_FORMAT_xxx constants",null,null],[13,"Unknown","","",12,null],[13,"S8","","",12,null],[13,"U8","","",12,null],[13,"S16LE","","",12,null],[13,"S16BE","","",12,null],[13,"U16LE","","",12,null],[13,"U16BE","","",12,null],[13,"S24LE","","",12,null],[13,"S24BE","","",12,null],[13,"U24LE","","",12,null],[13,"U24BE","","",12,null],[13,"S32LE","","",12,null],[13,"S32BE","","",12,null],[13,"U32LE","","",12,null],[13,"U32BE","","",12,null],[13,"FloatLE","","",12,null],[13,"FloatBE","","",12,null],[13,"Float64LE","","",12,null],[13,"Float64BE","","",12,null],[13,"IEC958SubframeLE","","",12,null],[13,"IEC958SubframeBE","","",12,null],[13,"MuLaw","","",12,null],[13,"ALaw","","",12,null],[13,"ImaAdPCM","","",12,null],[13,"MPEG","","",12,null],[13,"GSM","","",12,null],[13,"Special","","",12,null],[13,"S243LE","","",12,null],[13,"S243BE","","",12,null],[13,"U243LE","","",12,null],[13,"U243BE","","",12,null],[13,"S203LE","","",12,null],[13,"S203BE","","",12,null],[13,"U203LE","","",12,null],[13,"U203BE","","",12,null],[13,"S183LE","","",12,null],[13,"S183BE","","",12,null],[13,"U183LE","","",12,null],[13,"U183BE","","",12,null],[13,"G72324","","",12,null],[13,"G723241B","","",12,null],[13,"G72340","","",12,null],[13,"G723401B","","",12,null],[13,"DSDU8","","",12,null],[13,"DSDU16LE","","",12,null],[13,"DSDU32LE","","",12,null],[13,"DSDU16BE","","",12,null],[13,"DSDU32BE","","",12,null],[11,"all","","Returns a slice of all possible values; useful for …",12,[[]]],[11,"s16","","",12,[[],["format",4]]],[11,"u16","","",12,[[],["format",4]]],[11,"s32","","",12,[[],["format",4]]],[11,"u32","","",12,[[],["format",4]]],[11,"float","","",12,[[],["format",4]]],[11,"float64","","",12,[[],["format",4]]],[11,"s24","","",12,[[],["format",4]]],[11,"u24","","",12,[[],["format",4]]],[11,"iec958_subframe","","",12,[[],["format",4]]],[8,"IoFormat","","",null,null],[18,"FORMAT","","",13,null],[4,"Access","","SND_PCM_ACCESS_xxx constants",null,null],[13,"MMapInterleaved","","",14,null],[13,"MMapNonInterleaved","","",14,null],[13,"MMapComplex","","",14,null],[13,"RWInterleaved","","",14,null],[13,"RWNonInterleaved","","",14,null],[11,"all","","Returns a slice of all possible values; useful for …",14,[[]]],[4,"TstampType","","SND_PCM_TSTAMP_TYPE_xxx constants",null,null],[13,"Gettimeofday","","",15,null],[13,"Monotonic","","",15,null],[13,"MonotonicRaw","","",15,null],[11,"all","","Returns a slice of all possible values; useful for …",15,[[]]],[3,"HwParams","","snd_pcm_hw_params_t wrapper",null,null],[11,"any","","",16,[[["pcm",3]],[["result",6],["hwparams",3]]]],[11,"get_rate_resample","","",16,[[],[["bool",15],["result",6]]]],[11,"set_rate_resample","","",16,[[["bool",15]],["result",6]]],[11,"set_channels_near","","",16,[[["u32",15]],[["u32",15],["result",6]]]],[11,"set_channels","","",16,[[["u32",15]],["result",6]]],[11,"get_channels","","",16,[[],[["u32",15],["result",6]]]],[11,"get_channels_max","","",16,[[],[["u32",15],["result",6]]]],[11,"get_channels_min","","",16,[[],[["u32",15],["result",6]]]],[11,"test_channels","","",16,[[["u32",15]],["result",6]]],[11,"set_rate_near","","",16,[[["u32",15],["valueor",4]],[["u32",15],["result",6]]]],[11,"set_rate","","",16,[[["u32",15],["valueor",4]],["result",6]]],[11,"get_rate","","",16,[[],[["u32",15],["result",6]]]],[11,"get_rate_max","","",16,[[],[["u32",15],["result",6]]]],[11,"get_rate_min","","",16,[[],[["u32",15],["result",6]]]],[11,"test_rate","","",16,[[["u32",15]],["result",6]]],[11,"set_format","","",16,[[["format",4]],["result",6]]],[11,"get_format","","",16,[[],[["format",4],["result",6]]]],[11,"test_format","","",16,[[["format",4]],["result",6]]],[11,"set_access","","",16,[[["access",4]],["result",6]]],[11,"get_access","","",16,[[],[["access",4],["result",6]]]],[11,"set_period_size_near","","",16,[[["frames",6],["valueor",4]],[["frames",6],["result",6]]]],[11,"set_period_size","","",16,[[["frames",6],["valueor",4]],["result",6]]],[11,"set_period_time_near","","",16,[[["u32",15],["valueor",4]],[["u32",15],["result",6]]]],[11,"get_period_size","","",16,[[],[["frames",6],["result",6]]]],[11,"get_period_size_min","","",16,[[],[["frames",6],["result",6]]]],[11,"get_period_size_max","","",16,[[],[["frames",6],["result",6]]]],[11,"set_periods","","",16,[[["u32",15],["valueor",4]],["result",6]]],[11,"get_periods","","",16,[[],[["u32",15],["result",6]]]],[11,"set_buffer_size_near","","",16,[[["frames",6]],[["frames",6],["result",6]]]],[11,"set_buffer_size_max","","",16,[[["frames",6]],[["frames",6],["result",6]]]],[11,"set_buffer_size_min","","",16,[[["frames",6]],[["frames",6],["result",6]]]],[11,"set_buffer_size","","",16,[[["frames",6]],["result",6]]],[11,"set_buffer_time_near","","",16,[[["u32",15],["valueor",4]],[["u32",15],["result",6]]]],[11,"get_buffer_size","","",16,[[],[["frames",6],["result",6]]]],[11,"get_buffer_size_min","","",16,[[],[["frames",6],["result",6]]]],[11,"get_buffer_size_max","","",16,[[],[["frames",6],["result",6]]]],[11,"get_buffer_time_max","","",16,[[],[["u32",15],["result",6]]]],[11,"can_pause","","Returns true if the alsa stream can be paused, false if …",16,[[],["bool",15]]],[11,"can_resume","","Returns true if the alsa stream can be resumed, false if …",16,[[],["bool",15]]],[11,"supports_audio_ts_type","","Returns true if the alsa stream supports the provided …",16,[[["audiotstamptype",4]],["bool",15]]],[11,"dump","","",16,[[["output",3]],["result",6]]],[11,"copy_from","","",16,[[["hwparams",3]]]],[3,"SwParams","","snd_pcm_sw_params_t wrapper",null,null],[11,"set_avail_min","","",17,[[["frames",6]],["result",6]]],[11,"get_avail_min","","",17,[[],[["frames",6],["result",6]]]],[11,"get_boundary","","",17,[[],[["frames",6],["result",6]]]],[11,"set_start_threshold","","",17,[[["frames",6]],["result",6]]],[11,"get_start_threshold","","",17,[[],[["frames",6],["result",6]]]],[11,"set_stop_threshold","","",17,[[["frames",6]],["result",6]]],[11,"get_stop_threshold","","",17,[[],[["frames",6],["result",6]]]],[11,"set_tstamp_mode","","",17,[[["bool",15]],["result",6]]],[11,"get_tstamp_mode","","",17,[[],[["bool",15],["result",6]]]],[11,"set_tstamp_type","","",17,[[["tstamptype",4]],["result",6]]],[11,"get_tstamp_type","","",17,[[],[["result",6],["tstamptype",4]]]],[11,"dump","","",17,[[["output",3]],["result",6]]],[3,"Status","","snd_pcm_status_t wrapper",null,null],[11,"get_htstamp","","",18,[[],["timespec",3]]],[11,"get_trigger_htstamp","","",18,[[],["timespec",3]]],[11,"get_audio_htstamp","","",18,[[],["timespec",3]]],[11,"get_state","","",18,[[],["state",4]]],[11,"get_avail","","",18,[[],["frames",6]]],[11,"get_delay","","",18,[[],["frames",6]]],[11,"get_avail_max","","",18,[[],["frames",6]]],[11,"get_overrange","","",18,[[],["frames",6]]],[11,"dump","","",18,[[["output",3]],["result",6]]],[3,"StatusBuilder","","Builder for [<code>Status</code>].",null,null],[11,"new","","",19,[[]]],[11,"audio_htstamp_config","","",19,[[["bool",15],["audiotstamptype",4]]]],[11,"build","","",19,[[["pcm",3]],[["result",6],["status",3]]]],[4,"AudioTstampType","","SND_PCM_AUDIO_TSTAMP_TYPE_xxx constants",null,null],[13,"Compat","","",20,null],[13,"Default","","",20,null],[13,"Link","","",20,null],[13,"LinkAbsolute","","",20,null],[13,"LinkEstimated","","",20,null],[13,"LinkSynchronized","","",20,null],[11,"all","","Returns a slice of all possible values; useful for …",20,[[]]],[0,"rawmidi","alsa","MIDI devices I/O and enumeration",null,null],[3,"Iter","alsa::rawmidi","Iterator over Rawmidi devices and subdevices",null,null],[3,"Info","","snd_rawmidi_info_t wrapper",null,null],[11,"get_device","","",21,[[],["i32",15]]],[11,"get_subdevice","","",21,[[],["i32",15]]],[11,"get_stream","","",21,[[],["direction",4]]],[11,"get_subdevice_name","","",21,[[],[["string",3],["result",6]]]],[11,"get_id","","",21,[[],[["string",3],["result",6]]]],[11,"new","","",22,[[["ctl",3]],["iter",3]]],[3,"Rawmidi","","snd_rawmidi_t wrapper",null,null],[11,"new","","Wrapper around open that takes a &str instead of a &CStr",23,[[["bool",15],["direction",4],["str",15]],["result",6]]],[11,"open","","",23,[[["bool",15],["cstr",3],["direction",4]],[["result",6],["rawmidi",3]]]],[11,"info","","",23,[[],[["result",6],["info",3]]]],[11,"drop","","",23,[[],["result",6]]],[11,"drain","","",23,[[],["result",6]]],[11,"name","","",23,[[],[["string",3],["result",6]]]],[11,"io","","",23,[[],["io",3]]],[3,"IO","","Implements <code>std::io::Read</code> and <code>std::io::Write</code> for <code>Rawmidi</code>",null,null],[0,"device_name","alsa","Enumerate devices in the alsa library configuration",null,null],[3,"HintIter","alsa::device_name","snd_device_name_hint wrapper",null,null],[11,"new","","typical interfaces are: \\\"pcm\\\", \\\"ctl\\\", \\\"rawmidi\\\", \\\"timer\\\", …",24,[[["option",4],["cstr",3],["card",3]],[["hintiter",3],["result",6]]]],[11,"new_str","","A constructor variant that takes the interface as a Rust …",24,[[["option",4],["str",15],["card",3]],[["hintiter",3],["result",6]]]],[3,"Hint","","snd_device_name_get_hint wrapper",null,null],[12,"name","","",25,null],[12,"desc","","",25,null],[12,"direction","","",25,null],[0,"poll","alsa","Tiny poll ffi",null,null],[3,"pollfd","alsa::poll","",null,null],[12,"fd","","",26,null],[12,"events","","",26,null],[12,"revents","","",26,null],[3,"Flags","","",null,null],[18,"IN","","",27,null],[18,"PRI","","",27,null],[18,"OUT","","",27,null],[18,"ERR","","",27,null],[18,"HUP","","",27,null],[18,"NVAL","","",27,null],[11,"empty","","Returns an empty set of flags",27,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",27,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",27,[[["c_short",6]],[["option",4],["flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",27,[[["c_short",6]],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",27,[[["c_short",6]],["flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",27,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",27,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",27,[[["flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",27,[[["flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",27,[[["bool",15],["flags",3]]]],[8,"Descriptors","","",null,null],[10,"count","","",28,[[],["usize",15]]],[10,"fill","","",28,[[],[["usize",15],["result",6]]]],[10,"revents","","",28,[[],[["result",6],["flags",3]]]],[11,"get","","Wrapper around count and fill - returns an array of …",28,[[],[["result",6],["vec",3]]]],[5,"poll","","Wrapper around the libc poll call.",null,[[["i32",15]],[["usize",15],["result",6]]]],[5,"poll_all","","Builds a pollfd array, polls it, and returns the poll …",null,[[["i32",15]],[["vec",3],["result",6]]]],[0,"mixer","alsa","Mixer API - Simple Mixer API for mixer control",null,null],[3,"Mixer","alsa::mixer","wraps snd_mixer_t",null,null],[11,"new","","Opens a mixer and attaches it to a card identified by its …",29,[[["bool",15],["str",15]],[["result",6],["mixer",3]]]],[11,"find_selem","","Creates a Selem by looking for a specific selem by name …",29,[[["selemid",3]],[["option",4],["selem",3]]]],[11,"open","","",29,[[["bool",15]],[["result",6],["mixer",3]]]],[11,"attach","","",29,[[["cstr",3]],["result",6]]],[11,"load","","",29,[[],["result",6]]],[11,"iter","","",29,[[],["iter",3]]],[11,"handle_events","","",29,[[],[["u32",15],["result",6]]]],[11,"wait","","",29,[[["u32",15],["option",4]],[["bool",15],["result",6]]]],[3,"MilliBel","","Wrapper for a mB (millibel) value.",null,null],[12,"0","","",30,null],[11,"to_db","","",30,[[],["f32",15]]],[11,"from_db","","",30,[[["f32",15]]]],[3,"Elem","","Wraps snd_mixer_elem_t",null,null],[3,"Iter","","Iterator for all elements of mixer",null,null],[3,"SelemId","","Wrapper for snd_mixer_selem_id_t No allocation (uses …",null,null],[11,"new","","",31,[[["u32",15],["str",15]],["selemid",3]]],[11,"empty","","Returns an empty (zeroed) SelemId. This id is not a …",31,[[],["selemid",3]]],[11,"get_name","","",31,[[],[["result",6],["str",15]]]],[11,"get_index","","",31,[[],["u32",15]]],[11,"set_name","","",31,[[["cstr",3]]]],[11,"set_index","","",31,[[["u32",15]]]],[3,"Selem","","Wraps an Elem as a Selem",null,null],[11,"new","","Creates a Selem by wrapping <code>elem</code>.",32,[[["elem",3]],[["selem",3],["option",4]]]],[11,"register","","TODO: This function might change to support regopt and to …",32,[[["mixer",3]],["result",6]]],[11,"get_id","","",32,[[],["selemid",3]]],[11,"has_capture_volume","","",32,[[],["bool",15]]],[11,"has_capture_switch","","",32,[[],["bool",15]]],[11,"has_playback_volume","","",32,[[],["bool",15]]],[11,"has_playback_switch","","",32,[[],["bool",15]]],[11,"can_capture","","",32,[[],["bool",15]]],[11,"can_playback","","",32,[[],["bool",15]]],[11,"has_volume","","",32,[[],["bool",15]]],[11,"get_capture_volume_range","","returns range for capture volume as (min, max) values",32,[[]]],[11,"get_capture_db_range","","returns (min, max) values.",32,[[]]],[11,"get_playback_volume_range","","returns (min, max) values.",32,[[]]],[11,"get_playback_db_range","","returns (min, max) values.",32,[[]]],[11,"is_playback_mono","","",32,[[],["bool",15]]],[11,"has_capture_channel","","",32,[[["selemchannelid",4]],["bool",15]]],[11,"has_playback_channel","","",32,[[["selemchannelid",4]],["bool",15]]],[11,"channel_name","","Gets name from snd_mixer_selem_channel_name",32,[[["selemchannelid",4]],[["str",15],["result",6]]]],[11,"get_playback_volume","","",32,[[["selemchannelid",4]],[["i64",15],["result",6]]]],[11,"get_playback_vol_db","","returns volume in millibels.",32,[[["selemchannelid",4]],[["millibel",3],["result",6]]]],[11,"ask_playback_vol_db","","Asks alsa to convert playback volume to millibels.",32,[[["i64",15]],[["millibel",3],["result",6]]]],[11,"get_capture_volume","","",32,[[["selemchannelid",4]],[["i64",15],["result",6]]]],[11,"get_capture_vol_db","","returns volume in millibels.",32,[[["selemchannelid",4]],[["millibel",3],["result",6]]]],[11,"ask_capture_vol_db","","Asks alsa to convert capture volume to millibels",32,[[["i64",15]],[["millibel",3],["result",6]]]],[11,"set_playback_volume","","",32,[[["i64",15],["selemchannelid",4]],["result",6]]],[11,"set_playback_volume_all","","",32,[[["i64",15]],["result",6]]],[11,"set_playback_db","","",32,[[["round",4],["selemchannelid",4],["millibel",3]],["result",6]]],[11,"set_capture_db","","",32,[[["round",4],["selemchannelid",4],["millibel",3]],["result",6]]],[11,"set_playback_db_all","","",32,[[["round",4],["millibel",3]],["result",6]]],[11,"set_capture_db_all","","",32,[[["round",4],["millibel",3]],["result",6]]],[11,"set_capture_volume","","",32,[[["i64",15],["selemchannelid",4]],["result",6]]],[11,"set_playback_switch","","",32,[[["selemchannelid",4],["i32",15]],["result",6]]],[11,"set_playback_switch_all","","",32,[[["i32",15]],["result",6]]],[11,"set_capture_switch","","",32,[[["selemchannelid",4],["i32",15]],["result",6]]],[11,"set_capture_switch_all","","",32,[[["i32",15]],["result",6]]],[11,"get_playback_switch","","",32,[[["selemchannelid",4]],[["result",6],["i32",15]]]],[11,"get_capture_switch","","",32,[[["selemchannelid",4]],[["result",6],["i32",15]]]],[11,"is_enumerated","","",32,[[],["bool",15]]],[11,"is_enum_playback","","",32,[[],["bool",15]]],[11,"is_enum_capture","","",32,[[],["bool",15]]],[11,"get_enum_items","","",32,[[],[["u32",15],["result",6]]]],[11,"get_enum_item_name","","",32,[[["u32",15]],[["string",3],["result",6]]]],[11,"iter_enum","","Enumerates over valid Enum values",32,[[],[["result",6],["iterenum",3]]]],[11,"get_enum_item","","",32,[[["selemchannelid",4]],[["u32",15],["result",6]]]],[11,"set_enum_item","","",32,[[["u32",15],["selemchannelid",4]],["result",6]]],[3,"IterEnum","","",null,null],[4,"SelemChannelId","","Wrapper for SND_MIXER_SCHN_* constants",null,null],[13,"Unknown","","",33,null],[13,"FrontLeft","","",33,null],[13,"FrontRight","","",33,null],[13,"RearLeft","","",33,null],[13,"RearRight","","",33,null],[13,"FrontCenter","","",33,null],[13,"Woofer","","",33,null],[13,"SideLeft","","",33,null],[13,"SideRight","","",33,null],[13,"RearCenter","","",33,null],[13,"Last","","",33,null],[11,"all","","Returns a slice of all possible values; useful for …",33,[[]]],[11,"mono","","",33,[[],["selemchannelid",4]]],[0,"seq","alsa","MIDI sequencer I/O and enumeration",null,null],[3,"Seq","alsa::seq","snd_seq_t wrapper",null,null],[11,"open","","Opens the sequencer.",34,[[["option",4],["direction",4],["option",4],["bool",15],["cstr",3]],[["result",6],["seq",3]]]],[11,"set_client_name","","",34,[[["cstr",3]],["result",6]]],[11,"set_client_event_filter","","",34,[[["i32",15]],["result",6]]],[11,"set_client_pool_output","","",34,[[["u32",15]],["result",6]]],[11,"set_client_pool_input","","",34,[[["u32",15]],["result",6]]],[11,"set_client_pool_output_room","","",34,[[["u32",15]],["result",6]]],[11,"client_id","","",34,[[],[["result",6],["i32",15]]]],[11,"drain_output","","",34,[[],[["result",6],["i32",15]]]],[11,"get_any_client_info","","",34,[[["i32",15]],[["result",6],["clientinfo",3]]]],[11,"get_any_port_info","","",34,[[["addr",3]],[["result",6],["portinfo",3]]]],[11,"create_port","","",34,[[["portinfo",3]],["result",6]]],[11,"create_simple_port","","",34,[[["porttype",3],["cstr",3],["portcap",3]],[["result",6],["i32",15]]]],[11,"set_port_info","","",34,[[["portinfo",3],["i32",15]],["result",6]]],[11,"delete_port","","",34,[[["i32",15]],["result",6]]],[11,"subscribe_port","","",34,[[["portsubscribe",3]],["result",6]]],[11,"unsubscribe_port","","",34,[[["addr",3]],["result",6]]],[11,"control_queue","","",34,[[["option",4],["eventtype",4],["i32",15],["event",3]],["result",6]]],[11,"event_output","","",34,[[["event",3]],[["u32",15],["result",6]]]],[11,"event_output_buffer","","",34,[[["event",3]],[["u32",15],["result",6]]]],[11,"event_output_direct","","",34,[[["event",3]],[["u32",15],["result",6]]]],[11,"get_queue_tempo","","",34,[[["i32",15]],[["queuetempo",3],["result",6]]]],[11,"set_queue_tempo","","",34,[[["queuetempo",3],["i32",15]],["result",6]]],[11,"get_queue_status","","",34,[[["i32",15]],[["result",6],["queuestatus",3]]]],[11,"free_queue","","",34,[[["i32",15]],["result",6]]],[11,"alloc_queue","","",34,[[],[["result",6],["i32",15]]]],[11,"alloc_named_queue","","",34,[[["cstr",3]],[["result",6],["i32",15]]]],[11,"sync_output_queue","","",34,[[],["result",6]]],[11,"drop_output","","",34,[[],["result",6]]],[11,"input","","Call this function to obtain an instance of <code>Input</code> to …",34,[[],["input",3]]],[11,"remove_events","","",34,[[["removeevents",3]],["result",6]]],[3,"Input","","Struct for receiving input events from a sequencer. The …",null,null],[11,"event_input","","",35,[[],[["result",6],["event",3]]]],[11,"event_input_pending","","",35,[[["bool",15]],[["u32",15],["result",6]]]],[11,"set_input_buffer_size","","",35,[[["u32",15]],["result",6]]],[11,"drop_input","","",35,[[],["result",6]]],[3,"ClientInfo","","snd_seq_client_info_t wrapper",null,null],[11,"get_client","","",36,[[],["i32",15]]],[11,"get_name","","",36,[[],[["result",6],["str",15]]]],[3,"ClientIter","","Iterates over clients connected to the seq API (both …",null,null],[11,"new","","",37,[[["seq",3]]]],[3,"PortInfo","","snd_seq_port_info_t wrapper",null,null],[11,"empty","","Creates a new PortInfo with all fields set to zero.",38,[[],["result",6]]],[11,"get_client","","",38,[[],["i32",15]]],[11,"get_port","","",38,[[],["i32",15]]],[11,"get_name","","",38,[[],[["result",6],["str",15]]]],[11,"set_name","","",38,[[["cstr",3]]]],[11,"get_capability","","",38,[[],["portcap",3]]],[11,"get_type","","",38,[[],["porttype",3]]],[11,"set_capability","","",38,[[["portcap",3]]]],[11,"set_type","","",38,[[["porttype",3]]]],[11,"addr","","Returns an Addr containing this PortInfo\'s client and …",38,[[],["addr",3]]],[11,"get_midi_channels","","",38,[[],["i32",15]]],[11,"get_midi_voices","","",38,[[],["i32",15]]],[11,"get_synth_voices","","",38,[[],["i32",15]]],[11,"get_read_use","","",38,[[],["i32",15]]],[11,"get_write_use","","",38,[[],["i32",15]]],[11,"get_port_specified","","",38,[[],["bool",15]]],[11,"get_timestamping","","",38,[[],["bool",15]]],[11,"get_timestamp_real","","",38,[[],["bool",15]]],[11,"get_timestamp_queue","","",38,[[],["i32",15]]],[11,"set_midi_channels","","",38,[[["i32",15]]]],[11,"set_midi_voices","","",38,[[["i32",15]]]],[11,"set_synth_voices","","",38,[[["i32",15]]]],[11,"set_port_specified","","",38,[[["bool",15]]]],[11,"set_timestamping","","",38,[[["bool",15]]]],[11,"set_timestamp_real","","",38,[[["bool",15]]]],[11,"set_timestamp_queue","","",38,[[["i32",15]]]],[3,"PortIter","","Iterates over clients connected to the seq API (both …",null,null],[11,"new","","",39,[[["seq",3],["i32",15]]]],[3,"PortCap","","SND_SEQ_PORT_CAP_xxx constants",null,null],[18,"READ","","",40,null],[18,"WRITE","","",40,null],[18,"SYNC_READ","","",40,null],[18,"SYNC_WRITE","","",40,null],[18,"DUPLEX","","",40,null],[18,"SUBS_READ","","",40,null],[18,"SUBS_WRITE","","",40,null],[18,"NO_EXPORT","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["portcap",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["portcap",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",40,[[["u32",15]],[["option",4],["portcap",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",40,[[["u32",15]],["portcap",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["u32",15]],["portcap",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",40,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",40,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",40,[[["portcap",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",40,[[["portcap",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["portcap",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["portcap",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["portcap",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",40,[[["bool",15],["portcap",3]]]],[3,"PortType","","SND_SEQ_PORT_TYPE_xxx constants",null,null],[18,"SPECIFIC","","",41,null],[18,"MIDI_GENERIC","","",41,null],[18,"MIDI_GM","","",41,null],[18,"MIDI_GS","","",41,null],[18,"MIDI_XG","","",41,null],[18,"MIDI_MT32","","",41,null],[18,"MIDI_GM2","","",41,null],[18,"SYNTH","","",41,null],[18,"DIRECT_SAMPLE","","",41,null],[18,"SAMPLE","","",41,null],[18,"HARDWARE","","",41,null],[18,"SOFTWARE","","",41,null],[18,"SYNTHESIZER","","",41,null],[18,"PORT","","",41,null],[18,"APPLICATION","","",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["porttype",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["porttype",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",41,[[["u32",15]],[["option",4],["porttype",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",41,[[["u32",15]],["porttype",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["u32",15]],["porttype",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",41,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",41,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",41,[[["porttype",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",41,[[["porttype",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["porttype",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["porttype",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["porttype",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",41,[[["bool",15],["porttype",3]]]],[3,"Remove","","SND_SEQ_REMOVE_xxx constants",null,null],[18,"INPUT","","",42,null],[18,"OUTPUT","","",42,null],[18,"DEST","","",42,null],[18,"DEST_CHANNEL","","",42,null],[18,"TIME_BEFORE","","",42,null],[18,"TIME_AFTER","","",42,null],[18,"TIME_TICK","","",42,null],[18,"EVENT_TYPE","","",42,null],[18,"IGNORE_OFF","","",42,null],[18,"TAG_MATCH","","",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["remove",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["remove",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",42,[[["u32",15]],[["option",4],["remove",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",42,[[["u32",15]],["remove",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["u32",15]],["remove",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",42,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",42,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",42,[[["remove",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",42,[[["remove",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["remove",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["remove",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["remove",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",42,[[["bool",15],["remove",3]]]],[3,"Addr","","snd_seq_addr_t wrapper",null,null],[12,"client","","",43,null],[12,"port","","",43,null],[11,"system_timer","","",43,[[],["addr",3]]],[11,"system_announce","","",43,[[],["addr",3]]],[11,"broadcast","","",43,[[],["addr",3]]],[3,"PortSubscribe","","snd_seq_port_subscribe_t wrapper",null,null],[11,"empty","","Creates a new PortSubscribe with all fields set to zero.",44,[[],["result",6]]],[11,"get_sender","","",44,[[],["addr",3]]],[11,"get_dest","","",44,[[],["addr",3]]],[11,"get_queue","","",44,[[],["i32",15]]],[11,"get_exclusive","","",44,[[],["bool",15]]],[11,"get_time_update","","",44,[[],["bool",15]]],[11,"get_time_real","","",44,[[],["bool",15]]],[11,"set_sender","","",44,[[["addr",3]]]],[11,"set_dest","","",44,[[["addr",3]]]],[11,"set_queue","","",44,[[["i32",15]]]],[11,"set_exclusive","","",44,[[["bool",15]]]],[11,"set_time_update","","",44,[[["bool",15]]]],[11,"set_time_real","","",44,[[["bool",15]]]],[4,"QuerySubsType","","snd_seq_query_subs_type_t wrapper",null,null],[13,"READ","","",45,null],[13,"WRITE","","",45,null],[3,"PortSubscribeIter","","Iterates over port subscriptions for a givent …",null,null],[11,"new","","",46,[[["seq",3],["addr",3],["querysubstype",4]]]],[3,"Event","","snd_seq_event_t wrapper",null,null],[11,"new","","Creates a new event. For events that carry …",47,[[["eventtype",4]],["event",3]]],[11,"new_ext","","Creates a new event carrying variable-length data. This …",47,[[["cow",4],["eventtype",4],["into",8]],["event",3]]],[11,"into_owned","","Consumes this event and returns an (otherwise unchanged) …",47,[[],["event",3]]],[11,"get_type","","",47,[[],["eventtype",4]]],[11,"get_data","","Extract the event data from an event. Use <code>get_ext</code> instead …",47,[[],[["option",4],["eventdata",8]]]],[11,"get_ext","","Extract the variable-length data carried by events of …",47,[[],["option",4]]],[11,"set_subs","","",47,[[]]],[11,"set_source","","",47,[[["i32",15]]]],[11,"set_dest","","",47,[[["addr",3]]]],[11,"set_tag","","",47,[[["u8",15]]]],[11,"set_queue","","",47,[[["i32",15]]]],[11,"get_source","","",47,[[],["addr",3]]],[11,"get_dest","","",47,[[],["addr",3]]],[11,"get_tag","","",47,[[],["u8",15]]],[11,"get_queue","","",47,[[],["i32",15]]],[11,"schedule_real","","",47,[[["bool",15],["duration",3],["i32",15]]]],[11,"schedule_tick","","",47,[[["bool",15],["u32",15],["i32",15]]]],[11,"set_direct","","",47,[[]]],[11,"get_relative","","",47,[[],["bool",15]]],[11,"get_time","","",47,[[],[["duration",3],["option",4]]]],[11,"get_tick","","",47,[[],[["u32",15],["option",4]]]],[11,"get_priority","","Returns true if the message is high priority.",47,[[],["bool",15]]],[11,"set_priority","","",47,[[["bool",15]]]],[8,"EventData","","Low level methods to set/get data on an Event. Don\'t use …",null,null],[10,"has_data","","",48,[[["eventtype",4]],["bool",15]]],[10,"set_data","","",48,[[["event",3]]]],[10,"get_data","","",48,[[["event",3]]]],[3,"EvNote","","",null,null],[12,"channel","","",49,null],[12,"note","","",49,null],[12,"velocity","","",49,null],[12,"off_velocity","","",49,null],[12,"duration","","",49,null],[3,"EvCtrl","","",null,null],[12,"channel","","",50,null],[12,"param","","",50,null],[12,"value","","",50,null],[3,"Connect","","snd_seq_connect_t wrapper",null,null],[12,"sender","","",51,null],[12,"dest","","",51,null],[3,"EvQueueControl","","snd_seq_ev_queue_control_t wrapper",null,null],[12,"queue","","",52,null],[12,"value","","",52,null],[3,"EvResult","","snd_seq_result_t wrapper",null,null],[12,"event","","",53,null],[12,"result","","",53,null],[4,"EventType","","SND_SEQ_EVENT_xxx constants",null,null],[13,"Bounce","","",54,null],[13,"Chanpress","","",54,null],[13,"ClientChange","","",54,null],[13,"ClientExit","","",54,null],[13,"ClientStart","","",54,null],[13,"Clock","","",54,null],[13,"Continue","","",54,null],[13,"Control14","","",54,null],[13,"Controller","","",54,null],[13,"Echo","","",54,null],[13,"Keypress","","",54,null],[13,"Keysign","","",54,null],[13,"None","","",54,null],[13,"Nonregparam","","",54,null],[13,"Note","","",54,null],[13,"Noteoff","","",54,null],[13,"Noteon","","",54,null],[13,"Oss","","",54,null],[13,"Pgmchange","","",54,null],[13,"Pitchbend","","",54,null],[13,"PortChange","","",54,null],[13,"PortExit","","",54,null],[13,"PortStart","","",54,null],[13,"PortSubscribed","","",54,null],[13,"PortUnsubscribed","","",54,null],[13,"Qframe","","",54,null],[13,"QueueSkew","","",54,null],[13,"Regparam","","",54,null],[13,"Reset","","",54,null],[13,"Result","","",54,null],[13,"Sensing","","",54,null],[13,"SetposTick","","",54,null],[13,"SetposTime","","",54,null],[13,"Songpos","","",54,null],[13,"Songsel","","",54,null],[13,"Start","","",54,null],[13,"Stop","","",54,null],[13,"SyncPos","","",54,null],[13,"Sysex","","",54,null],[13,"System","","",54,null],[13,"Tempo","","",54,null],[13,"Tick","","",54,null],[13,"Timesign","","",54,null],[13,"TuneRequest","","",54,null],[13,"Usr0","","",54,null],[13,"Usr1","","",54,null],[13,"Usr2","","",54,null],[13,"Usr3","","",54,null],[13,"Usr4","","",54,null],[13,"Usr5","","",54,null],[13,"Usr6","","",54,null],[13,"Usr7","","",54,null],[13,"Usr8","","",54,null],[13,"Usr9","","",54,null],[13,"UsrVar0","","",54,null],[13,"UsrVar1","","",54,null],[13,"UsrVar2","","",54,null],[13,"UsrVar3","","",54,null],[13,"UsrVar4","","",54,null],[11,"all","","Returns a slice of all possible values; useful for …",54,[[]]],[3,"QueueTempo","","snd_seq_queue_tempo_t wrapper",null,null],[11,"empty","","Creates a new QueueTempo with all fields set to zero.",55,[[],["result",6]]],[11,"get_queue","","",55,[[],["i32",15]]],[11,"get_tempo","","",55,[[],["u32",15]]],[11,"get_ppq","","",55,[[],["i32",15]]],[11,"get_skew","","",55,[[],["u32",15]]],[11,"get_skew_base","","",55,[[],["u32",15]]],[11,"set_tempo","","",55,[[["u32",15]]]],[11,"set_ppq","","",55,[[["i32",15]]]],[11,"set_skew","","",55,[[["u32",15]]]],[11,"set_skew_base","","",55,[[["u32",15]]]],[3,"QueueStatus","","snd_seq_queue_status_t wrapper",null,null],[11,"empty","","Creates a new QueueStatus with all fields set to zero.",56,[[],["result",6]]],[11,"get_queue","","",56,[[],["i32",15]]],[11,"get_events","","",56,[[],["i32",15]]],[11,"get_tick_time","","",56,[[],["u32",15]]],[11,"get_real_time","","",56,[[],["duration",3]]],[11,"get_status","","",56,[[],["u32",15]]],[3,"RemoveEvents","","snd_seq_remove_events_t wrapper",null,null],[11,"new","","",57,[[],["result",6]]],[11,"get_condition","","",57,[[],["remove",3]]],[11,"get_queue","","",57,[[],["i32",15]]],[11,"get_time","","",57,[[],["duration",3]]],[11,"get_dest","","",57,[[],["addr",3]]],[11,"get_channel","","",57,[[],["i32",15]]],[11,"get_event_type","","",57,[[],[["result",6],["eventtype",4]]]],[11,"get_tag","","",57,[[],["u8",15]]],[11,"set_condition","","",57,[[["remove",3]]]],[11,"set_queue","","",57,[[["i32",15]]]],[11,"set_time","","",57,[[["duration",3]]]],[11,"set_dest","","",57,[[["addr",3]]]],[11,"set_channel","","",57,[[["i32",15]]]],[11,"set_event_type","","",57,[[["eventtype",4]]]],[11,"set_tag","","",57,[[["u8",15]]]],[3,"MidiEvent","","snd_midi_event_t Wrapper",null,null],[11,"new","","",58,[[["u32",15]],[["result",6],["midievent",3]]]],[11,"resize_buffer","","",58,[[["u32",15]],["result",6]]],[11,"enable_running_status","","Note: this corresponds to snd_midi_event_no_status, but …",58,[[["bool",15]]]],[11,"init","","Resets both encoder and decoder",58,[[]]],[11,"reset_encode","","",58,[[]]],[11,"reset_decode","","",58,[[]]],[11,"decode","","",58,[[["event",3]],[["usize",15],["result",6]]]],[11,"encode","","In case of success, returns a tuple of (bytes consumed …",58,[[],["result",6]]],[11,"all","alsa::pcm","Returns a slice of all possible values; useful for …",7,[[]]],[11,"all","","Returns a slice of all possible values; useful for …",6,[[]]],[0,"direct","alsa","Functions that bypass alsa-lib and talk directly to the …",null,null],[0,"pcm","alsa::direct","This module bypasses alsa-lib and directly read and write …",null,null],[3,"SyncPtrStatus","alsa::direct::pcm","Read PCM status via a simple kernel syscall, bypassing …",null,null],[11,"sync_ptr","","Executes sync_ptr syscall.",59,[[["frames",6],["option",4],["bool",15],["rawfd",6]],["result",6]]],[11,"hw_ptr","","",59,[[],["frames",6]]],[11,"state","","",59,[[],["state",4]]],[11,"htstamp","","",59,[[],["timespec",3]]],[3,"Status","","Read PCM status directly from memory, bypassing alsa-lib.",null,null],[11,"new","","",60,[[["pcm",3]],["result",6]]],[11,"from_fd","","",60,[[["rawfd",6]],["result",6]]],[11,"state","","Current PCM state.",60,[[],["state",4]]],[11,"hw_ptr","","Number of frames hardware has read or written",60,[[],["frames",6]]],[11,"htstamp","","Timestamp - fast version of alsa-lib\'s Status::get_htstamp",60,[[],["timespec",3]]],[11,"audio_htstamp","","Audio timestamp - fast version of alsa-lib\'s …",60,[[],["timespec",3]]],[3,"Control","","Write PCM appl ptr directly, bypassing alsa-lib.",null,null],[11,"new","","",61,[[["pcm",3]],["result",6]]],[11,"from_fd","","",61,[[["rawfd",6]],["result",6]]],[11,"appl_ptr","","Read number of frames application has read or written",61,[[],["frames",6]]],[11,"set_appl_ptr","","Set number of frames application has read or written",61,[[["frames",6]]]],[11,"avail_min","","Read minimum number of frames in buffer in order to …",61,[[],["frames",6]]],[11,"set_avail_min","","Write minimum number of frames in buffer in order to …",61,[[["frames",6]]]],[8,"MmapDir","","Dummy trait for better generics",null,null],[18,"DIR","","",62,null],[10,"avail","","",62,[[["frames",6]],["frames",6]]],[3,"Playback","","Dummy struct for better generics",null,null],[3,"Capture","","Dummy struct for better generics",null,null],[6,"MmapPlayback","","",null,null],[6,"MmapCapture","","",null,null],[3,"MmapIO","","Struct containing direct I/O functions shared between …",null,null],[3,"RawSamples","","A raw pointer to samples, and the amount of samples …",null,null],[12,"ptr","","",63,null],[12,"frames","","",63,null],[12,"channels","","",63,null],[11,"samples","","Returns <code>frames</code> * <code>channels</code>, i e the amount of samples (of …",63,[[],["isize",15]]],[11,"write_samples","","Writes samples from an iterator.",63,[[]]],[11,"status","","Read current status",64,[[],["status",3]]],[11,"appl_ptr","","Read current number of frames committed by application",64,[[],["frames",6]]],[11,"hw_ptr","","Read current number of frames read / written by hardware",64,[[],["frames",6]]],[11,"boundary","","The number at which hw_ptr and appl_ptr wraps.",64,[[],["frames",6]]],[11,"buffer_size","","Total number of frames in hardware buffer",64,[[],["frames",6]]],[11,"channels","","Number of channels in stream",64,[[],["u32",15]]],[11,"commit","","Notifies the kernel that frames have now been read / …",64,[[["frames",6]]]],[11,"avail","","Number of frames available to read / write.",64,[[],["frames",6]]],[11,"data_ptr","","Returns raw pointers to data to read / write.",64,[[]]],[11,"write","","Write samples to the kernel ringbuffer.",64,[[],["frames",6]]],[11,"write","","Write samples to the kernel ringbuffer.",65,[[],["frames",6]]],[11,"iter","","Read samples from the kernel ringbuffer.",64,[[],["captureiter",3]]],[11,"iter","","Read samples from the kernel ringbuffer.",66,[[],["captureiter",3]]],[3,"CaptureIter","","Iterator over captured samples",null,null],[0,"nix","alsa","Re-exports from the nix crate.",null,null],[4,"Error","alsa::nix","Nix Error Type",null,null],[13,"Sys","","",67,null],[13,"InvalidPath","","",67,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust\'s native …",67,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance …",67,null],[0,"errno","","",null,null],[5,"errno","alsa::nix::errno","Returns the platform-specific value of errno",null,[[],["i32",15]]],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and …",null,null],[10,"sentinel","","",68,[[]]],[4,"Errno","","",null,null],[13,"UnknownErrno","","",69,null],[13,"EPERM","","",69,null],[13,"ENOENT","","",69,null],[13,"ESRCH","","",69,null],[13,"EINTR","","",69,null],[13,"EIO","","",69,null],[13,"ENXIO","","",69,null],[13,"E2BIG","","",69,null],[13,"ENOEXEC","","",69,null],[13,"EBADF","","",69,null],[13,"ECHILD","","",69,null],[13,"EAGAIN","","",69,null],[13,"ENOMEM","","",69,null],[13,"EACCES","","",69,null],[13,"EFAULT","","",69,null],[13,"ENOTBLK","","",69,null],[13,"EBUSY","","",69,null],[13,"EEXIST","","",69,null],[13,"EXDEV","","",69,null],[13,"ENODEV","","",69,null],[13,"ENOTDIR","","",69,null],[13,"EISDIR","","",69,null],[13,"EINVAL","","",69,null],[13,"ENFILE","","",69,null],[13,"EMFILE","","",69,null],[13,"ENOTTY","","",69,null],[13,"ETXTBSY","","",69,null],[13,"EFBIG","","",69,null],[13,"ENOSPC","","",69,null],[13,"ESPIPE","","",69,null],[13,"EROFS","","",69,null],[13,"EMLINK","","",69,null],[13,"EPIPE","","",69,null],[13,"EDOM","","",69,null],[13,"ERANGE","","",69,null],[13,"EDEADLK","","",69,null],[13,"ENAMETOOLONG","","",69,null],[13,"ENOLCK","","",69,null],[13,"ENOSYS","","",69,null],[13,"ENOTEMPTY","","",69,null],[13,"ELOOP","","",69,null],[13,"ENOMSG","","",69,null],[13,"EIDRM","","",69,null],[13,"ECHRNG","","",69,null],[13,"EL2NSYNC","","",69,null],[13,"EL3HLT","","",69,null],[13,"EL3RST","","",69,null],[13,"ELNRNG","","",69,null],[13,"EUNATCH","","",69,null],[13,"ENOCSI","","",69,null],[13,"EL2HLT","","",69,null],[13,"EBADE","","",69,null],[13,"EBADR","","",69,null],[13,"EXFULL","","",69,null],[13,"ENOANO","","",69,null],[13,"EBADRQC","","",69,null],[13,"EBADSLT","","",69,null],[13,"EBFONT","","",69,null],[13,"ENOSTR","","",69,null],[13,"ENODATA","","",69,null],[13,"ETIME","","",69,null],[13,"ENOSR","","",69,null],[13,"ENONET","","",69,null],[13,"ENOPKG","","",69,null],[13,"EREMOTE","","",69,null],[13,"ENOLINK","","",69,null],[13,"EADV","","",69,null],[13,"ESRMNT","","",69,null],[13,"ECOMM","","",69,null],[13,"EPROTO","","",69,null],[13,"EMULTIHOP","","",69,null],[13,"EDOTDOT","","",69,null],[13,"EBADMSG","","",69,null],[13,"EOVERFLOW","","",69,null],[13,"ENOTUNIQ","","",69,null],[13,"EBADFD","","",69,null],[13,"EREMCHG","","",69,null],[13,"ELIBACC","","",69,null],[13,"ELIBBAD","","",69,null],[13,"ELIBSCN","","",69,null],[13,"ELIBMAX","","",69,null],[13,"ELIBEXEC","","",69,null],[13,"EILSEQ","","",69,null],[13,"ERESTART","","",69,null],[13,"ESTRPIPE","","",69,null],[13,"EUSERS","","",69,null],[13,"ENOTSOCK","","",69,null],[13,"EDESTADDRREQ","","",69,null],[13,"EMSGSIZE","","",69,null],[13,"EPROTOTYPE","","",69,null],[13,"ENOPROTOOPT","","",69,null],[13,"EPROTONOSUPPORT","","",69,null],[13,"ESOCKTNOSUPPORT","","",69,null],[13,"EOPNOTSUPP","","",69,null],[13,"EPFNOSUPPORT","","",69,null],[13,"EAFNOSUPPORT","","",69,null],[13,"EADDRINUSE","","",69,null],[13,"EADDRNOTAVAIL","","",69,null],[13,"ENETDOWN","","",69,null],[13,"ENETUNREACH","","",69,null],[13,"ENETRESET","","",69,null],[13,"ECONNABORTED","","",69,null],[13,"ECONNRESET","","",69,null],[13,"ENOBUFS","","",69,null],[13,"EISCONN","","",69,null],[13,"ENOTCONN","","",69,null],[13,"ESHUTDOWN","","",69,null],[13,"ETOOMANYREFS","","",69,null],[13,"ETIMEDOUT","","",69,null],[13,"ECONNREFUSED","","",69,null],[13,"EHOSTDOWN","","",69,null],[13,"EHOSTUNREACH","","",69,null],[13,"EALREADY","","",69,null],[13,"EINPROGRESS","","",69,null],[13,"ESTALE","","",69,null],[13,"EUCLEAN","","",69,null],[13,"ENOTNAM","","",69,null],[13,"ENAVAIL","","",69,null],[13,"EISNAM","","",69,null],[13,"EREMOTEIO","","",69,null],[13,"EDQUOT","","",69,null],[13,"ENOMEDIUM","","",69,null],[13,"EMEDIUMTYPE","","",69,null],[13,"ECANCELED","","",69,null],[13,"ENOKEY","","",69,null],[13,"EKEYEXPIRED","","",69,null],[13,"EKEYREVOKED","","",69,null],[13,"EKEYREJECTED","","",69,null],[13,"EOWNERDEAD","","",69,null],[13,"ENOTRECOVERABLE","","",69,null],[13,"ERFKILL","","",69,null],[13,"EHWPOISON","","",69,null],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENOTSUP","","",null,null],[5,"from_i32","","",null,[[["i32",15]],["errno",4]]],[4,"Direction","alsa","Replaces constants ending with PLAYBACK/CAPTURE as well as…",null,null],[13,"Playback","","",70,null],[13,"Capture","","",70,null],[11,"input","","",70,[[],["direction",4]]],[11,"output","","",70,[[],["direction",4]]],[4,"ValueOr","","Used to restrict hw parameters. In case the submitted …",null,null],[13,"Less","","The value set is the submitted value, or less",71,null],[13,"Nearest","","The value set is the submitted value, or the nearest",71,null],[13,"Greater","","The value set is the submitted value, or greater",71,null],[4,"Round","","Rounding mode (used in some mixer related calls)",null,null],[13,"Floor","","Round down (towards negative infinity)",72,null],[13,"Ceil","","Round up (towards positive infinity)",72,null],[3,"Error","","ALSA error",null,null],[6,"Result","","",null,null],[3,"Ctl","","snd_ctl_t wrapper",null,null],[3,"Output","","snd_output_t wrapper",null,null],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","alsa::card","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","alsa::ctl","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","alsa::hctl","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","alsa::pcm","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"into_iter","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","alsa::rawmidi","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","alsa::device_name","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","alsa::poll","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","alsa::mixer","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"into_iter","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"into_iter","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","alsa::seq","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","alsa","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","alsa::direct::pcm","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"into_iter","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","alsa::nix","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","alsa::nix::errno","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","alsa","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"fmt","alsa::poll","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",26,[[],["pollfd",3]]],[11,"hash","","",26,[[]]],[11,"eq","","",26,[[["pollfd",3]],["bool",15]]],[11,"ne","","",26,[[["pollfd",3]],["bool",15]]],[11,"fmt","alsa::nix","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","alsa::nix::errno","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","alsa::nix","",67,[[["fromutf8error",3]],["error",4]]],[11,"from","","",67,[[["errno",4]],["error",4]]],[11,"clone","","",67,[[],["error",4]]],[11,"clone","alsa::nix::errno","",69,[[],["errno",4]]],[11,"eq","alsa::nix","",67,[[["error",4]],["bool",15]]],[11,"ne","","",67,[[["error",4]],["bool",15]]],[11,"eq","alsa::nix::errno","",69,[[["errno",4]],["bool",15]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","alsa::nix","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"count","alsa::ctl","",74,[[],["usize",15]]],[11,"fill","","",74,[[],[["usize",15],["result",6]]]],[11,"revents","","",74,[[],[["result",6],["flags",3]]]],[11,"count","alsa::hctl","",4,[[],["usize",15]]],[11,"fill","","",4,[[],[["usize",15],["result",6]]]],[11,"revents","","",4,[[],[["result",6],["flags",3]]]],[11,"count","alsa::pcm","",9,[[],["usize",15]]],[11,"fill","","",9,[[],[["usize",15],["result",6]]]],[11,"revents","","",9,[[],[["result",6],["flags",3]]]],[11,"count","alsa::rawmidi","",23,[[],["usize",15]]],[11,"fill","","",23,[[],[["usize",15],["result",6]]]],[11,"revents","","",23,[[],[["result",6],["flags",3]]]],[11,"count","alsa::poll","",26,[[],["usize",15]]],[11,"fill","","",26,[[],[["usize",15],["result",6]]]],[11,"revents","","",26,[[],[["result",6],["flags",3]]]],[11,"count","alsa::mixer","",29,[[],["usize",15]]],[11,"fill","","",29,[[],[["usize",15],["result",6]]]],[11,"revents","","",29,[[],[["result",6],["flags",3]]]],[11,"has_data","alsa::seq","",49,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",49,[[["event",3]]]],[11,"set_data","","",49,[[["event",3]]]],[11,"has_data","","",50,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",50,[[["event",3]]]],[11,"set_data","","",50,[[["event",3]]]],[11,"has_data","","",43,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",43,[[["event",3]]]],[11,"set_data","","",43,[[["event",3]]]],[11,"has_data","","",51,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",51,[[["event",3]]]],[11,"set_data","","",51,[[["event",3]]]],[11,"has_data","","",52,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",52,[[["event",3]]]],[11,"set_data","","",52,[[["event",3]]]],[11,"has_data","","",52,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",52,[[["event",3]]]],[11,"set_data","","",52,[[["event",3]]]],[11,"has_data","","",52,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",52,[[["event",3]]]],[11,"set_data","","",52,[[["event",3]]]],[11,"has_data","","",52,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",52,[[["event",3]]]],[11,"set_data","","",52,[[["event",3]]]],[11,"has_data","","",53,[[["eventtype",4]],["bool",15]]],[11,"get_data","","",53,[[["event",3]]]],[11,"set_data","","",53,[[["event",3]]]],[11,"avail","alsa::direct::pcm","",87,[[["frames",6]],["frames",6]]],[11,"avail","","",88,[[["frames",6]],["frames",6]]],[11,"drop","alsa::ctl","",74,[[]]],[11,"drop","","",75,[[]]],[11,"drop","","",76,[[]]],[11,"drop","","",77,[[]]],[11,"drop","alsa::hctl","",4,[[]]],[11,"drop","alsa::pcm","",8,[[]]],[11,"drop","","",9,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",17,[[]]],[11,"drop","alsa::rawmidi","",21,[[]]],[11,"drop","","",23,[[]]],[11,"drop","alsa::device_name","",24,[[]]],[11,"drop","alsa::mixer","",29,[[]]],[11,"drop","alsa::seq","",34,[[]]],[11,"drop","","",35,[[]]],[11,"drop","","",36,[[]]],[11,"drop","","",38,[[]]],[11,"drop","","",44,[[]]],[11,"drop","","",55,[[]]],[11,"drop","","",56,[[]]],[11,"drop","","",57,[[]]],[11,"drop","","",58,[[]]],[11,"drop","alsa","",86,[[]]],[11,"drop","alsa::pcm","",80,[[]]],[11,"drop","","",81,[[]]],[11,"drop","alsa::direct::pcm","",89,[[]]],[11,"from","alsa::pcm","",80,[[],["chmap",3]]],[11,"extend","alsa::poll","",27,[[["intoiterator",8]]]],[11,"extend","alsa::seq","",40,[[["intoiterator",8]]]],[11,"extend","","",41,[[["intoiterator",8]]]],[11,"extend","","",42,[[["intoiterator",8]]]],[11,"next","alsa::card","",0,[[],[["result",6],["option",4]]]],[11,"next","alsa::hctl","",79,[[],[["elem",3],["option",4]]]],[11,"next","alsa::rawmidi","",22,[[],[["result",6],["option",4]]]],[11,"next","alsa::device_name","",24,[[],[["option",4],["hint",3]]]],[11,"next","alsa::mixer","",84,[[],[["option",4],["elem",3]]]],[11,"next","","",85,[[],["option",4]]],[11,"next","alsa::seq","",37,[[],["option",4]]],[11,"next","","",39,[[],["option",4]]],[11,"next","","",46,[[],["option",4]]],[11,"next","alsa::pcm","",81,[[],["option",4]]],[11,"next","alsa::direct::pcm","",89,[[],["option",4]]],[11,"clone","alsa","",70,[[],["direction",4]]],[11,"clone","","",71,[[],["valueor",4]]],[11,"clone","","",72,[[],["round",4]]],[11,"clone","","",73,[[],["error",3]]],[11,"clone","alsa::card","",1,[[],["card",3]]],[11,"clone","alsa::ctl","",2,[[],["elemiface",4]]],[11,"clone","","",3,[[],["elemtype",4]]],[11,"clone","","",78,[[]]],[11,"clone","alsa::pcm","",11,[[],["state",4]]],[11,"clone","","",12,[[],["format",4]]],[11,"clone","","",14,[[],["access",4]]],[11,"clone","","",15,[[],["tstamptype",4]]],[11,"clone","","",16,[[],["hwparams",3]]],[11,"clone","","",20,[[],["audiotstamptype",4]]],[11,"clone","alsa::device_name","",25,[[],["hint",3]]],[11,"clone","alsa::poll","",27,[[],["flags",3]]],[11,"clone","alsa::mixer","",30,[[],["millibel",3]]],[11,"clone","","",83,[[],["elem",3]]],[11,"clone","","",84,[[],["iter",3]]],[11,"clone","","",33,[[],["selemchannelid",4]]],[11,"clone","alsa::seq","",37,[[],["clientiter",3]]],[11,"clone","","",39,[[],["portiter",3]]],[11,"clone","","",40,[[],["portcap",3]]],[11,"clone","","",41,[[],["porttype",3]]],[11,"clone","","",42,[[],["remove",3]]],[11,"clone","","",43,[[],["addr",3]]],[11,"clone","","",45,[[],["querysubstype",4]]],[11,"clone","","",46,[[],["portsubscribeiter",3]]],[11,"clone","","",47,[[]]],[11,"clone","","",49,[[],["evnote",3]]],[11,"clone","","",50,[[],["evctrl",3]]],[11,"clone","","",51,[[],["connect",3]]],[11,"clone","","",52,[[],["evqueuecontrol",3]]],[11,"clone","","",53,[[],["evresult",3]]],[11,"clone","","",54,[[],["eventtype",4]]],[11,"clone","alsa::pcm","",7,[[],["chmaptype",4]]],[11,"clone","","",6,[[],["chmapposition",4]]],[11,"clone","alsa::direct::pcm","",87,[[],["playback",3]]],[11,"clone","","",88,[[],["capture",3]]],[11,"clone","","",63,[[],["rawsamples",3]]],[11,"default","alsa::seq","",43,[[],["addr",3]]],[11,"default","","",49,[[],["evnote",3]]],[11,"default","","",50,[[],["evctrl",3]]],[11,"default","","",51,[[],["connect",3]]],[11,"default","","",52,[[],["evqueuecontrol",3]]],[11,"default","","",53,[[],["evresult",3]]],[11,"cmp","alsa","",70,[[["direction",4]],["ordering",4]]],[11,"cmp","","",71,[[["valueor",4]],["ordering",4]]],[11,"cmp","","",72,[[["round",4]],["ordering",4]]],[11,"cmp","alsa::card","",1,[[["card",3]],["ordering",4]]],[11,"cmp","alsa::ctl","",2,[[["elemiface",4]],["ordering",4]]],[11,"cmp","","",3,[[["elemtype",4]],["ordering",4]]],[11,"cmp","alsa::pcm","",11,[[["state",4]],["ordering",4]]],[11,"cmp","","",12,[[["format",4]],["ordering",4]]],[11,"cmp","","",14,[[["access",4]],["ordering",4]]],[11,"cmp","","",15,[[["tstamptype",4]],["ordering",4]]],[11,"cmp","","",20,[[["audiotstamptype",4]],["ordering",4]]],[11,"cmp","alsa::poll","",27,[[["flags",3]],["ordering",4]]],[11,"cmp","alsa::mixer","",30,[[["millibel",3]],["ordering",4]]],[11,"cmp","","",33,[[["selemchannelid",4]],["ordering",4]]],[11,"cmp","alsa::seq","",40,[[["portcap",3]],["ordering",4]]],[11,"cmp","","",41,[[["porttype",3]],["ordering",4]]],[11,"cmp","","",42,[[["remove",3]],["ordering",4]]],[11,"cmp","","",43,[[["addr",3]],["ordering",4]]],[11,"cmp","","",49,[[["evnote",3]],["ordering",4]]],[11,"cmp","","",50,[[["evctrl",3]],["ordering",4]]],[11,"cmp","","",51,[[["connect",3]],["ordering",4]]],[11,"cmp","","",52,[[["evqueuecontrol",3]],["ordering",4]]],[11,"cmp","","",53,[[["evresult",3]],["ordering",4]]],[11,"cmp","","",54,[[["eventtype",4]],["ordering",4]]],[11,"cmp","alsa::pcm","",7,[[["chmaptype",4]],["ordering",4]]],[11,"cmp","","",6,[[["chmapposition",4]],["ordering",4]]],[11,"eq","alsa","",70,[[["direction",4]],["bool",15]]],[11,"eq","","",71,[[["valueor",4]],["bool",15]]],[11,"eq","","",72,[[["round",4]],["bool",15]]],[11,"eq","","",73,[[["error",3]],["bool",15]]],[11,"ne","","",73,[[["error",3]],["bool",15]]],[11,"eq","alsa::card","",1,[[["card",3]],["bool",15]]],[11,"ne","","",1,[[["card",3]],["bool",15]]],[11,"eq","alsa::ctl","",2,[[["elemiface",4]],["bool",15]]],[11,"eq","","",3,[[["elemtype",4]],["bool",15]]],[11,"eq","","",78,[[["elemid",3]],["bool",15]]],[11,"eq","alsa::pcm","",11,[[["state",4]],["bool",15]]],[11,"eq","","",12,[[["format",4]],["bool",15]]],[11,"eq","","",14,[[["access",4]],["bool",15]]],[11,"eq","","",15,[[["tstamptype",4]],["bool",15]]],[11,"eq","","",20,[[["audiotstamptype",4]],["bool",15]]],[11,"eq","alsa::poll","",27,[[["flags",3]],["bool",15]]],[11,"ne","","",27,[[["flags",3]],["bool",15]]],[11,"eq","alsa::mixer","",30,[[["millibel",3]],["bool",15]]],[11,"ne","","",30,[[["millibel",3]],["bool",15]]],[11,"eq","","",33,[[["selemchannelid",4]],["bool",15]]],[11,"eq","alsa::seq","",40,[[["portcap",3]],["bool",15]]],[11,"ne","","",40,[[["portcap",3]],["bool",15]]],[11,"eq","","",41,[[["porttype",3]],["bool",15]]],[11,"ne","","",41,[[["porttype",3]],["bool",15]]],[11,"eq","","",42,[[["remove",3]],["bool",15]]],[11,"ne","","",42,[[["remove",3]],["bool",15]]],[11,"eq","","",43,[[["addr",3]],["bool",15]]],[11,"ne","","",43,[[["addr",3]],["bool",15]]],[11,"eq","","",49,[[["evnote",3]],["bool",15]]],[11,"ne","","",49,[[["evnote",3]],["bool",15]]],[11,"eq","","",50,[[["evctrl",3]],["bool",15]]],[11,"ne","","",50,[[["evctrl",3]],["bool",15]]],[11,"eq","","",51,[[["connect",3]],["bool",15]]],[11,"ne","","",51,[[["connect",3]],["bool",15]]],[11,"eq","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"ne","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"eq","","",53,[[["evresult",3]],["bool",15]]],[11,"ne","","",53,[[["evresult",3]],["bool",15]]],[11,"eq","","",54,[[["eventtype",4]],["bool",15]]],[11,"eq","alsa::pcm","",7,[[["chmaptype",4]],["bool",15]]],[11,"eq","","",6,[[["chmapposition",4]],["bool",15]]],[11,"partial_cmp","alsa","",70,[[["direction",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",71,[[["valueor",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",72,[[["round",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","alsa::card","",1,[[["card",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["card",3]],["bool",15]]],[11,"le","","",1,[[["card",3]],["bool",15]]],[11,"gt","","",1,[[["card",3]],["bool",15]]],[11,"ge","","",1,[[["card",3]],["bool",15]]],[11,"partial_cmp","alsa::ctl","",2,[[["elemiface",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["elemtype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","alsa::pcm","",11,[[["state",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",12,[[["format",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["access",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",15,[[["tstamptype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",20,[[["audiotstamptype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","alsa::poll","",27,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["flags",3]],["bool",15]]],[11,"le","","",27,[[["flags",3]],["bool",15]]],[11,"gt","","",27,[[["flags",3]],["bool",15]]],[11,"ge","","",27,[[["flags",3]],["bool",15]]],[11,"partial_cmp","alsa::mixer","",30,[[["millibel",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["millibel",3]],["bool",15]]],[11,"le","","",30,[[["millibel",3]],["bool",15]]],[11,"gt","","",30,[[["millibel",3]],["bool",15]]],[11,"ge","","",30,[[["millibel",3]],["bool",15]]],[11,"partial_cmp","","",33,[[["selemchannelid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","alsa::seq","",40,[[["portcap",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["portcap",3]],["bool",15]]],[11,"le","","",40,[[["portcap",3]],["bool",15]]],[11,"gt","","",40,[[["portcap",3]],["bool",15]]],[11,"ge","","",40,[[["portcap",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["porttype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["porttype",3]],["bool",15]]],[11,"le","","",41,[[["porttype",3]],["bool",15]]],[11,"gt","","",41,[[["porttype",3]],["bool",15]]],[11,"ge","","",41,[[["porttype",3]],["bool",15]]],[11,"partial_cmp","","",42,[[["remove",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["remove",3]],["bool",15]]],[11,"le","","",42,[[["remove",3]],["bool",15]]],[11,"gt","","",42,[[["remove",3]],["bool",15]]],[11,"ge","","",42,[[["remove",3]],["bool",15]]],[11,"partial_cmp","","",43,[[["addr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["addr",3]],["bool",15]]],[11,"le","","",43,[[["addr",3]],["bool",15]]],[11,"gt","","",43,[[["addr",3]],["bool",15]]],[11,"ge","","",43,[[["addr",3]],["bool",15]]],[11,"partial_cmp","","",49,[[["evnote",3]],[["option",4],["ordering",4]]]],[11,"lt","","",49,[[["evnote",3]],["bool",15]]],[11,"le","","",49,[[["evnote",3]],["bool",15]]],[11,"gt","","",49,[[["evnote",3]],["bool",15]]],[11,"ge","","",49,[[["evnote",3]],["bool",15]]],[11,"partial_cmp","","",50,[[["evctrl",3]],[["option",4],["ordering",4]]]],[11,"lt","","",50,[[["evctrl",3]],["bool",15]]],[11,"le","","",50,[[["evctrl",3]],["bool",15]]],[11,"gt","","",50,[[["evctrl",3]],["bool",15]]],[11,"ge","","",50,[[["evctrl",3]],["bool",15]]],[11,"partial_cmp","","",51,[[["connect",3]],[["option",4],["ordering",4]]]],[11,"lt","","",51,[[["connect",3]],["bool",15]]],[11,"le","","",51,[[["connect",3]],["bool",15]]],[11,"gt","","",51,[[["connect",3]],["bool",15]]],[11,"ge","","",51,[[["connect",3]],["bool",15]]],[11,"partial_cmp","","",52,[[["evqueuecontrol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"le","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"gt","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"ge","","",52,[[["evqueuecontrol",3]],["bool",15]]],[11,"partial_cmp","","",53,[[["evresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["evresult",3]],["bool",15]]],[11,"le","","",53,[[["evresult",3]],["bool",15]]],[11,"gt","","",53,[[["evresult",3]],["bool",15]]],[11,"ge","","",53,[[["evresult",3]],["bool",15]]],[11,"partial_cmp","","",54,[[["eventtype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","alsa::pcm","",7,[[["chmaptype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",6,[[["chmapposition",4]],[["option",4],["ordering",4]]]],[11,"deref","alsa::mixer","",30,[[],["i64",15]]],[11,"deref","","returns the elem of this selem",32,[[],["elem",3]]],[11,"fmt","alsa","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::card","",1,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::ctl","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::pcm","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::device_name","",25,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::poll","",27,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::mixer","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::seq","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","alsa","",86,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::pcm","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::direct::pcm","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","alsa","",73,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::mixer","",33,[[["formatter",3]],["result",6]]],[11,"fmt","alsa","",86,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::pcm","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"sub","alsa::poll","Returns the set difference of the two sets of flags.",27,[[["flags",3]],["flags",3]]],[11,"sub","alsa::mixer","",30,[[]]],[11,"sub","alsa::seq","Returns the set difference of the two sets of flags.",40,[[["portcap",3]],["portcap",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",41,[[["porttype",3]],["porttype",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["remove",3]],["remove",3]]],[11,"add","alsa::mixer","",30,[[]]],[11,"add_assign","","",30,[[]]],[11,"sub_assign","alsa::poll","Disables all flags enabled in the set.",27,[[["flags",3]]]],[11,"sub_assign","alsa::mixer","",30,[[]]],[11,"sub_assign","alsa::seq","Disables all flags enabled in the set.",40,[[["portcap",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",41,[[["porttype",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["remove",3]]]],[11,"not","alsa::poll","Returns the complement of this set of flags.",27,[[],["flags",3]]],[11,"not","alsa::seq","Returns the complement of this set of flags.",40,[[],["portcap",3]]],[11,"not","","Returns the complement of this set of flags.",41,[[],["porttype",3]]],[11,"not","","Returns the complement of this set of flags.",42,[[],["remove",3]]],[11,"bitand","alsa::poll","Returns the intersection between the two sets of flags.",27,[[["flags",3]],["flags",3]]],[11,"bitand","alsa::seq","Returns the intersection between the two sets of flags.",40,[[["portcap",3]],["portcap",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",41,[[["porttype",3]],["porttype",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["remove",3]],["remove",3]]],[11,"bitor","alsa::poll","Returns the union of the two sets of flags.",27,[[["flags",3]],["flags",3]]],[11,"bitor","alsa::seq","Returns the union of the two sets of flags.",40,[[["portcap",3]],["portcap",3]]],[11,"bitor","","Returns the union of the two sets of flags.",41,[[["porttype",3]],["porttype",3]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["remove",3]],["remove",3]]],[11,"bitxor","alsa::poll","Returns the left flags, but with all the right flags …",27,[[["flags",3]],["flags",3]]],[11,"bitxor","alsa::seq","Returns the left flags, but with all the right flags …",40,[[["portcap",3]],["portcap",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",41,[[["porttype",3]],["porttype",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",42,[[["remove",3]],["remove",3]]],[11,"bitand_assign","alsa::poll","Disables all flags disabled in the set.",27,[[["flags",3]]]],[11,"bitand_assign","alsa::seq","Disables all flags disabled in the set.",40,[[["portcap",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",41,[[["porttype",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["remove",3]]]],[11,"bitor_assign","alsa::poll","Adds the set of flags.",27,[[["flags",3]]]],[11,"bitor_assign","alsa::seq","Adds the set of flags.",40,[[["portcap",3]]]],[11,"bitor_assign","","Adds the set of flags.",41,[[["porttype",3]]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["remove",3]]]],[11,"bitxor_assign","alsa::poll","Toggles the set of flags.",27,[[["flags",3]]]],[11,"bitxor_assign","alsa::seq","Toggles the set of flags.",40,[[["portcap",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",41,[[["porttype",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["remove",3]]]],[11,"hash","alsa::ctl","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","alsa::pcm","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",20,[[]]],[11,"hash","alsa::poll","",27,[[]]],[11,"hash","alsa::mixer","",30,[[]]],[11,"hash","","",33,[[]]],[11,"hash","alsa::seq","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","alsa::pcm","",7,[[]]],[11,"hash","","",6,[[]]],[11,"from_str","alsa::seq","",43,[[["str",15]],["result",4]]],[11,"from_iter","alsa::poll","",27,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","alsa::seq","",40,[[["intoiterator",8]],["portcap",3]]],[11,"from_iter","","",41,[[["intoiterator",8]],["porttype",3]]],[11,"from_iter","","",42,[[["intoiterator",8]],["remove",3]]],[11,"fmt","alsa::poll","",27,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::seq","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::poll","",27,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::seq","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::poll","",27,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::seq","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::poll","",27,[[["formatter",3]],["result",6]]],[11,"fmt","alsa::seq","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"description","alsa","",73,[[],["str",15]]],[11,"source","","",73,[[],[["stderror",8],["option",4]]]],[11,"read","alsa::pcm","",10,[[],[["usize",15],["result",6]]]],[11,"read","alsa::rawmidi","",82,[[],[["usize",15],["result",6]]]],[11,"write","alsa::pcm","",10,[[],[["usize",15],["result",6]]]],[11,"flush","","",10,[[],["result",6]]],[11,"write","alsa::rawmidi","",82,[[],[["usize",15],["result",6]]]],[11,"flush","","",82,[[],["result",6]]],[11,"new","alsa","",73,[[["str",15],["c_int",6]],["error",3]]],[11,"unsupported","","",73,[[["str",15]],["error",3]]],[11,"func","","The function which failed.",73,[[],["str",15]]],[11,"errno","","The errno, if any.",73,[[],[["option",4],["errno",4]]]],[11,"nix_error","","Underlying error",73,[[],["error",4]]],[11,"new","alsa::ctl","Wrapper around open that takes a &str instead of a &CStr",74,[[["bool",15],["str",15]],["result",6]]],[11,"open","","Open does not support async mode (it\'s not very Rustic …",74,[[["bool",15],["cstr",3]],[["result",6],["ctl",3]]]],[11,"from_card","","",74,[[["bool",15],["card",3]],[["result",6],["ctl",3]]]],[11,"card_info","","",74,[[],[["cardinfo",3],["result",6]]]],[11,"wait","","",74,[[["u32",15],["option",4]],[["bool",15],["result",6]]]],[11,"get_db_range","","",74,[[["elemid",3]],["result",6]]],[11,"convert_to_db","","",74,[[["i64",15],["elemid",3]],[["millibel",3],["result",6]]]],[11,"convert_from_db","","",74,[[["round",4],["elemid",3],["millibel",3]],[["i64",15],["result",6]]]],[11,"subscribe_events","","Note: According to alsa-lib documentation, you\'re also …",74,[[["bool",15]],["result",6]]],[11,"read","","",74,[[],[["option",4],["result",6]]]],[11,"get_id","","",75,[[],[["result",6],["str",15]]]],[11,"get_driver","","",75,[[],[["result",6],["str",15]]]],[11,"get_components","","",75,[[],[["result",6],["str",15]]]],[11,"get_longname","","",75,[[],[["result",6],["str",15]]]],[11,"get_name","","",75,[[],[["result",6],["str",15]]]],[11,"get_mixername","","",75,[[],[["result",6],["str",15]]]],[11,"get_card","","",75,[[],["card",3]]],[11,"all","","Returns a slice of all possible values; useful for …",2,[[]]],[11,"all","","Returns a slice of all possible values; useful for …",3,[[]]],[11,"get_boolean","","",76,[[["u32",15]],[["bool",15],["option",4]]]],[11,"set_boolean","","",76,[[["u32",15],["bool",15]],["option",4]]],[11,"get_integer","","",76,[[["u32",15]],[["option",4],["i32",15]]]],[11,"set_integer","","",76,[[["u32",15],["i32",15]],["option",4]]],[11,"get_integer64","","",76,[[["u32",15]],[["i64",15],["option",4]]]],[11,"set_integer64","","",76,[[["u32",15],["i64",15]],["option",4]]],[11,"get_enumerated","","",76,[[["u32",15]],[["u32",15],["option",4]]]],[11,"set_enumerated","","",76,[[["u32",15]],["option",4]]],[11,"get_byte","","",76,[[["u32",15]],[["u8",15],["option",4]]]],[11,"set_byte","","",76,[[["u32",15],["u8",15]],["option",4]]],[11,"get_bytes","","",76,[[],["option",4]]],[11,"set_bytes","","",76,[[],["option",4]]],[11,"new","","Creates a new ElemValue.",76,[[["elemtype",4]],[["elemvalue",3],["result",6]]]],[11,"get_type","","",77,[[],["elemtype",4]]],[11,"get_count","","",77,[[],["u32",15]]],[11,"get_name","","",78,[[],[["result",6],["str",15]]]],[11,"get_device","","",78,[[],["u32",15]]],[11,"get_subdevice","","",78,[[],["u32",15]]],[11,"get_numid","","",78,[[],["u32",15]]],[11,"get_index","","",78,[[],["u32",15]]],[11,"get_interface","","",78,[[],["elemiface",4]]],[11,"set_device","","",78,[[["u32",15]]]],[11,"set_subdevice","","",78,[[["u32",15]]]],[11,"set_numid","","",78,[[["u32",15]]]],[11,"set_index","","",78,[[["u32",15]]]],[11,"set_interface","","",78,[[["elemiface",4]]]],[11,"set_name","","",78,[[["cstr",3]]]],[11,"new","","Creates a new ElemId.",78,[[["elemiface",4]]]],[11,"buffer_open","alsa","",86,[[],[["result",6],["output",3]]]],[11,"buffer_string","","",86,[[["fnonce",8]]]],[11,"as_errno","alsa::nix","Convert this <code>Error</code> to an <code>Errno</code>.",67,[[],[["errno",4],["option",4]]]],[11,"from_errno","","Create a nix Error from a given errno",67,[[["errno",4]],["error",4]]],[11,"last","","Get the current errno and convert it to a nix Error",67,[[],["error",4]]],[11,"invalid_argument","","Create a new invalid argument error (<code>EINVAL</code>)",67,[[],["error",4]]],[11,"last","alsa::nix::errno","",69,[[],["errno",4]]],[11,"desc","","",69,[[],["str",15]]],[11,"from_i32","","",69,[[["i32",15]],["errno",4]]],[11,"clear","","",69,[[]]],[11,"result","","Returns <code>Ok(value)</code> if it does not contain the sentinel …",69,[[],[["result",4],["error",4]]]]],"p":[[3,"Iter"],[3,"Card"],[4,"ElemIface"],[4,"ElemType"],[3,"HCtl"],[3,"Elem"],[4,"ChmapPosition"],[4,"ChmapType"],[3,"Info"],[3,"PCM"],[3,"IO"],[4,"State"],[4,"Format"],[8,"IoFormat"],[4,"Access"],[4,"TstampType"],[3,"HwParams"],[3,"SwParams"],[3,"Status"],[3,"StatusBuilder"],[4,"AudioTstampType"],[3,"Info"],[3,"Iter"],[3,"Rawmidi"],[3,"HintIter"],[3,"Hint"],[3,"pollfd"],[3,"Flags"],[8,"Descriptors"],[3,"Mixer"],[3,"MilliBel"],[3,"SelemId"],[3,"Selem"],[4,"SelemChannelId"],[3,"Seq"],[3,"Input"],[3,"ClientInfo"],[3,"ClientIter"],[3,"PortInfo"],[3,"PortIter"],[3,"PortCap"],[3,"PortType"],[3,"Remove"],[3,"Addr"],[3,"PortSubscribe"],[4,"QuerySubsType"],[3,"PortSubscribeIter"],[3,"Event"],[8,"EventData"],[3,"EvNote"],[3,"EvCtrl"],[3,"Connect"],[3,"EvQueueControl"],[3,"EvResult"],[4,"EventType"],[3,"QueueTempo"],[3,"QueueStatus"],[3,"RemoveEvents"],[3,"MidiEvent"],[3,"SyncPtrStatus"],[3,"Status"],[3,"Control"],[8,"MmapDir"],[3,"RawSamples"],[3,"MmapIO"],[6,"MmapPlayback"],[6,"MmapCapture"],[4,"Error"],[8,"ErrnoSentinel"],[4,"Errno"],[4,"Direction"],[4,"ValueOr"],[4,"Round"],[3,"Error"],[3,"Ctl"],[3,"CardInfo"],[3,"ElemValue"],[3,"ElemInfo"],[3,"ElemId"],[3,"ElemIter"],[3,"Chmap"],[3,"ChmapsQuery"],[3,"IO"],[3,"Elem"],[3,"Iter"],[3,"IterEnum"],[3,"Output"],[3,"Playback"],[3,"Capture"],[3,"CaptureIter"]]},\
"alsa_sys":{"doc":"","i":[[5,"snd_asoundlib_version","alsa_sys","\\\\defgroup Global Global defines and functions Global …",null,null],[5,"snd_dlpath","","",null,null],[5,"snd_dlopen","","",null,null],[5,"snd_dlsym","","",null,null],[5,"snd_dlclose","","",null,null],[5,"snd_async_add_handler","","",null,null],[5,"snd_async_del_handler","","",null,null],[5,"snd_async_handler_get_fd","","",null,null],[5,"snd_async_handler_get_signo","","",null,null],[5,"snd_async_handler_get_callback_private","","",null,null],[5,"snd_shm_area_create","","",null,null],[5,"snd_shm_area_share","","",null,null],[5,"snd_shm_area_destroy","","",null,null],[5,"snd_user_file","","",null,null],[5,"snd_input_stdio_open","","",null,null],[5,"snd_input_stdio_attach","","",null,null],[5,"snd_input_buffer_open","","",null,null],[5,"snd_input_close","","",null,null],[5,"snd_input_scanf","","",null,null],[5,"snd_input_gets","","",null,null],[5,"snd_input_getc","","",null,null],[5,"snd_input_ungetc","","",null,null],[5,"snd_output_stdio_open","","",null,null],[5,"snd_output_stdio_attach","","",null,null],[5,"snd_output_buffer_open","","",null,null],[5,"snd_output_buffer_string","","",null,null],[5,"snd_output_close","","",null,null],[5,"snd_output_printf","","",null,null],[5,"snd_output_vprintf","","",null,null],[5,"snd_output_puts","","",null,null],[5,"snd_output_putc","","",null,null],[5,"snd_output_flush","","",null,null],[5,"snd_strerror","","",null,null],[5,"snd_lib_error_set_handler","","",null,null],[5,"snd_lib_error_set_local","","",null,null],[5,"snd_config_topdir","","",null,null],[5,"snd_config_top","","",null,null],[5,"snd_config_load","","",null,null],[5,"snd_config_load_override","","",null,null],[5,"snd_config_save","","",null,null],[5,"snd_config_update","","",null,null],[5,"snd_config_update_r","","",null,null],[5,"snd_config_update_free","","",null,null],[5,"snd_config_update_free_global","","",null,null],[5,"snd_config_update_ref","","",null,null],[5,"snd_config_ref","","",null,null],[5,"snd_config_unref","","",null,null],[5,"snd_config_search","","",null,null],[5,"snd_config_searchv","","",null,null],[5,"snd_config_search_definition","","",null,null],[5,"snd_config_expand","","",null,null],[5,"snd_config_evaluate","","",null,null],[5,"snd_config_add","","",null,null],[5,"snd_config_add_before","","",null,null],[5,"snd_config_add_after","","",null,null],[5,"snd_config_remove","","",null,null],[5,"snd_config_delete","","",null,null],[5,"snd_config_delete_compound_members","","",null,null],[5,"snd_config_copy","","",null,null],[5,"snd_config_make","","",null,null],[5,"snd_config_make_integer","","",null,null],[5,"snd_config_make_integer64","","",null,null],[5,"snd_config_make_real","","",null,null],[5,"snd_config_make_string","","",null,null],[5,"snd_config_make_pointer","","",null,null],[5,"snd_config_make_compound","","",null,null],[5,"snd_config_imake_integer","","",null,null],[5,"snd_config_imake_integer64","","",null,null],[5,"snd_config_imake_real","","",null,null],[5,"snd_config_imake_string","","",null,null],[5,"snd_config_imake_safe_string","","",null,null],[5,"snd_config_imake_pointer","","",null,null],[5,"snd_config_get_type","","",null,null],[5,"snd_config_is_array","","",null,null],[5,"snd_config_set_id","","",null,null],[5,"snd_config_set_integer","","",null,null],[5,"snd_config_set_integer64","","",null,null],[5,"snd_config_set_real","","",null,null],[5,"snd_config_set_string","","",null,null],[5,"snd_config_set_ascii","","",null,null],[5,"snd_config_set_pointer","","",null,null],[5,"snd_config_get_id","","",null,null],[5,"snd_config_get_integer","","",null,null],[5,"snd_config_get_integer64","","",null,null],[5,"snd_config_get_real","","",null,null],[5,"snd_config_get_ireal","","",null,null],[5,"snd_config_get_string","","",null,null],[5,"snd_config_get_ascii","","",null,null],[5,"snd_config_get_pointer","","",null,null],[5,"snd_config_test_id","","",null,null],[5,"snd_config_iterator_first","","",null,null],[5,"snd_config_iterator_next","","",null,null],[5,"snd_config_iterator_end","","",null,null],[5,"snd_config_iterator_entry","","",null,null],[5,"snd_config_get_bool_ascii","","",null,null],[5,"snd_config_get_bool","","",null,null],[5,"snd_config_get_ctl_iface_ascii","","",null,null],[5,"snd_config_get_ctl_iface","","",null,null],[5,"snd_names_list","","",null,null],[5,"snd_names_list_free","","",null,null],[5,"snd_pcm_open","","",null,null],[5,"snd_pcm_open_lconf","","",null,null],[5,"snd_pcm_open_fallback","","",null,null],[5,"snd_pcm_close","","",null,null],[5,"snd_pcm_name","","",null,null],[5,"snd_pcm_type","","",null,null],[5,"snd_pcm_stream","","",null,null],[5,"snd_pcm_poll_descriptors_count","","",null,null],[5,"snd_pcm_poll_descriptors","","",null,null],[5,"snd_pcm_poll_descriptors_revents","","",null,null],[5,"snd_pcm_nonblock","","",null,null],[5,"snd_async_add_pcm_handler","","",null,null],[5,"snd_async_handler_get_pcm","","",null,null],[5,"snd_pcm_info","","",null,null],[5,"snd_pcm_hw_params_current","","",null,null],[5,"snd_pcm_hw_params","","",null,null],[5,"snd_pcm_hw_free","","",null,null],[5,"snd_pcm_sw_params_current","","",null,null],[5,"snd_pcm_sw_params","","",null,null],[5,"snd_pcm_prepare","","",null,null],[5,"snd_pcm_reset","","",null,null],[5,"snd_pcm_status","","",null,null],[5,"snd_pcm_start","","",null,null],[5,"snd_pcm_drop","","",null,null],[5,"snd_pcm_drain","","",null,null],[5,"snd_pcm_pause","","",null,null],[5,"snd_pcm_state","","",null,null],[5,"snd_pcm_hwsync","","",null,null],[5,"snd_pcm_delay","","",null,null],[5,"snd_pcm_resume","","",null,null],[5,"snd_pcm_htimestamp","","",null,null],[5,"snd_pcm_avail","","",null,null],[5,"snd_pcm_avail_update","","",null,null],[5,"snd_pcm_avail_delay","","",null,null],[5,"snd_pcm_rewindable","","",null,null],[5,"snd_pcm_rewind","","",null,null],[5,"snd_pcm_forwardable","","",null,null],[5,"snd_pcm_forward","","",null,null],[5,"snd_pcm_writei","","",null,null],[5,"snd_pcm_readi","","",null,null],[5,"snd_pcm_writen","","",null,null],[5,"snd_pcm_readn","","",null,null],[5,"snd_pcm_wait","","",null,null],[5,"snd_pcm_link","","",null,null],[5,"snd_pcm_unlink","","",null,null],[5,"snd_pcm_query_chmaps","","",null,null],[5,"snd_pcm_query_chmaps_from_hw","","",null,null],[5,"snd_pcm_free_chmaps","","",null,null],[5,"snd_pcm_get_chmap","","",null,null],[5,"snd_pcm_set_chmap","","",null,null],[5,"snd_pcm_chmap_type_name","","",null,null],[5,"snd_pcm_chmap_name","","",null,null],[5,"snd_pcm_chmap_long_name","","",null,null],[5,"snd_pcm_chmap_print","","",null,null],[5,"snd_pcm_chmap_from_string","","",null,null],[5,"snd_pcm_chmap_parse_string","","",null,null],[5,"snd_pcm_recover","","",null,null],[5,"snd_pcm_set_params","","",null,null],[5,"snd_pcm_get_params","","",null,null],[5,"snd_pcm_info_sizeof","","\\\\defgroup PCM_Info Stream Information \\\\ingroup PCM See …",null,null],[5,"snd_pcm_info_malloc","","",null,null],[5,"snd_pcm_info_free","","",null,null],[5,"snd_pcm_info_copy","","",null,null],[5,"snd_pcm_info_get_device","","",null,null],[5,"snd_pcm_info_get_subdevice","","",null,null],[5,"snd_pcm_info_get_stream","","",null,null],[5,"snd_pcm_info_get_card","","",null,null],[5,"snd_pcm_info_get_id","","",null,null],[5,"snd_pcm_info_get_name","","",null,null],[5,"snd_pcm_info_get_subdevice_name","","",null,null],[5,"snd_pcm_info_get_class","","",null,null],[5,"snd_pcm_info_get_subclass","","",null,null],[5,"snd_pcm_info_get_subdevices_count","","",null,null],[5,"snd_pcm_info_get_subdevices_avail","","",null,null],[5,"snd_pcm_info_get_sync","","",null,null],[5,"snd_pcm_info_set_device","","",null,null],[5,"snd_pcm_info_set_subdevice","","",null,null],[5,"snd_pcm_info_set_stream","","",null,null],[5,"snd_pcm_hw_params_any","","\\\\defgroup PCM_HW_Params Hardware Parameters \\\\ingroup PCM …",null,null],[5,"snd_pcm_hw_params_can_mmap_sample_resolution","","",null,null],[5,"snd_pcm_hw_params_is_double","","",null,null],[5,"snd_pcm_hw_params_is_batch","","",null,null],[5,"snd_pcm_hw_params_is_block_transfer","","",null,null],[5,"snd_pcm_hw_params_is_monotonic","","",null,null],[5,"snd_pcm_hw_params_can_overrange","","",null,null],[5,"snd_pcm_hw_params_can_pause","","",null,null],[5,"snd_pcm_hw_params_can_resume","","",null,null],[5,"snd_pcm_hw_params_is_half_duplex","","",null,null],[5,"snd_pcm_hw_params_is_joint_duplex","","",null,null],[5,"snd_pcm_hw_params_can_sync_start","","",null,null],[5,"snd_pcm_hw_params_can_disable_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_supports_audio_wallclock_ts","","",null,null],[5,"snd_pcm_hw_params_supports_audio_ts_type","","",null,null],[5,"snd_pcm_hw_params_get_rate_numden","","",null,null],[5,"snd_pcm_hw_params_get_sbits","","",null,null],[5,"snd_pcm_hw_params_get_fifo_size","","",null,null],[5,"snd_pcm_hw_params_sizeof","","",null,null],[5,"snd_pcm_hw_params_malloc","","",null,null],[5,"snd_pcm_hw_params_free","","",null,null],[5,"snd_pcm_hw_params_copy","","",null,null],[5,"snd_pcm_hw_params_get_access","","",null,null],[5,"snd_pcm_hw_params_test_access","","",null,null],[5,"snd_pcm_hw_params_set_access","","",null,null],[5,"snd_pcm_hw_params_set_access_first","","",null,null],[5,"snd_pcm_hw_params_set_access_last","","",null,null],[5,"snd_pcm_hw_params_set_access_mask","","",null,null],[5,"snd_pcm_hw_params_get_access_mask","","",null,null],[5,"snd_pcm_hw_params_get_format","","",null,null],[5,"snd_pcm_hw_params_test_format","","",null,null],[5,"snd_pcm_hw_params_set_format","","",null,null],[5,"snd_pcm_hw_params_set_format_first","","",null,null],[5,"snd_pcm_hw_params_set_format_last","","",null,null],[5,"snd_pcm_hw_params_set_format_mask","","",null,null],[5,"snd_pcm_hw_params_get_format_mask","","",null,null],[5,"snd_pcm_hw_params_get_subformat","","",null,null],[5,"snd_pcm_hw_params_test_subformat","","",null,null],[5,"snd_pcm_hw_params_set_subformat","","",null,null],[5,"snd_pcm_hw_params_set_subformat_first","","",null,null],[5,"snd_pcm_hw_params_set_subformat_last","","",null,null],[5,"snd_pcm_hw_params_set_subformat_mask","","",null,null],[5,"snd_pcm_hw_params_get_subformat_mask","","",null,null],[5,"snd_pcm_hw_params_get_channels","","",null,null],[5,"snd_pcm_hw_params_get_channels_min","","",null,null],[5,"snd_pcm_hw_params_get_channels_max","","",null,null],[5,"snd_pcm_hw_params_test_channels","","",null,null],[5,"snd_pcm_hw_params_set_channels","","",null,null],[5,"snd_pcm_hw_params_set_channels_min","","",null,null],[5,"snd_pcm_hw_params_set_channels_max","","",null,null],[5,"snd_pcm_hw_params_set_channels_minmax","","",null,null],[5,"snd_pcm_hw_params_set_channels_near","","",null,null],[5,"snd_pcm_hw_params_set_channels_first","","",null,null],[5,"snd_pcm_hw_params_set_channels_last","","",null,null],[5,"snd_pcm_hw_params_get_rate","","",null,null],[5,"snd_pcm_hw_params_get_rate_min","","",null,null],[5,"snd_pcm_hw_params_get_rate_max","","",null,null],[5,"snd_pcm_hw_params_test_rate","","",null,null],[5,"snd_pcm_hw_params_set_rate","","",null,null],[5,"snd_pcm_hw_params_set_rate_min","","",null,null],[5,"snd_pcm_hw_params_set_rate_max","","",null,null],[5,"snd_pcm_hw_params_set_rate_minmax","","",null,null],[5,"snd_pcm_hw_params_set_rate_near","","",null,null],[5,"snd_pcm_hw_params_set_rate_first","","",null,null],[5,"snd_pcm_hw_params_set_rate_last","","",null,null],[5,"snd_pcm_hw_params_set_rate_resample","","",null,null],[5,"snd_pcm_hw_params_get_rate_resample","","",null,null],[5,"snd_pcm_hw_params_set_export_buffer","","",null,null],[5,"snd_pcm_hw_params_get_export_buffer","","",null,null],[5,"snd_pcm_hw_params_set_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_get_period_wakeup","","",null,null],[5,"snd_pcm_hw_params_get_period_time","","",null,null],[5,"snd_pcm_hw_params_get_period_time_min","","",null,null],[5,"snd_pcm_hw_params_get_period_time_max","","",null,null],[5,"snd_pcm_hw_params_test_period_time","","",null,null],[5,"snd_pcm_hw_params_set_period_time","","",null,null],[5,"snd_pcm_hw_params_set_period_time_min","","",null,null],[5,"snd_pcm_hw_params_set_period_time_max","","",null,null],[5,"snd_pcm_hw_params_set_period_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_period_time_near","","",null,null],[5,"snd_pcm_hw_params_set_period_time_first","","",null,null],[5,"snd_pcm_hw_params_set_period_time_last","","",null,null],[5,"snd_pcm_hw_params_get_period_size","","",null,null],[5,"snd_pcm_hw_params_get_period_size_min","","",null,null],[5,"snd_pcm_hw_params_get_period_size_max","","",null,null],[5,"snd_pcm_hw_params_test_period_size","","",null,null],[5,"snd_pcm_hw_params_set_period_size","","",null,null],[5,"snd_pcm_hw_params_set_period_size_min","","",null,null],[5,"snd_pcm_hw_params_set_period_size_max","","",null,null],[5,"snd_pcm_hw_params_set_period_size_minmax","","",null,null],[5,"snd_pcm_hw_params_set_period_size_near","","",null,null],[5,"snd_pcm_hw_params_set_period_size_first","","",null,null],[5,"snd_pcm_hw_params_set_period_size_last","","",null,null],[5,"snd_pcm_hw_params_set_period_size_integer","","",null,null],[5,"snd_pcm_hw_params_get_periods","","",null,null],[5,"snd_pcm_hw_params_get_periods_min","","",null,null],[5,"snd_pcm_hw_params_get_periods_max","","",null,null],[5,"snd_pcm_hw_params_test_periods","","",null,null],[5,"snd_pcm_hw_params_set_periods","","",null,null],[5,"snd_pcm_hw_params_set_periods_min","","",null,null],[5,"snd_pcm_hw_params_set_periods_max","","",null,null],[5,"snd_pcm_hw_params_set_periods_minmax","","",null,null],[5,"snd_pcm_hw_params_set_periods_near","","",null,null],[5,"snd_pcm_hw_params_set_periods_first","","",null,null],[5,"snd_pcm_hw_params_set_periods_last","","",null,null],[5,"snd_pcm_hw_params_set_periods_integer","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time_min","","",null,null],[5,"snd_pcm_hw_params_get_buffer_time_max","","",null,null],[5,"snd_pcm_hw_params_test_buffer_time","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_min","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_max","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_near","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_first","","",null,null],[5,"snd_pcm_hw_params_set_buffer_time_last","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size_min","","",null,null],[5,"snd_pcm_hw_params_get_buffer_size_max","","",null,null],[5,"snd_pcm_hw_params_test_buffer_size","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_min","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_max","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_minmax","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_near","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_first","","",null,null],[5,"snd_pcm_hw_params_set_buffer_size_last","","",null,null],[5,"snd_pcm_hw_params_get_min_align","","",null,null],[5,"snd_pcm_sw_params_sizeof","","\\\\defgroup PCM_SW_Params Software Parameters \\\\ingroup PCM …",null,null],[5,"snd_pcm_sw_params_malloc","","",null,null],[5,"snd_pcm_sw_params_free","","",null,null],[5,"snd_pcm_sw_params_copy","","",null,null],[5,"snd_pcm_sw_params_get_boundary","","",null,null],[5,"snd_pcm_sw_params_set_tstamp_mode","","",null,null],[5,"snd_pcm_sw_params_get_tstamp_mode","","",null,null],[5,"snd_pcm_sw_params_set_tstamp_type","","",null,null],[5,"snd_pcm_sw_params_get_tstamp_type","","",null,null],[5,"snd_pcm_sw_params_set_avail_min","","",null,null],[5,"snd_pcm_sw_params_get_avail_min","","",null,null],[5,"snd_pcm_sw_params_set_period_event","","",null,null],[5,"snd_pcm_sw_params_get_period_event","","",null,null],[5,"snd_pcm_sw_params_set_start_threshold","","",null,null],[5,"snd_pcm_sw_params_get_start_threshold","","",null,null],[5,"snd_pcm_sw_params_set_stop_threshold","","",null,null],[5,"snd_pcm_sw_params_get_stop_threshold","","",null,null],[5,"snd_pcm_sw_params_set_silence_threshold","","",null,null],[5,"snd_pcm_sw_params_get_silence_threshold","","",null,null],[5,"snd_pcm_sw_params_set_silence_size","","",null,null],[5,"snd_pcm_sw_params_get_silence_size","","",null,null],[5,"snd_pcm_access_mask_sizeof","","\\\\defgroup PCM_Access Access Mask Functions \\\\ingroup PCM …",null,null],[5,"snd_pcm_access_mask_malloc","","",null,null],[5,"snd_pcm_access_mask_free","","",null,null],[5,"snd_pcm_access_mask_copy","","",null,null],[5,"snd_pcm_access_mask_none","","",null,null],[5,"snd_pcm_access_mask_any","","",null,null],[5,"snd_pcm_access_mask_test","","",null,null],[5,"snd_pcm_access_mask_empty","","",null,null],[5,"snd_pcm_access_mask_set","","",null,null],[5,"snd_pcm_access_mask_reset","","",null,null],[5,"snd_pcm_format_mask_sizeof","","\\\\defgroup PCM_Format Format Mask Functions \\\\ingroup PCM …",null,null],[5,"snd_pcm_format_mask_malloc","","",null,null],[5,"snd_pcm_format_mask_free","","",null,null],[5,"snd_pcm_format_mask_copy","","",null,null],[5,"snd_pcm_format_mask_none","","",null,null],[5,"snd_pcm_format_mask_any","","",null,null],[5,"snd_pcm_format_mask_test","","",null,null],[5,"snd_pcm_format_mask_empty","","",null,null],[5,"snd_pcm_format_mask_set","","",null,null],[5,"snd_pcm_format_mask_reset","","",null,null],[5,"snd_pcm_subformat_mask_sizeof","","\\\\defgroup PCM_SubFormat Subformat Mask Functions \\\\ingroup …",null,null],[5,"snd_pcm_subformat_mask_malloc","","",null,null],[5,"snd_pcm_subformat_mask_free","","",null,null],[5,"snd_pcm_subformat_mask_copy","","",null,null],[5,"snd_pcm_subformat_mask_none","","",null,null],[5,"snd_pcm_subformat_mask_any","","",null,null],[5,"snd_pcm_subformat_mask_test","","",null,null],[5,"snd_pcm_subformat_mask_empty","","",null,null],[5,"snd_pcm_subformat_mask_set","","",null,null],[5,"snd_pcm_subformat_mask_reset","","",null,null],[5,"snd_pcm_status_sizeof","","\\\\defgroup PCM_Status Status Functions \\\\ingroup PCM See …",null,null],[5,"snd_pcm_status_malloc","","",null,null],[5,"snd_pcm_status_free","","",null,null],[5,"snd_pcm_status_copy","","",null,null],[5,"snd_pcm_status_get_state","","",null,null],[5,"snd_pcm_status_get_trigger_tstamp","","",null,null],[5,"snd_pcm_status_get_trigger_htstamp","","",null,null],[5,"snd_pcm_status_get_tstamp","","",null,null],[5,"snd_pcm_status_get_htstamp","","",null,null],[5,"snd_pcm_status_get_audio_htstamp","","",null,null],[5,"snd_pcm_status_get_driver_htstamp","","",null,null],[5,"snd_pcm_status_get_audio_htstamp_report","","",null,null],[5,"snd_pcm_status_set_audio_htstamp_config","","",null,null],[5,"snd_pcm_status_get_delay","","",null,null],[5,"snd_pcm_status_get_avail","","",null,null],[5,"snd_pcm_status_get_avail_max","","",null,null],[5,"snd_pcm_status_get_overrange","","",null,null],[5,"snd_pcm_type_name","","\\\\defgroup PCM_Description Description Functions \\\\ingroup …",null,null],[5,"snd_pcm_stream_name","","",null,null],[5,"snd_pcm_access_name","","",null,null],[5,"snd_pcm_format_name","","",null,null],[5,"snd_pcm_format_description","","",null,null],[5,"snd_pcm_subformat_name","","",null,null],[5,"snd_pcm_subformat_description","","",null,null],[5,"snd_pcm_format_value","","",null,null],[5,"snd_pcm_tstamp_mode_name","","",null,null],[5,"snd_pcm_state_name","","",null,null],[5,"snd_pcm_dump","","\\\\defgroup PCM_Dump Debug Functions \\\\ingroup PCM See the …",null,null],[5,"snd_pcm_dump_hw_setup","","",null,null],[5,"snd_pcm_dump_sw_setup","","",null,null],[5,"snd_pcm_dump_setup","","",null,null],[5,"snd_pcm_hw_params_dump","","",null,null],[5,"snd_pcm_sw_params_dump","","",null,null],[5,"snd_pcm_status_dump","","",null,null],[5,"snd_pcm_mmap_begin","","\\\\defgroup PCM_Direct Direct Access (MMAP) Functions …",null,null],[5,"snd_pcm_mmap_commit","","",null,null],[5,"snd_pcm_mmap_writei","","",null,null],[5,"snd_pcm_mmap_readi","","",null,null],[5,"snd_pcm_mmap_writen","","",null,null],[5,"snd_pcm_mmap_readn","","",null,null],[5,"snd_pcm_format_signed","","\\\\defgroup PCM_Helpers Helper Functions \\\\ingroup PCM See …",null,null],[5,"snd_pcm_format_unsigned","","",null,null],[5,"snd_pcm_format_linear","","",null,null],[5,"snd_pcm_format_float","","",null,null],[5,"snd_pcm_format_little_endian","","",null,null],[5,"snd_pcm_format_big_endian","","",null,null],[5,"snd_pcm_format_cpu_endian","","",null,null],[5,"snd_pcm_format_width","","",null,null],[5,"snd_pcm_format_physical_width","","",null,null],[5,"snd_pcm_build_linear_format","","",null,null],[5,"snd_pcm_format_size","","",null,null],[5,"snd_pcm_format_silence","","",null,null],[5,"snd_pcm_format_silence_16","","",null,null],[5,"snd_pcm_format_silence_32","","",null,null],[5,"snd_pcm_format_silence_64","","",null,null],[5,"snd_pcm_format_set_silence","","",null,null],[5,"snd_pcm_bytes_to_frames","","",null,null],[5,"snd_pcm_frames_to_bytes","","",null,null],[5,"snd_pcm_bytes_to_samples","","",null,null],[5,"snd_pcm_samples_to_bytes","","",null,null],[5,"snd_pcm_area_silence","","",null,null],[5,"snd_pcm_areas_silence","","",null,null],[5,"snd_pcm_area_copy","","",null,null],[5,"snd_pcm_areas_copy","","",null,null],[5,"snd_pcm_areas_copy_wrap","","",null,null],[5,"snd_pcm_hook_get_pcm","","",null,null],[5,"snd_pcm_hook_get_private","","",null,null],[5,"snd_pcm_hook_set_private","","",null,null],[5,"snd_pcm_hook_add","","",null,null],[5,"snd_pcm_hook_remove","","",null,null],[5,"snd_pcm_meter_get_bufsize","","",null,null],[5,"snd_pcm_meter_get_channels","","",null,null],[5,"snd_pcm_meter_get_rate","","",null,null],[5,"snd_pcm_meter_get_now","","",null,null],[5,"snd_pcm_meter_get_boundary","","",null,null],[5,"snd_pcm_meter_add_scope","","",null,null],[5,"snd_pcm_meter_search_scope","","",null,null],[5,"snd_pcm_scope_malloc","","",null,null],[5,"snd_pcm_scope_set_ops","","",null,null],[5,"snd_pcm_scope_set_name","","",null,null],[5,"snd_pcm_scope_get_name","","",null,null],[5,"snd_pcm_scope_get_callback_private","","",null,null],[5,"snd_pcm_scope_set_callback_private","","",null,null],[5,"snd_pcm_scope_s16_open","","",null,null],[5,"snd_pcm_scope_s16_get_channel_buffer","","",null,null],[5,"snd_spcm_init","","",null,null],[5,"snd_spcm_init_duplex","","",null,null],[5,"snd_spcm_init_get_params","","",null,null],[5,"snd_pcm_start_mode_name","","\\\\defgroup PCM_Deprecated Deprecated Functions \\\\ingroup PCM…",null,null],[5,"snd_pcm_xrun_mode_name","","",null,null],[5,"snd_pcm_sw_params_set_start_mode","","",null,null],[5,"snd_pcm_sw_params_get_start_mode","","",null,null],[5,"snd_pcm_sw_params_set_xrun_mode","","",null,null],[5,"snd_pcm_sw_params_get_xrun_mode","","",null,null],[5,"snd_pcm_sw_params_set_xfer_align","","",null,null],[5,"snd_pcm_sw_params_get_xfer_align","","",null,null],[5,"snd_pcm_sw_params_set_sleep_min","","",null,null],[5,"snd_pcm_sw_params_get_sleep_min","","",null,null],[5,"snd_pcm_hw_params_get_tick_time","","",null,null],[5,"snd_pcm_hw_params_get_tick_time_min","","",null,null],[5,"snd_pcm_hw_params_get_tick_time_max","","",null,null],[5,"snd_pcm_hw_params_test_tick_time","","",null,null],[5,"snd_pcm_hw_params_set_tick_time","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_min","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_max","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_minmax","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_near","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_first","","",null,null],[5,"snd_pcm_hw_params_set_tick_time_last","","",null,null],[5,"snd_rawmidi_open","","",null,null],[5,"snd_rawmidi_open_lconf","","",null,null],[5,"snd_rawmidi_close","","",null,null],[5,"snd_rawmidi_poll_descriptors_count","","",null,null],[5,"snd_rawmidi_poll_descriptors","","",null,null],[5,"snd_rawmidi_poll_descriptors_revents","","",null,null],[5,"snd_rawmidi_nonblock","","",null,null],[5,"snd_rawmidi_info_sizeof","","",null,null],[5,"snd_rawmidi_info_malloc","","",null,null],[5,"snd_rawmidi_info_free","","",null,null],[5,"snd_rawmidi_info_copy","","",null,null],[5,"snd_rawmidi_info_get_device","","",null,null],[5,"snd_rawmidi_info_get_subdevice","","",null,null],[5,"snd_rawmidi_info_get_stream","","",null,null],[5,"snd_rawmidi_info_get_card","","",null,null],[5,"snd_rawmidi_info_get_flags","","",null,null],[5,"snd_rawmidi_info_get_id","","",null,null],[5,"snd_rawmidi_info_get_name","","",null,null],[5,"snd_rawmidi_info_get_subdevice_name","","",null,null],[5,"snd_rawmidi_info_get_subdevices_count","","",null,null],[5,"snd_rawmidi_info_get_subdevices_avail","","",null,null],[5,"snd_rawmidi_info_set_device","","",null,null],[5,"snd_rawmidi_info_set_subdevice","","",null,null],[5,"snd_rawmidi_info_set_stream","","",null,null],[5,"snd_rawmidi_info","","",null,null],[5,"snd_rawmidi_params_sizeof","","",null,null],[5,"snd_rawmidi_params_malloc","","",null,null],[5,"snd_rawmidi_params_free","","",null,null],[5,"snd_rawmidi_params_copy","","",null,null],[5,"snd_rawmidi_params_set_buffer_size","","",null,null],[5,"snd_rawmidi_params_get_buffer_size","","",null,null],[5,"snd_rawmidi_params_set_avail_min","","",null,null],[5,"snd_rawmidi_params_get_avail_min","","",null,null],[5,"snd_rawmidi_params_set_no_active_sensing","","",null,null],[5,"snd_rawmidi_params_get_no_active_sensing","","",null,null],[5,"snd_rawmidi_params","","",null,null],[5,"snd_rawmidi_params_current","","",null,null],[5,"snd_rawmidi_status_sizeof","","",null,null],[5,"snd_rawmidi_status_malloc","","",null,null],[5,"snd_rawmidi_status_free","","",null,null],[5,"snd_rawmidi_status_copy","","",null,null],[5,"snd_rawmidi_status_get_tstamp","","",null,null],[5,"snd_rawmidi_status_get_avail","","",null,null],[5,"snd_rawmidi_status_get_xruns","","",null,null],[5,"snd_rawmidi_status","","",null,null],[5,"snd_rawmidi_drain","","",null,null],[5,"snd_rawmidi_drop","","",null,null],[5,"snd_rawmidi_write","","",null,null],[5,"snd_rawmidi_read","","",null,null],[5,"snd_rawmidi_name","","",null,null],[5,"snd_rawmidi_type","","",null,null],[5,"snd_rawmidi_stream","","",null,null],[5,"snd_timer_query_open","","",null,null],[5,"snd_timer_query_open_lconf","","",null,null],[5,"snd_timer_query_close","","",null,null],[5,"snd_timer_query_next_device","","",null,null],[5,"snd_timer_query_info","","",null,null],[5,"snd_timer_query_params","","",null,null],[5,"snd_timer_query_status","","",null,null],[5,"snd_timer_open","","",null,null],[5,"snd_timer_open_lconf","","",null,null],[5,"snd_timer_close","","",null,null],[5,"snd_async_add_timer_handler","","",null,null],[5,"snd_async_handler_get_timer","","",null,null],[5,"snd_timer_poll_descriptors_count","","",null,null],[5,"snd_timer_poll_descriptors","","",null,null],[5,"snd_timer_poll_descriptors_revents","","",null,null],[5,"snd_timer_info","","",null,null],[5,"snd_timer_params","","",null,null],[5,"snd_timer_status","","",null,null],[5,"snd_timer_start","","",null,null],[5,"snd_timer_stop","","",null,null],[5,"snd_timer_continue","","",null,null],[5,"snd_timer_read","","",null,null],[5,"snd_timer_id_sizeof","","",null,null],[5,"snd_timer_id_malloc","","",null,null],[5,"snd_timer_id_free","","",null,null],[5,"snd_timer_id_copy","","",null,null],[5,"snd_timer_id_set_class","","",null,null],[5,"snd_timer_id_get_class","","",null,null],[5,"snd_timer_id_set_sclass","","",null,null],[5,"snd_timer_id_get_sclass","","",null,null],[5,"snd_timer_id_set_card","","",null,null],[5,"snd_timer_id_get_card","","",null,null],[5,"snd_timer_id_set_device","","",null,null],[5,"snd_timer_id_get_device","","",null,null],[5,"snd_timer_id_set_subdevice","","",null,null],[5,"snd_timer_id_get_subdevice","","",null,null],[5,"snd_timer_ginfo_sizeof","","",null,null],[5,"snd_timer_ginfo_malloc","","",null,null],[5,"snd_timer_ginfo_free","","",null,null],[5,"snd_timer_ginfo_copy","","",null,null],[5,"snd_timer_ginfo_set_tid","","",null,null],[5,"snd_timer_ginfo_get_tid","","",null,null],[5,"snd_timer_ginfo_get_flags","","",null,null],[5,"snd_timer_ginfo_get_card","","",null,null],[5,"snd_timer_ginfo_get_id","","",null,null],[5,"snd_timer_ginfo_get_name","","",null,null],[5,"snd_timer_ginfo_get_resolution","","",null,null],[5,"snd_timer_ginfo_get_resolution_min","","",null,null],[5,"snd_timer_ginfo_get_resolution_max","","",null,null],[5,"snd_timer_ginfo_get_clients","","",null,null],[5,"snd_timer_info_sizeof","","",null,null],[5,"snd_timer_info_malloc","","",null,null],[5,"snd_timer_info_free","","",null,null],[5,"snd_timer_info_copy","","",null,null],[5,"snd_timer_info_is_slave","","",null,null],[5,"snd_timer_info_get_card","","",null,null],[5,"snd_timer_info_get_id","","",null,null],[5,"snd_timer_info_get_name","","",null,null],[5,"snd_timer_info_get_resolution","","",null,null],[5,"snd_timer_params_sizeof","","",null,null],[5,"snd_timer_params_malloc","","",null,null],[5,"snd_timer_params_free","","",null,null],[5,"snd_timer_params_copy","","",null,null],[5,"snd_timer_params_set_auto_start","","",null,null],[5,"snd_timer_params_get_auto_start","","",null,null],[5,"snd_timer_params_set_exclusive","","",null,null],[5,"snd_timer_params_get_exclusive","","",null,null],[5,"snd_timer_params_set_early_event","","",null,null],[5,"snd_timer_params_get_early_event","","",null,null],[5,"snd_timer_params_set_ticks","","",null,null],[5,"snd_timer_params_get_ticks","","",null,null],[5,"snd_timer_params_set_queue_size","","",null,null],[5,"snd_timer_params_get_queue_size","","",null,null],[5,"snd_timer_params_set_filter","","",null,null],[5,"snd_timer_params_get_filter","","",null,null],[5,"snd_timer_status_sizeof","","",null,null],[5,"snd_timer_status_malloc","","",null,null],[5,"snd_timer_status_free","","",null,null],[5,"snd_timer_status_copy","","",null,null],[5,"snd_timer_status_get_timestamp","","",null,null],[5,"snd_timer_status_get_resolution","","",null,null],[5,"snd_timer_status_get_lost","","",null,null],[5,"snd_timer_status_get_overrun","","",null,null],[5,"snd_timer_status_get_queue","","",null,null],[5,"snd_timer_info_get_ticks","","",null,null],[5,"snd_hwdep_open","","",null,null],[5,"snd_hwdep_close","","",null,null],[5,"snd_hwdep_poll_descriptors","","",null,null],[5,"snd_hwdep_poll_descriptors_count","","",null,null],[5,"snd_hwdep_poll_descriptors_revents","","",null,null],[5,"snd_hwdep_nonblock","","",null,null],[5,"snd_hwdep_info","","",null,null],[5,"snd_hwdep_dsp_status","","",null,null],[5,"snd_hwdep_dsp_load","","",null,null],[5,"snd_hwdep_ioctl","","",null,null],[5,"snd_hwdep_write","","",null,null],[5,"snd_hwdep_read","","",null,null],[5,"snd_hwdep_info_sizeof","","",null,null],[5,"snd_hwdep_info_malloc","","",null,null],[5,"snd_hwdep_info_free","","",null,null],[5,"snd_hwdep_info_copy","","",null,null],[5,"snd_hwdep_info_get_device","","",null,null],[5,"snd_hwdep_info_get_card","","",null,null],[5,"snd_hwdep_info_get_id","","",null,null],[5,"snd_hwdep_info_get_name","","",null,null],[5,"snd_hwdep_info_get_iface","","",null,null],[5,"snd_hwdep_info_set_device","","",null,null],[5,"snd_hwdep_dsp_status_sizeof","","",null,null],[5,"snd_hwdep_dsp_status_malloc","","",null,null],[5,"snd_hwdep_dsp_status_free","","",null,null],[5,"snd_hwdep_dsp_status_copy","","",null,null],[5,"snd_hwdep_dsp_status_get_version","","",null,null],[5,"snd_hwdep_dsp_status_get_id","","",null,null],[5,"snd_hwdep_dsp_status_get_num_dsps","","",null,null],[5,"snd_hwdep_dsp_status_get_dsp_loaded","","",null,null],[5,"snd_hwdep_dsp_status_get_chip_ready","","",null,null],[5,"snd_hwdep_dsp_image_sizeof","","",null,null],[5,"snd_hwdep_dsp_image_malloc","","",null,null],[5,"snd_hwdep_dsp_image_free","","",null,null],[5,"snd_hwdep_dsp_image_copy","","",null,null],[5,"snd_hwdep_dsp_image_get_index","","",null,null],[5,"snd_hwdep_dsp_image_get_name","","",null,null],[5,"snd_hwdep_dsp_image_get_image","","",null,null],[5,"snd_hwdep_dsp_image_get_length","","",null,null],[5,"snd_hwdep_dsp_image_set_index","","",null,null],[5,"snd_hwdep_dsp_image_set_name","","",null,null],[5,"snd_hwdep_dsp_image_set_image","","",null,null],[5,"snd_hwdep_dsp_image_set_length","","",null,null],[5,"snd_card_load","","",null,null],[5,"snd_card_next","","",null,null],[5,"snd_card_get_index","","",null,null],[5,"snd_card_get_name","","",null,null],[5,"snd_card_get_longname","","",null,null],[5,"snd_device_name_hint","","",null,null],[5,"snd_device_name_free_hint","","",null,null],[5,"snd_device_name_get_hint","","",null,null],[5,"snd_ctl_open","","",null,null],[5,"snd_ctl_open_lconf","","",null,null],[5,"snd_ctl_open_fallback","","",null,null],[5,"snd_ctl_close","","",null,null],[5,"snd_ctl_nonblock","","",null,null],[5,"snd_async_add_ctl_handler","","",null,null],[5,"snd_async_handler_get_ctl","","",null,null],[5,"snd_ctl_poll_descriptors_count","","",null,null],[5,"snd_ctl_poll_descriptors","","",null,null],[5,"snd_ctl_poll_descriptors_revents","","",null,null],[5,"snd_ctl_subscribe_events","","",null,null],[5,"snd_ctl_card_info","","",null,null],[5,"snd_ctl_elem_list","","",null,null],[5,"snd_ctl_elem_info","","",null,null],[5,"snd_ctl_elem_read","","",null,null],[5,"snd_ctl_elem_write","","",null,null],[5,"snd_ctl_elem_lock","","",null,null],[5,"snd_ctl_elem_unlock","","",null,null],[5,"snd_ctl_elem_tlv_read","","",null,null],[5,"snd_ctl_elem_tlv_write","","",null,null],[5,"snd_ctl_elem_tlv_command","","",null,null],[5,"snd_ctl_hwdep_next_device","","",null,null],[5,"snd_ctl_hwdep_info","","",null,null],[5,"snd_ctl_pcm_next_device","","",null,null],[5,"snd_ctl_pcm_info","","",null,null],[5,"snd_ctl_pcm_prefer_subdevice","","",null,null],[5,"snd_ctl_rawmidi_next_device","","",null,null],[5,"snd_ctl_rawmidi_info","","",null,null],[5,"snd_ctl_rawmidi_prefer_subdevice","","",null,null],[5,"snd_ctl_set_power_state","","",null,null],[5,"snd_ctl_get_power_state","","",null,null],[5,"snd_ctl_read","","",null,null],[5,"snd_ctl_wait","","",null,null],[5,"snd_ctl_name","","",null,null],[5,"snd_ctl_type","","",null,null],[5,"snd_ctl_elem_type_name","","",null,null],[5,"snd_ctl_elem_iface_name","","",null,null],[5,"snd_ctl_event_type_name","","",null,null],[5,"snd_ctl_event_elem_get_mask","","",null,null],[5,"snd_ctl_event_elem_get_numid","","",null,null],[5,"snd_ctl_event_elem_get_id","","",null,null],[5,"snd_ctl_event_elem_get_interface","","",null,null],[5,"snd_ctl_event_elem_get_device","","",null,null],[5,"snd_ctl_event_elem_get_subdevice","","",null,null],[5,"snd_ctl_event_elem_get_name","","",null,null],[5,"snd_ctl_event_elem_get_index","","",null,null],[5,"snd_ctl_elem_list_alloc_space","","",null,null],[5,"snd_ctl_elem_list_free_space","","",null,null],[5,"snd_ctl_ascii_elem_id_get","","",null,null],[5,"snd_ctl_ascii_elem_id_parse","","",null,null],[5,"snd_ctl_ascii_value_parse","","",null,null],[5,"snd_ctl_elem_id_sizeof","","",null,null],[5,"snd_ctl_elem_id_malloc","","",null,null],[5,"snd_ctl_elem_id_free","","",null,null],[5,"snd_ctl_elem_id_clear","","",null,null],[5,"snd_ctl_elem_id_copy","","",null,null],[5,"snd_ctl_elem_id_get_numid","","",null,null],[5,"snd_ctl_elem_id_get_interface","","",null,null],[5,"snd_ctl_elem_id_get_device","","",null,null],[5,"snd_ctl_elem_id_get_subdevice","","",null,null],[5,"snd_ctl_elem_id_get_name","","",null,null],[5,"snd_ctl_elem_id_get_index","","",null,null],[5,"snd_ctl_elem_id_set_numid","","",null,null],[5,"snd_ctl_elem_id_set_interface","","",null,null],[5,"snd_ctl_elem_id_set_device","","",null,null],[5,"snd_ctl_elem_id_set_subdevice","","",null,null],[5,"snd_ctl_elem_id_set_name","","",null,null],[5,"snd_ctl_elem_id_set_index","","",null,null],[5,"snd_ctl_card_info_sizeof","","",null,null],[5,"snd_ctl_card_info_malloc","","",null,null],[5,"snd_ctl_card_info_free","","",null,null],[5,"snd_ctl_card_info_clear","","",null,null],[5,"snd_ctl_card_info_copy","","",null,null],[5,"snd_ctl_card_info_get_card","","",null,null],[5,"snd_ctl_card_info_get_id","","",null,null],[5,"snd_ctl_card_info_get_driver","","",null,null],[5,"snd_ctl_card_info_get_name","","",null,null],[5,"snd_ctl_card_info_get_longname","","",null,null],[5,"snd_ctl_card_info_get_mixername","","",null,null],[5,"snd_ctl_card_info_get_components","","",null,null],[5,"snd_ctl_event_sizeof","","",null,null],[5,"snd_ctl_event_malloc","","",null,null],[5,"snd_ctl_event_free","","",null,null],[5,"snd_ctl_event_clear","","",null,null],[5,"snd_ctl_event_copy","","",null,null],[5,"snd_ctl_event_get_type","","",null,null],[5,"snd_ctl_elem_list_sizeof","","",null,null],[5,"snd_ctl_elem_list_malloc","","",null,null],[5,"snd_ctl_elem_list_free","","",null,null],[5,"snd_ctl_elem_list_clear","","",null,null],[5,"snd_ctl_elem_list_copy","","",null,null],[5,"snd_ctl_elem_list_set_offset","","",null,null],[5,"snd_ctl_elem_list_get_used","","",null,null],[5,"snd_ctl_elem_list_get_count","","",null,null],[5,"snd_ctl_elem_list_get_id","","",null,null],[5,"snd_ctl_elem_list_get_numid","","",null,null],[5,"snd_ctl_elem_list_get_interface","","",null,null],[5,"snd_ctl_elem_list_get_device","","",null,null],[5,"snd_ctl_elem_list_get_subdevice","","",null,null],[5,"snd_ctl_elem_list_get_name","","",null,null],[5,"snd_ctl_elem_list_get_index","","",null,null],[5,"snd_ctl_elem_info_sizeof","","",null,null],[5,"snd_ctl_elem_info_malloc","","",null,null],[5,"snd_ctl_elem_info_free","","",null,null],[5,"snd_ctl_elem_info_clear","","",null,null],[5,"snd_ctl_elem_info_copy","","",null,null],[5,"snd_ctl_elem_info_get_type","","",null,null],[5,"snd_ctl_elem_info_is_readable","","",null,null],[5,"snd_ctl_elem_info_is_writable","","",null,null],[5,"snd_ctl_elem_info_is_volatile","","",null,null],[5,"snd_ctl_elem_info_is_inactive","","",null,null],[5,"snd_ctl_elem_info_is_locked","","",null,null],[5,"snd_ctl_elem_info_is_tlv_readable","","",null,null],[5,"snd_ctl_elem_info_is_tlv_writable","","",null,null],[5,"snd_ctl_elem_info_is_tlv_commandable","","",null,null],[5,"snd_ctl_elem_info_is_owner","","",null,null],[5,"snd_ctl_elem_info_is_user","","",null,null],[5,"snd_ctl_elem_info_get_owner","","",null,null],[5,"snd_ctl_elem_info_get_count","","",null,null],[5,"snd_ctl_elem_info_get_min","","",null,null],[5,"snd_ctl_elem_info_get_max","","",null,null],[5,"snd_ctl_elem_info_get_step","","",null,null],[5,"snd_ctl_elem_info_get_min64","","",null,null],[5,"snd_ctl_elem_info_get_max64","","",null,null],[5,"snd_ctl_elem_info_get_step64","","",null,null],[5,"snd_ctl_elem_info_get_items","","",null,null],[5,"snd_ctl_elem_info_set_item","","",null,null],[5,"snd_ctl_elem_info_get_item_name","","",null,null],[5,"snd_ctl_elem_info_get_dimensions","","",null,null],[5,"snd_ctl_elem_info_get_dimension","","",null,null],[5,"snd_ctl_elem_info_set_dimension","","",null,null],[5,"snd_ctl_elem_info_get_id","","",null,null],[5,"snd_ctl_elem_info_get_numid","","",null,null],[5,"snd_ctl_elem_info_get_interface","","",null,null],[5,"snd_ctl_elem_info_get_device","","",null,null],[5,"snd_ctl_elem_info_get_subdevice","","",null,null],[5,"snd_ctl_elem_info_get_name","","",null,null],[5,"snd_ctl_elem_info_get_index","","",null,null],[5,"snd_ctl_elem_info_set_id","","",null,null],[5,"snd_ctl_elem_info_set_numid","","",null,null],[5,"snd_ctl_elem_info_set_interface","","",null,null],[5,"snd_ctl_elem_info_set_device","","",null,null],[5,"snd_ctl_elem_info_set_subdevice","","",null,null],[5,"snd_ctl_elem_info_set_name","","",null,null],[5,"snd_ctl_elem_info_set_index","","",null,null],[5,"snd_ctl_add_integer_elem_set","","",null,null],[5,"snd_ctl_add_integer64_elem_set","","",null,null],[5,"snd_ctl_add_boolean_elem_set","","",null,null],[5,"snd_ctl_add_enumerated_elem_set","","",null,null],[5,"snd_ctl_add_bytes_elem_set","","",null,null],[5,"snd_ctl_elem_add_integer","","",null,null],[5,"snd_ctl_elem_add_integer64","","",null,null],[5,"snd_ctl_elem_add_boolean","","",null,null],[5,"snd_ctl_elem_add_enumerated","","",null,null],[5,"snd_ctl_elem_add_iec958","","",null,null],[5,"snd_ctl_elem_remove","","",null,null],[5,"snd_ctl_elem_value_sizeof","","",null,null],[5,"snd_ctl_elem_value_malloc","","",null,null],[5,"snd_ctl_elem_value_free","","",null,null],[5,"snd_ctl_elem_value_clear","","",null,null],[5,"snd_ctl_elem_value_copy","","",null,null],[5,"snd_ctl_elem_value_compare","","",null,null],[5,"snd_ctl_elem_value_get_id","","",null,null],[5,"snd_ctl_elem_value_get_numid","","",null,null],[5,"snd_ctl_elem_value_get_interface","","",null,null],[5,"snd_ctl_elem_value_get_device","","",null,null],[5,"snd_ctl_elem_value_get_subdevice","","",null,null],[5,"snd_ctl_elem_value_get_name","","",null,null],[5,"snd_ctl_elem_value_get_index","","",null,null],[5,"snd_ctl_elem_value_set_id","","",null,null],[5,"snd_ctl_elem_value_set_numid","","",null,null],[5,"snd_ctl_elem_value_set_interface","","",null,null],[5,"snd_ctl_elem_value_set_device","","",null,null],[5,"snd_ctl_elem_value_set_subdevice","","",null,null],[5,"snd_ctl_elem_value_set_name","","",null,null],[5,"snd_ctl_elem_value_set_index","","",null,null],[5,"snd_ctl_elem_value_get_boolean","","",null,null],[5,"snd_ctl_elem_value_get_integer","","",null,null],[5,"snd_ctl_elem_value_get_integer64","","",null,null],[5,"snd_ctl_elem_value_get_enumerated","","",null,null],[5,"snd_ctl_elem_value_get_byte","","",null,null],[5,"snd_ctl_elem_value_set_boolean","","",null,null],[5,"snd_ctl_elem_value_set_integer","","",null,null],[5,"snd_ctl_elem_value_set_integer64","","",null,null],[5,"snd_ctl_elem_value_set_enumerated","","",null,null],[5,"snd_ctl_elem_value_set_byte","","",null,null],[5,"snd_ctl_elem_set_bytes","","",null,null],[5,"snd_ctl_elem_value_get_bytes","","",null,null],[5,"snd_ctl_elem_value_get_iec958","","",null,null],[5,"snd_ctl_elem_value_set_iec958","","",null,null],[5,"snd_tlv_parse_dB_info","","",null,null],[5,"snd_tlv_get_dB_range","","",null,null],[5,"snd_tlv_convert_to_dB","","",null,null],[5,"snd_tlv_convert_from_dB","","",null,null],[5,"snd_ctl_get_dB_range","","",null,null],[5,"snd_ctl_convert_to_dB","","",null,null],[5,"snd_ctl_convert_from_dB","","",null,null],[5,"snd_hctl_compare_fast","","",null,null],[5,"snd_hctl_open","","",null,null],[5,"snd_hctl_open_ctl","","",null,null],[5,"snd_hctl_close","","",null,null],[5,"snd_hctl_nonblock","","",null,null],[5,"snd_hctl_poll_descriptors_count","","",null,null],[5,"snd_hctl_poll_descriptors","","",null,null],[5,"snd_hctl_poll_descriptors_revents","","",null,null],[5,"snd_hctl_get_count","","",null,null],[5,"snd_hctl_set_compare","","",null,null],[5,"snd_hctl_first_elem","","",null,null],[5,"snd_hctl_last_elem","","",null,null],[5,"snd_hctl_find_elem","","",null,null],[5,"snd_hctl_set_callback","","",null,null],[5,"snd_hctl_set_callback_private","","",null,null],[5,"snd_hctl_get_callback_private","","",null,null],[5,"snd_hctl_load","","",null,null],[5,"snd_hctl_free","","",null,null],[5,"snd_hctl_handle_events","","",null,null],[5,"snd_hctl_name","","",null,null],[5,"snd_hctl_wait","","",null,null],[5,"snd_hctl_ctl","","",null,null],[5,"snd_hctl_elem_next","","",null,null],[5,"snd_hctl_elem_prev","","",null,null],[5,"snd_hctl_elem_info","","",null,null],[5,"snd_hctl_elem_read","","",null,null],[5,"snd_hctl_elem_write","","",null,null],[5,"snd_hctl_elem_tlv_read","","",null,null],[5,"snd_hctl_elem_tlv_write","","",null,null],[5,"snd_hctl_elem_tlv_command","","",null,null],[5,"snd_hctl_elem_get_hctl","","",null,null],[5,"snd_hctl_elem_get_id","","",null,null],[5,"snd_hctl_elem_get_numid","","",null,null],[5,"snd_hctl_elem_get_interface","","",null,null],[5,"snd_hctl_elem_get_device","","",null,null],[5,"snd_hctl_elem_get_subdevice","","",null,null],[5,"snd_hctl_elem_get_name","","",null,null],[5,"snd_hctl_elem_get_index","","",null,null],[5,"snd_hctl_elem_set_callback","","",null,null],[5,"snd_hctl_elem_get_callback_private","","",null,null],[5,"snd_hctl_elem_set_callback_private","","",null,null],[5,"snd_sctl_build","","\\\\defgroup SControl Setup Control Interface \\\\ingroup …",null,null],[5,"snd_sctl_free","","",null,null],[5,"snd_sctl_install","","",null,null],[5,"snd_sctl_remove","","",null,null],[5,"snd_mixer_open","","",null,null],[5,"snd_mixer_close","","",null,null],[5,"snd_mixer_first_elem","","",null,null],[5,"snd_mixer_last_elem","","",null,null],[5,"snd_mixer_handle_events","","",null,null],[5,"snd_mixer_attach","","",null,null],[5,"snd_mixer_attach_hctl","","",null,null],[5,"snd_mixer_detach","","",null,null],[5,"snd_mixer_detach_hctl","","",null,null],[5,"snd_mixer_get_hctl","","",null,null],[5,"snd_mixer_poll_descriptors_count","","",null,null],[5,"snd_mixer_poll_descriptors","","",null,null],[5,"snd_mixer_poll_descriptors_revents","","",null,null],[5,"snd_mixer_load","","",null,null],[5,"snd_mixer_free","","",null,null],[5,"snd_mixer_wait","","",null,null],[5,"snd_mixer_set_compare","","",null,null],[5,"snd_mixer_set_callback","","",null,null],[5,"snd_mixer_get_callback_private","","",null,null],[5,"snd_mixer_set_callback_private","","",null,null],[5,"snd_mixer_get_count","","",null,null],[5,"snd_mixer_class_unregister","","",null,null],[5,"snd_mixer_elem_next","","",null,null],[5,"snd_mixer_elem_prev","","",null,null],[5,"snd_mixer_elem_set_callback","","",null,null],[5,"snd_mixer_elem_get_callback_private","","",null,null],[5,"snd_mixer_elem_set_callback_private","","",null,null],[5,"snd_mixer_elem_get_type","","",null,null],[5,"snd_mixer_class_register","","",null,null],[5,"snd_mixer_elem_new","","",null,null],[5,"snd_mixer_elem_add","","",null,null],[5,"snd_mixer_elem_remove","","",null,null],[5,"snd_mixer_elem_free","","",null,null],[5,"snd_mixer_elem_info","","",null,null],[5,"snd_mixer_elem_value","","",null,null],[5,"snd_mixer_elem_attach","","",null,null],[5,"snd_mixer_elem_detach","","",null,null],[5,"snd_mixer_elem_empty","","",null,null],[5,"snd_mixer_elem_get_private","","",null,null],[5,"snd_mixer_class_sizeof","","",null,null],[5,"snd_mixer_class_malloc","","",null,null],[5,"snd_mixer_class_free","","",null,null],[5,"snd_mixer_class_copy","","",null,null],[5,"snd_mixer_class_get_mixer","","",null,null],[5,"snd_mixer_class_get_event","","",null,null],[5,"snd_mixer_class_get_private","","",null,null],[5,"snd_mixer_class_get_compare","","",null,null],[5,"snd_mixer_class_set_event","","",null,null],[5,"snd_mixer_class_set_private","","",null,null],[5,"snd_mixer_class_set_private_free","","",null,null],[5,"snd_mixer_class_set_compare","","",null,null],[5,"snd_mixer_selem_channel_name","","",null,null],[5,"snd_mixer_selem_register","","",null,null],[5,"snd_mixer_selem_get_id","","",null,null],[5,"snd_mixer_selem_get_name","","",null,null],[5,"snd_mixer_selem_get_index","","",null,null],[5,"snd_mixer_find_selem","","",null,null],[5,"snd_mixer_selem_is_active","","",null,null],[5,"snd_mixer_selem_is_playback_mono","","",null,null],[5,"snd_mixer_selem_has_playback_channel","","",null,null],[5,"snd_mixer_selem_is_capture_mono","","",null,null],[5,"snd_mixer_selem_has_capture_channel","","",null,null],[5,"snd_mixer_selem_get_capture_group","","",null,null],[5,"snd_mixer_selem_has_common_volume","","",null,null],[5,"snd_mixer_selem_has_playback_volume","","",null,null],[5,"snd_mixer_selem_has_playback_volume_joined","","",null,null],[5,"snd_mixer_selem_has_capture_volume","","",null,null],[5,"snd_mixer_selem_has_capture_volume_joined","","",null,null],[5,"snd_mixer_selem_has_common_switch","","",null,null],[5,"snd_mixer_selem_has_playback_switch","","",null,null],[5,"snd_mixer_selem_has_playback_switch_joined","","",null,null],[5,"snd_mixer_selem_has_capture_switch","","",null,null],[5,"snd_mixer_selem_has_capture_switch_joined","","",null,null],[5,"snd_mixer_selem_has_capture_switch_exclusive","","",null,null],[5,"snd_mixer_selem_ask_playback_vol_dB","","",null,null],[5,"snd_mixer_selem_ask_capture_vol_dB","","",null,null],[5,"snd_mixer_selem_ask_playback_dB_vol","","",null,null],[5,"snd_mixer_selem_ask_capture_dB_vol","","",null,null],[5,"snd_mixer_selem_get_playback_volume","","",null,null],[5,"snd_mixer_selem_get_capture_volume","","",null,null],[5,"snd_mixer_selem_get_playback_dB","","",null,null],[5,"snd_mixer_selem_get_capture_dB","","",null,null],[5,"snd_mixer_selem_get_playback_switch","","",null,null],[5,"snd_mixer_selem_get_capture_switch","","",null,null],[5,"snd_mixer_selem_set_playback_volume","","",null,null],[5,"snd_mixer_selem_set_capture_volume","","",null,null],[5,"snd_mixer_selem_set_playback_dB","","",null,null],[5,"snd_mixer_selem_set_capture_dB","","",null,null],[5,"snd_mixer_selem_set_playback_volume_all","","",null,null],[5,"snd_mixer_selem_set_capture_volume_all","","",null,null],[5,"snd_mixer_selem_set_playback_dB_all","","",null,null],[5,"snd_mixer_selem_set_capture_dB_all","","",null,null],[5,"snd_mixer_selem_set_playback_switch","","",null,null],[5,"snd_mixer_selem_set_capture_switch","","",null,null],[5,"snd_mixer_selem_set_playback_switch_all","","",null,null],[5,"snd_mixer_selem_set_capture_switch_all","","",null,null],[5,"snd_mixer_selem_get_playback_volume_range","","",null,null],[5,"snd_mixer_selem_get_playback_dB_range","","",null,null],[5,"snd_mixer_selem_set_playback_volume_range","","",null,null],[5,"snd_mixer_selem_get_capture_volume_range","","",null,null],[5,"snd_mixer_selem_get_capture_dB_range","","",null,null],[5,"snd_mixer_selem_set_capture_volume_range","","",null,null],[5,"snd_mixer_selem_is_enumerated","","",null,null],[5,"snd_mixer_selem_is_enum_playback","","",null,null],[5,"snd_mixer_selem_is_enum_capture","","",null,null],[5,"snd_mixer_selem_get_enum_items","","",null,null],[5,"snd_mixer_selem_get_enum_item_name","","",null,null],[5,"snd_mixer_selem_get_enum_item","","",null,null],[5,"snd_mixer_selem_set_enum_item","","",null,null],[5,"snd_mixer_selem_id_sizeof","","",null,null],[5,"snd_mixer_selem_id_malloc","","",null,null],[5,"snd_mixer_selem_id_free","","",null,null],[5,"snd_mixer_selem_id_copy","","",null,null],[5,"snd_mixer_selem_id_get_name","","",null,null],[5,"snd_mixer_selem_id_get_index","","",null,null],[5,"snd_mixer_selem_id_set_name","","",null,null],[5,"snd_mixer_selem_id_set_index","","",null,null],[5,"snd_mixer_selem_id_parse","","",null,null],[5,"snd_seq_open","","",null,null],[5,"snd_seq_open_lconf","","",null,null],[5,"snd_seq_name","","",null,null],[5,"snd_seq_type","","",null,null],[5,"snd_seq_close","","",null,null],[5,"snd_seq_poll_descriptors_count","","",null,null],[5,"snd_seq_poll_descriptors","","",null,null],[5,"snd_seq_poll_descriptors_revents","","",null,null],[5,"snd_seq_nonblock","","",null,null],[5,"snd_seq_client_id","","",null,null],[5,"snd_seq_get_output_buffer_size","","",null,null],[5,"snd_seq_get_input_buffer_size","","",null,null],[5,"snd_seq_set_output_buffer_size","","",null,null],[5,"snd_seq_set_input_buffer_size","","",null,null],[5,"snd_seq_system_info_sizeof","","",null,null],[5,"snd_seq_system_info_malloc","","",null,null],[5,"snd_seq_system_info_free","","",null,null],[5,"snd_seq_system_info_copy","","",null,null],[5,"snd_seq_system_info_get_queues","","",null,null],[5,"snd_seq_system_info_get_clients","","",null,null],[5,"snd_seq_system_info_get_ports","","",null,null],[5,"snd_seq_system_info_get_channels","","",null,null],[5,"snd_seq_system_info_get_cur_clients","","",null,null],[5,"snd_seq_system_info_get_cur_queues","","",null,null],[5,"snd_seq_system_info","","",null,null],[5,"snd_seq_client_info_sizeof","","",null,null],[5,"snd_seq_client_info_malloc","","",null,null],[5,"snd_seq_client_info_free","","",null,null],[5,"snd_seq_client_info_copy","","",null,null],[5,"snd_seq_client_info_get_client","","",null,null],[5,"snd_seq_client_info_get_type","","",null,null],[5,"snd_seq_client_info_get_name","","",null,null],[5,"snd_seq_client_info_get_broadcast_filter","","",null,null],[5,"snd_seq_client_info_get_error_bounce","","",null,null],[5,"snd_seq_client_info_get_card","","",null,null],[5,"snd_seq_client_info_get_pid","","",null,null],[5,"snd_seq_client_info_get_event_filter","","",null,null],[5,"snd_seq_client_info_get_num_ports","","",null,null],[5,"snd_seq_client_info_get_event_lost","","",null,null],[5,"snd_seq_client_info_set_client","","",null,null],[5,"snd_seq_client_info_set_name","","",null,null],[5,"snd_seq_client_info_set_broadcast_filter","","",null,null],[5,"snd_seq_client_info_set_error_bounce","","",null,null],[5,"snd_seq_client_info_set_event_filter","","",null,null],[5,"snd_seq_client_info_event_filter_clear","","",null,null],[5,"snd_seq_client_info_event_filter_add","","",null,null],[5,"snd_seq_client_info_event_filter_del","","",null,null],[5,"snd_seq_client_info_event_filter_check","","",null,null],[5,"snd_seq_get_client_info","","",null,null],[5,"snd_seq_get_any_client_info","","",null,null],[5,"snd_seq_set_client_info","","",null,null],[5,"snd_seq_query_next_client","","",null,null],[5,"snd_seq_client_pool_sizeof","","",null,null],[5,"snd_seq_client_pool_malloc","","",null,null],[5,"snd_seq_client_pool_free","","",null,null],[5,"snd_seq_client_pool_copy","","",null,null],[5,"snd_seq_client_pool_get_client","","",null,null],[5,"snd_seq_client_pool_get_output_pool","","",null,null],[5,"snd_seq_client_pool_get_input_pool","","",null,null],[5,"snd_seq_client_pool_get_output_room","","",null,null],[5,"snd_seq_client_pool_get_output_free","","",null,null],[5,"snd_seq_client_pool_get_input_free","","",null,null],[5,"snd_seq_client_pool_set_output_pool","","",null,null],[5,"snd_seq_client_pool_set_input_pool","","",null,null],[5,"snd_seq_client_pool_set_output_room","","",null,null],[5,"snd_seq_get_client_pool","","",null,null],[5,"snd_seq_set_client_pool","","",null,null],[5,"snd_seq_port_info_sizeof","","",null,null],[5,"snd_seq_port_info_malloc","","",null,null],[5,"snd_seq_port_info_free","","",null,null],[5,"snd_seq_port_info_copy","","",null,null],[5,"snd_seq_port_info_get_client","","",null,null],[5,"snd_seq_port_info_get_port","","",null,null],[5,"snd_seq_port_info_get_addr","","",null,null],[5,"snd_seq_port_info_get_name","","",null,null],[5,"snd_seq_port_info_get_capability","","",null,null],[5,"snd_seq_port_info_get_type","","",null,null],[5,"snd_seq_port_info_get_midi_channels","","",null,null],[5,"snd_seq_port_info_get_midi_voices","","",null,null],[5,"snd_seq_port_info_get_synth_voices","","",null,null],[5,"snd_seq_port_info_get_read_use","","",null,null],[5,"snd_seq_port_info_get_write_use","","",null,null],[5,"snd_seq_port_info_get_port_specified","","",null,null],[5,"snd_seq_port_info_get_timestamping","","",null,null],[5,"snd_seq_port_info_get_timestamp_real","","",null,null],[5,"snd_seq_port_info_get_timestamp_queue","","",null,null],[5,"snd_seq_port_info_set_client","","",null,null],[5,"snd_seq_port_info_set_port","","",null,null],[5,"snd_seq_port_info_set_addr","","",null,null],[5,"snd_seq_port_info_set_name","","",null,null],[5,"snd_seq_port_info_set_capability","","",null,null],[5,"snd_seq_port_info_set_type","","",null,null],[5,"snd_seq_port_info_set_midi_channels","","",null,null],[5,"snd_seq_port_info_set_midi_voices","","",null,null],[5,"snd_seq_port_info_set_synth_voices","","",null,null],[5,"snd_seq_port_info_set_port_specified","","",null,null],[5,"snd_seq_port_info_set_timestamping","","",null,null],[5,"snd_seq_port_info_set_timestamp_real","","",null,null],[5,"snd_seq_port_info_set_timestamp_queue","","",null,null],[5,"snd_seq_create_port","","",null,null],[5,"snd_seq_delete_port","","",null,null],[5,"snd_seq_get_port_info","","",null,null],[5,"snd_seq_get_any_port_info","","",null,null],[5,"snd_seq_set_port_info","","",null,null],[5,"snd_seq_query_next_port","","",null,null],[5,"snd_seq_port_subscribe_sizeof","","",null,null],[5,"snd_seq_port_subscribe_malloc","","",null,null],[5,"snd_seq_port_subscribe_free","","",null,null],[5,"snd_seq_port_subscribe_copy","","",null,null],[5,"snd_seq_port_subscribe_get_sender","","",null,null],[5,"snd_seq_port_subscribe_get_dest","","",null,null],[5,"snd_seq_port_subscribe_get_queue","","",null,null],[5,"snd_seq_port_subscribe_get_exclusive","","",null,null],[5,"snd_seq_port_subscribe_get_time_update","","",null,null],[5,"snd_seq_port_subscribe_get_time_real","","",null,null],[5,"snd_seq_port_subscribe_set_sender","","",null,null],[5,"snd_seq_port_subscribe_set_dest","","",null,null],[5,"snd_seq_port_subscribe_set_queue","","",null,null],[5,"snd_seq_port_subscribe_set_exclusive","","",null,null],[5,"snd_seq_port_subscribe_set_time_update","","",null,null],[5,"snd_seq_port_subscribe_set_time_real","","",null,null],[5,"snd_seq_get_port_subscription","","",null,null],[5,"snd_seq_subscribe_port","","",null,null],[5,"snd_seq_unsubscribe_port","","",null,null],[5,"snd_seq_query_subscribe_sizeof","","",null,null],[5,"snd_seq_query_subscribe_malloc","","",null,null],[5,"snd_seq_query_subscribe_free","","",null,null],[5,"snd_seq_query_subscribe_copy","","",null,null],[5,"snd_seq_query_subscribe_get_client","","",null,null],[5,"snd_seq_query_subscribe_get_port","","",null,null],[5,"snd_seq_query_subscribe_get_root","","",null,null],[5,"snd_seq_query_subscribe_get_type","","",null,null],[5,"snd_seq_query_subscribe_get_index","","",null,null],[5,"snd_seq_query_subscribe_get_num_subs","","",null,null],[5,"snd_seq_query_subscribe_get_addr","","",null,null],[5,"snd_seq_query_subscribe_get_queue","","",null,null],[5,"snd_seq_query_subscribe_get_exclusive","","",null,null],[5,"snd_seq_query_subscribe_get_time_update","","",null,null],[5,"snd_seq_query_subscribe_get_time_real","","",null,null],[5,"snd_seq_query_subscribe_set_client","","",null,null],[5,"snd_seq_query_subscribe_set_port","","",null,null],[5,"snd_seq_query_subscribe_set_root","","",null,null],[5,"snd_seq_query_subscribe_set_type","","",null,null],[5,"snd_seq_query_subscribe_set_index","","",null,null],[5,"snd_seq_query_port_subscribers","","",null,null],[5,"snd_seq_queue_info_sizeof","","",null,null],[5,"snd_seq_queue_info_malloc","","",null,null],[5,"snd_seq_queue_info_free","","",null,null],[5,"snd_seq_queue_info_copy","","",null,null],[5,"snd_seq_queue_info_get_queue","","",null,null],[5,"snd_seq_queue_info_get_name","","",null,null],[5,"snd_seq_queue_info_get_owner","","",null,null],[5,"snd_seq_queue_info_get_locked","","",null,null],[5,"snd_seq_queue_info_get_flags","","",null,null],[5,"snd_seq_queue_info_set_name","","",null,null],[5,"snd_seq_queue_info_set_owner","","",null,null],[5,"snd_seq_queue_info_set_locked","","",null,null],[5,"snd_seq_queue_info_set_flags","","",null,null],[5,"snd_seq_create_queue","","",null,null],[5,"snd_seq_alloc_named_queue","","",null,null],[5,"snd_seq_alloc_queue","","",null,null],[5,"snd_seq_free_queue","","",null,null],[5,"snd_seq_get_queue_info","","",null,null],[5,"snd_seq_set_queue_info","","",null,null],[5,"snd_seq_query_named_queue","","",null,null],[5,"snd_seq_get_queue_usage","","",null,null],[5,"snd_seq_set_queue_usage","","",null,null],[5,"snd_seq_queue_status_sizeof","","",null,null],[5,"snd_seq_queue_status_malloc","","",null,null],[5,"snd_seq_queue_status_free","","",null,null],[5,"snd_seq_queue_status_copy","","",null,null],[5,"snd_seq_queue_status_get_queue","","",null,null],[5,"snd_seq_queue_status_get_events","","",null,null],[5,"snd_seq_queue_status_get_tick_time","","",null,null],[5,"snd_seq_queue_status_get_real_time","","",null,null],[5,"snd_seq_queue_status_get_status","","",null,null],[5,"snd_seq_get_queue_status","","",null,null],[5,"snd_seq_queue_tempo_sizeof","","",null,null],[5,"snd_seq_queue_tempo_malloc","","",null,null],[5,"snd_seq_queue_tempo_free","","",null,null],[5,"snd_seq_queue_tempo_copy","","",null,null],[5,"snd_seq_queue_tempo_get_queue","","",null,null],[5,"snd_seq_queue_tempo_get_tempo","","",null,null],[5,"snd_seq_queue_tempo_get_ppq","","",null,null],[5,"snd_seq_queue_tempo_get_skew","","",null,null],[5,"snd_seq_queue_tempo_get_skew_base","","",null,null],[5,"snd_seq_queue_tempo_set_tempo","","",null,null],[5,"snd_seq_queue_tempo_set_ppq","","",null,null],[5,"snd_seq_queue_tempo_set_skew","","",null,null],[5,"snd_seq_queue_tempo_set_skew_base","","",null,null],[5,"snd_seq_get_queue_tempo","","",null,null],[5,"snd_seq_set_queue_tempo","","",null,null],[5,"snd_seq_queue_timer_sizeof","","",null,null],[5,"snd_seq_queue_timer_malloc","","",null,null],[5,"snd_seq_queue_timer_free","","",null,null],[5,"snd_seq_queue_timer_copy","","",null,null],[5,"snd_seq_queue_timer_get_queue","","",null,null],[5,"snd_seq_queue_timer_get_type","","",null,null],[5,"snd_seq_queue_timer_get_id","","",null,null],[5,"snd_seq_queue_timer_get_resolution","","",null,null],[5,"snd_seq_queue_timer_set_type","","",null,null],[5,"snd_seq_queue_timer_set_id","","",null,null],[5,"snd_seq_queue_timer_set_resolution","","",null,null],[5,"snd_seq_get_queue_timer","","",null,null],[5,"snd_seq_set_queue_timer","","",null,null],[5,"snd_seq_free_event","","\\\\defgroup SeqEvent Sequencer Event API Sequencer Event API…",null,null],[5,"snd_seq_event_length","","",null,null],[5,"snd_seq_event_output","","",null,null],[5,"snd_seq_event_output_buffer","","",null,null],[5,"snd_seq_event_output_direct","","",null,null],[5,"snd_seq_event_input","","",null,null],[5,"snd_seq_event_input_pending","","",null,null],[5,"snd_seq_drain_output","","",null,null],[5,"snd_seq_event_output_pending","","",null,null],[5,"snd_seq_extract_output","","",null,null],[5,"snd_seq_drop_output","","",null,null],[5,"snd_seq_drop_output_buffer","","",null,null],[5,"snd_seq_drop_input","","",null,null],[5,"snd_seq_drop_input_buffer","","",null,null],[5,"snd_seq_remove_events_sizeof","","",null,null],[5,"snd_seq_remove_events_malloc","","",null,null],[5,"snd_seq_remove_events_free","","",null,null],[5,"snd_seq_remove_events_copy","","",null,null],[5,"snd_seq_remove_events_get_condition","","",null,null],[5,"snd_seq_remove_events_get_queue","","",null,null],[5,"snd_seq_remove_events_get_time","","",null,null],[5,"snd_seq_remove_events_get_dest","","",null,null],[5,"snd_seq_remove_events_get_channel","","",null,null],[5,"snd_seq_remove_events_get_event_type","","",null,null],[5,"snd_seq_remove_events_get_tag","","",null,null],[5,"snd_seq_remove_events_set_condition","","",null,null],[5,"snd_seq_remove_events_set_queue","","",null,null],[5,"snd_seq_remove_events_set_time","","",null,null],[5,"snd_seq_remove_events_set_dest","","",null,null],[5,"snd_seq_remove_events_set_channel","","",null,null],[5,"snd_seq_remove_events_set_event_type","","",null,null],[5,"snd_seq_remove_events_set_tag","","",null,null],[5,"snd_seq_remove_events","","",null,null],[5,"snd_seq_set_bit","","\\\\defgroup SeqMisc Sequencer Miscellaneous Sequencer …",null,null],[5,"snd_seq_unset_bit","","",null,null],[5,"snd_seq_change_bit","","",null,null],[5,"snd_seq_get_bit","","",null,null],[5,"snd_seq_control_queue","","",null,null],[5,"snd_seq_create_simple_port","","",null,null],[5,"snd_seq_delete_simple_port","","",null,null],[5,"snd_seq_connect_from","","",null,null],[5,"snd_seq_connect_to","","",null,null],[5,"snd_seq_disconnect_from","","",null,null],[5,"snd_seq_disconnect_to","","",null,null],[5,"snd_seq_set_client_name","","",null,null],[5,"snd_seq_set_client_event_filter","","",null,null],[5,"snd_seq_set_client_pool_output","","",null,null],[5,"snd_seq_set_client_pool_output_room","","",null,null],[5,"snd_seq_set_client_pool_input","","",null,null],[5,"snd_seq_sync_output_queue","","",null,null],[5,"snd_seq_parse_address","","",null,null],[5,"snd_seq_reset_pool_output","","",null,null],[5,"snd_seq_reset_pool_input","","",null,null],[5,"snd_midi_event_new","","",null,null],[5,"snd_midi_event_resize_buffer","","",null,null],[5,"snd_midi_event_free","","",null,null],[5,"snd_midi_event_init","","",null,null],[5,"snd_midi_event_reset_encode","","",null,null],[5,"snd_midi_event_reset_decode","","",null,null],[5,"snd_midi_event_no_status","","",null,null],[5,"snd_midi_event_encode","","",null,null],[5,"snd_midi_event_encode_byte","","",null,null],[5,"snd_midi_event_decode","","",null,null],[17,"SND_PCM_NONBLOCK","","",null,null],[17,"SND_PCM_ASYNC","","",null,null],[17,"SND_SEQ_OPEN_OUTPUT","","",null,null],[17,"SND_SEQ_OPEN_INPUT","","",null,null],[17,"SND_SEQ_OPEN_DUPLEX","","",null,null],[17,"SND_SEQ_NONBLOCK","","",null,null],[17,"SND_SEQ_ADDRESS_BROADCAST","","",null,null],[17,"SND_SEQ_ADDRESS_SUBSCRIBERS","","",null,null],[17,"SND_SEQ_ADDRESS_UNKNOWN","","",null,null],[17,"SND_SEQ_QUEUE_DIRECT","","",null,null],[17,"SND_SEQ_TIME_MODE_MASK","","",null,null],[17,"SND_SEQ_TIME_STAMP_MASK","","",null,null],[17,"SND_SEQ_TIME_MODE_REL","","",null,null],[17,"SND_SEQ_TIME_STAMP_REAL","","",null,null],[17,"SND_SEQ_TIME_STAMP_TICK","","",null,null],[17,"SND_SEQ_TIME_MODE_ABS","","",null,null],[17,"SND_SEQ_CLIENT_SYSTEM","","",null,null],[17,"SND_SEQ_PORT_SYSTEM_TIMER","","",null,null],[17,"SND_SEQ_PORT_SYSTEM_ANNOUNCE","","",null,null],[17,"SND_SEQ_PRIORITY_HIGH","","",null,null],[17,"SND_SEQ_EVENT_LENGTH_FIXED","","",null,null],[17,"SND_SEQ_EVENT_LENGTH_MASK","","",null,null],[17,"SND_SEQ_EVENT_LENGTH_VARIABLE","","",null,null],[17,"SND_SEQ_EVENT_LENGTH_VARUSR","","",null,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",0,null],[12,"fp_offset","","",0,null],[12,"overflow_arg_area","","",0,null],[12,"reg_save_area","","",0,null],[3,"__BindgenBitfieldUnit","","",null,null],[11,"new","","",1,[[]]],[11,"get_bit","","",1,[[["usize",15]],["bool",15]]],[11,"set_bit","","",1,[[["usize",15],["bool",15]]]],[11,"get","","",1,[[["usize",15],["u8",15]],["u64",15]]],[11,"set","","",1,[[["usize",15],["u64",15],["u8",15]]]],[3,"__IncompleteArrayField","","",null,null],[11,"new","","",2,[[]]],[11,"as_ptr","","",2,[[]]],[11,"as_mut_ptr","","",2,[[]]],[11,"as_slice","","",2,[[["usize",15]]]],[11,"as_mut_slice","","",2,[[["usize",15]]]],[3,"snd_dlsym_link","","",null,null],[12,"next","","",3,null],[12,"dlsym_name","","",3,null],[12,"dlsym_ptr","","",3,null],[3,"_snd_async_handler","","",null,null],[6,"snd_async_handler_t","","\\\\brief Internal structure for an async notification …",null,null],[6,"snd_async_callback_t","","\\\\brief Async notification callback.",null,null],[3,"snd_shm_area","","",null,null],[6,"snd_timestamp_t","","Timestamp",null,null],[6,"snd_htimestamp_t","","Hi-res timestamp",null,null],[3,"_snd_input","","",null,null],[6,"snd_input_t","","\\\\brief Internal structure for an input object.",null,null],[17,"SND_INPUT_STDIO","","Input from a stdio stream.",null,null],[17,"SND_INPUT_BUFFER","","Input from a memory buffer.",null,null],[6,"_snd_input_type","","Input type.",null,null],[3,"_snd_output","","",null,null],[6,"snd_output_t","","\\\\brief Internal structure for an output object.",null,null],[17,"SND_OUTPUT_STDIO","","Output to a stdio stream.",null,null],[17,"SND_OUTPUT_BUFFER","","Output to a memory buffer.",null,null],[6,"_snd_output_type","","Output type.",null,null],[6,"snd_lib_error_handler_t","","\\\\brief Error handler callback. \\\\param file Source file …",null,null],[6,"snd_local_error_handler_t","","Local error handler function type",null,null],[17,"SND_CONFIG_TYPE_INTEGER","","Integer number.",null,null],[17,"SND_CONFIG_TYPE_INTEGER64","","64-bit integer number.",null,null],[17,"SND_CONFIG_TYPE_REAL","","Real number.",null,null],[17,"SND_CONFIG_TYPE_STRING","","Character string.",null,null],[17,"SND_CONFIG_TYPE_POINTER","","Pointer (runtime only, cannot be saved).",null,null],[17,"SND_CONFIG_TYPE_COMPOUND","","Compound node.",null,null],[6,"_snd_config_type","","\\\\brief Configuration node type.",null,null],[3,"_snd_config","","",null,null],[6,"snd_config_t","","\\\\brief Internal structure for a configuration node object.",null,null],[3,"_snd_config_iterator","","",null,null],[6,"snd_config_iterator_t","","\\\\brief Type for a configuration compound iterator.",null,null],[3,"_snd_config_update","","",null,null],[6,"snd_config_update_t","","\\\\brief Internal structure for a configuration private …",null,null],[6,"snd_devname_t","","Device-name list element",null,null],[3,"snd_devname","","Device-name list element (definition)",null,null],[12,"name","","< Device name string",4,null],[12,"comment","","< Comments",4,null],[12,"next","","< Next pointer",4,null],[3,"_snd_pcm_info","","",null,null],[6,"snd_pcm_info_t","","PCM generic info container",null,null],[3,"_snd_pcm_hw_params","","",null,null],[6,"snd_pcm_hw_params_t","","PCM hardware configuration space container",null,null],[3,"_snd_pcm_sw_params","","",null,null],[6,"snd_pcm_sw_params_t","","PCM software configuration container",null,null],[3,"_snd_pcm_status","","",null,null],[6,"snd_pcm_status_t","","PCM status container",null,null],[3,"_snd_pcm_access_mask","","",null,null],[6,"snd_pcm_access_mask_t","","PCM access types mask",null,null],[3,"_snd_pcm_format_mask","","",null,null],[6,"snd_pcm_format_mask_t","","PCM formats mask",null,null],[3,"_snd_pcm_subformat_mask","","",null,null],[6,"snd_pcm_subformat_mask_t","","PCM subformats mask",null,null],[17,"SND_PCM_CLASS_GENERIC","","standard device",null,null],[17,"SND_PCM_CLASS_MULTI","","multichannel device",null,null],[17,"SND_PCM_CLASS_MODEM","","software modem device",null,null],[17,"SND_PCM_CLASS_DIGITIZER","","digitizer device",null,null],[17,"SND_PCM_CLASS_LAST","","digitizer device",null,null],[6,"_snd_pcm_class","","PCM class",null,null],[17,"SND_PCM_SUBCLASS_GENERIC_MIX","","subdevices are mixed together",null,null],[17,"SND_PCM_SUBCLASS_MULTI_MIX","","multichannel subdevices are mixed together",null,null],[17,"SND_PCM_SUBCLASS_LAST","","multichannel subdevices are mixed together",null,null],[6,"_snd_pcm_subclass","","PCM subclass",null,null],[17,"SND_PCM_STREAM_PLAYBACK","","Playback stream",null,null],[17,"SND_PCM_STREAM_CAPTURE","","Capture stream",null,null],[17,"SND_PCM_STREAM_LAST","","Capture stream",null,null],[6,"_snd_pcm_stream","","PCM stream (direction)",null,null],[17,"SND_PCM_ACCESS_MMAP_INTERLEAVED","","mmap access with simple interleaved channels",null,null],[17,"SND_PCM_ACCESS_MMAP_NONINTERLEAVED","","mmap access with simple non interleaved channels",null,null],[17,"SND_PCM_ACCESS_MMAP_COMPLEX","","mmap access with complex placement",null,null],[17,"SND_PCM_ACCESS_RW_INTERLEAVED","","snd_pcm_readi/snd_pcm_writei access",null,null],[17,"SND_PCM_ACCESS_RW_NONINTERLEAVED","","snd_pcm_readn/snd_pcm_writen access",null,null],[17,"SND_PCM_ACCESS_LAST","","snd_pcm_readn/snd_pcm_writen access",null,null],[6,"_snd_pcm_access","","PCM access type",null,null],[17,"SND_PCM_FORMAT_UNKNOWN","","Unknown",null,null],[17,"SND_PCM_FORMAT_S8","","Signed 8 bit",null,null],[17,"SND_PCM_FORMAT_U8","","Unsigned 8 bit",null,null],[17,"SND_PCM_FORMAT_S16_LE","","Signed 16 bit Little Endian",null,null],[17,"SND_PCM_FORMAT_S16_BE","","Signed 16 bit Big Endian",null,null],[17,"SND_PCM_FORMAT_U16_LE","","Unsigned 16 bit Little Endian",null,null],[17,"SND_PCM_FORMAT_U16_BE","","Unsigned 16 bit Big Endian",null,null],[17,"SND_PCM_FORMAT_S24_LE","","Signed 24 bit Little Endian using low three bytes in …",null,null],[17,"SND_PCM_FORMAT_S24_BE","","Signed 24 bit Big Endian using low three bytes in 32-bit …",null,null],[17,"SND_PCM_FORMAT_U24_LE","","Unsigned 24 bit Little Endian using low three bytes in …",null,null],[17,"SND_PCM_FORMAT_U24_BE","","Unsigned 24 bit Big Endian using low three bytes in …",null,null],[17,"SND_PCM_FORMAT_S32_LE","","Signed 32 bit Little Endian",null,null],[17,"SND_PCM_FORMAT_S32_BE","","Signed 32 bit Big Endian",null,null],[17,"SND_PCM_FORMAT_U32_LE","","Unsigned 32 bit Little Endian",null,null],[17,"SND_PCM_FORMAT_U32_BE","","Unsigned 32 bit Big Endian",null,null],[17,"SND_PCM_FORMAT_FLOAT_LE","","Float 32 bit Little Endian, Range -1.0 to 1.0",null,null],[17,"SND_PCM_FORMAT_FLOAT_BE","","Float 32 bit Big Endian, Range -1.0 to 1.0",null,null],[17,"SND_PCM_FORMAT_FLOAT64_LE","","Float 64 bit Little Endian, Range -1.0 to 1.0",null,null],[17,"SND_PCM_FORMAT_FLOAT64_BE","","Float 64 bit Big Endian, Range -1.0 to 1.0",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME_LE","","IEC-958 Little Endian",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME_BE","","IEC-958 Big Endian",null,null],[17,"SND_PCM_FORMAT_MU_LAW","","Mu-Law",null,null],[17,"SND_PCM_FORMAT_A_LAW","","A-Law",null,null],[17,"SND_PCM_FORMAT_IMA_ADPCM","","Ima-ADPCM",null,null],[17,"SND_PCM_FORMAT_MPEG","","MPEG",null,null],[17,"SND_PCM_FORMAT_GSM","","GSM",null,null],[17,"SND_PCM_FORMAT_S20_LE","","Signed 20bit Little Endian in 4bytes format, LSB justified",null,null],[17,"SND_PCM_FORMAT_S20_BE","","Signed 20bit Big Endian in 4bytes format, LSB justified",null,null],[17,"SND_PCM_FORMAT_U20_LE","","Unsigned 20bit Little Endian in 4bytes format, LSB …",null,null],[17,"SND_PCM_FORMAT_U20_BE","","Unsigned 20bit Big Endian in 4bytes format, LSB justified",null,null],[17,"SND_PCM_FORMAT_SPECIAL","","Special",null,null],[17,"SND_PCM_FORMAT_S24_3LE","","Signed 24bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S24_3BE","","Signed 24bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U24_3LE","","Unsigned 24bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U24_3BE","","Unsigned 24bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S20_3LE","","Signed 20bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S20_3BE","","Signed 20bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U20_3LE","","Unsigned 20bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U20_3BE","","Unsigned 20bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S18_3LE","","Signed 18bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S18_3BE","","Signed 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U18_3LE","","Unsigned 18bit Little Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_U18_3BE","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_G723_24","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_G723_24_1B","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_G723_40","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_G723_40_1B","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_DSD_U8","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_DSD_U16_LE","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_DSD_U32_LE","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_DSD_U16_BE","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_DSD_U32_BE","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_LAST","","Unsigned 18bit Big Endian in 3bytes format",null,null],[17,"SND_PCM_FORMAT_S16","","Signed 16 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_U16","","Unsigned 16 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_S24","","Signed 24 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_U24","","Unsigned 24 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_S32","","Signed 32 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_U32","","Unsigned 32 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_FLOAT","","Float 32 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_FLOAT64","","Float 64 bit CPU endian",null,null],[17,"SND_PCM_FORMAT_IEC958_SUBFRAME","","IEC-958 CPU Endian",null,null],[17,"SND_PCM_FORMAT_S20","","Signed 20bit in 4bytes format, LSB justified, CPU Endian",null,null],[17,"SND_PCM_FORMAT_U20","","Unsigned 20bit in 4bytes format, LSB justified, CPU Endian",null,null],[6,"_snd_pcm_format","","PCM sample format",null,null],[17,"SND_PCM_SUBFORMAT_STD","","Standard",null,null],[17,"SND_PCM_SUBFORMAT_LAST","","Standard",null,null],[6,"_snd_pcm_subformat","","PCM sample subformat",null,null],[17,"SND_PCM_STATE_OPEN","","Open",null,null],[17,"SND_PCM_STATE_SETUP","","Setup installed",null,null],[17,"SND_PCM_STATE_PREPARED","","Ready to start",null,null],[17,"SND_PCM_STATE_RUNNING","","Running",null,null],[17,"SND_PCM_STATE_XRUN","","Stopped: underrun (playback) or overrun (capture) detected",null,null],[17,"SND_PCM_STATE_DRAINING","","Draining: running (playback) or stopped (capture)",null,null],[17,"SND_PCM_STATE_PAUSED","","Paused",null,null],[17,"SND_PCM_STATE_SUSPENDED","","Hardware is suspended",null,null],[17,"SND_PCM_STATE_DISCONNECTED","","Hardware is disconnected",null,null],[17,"SND_PCM_STATE_LAST","","Hardware is disconnected",null,null],[17,"SND_PCM_STATE_PRIVATE1","","Private - used internally in the library - do not use",null,null],[6,"_snd_pcm_state","","PCM state",null,null],[17,"SND_PCM_START_DATA","","Automatic start on data read/write",null,null],[17,"SND_PCM_START_EXPLICIT","","Explicit start",null,null],[17,"SND_PCM_START_LAST","","Explicit start",null,null],[6,"_snd_pcm_start","","PCM start mode",null,null],[17,"SND_PCM_XRUN_NONE","","Xrun detection disabled",null,null],[17,"SND_PCM_XRUN_STOP","","Stop on xrun detection",null,null],[17,"SND_PCM_XRUN_LAST","","Stop on xrun detection",null,null],[6,"_snd_pcm_xrun","","PCM xrun mode",null,null],[17,"SND_PCM_TSTAMP_NONE","","No timestamp",null,null],[17,"SND_PCM_TSTAMP_ENABLE","","Update timestamp at every hardware position update",null,null],[17,"SND_PCM_TSTAMP_MMAP","","Equivalent with #SND_PCM_TSTAMP_ENABLE, just for …",null,null],[17,"SND_PCM_TSTAMP_LAST","","Equivalent with #SND_PCM_TSTAMP_ENABLE, just for …",null,null],[6,"_snd_pcm_tstamp","","PCM timestamp mode",null,null],[17,"SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY","","< gettimeofday equivalent",null,null],[17,"SND_PCM_TSTAMP_TYPE_MONOTONIC","","< posix_clock_monotonic equivalent",null,null],[17,"SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW","","< monotonic_raw (no NTP)",null,null],[17,"SND_PCM_TSTAMP_TYPE_LAST","","",null,null],[6,"_snd_pcm_tstamp_type","","",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_COMPAT","","first definition for backwards compatibility only, maps …",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_DEFAULT","","< DMA time, reported as per hw_ptr",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_LINK","","< link time reported by sample or wallclock counter, …",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_LINK_ABSOLUTE","","< link time reported by sample or wallclock counter, not …",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_LINK_ESTIMATED","","< link time estimated indirectly",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_LINK_SYNCHRONIZED","","< link time synchronized with system time",null,null],[17,"SND_PCM_AUDIO_TSTAMP_TYPE_LAST","","",null,null],[6,"_snd_pcm_audio_tstamp_type","","",null,null],[3,"_snd_pcm_audio_tstamp_config","","",null,null],[12,"_bitfield_1","","",5,null],[12,"__bindgen_padding_0","","",5,null],[11,"type_requested","","",5,[[],["c_uint",6]]],[11,"set_type_requested","","",5,[[["c_uint",6]]]],[11,"report_delay","","",5,[[],["c_uint",6]]],[11,"set_report_delay","","",5,[[["c_uint",6]]]],[11,"new_bitfield_1","","",5,[[["c_uint",6]],[["__bindgenbitfieldunit",3],["u8",15]]]],[6,"snd_pcm_audio_tstamp_config_t","","",null,null],[3,"_snd_pcm_audio_tstamp_report","","",null,null],[12,"_bitfield_1","","",6,null],[12,"accuracy","","",6,null],[11,"valid","","",6,[[],["c_uint",6]]],[11,"set_valid","","",6,[[["c_uint",6]]]],[11,"actual_type","","",6,[[],["c_uint",6]]],[11,"set_actual_type","","",6,[[["c_uint",6]]]],[11,"accuracy_report","","",6,[[],["c_uint",6]]],[11,"set_accuracy_report","","",6,[[["c_uint",6]]]],[11,"new_bitfield_1","","",6,[[["c_uint",6]],[["__bindgenbitfieldunit",3],["u8",15]]]],[6,"snd_pcm_audio_tstamp_report_t","","",null,null],[6,"snd_pcm_uframes_t","","Unsigned frames quantity",null,null],[6,"snd_pcm_sframes_t","","Signed frames quantity",null,null],[3,"_snd_pcm","","",null,null],[6,"snd_pcm_t","","PCM handle",null,null],[17,"SND_PCM_TYPE_HW","","Kernel level PCM",null,null],[17,"SND_PCM_TYPE_HOOKS","","Hooked PCM",null,null],[17,"SND_PCM_TYPE_MULTI","","One or more linked PCM with exclusive access to selected …",null,null],[17,"SND_PCM_TYPE_FILE","","File writing plugin",null,null],[17,"SND_PCM_TYPE_NULL","","Null endpoint PCM",null,null],[17,"SND_PCM_TYPE_SHM","","Shared memory client PCM",null,null],[17,"SND_PCM_TYPE_INET","","INET client PCM (not yet implemented)",null,null],[17,"SND_PCM_TYPE_COPY","","Copying plugin",null,null],[17,"SND_PCM_TYPE_LINEAR","","Linear format conversion PCM",null,null],[17,"SND_PCM_TYPE_ALAW","","A-Law format conversion PCM",null,null],[17,"SND_PCM_TYPE_MULAW","","Mu-Law format conversion PCM",null,null],[17,"SND_PCM_TYPE_ADPCM","","IMA-ADPCM format conversion PCM",null,null],[17,"SND_PCM_TYPE_RATE","","Rate conversion PCM",null,null],[17,"SND_PCM_TYPE_ROUTE","","Attenuated static route PCM",null,null],[17,"SND_PCM_TYPE_PLUG","","Format adjusted PCM",null,null],[17,"SND_PCM_TYPE_SHARE","","Sharing PCM",null,null],[17,"SND_PCM_TYPE_METER","","Meter plugin",null,null],[17,"SND_PCM_TYPE_MIX","","Mixing PCM",null,null],[17,"SND_PCM_TYPE_DROUTE","","Attenuated dynamic route PCM (not yet implemented)",null,null],[17,"SND_PCM_TYPE_LBSERVER","","Loopback server plugin (not yet implemented)",null,null],[17,"SND_PCM_TYPE_LINEAR_FLOAT","","Linear Integer <-> Linear Float format conversion PCM",null,null],[17,"SND_PCM_TYPE_LADSPA","","LADSPA integration plugin",null,null],[17,"SND_PCM_TYPE_DMIX","","Direct Mixing plugin",null,null],[17,"SND_PCM_TYPE_JACK","","Jack Audio Connection Kit plugin",null,null],[17,"SND_PCM_TYPE_DSNOOP","","Direct Snooping plugin",null,null],[17,"SND_PCM_TYPE_DSHARE","","Direct Sharing plugin",null,null],[17,"SND_PCM_TYPE_IEC958","","IEC958 subframe plugin",null,null],[17,"SND_PCM_TYPE_SOFTVOL","","Soft volume plugin",null,null],[17,"SND_PCM_TYPE_IOPLUG","","External I/O plugin",null,null],[17,"SND_PCM_TYPE_EXTPLUG","","External filter plugin",null,null],[17,"SND_PCM_TYPE_MMAP_EMUL","","Mmap-emulation plugin",null,null],[17,"SND_PCM_TYPE_LAST","","Mmap-emulation plugin",null,null],[6,"_snd_pcm_type","","PCM type",null,null],[3,"_snd_pcm_channel_area","","PCM area specification",null,null],[12,"addr","","base address of channel samples",7,null],[12,"first","","offset to first sample in bits",7,null],[12,"step","","samples distance in bits",7,null],[6,"snd_pcm_channel_area_t","","PCM area specification",null,null],[19,"_snd_pcm_sync_id","","PCM synchronization ID",null,null],[12,"id","","8-bit ID",8,null],[12,"id16","","16-bit ID",8,null],[12,"id32","","32-bit ID",8,null],[6,"snd_pcm_sync_id_t","","PCM synchronization ID",null,null],[3,"_snd_pcm_scope","","",null,null],[6,"snd_pcm_scope_t","","#SND_PCM_TYPE_METER scope handle",null,null],[17,"SND_CHMAP_TYPE_NONE","","< unspecified channel position",null,null],[17,"SND_CHMAP_TYPE_FIXED","","< fixed channel position",null,null],[17,"SND_CHMAP_TYPE_VAR","","< freely swappable channel position",null,null],[17,"SND_CHMAP_TYPE_PAIRED","","< pair-wise swappable channel position",null,null],[17,"SND_CHMAP_TYPE_LAST","","< last entry",null,null],[6,"snd_pcm_chmap_type","","channel map list type",null,null],[17,"SND_CHMAP_UNKNOWN","","< unspecified",null,null],[17,"SND_CHMAP_NA","","< N/A, silent",null,null],[17,"SND_CHMAP_MONO","","< mono stream",null,null],[17,"SND_CHMAP_FL","","< front left",null,null],[17,"SND_CHMAP_FR","","< front right",null,null],[17,"SND_CHMAP_RL","","< rear left",null,null],[17,"SND_CHMAP_RR","","< rear right",null,null],[17,"SND_CHMAP_FC","","< front center",null,null],[17,"SND_CHMAP_LFE","","< LFE",null,null],[17,"SND_CHMAP_SL","","< side left",null,null],[17,"SND_CHMAP_SR","","< side right",null,null],[17,"SND_CHMAP_RC","","< rear center",null,null],[17,"SND_CHMAP_FLC","","< front left center",null,null],[17,"SND_CHMAP_FRC","","< front right center",null,null],[17,"SND_CHMAP_RLC","","< rear left center",null,null],[17,"SND_CHMAP_RRC","","< rear right center",null,null],[17,"SND_CHMAP_FLW","","< front left wide",null,null],[17,"SND_CHMAP_FRW","","< front right wide",null,null],[17,"SND_CHMAP_FLH","","< front left high",null,null],[17,"SND_CHMAP_FCH","","< front center high",null,null],[17,"SND_CHMAP_FRH","","< front right high",null,null],[17,"SND_CHMAP_TC","","< top center",null,null],[17,"SND_CHMAP_TFL","","< top front left",null,null],[17,"SND_CHMAP_TFR","","< top front right",null,null],[17,"SND_CHMAP_TFC","","< top front center",null,null],[17,"SND_CHMAP_TRL","","< top rear left",null,null],[17,"SND_CHMAP_TRR","","< top rear right",null,null],[17,"SND_CHMAP_TRC","","< top rear center",null,null],[17,"SND_CHMAP_TFLC","","< top front left center",null,null],[17,"SND_CHMAP_TFRC","","< top front right center",null,null],[17,"SND_CHMAP_TSL","","< top side left",null,null],[17,"SND_CHMAP_TSR","","< top side right",null,null],[17,"SND_CHMAP_LLFE","","< left LFE",null,null],[17,"SND_CHMAP_RLFE","","< right LFE",null,null],[17,"SND_CHMAP_BC","","< bottom center",null,null],[17,"SND_CHMAP_BLC","","< bottom left center",null,null],[17,"SND_CHMAP_BRC","","< bottom right center",null,null],[17,"SND_CHMAP_LAST","","",null,null],[6,"snd_pcm_chmap_position","","channel positions",null,null],[3,"snd_pcm_chmap","","the channel map header",null,null],[12,"channels","","< number of channels",9,null],[12,"pos","","< channel position array",9,null],[6,"snd_pcm_chmap_t","","the channel map header",null,null],[3,"snd_pcm_chmap_query","","the header of array items returned from …",null,null],[12,"type_","","< channel map type",10,null],[12,"map","","< available channel map",10,null],[6,"snd_pcm_chmap_query_t","","the header of array items returned from …",null,null],[17,"SND_PCM_HOOK_TYPE_HW_PARAMS","","",null,null],[17,"SND_PCM_HOOK_TYPE_HW_FREE","","",null,null],[17,"SND_PCM_HOOK_TYPE_CLOSE","","",null,null],[17,"SND_PCM_HOOK_TYPE_LAST","","",null,null],[6,"_snd_pcm_hook_type","","type of pcm hook",null,null],[3,"_snd_pcm_hook","","",null,null],[6,"snd_pcm_hook_t","","PCM hook container",null,null],[6,"snd_pcm_hook_func_t","","PCM hook callback function",null,null],[3,"_snd_pcm_scope_ops","","#SND_PCM_TYPE_METER scope functions",null,null],[12,"enable","","\\\\brief Enable and prepare it using current params \\\\param …",11,null],[12,"disable","","\\\\brief Disable \\\\param scope scope handle",11,null],[12,"start","","\\\\brief PCM has been started \\\\param scope scope handle",11,null],[12,"stop","","\\\\brief PCM has been stopped \\\\param scope scope handle",11,null],[12,"update","","\\\\brief New frames are present \\\\param scope scope handle",11,null],[12,"reset","","\\\\brief Reset status \\\\param scope scope handle",11,null],[12,"close","","\\\\brief PCM is closing \\\\param scope scope handle",11,null],[6,"snd_pcm_scope_ops_t","","#SND_PCM_TYPE_METER scope functions",null,null],[17,"SND_SPCM_LATENCY_STANDARD","","standard latency - for standard playback or capture …",null,null],[17,"SND_SPCM_LATENCY_MEDIUM","","medium latency - software phones etc. (estimated latency …",null,null],[17,"SND_SPCM_LATENCY_REALTIME","","realtime latency - realtime applications (effect …",null,null],[6,"_snd_spcm_latency","","Simple PCM latency type",null,null],[17,"SND_SPCM_XRUN_IGNORE","","driver / library will ignore all xruns, the stream runs …",null,null],[17,"SND_SPCM_XRUN_STOP","","driver / library stops the stream when an xrun occurs",null,null],[6,"_snd_spcm_xrun_type","","Simple PCM xrun type",null,null],[17,"SND_SPCM_DUPLEX_LIBERAL","","liberal duplex - the buffer and period sizes might not …",null,null],[17,"SND_SPCM_DUPLEX_PEDANTIC","","pedantic duplex - the buffer and period sizes MUST match",null,null],[6,"_snd_spcm_duplex_type","","Simple PCM duplex type",null,null],[3,"_snd_rawmidi_info","","",null,null],[6,"snd_rawmidi_info_t","","RawMidi information container",null,null],[3,"_snd_rawmidi_params","","",null,null],[6,"snd_rawmidi_params_t","","RawMidi settings container",null,null],[3,"_snd_rawmidi_status","","",null,null],[6,"snd_rawmidi_status_t","","RawMidi status container",null,null],[17,"SND_RAWMIDI_STREAM_OUTPUT","","Output stream",null,null],[17,"SND_RAWMIDI_STREAM_INPUT","","Input stream",null,null],[17,"SND_RAWMIDI_STREAM_LAST","","Input stream",null,null],[6,"_snd_rawmidi_stream","","RawMidi stream (direction)",null,null],[3,"_snd_rawmidi","","",null,null],[6,"snd_rawmidi_t","","RawMidi handle",null,null],[17,"SND_RAWMIDI_TYPE_HW","","Kernel level RawMidi",null,null],[17,"SND_RAWMIDI_TYPE_SHM","","Shared memory client RawMidi (not yet implemented)",null,null],[17,"SND_RAWMIDI_TYPE_INET","","INET client RawMidi (not yet implemented)",null,null],[17,"SND_RAWMIDI_TYPE_VIRTUAL","","Virtual (sequencer) RawMidi",null,null],[6,"_snd_rawmidi_type","","RawMidi type",null,null],[3,"_snd_timer_id","","",null,null],[6,"snd_timer_id_t","","timer identification structure",null,null],[3,"_snd_timer_ginfo","","",null,null],[6,"snd_timer_ginfo_t","","timer global info structure",null,null],[3,"_snd_timer_gparams","","",null,null],[6,"snd_timer_gparams_t","","timer global params structure",null,null],[3,"_snd_timer_gstatus","","",null,null],[6,"snd_timer_gstatus_t","","timer global status structure",null,null],[3,"_snd_timer_info","","",null,null],[6,"snd_timer_info_t","","timer info structure",null,null],[3,"_snd_timer_params","","",null,null],[6,"snd_timer_params_t","","timer params structure",null,null],[3,"_snd_timer_status","","",null,null],[6,"snd_timer_status_t","","timer status structure",null,null],[17,"SND_TIMER_CLASS_NONE","","< invalid",null,null],[17,"SND_TIMER_CLASS_SLAVE","","< slave timer",null,null],[17,"SND_TIMER_CLASS_GLOBAL","","< global timer",null,null],[17,"SND_TIMER_CLASS_CARD","","< card timer",null,null],[17,"SND_TIMER_CLASS_PCM","","< PCM timer",null,null],[17,"SND_TIMER_CLASS_LAST","","< last timer",null,null],[6,"_snd_timer_class","","timer master class",null,null],[17,"SND_TIMER_SCLASS_NONE","","< none",null,null],[17,"SND_TIMER_SCLASS_APPLICATION","","< for internal use",null,null],[17,"SND_TIMER_SCLASS_SEQUENCER","","< sequencer timer",null,null],[17,"SND_TIMER_SCLASS_OSS_SEQUENCER","","< OSS sequencer timer",null,null],[17,"SND_TIMER_SCLASS_LAST","","< last slave timer",null,null],[6,"_snd_timer_slave_class","","timer slave class",null,null],[17,"SND_TIMER_EVENT_RESOLUTION","","",null,null],[17,"SND_TIMER_EVENT_TICK","","",null,null],[17,"SND_TIMER_EVENT_START","","",null,null],[17,"SND_TIMER_EVENT_STOP","","",null,null],[17,"SND_TIMER_EVENT_CONTINUE","","",null,null],[17,"SND_TIMER_EVENT_PAUSE","","",null,null],[17,"SND_TIMER_EVENT_EARLY","","",null,null],[17,"SND_TIMER_EVENT_SUSPEND","","",null,null],[17,"SND_TIMER_EVENT_RESUME","","",null,null],[17,"SND_TIMER_EVENT_MSTART","","",null,null],[17,"SND_TIMER_EVENT_MSTOP","","",null,null],[17,"SND_TIMER_EVENT_MCONTINUE","","",null,null],[17,"SND_TIMER_EVENT_MPAUSE","","",null,null],[17,"SND_TIMER_EVENT_MSUSPEND","","",null,null],[17,"SND_TIMER_EVENT_MRESUME","","",null,null],[6,"_snd_timer_event","","timer read event identification",null,null],[3,"_snd_timer_read","","timer read structure",null,null],[12,"resolution","","< tick resolution in nanoseconds",12,null],[12,"ticks","","< count of happened ticks",12,null],[6,"snd_timer_read_t","","timer read structure",null,null],[3,"_snd_timer_tread","","timer tstamp + event read structure",null,null],[12,"event","","< Timer event",13,null],[12,"tstamp","","< Time stamp of each event",13,null],[12,"val","","< Event value",13,null],[6,"snd_timer_tread_t","","timer tstamp + event read structure",null,null],[17,"SND_TIMER_TYPE_HW","","Kernel level HwDep",null,null],[17,"SND_TIMER_TYPE_SHM","","Shared memory client timer (not yet implemented)",null,null],[17,"SND_TIMER_TYPE_INET","","INET client timer (not yet implemented)",null,null],[6,"_snd_timer_type","","timer handle type",null,null],[3,"_snd_timer_query","","",null,null],[6,"snd_timer_query_t","","timer query handle",null,null],[3,"_snd_timer","","",null,null],[6,"snd_timer_t","","timer handle",null,null],[3,"_snd_hwdep_info","","",null,null],[6,"snd_hwdep_info_t","","HwDep information container",null,null],[3,"_snd_hwdep_dsp_status","","",null,null],[6,"snd_hwdep_dsp_status_t","","HwDep DSP status container",null,null],[3,"_snd_hwdep_dsp_image","","",null,null],[6,"snd_hwdep_dsp_image_t","","HwDep DSP image container",null,null],[17,"SND_HWDEP_IFACE_OPL2","","< OPL2 raw driver",null,null],[17,"SND_HWDEP_IFACE_OPL3","","< OPL3 raw driver",null,null],[17,"SND_HWDEP_IFACE_OPL4","","< OPL4 raw driver",null,null],[17,"SND_HWDEP_IFACE_SB16CSP","","< SB16CSP driver",null,null],[17,"SND_HWDEP_IFACE_EMU10K1","","< EMU10K1 driver",null,null],[17,"SND_HWDEP_IFACE_YSS225","","< YSS225 driver",null,null],[17,"SND_HWDEP_IFACE_ICS2115","","< ICS2115 driver",null,null],[17,"SND_HWDEP_IFACE_SSCAPE","","< Ensoniq SoundScape ISA card (MC68EC000)",null,null],[17,"SND_HWDEP_IFACE_VX","","< Digigram VX cards",null,null],[17,"SND_HWDEP_IFACE_MIXART","","< Digigram miXart cards",null,null],[17,"SND_HWDEP_IFACE_USX2Y","","< Tascam US122, US224 & US428 usb",null,null],[17,"SND_HWDEP_IFACE_EMUX_WAVETABLE","","< EmuX wavetable",null,null],[17,"SND_HWDEP_IFACE_BLUETOOTH","","< Bluetooth audio",null,null],[17,"SND_HWDEP_IFACE_USX2Y_PCM","","< Tascam US122, US224 & US428 raw USB PCM",null,null],[17,"SND_HWDEP_IFACE_PCXHR","","< Digigram PCXHR",null,null],[17,"SND_HWDEP_IFACE_SB_RC","","< SB Extigy/Audigy2NX remote control",null,null],[17,"SND_HWDEP_IFACE_HDA","","< HD-audio",null,null],[17,"SND_HWDEP_IFACE_USB_STREAM","","< direct access to usb stream",null,null],[17,"SND_HWDEP_IFACE_FW_DICE","","< TC DICE FireWire device",null,null],[17,"SND_HWDEP_IFACE_FW_FIREWORKS","","< Echo Audio Fireworks based device",null,null],[17,"SND_HWDEP_IFACE_FW_BEBOB","","< BridgeCo BeBoB based device",null,null],[17,"SND_HWDEP_IFACE_FW_OXFW","","< Oxford OXFW970/971 based device",null,null],[17,"SND_HWDEP_IFACE_FW_DIGI00X","","",null,null],[17,"SND_HWDEP_IFACE_FW_TASCAM","","",null,null],[17,"SND_HWDEP_IFACE_LINE6","","",null,null],[17,"SND_HWDEP_IFACE_FW_MOTU","","",null,null],[17,"SND_HWDEP_IFACE_FW_FIREFACE","","",null,null],[17,"SND_HWDEP_IFACE_LAST","","< last known hwdep interface",null,null],[6,"_snd_hwdep_iface","","HwDep interface",null,null],[17,"SND_HWDEP_TYPE_HW","","Kernel level HwDep",null,null],[17,"SND_HWDEP_TYPE_SHM","","Shared memory client HwDep (not yet implemented)",null,null],[17,"SND_HWDEP_TYPE_INET","","INET client HwDep (not yet implemented)",null,null],[6,"_snd_hwdep_type","","HwDep handle type",null,null],[3,"_snd_hwdep","","",null,null],[6,"snd_hwdep_t","","HwDep handle",null,null],[3,"snd_aes_iec958","","IEC958 structure",null,null],[12,"status","","< AES/IEC958 channel status bits",14,null],[12,"subcode","","< AES/IEC958 subcode bits",14,null],[12,"pad","","< nothing",14,null],[12,"dig_subframe","","< AES/IEC958 subframe bits",14,null],[6,"snd_aes_iec958_t","","IEC958 structure",null,null],[3,"_snd_ctl_card_info","","",null,null],[6,"snd_ctl_card_info_t","","CTL card info container",null,null],[3,"_snd_ctl_elem_id","","",null,null],[6,"snd_ctl_elem_id_t","","CTL element identifier container",null,null],[3,"_snd_ctl_elem_list","","",null,null],[6,"snd_ctl_elem_list_t","","CTL element list container",null,null],[3,"_snd_ctl_elem_info","","",null,null],[6,"snd_ctl_elem_info_t","","CTL element info container",null,null],[3,"_snd_ctl_elem_value","","",null,null],[6,"snd_ctl_elem_value_t","","CTL element value container",null,null],[3,"_snd_ctl_event","","",null,null],[6,"snd_ctl_event_t","","CTL event container",null,null],[17,"SND_CTL_ELEM_TYPE_NONE","","Invalid type",null,null],[17,"SND_CTL_ELEM_TYPE_BOOLEAN","","Boolean contents",null,null],[17,"SND_CTL_ELEM_TYPE_INTEGER","","Integer contents",null,null],[17,"SND_CTL_ELEM_TYPE_ENUMERATED","","Enumerated contents",null,null],[17,"SND_CTL_ELEM_TYPE_BYTES","","Bytes contents",null,null],[17,"SND_CTL_ELEM_TYPE_IEC958","","IEC958 (S/PDIF) setting content",null,null],[17,"SND_CTL_ELEM_TYPE_INTEGER64","","64-bit integer contents",null,null],[17,"SND_CTL_ELEM_TYPE_LAST","","64-bit integer contents",null,null],[6,"_snd_ctl_elem_type","","CTL element type",null,null],[17,"SND_CTL_ELEM_IFACE_CARD","","Card level",null,null],[17,"SND_CTL_ELEM_IFACE_HWDEP","","Hardware dependent device",null,null],[17,"SND_CTL_ELEM_IFACE_MIXER","","Mixer",null,null],[17,"SND_CTL_ELEM_IFACE_PCM","","PCM",null,null],[17,"SND_CTL_ELEM_IFACE_RAWMIDI","","RawMidi",null,null],[17,"SND_CTL_ELEM_IFACE_TIMER","","Timer",null,null],[17,"SND_CTL_ELEM_IFACE_SEQUENCER","","Sequencer",null,null],[17,"SND_CTL_ELEM_IFACE_LAST","","Sequencer",null,null],[6,"_snd_ctl_elem_iface","","CTL related interface",null,null],[17,"SND_CTL_EVENT_ELEM","","Elements related event",null,null],[17,"SND_CTL_EVENT_LAST","","Elements related event",null,null],[6,"_snd_ctl_event_type","","Event class",null,null],[17,"SND_CTL_TYPE_HW","","Kernel level CTL",null,null],[17,"SND_CTL_TYPE_SHM","","Shared memory client CTL",null,null],[17,"SND_CTL_TYPE_INET","","INET client CTL (not yet implemented)",null,null],[17,"SND_CTL_TYPE_EXT","","External control plugin",null,null],[6,"_snd_ctl_type","","CTL type",null,null],[3,"_snd_ctl","","",null,null],[6,"snd_ctl_t","","CTL handle",null,null],[3,"_snd_sctl","","",null,null],[6,"snd_sctl_t","","SCTL type",null,null],[3,"_snd_hctl_elem","","",null,null],[6,"snd_hctl_elem_t","","HCTL element handle",null,null],[3,"_snd_hctl","","",null,null],[6,"snd_hctl_t","","HCTL handle",null,null],[6,"snd_hctl_compare_t","","\\\\brief Compare function for sorting HCTL elements \\\\param …",null,null],[6,"snd_hctl_callback_t","","\\\\brief HCTL callback function \\\\param hctl HCTL handle …",null,null],[6,"snd_hctl_elem_callback_t","","\\\\brief HCTL element callback function \\\\param elem HCTL …",null,null],[3,"_snd_mixer","","",null,null],[6,"snd_mixer_t","","Mixer handle",null,null],[3,"_snd_mixer_class","","",null,null],[6,"snd_mixer_class_t","","Mixer elements class handle",null,null],[3,"_snd_mixer_elem","","",null,null],[6,"snd_mixer_elem_t","","Mixer element handle",null,null],[6,"snd_mixer_callback_t","","\\\\brief Mixer callback function \\\\param mixer Mixer handle …",null,null],[6,"snd_mixer_elem_callback_t","","\\\\brief Mixer element callback function \\\\param elem Mixer …",null,null],[6,"snd_mixer_compare_t","","\\\\brief Compare function for sorting mixer elements \\\\param …",null,null],[6,"snd_mixer_event_t","","\\\\brief Event callback for the mixer class \\\\param class_ …",null,null],[17,"SND_MIXER_ELEM_SIMPLE","","",null,null],[17,"SND_MIXER_ELEM_LAST","","",null,null],[6,"_snd_mixer_elem_type","","Mixer element type",null,null],[17,"SND_MIXER_SCHN_UNKNOWN","","Unknown",null,null],[17,"SND_MIXER_SCHN_FRONT_LEFT","","Front left",null,null],[17,"SND_MIXER_SCHN_FRONT_RIGHT","","Front right",null,null],[17,"SND_MIXER_SCHN_REAR_LEFT","","Rear left",null,null],[17,"SND_MIXER_SCHN_REAR_RIGHT","","Rear right",null,null],[17,"SND_MIXER_SCHN_FRONT_CENTER","","Front center",null,null],[17,"SND_MIXER_SCHN_WOOFER","","Woofer",null,null],[17,"SND_MIXER_SCHN_SIDE_LEFT","","Side Left",null,null],[17,"SND_MIXER_SCHN_SIDE_RIGHT","","Side Right",null,null],[17,"SND_MIXER_SCHN_REAR_CENTER","","Rear Center",null,null],[17,"SND_MIXER_SCHN_LAST","","Rear Center",null,null],[17,"SND_MIXER_SCHN_MONO","","Mono (Front left alias)",null,null],[6,"_snd_mixer_selem_channel_id","","Mixer simple element channel identifier",null,null],[17,"SND_MIXER_SABSTRACT_NONE","","no abstraction - try use all universal controls from …",null,null],[17,"SND_MIXER_SABSTRACT_BASIC","","basic abstraction - Master,PCM,CD,Aux,Record-Gain etc.",null,null],[6,"snd_mixer_selem_regopt_abstract","","Mixer simple element - register options - abstraction …",null,null],[3,"snd_mixer_selem_regopt","","Mixer simple element - register options",null,null],[12,"ver","","structure version",15,null],[12,"abstract_","","v1: abstract layer selection",15,null],[12,"device","","v1: device name (must be NULL when playback_pcm or …",15,null],[12,"playback_pcm","","v1: playback PCM connected to mixer device (NULL == none)",15,null],[12,"capture_pcm","","v1: capture PCM connected to mixer device (NULL == none)",15,null],[3,"_snd_mixer_selem_id","","",null,null],[6,"snd_mixer_selem_id_t","","Mixer simple element identifier",null,null],[6,"snd_seq_event_type_t","","Sequencer event data type",null,null],[17,"SND_SEQ_EVENT_SYSTEM","","system status; event data type = #snd_seq_result_t",null,null],[17,"SND_SEQ_EVENT_RESULT","","returned result status; event data type = …",null,null],[17,"SND_SEQ_EVENT_NOTE","","note on and off with duration; event data type = …",null,null],[17,"SND_SEQ_EVENT_NOTEON","","note on; event data type = #snd_seq_ev_note_t",null,null],[17,"SND_SEQ_EVENT_NOTEOFF","","note off; event data type = #snd_seq_ev_note_t",null,null],[17,"SND_SEQ_EVENT_KEYPRESS","","key pressure change (aftertouch); event data type = …",null,null],[17,"SND_SEQ_EVENT_CONTROLLER","","controller; event data type = #snd_seq_ev_ctrl_t",null,null],[17,"SND_SEQ_EVENT_PGMCHANGE","","program change; event data type = #snd_seq_ev_ctrl_t",null,null],[17,"SND_SEQ_EVENT_CHANPRESS","","channel pressure; event data type = #snd_seq_ev_ctrl_t",null,null],[17,"SND_SEQ_EVENT_PITCHBEND","","pitchwheel; event data type = #snd_seq_ev_ctrl_t; data is …",null,null],[17,"SND_SEQ_EVENT_CONTROL14","","14 bit controller value; event data type = …",null,null],[17,"SND_SEQ_EVENT_NONREGPARAM","","14 bit NRPN;  event data type = #snd_seq_ev_ctrl_t",null,null],[17,"SND_SEQ_EVENT_REGPARAM","","14 bit RPN; event data type = #snd_seq_ev_ctrl_t",null,null],[17,"SND_SEQ_EVENT_SONGPOS","","SPP with LSB and MSB values; event data type = …",null,null],[17,"SND_SEQ_EVENT_SONGSEL","","Song Select with song ID number; event data type = …",null,null],[17,"SND_SEQ_EVENT_QFRAME","","midi time code quarter frame; event data type = …",null,null],[17,"SND_SEQ_EVENT_TIMESIGN","","SMF Time Signature event; event data type = …",null,null],[17,"SND_SEQ_EVENT_KEYSIGN","","SMF Key Signature event; event data type = …",null,null],[17,"SND_SEQ_EVENT_START","","MIDI Real Time Start message; event data type = …",null,null],[17,"SND_SEQ_EVENT_CONTINUE","","MIDI Real Time Continue message; event data type = …",null,null],[17,"SND_SEQ_EVENT_STOP","","MIDI Real Time Stop message; event data type = …",null,null],[17,"SND_SEQ_EVENT_SETPOS_TICK","","Set tick queue position; event data type = …",null,null],[17,"SND_SEQ_EVENT_SETPOS_TIME","","Set real-time queue position; event data type = …",null,null],[17,"SND_SEQ_EVENT_TEMPO","","(SMF) Tempo event; event data type = …",null,null],[17,"SND_SEQ_EVENT_CLOCK","","MIDI Real Time Clock message; event data type = …",null,null],[17,"SND_SEQ_EVENT_TICK","","MIDI Real Time Tick message; event data type = …",null,null],[17,"SND_SEQ_EVENT_QUEUE_SKEW","","Queue timer skew; event data type = …",null,null],[17,"SND_SEQ_EVENT_SYNC_POS","","Sync position changed; event data type = …",null,null],[17,"SND_SEQ_EVENT_TUNE_REQUEST","","Tune request; event data type = none",null,null],[17,"SND_SEQ_EVENT_RESET","","Reset to power-on state; event data type = none",null,null],[17,"SND_SEQ_EVENT_SENSING","","Active sensing event; event data type = none",null,null],[17,"SND_SEQ_EVENT_ECHO","","Echo-back event; event data type = any type",null,null],[17,"SND_SEQ_EVENT_OSS","","OSS emulation raw event; event data type = any type",null,null],[17,"SND_SEQ_EVENT_CLIENT_START","","New client has connected; event data type = …",null,null],[17,"SND_SEQ_EVENT_CLIENT_EXIT","","Client has left the system; event data type = …",null,null],[17,"SND_SEQ_EVENT_CLIENT_CHANGE","","Client status/info has changed; event data type = …",null,null],[17,"SND_SEQ_EVENT_PORT_START","","New port was created; event data type = #snd_seq_addr_t",null,null],[17,"SND_SEQ_EVENT_PORT_EXIT","","Port was deleted from system; event data type = …",null,null],[17,"SND_SEQ_EVENT_PORT_CHANGE","","Port status/info has changed; event data type = …",null,null],[17,"SND_SEQ_EVENT_PORT_SUBSCRIBED","","Ports connected; event data type = #snd_seq_connect_t",null,null],[17,"SND_SEQ_EVENT_PORT_UNSUBSCRIBED","","Ports disconnected; event data type = #snd_seq_connect_t",null,null],[17,"SND_SEQ_EVENT_USR0","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR1","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR2","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR3","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR4","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR5","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR6","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR7","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR8","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_USR9","","user-defined event; event data type = any (fixed size)",null,null],[17,"SND_SEQ_EVENT_SYSEX","","system exclusive data (variable length);  event data type …",null,null],[17,"SND_SEQ_EVENT_BOUNCE","","error event;  event data type = #snd_seq_ev_ext_t",null,null],[17,"SND_SEQ_EVENT_USR_VAR0","","reserved for user apps;  event data type = …",null,null],[17,"SND_SEQ_EVENT_USR_VAR1","","reserved for user apps; event data type = …",null,null],[17,"SND_SEQ_EVENT_USR_VAR2","","reserved for user apps; event data type = …",null,null],[17,"SND_SEQ_EVENT_USR_VAR3","","reserved for user apps; event data type = …",null,null],[17,"SND_SEQ_EVENT_USR_VAR4","","reserved for user apps; event data type = …",null,null],[17,"SND_SEQ_EVENT_NONE","","NOP; ignored in any case",null,null],[6,"snd_seq_event_type","","Sequencer event type",null,null],[3,"snd_seq_addr","","Sequencer event address",null,null],[12,"client","","< Client id",16,null],[12,"port","","< Port id",16,null],[6,"snd_seq_addr_t","","Sequencer event address",null,null],[3,"snd_seq_connect","","Connection (subscription) between ports",null,null],[12,"sender","","< sender address",17,null],[12,"dest","","< destination address",17,null],[6,"snd_seq_connect_t","","Connection (subscription) between ports",null,null],[3,"snd_seq_real_time","","Real-time data record",null,null],[12,"tv_sec","","< seconds",18,null],[12,"tv_nsec","","< nanoseconds",18,null],[6,"snd_seq_real_time_t","","Real-time data record",null,null],[6,"snd_seq_tick_time_t","","(MIDI) Tick-time data record",null,null],[19,"snd_seq_timestamp","","unioned time stamp",null,null],[12,"tick","","< tick-time",19,null],[12,"time","","< real-time",19,null],[6,"snd_seq_timestamp_t","","unioned time stamp",null,null],[3,"snd_seq_ev_note","","Note event",null,null],[12,"channel","","< channel number",20,null],[12,"note","","< note",20,null],[12,"velocity","","< velocity",20,null],[12,"off_velocity","","< note-off velocity; only for #SND_SEQ_EVENT_NOTE",20,null],[12,"duration","","< duration until note-off; only for #SND_SEQ_EVENT_NOTE",20,null],[6,"snd_seq_ev_note_t","","Note event",null,null],[3,"snd_seq_ev_ctrl","","Controller event",null,null],[12,"channel","","< channel number",21,null],[12,"unused","","< reserved",21,null],[12,"param","","< control parameter",21,null],[12,"value","","< control value",21,null],[6,"snd_seq_ev_ctrl_t","","Controller event",null,null],[3,"snd_seq_ev_raw8","","generic set of bytes (12x8 bit)",null,null],[12,"d","","< 8 bit value",22,null],[6,"snd_seq_ev_raw8_t","","generic set of bytes (12x8 bit)",null,null],[3,"snd_seq_ev_raw32","","generic set of integers (3x32 bit)",null,null],[12,"d","","< 32 bit value",23,null],[6,"snd_seq_ev_raw32_t","","generic set of integers (3x32 bit)",null,null],[3,"snd_seq_ev_ext","","external stored data",null,null],[12,"len","","< length of data",24,null],[12,"ptr","","< pointer to data (note: can be 64-bit)",24,null],[6,"snd_seq_ev_ext_t","","external stored data",null,null],[3,"snd_seq_result","","Result events",null,null],[12,"event","","< processed event type",25,null],[12,"result","","< status",25,null],[6,"snd_seq_result_t","","Result events",null,null],[3,"snd_seq_queue_skew","","Queue skew values",null,null],[12,"value","","< skew value",26,null],[12,"base","","< skew base",26,null],[6,"snd_seq_queue_skew_t","","Queue skew values",null,null],[3,"snd_seq_ev_queue_control","","queue timer control",null,null],[12,"queue","","< affected queue",27,null],[12,"unused","","< reserved",27,null],[12,"param","","< data value union",27,null],[19,"snd_seq_ev_queue_control__bindgen_ty_1","","",null,null],[12,"value","","< affected value (e.g. tempo)",28,null],[12,"time","","< time",28,null],[12,"position","","< sync position",28,null],[12,"skew","","< queue skew",28,null],[12,"d32","","< any data",28,null],[12,"d8","","< any data",28,null],[6,"snd_seq_ev_queue_control_t","","queue timer control",null,null],[3,"snd_seq_event","","Sequencer event",null,null],[12,"type_","","< event type",29,null],[12,"flags","","< event flags",29,null],[12,"tag","","< tag",29,null],[12,"queue","","< schedule queue",29,null],[12,"time","","< schedule time",29,null],[12,"source","","< source address",29,null],[12,"dest","","< destination address",29,null],[12,"data","","< event data...",29,null],[19,"snd_seq_event__bindgen_ty_1","","",null,null],[12,"note","","< note information",30,null],[12,"control","","< MIDI control information",30,null],[12,"raw8","","< raw8 data",30,null],[12,"raw32","","< raw32 data",30,null],[12,"ext","","< external data",30,null],[12,"queue","","< queue control",30,null],[12,"time","","< timestamp",30,null],[12,"addr","","< address",30,null],[12,"connect","","< connect information",30,null],[12,"result","","< operation result code",30,null],[6,"snd_seq_event_t","","Sequencer event",null,null],[3,"_snd_seq","","",null,null],[6,"snd_seq_t","","Sequencer handle",null,null],[17,"SND_SEQ_TYPE_HW","","< hardware",null,null],[17,"SND_SEQ_TYPE_SHM","","< shared memory (NYI)",null,null],[17,"SND_SEQ_TYPE_INET","","< network (NYI)",null,null],[6,"_snd_seq_type","","sequencer handle type",null,null],[3,"_snd_seq_system_info","","",null,null],[6,"snd_seq_system_info_t","","system information container",null,null],[3,"_snd_seq_client_info","","",null,null],[6,"snd_seq_client_info_t","","client information container",null,null],[17,"SND_SEQ_USER_CLIENT","","< user client",null,null],[17,"SND_SEQ_KERNEL_CLIENT","","< kernel client",null,null],[6,"snd_seq_client_type","","client types",null,null],[3,"_snd_seq_client_pool","","",null,null],[6,"snd_seq_client_pool_t","","client pool information container",null,null],[3,"_snd_seq_port_info","","",null,null],[6,"snd_seq_port_info_t","","port information container",null,null],[3,"_snd_seq_port_subscribe","","",null,null],[6,"snd_seq_port_subscribe_t","","port subscription container",null,null],[3,"_snd_seq_query_subscribe","","",null,null],[6,"snd_seq_query_subscribe_t","","subscription query container",null,null],[17,"SND_SEQ_QUERY_SUBS_READ","","< query read subscriptions",null,null],[17,"SND_SEQ_QUERY_SUBS_WRITE","","< query write subscriptions",null,null],[6,"snd_seq_query_subs_type_t","","type of query subscription",null,null],[3,"_snd_seq_queue_info","","",null,null],[6,"snd_seq_queue_info_t","","queue information container",null,null],[3,"_snd_seq_queue_status","","",null,null],[6,"snd_seq_queue_status_t","","queue status container",null,null],[3,"_snd_seq_queue_tempo","","",null,null],[6,"snd_seq_queue_tempo_t","","queue tempo container",null,null],[3,"_snd_seq_queue_timer","","",null,null],[6,"snd_seq_queue_timer_t","","queue timer information container",null,null],[17,"SND_SEQ_TIMER_ALSA","","",null,null],[17,"SND_SEQ_TIMER_MIDI_CLOCK","","",null,null],[17,"SND_SEQ_TIMER_MIDI_TICK","","",null,null],[6,"snd_seq_queue_timer_type_t","","sequencer timer sources",null,null],[3,"_snd_seq_remove_events","","",null,null],[6,"snd_seq_remove_events_t","","event removal conditionals",null,null],[3,"snd_midi_event","","",null,null],[6,"snd_midi_event_t","","container for sequencer midi event parsers",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"clone","","",0,[[],["__va_list_tag",3]]],[11,"clone","","",1,[[],["__bindgenbitfieldunit",3]]],[11,"clone","","",3,[[],["snd_dlsym_link",3]]],[11,"clone","","",31,[[],["_snd_async_handler",3]]],[11,"clone","","",32,[[],["snd_shm_area",3]]],[11,"clone","","",33,[[],["_snd_input",3]]],[11,"clone","","",34,[[],["_snd_output",3]]],[11,"clone","","",35,[[],["_snd_config",3]]],[11,"clone","","",36,[[],["_snd_config_iterator",3]]],[11,"clone","","",37,[[],["_snd_config_update",3]]],[11,"clone","","",4,[[],["snd_devname",3]]],[11,"clone","","",38,[[],["_snd_pcm_info",3]]],[11,"clone","","",39,[[],["_snd_pcm_hw_params",3]]],[11,"clone","","",40,[[],["_snd_pcm_sw_params",3]]],[11,"clone","","",41,[[],["_snd_pcm_status",3]]],[11,"clone","","",42,[[],["_snd_pcm_access_mask",3]]],[11,"clone","","",43,[[],["_snd_pcm_format_mask",3]]],[11,"clone","","",44,[[],["_snd_pcm_subformat_mask",3]]],[11,"clone","","",5,[[],["_snd_pcm_audio_tstamp_config",3]]],[11,"clone","","",6,[[],["_snd_pcm_audio_tstamp_report",3]]],[11,"clone","","",45,[[],["_snd_pcm",3]]],[11,"clone","","",7,[[],["_snd_pcm_channel_area",3]]],[11,"clone","","",8,[[],["_snd_pcm_sync_id",19]]],[11,"clone","","",46,[[],["_snd_pcm_scope",3]]],[11,"clone","","",47,[[],["_snd_pcm_hook",3]]],[11,"clone","","",11,[[],["_snd_pcm_scope_ops",3]]],[11,"clone","","",48,[[],["_snd_rawmidi_info",3]]],[11,"clone","","",49,[[],["_snd_rawmidi_params",3]]],[11,"clone","","",50,[[],["_snd_rawmidi_status",3]]],[11,"clone","","",51,[[],["_snd_rawmidi",3]]],[11,"clone","","",52,[[],["_snd_timer_id",3]]],[11,"clone","","",53,[[],["_snd_timer_ginfo",3]]],[11,"clone","","",54,[[],["_snd_timer_gparams",3]]],[11,"clone","","",55,[[],["_snd_timer_gstatus",3]]],[11,"clone","","",56,[[],["_snd_timer_info",3]]],[11,"clone","","",57,[[],["_snd_timer_params",3]]],[11,"clone","","",58,[[],["_snd_timer_status",3]]],[11,"clone","","",12,[[],["_snd_timer_read",3]]],[11,"clone","","",59,[[],["_snd_timer_query",3]]],[11,"clone","","",60,[[],["_snd_timer",3]]],[11,"clone","","",61,[[],["_snd_hwdep_info",3]]],[11,"clone","","",62,[[],["_snd_hwdep_dsp_status",3]]],[11,"clone","","",63,[[],["_snd_hwdep_dsp_image",3]]],[11,"clone","","",64,[[],["_snd_hwdep",3]]],[11,"clone","","",14,[[],["snd_aes_iec958",3]]],[11,"clone","","",65,[[],["_snd_ctl_card_info",3]]],[11,"clone","","",66,[[],["_snd_ctl_elem_id",3]]],[11,"clone","","",67,[[],["_snd_ctl_elem_list",3]]],[11,"clone","","",68,[[],["_snd_ctl_elem_info",3]]],[11,"clone","","",69,[[],["_snd_ctl_elem_value",3]]],[11,"clone","","",70,[[],["_snd_ctl_event",3]]],[11,"clone","","",71,[[],["_snd_ctl",3]]],[11,"clone","","",72,[[],["_snd_sctl",3]]],[11,"clone","","",73,[[],["_snd_hctl_elem",3]]],[11,"clone","","",74,[[],["_snd_hctl",3]]],[11,"clone","","",75,[[],["_snd_mixer",3]]],[11,"clone","","",76,[[],["_snd_mixer_class",3]]],[11,"clone","","",77,[[],["_snd_mixer_elem",3]]],[11,"clone","","",15,[[],["snd_mixer_selem_regopt",3]]],[11,"clone","","",78,[[],["_snd_mixer_selem_id",3]]],[11,"clone","","",16,[[],["snd_seq_addr",3]]],[11,"clone","","",17,[[],["snd_seq_connect",3]]],[11,"clone","","",18,[[],["snd_seq_real_time",3]]],[11,"clone","","",19,[[],["snd_seq_timestamp",19]]],[11,"clone","","",20,[[],["snd_seq_ev_note",3]]],[11,"clone","","",21,[[],["snd_seq_ev_ctrl",3]]],[11,"clone","","",22,[[],["snd_seq_ev_raw8",3]]],[11,"clone","","",23,[[],["snd_seq_ev_raw32",3]]],[11,"clone","","",24,[[],["snd_seq_ev_ext",3]]],[11,"clone","","",25,[[],["snd_seq_result",3]]],[11,"clone","","",26,[[],["snd_seq_queue_skew",3]]],[11,"clone","","",27,[[],["snd_seq_ev_queue_control",3]]],[11,"clone","","",28,[[],["snd_seq_ev_queue_control__bindgen_ty_1",19]]],[11,"clone","","",29,[[],["snd_seq_event",3]]],[11,"clone","","",30,[[],["snd_seq_event__bindgen_ty_1",19]]],[11,"clone","","",79,[[],["_snd_seq",3]]],[11,"clone","","",80,[[],["_snd_seq_system_info",3]]],[11,"clone","","",81,[[],["_snd_seq_client_info",3]]],[11,"clone","","",82,[[],["_snd_seq_client_pool",3]]],[11,"clone","","",83,[[],["_snd_seq_port_info",3]]],[11,"clone","","",84,[[],["_snd_seq_port_subscribe",3]]],[11,"clone","","",85,[[],["_snd_seq_query_subscribe",3]]],[11,"clone","","",86,[[],["_snd_seq_queue_info",3]]],[11,"clone","","",87,[[],["_snd_seq_queue_status",3]]],[11,"clone","","",88,[[],["_snd_seq_queue_tempo",3]]],[11,"clone","","",89,[[],["_snd_seq_queue_timer",3]]],[11,"clone","","",90,[[],["_snd_seq_remove_events",3]]],[11,"clone","","",91,[[],["snd_midi_event",3]]],[11,"default","","",1,[[],["__bindgenbitfieldunit",3]]],[11,"default","","",2,[[],["__incompletearrayfield",3]]],[11,"cmp","","",1,[[["__bindgenbitfieldunit",3]],["ordering",4]]],[11,"eq","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"ne","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["__bindgenbitfieldunit",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"le","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"gt","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"ge","","",1,[[["__bindgenbitfieldunit",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]]],"p":[[3,"__va_list_tag"],[3,"__BindgenBitfieldUnit"],[3,"__IncompleteArrayField"],[3,"snd_dlsym_link"],[3,"snd_devname"],[3,"_snd_pcm_audio_tstamp_config"],[3,"_snd_pcm_audio_tstamp_report"],[3,"_snd_pcm_channel_area"],[19,"_snd_pcm_sync_id"],[3,"snd_pcm_chmap"],[3,"snd_pcm_chmap_query"],[3,"_snd_pcm_scope_ops"],[3,"_snd_timer_read"],[3,"_snd_timer_tread"],[3,"snd_aes_iec958"],[3,"snd_mixer_selem_regopt"],[3,"snd_seq_addr"],[3,"snd_seq_connect"],[3,"snd_seq_real_time"],[19,"snd_seq_timestamp"],[3,"snd_seq_ev_note"],[3,"snd_seq_ev_ctrl"],[3,"snd_seq_ev_raw8"],[3,"snd_seq_ev_raw32"],[3,"snd_seq_ev_ext"],[3,"snd_seq_result"],[3,"snd_seq_queue_skew"],[3,"snd_seq_ev_queue_control"],[19,"snd_seq_ev_queue_control__bindgen_ty_1"],[3,"snd_seq_event"],[19,"snd_seq_event__bindgen_ty_1"],[3,"_snd_async_handler"],[3,"snd_shm_area"],[3,"_snd_input"],[3,"_snd_output"],[3,"_snd_config"],[3,"_snd_config_iterator"],[3,"_snd_config_update"],[3,"_snd_pcm_info"],[3,"_snd_pcm_hw_params"],[3,"_snd_pcm_sw_params"],[3,"_snd_pcm_status"],[3,"_snd_pcm_access_mask"],[3,"_snd_pcm_format_mask"],[3,"_snd_pcm_subformat_mask"],[3,"_snd_pcm"],[3,"_snd_pcm_scope"],[3,"_snd_pcm_hook"],[3,"_snd_rawmidi_info"],[3,"_snd_rawmidi_params"],[3,"_snd_rawmidi_status"],[3,"_snd_rawmidi"],[3,"_snd_timer_id"],[3,"_snd_timer_ginfo"],[3,"_snd_timer_gparams"],[3,"_snd_timer_gstatus"],[3,"_snd_timer_info"],[3,"_snd_timer_params"],[3,"_snd_timer_status"],[3,"_snd_timer_query"],[3,"_snd_timer"],[3,"_snd_hwdep_info"],[3,"_snd_hwdep_dsp_status"],[3,"_snd_hwdep_dsp_image"],[3,"_snd_hwdep"],[3,"_snd_ctl_card_info"],[3,"_snd_ctl_elem_id"],[3,"_snd_ctl_elem_list"],[3,"_snd_ctl_elem_info"],[3,"_snd_ctl_elem_value"],[3,"_snd_ctl_event"],[3,"_snd_ctl"],[3,"_snd_sctl"],[3,"_snd_hctl_elem"],[3,"_snd_hctl"],[3,"_snd_mixer"],[3,"_snd_mixer_class"],[3,"_snd_mixer_elem"],[3,"_snd_mixer_selem_id"],[3,"_snd_seq"],[3,"_snd_seq_system_info"],[3,"_snd_seq_client_info"],[3,"_snd_seq_client_pool"],[3,"_snd_seq_port_info"],[3,"_snd_seq_port_subscribe"],[3,"_snd_seq_query_subscribe"],[3,"_snd_seq_queue_info"],[3,"_snd_seq_queue_status"],[3,"_snd_seq_queue_tempo"],[3,"_snd_seq_queue_timer"],[3,"_snd_seq_remove_events"],[3,"snd_midi_event"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]],["bool",15]]],[5,"isnt","","returns true if this is <em>not</em> a tty",null,[[["stream",4]],["bool",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","i":[[5,"trace_unsynchronized","backtrace","Same as <code>trace</code>, only unsafe as it\'s unsynchronized.",null,[[["fnmut",8]]]],[3,"Frame","","A trait representing one frame of a backtrace, yielded to …",null,null],[5,"resolve_frame_unsynchronized","","Same as <code>resolve_frame</code>, only unsafe as it\'s unsynchronized.",null,[[["frame",3]]]],[5,"resolve_unsynchronized","","Same as <code>resolve</code>, only unsafe as it\'s unsynchronized.",null,[[]]],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic …",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When …",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate …",null,[[]]],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains …",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace","","Inspects the current call-stack, passing all active …",null,[[["fnmut",8]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the …",null,[[["fnmut",8]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing …",null,[[["frame",3],["fnmut",8]]]],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",7,[[["backtraceframe",3],["vec",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["printfmt",4]],["bool",15]]],[11,"drop","","",6,[[]]],[11,"into","","",7,[[],[["backtraceframe",3],["vec",3]]]],[11,"clone","","",2,[[],["frame",3]]],[11,"clone","","",1,[[],["printfmt",4]]],[11,"clone","","",7,[[],["backtrace",3]]],[11,"clone","","",8,[[],["backtraceframe",3]]],[11,"clone","","",9,[[],["backtracesymbol",3]]],[11,"default","","",7,[[],["backtrace",3]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[]]],[11,"sp","","Returns the current stack pointer of this frame.",2,[[]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this …",2,[[]]],[11,"module_base_address","","Returns the base address of the module to which the frame …",2,[[],["option",4]]],[11,"name","","Returns the name of this function.",3,[[],[["option",4],["symbolname",3]]]],[11,"addr","","Returns the starting address of this function.",3,[[],["option",4]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly …",3,[[],[["option",4],["bytesorwidestring",4]]]],[11,"colno","","Returns the column number for where this symbol is …",3,[[],[["option",4],["u32",15]]]],[11,"lineno","","Returns the line number for where this symbol is …",3,[[],[["option",4],["u32",15]]]],[11,"filename","","Returns the file name where this function was defined.",3,[[],[["path",3],["option",4]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname",3]]],[11,"as_str","","Returns the raw (mangled) symbol name as a <code>str</code> if the …",4,[[],[["option",4],["str",15]]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[]]],[11,"to_str_lossy","","Lossy converts to a <code>Cow<str></code>, will allocate if <code>Bytes</code> is …",0,[[],[["cow",4],["str",15]]]],[11,"into_path_buf","","Provides a <code>Path</code> representation of <code>BytesOrWideString</code>.",0,[[],["pathbuf",3]]],[11,"new","","Create a new <code>BacktraceFmt</code> which will write output to the …",5,[[["fnmut",8],["formatter",3],["printfmt",4]]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[],["result",6]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[],["backtraceframefmt",3]]],[11,"finish","","Completes the backtrace output.",5,[[],["result",6]]],[11,"backtrace_frame","","Prints a <code>BacktraceFrame</code> with this frame formatter.",6,[[["backtraceframe",3]],["result",6]]],[11,"backtrace_symbol","","Prints a <code>BacktraceSymbol</code> within a <code>BacktraceFrame</code>.",6,[[["backtraceframe",3],["backtracesymbol",3]],["result",6]]],[11,"symbol","","Prints a raw traced <code>Frame</code> and <code>Symbol</code>, typically from …",6,[[["frame",3],["symbol",3]],["result",6]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["option",4],["u32",15],["symbolname",3],["option",4],["option",4],["bytesorwidestring",4]],["result",6]]],[11,"print_raw_with_column","","Adds a raw frame to the backtrace output, including …",6,[[["option",4],["u32",15],["symbolname",3],["option",4],["option",4],["bytesorwidestring",4]],["result",6]]],[11,"new","","Captures a backtrace at the callsite of this function, …",7,[[],["backtrace",3]]],[11,"new_unresolved","","Similar to <code>new</code> except that this does not resolve any …",7,[[],["backtrace",3]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[]]],[11,"resolve","","If this backtrace was created from <code>new_unresolved</code> then …",7,[[]]],[11,"ip","","Same as <code>Frame::ip</code>",8,[[]]],[11,"symbol_address","","Same as <code>Frame::symbol_address</code>",8,[[]]],[11,"module_base_address","","Same as <code>Frame::module_base_address</code>",8,[[],["option",4]]],[11,"symbols","","Returns the list of symbols that this frame corresponds …",8,[[]]],[11,"name","","Same as <code>Symbol::name</code>",9,[[],[["option",4],["symbolname",3]]]],[11,"addr","","Same as <code>Symbol::addr</code>",9,[[],["option",4]]],[11,"filename","","Same as <code>Symbol::filename</code>",9,[[],[["path",3],["option",4]]]],[11,"lineno","","Same as <code>Symbol::lineno</code>",9,[[],[["option",4],["u32",15]]]],[11,"colno","","Same as <code>Symbol::colno</code>",9,[[],[["option",4],["u32",15]]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","i":[[8,"ReadBytesExt","byteorder","Extends <code>Read</code> with methods for reading numbers. (For …",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["u128",15],["result",6]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["result",6],["i128",15]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["u128",15],["result",6]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["result",6],["i128",15]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends <code>Write</code> with methods for writing numbers. (For …",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]],[8,"ByteOrder","","<code>ByteOrder</code> describes types that can serialize integers as …",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",2,[[],["u16",15]]],[11,"read_u24","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.",2,[[],["u32",15]]],[10,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",2,[[],["u32",15]]],[11,"read_u48","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.",2,[[],["u64",15]]],[10,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",2,[[],["u64",15]]],[10,"read_u128","","Reads an unsigned 128 bit integer from <code>buf</code>.",2,[[],["u128",15]]],[10,"read_uint","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u64",15]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["u128",15]]],[10,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["u16",15]]]],[11,"write_u24","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.",2,[[["u32",15]]]],[10,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["u32",15]]]],[11,"write_u48","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.",2,[[["u64",15]]]],[10,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["u64",15]]]],[10,"write_u128","","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["u128",15]]]],[10,"write_uint","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u64",15]]]],[10,"write_uint128","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["u128",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",2,[[],["i16",15]]],[11,"read_i24","","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.",2,[[],["i32",15]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",2,[[],["i32",15]]],[11,"read_i48","","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.",2,[[],["i64",15]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",2,[[],["i64",15]]],[11,"read_i128","","Reads a signed 128 bit integer from <code>buf</code>.",2,[[],["i128",15]]],[11,"read_int","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i64",15]]],[11,"read_int128","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[["usize",15]],["i128",15]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",2,[[],["f32",15]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",2,[[],["f64",15]]],[11,"write_i16","","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.",2,[[["i16",15]]]],[11,"write_i24","","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.",2,[[["i32",15]]]],[11,"write_i32","","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.",2,[[["i32",15]]]],[11,"write_i48","","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.",2,[[["i64",15]]]],[11,"write_i64","","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.",2,[[["i64",15]]]],[11,"write_i128","","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.",2,[[["i128",15]]]],[11,"write_int","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["i64",15],["usize",15]]]],[11,"write_int128","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[["usize",15],["i128",15]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",2,[[["f32",15]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",2,[[["f64",15]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a …",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a …",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a …",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to …",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a …",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a …",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a …",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a …",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 …",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 …",2,[[]]],[4,"BigEndian","","Defines big-endian serialization.",null,null],[6,"BE","","A type alias for <code>BigEndian</code>.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"LE","","A type alias for <code>LittleEndian</code>.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[],["u16",15]]],[11,"read_u32","","",3,[[],["u32",15]]],[11,"read_u64","","",3,[[],["u64",15]]],[11,"read_u128","","",3,[[],["u128",15]]],[11,"read_uint","","",3,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",3,[[["usize",15]],["u128",15]]],[11,"write_u16","","",3,[[["u16",15]]]],[11,"write_u32","","",3,[[["u32",15]]]],[11,"write_u64","","",3,[[["u64",15]]]],[11,"write_u128","","",3,[[["u128",15]]]],[11,"write_uint","","",3,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",3,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16",15]]],[11,"read_u32","","",4,[[],["u32",15]]],[11,"read_u64","","",4,[[],["u64",15]]],[11,"read_u128","","",4,[[],["u128",15]]],[11,"read_uint","","",4,[[["usize",15]],["u64",15]]],[11,"read_uint128","","",4,[[["usize",15]],["u128",15]]],[11,"write_u16","","",4,[[["u16",15]]]],[11,"write_u32","","",4,[[["u32",15]]]],[11,"write_u64","","",4,[[["u64",15]]]],[11,"write_u128","","",4,[[["u128",15]]]],[11,"write_uint","","",4,[[["usize",15],["u64",15]]]],[11,"write_uint128","","",4,[[["usize",15],["u128",15]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]],["bool",15]]],[11,"eq","","",4,[[["littleendian",4]],["bool",15]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],[["result",6],["i8",15]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],[["result",6],["i16",15]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],[["result",6],["i32",15]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],[["i64",15],["result",6]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],[["u128",15],["result",6]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],[["result",6],["i128",15]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["i64",15],["result",6]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[["usize",15]],[["u128",15],["result",6]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["usize",15]],[["result",6],["i128",15]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],[["f64",15],["result",6]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["u8",15]],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["i8",15]],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[["u16",15]],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["i16",15]],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[["u32",15]],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["i32",15]],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[["u64",15]],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64",15]],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[["u128",15]],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["i128",15]],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u64",15]],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64",15],["usize",15]],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[["usize",15],["u128",15]],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["usize",15],["i128",15]],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cassowary":{"doc":"This crate contains an implementation of the Cassowary …","i":[[0,"strength","cassowary","Contains useful constants and functions for producing …",null,null],[5,"create","cassowary::strength","Create a constraint as a linear combination of STRONG, …",null,[[["f64",15]],["f64",15]]],[17,"REQUIRED","","",null,null],[17,"STRONG","","",null,null],[17,"MEDIUM","","",null,null],[17,"WEAK","","",null,null],[5,"clip","","Clips a strength value to the legal range",null,[[["f64",15]],["f64",15]]],[3,"Variable","cassowary","Identifies a variable for the constraint solver. Each new …",null,null],[11,"new","","Produces a new unique variable for use in constraint …",0,[[],["variable",3]]],[3,"Term","","A variable and a coefficient to multiply that variable …",null,null],[12,"variable","","",1,null],[12,"coefficient","","",1,null],[3,"Expression","","An expression that can be the left hand or right hand …",null,null],[12,"terms","","",2,null],[12,"constant","","",2,null],[11,"from_constant","","Constructs an expression of the form <em>n</em>, where n is a …",2,[[["f64",15]],["expression",3]]],[11,"from_term","","Constructs an expression from a single term. Forms an …",2,[[["term",3]],["expression",3]]],[11,"new","","General constructor. Each <code>Term</code> in <code>terms</code> is part of the …",2,[[["f64",15],["term",3],["vec",3]],["expression",3]]],[11,"negate","","Mutates this expression by multiplying it by minus one.",2,[[]]],[4,"RelationalOperator","","The possible relations that a constraint can specify.",null,null],[13,"LessOrEqual","","<code><=</code>",3,null],[13,"Equal","","<code>==</code>",3,null],[13,"GreaterOrEqual","","<code>>=</code>",3,null],[3,"Constraint","","A constraint, consisting of an equation governed by an …",null,null],[11,"new","","Construct a new constraint from an expression, a …",4,[[["relationaloperator",4],["f64",15],["expression",3]],["constraint",3]]],[11,"expr","","The expression of the left hand side of the constraint …",4,[[],["expression",3]]],[11,"op","","The relational operator governing the constraint.",4,[[],["relationaloperator",4]]],[11,"strength","","The strength of the constraint that the solver will use.",4,[[],["f64",15]]],[4,"WeightedRelation","","This is part of the syntactic sugar used for specifying …",null,null],[13,"EQ","","<code>==</code>",5,null],[13,"LE","","<code><=</code>",5,null],[13,"GE","","<code>>=</code>",5,null],[3,"PartialConstraint","","This is an intermediate type used in the syntactic sugar …",null,null],[4,"AddConstraintError","","The possible error conditions that <code>Solver::add_constraint</code> …",null,null],[13,"DuplicateConstraint","","The constraint specified has already been added to the …",6,null],[13,"UnsatisfiableConstraint","","The constraint is required, but it is unsatisfiable in …",6,null],[13,"InternalSolverError","","The solver entered an invalid state. If this occurs …",6,null],[4,"RemoveConstraintError","","The possible error conditions that …",null,null],[13,"UnknownConstraint","","The constraint specified was not already in the solver, …",7,null],[13,"InternalSolverError","","The solver entered an invalid state. If this occurs …",7,null],[4,"AddEditVariableError","","The possible error conditions that …",null,null],[13,"DuplicateEditVariable","","The specified variable is already marked as an edit …",8,null],[13,"BadRequiredStrength","","The specified strength was <code>REQUIRED</code>. This is illegal for …",8,null],[4,"RemoveEditVariableError","","The possible error conditions that …",null,null],[13,"UnknownEditVariable","","The specified variable was not an edit variable in the …",9,null],[13,"InternalSolverError","","The solver entered an invalid state. If this occurs …",9,null],[4,"SuggestValueError","","The possible error conditions that <code>Solver::suggest_value</code> …",null,null],[13,"UnknownEditVariable","","The specified variable was not an edit variable in the …",10,null],[13,"InternalSolverError","","The solver entered an invalid state. If this occurs …",10,null],[3,"Solver","","A constraint solver using the Cassowary algorithm. For …",null,null],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",2,[[["f64",15]],["expression",3]]],[11,"from","","",2,[[["variable",3]],["expression",3]]],[11,"from","","",2,[[["term",3]],["expression",3]]],[11,"clone","","",0,[[],["variable",3]]],[11,"clone","","",1,[[],["term",3]]],[11,"clone","","",2,[[],["expression",3]]],[11,"clone","","",3,[[],["relationaloperator",4]]],[11,"clone","","",4,[[],["constraint",3]]],[11,"clone","","",6,[[],["addconstrainterror",4]]],[11,"clone","","",7,[[],["removeconstrainterror",4]]],[11,"clone","","",8,[[],["addeditvariableerror",4]]],[11,"clone","","",9,[[],["removeeditvariableerror",4]]],[11,"clone","","",10,[[],["suggestvalueerror",4]]],[11,"cmp","","",0,[[["variable",3]],["ordering",4]]],[11,"cmp","","",3,[[["relationaloperator",4]],["ordering",4]]],[11,"eq","","",0,[[["variable",3]],["bool",15]]],[11,"ne","","",0,[[["variable",3]],["bool",15]]],[11,"eq","","",3,[[["relationaloperator",4]],["bool",15]]],[11,"eq","","",4,[[["constraint",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["variable",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["variable",3]],["bool",15]]],[11,"le","","",0,[[["variable",3]],["bool",15]]],[11,"gt","","",0,[[["variable",3]],["bool",15]]],[11,"ge","","",0,[[["variable",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["relationaloperator",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["f64",15]],["term",3]]],[11,"div","","",0,[[["f32",15]],["term",3]]],[11,"div","","",1,[[["f64",15]],["term",3]]],[11,"div","","",1,[[["f32",15]],["term",3]]],[11,"div","","",2,[[["f64",15]],["expression",3]]],[11,"div","","",2,[[["f32",15]],["expression",3]]],[11,"sub","","",0,[[["f64",15]],["expression",3]]],[11,"sub","","",0,[[["f32",15]],["expression",3]]],[11,"sub","","",0,[[["variable",3]],["expression",3]]],[11,"sub","","",0,[[["term",3]],["expression",3]]],[11,"sub","","",1,[[["variable",3]],["expression",3]]],[11,"sub","","",0,[[["expression",3]],["expression",3]]],[11,"sub","","",2,[[["variable",3]],["expression",3]]],[11,"sub","","",1,[[["f64",15]],["expression",3]]],[11,"sub","","",1,[[["f32",15]],["expression",3]]],[11,"sub","","",1,[[["term",3]],["expression",3]]],[11,"sub","","",1,[[["expression",3]],["expression",3]]],[11,"sub","","",2,[[["term",3]],["expression",3]]],[11,"sub","","",2,[[["f64",15]],["expression",3]]],[11,"sub","","",2,[[["f32",15]],["expression",3]]],[11,"sub","","",2,[[["expression",3]],["expression",3]]],[11,"add","","",0,[[["f64",15]],["expression",3]]],[11,"add","","",0,[[["f32",15]],["expression",3]]],[11,"add","","",0,[[["variable",3]],["expression",3]]],[11,"add","","",0,[[["term",3]],["expression",3]]],[11,"add","","",1,[[["variable",3]],["expression",3]]],[11,"add","","",0,[[["expression",3]],["expression",3]]],[11,"add","","",2,[[["variable",3]],["expression",3]]],[11,"add","","",1,[[["f64",15]],["expression",3]]],[11,"add","","",1,[[["f32",15]],["expression",3]]],[11,"add","","",1,[[["term",3]],["expression",3]]],[11,"add","","",1,[[["expression",3]],["expression",3]]],[11,"add","","",2,[[["term",3]],["expression",3]]],[11,"add","","",2,[[["f64",15]],["expression",3]]],[11,"add","","",2,[[["f32",15]],["expression",3]]],[11,"add","","",2,[[["expression",3]],["expression",3]]],[11,"mul","","",0,[[["f64",15]],["term",3]]],[11,"mul","","",0,[[["f32",15]],["term",3]]],[11,"mul","","",1,[[["f64",15]],["term",3]]],[11,"mul","","",1,[[["f32",15]],["term",3]]],[11,"mul","","",2,[[["f64",15]],["expression",3]]],[11,"mul","","",2,[[["f32",15]],["expression",3]]],[11,"neg","","",0,[[],["term",3]]],[11,"neg","","",1,[[],["term",3]]],[11,"neg","","",2,[[],["expression",3]]],[11,"bitor","","",0,[[["weightedrelation",4]],["partialconstraint",3]]],[11,"bitor","","",1,[[["weightedrelation",4]],["partialconstraint",3]]],[11,"bitor","","",2,[[["weightedrelation",4]],["partialconstraint",3]]],[11,"bitor","","",12,[[["f64",15]],["constraint",3]]],[11,"bitor","","",12,[[["f32",15]],["constraint",3]]],[11,"bitor","","",12,[[["variable",3]],["constraint",3]]],[11,"bitor","","",12,[[["term",3]],["constraint",3]]],[11,"bitor","","",12,[[["expression",3]],["constraint",3]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"new","","Construct a new solver.",11,[[],["solver",3]]],[11,"add_constraints","","",11,[[["intoiterator",8]],[["result",4],["addconstrainterror",4]]]],[11,"add_constraint","","Add a constraint to the solver.",11,[[["constraint",3]],[["result",4],["addconstrainterror",4]]]],[11,"remove_constraint","","Remove a constraint from the solver.",11,[[["constraint",3]],[["removeconstrainterror",4],["result",4]]]],[11,"has_constraint","","Test whether a constraint has been added to the solver.",11,[[["constraint",3]],["bool",15]]],[11,"add_edit_variable","","Add an edit variable to the solver.",11,[[["f64",15],["variable",3]],[["result",4],["addeditvariableerror",4]]]],[11,"remove_edit_variable","","Remove an edit variable from the solver.",11,[[["variable",3]],[["removeeditvariableerror",4],["result",4]]]],[11,"has_edit_variable","","Test whether an edit variable has been added to the …",11,[[["variable",3]],["bool",15]]],[11,"suggest_value","","Suggest a value for the given edit variable.",11,[[["f64",15],["variable",3]],[["suggestvalueerror",4],["result",4]]]],[11,"fetch_changes","","Fetches all changes to the values of variables since the …",11,[[]]],[11,"reset","","Reset the solver to the empty starting condition.",11,[[]]],[11,"get_value","","Get the stored value for a variable.",11,[[["variable",3]],["f64",15]]]],"p":[[3,"Variable"],[3,"Term"],[3,"Expression"],[4,"RelationalOperator"],[3,"Constraint"],[4,"WeightedRelation"],[4,"AddConstraintError"],[4,"RemoveConstraintError"],[4,"AddEditVariableError"],[4,"RemoveEditVariableError"],[4,"SuggestValueError"],[3,"Solver"],[3,"PartialConstraint"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"clap":{"doc":"https://github.com/clap-rs/clap","i":[[3,"App","clap","Represents a command line interface which is made up of …",null,null],[4,"AppSettings","","Application level settings, which affect how <code>App</code> operates",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should <em>not</em> …",0,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument <em>…",0,null],[13,"AllArgsOverrideSelf","","Specifies that all arguments override themselves. This is …",0,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is …",0,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where …",0,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which …",0,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid argument negates [subcomands…",0,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and …",0,null],[13,"SubcommandPrecedenceOverArg","","Instructs the parser to stop when encountering a …",0,null],[13,"ColoredHelp","","Uses colorized help messages.",0,null],[13,"ColorAuto","","Enables colored output only when the output is going to a …",0,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the …",0,null],[13,"ColorNever","","Disables colored output no matter if the output is going …",0,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into …",0,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when <code>--</code> or …",0,null],[13,"DisableHelpFlags","","Disables <code>-h</code> and <code>--help</code> <code>App</code> without affecting any of the …",0,null],[13,"DisableHelpSubcommand","","Disables the <code>help</code> subcommand",0,null],[13,"DisableVersion","","Disables <code>-V</code> and <code>--version</code> <code>App</code> without affecting any of …",0,null],[13,"DeriveDisplayOrder","","Displays the arguments and ``s in the help message in the …",0,null],[13,"GlobalVersion","","Specifies to use the version of the current command for …",0,null],[13,"Hidden","","Specifies that this `` should be hidden from help messages",0,null],[13,"HidePossibleValuesInHelp","","Tells <code>clap</code> <em>not</em> to print possible values when displaying …",0,null],[13,"HelpRequired","","Tells <code>clap</code> to panic if help strings are omitted",0,null],[13,"InferSubcommands","","Tries to match unknown args to partial <code>subcommands</code> or …",0,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first …",0,null],[13,"NextLineHelp","","Places the help string for all arguments on the line …",0,null],[13,"SubcommandsNegateReqs","","Allows ``s to override all requirements of the parent …",0,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before …",0,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be …",0,null],[13,"SubcommandRequired","","Allows specifying that if no `` is present at runtime, …",0,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a …",0,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more …",0,null],[13,"VersionlessSubcommands","","Disables <code>-V</code> and <code>--version</code> for all ``s (Defaults to <code>false</code>; …",0,null],[13,"WaitOnError","","Will display a message \\\"Press [ENTER]/[RETURN] to …",0,null],[13,"NoAutoHelp","","@TODO-v3: @docs write them...maybe rename",0,null],[13,"NoAutoVersion","","@TODO-v3: @docs write them...maybe rename",0,null],[3,"Arg","","The abstract representation of a command line argument. …",null,null],[3,"ArgGroup","","<code>ArgGroup</code>s are a family of related arguments and way for …",null,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set, …",null,null],[13,"Required","","Specifies that an arg must be used",1,null],[13,"MultipleValues","","Allows an arg to accept multiple values",1,null],[13,"MultipleOccurrences","","Allows an arg to appear multiple times",1,null],[13,"AllowEmptyValues","","Allows an arg accept empty values such as <code>\\\"\\\"</code>",1,null],[13,"Hidden","","Hides an arg from the help message",1,null],[13,"TakesValue","","Allows an argument to take a value (such as <code>--option value</code>…",1,null],[13,"UseValueDelimiter","","Enables a delimiter to break up arguments …",1,null],[13,"NextLineHelp","","Tells an arg to display it\'s help on the line below the …",1,null],[13,"RequireDelimiter","","Says that arg <em>must</em> use a delimiter to separate values",1,null],[13,"HidePossibleValues","","Hides the possible values from the help message",1,null],[13,"AllowHyphenValues","","Allows values that start with a hyphen",1,null],[13,"RequireEquals","","Requires that an equals be used to provide a value to an …",1,null],[13,"Last","","Says that a positional arg will be the last positional, …",1,null],[13,"HideDefaultValue","","Hides the default value from the help message",1,null],[13,"IgnoreCase","","Possible values become case insensitive",1,null],[13,"HideEnvValues","","Hides any values currently assigned to ENV variables in …",1,null],[13,"HiddenShortHelp","","The argument should <strong>not</strong> be shown in short help text",1,null],[13,"HiddenLongHelp","","The argument should <strong>not</strong> be shown in long help text",1,null],[4,"ValueHint","","Provides hints about argument types for shell command …",null,null],[13,"Unknown","","Default value if hint is not specified. Follows shell …",2,null],[13,"Other","","None of the hints below apply. Disables shell completion …",2,null],[13,"AnyPath","","Any existing path.",2,null],[13,"FilePath","","Path to a file.",2,null],[13,"DirPath","","Path to a directory.",2,null],[13,"ExecutablePath","","Path to an executable file.",2,null],[13,"CommandName","","Name of a command, without arguments. May be relative to …",2,null],[13,"CommandString","","A single string containing a command and its arguments.",2,null],[13,"CommandWithArguments","","Capture the remaining arguments as a command name and …",2,null],[13,"Username","","Name of a local operating system user.",2,null],[13,"Hostname","","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …",2,null],[13,"Url","","Complete web address.",2,null],[13,"EmailAddress","","Email address.",2,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"kind","","The type of error",3,null],[12,"info","","Additional information depending on the error kind, like …",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an <code>Arg</code> has a set of possible values, and the …",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or …",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized [``] which …",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized `` which …",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an …",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument …",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument …",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an …",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of …",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict …",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more …",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by …",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or `` is required, as …",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an …",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid …",4,null],[13,"DisplayHelp","","Not a true \\\"error\\\" as it means <code>--help</code> or similar was used.…",4,null],[13,"DisplayVersion","","Not a true \\\"error\\\" as it means <code>--version</code> or similar was …",4,null],[13,"ArgumentNotFound","","Occurs when using the [<code>ArgMathes::value_of_t</code>] and friends …",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to …",4,null],[13,"Format","","Represents a Format error (which is a part of <code>Display</code>). …",4,null],[6,"Result","","Short hand for <code>Result</code> type",null,null],[3,"ArgMatches","","Used to get information about the arguments that were …",null,null],[3,"Indices","","An iterator for getting multiple indices out of an …",null,null],[3,"OsValues","","An iterator for getting multiple values out of an …",null,null],[3,"Values","","An iterator for getting multiple values out of an …",null,null],[8,"ArgEnum","","@TODO @release @docs",null,null],[18,"VARIANTS","","@TODO @release @docs",5,null],[10,"from_str","","@TODO @release @docs",5,[[["bool",15],["str",15]],[["string",3],["result",4]]]],[8,"Clap","","The primary one-stop-shop trait used to create an …",null,null],[11,"parse","","Parse from <code>std::env::args_os()</code>, exit on error",6,[[]]],[11,"try_parse","","Parse from <code>std::env::args_os()</code>, return Err on error.",6,[[],[["result",4],["error",3]]]],[11,"parse_from","","Parse from iterator, exit on error",6,[[]]],[11,"try_parse_from","","Parse from iterator, return Err on error.",6,[[],[["result",4],["error",3]]]],[8,"FromArgMatches","","Converts an instance of <code>ArgMatches</code> to a consumer defined …",null,null],[10,"from_arg_matches","","It\'s common to have an \\\"application context\\\" struct …",7,[[["argmatches",3]]]],[8,"IntoApp","","Build an App according to the struct",null,null],[10,"into_app","","@TODO @release @docs",8,[[],["app",3]]],[10,"augment_clap","","@TODO @release @docs",8,[[["app",3]],["app",3]]],[8,"Subcommand","","@TODO @release @docs",null,null],[10,"from_subcommand","","@TODO @release @docs",9,[[["option",4]],["option",4]]],[10,"augment_subcommands","","@TODO @release @docs",9,[[["app",3]],["app",3]]],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at …",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your …",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml …",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at …",null,null],[14,"app_from_crate","","Allows you to build the <code>App</code> instance from your Cargo.toml …",null,null],[14,"clap_app","","Build <code>App</code>, <code>Arg</code> and <code>Group</code> with Usage-string like input but …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",11,[[["arg",3]]]],[11,"from","","",11,[[["str",15]]]],[11,"from","","",12,[[["arggroup",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"next_back","","",14,[[],[["option",4],["str",15]]]],[11,"next_back","","",15,[[],[["option",4],["osstr",3]]]],[11,"next_back","","",16,[[],[["usize",15],["option",4]]]],[11,"next","","",14,[[],[["option",4],["str",15]]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],[["option",4],["osstr",3]]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",16,[[]]],[11,"clone","","",0,[[],["appsettings",4]]],[11,"clone","","",10,[[],["app",3]]],[11,"clone","","",1,[[],["argsettings",4]]],[11,"clone","","",2,[[],["valuehint",4]]],[11,"clone","","",11,[[],["arg",3]]],[11,"clone","","",12,[[]]],[11,"clone","","",4,[[],["errorkind",4]]],[11,"clone","","",13,[[],["argmatches",3]]],[11,"clone","","",14,[[],["values",3]]],[11,"clone","","",15,[[],["osvalues",3]]],[11,"clone","","",16,[[],["indices",3]]],[11,"default","","",10,[[],["app",3]]],[11,"default","","",2,[[]]],[11,"default","","",11,[[],["arg",3]]],[11,"default","","",12,[[],["arggroup",3]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"cmp","","",11,[[["arg",3]],["ordering",4]]],[11,"eq","","",0,[[["appsettings",4]],["bool",15]]],[11,"eq","","",1,[[["argsettings",4]],["bool",15]]],[11,"eq","","",2,[[["valuehint",4]],["bool",15]]],[11,"eq","","",11,[[["arg",3]],["bool",15]]],[11,"eq","","",4,[[["errorkind",4]],["bool",15]]],[11,"partial_cmp","","",11,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_str","","",0,[[["str",15]],["result",4]]],[11,"from_str","","",1,[[["str",15]],["result",4]]],[11,"from_str","","",2,[[["str",15]],["result",4]]],[11,"parse","","Parse from <code>std::env::args_os()</code>, exit on error",6,[[]]],[11,"try_parse","","Parse from <code>std::env::args_os()</code>, return Err on error.",6,[[],[["result",4],["error",3]]]],[11,"parse_from","","Parse from iterator, exit on error",6,[[]]],[11,"try_parse_from","","Parse from iterator, return Err on error.",6,[[],[["result",4],["error",3]]]],[18,"VARIANTS","","@TODO @release @docs",5,null],[11,"get_name","","Get the name of the app.",10,[[],["str",15]]],[11,"get_short_flag","","Get the short flag of the subcommand.",10,[[],[["char",15],["option",4]]]],[11,"get_long_flag","","Get the long flag of the subcommand.",10,[[],[["option",4],["str",15]]]],[11,"get_bin_name","","Get the name of the binary.",10,[[],[["option",4],["str",15]]]],[11,"set_bin_name","","Set binary name. Uses <code>&mut self</code> instead of <code>self</code>.",10,[[["into",8],["string",3]]]],[11,"get_about","","Get the help message specified via <code>App::about</code>.",10,[[],[["option",4],["str",15]]]],[11,"get_visible_aliases","","Iterate through the <em>visible</em> aliases for this subcommand.",10,[[]]],[11,"get_visible_short_flag_aliases","","Iterate through the <em>visible</em> short aliases for this …",10,[[]]],[11,"get_visible_long_flag_aliases","","Iterate through the <em>visible</em> short aliases for this …",10,[[]]],[11,"get_all_aliases","","Iterate through the set of <em>all</em> the aliases for this …",10,[[]]],[11,"get_all_short_flag_aliases","","Iterate through the set of <em>all</em> the short aliases for this …",10,[[]]],[11,"get_all_long_flag_aliases","","Iterate through the set of <em>all</em> the long aliases for this …",10,[[]]],[11,"get_subcommands","","Iterate through the set of subcommands, getting a …",10,[[]]],[11,"get_subcommands_mut","","Iterate through the set of subcommands, getting a mutable …",10,[[]]],[11,"get_arguments","","Iterate through the set of arguments.",10,[[]]],[11,"get_positionals","","Get the list of <em>positional</em> arguments.",10,[[]]],[11,"get_flags_with_no_heading","","Iterate through the <em>flags</em> that don\'t have custom heading.",10,[[]]],[11,"get_opts_with_no_heading","","Iterate through the <em>options</em> that don\'t have custom …",10,[[]]],[11,"get_arg_conflicts_with","","Get a list of all arguments the given argument conflicts …",10,[[["arg",3]],[["arg",3],["vec",3]]]],[11,"is_set","","Returns <code>true</code> if the given <code>AppSettings</code> variant is …",10,[[["appsettings",4]],["bool",15]]],[11,"has_subcommands","","Returns <code>true</code> if this <code>App</code> has subcommands.",10,[[],["bool",15]]],[11,"find_subcommand","","Find subcommand such that its name or one of aliases …",10,[[],[["option",4],["app",3]]]],[11,"new","","Creates a new instance of an <code>App</code> requiring a <code>name</code>.",10,[[["into",8],["string",3]]]],[11,"author","","Sets a string of author(s) that will be displayed to the …",10,[[["str",15],["into",8]]]],[11,"bin_name","","Overrides the runtime-determined name of the binary. This …",10,[[["into",8],["string",3]]]],[11,"about","","Sets a string describing what the program does. This will …",10,[[["str",15],["into",8]]]],[11,"long_about","","Sets a long format string describing what the program …",10,[[["str",15],["into",8]]]],[11,"name","","(Re)Sets the program\'s name. This will be displayed when …",10,[[["into",8],["string",3]]]],[11,"after_help","","Adds additional help information to be displayed at the …",10,[[["str",15],["into",8]]]],[11,"after_long_help","","Adds additional help information to be displayed in …",10,[[["str",15],["into",8]]]],[11,"before_help","","Adds additional help information to be displayed prior to …",10,[[["str",15],["into",8]]]],[11,"before_long_help","","Adds additional help information to be displayed prior to …",10,[[["str",15],["into",8]]]],[11,"short_flag","","Allows the subcommand to be used as if it were an …",10,[[["char",15]]]],[11,"long_flag","","Allows the subcommand to be used as if it were an …",10,[[["str",15]]]],[11,"version","","Sets a string of the version number to be displayed when …",10,[[["str",15],["into",8]]]],[11,"long_version","","Sets a string of the version number to be displayed when …",10,[[["str",15],["into",8]]]],[11,"override_usage","","Overrides the <code>clap</code> generated usage string.",10,[[["str",15],["into",8]]]],[11,"override_help","","Overrides the <code>clap</code> generated help message. This should …",10,[[["str",15],["into",8]]]],[11,"help_template","","Sets the help template to be used, overriding the default …",10,[[["str",15],["into",8]]]],[11,"setting","","Enables a single settings for the current (this <code>App</code> …",10,[[["appsettings",4]]]],[11,"unset_setting","","Disables a single setting for the current (this <code>App</code> …",10,[[["appsettings",4]]]],[11,"global_setting","","Enables a single setting that is propagated <strong>down</strong> through …",10,[[["appsettings",4]]]],[11,"unset_global_setting","","Disables a global setting, and stops propagating down to …",10,[[["appsettings",4]]]],[11,"term_width","","Sets the terminal width at which to wrap help messages. …",10,[[["usize",15]]]],[11,"max_term_width","","Sets the maximum terminal width at which to wrap help …",10,[[["usize",15]]]],[11,"arg","","Adds an argument to the list of valid possibilities.",10,[[["arg",3],["into",8]]]],[11,"help_heading","","Set a custom section heading for future args. Every call …",10,[[["str",15]]]],[11,"stop_custom_headings","","Stop using custom argument headings and return to default …",10,[[]]],[11,"args","","Adds multiple arguments to the list of valid …",10,[[]]],[11,"alias","","If this <code>App</code> instance is a subcommand, this method adds an …",10,[[["str",15],["into",8]]]],[11,"short_flag_alias","","Allows adding an alias, which function as \\\"hidden\\\" short …",10,[[["char",15]]]],[11,"long_flag_alias","","Allows adding an alias, which function as \\\"hidden\\\" long …",10,[[["str",15]]]],[11,"aliases","","If this <code>App</code> instance is a subcommand, this method adds a …",10,[[]]],[11,"short_flag_aliases","","Allows adding aliases, which function as \\\"hidden\\\" short …",10,[[]]],[11,"long_flag_aliases","","Allows adding aliases, which function as \\\"hidden\\\" long …",10,[[]]],[11,"visible_alias","","If this <code>App</code> instance is a subcommand, this method adds a …",10,[[["str",15],["into",8]]]],[11,"visible_short_flag_alias","","Allows adding an alias that functions exactly like those …",10,[[["char",15]]]],[11,"visible_long_flag_alias","","Allows adding an alias that functions exactly like those …",10,[[["str",15]]]],[11,"visible_aliases","","If this <code>App</code> instance is a subcommand, this method adds …",10,[[]]],[11,"visible_short_flag_aliases","","Allows adding multiple short flag aliases that functions …",10,[[]]],[11,"visible_long_flag_aliases","","Allows adding multiple long flag aliases that functions …",10,[[]]],[11,"replace","","Replaces an argument or subcommand used on the CLI at …",10,[[["str",15]]]],[11,"group","","Adds an <code>ArgGroup</code> to the application. <code>ArgGroup</code>s are a …",10,[[["arggroup",3]]]],[11,"groups","","Adds multiple <code>ArgGroup</code>s to the <code>App</code> at once.",10,[[]]],[11,"subcommand","","Adds a subcommand to the list of valid possibilities. …",10,[[["app",3]]]],[11,"subcommands","","Adds multiple subcommands to the list of valid …",10,[[]]],[11,"display_order","","Allows custom ordering of subcommands within the help …",10,[[["usize",15]]]],[11,"mut_arg","","Allows one to mutate an <code>Arg</code> after it\'s been added to an …",10,[[]]],[11,"print_help","","Prints the full help message to <code>io::stdout()</code> using a […",10,[[],["result",6]]],[11,"print_long_help","","Prints the full help message to <code>io::stdout()</code> using a …",10,[[],["result",6]]],[11,"write_help","","Writes the full help message to the user to a <code>io::Write</code> …",10,[[],["result",6]]],[11,"write_long_help","","Writes the full help message to the user to a <code>io::Write</code> …",10,[[],["result",6]]],[11,"render_version","","Returns the version message rendered as if the user ran <code>-V</code>…",10,[[],["string",3]]],[11,"render_long_version","","Returns the version message rendered as if the user ran …",10,[[],["string",3]]],[11,"generate_usage","","@TODO-v3-alpha @docs @p2: write docs",10,[[],["string",3]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error …",10,[[],["argmatches",3]]],[11,"get_matches_mut","","Starts the parsing process, just like <code>App::get_matches</code> …",10,[[],["argmatches",3]]],[11,"try_get_matches","","Starts the parsing process. This method will return a …",10,[[],[["clapresult",6],["argmatches",3]]]],[11,"get_matches_from","","Starts the parsing process. Like <code>App::get_matches</code> this …",10,[[],["argmatches",3]]],[11,"try_get_matches_from","","Starts the parsing process. A combination of …",10,[[],[["clapresult",6],["argmatches",3]]]],[11,"try_get_matches_from_mut","","Starts the parsing process without consuming the <code>App</code> …",10,[[],[["clapresult",6],["argmatches",3]]]],[11,"subcommand_placeholder","","Sets the placeholder text used for subcommands when …",10,[[]]],[11,"get_name","","Get the name of the argument",11,[[],["str",15]]],[11,"get_about","","Get the help specified for this argument, if any",11,[[],[["option",4],["str",15]]]],[11,"get_help_heading","","Get the help heading specified for this argument, if any",11,[[],[["option",4],["str",15]]]],[11,"get_short","","Get the short option name for this argument, if any",11,[[],[["char",15],["option",4]]]],[11,"get_visible_short_aliases","","Get visible short aliases for this argument, if any",11,[[],[["vec",3],["option",4]]]],[11,"get_long","","Get the long option name for this argument, if any",11,[[],[["option",4],["str",15]]]],[11,"get_possible_values","","Get the list of the possible values for this argument, if …",11,[[],["option",4]]],[11,"get_index","","Get the index of this argument, if any",11,[[],[["option",4],["u64",15]]]],[11,"get_value_hint","","Get the value hint of this argument",11,[[],["valuehint",4]]],[11,"new","","Creates a new instance of <code>Arg</code> using a unique string name. …",11,[[["str",15],["into",8]]]],[11,"short","","Sets the short version of the argument without the …",11,[[["char",15]]]],[11,"long","","Sets the long version of the argument without the …",11,[[["str",15]]]],[11,"alias","","Allows adding a <code>Arg</code> alias, which function as \\\"hidden\\\" …",11,[[["str",15],["into",8]]]],[11,"short_alias","","Allows adding a <code>Arg</code> alias, which function as \\\"hidden\\\" …",11,[[["char",15]]]],[11,"aliases","","Allows adding <code>Arg</code> aliases, which function as \\\"hidden\\\" …",11,[[]]],[11,"short_aliases","","Allows adding <code>Arg</code> aliases, which function as \\\"hidden\\\" …",11,[[]]],[11,"visible_alias","","Allows adding a <code>Arg</code> alias that functions exactly like …",11,[[["str",15],["into",8]]]],[11,"visible_short_alias","","Allows adding a <code>Arg</code> alias that functions exactly like …",11,[[["char",15]]]],[11,"visible_aliases","","Allows adding multiple <code>Arg</code> aliases that functions exactly …",11,[[]]],[11,"visible_short_aliases","","Allows adding multiple <code>Arg</code> aliases that functions exactly …",11,[[]]],[11,"about","","Sets the short help text of the argument that will be …",11,[[["str",15]]]],[11,"long_about","","Sets the long help text of the argument that will be …",11,[[["str",15]]]],[11,"required_unless_present","","Set this arg as required as long as the specified …",11,[[["key",8]]]],[11,"required_unless_present_all","","Sets this arg as [required] unless <em>all</em> of the specified …",11,[[]]],[11,"required_unless_present_any","","Sets this arg as required unless <em>any</em> of the specified …",11,[[]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this …",11,[[["key",8]]]],[11,"conflicts_with_all","","The same as <code>Arg::conflicts_with</code> but allows specifying …",11,[[]]],[11,"exclusive","","Set an exclusive argument by name. An exclusive argument …",11,[[["bool",15]]]],[11,"overrides_with","","Sets an overridable argument by name. I.e. this argument …",11,[[["key",8]]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. …",11,[[]]],[11,"requires","","Sets an argument by name that is required when this one …",11,[[["key",8]]]],[11,"requires_if","","Require another argument if this arg was present on …",11,[[["str",15],["key",8]]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement …",11,[[]]],[11,"required_if_eq","","Allows specifying that this argument is required only if …",11,[[["key",8],["str",15]]]],[11,"required_if_eq_any","","Allows specifying that this argument is required based on …",11,[[]]],[11,"requires_all","","Sets multiple arguments by names that are required when …",11,[[]]],[11,"index","","Specifies the index of a positional argument <strong>starting at</strong> …",11,[[["u64",15]]]],[11,"value_terminator","","Specifies a value that <em>stops</em> parsing multiple values of a …",11,[[["str",15]]]],[11,"possible_values","","Specifies a list of possible values for this argument. At …",11,[[]]],[11,"possible_value","","Specifies a possible value for this argument, one at a …",11,[[["str",15]]]],[11,"group","","Specifies the name of the <code>ArgGroup</code> the argument belongs …",11,[[["key",8]]]],[11,"groups","","Specifies the names of multiple <code>ArgGroup</code>\'s the argument …",11,[[]]],[11,"number_of_values","","Specifies how many values are required to satisfy this …",11,[[["u64",15]]]],[11,"validator","","Allows one to perform a custom validation on the argument …",11,[[]]],[11,"validator_os","","Works identically to Validator but is intended to be used …",11,[[]]],[11,"max_values","","Specifies the <em>maximum</em> number of values are for this …",11,[[["u64",15]]]],[11,"min_values","","Specifies the <em>minimum</em> number of values for this argument. …",11,[[["u64",15]]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped …",11,[[["str",15]]]],[11,"value_names","","Specify multiple names for values of option arguments. …",11,[[]]],[11,"value_name","","Specifies the name for value of option or positional …",11,[[["str",15]]]],[11,"default_value","","Specifies the value of the argument when <em>not</em> specified at …",11,[[["str",15]]]],[11,"default_value_os","","Provides a default value in the exact same manner as […",11,[[["osstr",3]]]],[11,"default_values","","Like […",11,[[]]],[11,"default_values_os","","Provides default values in the exact same manner as […",11,[[]]],[11,"default_missing_value","","Specifies a value for the argument when the argument is …",11,[[["str",15]]]],[11,"default_missing_value_os","","Provides a default value in the exact same manner as […",11,[[["osstr",3]]]],[11,"default_missing_values","","Like […",11,[[]]],[11,"default_missing_values_os","","Provides default values in the exact same manner as […",11,[[]]],[11,"default_value_if","","Specifies the value of the argument if <code>arg</code> has been used …",11,[[["key",8],["option",4],["str",15]]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same …",11,[[["osstr",3],["key",8],["option",4]]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same …",11,[[]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact …",11,[[]]],[11,"env","","Specifies that if the value is not passed in as an …",11,[[["str",15]]]],[11,"env_os","","Specifies that if the value is not passed in as an …",11,[[["osstr",3]]]],[11,"display_order","","Allows custom ordering of args within the help message. …",11,[[["usize",15]]]],[11,"last","","Specifies that this arg is the last, or final, positional …",11,[[["bool",15]]]],[11,"required","","Specifies that the argument is required by default. …",11,[[["bool",15]]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",11,[[["bool",15]]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (<code>-</code>)",11,[[["bool",15]]]],[11,"require_equals","","Requires that options use the <code>--option=val</code> syntax (i.e. …",11,[[["bool",15]]]],[11,"global","","Specifies that an argument can be matched to all child ``…",11,[[["bool",15]]]],[11,"require_delimiter","","Specifies that <em>multiple values</em> may only be set using the …",11,[[["bool",15]]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be …",11,[[["bool",15]]]],[11,"hide_default_value","","Specifies that the default value of an argument should …",11,[[["bool",15]]]],[11,"hidden","","Hides an argument from help message output.",11,[[["bool",15]]]],[11,"case_insensitive","","When used with [<code>Arg::possible_values</code>] it allows the …",11,[[["bool",15]]]],[11,"use_delimiter","","Specifies that an argument should allow grouping of …",11,[[["bool",15]]]],[11,"hide_env_values","","Specifies that any values inside the associated ENV …",11,[[["bool",15]]]],[11,"next_line_help","","When set to <code>true</code> the help string will be displayed on the …",11,[[["bool",15]]]],[11,"multiple","","Specifies that the argument may have an unknown number of …",11,[[["bool",15]]]],[11,"multiple_values","","Allows an argument to accept explicitly empty values. An …",11,[[["bool",15]]]],[11,"multiple_occurrences","","Specifies that the argument may appear more than once. …",11,[[["bool",15]]]],[11,"raw","","Indicates that all parameters passed after this should …",11,[[["bool",15]]]],[11,"hidden_short_help","","Hides an argument from short help message output.",11,[[["bool",15]]]],[11,"hidden_long_help","","Hides an argument from long help message output.",11,[[["bool",15]]]],[11,"is_set","","Checks if one of the [<code>ArgSettings</code>] is set for the argument…",11,[[["argsettings",4]],["bool",15]]],[11,"setting","","Sets one of the [<code>ArgSettings</code>] settings for the argument […",11,[[["argsettings",4]]]],[11,"settings","","Sets multiple [<code>ArgSettings</code>] for the argument [<code>ArgSettings</code>]…",11,[[]]],[11,"unset_setting","","Unsets one of the [<code>ArgSettings</code>] for the argument […",11,[[["argsettings",4]]]],[11,"help_heading","","Set a custom heading for this arg to be printed under",11,[[["option",4],["str",15]]]],[11,"value_hint","","Sets a hint about the type of the value for shell …",11,[[["valuehint",4]]]],[11,"new","","Creates a new instance of <code>ArgGroup</code> using a unique string …",12,[[["str",15],["into",8]]]],[11,"arg","","Adds an argument to this group by name",12,[[["key",8]]]],[11,"args","","Adds multiple arguments to this group by name",12,[[]]],[11,"multiple","","Allows more than one of the \'Arg\'s in this group to be …",12,[[["bool",15]]]],[11,"required","","Sets the group as required or not. A required group will …",12,[[["bool",15]]]],[11,"requires","","Sets the requirement rules of this group. This is not to …",12,[[["key",8]]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to …",12,[[]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka …",12,[[["key",8]]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules …",12,[[]]],[11,"use_stderr","","Should the message be written to <code>stdout</code> or not",3,[[],["bool",15]]],[11,"exit","","Prints the error to <code>stderr</code> and exits with a status of <code>1</code>",3,[[]]],[11,"with_description","","Create an error with a custom description.",3,[[["string",3],["errorkind",4]]]],[11,"value_of","","Gets the value of a specific option or positional …",13,[[["key",8]],[["option",4],["str",15]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the …",13,[[["key",8]],[["option",4],["cow",4]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific …",13,[[["key",8]],[["osstr",3],["option",4]]]],[11,"values_of","","Gets a <code>Values</code> struct which implements <code>Iterator</code> for values …",13,[[["key",8]],[["option",4],["values",3]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the …",13,[[["key",8]],[["option",4],["vec",3]]]],[11,"values_of_os","","Gets a [<code>OsValues</code>] struct which is implements [<code>Iterator</code>] …",13,[[["key",8]],[["option",4],["osvalues",3]]]],[11,"value_of_t","","Gets the value of a specific argument (i.e. an argument …",13,[[["str",15]],[["error",3],["result",4]]]],[11,"value_of_t_or_exit","","Gets the value of a specific argument (i.e. an argument …",13,[[["str",15]]]],[11,"values_of_t","","Gets the typed values of a specific argument (i.e. an …",13,[[["str",15]],[["vec",3],["result",4],["error",3]]]],[11,"values_of_t_or_exit","","Gets the typed values of a specific argument (i.e. an …",13,[[["str",15]],["vec",3]]],[11,"is_present","","Returns <code>true</code> if an argument was present at runtime, …",13,[[["key",8]],["bool",15]]],[11,"occurrences_of","","Returns the number of times an argument was used at …",13,[[["key",8]],["u64",15]]],[11,"index_of","","Gets the starting index of the argument in respect to all …",13,[[["key",8]],[["usize",15],["option",4]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other …",13,[[["key",8]],[["indices",3],["option",4]]]],[11,"subcommand_matches","","Because <code>Subcommand</code>s are essentially \\\"sub-<code>App</code>s\\\" they have …",13,[[["key",8]],[["argmatches",3],["option",4]]]],[11,"subcommand_name","","Because <code>Subcommand</code>s are essentially \\\"sub-<code>App</code>s\\\" they have …",13,[[],[["option",4],["str",15]]]],[11,"subcommand","","This brings together <code>ArgMatches::subcommand_matches</code> and …",13,[[],["option",4]]]],"p":[[4,"AppSettings"],[4,"ArgSettings"],[4,"ValueHint"],[3,"Error"],[4,"ErrorKind"],[8,"ArgEnum"],[8,"Clap"],[8,"FromArgMatches"],[8,"IntoApp"],[8,"Subcommand"],[3,"App"],[3,"Arg"],[3,"ArgGroup"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"Indices"]]},\
"clap_derive":{"doc":"This crate is custom derive for clap. It should not be …","i":[[24,"ArgEnum","clap_derive","Generates the <code>ArgEnum</code> impl.",null,null],[24,"Clap","","Generates the <code>Clap</code> implementation.",null,null],[24,"IntoApp","","Generates the <code>IntoApp</code> impl.",null,null],[24,"Subcommand","","Generates the <code>Subcommand</code> impl.",null,null]],"p":[]},\
"claxon":{"doc":"Claxon, a FLAC decoding library.","i":[[0,"frame","claxon","The <code>frame</code> module deals with the frames that make up a …",null,null],[3,"Block","claxon::frame","A block of raw audio samples.",null,null],[11,"empty","","Returns a block with 0 channels and 0 samples.",0,[[],["block",3]]],[11,"time","","Returns the inter-channel sample number of the first …",0,[[],["u64",15]]],[11,"len","","Returns the total number of samples in this block.",0,[[],["u32",15]]],[11,"duration","","Returns the number of inter-channel samples in the block.",0,[[],["u32",15]]],[11,"channels","","Returns the number of channels in the block.",0,[[],["u32",15]]],[11,"channel","","Returns the (zero-based) <code>ch</code>-th channel as a slice.",0,[[["u32",15]]]],[11,"sample","","Returns a sample in this block.",0,[[["u32",15]],["i32",15]]],[11,"into_buffer","","Returns the underlying buffer that stores the samples in …",0,[[],[["vec",3],["i32",15]]]],[11,"stereo_samples","","Returns an iterator that produces left and right channel …",0,[[],["stereosamples",3]]],[3,"StereoSamples","","An iterator over the stereo sample pairs in a block.",null,null],[3,"FrameReader","","Reads frames from a stream and exposes decoded blocks as …",null,null],[6,"FrameResult","","Either a <code>Block</code> or an <code>Error</code>.",null,null],[11,"new","","Creates a new frame reader that will yield at least one …",1,[[],["framereader",3]]],[11,"read_next_or_eof","","Decodes the next frame or returns an error if the data …",1,[[["vec",3],["i32",15]],["frameresult",6]]],[11,"into_inner","","Destroy the frame reader, returning the wrapped reader.",1,[[]]],[0,"input","claxon","Exposes traits that help reading data at the bit level …",null,null],[3,"BufferedReader","claxon::input","Similar to <code>std::io::BufRead</code>, but more performant.",null,null],[11,"new","","Wrap the reader in a new buffered reader.",2,[[],["bufferedreader",3]]],[11,"into_inner","","Destroys the buffered reader, returning the wrapped …",2,[[]]],[8,"ReadBytes","","Provides convenience methods to make input less …",null,null],[10,"read_u8","","Reads a single byte, failing on EOF.",3,[[],[["result",6],["u8",15]]]],[10,"read_u8_or_eof","","Reads a single byte, not failing on EOF.",3,[[],[["option",4],["result",6]]]],[10,"read_into","","Reads until the provided buffer is full.",3,[[],["result",6]]],[10,"skip","","Skips over the specified number of bytes.",3,[[["u32",15]],["result",6]]],[11,"read_be_u16","","Reads two bytes and interprets them as a big-endian …",3,[[],[["result",6],["u16",15]]]],[11,"read_be_u16_or_eof","","Reads two bytes and interprets them as a big-endian …",3,[[],[["result",6],["option",4]]]],[11,"read_be_u24","","Reads three bytes and interprets them as a big-endian …",3,[[],[["u32",15],["result",6]]]],[11,"read_be_u32","","Reads four bytes and interprets them as a big-endian …",3,[[],[["u32",15],["result",6]]]],[11,"read_le_u32","","Reads four bytes and interprets them as a little-endian …",3,[[],[["u32",15],["result",6]]]],[3,"Bitstream","","Wraps a <code>Reader</code> to facilitate reading that is not …",null,null],[11,"new","","Wraps the reader with a reader that facilitates reading …",4,[[],["bitstream",3]]],[11,"read_bit","","Reads a single bit.",4,[[],[["bool",15],["result",6]]]],[11,"read_unary","","Reads bits until a 1 is read, and returns the number of …",4,[[],[["u32",15],["result",6]]]],[11,"read_leq_u8","","Reads at most eight bits.",4,[[["u32",15]],[["result",6],["u8",15]]]],[11,"read_gt_u8_leq_u16","","Read n bits, where 8 < n <= 16.",4,[[["u32",15]],[["u32",15],["result",6]]]],[11,"read_leq_u16","","Reads at most 16 bits.",4,[[["u32",15]],[["result",6],["u16",15]]]],[11,"read_leq_u32","","Reads at most 32 bits.",4,[[["u32",15]],[["u32",15],["result",6]]]],[0,"metadata","claxon","The <code>metadata</code> module deals with metadata at the beginning …",null,null],[3,"StreamInfo","claxon::metadata","The streaminfo metadata block, with important information …",null,null],[12,"min_block_size","","The minimum block size (in inter-channel samples) used in …",5,null],[12,"max_block_size","","The maximum block size (in inter-channel samples) used in …",5,null],[12,"min_frame_size","","The minimum frame size (in bytes) used in the stream.",5,null],[12,"max_frame_size","","The maximum frame size (in bytes) used in the stream.",5,null],[12,"sample_rate","","The sample rate in Hz.",5,null],[12,"channels","","The number of channels.",5,null],[12,"bits_per_sample","","The number of bits per sample.",5,null],[12,"samples","","The total number of inter-channel samples in the stream.",5,null],[12,"md5sum","","MD5 signature of the unencoded audio data.",5,null],[3,"SeekPoint","","A seek point in the seek table.",null,null],[12,"sample","","Sample number of the first sample in the target frame, or …",6,null],[12,"offset","","Offset in bytes from the first byte of the first frame …",6,null],[12,"samples","","Number of samples in the target frame.",6,null],[3,"SeekTable","","A seek table to aid seeking in the stream.",null,null],[3,"VorbisComment","","Vorbis comments, also known as FLAC tags (e.g. artist, …",null,null],[12,"vendor","","The “vendor string”, chosen by the encoder vendor.",7,null],[12,"comments","","Name-value pairs of Vorbis comments, such as <code>ARTIST=Queen</code>.",7,null],[4,"MetadataBlock","","A metadata about the flac stream.",null,null],[13,"StreamInfo","","A stream info block.",8,null],[13,"Padding","","A padding block (with no meaningful data).",8,null],[12,"length","claxon::metadata::MetadataBlock","The number of padding bytes.",9,null],[13,"Application","claxon::metadata","An application block with application-specific data.",8,null],[12,"id","claxon::metadata::MetadataBlock","The registered application ID.",10,null],[12,"data","","The contents of the application block.",10,null],[13,"SeekTable","claxon::metadata","A seek table block.",8,null],[13,"VorbisComment","","A Vorbis comment block, also known as FLAC tags.",8,null],[13,"CueSheet","","A CUE sheet block.",8,null],[13,"Picture","","A picture block.",8,null],[13,"Reserved","","A block with a reserved block type, not supported by this …",8,null],[3,"Tags","","Iterates over Vorbis comments (FLAC tags) in a FLAC …",null,null],[11,"new","","Returns a new <code>Tags</code> iterator.",11,[[],["tags",3]]],[3,"GetTag","","Iterates over Vorbis comments looking for a specific one; …",null,null],[11,"new","","Returns a new <code>GetTag</code> iterator.",12,[[["str",15]],["gettag",3]]],[5,"read_metadata_block_with_header","","Read a single metadata block header and body from the …",null,[[],[["metadatablock",4],["result",6]]]],[5,"read_metadata_block","","Read a single metadata block of the given type and length …",null,[[["u32",15],["u8",15]],[["metadatablock",4],["result",6]]]],[3,"MetadataBlockReader","","Reads metadata blocks from a stream and exposes them as …",null,null],[6,"MetadataBlockResult","","Either a <code>MetadataBlock</code> or an <code>Error</code>.",null,null],[11,"new","","Creates a metadata block reader that will yield at least …",13,[[],["metadatablockreader",3]]],[0,"subframe","claxon","The <code>subframe</code> module deals with subframes that make up a …",null,null],[5,"extend_sign_u32","claxon::subframe","Given a signed two\'s complement integer in the <code>bits</code> least …",null,[[["u32",15]],["i32",15]]],[5,"decode","","Decodes a subframe into the provided block-size buffer.",null,[[["u32",15],["bitstream",3]],["result",6]]],[4,"Error","claxon","An error that prevents successful decoding of the FLAC …",null,null],[13,"IoError","","Not a decoding error, but a problem with the underlying …",14,null],[13,"FormatError","","An ill-formed FLAC stream was encountered.",14,null],[13,"Unsupported","","A currently unsupported feature of the FLAC format was …",14,null],[6,"Result","","A type for results generated by Claxon where the error …",null,null],[3,"FlacReader","","A FLAC decoder that can decode the stream from the …",null,null],[3,"FlacReaderOptions","","Controls what metadata <code>FlacReader</code> reads when constructed.",null,null],[12,"metadata_only","","When true, return a reader as soon as all desired …",15,null],[12,"read_vorbis_comment","","When true, read metadata blocks at least until a Vorbis …",15,null],[3,"FlacSamples","","An iterator that yields samples read from a <code>FlacReader</code>.",null,null],[11,"new","","Create a reader that reads the FLAC format.",16,[[],[["flacreader",3],["result",6]]]],[11,"new_ext","","Create a reader that reads the FLAC format, with reader …",16,[[["flacreaderoptions",3]],[["flacreader",3],["result",6]]]],[11,"streaminfo","","Returns the streaminfo metadata.",16,[[],["streaminfo",3]]],[11,"vendor","","Returns the vendor string of the Vorbis comment block, if …",16,[[],[["option",4],["str",15]]]],[11,"tags","","Returns name-value pairs of Vorbis comments, such as …",16,[[],["tags",3]]],[11,"get_tag","","Look up a Vorbis comment such as <code>ARTIST</code> in a …",16,[[["str",15]],["gettag",3]]],[11,"blocks","","Returns an iterator that decodes a single frame on every …",16,[[],[["bufferedreader",3],["framereader",3]]]],[11,"samples","","Returns an iterator over all samples.",16,[[],[["flacsamples",3],["bufferedreader",3]]]],[11,"into_inner","","Destroys the FLAC reader and returns the underlying …",16,[[]]],[11,"open","","Attempts to create a reader that reads from the specified …",16,[[["asref",8],["path",3]],[["flacreader",3],["result",6]]]],[11,"open_ext","","Attemps to create a reader that reads from the specified …",16,[[["flacreaderoptions",3],["asref",8],["path",3]],[["flacreader",3],["result",6]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","claxon::frame","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","claxon::input","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","claxon::metadata","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","claxon","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"read_u8","claxon::input","",2,[[],[["result",6],["u8",15]]]],[11,"read_u8_or_eof","","",2,[[],[["option",4],["result",6]]]],[11,"read_into","","",2,[[],["result",6]]],[11,"skip","","",2,[[["u32",15]],["result",6]]],[11,"from","claxon","",14,[[["error",3]],["error",4]]],[11,"from","","",14,[[["fromutf8error",3]],["error",4]]],[11,"next","claxon::frame","",17,[[],["option",4]]],[11,"next","claxon::metadata","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",12,[[],[["str",15],["option",4]]]],[11,"next","","",13,[[],[["option",4],["metadatablockresult",6]]]],[11,"size_hint","","",13,[[]]],[11,"next","claxon","",19,[[],[["result",6],["option",4]]]],[11,"clone","claxon::metadata","",5,[[],["streaminfo",3]]],[11,"clone","","",6,[[],["seekpoint",3]]],[11,"clone","claxon","",15,[[],["flacreaderoptions",3]]],[11,"default","","",15,[[],["flacreaderoptions",3]]],[11,"eq","","",14,[[["error",4]],["bool",15]]],[11,"eq","","",15,[[["flacreaderoptions",3]],["bool",15]]],[11,"ne","","",15,[[["flacreaderoptions",3]],["bool",15]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","claxon::metadata","",5,[[["formatter",3]],["result",6]]],[11,"fmt","claxon","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",14,[[],["str",15]]],[11,"cause","","",14,[[],[["error",8],["option",4]]]]],"p":[[3,"Block"],[3,"FrameReader"],[3,"BufferedReader"],[8,"ReadBytes"],[3,"Bitstream"],[3,"StreamInfo"],[3,"SeekPoint"],[3,"VorbisComment"],[4,"MetadataBlock"],[13,"Padding"],[13,"Application"],[3,"Tags"],[3,"GetTag"],[3,"MetadataBlockReader"],[4,"Error"],[3,"FlacReaderOptions"],[3,"FlacReader"],[3,"StereoSamples"],[3,"SeekTable"],[3,"FlacSamples"]]},\
"color_eyre":{"doc":"An error report handler for panics and the <code>eyre</code> crate for …","i":[[0,"config","color_eyre","Configuration options for customizing the behavior of the …",null,null],[3,"Theme","color_eyre::config","A struct that represents a theme that is used by …",null,null],[11,"new","","Creates a blank theme",0,[[]]],[11,"dark","","Returns a theme for dark backgrounds. This is the default",0,[[]]],[11,"light","","Returns a theme for light backgrounds",0,[[]]],[11,"file","","Styles printed paths",0,[[["style",3]]]],[11,"line_number","","Styles the line number of a file",0,[[["style",3]]]],[11,"spantrace_target","","Styles the <code>color_spantrace</code> target (i.e. the module and …",0,[[["style",3]]]],[11,"spantrace_fields","","Styles fields associated with a the <code>tracing::Span</code>.",0,[[["style",3]]]],[11,"active_line","","Styles the selected line of displayed code",0,[[["style",3]]]],[11,"error","","Styles errors printed by <code>EyreHandler</code>",0,[[["style",3]]]],[11,"help_info_note","","Styles the \\\"note\\\" section header",0,[[["style",3]]]],[11,"help_info_warning","","Styles the \\\"warning\\\" section header",0,[[["style",3]]]],[11,"help_info_suggestion","","Styles the \\\"suggestion\\\" section header",0,[[["style",3]]]],[11,"help_info_error","","Styles the \\\"error\\\" section header",0,[[["style",3]]]],[11,"dependency_code","","Styles code that is not part of your crate",0,[[["style",3]]]],[11,"crate_code","","Styles code that\'s in your crate",0,[[["style",3]]]],[11,"code_hash","","Styles the hash after <code>dependency_code</code> and <code>crate_code</code>",0,[[["style",3]]]],[11,"panic_header","","Styles the header of a panic",0,[[["style",3]]]],[11,"panic_message","","Styles the message of a panic",0,[[["style",3]]]],[11,"panic_file","","Styles paths of a panic",0,[[["style",3]]]],[11,"panic_line_number","","Styles the line numbers of a panic",0,[[["style",3]]]],[11,"hidden_frames","","Styles the \\\"N frames hidden\\\" message",0,[[["style",3]]]],[3,"Frame","","A representation of a Frame from a Backtrace or a …",null,null],[12,"n","","Frame index",1,null],[12,"name","","frame symbol name",1,null],[12,"lineno","","source line number",1,null],[12,"filename","","source file path",1,null],[3,"HookBuilder","","Builder for customizing the behavior of the global panic …",null,null],[11,"new","","Construct a HookBuilder",2,[[]]],[11,"blank","","Construct a HookBuilder with minimal features enabled",2,[[]]],[11,"theme","","Set the global styles that <code>color_eyre</code> should use.",2,[[["theme",3]]]],[11,"panic_section","","Add a custom section to the panic hook that will be …",2,[[["sync",8],["display",8],["send",8]]]],[11,"panic_message","","Overrides the main error message printing section at the …",2,[[["panicmessage",8]]]],[11,"capture_span_trace_by_default","","Configures the default capture mode for <code>SpanTraces</code> in …",2,[[["bool",15]]]],[11,"display_env_section","","Configures the enviroment varible info section and …",2,[[["bool",15]]]],[11,"add_frame_filter","","Add a custom filter to the set of frame filters",2,[[["box",3],["filtercallback",6]]]],[11,"install","","Install the given Hook as the global error report hook",2,[[],[["result",4],["report",3]]]],[11,"add_default_filters","","Add the default set of filters to this <code>HookBuilder</code>\'s …",2,[[]]],[11,"into_hooks","","Create a <code>PanicHook</code> and <code>EyreHook</code> from this <code>HookBuilder</code>. …",2,[[]]],[3,"PanicReport","","A type representing an error report for a panic.",null,null],[3,"PanicHook","","A panic reporting hook",null,null],[11,"install","","Install self as a global panic hook via …",3,[[]]],[11,"into_panic_hook","","Convert self into the type expected by …",3,[[],[["box",3],["fn",8]]]],[11,"panic_report","","Construct a panic reporter which prints it\'s panic report …",3,[[["panicinfo",3]],["panicreport",3]]],[3,"EyreHook","","An eyre reporting hook used to construct <code>EyreHandler</code>s",null,null],[11,"install","","Installs self as the global eyre handling hook via …",4,[[],[["result",4],["installerror",3]]]],[11,"into_eyre_hook","","Convert the self into the boxed type expected by …",4,[[],[["fn",8],["box",3]]]],[6,"FilterCallback","","Callback for filtering a vector of <code>Frame</code>s",null,null],[0,"section","color_eyre","Helpers for adding custom sections to error reports",null,null],[3,"IndentedSection","color_eyre::section","An indented section with a header for an error report",null,null],[8,"SectionExt","","Extension trait for constructing sections with commonly …",null,null],[10,"header","","Add a header to a <code>Section</code> and indent the body",5,[[],["indentedsection",3]]],[8,"Section","","A helper trait for attaching informational sections to …",null,null],[16,"Return","","The return type of each method after adding context",6,null],[10,"section","","Add a section to an error report, to be displayed after …",6,[[]]],[10,"with_section","","Add a Section to an error report, to be displayed after …",6,[[]]],[10,"error","","Add an error section to an error report, to be displayed …",6,[[]]],[10,"with_error","","Add an error section to an error report, to be displayed …",6,[[]]],[10,"note","","Add a Note to an error report, to be displayed after the …",6,[[]]],[10,"with_note","","Add a Note to an error report, to be displayed after the …",6,[[]]],[10,"warning","","Add a Warning to an error report, to be displayed after …",6,[[]]],[10,"with_warning","","Add a Warning to an error report, to be displayed after …",6,[[]]],[10,"suggestion","","Add a Suggestion to an error report, to be displayed …",6,[[]]],[10,"with_suggestion","","Add a Suggestion to an error report, to be displayed …",6,[[]]],[8,"PanicMessage","","Trait for printing a panic error message for the given …",null,null],[10,"display","","Display trait equivalent for implementing the display …",7,[[["formatter",3],["panicinfo",3]],["result",6]]],[3,"Handler","color_eyre","A custom handler type for <code>eyre::Report</code> which provides …",null,null],[5,"install","","Install the default panic and error report hooks",null,[[],[["report",3],["result",6]]]],[11,"from","color_eyre::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"header","color_eyre::section","",9,[[],["indentedsection",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","color_eyre","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"clone","color_eyre::config","",0,[[],["theme",3]]],[11,"default","","",0,[[],["theme",3]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","color_eyre","",10,[[["formatter",3]],["result",6]]],[11,"fmt","color_eyre::config","",8,[[["formatter",3]],["result",6]]],[11,"fmt","color_eyre::section","",9,[[["formatter",3]],["result",6]]],[11,"debug","color_eyre","",10,[[["error",8],["formatter",3]],["result",6]]],[11,"track_caller","","",10,[[["location",3]]]],[11,"backtrace","","Return a reference to the captured <code>Backtrace</code> type",10,[[],[["backtrace",3],["option",4]]]],[11,"span_trace","","Return a reference to the captured <code>SpanTrace</code> type",10,[[],[["spantrace",3],["option",4]]]]],"p":[[3,"Theme"],[3,"Frame"],[3,"HookBuilder"],[3,"PanicHook"],[3,"EyreHook"],[8,"SectionExt"],[8,"Section"],[8,"PanicMessage"],[3,"PanicReport"],[3,"IndentedSection"],[3,"Handler"]]},\
"color_spantrace":{"doc":"A rust library for colorizing <code>tracing_error::SpanTrace</code> …","i":[[3,"Theme","color_spantrace","A struct that represents theme that is used by …",null,null],[11,"new","","Create blank theme",0,[[]]],[11,"dark","","A theme for a dark background. This is the default",0,[[]]],[11,"light","","A theme for a light background",0,[[]]],[11,"file","","Styles printed paths",0,[[["style",3]]]],[11,"line_number","","Styles the line number of a file",0,[[["style",3]]]],[11,"target","","Styles the target (i.e. the module and function name, and …",0,[[["style",3]]]],[11,"fields","","Styles fields associated with a the <code>tracing::Span</code>.",0,[[["style",3]]]],[11,"active_line","","Styles the selected line of displayed code",0,[[["style",3]]]],[3,"InstallThemeError","","An error returned by <code>set_theme</code> if a global theme was …",null,null],[5,"set_theme","","Sets the global theme.",null,[[["theme",3]],[["installthemeerror",3],["result",4]]]],[5,"colorize","","Display a <code>SpanTrace</code> with colors and source",null,[[["spantrace",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"in_current_span","","",1,[[]]],[11,"clone","","",0,[[],["theme",3]]],[11,"default","","",0,[[],["theme",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Theme"],[3,"InstallThemeError"]]},\
"cpal":{"doc":"How to use cpalHere are some concepts cpal exposes:","i":[[0,"platform","cpal","Platform-specific items.",null,null],[3,"AlsaDevice","cpal::platform","",null,null],[3,"AlsaDevices","","ALSA implementation for <code>Devices</code>.",null,null],[3,"AlsaHost","","The default linux, dragonfly and freebsd host type.",null,null],[3,"AlsaStream","","",null,null],[6,"AlsaSupportedInputConfigs","","",null,null],[6,"AlsaSupportedOutputConfigs","","",null,null],[17,"ALL_HOSTS","","All hosts supported by CPAL on this platform.",null,null],[3,"Host","","The platform\'s dynamically dispatched <strong>Host</strong> type.",null,null],[3,"Device","","The <strong>Device</strong> implementation associated with the platform\'s …",null,null],[3,"Devices","","The <strong>Devices</strong> iterator associated with the platform\'s …",null,null],[3,"Stream","","The <strong>Stream</strong> implementation associated with the platform\'s …",null,null],[3,"SupportedInputConfigs","","The <strong>SupportedInputConfigs</strong> iterator associated with the …",null,null],[3,"SupportedOutputConfigs","","The <strong>SupportedOutputConfigs</strong> iterator associated with the …",null,null],[4,"HostId","","Unique identifier for available hosts on the platform.",null,null],[13,"Alsa","","",0,null],[5,"available_hosts","","Produces a list of hosts that are currently available on …",null,[[],[["vec",3],["hostid",4]]]],[5,"host_from_id","","Given a unique host identifier, initialise and produce …",null,[[["hostid",4]],[["result",4],["hostunavailable",3],["host",3]]]],[5,"default_host","","The default host for the current compilation target …",null,[[],["host",3]]],[0,"traits","cpal","The suite of traits allowing CPAL to abstract over hosts, …",null,null],[8,"HostTrait","cpal::traits","A <strong>Host</strong> provides access to the available audio devices on …",null,null],[16,"Devices","","The type used for enumerating available devices by the …",1,null],[16,"Device","","The <code>Device</code> type yielded by the host.",1,null],[10,"is_available","","Whether or not the host is available on the system.",1,[[],["bool",15]]],[10,"devices","","An iterator yielding all <code>Device</code>s currently available to …",1,[[],[["result",4],["deviceserror",4]]]],[10,"default_input_device","","The default input audio device on the system.",1,[[],["option",4]]],[10,"default_output_device","","The default output audio device on the system.",1,[[],["option",4]]],[11,"input_devices","","An iterator yielding all <code>Device</code>s currently available to …",1,[[],[["result",4],["inputdevices",6],["deviceserror",4]]]],[11,"output_devices","","An iterator yielding all <code>Device</code>s currently available to …",1,[[],[["result",4],["outputdevices",6],["deviceserror",4]]]],[8,"DeviceTrait","","A device that is capable of audio input and/or output.",null,null],[16,"SupportedInputConfigs","","The iterator type yielding supported input stream formats.",2,null],[16,"SupportedOutputConfigs","","The iterator type yielding supported output stream …",2,null],[16,"Stream","","The stream type created by <code>build_input_stream_raw</code> and …",2,null],[10,"name","","The human-readable name of the device.",2,[[],[["string",3],["result",4],["devicenameerror",4]]]],[10,"supported_input_configs","","An iterator yielding formats that are supported by the …",2,[[],[["result",4],["supportedstreamconfigserror",4]]]],[10,"supported_output_configs","","An iterator yielding output stream formats that are …",2,[[],[["result",4],["supportedstreamconfigserror",4]]]],[10,"default_input_config","","The default input stream format for the device.",2,[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]]],[10,"default_output_config","","The default output stream format for the device.",2,[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]]],[11,"build_input_stream","","Create an input stream.",2,[[["streamconfig",3]],[["result",4],["buildstreamerror",4]]]],[11,"build_output_stream","","Create an output stream.",2,[[["streamconfig",3]],[["result",4],["buildstreamerror",4]]]],[10,"build_input_stream_raw","","Create a dynamically typed input stream.",2,[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]]],[10,"build_output_stream_raw","","Create a dynamically typed output stream.",2,[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]]],[8,"StreamTrait","","A stream created from <code>Device</code>, with methods to control …",null,null],[10,"play","","Run the stream.",3,[[],[["result",4],["playstreamerror",4]]]],[10,"pause","","Some devices support pausing the audio stream. This can …",3,[[],[["pausestreamerror",4],["result",4]]]],[3,"HostUnavailable","cpal","The requested host, although supported on this platform, …",null,null],[3,"BackendSpecificError","","Some error has occurred that is specific to the backend …",null,null],[12,"description","","",4,null],[4,"DevicesError","","An error that might occur while attempting to enumerate …",null,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",5,null],[12,"err","cpal::DevicesError","",6,null],[4,"DeviceNameError","cpal","An error that may occur while attempting to retrieve a …",null,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",7,null],[12,"err","cpal::DeviceNameError","",8,null],[4,"SupportedStreamConfigsError","cpal","Error that can happen when enumerating the list of …",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the …",9,null],[13,"InvalidArgument","","We called something the C-Layer did not understand",9,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",9,null],[12,"err","cpal::SupportedStreamConfigsError","",10,null],[4,"DefaultStreamConfigError","cpal","May occur when attempting to request the default input or …",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the …",11,null],[13,"StreamTypeNotSupported","","Returned if e.g. the default input format was requested …",11,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",11,null],[12,"err","cpal::DefaultStreamConfigError","",12,null],[4,"BuildStreamError","cpal","Error that can happen when creating a <code>Stream</code>.",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the …",13,null],[13,"StreamConfigNotSupported","","The specified stream configuration is not supported.",13,null],[13,"InvalidArgument","","We called something the C-Layer did not understand",13,null],[13,"StreamIdOverflow","","Occurs if adding a new Stream ID would cause an integer …",13,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",13,null],[12,"err","cpal::BuildStreamError","",14,null],[4,"PlayStreamError","cpal","Errors that might occur when calling <code>play_stream</code>.",null,null],[13,"DeviceNotAvailable","","The device associated with the stream is no longer …",15,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",15,null],[12,"err","cpal::PlayStreamError","",16,null],[4,"PauseStreamError","cpal","Errors that might occur when calling <code>pause_stream</code>.",null,null],[13,"DeviceNotAvailable","","The device associated with the stream is no longer …",17,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",17,null],[12,"err","cpal::PauseStreamError","",18,null],[4,"StreamError","cpal","Errors that might occur while a stream is running.",null,null],[13,"DeviceNotAvailable","","The device no longer exists. This can happen if the …",19,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",19,null],[12,"err","cpal::StreamError","",20,null],[5,"available_hosts","cpal","Produces a list of hosts that are currently available on …",null,[[],[["vec",3],["hostid",4]]]],[5,"default_host","","The default host for the current compilation target …",null,[[],["host",3]]],[5,"host_from_id","","Given a unique host identifier, initialise and produce …",null,[[["hostid",4]],[["result",4],["hostunavailable",3],["host",3]]]],[3,"Device","","The <strong>Device</strong> implementation associated with the platform\'s …",null,null],[3,"Devices","","The <strong>Devices</strong> iterator associated with the platform\'s …",null,null],[3,"Host","","The platform\'s dynamically dispatched <strong>Host</strong> type.",null,null],[4,"HostId","","Unique identifier for available hosts on the platform.",null,null],[13,"Alsa","","",0,null],[3,"Stream","","The <strong>Stream</strong> implementation associated with the platform\'s …",null,null],[3,"SupportedInputConfigs","","The <strong>SupportedInputConfigs</strong> iterator associated with the …",null,null],[3,"SupportedOutputConfigs","","The <strong>SupportedOutputConfigs</strong> iterator associated with the …",null,null],[17,"ALL_HOSTS","","All hosts supported by CPAL on this platform.",null,null],[8,"Sample","","Trait for containers that contain PCM data.",null,null],[18,"FORMAT","","The <code>SampleFormat</code> corresponding to this data type.",21,null],[10,"to_f32","","Turns the sample into its equivalent as a floating-point.",21,[[],["f32",15]]],[10,"to_i16","","Converts this sample into a standard i16 sample.",21,[[],["i16",15]]],[10,"to_u16","","Converts this sample into a standard u16 sample.",21,[[],["u16",15]]],[10,"from","","Converts any sample type to this one by calling <code>to_i16</code>, …",21,[[]]],[4,"SampleFormat","","Format that each sample has.",null,null],[13,"I16","","The value 0 corresponds to 0.",22,null],[13,"U16","","The value 0 corresponds to 32768.",22,null],[13,"F32","","The boundaries are (-1.0, 1.0).",22,null],[6,"InputDevices","","A host\'s device iterator yielding only <em>input</em> devices.",null,null],[6,"OutputDevices","","A host\'s device iterator yielding only <em>output</em> devices.",null,null],[6,"ChannelCount","","Number of channels.",null,null],[3,"SampleRate","","The number of samples processed per second for a single …",null,null],[12,"0","","",23,null],[6,"FrameCount","","The desired number of frames for the hardware buffer.",null,null],[4,"BufferSize","","The buffer size used by the device.",null,null],[13,"Default","","",24,null],[13,"Fixed","","",24,null],[3,"StreamConfig","","The set of parameters used to describe how to open a …",null,null],[12,"channels","","",25,null],[12,"sample_rate","","",25,null],[12,"buffer_size","","",25,null],[4,"SupportedBufferSize","","Describes the minimum and maximum supported buffer size …",null,null],[13,"Range","","",26,null],[12,"min","cpal::SupportedBufferSize","",27,null],[12,"max","","",27,null],[13,"Unknown","cpal","In the case that the platform provides no way of getting …",26,null],[3,"SupportedStreamConfigRange","","Describes a range of supported stream configurations, …",null,null],[3,"SupportedStreamConfig","","Describes a single supported stream configuration, …",null,null],[3,"Data","","A buffer of dynamically typed audio data, passed to raw …",null,null],[3,"StreamInstant","","A monotonic time instance associated with a stream, …",null,null],[3,"InputStreamTimestamp","","A timestamp associated with a call to an input stream\'s …",null,null],[12,"callback","","The instant the stream\'s data callback was invoked.",28,null],[12,"capture","","The instant that data was captured from the device.",28,null],[3,"OutputStreamTimestamp","","A timestamp associated with a call to an output stream\'s …",null,null],[12,"callback","","The instant the stream\'s data callback was invoked.",29,null],[12,"playback","","The predicted instant that data written will be delivered …",29,null],[3,"InputCallbackInfo","","Information relevant to a single call to the user\'s input …",null,null],[3,"OutputCallbackInfo","","Information relevant to a single call to the user\'s …",null,null],[11,"channels","","",30,[[],["channelcount",6]]],[11,"sample_rate","","",30,[[],["samplerate",3]]],[11,"buffer_size","","",30,[[],["supportedbuffersize",4]]],[11,"sample_format","","",30,[[],["sampleformat",4]]],[11,"config","","",30,[[],["streamconfig",3]]],[11,"duration_since","","The amount of time elapsed from another instant to this …",31,[[],[["option",4],["duration",3]]]],[11,"add","","Returns the instant in time after the given duration has …",31,[[["duration",3]],["option",4]]],[11,"sub","","Returns the instant in time one <code>duration</code> ago.",31,[[["duration",3]],["option",4]]],[11,"timestamp","","The timestamp associated with the call to an input …",32,[[],["inputstreamtimestamp",3]]],[11,"timestamp","","The timestamp associated with the call to an output …",33,[[],["outputstreamtimestamp",3]]],[11,"sample_format","","The sample format of the internal audio data.",34,[[],["sampleformat",4]]],[11,"len","","The full length of the buffer in samples.",34,[[],["usize",15]]],[11,"bytes","","The raw slice of memory representing the underlying audio …",34,[[]]],[11,"bytes_mut","","The raw slice of memory representing the underlying audio …",34,[[]]],[11,"as_slice","","Access the data as a slice of sample type <code>T</code>.",34,[[],["option",4]]],[11,"as_slice_mut","","Access the data as a slice of sample type <code>T</code>.",34,[[],["option",4]]],[11,"channels","","",35,[[],["channelcount",6]]],[11,"min_sample_rate","","",35,[[],["samplerate",3]]],[11,"max_sample_rate","","",35,[[],["samplerate",3]]],[11,"buffer_size","","",35,[[],["supportedbuffersize",4]]],[11,"sample_format","","",35,[[],["sampleformat",4]]],[11,"with_sample_rate","","Retrieve a <code>SupportedStreamConfig</code> with the given sample …",35,[[["samplerate",3]],["supportedstreamconfig",3]]],[11,"with_max_sample_rate","","Turns this <code>SupportedStreamConfigRange</code> into a …",35,[[],["supportedstreamconfig",3]]],[11,"cmp_default_heuristics","","A comparison function which compares two …",35,[[],["ordering",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","cpal::platform","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","cpal","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"is_available","cpal::platform","",38,[[],["bool",15]]],[11,"devices","","",38,[[],[["result",4],["deviceserror",4]]]],[11,"default_input_device","","",38,[[],["option",4]]],[11,"default_output_device","","",38,[[],["option",4]]],[11,"is_available","","",41,[[],["bool",15]]],[11,"devices","","",41,[[],[["result",4],["deviceserror",4]]]],[11,"default_input_device","","",41,[[],["option",4]]],[11,"default_output_device","","",41,[[],["option",4]]],[11,"name","","",39,[[],[["string",3],["result",4],["devicenameerror",4]]]],[11,"supported_input_configs","","",39,[[],[["result",4],["supportedstreamconfigserror",4]]]],[11,"supported_output_configs","","",39,[[],[["result",4],["supportedstreamconfigserror",4]]]],[11,"default_input_config","","",39,[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]]],[11,"default_output_config","","",39,[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]]],[11,"build_input_stream_raw","","",39,[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]]],[11,"build_output_stream_raw","","",39,[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]]],[11,"name","","",42,[[],[["result",4],["string",3],["devicenameerror",4]]]],[11,"supported_input_configs","","",42,[[],[["supportedstreamconfigserror",4],["result",4]]]],[11,"supported_output_configs","","",42,[[],[["supportedstreamconfigserror",4],["result",4]]]],[11,"default_input_config","","",42,[[],[["supportedstreamconfig",3],["defaultstreamconfigerror",4],["result",4]]]],[11,"default_output_config","","",42,[[],[["supportedstreamconfig",3],["defaultstreamconfigerror",4],["result",4]]]],[11,"build_input_stream_raw","","",42,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[11,"build_output_stream_raw","","",42,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[11,"play","","",40,[[],[["result",4],["playstreamerror",4]]]],[11,"pause","","",40,[[],[["pausestreamerror",4],["result",4]]]],[11,"play","","",44,[[],[["playstreamerror",4],["result",4]]]],[11,"pause","","",44,[[],[["result",4],["pausestreamerror",4]]]],[11,"drop","","",40,[[]]],[11,"from","cpal","",5,[[["backendspecificerror",3]]]],[11,"from","","",7,[[["backendspecificerror",3]]]],[11,"from","","",9,[[["backendspecificerror",3]]]],[11,"from","","",11,[[["backendspecificerror",3]]]],[11,"from","","",13,[[["backendspecificerror",3]]]],[11,"from","","",15,[[["backendspecificerror",3]]]],[11,"from","","",17,[[["backendspecificerror",3]]]],[11,"from","","",19,[[["backendspecificerror",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",4,[[["error",3]]]],[11,"from","","",13,[[["error",3]]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","","",17,[[["error",3]]]],[11,"from","","",19,[[["error",3]]]],[11,"from","cpal::platform","",42,[[["device",3]]]],[11,"from","","",43,[[["devices",3]]]],[11,"from","","",41,[[["host",3]]]],[11,"from","","",44,[[["stream",3]]]],[11,"from","cpal","",25,[[["supportedstreamconfig",3]]]],[11,"next","cpal::platform","",37,[[],[["option",4],["device",3]]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"clone","cpal","",36,[[],["hostunavailable",3]]],[11,"clone","","",4,[[],["backendspecificerror",3]]],[11,"clone","cpal::platform","",0,[[],["hostid",4]]],[11,"clone","cpal","",22,[[],["sampleformat",4]]],[11,"clone","","",23,[[],["samplerate",3]]],[11,"clone","","",24,[[],["buffersize",4]]],[11,"clone","","",25,[[],["streamconfig",3]]],[11,"clone","","",26,[[],["supportedbuffersize",4]]],[11,"clone","","",35,[[],["supportedstreamconfigrange",3]]],[11,"clone","","",30,[[],["supportedstreamconfig",3]]],[11,"clone","","",31,[[],["streaminstant",3]]],[11,"clone","","",28,[[],["inputstreamtimestamp",3]]],[11,"clone","","",29,[[],["outputstreamtimestamp",3]]],[11,"clone","","",32,[[],["inputcallbackinfo",3]]],[11,"clone","","",33,[[],["outputcallbackinfo",3]]],[11,"cmp","","",23,[[["samplerate",3]],["ordering",4]]],[11,"cmp","","",31,[[["streaminstant",3]],["ordering",4]]],[11,"eq","cpal::platform","",0,[[["hostid",4]],["bool",15]]],[11,"eq","cpal","",22,[[["sampleformat",4]],["bool",15]]],[11,"eq","","",23,[[["samplerate",3]],["bool",15]]],[11,"ne","","",23,[[["samplerate",3]],["bool",15]]],[11,"eq","","",24,[[["buffersize",4]],["bool",15]]],[11,"ne","","",24,[[["buffersize",4]],["bool",15]]],[11,"eq","","",25,[[["streamconfig",3]],["bool",15]]],[11,"ne","","",25,[[["streamconfig",3]],["bool",15]]],[11,"eq","","",26,[[["supportedbuffersize",4]],["bool",15]]],[11,"ne","","",26,[[["supportedbuffersize",4]],["bool",15]]],[11,"eq","","",35,[[["supportedstreamconfigrange",3]],["bool",15]]],[11,"ne","","",35,[[["supportedstreamconfigrange",3]],["bool",15]]],[11,"eq","","",30,[[["supportedstreamconfig",3]],["bool",15]]],[11,"ne","","",30,[[["supportedstreamconfig",3]],["bool",15]]],[11,"eq","","",31,[[["streaminstant",3]],["bool",15]]],[11,"ne","","",31,[[["streaminstant",3]],["bool",15]]],[11,"eq","","",28,[[["inputstreamtimestamp",3]],["bool",15]]],[11,"ne","","",28,[[["inputstreamtimestamp",3]],["bool",15]]],[11,"eq","","",29,[[["outputstreamtimestamp",3]],["bool",15]]],[11,"ne","","",29,[[["outputstreamtimestamp",3]],["bool",15]]],[11,"eq","","",32,[[["inputcallbackinfo",3]],["bool",15]]],[11,"ne","","",32,[[["inputcallbackinfo",3]],["bool",15]]],[11,"eq","","",33,[[["outputcallbackinfo",3]],["bool",15]]],[11,"ne","","",33,[[["outputcallbackinfo",3]],["bool",15]]],[11,"partial_cmp","","",23,[[["samplerate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["samplerate",3]],["bool",15]]],[11,"le","","",23,[[["samplerate",3]],["bool",15]]],[11,"gt","","",23,[[["samplerate",3]],["bool",15]]],[11,"ge","","",23,[[["samplerate",3]],["bool",15]]],[11,"partial_cmp","","",31,[[["streaminstant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["streaminstant",3]],["bool",15]]],[11,"le","","",31,[[["streaminstant",3]],["bool",15]]],[11,"gt","","",31,[[["streaminstant",3]],["bool",15]]],[11,"ge","","",31,[[["streaminstant",3]],["bool",15]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","cpal::platform","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","cpal","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"div","","",23,[[]]],[11,"mul","","",23,[[]]],[11,"hash","cpal::platform","",0,[[]]],[11,"hash","cpal","",31,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"source","","",9,[[],[["option",4],["error",8]]]],[11,"source","","",11,[[],[["option",4],["error",8]]]],[11,"source","","",13,[[],[["option",4],["error",8]]]],[11,"source","","",15,[[],[["option",4],["error",8]]]],[11,"source","","",17,[[],[["option",4],["error",8]]]],[11,"source","","",19,[[],[["option",4],["error",8]]]],[11,"new","cpal::platform","",37,[[],[["result",4],["deviceserror",4]]]],[11,"new","","",38,[[],[["hostunavailable",3],["result",4]]]],[11,"name","","",0,[[],["str",15]]],[11,"id","","The unique identifier associated with this host.",41,[[],["hostid",4]]],[11,"sample_size","cpal","Returns the size in bytes of a sample of this format.",22,[[],["usize",15]]],[18,"FORMAT","","The <code>SampleFormat</code> corresponding to this data type.",21,null]],"p":[[4,"HostId"],[8,"HostTrait"],[8,"DeviceTrait"],[8,"StreamTrait"],[3,"BackendSpecificError"],[4,"DevicesError"],[13,"BackendSpecific"],[4,"DeviceNameError"],[13,"BackendSpecific"],[4,"SupportedStreamConfigsError"],[13,"BackendSpecific"],[4,"DefaultStreamConfigError"],[13,"BackendSpecific"],[4,"BuildStreamError"],[13,"BackendSpecific"],[4,"PlayStreamError"],[13,"BackendSpecific"],[4,"PauseStreamError"],[13,"BackendSpecific"],[4,"StreamError"],[13,"BackendSpecific"],[8,"Sample"],[4,"SampleFormat"],[3,"SampleRate"],[4,"BufferSize"],[3,"StreamConfig"],[4,"SupportedBufferSize"],[13,"Range"],[3,"InputStreamTimestamp"],[3,"OutputStreamTimestamp"],[3,"SupportedStreamConfig"],[3,"StreamInstant"],[3,"InputCallbackInfo"],[3,"OutputCallbackInfo"],[3,"Data"],[3,"SupportedStreamConfigRange"],[3,"HostUnavailable"],[3,"AlsaDevices"],[3,"AlsaHost"],[3,"AlsaDevice"],[3,"AlsaStream"],[3,"Host"],[3,"Device"],[3,"Devices"],[3,"Stream"],[3,"SupportedInputConfigs"],[3,"SupportedOutputConfigs"]]},\
"crossterm":{"doc":"CrosstermHave you ever been disappointed when a terminal …","i":[[0,"cursor","crossterm","A module to work with the terminal cursor",null,null],[5,"position","crossterm::cursor","Returns the cursor position (column, row).",null,[[],["result",6]]],[3,"MoveTo","","A command that moves the terminal cursor to the given …",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"MoveToNextLine","","A command that moves the terminal cursor up the given …",null,null],[12,"0","","",1,null],[3,"MoveToPreviousLine","","A command that moves the terminal cursor down the given …",null,null],[12,"0","","",2,null],[3,"MoveToColumn","","A command that moves the terminal cursor to the given …",null,null],[12,"0","","",3,null],[3,"MoveUp","","A command that moves the terminal cursor a given number …",null,null],[12,"0","","",4,null],[3,"MoveRight","","A command that moves the terminal cursor a given number …",null,null],[12,"0","","",5,null],[3,"MoveDown","","A command that moves the terminal cursor a given number …",null,null],[12,"0","","",6,null],[3,"MoveLeft","","A command that moves the terminal cursor a given number …",null,null],[12,"0","","",7,null],[3,"SavePosition","","A command that saves the current terminal cursor position.",null,null],[3,"RestorePosition","","A command that restores the saved terminal cursor …",null,null],[3,"Hide","","A command that hides the terminal cursor.",null,null],[3,"Show","","A command that shows the terminal cursor.",null,null],[3,"EnableBlinking","","A command that enables blinking of the terminal cursor.",null,null],[3,"DisableBlinking","","A command that disables blinking of the terminal cursor.",null,null],[0,"event","crossterm","A module to read events.",null,null],[5,"poll","crossterm::event","Checks if there is an <code>Event</code> available.",null,[[["duration",3]],[["bool",15],["result",6]]]],[5,"read","","Reads a single <code>Event</code>.",null,[[],[["result",6],["event",4]]]],[3,"EnableMouseCapture","","A command that enables mouse event capturing.",null,null],[3,"DisableMouseCapture","","A command that disables mouse event capturing.",null,null],[4,"Event","","Represents an event.",null,null],[13,"Key","","A single key event with additional pressed modifiers.",8,null],[13,"Mouse","","A single mouse event with additional pressed modifiers.",8,null],[13,"Resize","","An resize event with new dimensions after resize …",8,null],[3,"MouseEvent","","Represents a mouse event.",null,null],[12,"kind","","The kind of mouse event that was caused.",9,null],[12,"column","","The column that the event occurred on.",9,null],[12,"row","","The row that the event occurred on.",9,null],[12,"modifiers","","The key modifiers active when the event occurred.",9,null],[4,"MouseEventKind","","A mouse event kind.",null,null],[13,"Down","","Pressed mouse button. Contains the button that was …",10,null],[13,"Up","","Released mouse button. Contains the button that was …",10,null],[13,"Drag","","Moved the mouse cursor while pressing the contained mouse …",10,null],[13,"Moved","","Moved the mouse cursor while not pressing a mouse button.",10,null],[13,"ScrollDown","","Scrolled mouse wheel downwards (towards the user).",10,null],[13,"ScrollUp","","Scrolled mouse wheel upwards (away from the user).",10,null],[4,"MouseButton","","Represents a mouse button.",null,null],[13,"Left","","Left mouse button.",11,null],[13,"Right","","Right mouse button.",11,null],[13,"Middle","","Middle mouse button.",11,null],[3,"KeyModifiers","","Represents key modifiers (shift, control, alt).",null,null],[18,"SHIFT","","",12,null],[18,"CONTROL","","",12,null],[18,"ALT","","",12,null],[18,"NONE","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["keymodifiers",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["keymodifiers",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["u8",15]],[["option",4],["keymodifiers",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["u8",15]],["keymodifiers",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["u8",15]],["keymodifiers",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["keymodifiers",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["keymodifiers",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["keymodifiers",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["keymodifiers",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["keymodifiers",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["bool",15],["keymodifiers",3]]]],[3,"KeyEvent","","Represents a key event.",null,null],[12,"code","","The key itself.",13,null],[12,"modifiers","","Additional key modifiers.",13,null],[11,"new","","",13,[[["keymodifiers",3],["keycode",4]],["keyevent",3]]],[4,"KeyCode","","Represents a key.",null,null],[13,"Backspace","","Backspace key.",14,null],[13,"Enter","","Enter key.",14,null],[13,"Left","","Left arrow key.",14,null],[13,"Right","","Right arrow key.",14,null],[13,"Up","","Up arrow key.",14,null],[13,"Down","","Down arrow key.",14,null],[13,"Home","","Home key.",14,null],[13,"End","","End key.",14,null],[13,"PageUp","","Page up key.",14,null],[13,"PageDown","","Page dow key.",14,null],[13,"Tab","","Tab key.",14,null],[13,"BackTab","","Shift + Tab key.",14,null],[13,"Delete","","Delete key.",14,null],[13,"Insert","","Insert key.",14,null],[13,"F","","F key.",14,null],[13,"Char","","A character.",14,null],[13,"Null","","Null.",14,null],[13,"Esc","","Escape key.",14,null],[0,"style","crossterm","A module to apply attributes and colors on your text.",null,null],[3,"Attributes","crossterm::style","a bitset for all possible attributes",null,null],[3,"ContentStyle","","The style that can be put on content.",null,null],[12,"foreground_color","","The foreground color.",15,null],[12,"background_color","","The background color.",15,null],[12,"attributes","","List of attributes.",15,null],[3,"StyledContent","","The style with the content to be styled.",null,null],[8,"Colorize","","Provides a set of methods to set the colors.",null,null],[10,"black","","",16,[[],["styledcontent",3]]],[10,"dark_grey","","",16,[[],["styledcontent",3]]],[10,"red","","",16,[[],["styledcontent",3]]],[10,"dark_red","","",16,[[],["styledcontent",3]]],[10,"green","","",16,[[],["styledcontent",3]]],[10,"dark_green","","",16,[[],["styledcontent",3]]],[10,"yellow","","",16,[[],["styledcontent",3]]],[10,"dark_yellow","","",16,[[],["styledcontent",3]]],[10,"blue","","",16,[[],["styledcontent",3]]],[10,"dark_blue","","",16,[[],["styledcontent",3]]],[10,"magenta","","",16,[[],["styledcontent",3]]],[10,"dark_magenta","","",16,[[],["styledcontent",3]]],[10,"cyan","","",16,[[],["styledcontent",3]]],[10,"dark_cyan","","",16,[[],["styledcontent",3]]],[10,"white","","",16,[[],["styledcontent",3]]],[10,"grey","","",16,[[],["styledcontent",3]]],[10,"on_black","","",16,[[],["styledcontent",3]]],[10,"on_dark_grey","","",16,[[],["styledcontent",3]]],[10,"on_red","","",16,[[],["styledcontent",3]]],[10,"on_dark_red","","",16,[[],["styledcontent",3]]],[10,"on_green","","",16,[[],["styledcontent",3]]],[10,"on_dark_green","","",16,[[],["styledcontent",3]]],[10,"on_yellow","","",16,[[],["styledcontent",3]]],[10,"on_dark_yellow","","",16,[[],["styledcontent",3]]],[10,"on_blue","","",16,[[],["styledcontent",3]]],[10,"on_dark_blue","","",16,[[],["styledcontent",3]]],[10,"on_magenta","","",16,[[],["styledcontent",3]]],[10,"on_dark_magenta","","",16,[[],["styledcontent",3]]],[10,"on_cyan","","",16,[[],["styledcontent",3]]],[10,"on_dark_cyan","","",16,[[],["styledcontent",3]]],[10,"on_white","","",16,[[],["styledcontent",3]]],[10,"on_grey","","",16,[[],["styledcontent",3]]],[8,"Styler","","Provides a set of methods to set the text attributes.",null,null],[10,"reset","","",17,[[],["styledcontent",3]]],[10,"bold","","",17,[[],["styledcontent",3]]],[10,"underlined","","",17,[[],["styledcontent",3]]],[10,"reverse","","",17,[[],["styledcontent",3]]],[10,"dim","","",17,[[],["styledcontent",3]]],[10,"italic","","",17,[[],["styledcontent",3]]],[10,"negative","","",17,[[],["styledcontent",3]]],[10,"slow_blink","","",17,[[],["styledcontent",3]]],[10,"rapid_blink","","",17,[[],["styledcontent",3]]],[10,"hidden","","",17,[[],["styledcontent",3]]],[10,"crossed_out","","",17,[[],["styledcontent",3]]],[4,"Attribute","","Represents an attribute.",null,null],[13,"Reset","","Resets all the attributes.",18,null],[13,"Bold","","Increases the text intensity.",18,null],[13,"Dim","","Decreases the text intensity.",18,null],[13,"Italic","","Emphasises the text.",18,null],[13,"Underlined","","Underlines the text.",18,null],[13,"SlowBlink","","Makes the text blinking (< 150 per minute).",18,null],[13,"RapidBlink","","Makes the text blinking (>= 150 per minute).",18,null],[13,"Reverse","","Swaps foreground and background colors.",18,null],[13,"Hidden","","Hides the text (also known as Conceal).",18,null],[13,"CrossedOut","","Crosses the text.",18,null],[13,"Fraktur","","Sets the Fraktur typeface.",18,null],[13,"NoBold","","Turns off the <code>Bold</code> attribute. - Inconsistent - Prefer to …",18,null],[13,"NormalIntensity","","Switches the text back to normal intensity (no bold, …",18,null],[13,"NoItalic","","Turns off the <code>Italic</code> attribute.",18,null],[13,"NoUnderline","","Turns off the <code>Underlined</code> attribute.",18,null],[13,"NoBlink","","Turns off the text blinking (<code>SlowBlink</code> or <code>RapidBlink</code>).",18,null],[13,"NoReverse","","Turns off the <code>Reverse</code> attribute.",18,null],[13,"NoHidden","","Turns off the <code>Hidden</code> attribute.",18,null],[13,"NotCrossedOut","","Turns off the <code>CrossedOut</code> attribute.",18,null],[13,"Framed","","Makes the text framed.",18,null],[13,"Encircled","","Makes the text encircled.",18,null],[13,"OverLined","","Draws a line at the top of the text.",18,null],[13,"NotFramedOrEncircled","","Turns off the <code>Frame</code> and <code>Encircled</code> attributes.",18,null],[13,"NotOverLined","","Turns off the <code>OverLined</code> attribute.",18,null],[4,"Color","","Represents a color.",null,null],[13,"Reset","","Resets the terminal color.",19,null],[13,"Black","","Black color.",19,null],[13,"DarkGrey","","Dark grey color.",19,null],[13,"Red","","Light red color.",19,null],[13,"DarkRed","","Dark red color.",19,null],[13,"Green","","Light green color.",19,null],[13,"DarkGreen","","Dark green color.",19,null],[13,"Yellow","","Light yellow color.",19,null],[13,"DarkYellow","","Dark yellow color.",19,null],[13,"Blue","","Light blue color.",19,null],[13,"DarkBlue","","Dark blue color.",19,null],[13,"Magenta","","Light magenta color.",19,null],[13,"DarkMagenta","","Dark magenta color.",19,null],[13,"Cyan","","Light cyan color.",19,null],[13,"DarkCyan","","Dark cyan color.",19,null],[13,"White","","White color.",19,null],[13,"Grey","","Grey color.",19,null],[13,"Rgb","","An RGB color. See RGB color model for more info.",19,null],[12,"r","crossterm::style::Color","",20,null],[12,"g","","",20,null],[12,"b","","",20,null],[13,"AnsiValue","crossterm::style","An ANSI color. See 256 colors - cheat sheet for more info.",19,null],[4,"Colored","","Represents a foreground or background color.",null,null],[13,"ForegroundColor","","A foreground color.",21,null],[13,"BackgroundColor","","A background color.",21,null],[3,"Colors","","Represents, optionally, a foreground and/or a background …",null,null],[12,"foreground","","",22,null],[12,"background","","",22,null],[5,"style","","Creates a <code>StyledContent</code>.",null,[[],["styledcontent",3]]],[5,"available_color_count","","Returns available color count.",null,[[],["u16",15]]],[3,"SetForegroundColor","","A command that sets the the foreground color.",null,null],[12,"0","","",23,null],[3,"SetBackgroundColor","","A command that sets the the background color.",null,null],[12,"0","","",24,null],[3,"SetColors","","A command that optionally sets the foreground and/or …",null,null],[12,"0","","",25,null],[3,"SetAttribute","","A command that sets an attribute.",null,null],[12,"0","","",26,null],[3,"SetAttributes","","A command that sets several attributes.",null,null],[12,"0","","",27,null],[3,"PrintStyledContent","","A command that prints styled content.",null,null],[12,"0","","",28,null],[3,"ResetColor","","A command that resets the colors back to default.",null,null],[3,"Print","","A command that prints the given displayable type.",null,null],[12,"0","","",29,null],[0,"terminal","crossterm","A module to work with the terminal.",null,null],[5,"enable_raw_mode","crossterm::terminal","Enables raw mode.",null,[[],["result",6]]],[5,"disable_raw_mode","","Disables raw mode.",null,[[],["result",6]]],[5,"size","","Returns the terminal size <code>(columns, rows)</code>.",null,[[],["result",6]]],[3,"DisableLineWrap","","Disables line wrapping.",null,null],[3,"EnableLineWrap","","Enable line wrapping.",null,null],[3,"EnterAlternateScreen","","A command that switches to alternate screen.",null,null],[3,"LeaveAlternateScreen","","A command that switches back to the main screen.",null,null],[4,"ClearType","","Different ways to clear the terminal buffer.",null,null],[13,"All","","All cells.",30,null],[13,"FromCursorDown","","All cells from the cursor position downwards.",30,null],[13,"FromCursorUp","","All cells from the cursor position upwards.",30,null],[13,"CurrentLine","","All cells at the cursor row.",30,null],[13,"UntilNewLine","","All cells from the cursor position until the new line.",30,null],[3,"ScrollUp","","A command that scrolls the terminal screen a given number …",null,null],[12,"0","","",31,null],[3,"ScrollDown","","A command that scrolls the terminal screen a given number …",null,null],[12,"0","","",32,null],[3,"Clear","","A command that clears the terminal screen buffer.",null,null],[12,"0","","",33,null],[3,"SetSize","","A command that sets the terminal size <code>(columns, rows)</code>.",null,null],[12,"0","","",34,null],[12,"1","","",34,null],[3,"SetTitle","","A command that sets the terminal title",null,null],[12,"0","","",35,null],[0,"tty","crossterm","A module to query if the current instance is a tty. …",null,null],[8,"IsTty","crossterm::tty","Adds the <code>is_tty</code> method to types that might represent a …",null,null],[10,"is_tty","","Returns true when an instance is a terminal teletype, …",36,[[],["bool",15]]],[8,"Command","crossterm","An interface for a command that performs an action on the …",null,null],[10,"write_ansi","","Write an ANSI representation of this commmand to the …",37,[[],["result",6]]],[8,"ExecutableCommand","","An interface for types that can directly execute commands.",null,null],[10,"execute","","Executes the given command directly.",38,[[],["result",6]]],[8,"QueueableCommand","","An interface for types that can queue commands for …",null,null],[10,"queue","","Queues the given command for further execution.",39,[[],["result",6]]],[4,"ErrorKind","","Wrapper for all errors that can occur in <code>crossterm</code>.",null,null],[13,"IoError","","",40,null],[13,"FmtError","","",40,null],[13,"Utf8Error","","",40,null],[13,"ParseIntError","","",40,null],[13,"ResizingTerminalFailure","","",40,null],[13,"SettingTerminalTitleFailure","","",40,null],[6,"Result","","The <code>crossterm</code> result type.",null,null],[14,"queue","","Queues one or more command(s) for further execution.",null,null],[14,"execute","","Executes one or more command(s).",null,null],[11,"from","crossterm::cursor","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","crossterm::event","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","crossterm::style","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","crossterm::terminal","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","crossterm","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"black","crossterm::style","",50,[[],["styledcontent",3]]],[11,"dark_grey","","",50,[[],["styledcontent",3]]],[11,"red","","",50,[[],["styledcontent",3]]],[11,"dark_red","","",50,[[],["styledcontent",3]]],[11,"green","","",50,[[],["styledcontent",3]]],[11,"dark_green","","",50,[[],["styledcontent",3]]],[11,"yellow","","",50,[[],["styledcontent",3]]],[11,"dark_yellow","","",50,[[],["styledcontent",3]]],[11,"blue","","",50,[[],["styledcontent",3]]],[11,"dark_blue","","",50,[[],["styledcontent",3]]],[11,"magenta","","",50,[[],["styledcontent",3]]],[11,"dark_magenta","","",50,[[],["styledcontent",3]]],[11,"cyan","","",50,[[],["styledcontent",3]]],[11,"dark_cyan","","",50,[[],["styledcontent",3]]],[11,"white","","",50,[[],["styledcontent",3]]],[11,"grey","","",50,[[],["styledcontent",3]]],[11,"on_black","","",50,[[],["styledcontent",3]]],[11,"on_dark_grey","","",50,[[],["styledcontent",3]]],[11,"on_red","","",50,[[],["styledcontent",3]]],[11,"on_dark_red","","",50,[[],["styledcontent",3]]],[11,"on_green","","",50,[[],["styledcontent",3]]],[11,"on_dark_green","","",50,[[],["styledcontent",3]]],[11,"on_yellow","","",50,[[],["styledcontent",3]]],[11,"on_dark_yellow","","",50,[[],["styledcontent",3]]],[11,"on_blue","","",50,[[],["styledcontent",3]]],[11,"on_dark_blue","","",50,[[],["styledcontent",3]]],[11,"on_magenta","","",50,[[],["styledcontent",3]]],[11,"on_dark_magenta","","",50,[[],["styledcontent",3]]],[11,"on_cyan","","",50,[[],["styledcontent",3]]],[11,"on_dark_cyan","","",50,[[],["styledcontent",3]]],[11,"on_white","","",50,[[],["styledcontent",3]]],[11,"on_grey","","",50,[[],["styledcontent",3]]],[11,"reset","","",50,[[],["styledcontent",3]]],[11,"bold","","",50,[[],["styledcontent",3]]],[11,"underlined","","",50,[[],["styledcontent",3]]],[11,"reverse","","",50,[[],["styledcontent",3]]],[11,"dim","","",50,[[],["styledcontent",3]]],[11,"italic","","",50,[[],["styledcontent",3]]],[11,"negative","","",50,[[],["styledcontent",3]]],[11,"slow_blink","","",50,[[],["styledcontent",3]]],[11,"rapid_blink","","",50,[[],["styledcontent",3]]],[11,"hidden","","",50,[[],["styledcontent",3]]],[11,"crossed_out","","",50,[[],["styledcontent",3]]],[11,"write_ansi","crossterm::cursor","",0,[[],["result",6]]],[11,"write_ansi","","",1,[[],["result",6]]],[11,"write_ansi","","",2,[[],["result",6]]],[11,"write_ansi","","",3,[[],["result",6]]],[11,"write_ansi","","",4,[[],["result",6]]],[11,"write_ansi","","",5,[[],["result",6]]],[11,"write_ansi","","",6,[[],["result",6]]],[11,"write_ansi","","",7,[[],["result",6]]],[11,"write_ansi","","",41,[[],["result",6]]],[11,"write_ansi","","",42,[[],["result",6]]],[11,"write_ansi","","",43,[[],["result",6]]],[11,"write_ansi","","",44,[[],["result",6]]],[11,"write_ansi","","",45,[[],["result",6]]],[11,"write_ansi","","",46,[[],["result",6]]],[11,"write_ansi","crossterm::event","",47,[[],["result",6]]],[11,"write_ansi","","",48,[[],["result",6]]],[11,"write_ansi","crossterm::style","",23,[[],["result",6]]],[11,"write_ansi","","",24,[[],["result",6]]],[11,"write_ansi","","",25,[[],["result",6]]],[11,"write_ansi","","",26,[[],["result",6]]],[11,"write_ansi","","",27,[[],["result",6]]],[11,"write_ansi","","",28,[[],["result",6]]],[11,"write_ansi","","",51,[[],["result",6]]],[11,"write_ansi","","",29,[[],["result",6]]],[11,"write_ansi","crossterm::terminal","",52,[[],["result",6]]],[11,"write_ansi","","",53,[[],["result",6]]],[11,"write_ansi","","",54,[[],["result",6]]],[11,"write_ansi","","",55,[[],["result",6]]],[11,"write_ansi","","",31,[[],["result",6]]],[11,"write_ansi","","",32,[[],["result",6]]],[11,"write_ansi","","",33,[[],["result",6]]],[11,"write_ansi","","",34,[[],["result",6]]],[11,"write_ansi","","",35,[[],["result",6]]],[11,"from","crossterm::event","",13,[[["keycode",4]]]],[11,"from","crossterm::style","",49,[[["attribute",4]]]],[11,"from","","",49,[[]]],[11,"from","","Creates a \'Color\' from the tuple representation.",19,[[]]],[11,"from","","",22,[[["colored",4]],["colors",3]]],[11,"from","crossterm","",40,[[["error",3]]]],[11,"from","","",40,[[["error",3]]]],[11,"from","","",40,[[["fromutf8error",3]]]],[11,"from","","",40,[[["parseinterror",3]]]],[11,"extend","crossterm::event","",12,[[["intoiterator",8]]]],[11,"clone","crossterm::cursor","",0,[[],["moveto",3]]],[11,"clone","","",1,[[],["movetonextline",3]]],[11,"clone","","",2,[[],["movetopreviousline",3]]],[11,"clone","","",3,[[],["movetocolumn",3]]],[11,"clone","","",4,[[],["moveup",3]]],[11,"clone","","",5,[[],["moveright",3]]],[11,"clone","","",6,[[],["movedown",3]]],[11,"clone","","",7,[[],["moveleft",3]]],[11,"clone","","",41,[[],["saveposition",3]]],[11,"clone","","",42,[[],["restoreposition",3]]],[11,"clone","","",43,[[],["hide",3]]],[11,"clone","","",44,[[],["show",3]]],[11,"clone","","",45,[[],["enableblinking",3]]],[11,"clone","","",46,[[],["disableblinking",3]]],[11,"clone","crossterm::event","",47,[[],["enablemousecapture",3]]],[11,"clone","","",48,[[],["disablemousecapture",3]]],[11,"clone","","",8,[[],["event",4]]],[11,"clone","","",9,[[],["mouseevent",3]]],[11,"clone","","",10,[[],["mouseeventkind",4]]],[11,"clone","","",11,[[],["mousebutton",4]]],[11,"clone","","",12,[[],["keymodifiers",3]]],[11,"clone","","",13,[[],["keyevent",3]]],[11,"clone","","",14,[[],["keycode",4]]],[11,"clone","crossterm::style","",49,[[],["attributes",3]]],[11,"clone","","",15,[[],["contentstyle",3]]],[11,"clone","","",50,[[],["styledcontent",3]]],[11,"clone","","",18,[[],["attribute",4]]],[11,"clone","","",19,[[],["color",4]]],[11,"clone","","",21,[[],["colored",4]]],[11,"clone","","",22,[[],["colors",3]]],[11,"clone","","",23,[[],["setforegroundcolor",3]]],[11,"clone","","",24,[[],["setbackgroundcolor",3]]],[11,"clone","","",25,[[],["setcolors",3]]],[11,"clone","","",26,[[],["setattribute",3]]],[11,"clone","","",27,[[],["setattributes",3]]],[11,"clone","","",28,[[],["printstyledcontent",3]]],[11,"clone","","",51,[[],["resetcolor",3]]],[11,"clone","","",29,[[],["print",3]]],[11,"clone","crossterm::terminal","",52,[[],["disablelinewrap",3]]],[11,"clone","","",53,[[],["enablelinewrap",3]]],[11,"clone","","",54,[[],["enteralternatescreen",3]]],[11,"clone","","",55,[[],["leavealternatescreen",3]]],[11,"clone","","",30,[[],["cleartype",4]]],[11,"clone","","",31,[[],["scrollup",3]]],[11,"clone","","",32,[[],["scrolldown",3]]],[11,"clone","","",33,[[],["clear",3]]],[11,"clone","","",34,[[],["setsize",3]]],[11,"clone","","",35,[[],["settitle",3]]],[11,"default","crossterm::style","",49,[[],["attributes",3]]],[11,"default","","",15,[[],["contentstyle",3]]],[11,"cmp","crossterm::event","",12,[[["keymodifiers",3]],["ordering",4]]],[11,"cmp","crossterm::style","",18,[[["attribute",4]],["ordering",4]]],[11,"cmp","","",19,[[["color",4]],["ordering",4]]],[11,"cmp","","",21,[[["colored",4]],["ordering",4]]],[11,"cmp","crossterm::terminal","",30,[[["cleartype",4]],["ordering",4]]],[11,"eq","crossterm::cursor","",0,[[["moveto",3]],["bool",15]]],[11,"ne","","",0,[[["moveto",3]],["bool",15]]],[11,"eq","","",1,[[["movetonextline",3]],["bool",15]]],[11,"ne","","",1,[[["movetonextline",3]],["bool",15]]],[11,"eq","","",2,[[["movetopreviousline",3]],["bool",15]]],[11,"ne","","",2,[[["movetopreviousline",3]],["bool",15]]],[11,"eq","","",3,[[["movetocolumn",3]],["bool",15]]],[11,"ne","","",3,[[["movetocolumn",3]],["bool",15]]],[11,"eq","","",4,[[["moveup",3]],["bool",15]]],[11,"ne","","",4,[[["moveup",3]],["bool",15]]],[11,"eq","","",5,[[["moveright",3]],["bool",15]]],[11,"ne","","",5,[[["moveright",3]],["bool",15]]],[11,"eq","","",6,[[["movedown",3]],["bool",15]]],[11,"ne","","",6,[[["movedown",3]],["bool",15]]],[11,"eq","","",7,[[["moveleft",3]],["bool",15]]],[11,"ne","","",7,[[["moveleft",3]],["bool",15]]],[11,"eq","","",41,[[["saveposition",3]],["bool",15]]],[11,"eq","","",42,[[["restoreposition",3]],["bool",15]]],[11,"eq","","",43,[[["hide",3]],["bool",15]]],[11,"eq","","",44,[[["show",3]],["bool",15]]],[11,"eq","","",45,[[["enableblinking",3]],["bool",15]]],[11,"eq","","",46,[[["disableblinking",3]],["bool",15]]],[11,"eq","crossterm::event","",47,[[["enablemousecapture",3]],["bool",15]]],[11,"eq","","",48,[[["disablemousecapture",3]],["bool",15]]],[11,"eq","","",8,[[["event",4]],["bool",15]]],[11,"ne","","",8,[[["event",4]],["bool",15]]],[11,"eq","","",9,[[["mouseevent",3]],["bool",15]]],[11,"ne","","",9,[[["mouseevent",3]],["bool",15]]],[11,"eq","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"ne","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"eq","","",11,[[["mousebutton",4]],["bool",15]]],[11,"eq","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"ne","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"eq","","",13,[[["keyevent",3]],["bool",15]]],[11,"ne","","",13,[[["keyevent",3]],["bool",15]]],[11,"eq","","",14,[[["keycode",4]],["bool",15]]],[11,"ne","","",14,[[["keycode",4]],["bool",15]]],[11,"eq","crossterm::style","",49,[[["attributes",3]],["bool",15]]],[11,"ne","","",49,[[["attributes",3]],["bool",15]]],[11,"eq","","",15,[[["contentstyle",3]],["bool",15]]],[11,"ne","","",15,[[["contentstyle",3]],["bool",15]]],[11,"eq","","",18,[[["attribute",4]],["bool",15]]],[11,"eq","","",19,[[["color",4]],["bool",15]]],[11,"ne","","",19,[[["color",4]],["bool",15]]],[11,"eq","","",21,[[["colored",4]],["bool",15]]],[11,"ne","","",21,[[["colored",4]],["bool",15]]],[11,"eq","","",22,[[["colors",3]],["bool",15]]],[11,"ne","","",22,[[["colors",3]],["bool",15]]],[11,"eq","","",23,[[["setforegroundcolor",3]],["bool",15]]],[11,"ne","","",23,[[["setforegroundcolor",3]],["bool",15]]],[11,"eq","","",24,[[["setbackgroundcolor",3]],["bool",15]]],[11,"ne","","",24,[[["setbackgroundcolor",3]],["bool",15]]],[11,"eq","","",25,[[["setcolors",3]],["bool",15]]],[11,"ne","","",25,[[["setcolors",3]],["bool",15]]],[11,"eq","","",26,[[["setattribute",3]],["bool",15]]],[11,"ne","","",26,[[["setattribute",3]],["bool",15]]],[11,"eq","","",27,[[["setattributes",3]],["bool",15]]],[11,"ne","","",27,[[["setattributes",3]],["bool",15]]],[11,"eq","","",51,[[["resetcolor",3]],["bool",15]]],[11,"eq","","",29,[[["print",3]],["bool",15]]],[11,"ne","","",29,[[["print",3]],["bool",15]]],[11,"eq","crossterm::terminal","",52,[[["disablelinewrap",3]],["bool",15]]],[11,"eq","","",53,[[["enablelinewrap",3]],["bool",15]]],[11,"eq","","",54,[[["enteralternatescreen",3]],["bool",15]]],[11,"eq","","",55,[[["leavealternatescreen",3]],["bool",15]]],[11,"eq","","",30,[[["cleartype",4]],["bool",15]]],[11,"eq","","",31,[[["scrollup",3]],["bool",15]]],[11,"ne","","",31,[[["scrollup",3]],["bool",15]]],[11,"eq","","",32,[[["scrolldown",3]],["bool",15]]],[11,"ne","","",32,[[["scrolldown",3]],["bool",15]]],[11,"eq","","",33,[[["clear",3]],["bool",15]]],[11,"ne","","",33,[[["clear",3]],["bool",15]]],[11,"eq","","",34,[[["setsize",3]],["bool",15]]],[11,"ne","","",34,[[["setsize",3]],["bool",15]]],[11,"eq","","",35,[[["settitle",3]],["bool",15]]],[11,"ne","","",35,[[["settitle",3]],["bool",15]]],[11,"partial_cmp","crossterm::event","",8,[[["event",4]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["event",4]],["bool",15]]],[11,"le","","",8,[[["event",4]],["bool",15]]],[11,"gt","","",8,[[["event",4]],["bool",15]]],[11,"ge","","",8,[[["event",4]],["bool",15]]],[11,"partial_cmp","","",9,[[["mouseevent",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["mouseevent",3]],["bool",15]]],[11,"le","","",9,[[["mouseevent",3]],["bool",15]]],[11,"gt","","",9,[[["mouseevent",3]],["bool",15]]],[11,"ge","","",9,[[["mouseevent",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["mouseeventkind",4]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"le","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"gt","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"ge","","",10,[[["mouseeventkind",4]],["bool",15]]],[11,"partial_cmp","","",11,[[["mousebutton",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",12,[[["keymodifiers",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"le","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"gt","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"ge","","",12,[[["keymodifiers",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["keyevent",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["keyevent",3]],["bool",15]]],[11,"le","","",13,[[["keyevent",3]],["bool",15]]],[11,"gt","","",13,[[["keyevent",3]],["bool",15]]],[11,"ge","","",13,[[["keyevent",3]],["bool",15]]],[11,"partial_cmp","","",14,[[["keycode",4]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["keycode",4]],["bool",15]]],[11,"le","","",14,[[["keycode",4]],["bool",15]]],[11,"gt","","",14,[[["keycode",4]],["bool",15]]],[11,"ge","","",14,[[["keycode",4]],["bool",15]]],[11,"partial_cmp","crossterm::style","",18,[[["attribute",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",19,[[["color",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["color",4]],["bool",15]]],[11,"le","","",19,[[["color",4]],["bool",15]]],[11,"gt","","",19,[[["color",4]],["bool",15]]],[11,"ge","","",19,[[["color",4]],["bool",15]]],[11,"partial_cmp","","",21,[[["colored",4]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["colored",4]],["bool",15]]],[11,"le","","",21,[[["colored",4]],["bool",15]]],[11,"gt","","",21,[[["colored",4]],["bool",15]]],[11,"ge","","",21,[[["colored",4]],["bool",15]]],[11,"partial_cmp","crossterm::terminal","",30,[[["cleartype",4]],[["option",4],["ordering",4]]]],[11,"fmt","crossterm::cursor","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::event","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::style","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::terminal","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm","",40,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::cursor","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::style","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm::terminal","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","crossterm","",40,[[["formatter",3]],["result",6]]],[11,"sub","crossterm::event","Returns the set difference of the two sets of flags.",12,[[["keymodifiers",3]],["keymodifiers",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["keymodifiers",3]]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["keymodifiers",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["keymodifiers",3]],["keymodifiers",3]]],[11,"bitand","crossterm::style","",49,[[["attribute",4]]]],[11,"bitand","","",49,[[]]],[11,"bitor","crossterm::event","Returns the union of the two sets of flags.",12,[[["keymodifiers",3]],["keymodifiers",3]]],[11,"bitor","crossterm::style","",49,[[["attribute",4]]]],[11,"bitor","","",49,[[]]],[11,"bitxor","crossterm::event","Returns the left flags, but with all the right flags …",12,[[["keymodifiers",3]],["keymodifiers",3]]],[11,"bitxor","crossterm::style","",49,[[["attribute",4]]]],[11,"bitxor","","",49,[[]]],[11,"bitand_assign","crossterm::event","Disables all flags disabled in the set.",12,[[["keymodifiers",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["keymodifiers",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["keymodifiers",3]]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","crossterm::style","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",21,[[]]],[11,"hash","crossterm::terminal","",30,[[]]],[11,"try_from","crossterm::style","Try to create a <code>Color</code> from the string representation. …",19,[[["str",15]],["result",4]]],[11,"from_str","","Creates a <code>Color</code> from the string representation.",19,[[["str",15]],["result",4]]],[11,"from_iter","crossterm::event","",12,[[["intoiterator",8]],["keymodifiers",3]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"source","crossterm","",40,[[],[["error",8],["option",4]]]],[11,"parse_ansi","crossterm::style","Parse an ANSI foreground or background color. This is the …",21,[[["str",15]],["option",4]]],[11,"parse_ansi","","Parses an ANSI color sequence. For example:",19,[[["str",15]],["option",4]]],[11,"set","","Sets the attribute. If it\'s already set, this does …",49,[[["attribute",4]]]],[11,"unset","","Unsets the attribute. If it\'s not set, this changes …",49,[[["attribute",4]]]],[11,"toggle","","Sets the attribute if it\'s unset, unset it if it is set.",49,[[["attribute",4]]]],[11,"has","","Returns whether the attribute is set.",49,[[["attribute",4]],["bool",15]]],[11,"extend","","Sets all the passed attributes. Removes none.",49,[[["attributes",3]]]],[11,"is_empty","","Returns whether there is no attribute set.",49,[[],["bool",15]]],[11,"apply","","Creates a <code>StyledContent</code> by applying the style to the …",15,[[["display",8]],[["display",8],["styledcontent",3]]]],[11,"new","","Creates a new <code>ContentStyle</code>.",15,[[],["contentstyle",3]]],[11,"background","","Sets the background color.",15,[[["color",4]],["contentstyle",3]]],[11,"foreground","","Sets the foreground color.",15,[[["color",4]],["contentstyle",3]]],[11,"attribute","","Adds the attribute.",15,[[["attribute",4]],["contentstyle",3]]],[11,"new","","Creates a new <code>StyledContent</code>.",50,[[["contentstyle",3]],["styledcontent",3]]],[11,"with","","Sets the foreground color.",50,[[["color",4]],["styledcontent",3]]],[11,"on","","Sets the background color.",50,[[["color",4]],["styledcontent",3]]],[11,"attribute","","Adds the attribute.",50,[[["attribute",4]],["styledcontent",3]]],[11,"content","","Returns the content.",50,[[]]],[11,"style","","Returns the style.",50,[[],["contentstyle",3]]],[11,"style_mut","","Returns a mutable reference to the style, so that it can …",50,[[],["contentstyle",3]]],[11,"iterator","","Iterates over all the variants of the Attribute enum.",18,[[]]],[11,"bytes","","Returns a u32 with one bit set, which is the signature of …",18,[[],["u32",15]]],[11,"sgr","","Returns the SGR attribute value.",18,[[],["i16",15]]],[11,"then","","Returns a new <code>Color</code> which, when applied, has the same …",22,[[["colors",3]],["colors",3]]],[11,"new","","",22,[[["color",4]],["colors",3]]]],"p":[[3,"MoveTo"],[3,"MoveToNextLine"],[3,"MoveToPreviousLine"],[3,"MoveToColumn"],[3,"MoveUp"],[3,"MoveRight"],[3,"MoveDown"],[3,"MoveLeft"],[4,"Event"],[3,"MouseEvent"],[4,"MouseEventKind"],[4,"MouseButton"],[3,"KeyModifiers"],[3,"KeyEvent"],[4,"KeyCode"],[3,"ContentStyle"],[8,"Colorize"],[8,"Styler"],[4,"Attribute"],[4,"Color"],[13,"Rgb"],[4,"Colored"],[3,"Colors"],[3,"SetForegroundColor"],[3,"SetBackgroundColor"],[3,"SetColors"],[3,"SetAttribute"],[3,"SetAttributes"],[3,"PrintStyledContent"],[3,"Print"],[4,"ClearType"],[3,"ScrollUp"],[3,"ScrollDown"],[3,"Clear"],[3,"SetSize"],[3,"SetTitle"],[8,"IsTty"],[8,"Command"],[8,"ExecutableCommand"],[8,"QueueableCommand"],[4,"ErrorKind"],[3,"SavePosition"],[3,"RestorePosition"],[3,"Hide"],[3,"Show"],[3,"EnableBlinking"],[3,"DisableBlinking"],[3,"EnableMouseCapture"],[3,"DisableMouseCapture"],[3,"Attributes"],[3,"StyledContent"],[3,"ResetColor"],[3,"DisableLineWrap"],[3,"EnableLineWrap"],[3,"EnterAlternateScreen"],[3,"LeaveAlternateScreen"]]},\
"eyre":{"doc":"This library provides <code>eyre::Report</code>, a trait object based …","i":[[3,"Report","eyre","The core error reporting type of the library, a wrapper …",null,null],[3,"InstallError","","Error indicating that <code>set_hook</code> was unable to install the …",null,null],[5,"set_hook","","Install the provided error hook for constructing …",null,[[["box",3],["fn",8]],[["installerror",3],["result",6]]]],[8,"EyreHandler","","Error Report Handler trait for customizing <code>eyre::Report</code>",null,null],[10,"debug","","Define the report format",0,[[["stderror",8],["formatter",3]],["result",6]]],[11,"display","","Override for the <code>Display</code> format",0,[[["stderror",8],["formatter",3]],["result",6]]],[11,"track_caller","","Store the location of the caller who constructed this …",0,[[["location",3]]]],[3,"DefaultHandler","","The default provided error report handler for <code>eyre::Report</code>…",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[6,"Result","","type alias for <code>Result<T, Report></code>",null,null],[8,"WrapErr","","Provides the <code>wrap_err</code> method for <code>Result</code>.",null,null],[10,"wrap_err","","Wrap the error value with a new adhoc error",1,[[],[["result",6],["report",3]]]],[10,"wrap_err_with","","Wrap the error value with a new adhoc error that is …",1,[[],[["result",6],["report",3]]]],[10,"context","","Compatibility re-export of wrap_err for interopt with …",1,[[],[["result",6],["report",3]]]],[10,"with_context","","Compatibility re-export of wrap_err_with for interopt …",1,[[],[["result",6],["report",3]]]],[8,"ContextCompat","","Provides the <code>context</code> method for <code>Option</code> when porting from …",null,null],[10,"context","","Compatibility version of <code>wrap_err</code> for creating new errors …",2,[[],[["result",6],["report",3]]]],[10,"with_context","","Compatibility version of <code>wrap_err_with</code> for creating new …",2,[[],[["result",6],["report",3]]]],[10,"wrap_err","","Compatibility re-export of <code>context</code> for porting from <code>anyhow</code>…",2,[[],[["result",6],["report",3]]]],[10,"wrap_err_with","","Compatibility re-export of <code>with_context</code> for porting from …",2,[[],[["result",6],["report",3]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not …",null,null],[14,"eyre","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",3,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"debug","","",5,[[["stderror",8],["formatter",3]],["result",6]]],[11,"track_caller","","",5,[[["location",3]]]],[11,"drop","","",3,[[]]],[11,"as_ref","","",3,[[],["stderror",8]]],[11,"as_ref","","",3,[[],["stderror",8]]],[11,"from","","",3,[[]]],[11,"next_back","","",6,[[],["option",4]]],[11,"len","","",6,[[],["usize",15]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"clone","","",6,[[],["chain",3]]],[11,"default","","",6,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"new","","Construct an iterator over a chain of errors via the …",6,[[["stderror",8]]]],[11,"new","","Create a new error object from any error type.",3,[[]]],[11,"msg","","Create a new error object from a printable error message.",3,[[]]],[11,"wrap_err","","Create a new error from an error message to wrap the …",3,[[]]],[11,"chain","","An iterator of the chain of source errors contained by …",3,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s …",3,[[],["stderror",8]]],[11,"is","","Returns true if <code>E</code> is the type held by this error object.",3,[[],["bool",15]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",3,[[],["result",4]]],[11,"downcast_ref","","Downcast this error object by reference.",3,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",3,[[],["option",4]]],[11,"handler","","Get a reference to the Handler for this Report.",3,[[],["eyrehandler",8]]],[11,"handler_mut","","Get a mutable reference to the Handler for this Report.",3,[[],["eyrehandler",8]]],[11,"is","","",0,[[],["bool",15]]],[11,"downcast_ref","","",0,[[],["option",4]]],[11,"downcast_mut","","",0,[[],["option",4]]]],"p":[[8,"EyreHandler"],[8,"WrapErr"],[8,"ContextCompat"],[3,"Report"],[3,"InstallError"],[3,"DefaultHandler"],[3,"Chain"]]},\
"gimli":{"doc":"<code>gimli</code> is a library for reading and writing the DWARF …","i":[[0,"constants","gimli","Constant definitions.",null,null],[3,"DwUt","gimli::constants","The unit type field in a unit header.",null,null],[12,"0","","",0,null],[17,"DW_UT_compile","","",null,null],[17,"DW_UT_type","","",null,null],[17,"DW_UT_partial","","",null,null],[17,"DW_UT_skeleton","","",null,null],[17,"DW_UT_split_compile","","",null,null],[17,"DW_UT_split_type","","",null,null],[17,"DW_UT_lo_user","","",null,null],[17,"DW_UT_hi_user","","",null,null],[11,"static_string","","",0,[[],[["str",15],["option",4]]]],[3,"DwCfa","","The opcode for a call frame instruction.",null,null],[12,"0","","",1,null],[17,"DW_CFA_advance_loc","","",null,null],[17,"DW_CFA_offset","","",null,null],[17,"DW_CFA_restore","","",null,null],[17,"DW_CFA_nop","","",null,null],[17,"DW_CFA_set_loc","","",null,null],[17,"DW_CFA_advance_loc1","","",null,null],[17,"DW_CFA_advance_loc2","","",null,null],[17,"DW_CFA_advance_loc4","","",null,null],[17,"DW_CFA_offset_extended","","",null,null],[17,"DW_CFA_restore_extended","","",null,null],[17,"DW_CFA_undefined","","",null,null],[17,"DW_CFA_same_value","","",null,null],[17,"DW_CFA_register","","",null,null],[17,"DW_CFA_remember_state","","",null,null],[17,"DW_CFA_restore_state","","",null,null],[17,"DW_CFA_def_cfa","","",null,null],[17,"DW_CFA_def_cfa_register","","",null,null],[17,"DW_CFA_def_cfa_offset","","",null,null],[17,"DW_CFA_def_cfa_expression","","",null,null],[17,"DW_CFA_expression","","",null,null],[17,"DW_CFA_offset_extended_sf","","",null,null],[17,"DW_CFA_def_cfa_sf","","",null,null],[17,"DW_CFA_def_cfa_offset_sf","","",null,null],[17,"DW_CFA_val_offset","","",null,null],[17,"DW_CFA_val_offset_sf","","",null,null],[17,"DW_CFA_val_expression","","",null,null],[17,"DW_CFA_lo_user","","",null,null],[17,"DW_CFA_hi_user","","",null,null],[17,"DW_CFA_MIPS_advance_loc8","","",null,null],[17,"DW_CFA_GNU_window_save","","",null,null],[17,"DW_CFA_GNU_args_size","","",null,null],[17,"DW_CFA_GNU_negative_offset_extended","","",null,null],[11,"static_string","","",1,[[],[["str",15],["option",4]]]],[3,"DwChildren","","The child determination encodings for DIE attributes.",null,null],[12,"0","","",2,null],[17,"DW_CHILDREN_no","","",null,null],[17,"DW_CHILDREN_yes","","",null,null],[11,"static_string","","",2,[[],[["str",15],["option",4]]]],[3,"DwTag","","The tag encodings for DIE attributes.",null,null],[12,"0","","",3,null],[17,"DW_TAG_null","","",null,null],[17,"DW_TAG_array_type","","",null,null],[17,"DW_TAG_class_type","","",null,null],[17,"DW_TAG_entry_point","","",null,null],[17,"DW_TAG_enumeration_type","","",null,null],[17,"DW_TAG_formal_parameter","","",null,null],[17,"DW_TAG_imported_declaration","","",null,null],[17,"DW_TAG_label","","",null,null],[17,"DW_TAG_lexical_block","","",null,null],[17,"DW_TAG_member","","",null,null],[17,"DW_TAG_pointer_type","","",null,null],[17,"DW_TAG_reference_type","","",null,null],[17,"DW_TAG_compile_unit","","",null,null],[17,"DW_TAG_string_type","","",null,null],[17,"DW_TAG_structure_type","","",null,null],[17,"DW_TAG_subroutine_type","","",null,null],[17,"DW_TAG_typedef","","",null,null],[17,"DW_TAG_union_type","","",null,null],[17,"DW_TAG_unspecified_parameters","","",null,null],[17,"DW_TAG_variant","","",null,null],[17,"DW_TAG_common_block","","",null,null],[17,"DW_TAG_common_inclusion","","",null,null],[17,"DW_TAG_inheritance","","",null,null],[17,"DW_TAG_inlined_subroutine","","",null,null],[17,"DW_TAG_module","","",null,null],[17,"DW_TAG_ptr_to_member_type","","",null,null],[17,"DW_TAG_set_type","","",null,null],[17,"DW_TAG_subrange_type","","",null,null],[17,"DW_TAG_with_stmt","","",null,null],[17,"DW_TAG_access_declaration","","",null,null],[17,"DW_TAG_base_type","","",null,null],[17,"DW_TAG_catch_block","","",null,null],[17,"DW_TAG_const_type","","",null,null],[17,"DW_TAG_constant","","",null,null],[17,"DW_TAG_enumerator","","",null,null],[17,"DW_TAG_file_type","","",null,null],[17,"DW_TAG_friend","","",null,null],[17,"DW_TAG_namelist","","",null,null],[17,"DW_TAG_namelist_item","","",null,null],[17,"DW_TAG_packed_type","","",null,null],[17,"DW_TAG_subprogram","","",null,null],[17,"DW_TAG_template_type_parameter","","",null,null],[17,"DW_TAG_template_value_parameter","","",null,null],[17,"DW_TAG_thrown_type","","",null,null],[17,"DW_TAG_try_block","","",null,null],[17,"DW_TAG_variant_part","","",null,null],[17,"DW_TAG_variable","","",null,null],[17,"DW_TAG_volatile_type","","",null,null],[17,"DW_TAG_dwarf_procedure","","",null,null],[17,"DW_TAG_restrict_type","","",null,null],[17,"DW_TAG_interface_type","","",null,null],[17,"DW_TAG_namespace","","",null,null],[17,"DW_TAG_imported_module","","",null,null],[17,"DW_TAG_unspecified_type","","",null,null],[17,"DW_TAG_partial_unit","","",null,null],[17,"DW_TAG_imported_unit","","",null,null],[17,"DW_TAG_condition","","",null,null],[17,"DW_TAG_shared_type","","",null,null],[17,"DW_TAG_type_unit","","",null,null],[17,"DW_TAG_rvalue_reference_type","","",null,null],[17,"DW_TAG_template_alias","","",null,null],[17,"DW_TAG_coarray_type","","",null,null],[17,"DW_TAG_generic_subrange","","",null,null],[17,"DW_TAG_dynamic_type","","",null,null],[17,"DW_TAG_atomic_type","","",null,null],[17,"DW_TAG_call_site","","",null,null],[17,"DW_TAG_call_site_parameter","","",null,null],[17,"DW_TAG_skeleton_unit","","",null,null],[17,"DW_TAG_immutable_type","","",null,null],[17,"DW_TAG_lo_user","","",null,null],[17,"DW_TAG_hi_user","","",null,null],[17,"DW_TAG_MIPS_loop","","",null,null],[17,"DW_TAG_HP_array_descriptor","","",null,null],[17,"DW_TAG_HP_Bliss_field","","",null,null],[17,"DW_TAG_HP_Bliss_field_set","","",null,null],[17,"DW_TAG_format_label","","",null,null],[17,"DW_TAG_function_template","","",null,null],[17,"DW_TAG_class_template","","",null,null],[17,"DW_TAG_GNU_BINCL","","",null,null],[17,"DW_TAG_GNU_EINCL","","",null,null],[17,"DW_TAG_GNU_template_template_param","","",null,null],[17,"DW_TAG_GNU_template_parameter_pack","","",null,null],[17,"DW_TAG_GNU_formal_parameter_pack","","",null,null],[17,"DW_TAG_GNU_call_site","","",null,null],[17,"DW_TAG_GNU_call_site_parameter","","",null,null],[17,"DW_TAG_APPLE_property","","",null,null],[17,"DW_TAG_SUN_function_template","","",null,null],[17,"DW_TAG_SUN_class_template","","",null,null],[17,"DW_TAG_SUN_struct_template","","",null,null],[17,"DW_TAG_SUN_union_template","","",null,null],[17,"DW_TAG_SUN_indirect_inheritance","","",null,null],[17,"DW_TAG_SUN_codeflags","","",null,null],[17,"DW_TAG_SUN_memop_info","","",null,null],[17,"DW_TAG_SUN_omp_child_func","","",null,null],[17,"DW_TAG_SUN_rtti_descriptor","","",null,null],[17,"DW_TAG_SUN_dtor_info","","",null,null],[17,"DW_TAG_SUN_dtor","","",null,null],[17,"DW_TAG_SUN_f90_interface","","",null,null],[17,"DW_TAG_SUN_fortran_vax_structure","","",null,null],[17,"DW_TAG_ALTIUM_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_mwa_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_rev_carry_type","","",null,null],[17,"DW_TAG_ALTIUM_rom","","",null,null],[17,"DW_TAG_upc_shared_type","","",null,null],[17,"DW_TAG_upc_strict_type","","",null,null],[17,"DW_TAG_upc_relaxed_type","","",null,null],[17,"DW_TAG_PGI_kanji_type","","",null,null],[17,"DW_TAG_PGI_interface_block","","",null,null],[17,"DW_TAG_BORLAND_property","","",null,null],[17,"DW_TAG_BORLAND_Delphi_string","","",null,null],[17,"DW_TAG_BORLAND_Delphi_dynamic_array","","",null,null],[17,"DW_TAG_BORLAND_Delphi_set","","",null,null],[17,"DW_TAG_BORLAND_Delphi_variant","","",null,null],[11,"static_string","","",3,[[],[["str",15],["option",4]]]],[3,"DwAt","","The attribute encodings for DIE attributes.",null,null],[12,"0","","",4,null],[17,"DW_AT_null","","",null,null],[17,"DW_AT_sibling","","",null,null],[17,"DW_AT_location","","",null,null],[17,"DW_AT_name","","",null,null],[17,"DW_AT_ordering","","",null,null],[17,"DW_AT_byte_size","","",null,null],[17,"DW_AT_bit_offset","","",null,null],[17,"DW_AT_bit_size","","",null,null],[17,"DW_AT_stmt_list","","",null,null],[17,"DW_AT_low_pc","","",null,null],[17,"DW_AT_high_pc","","",null,null],[17,"DW_AT_language","","",null,null],[17,"DW_AT_discr","","",null,null],[17,"DW_AT_discr_value","","",null,null],[17,"DW_AT_visibility","","",null,null],[17,"DW_AT_import","","",null,null],[17,"DW_AT_string_length","","",null,null],[17,"DW_AT_common_reference","","",null,null],[17,"DW_AT_comp_dir","","",null,null],[17,"DW_AT_const_value","","",null,null],[17,"DW_AT_containing_type","","",null,null],[17,"DW_AT_default_value","","",null,null],[17,"DW_AT_inline","","",null,null],[17,"DW_AT_is_optional","","",null,null],[17,"DW_AT_lower_bound","","",null,null],[17,"DW_AT_producer","","",null,null],[17,"DW_AT_prototyped","","",null,null],[17,"DW_AT_return_addr","","",null,null],[17,"DW_AT_start_scope","","",null,null],[17,"DW_AT_bit_stride","","",null,null],[17,"DW_AT_upper_bound","","",null,null],[17,"DW_AT_abstract_origin","","",null,null],[17,"DW_AT_accessibility","","",null,null],[17,"DW_AT_address_class","","",null,null],[17,"DW_AT_artificial","","",null,null],[17,"DW_AT_base_types","","",null,null],[17,"DW_AT_calling_convention","","",null,null],[17,"DW_AT_count","","",null,null],[17,"DW_AT_data_member_location","","",null,null],[17,"DW_AT_decl_column","","",null,null],[17,"DW_AT_decl_file","","",null,null],[17,"DW_AT_decl_line","","",null,null],[17,"DW_AT_declaration","","",null,null],[17,"DW_AT_discr_list","","",null,null],[17,"DW_AT_encoding","","",null,null],[17,"DW_AT_external","","",null,null],[17,"DW_AT_frame_base","","",null,null],[17,"DW_AT_friend","","",null,null],[17,"DW_AT_identifier_case","","",null,null],[17,"DW_AT_macro_info","","",null,null],[17,"DW_AT_namelist_item","","",null,null],[17,"DW_AT_priority","","",null,null],[17,"DW_AT_segment","","",null,null],[17,"DW_AT_specification","","",null,null],[17,"DW_AT_static_link","","",null,null],[17,"DW_AT_type","","",null,null],[17,"DW_AT_use_location","","",null,null],[17,"DW_AT_variable_parameter","","",null,null],[17,"DW_AT_virtuality","","",null,null],[17,"DW_AT_vtable_elem_location","","",null,null],[17,"DW_AT_allocated","","",null,null],[17,"DW_AT_associated","","",null,null],[17,"DW_AT_data_location","","",null,null],[17,"DW_AT_byte_stride","","",null,null],[17,"DW_AT_entry_pc","","",null,null],[17,"DW_AT_use_UTF8","","",null,null],[17,"DW_AT_extension","","",null,null],[17,"DW_AT_ranges","","",null,null],[17,"DW_AT_trampoline","","",null,null],[17,"DW_AT_call_column","","",null,null],[17,"DW_AT_call_file","","",null,null],[17,"DW_AT_call_line","","",null,null],[17,"DW_AT_description","","",null,null],[17,"DW_AT_binary_scale","","",null,null],[17,"DW_AT_decimal_scale","","",null,null],[17,"DW_AT_small","","",null,null],[17,"DW_AT_decimal_sign","","",null,null],[17,"DW_AT_digit_count","","",null,null],[17,"DW_AT_picture_string","","",null,null],[17,"DW_AT_mutable","","",null,null],[17,"DW_AT_threads_scaled","","",null,null],[17,"DW_AT_explicit","","",null,null],[17,"DW_AT_object_pointer","","",null,null],[17,"DW_AT_endianity","","",null,null],[17,"DW_AT_elemental","","",null,null],[17,"DW_AT_pure","","",null,null],[17,"DW_AT_recursive","","",null,null],[17,"DW_AT_signature","","",null,null],[17,"DW_AT_main_subprogram","","",null,null],[17,"DW_AT_data_bit_offset","","",null,null],[17,"DW_AT_const_expr","","",null,null],[17,"DW_AT_enum_class","","",null,null],[17,"DW_AT_linkage_name","","",null,null],[17,"DW_AT_string_length_bit_size","","",null,null],[17,"DW_AT_string_length_byte_size","","",null,null],[17,"DW_AT_rank","","",null,null],[17,"DW_AT_str_offsets_base","","",null,null],[17,"DW_AT_addr_base","","",null,null],[17,"DW_AT_rnglists_base","","",null,null],[17,"DW_AT_dwo_name","","",null,null],[17,"DW_AT_reference","","",null,null],[17,"DW_AT_rvalue_reference","","",null,null],[17,"DW_AT_macros","","",null,null],[17,"DW_AT_call_all_calls","","",null,null],[17,"DW_AT_call_all_source_calls","","",null,null],[17,"DW_AT_call_all_tail_calls","","",null,null],[17,"DW_AT_call_return_pc","","",null,null],[17,"DW_AT_call_value","","",null,null],[17,"DW_AT_call_origin","","",null,null],[17,"DW_AT_call_parameter","","",null,null],[17,"DW_AT_call_pc","","",null,null],[17,"DW_AT_call_tail_call","","",null,null],[17,"DW_AT_call_target","","",null,null],[17,"DW_AT_call_target_clobbered","","",null,null],[17,"DW_AT_call_data_location","","",null,null],[17,"DW_AT_call_data_value","","",null,null],[17,"DW_AT_noreturn","","",null,null],[17,"DW_AT_alignment","","",null,null],[17,"DW_AT_export_symbols","","",null,null],[17,"DW_AT_deleted","","",null,null],[17,"DW_AT_defaulted","","",null,null],[17,"DW_AT_loclists_base","","",null,null],[17,"DW_AT_lo_user","","",null,null],[17,"DW_AT_hi_user","","",null,null],[17,"DW_AT_MIPS_fde","","",null,null],[17,"DW_AT_MIPS_loop_begin","","",null,null],[17,"DW_AT_MIPS_tail_loop_begin","","",null,null],[17,"DW_AT_MIPS_epilog_begin","","",null,null],[17,"DW_AT_MIPS_loop_unroll_factor","","",null,null],[17,"DW_AT_MIPS_software_pipeline_depth","","",null,null],[17,"DW_AT_MIPS_linkage_name","","",null,null],[17,"DW_AT_MIPS_stride","","",null,null],[17,"DW_AT_MIPS_abstract_name","","",null,null],[17,"DW_AT_MIPS_clone_origin","","",null,null],[17,"DW_AT_MIPS_has_inlines","","",null,null],[17,"DW_AT_MIPS_stride_byte","","",null,null],[17,"DW_AT_MIPS_stride_elem","","",null,null],[17,"DW_AT_MIPS_ptr_dopetype","","",null,null],[17,"DW_AT_MIPS_allocatable_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_shape_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_size","","",null,null],[17,"DW_AT_INTEL_other_endian","","",null,null],[17,"DW_AT_sf_names","","",null,null],[17,"DW_AT_src_info","","",null,null],[17,"DW_AT_mac_info","","",null,null],[17,"DW_AT_src_coords","","",null,null],[17,"DW_AT_body_begin","","",null,null],[17,"DW_AT_body_end","","",null,null],[17,"DW_AT_GNU_vector","","",null,null],[17,"DW_AT_GNU_guarded_by","","",null,null],[17,"DW_AT_GNU_pt_guarded_by","","",null,null],[17,"DW_AT_GNU_guarded","","",null,null],[17,"DW_AT_GNU_pt_guarded","","",null,null],[17,"DW_AT_GNU_locks_excluded","","",null,null],[17,"DW_AT_GNU_exclusive_locks_required","","",null,null],[17,"DW_AT_GNU_shared_locks_required","","",null,null],[17,"DW_AT_GNU_odr_signature","","",null,null],[17,"DW_AT_GNU_template_name","","",null,null],[17,"DW_AT_GNU_call_site_value","","",null,null],[17,"DW_AT_GNU_call_site_data_value","","",null,null],[17,"DW_AT_GNU_call_site_target","","",null,null],[17,"DW_AT_GNU_call_site_target_clobbered","","",null,null],[17,"DW_AT_GNU_tail_call","","",null,null],[17,"DW_AT_GNU_all_tail_call_sites","","",null,null],[17,"DW_AT_GNU_all_call_sites","","",null,null],[17,"DW_AT_GNU_all_source_call_sites","","",null,null],[17,"DW_AT_GNU_macros","","",null,null],[17,"DW_AT_GNU_dwo_name","","",null,null],[17,"DW_AT_GNU_dwo_id","","",null,null],[17,"DW_AT_GNU_ranges_base","","",null,null],[17,"DW_AT_GNU_addr_base","","",null,null],[17,"DW_AT_GNU_pubnames","","",null,null],[17,"DW_AT_GNU_pubtypes","","",null,null],[17,"DW_AT_GNU_discriminator","","",null,null],[17,"DW_AT_GNU_locviews","","",null,null],[17,"DW_AT_GNU_entry_view","","",null,null],[17,"DW_AT_SUN_template","","",null,null],[17,"DW_AT_SUN_alignment","","",null,null],[17,"DW_AT_SUN_vtable","","",null,null],[17,"DW_AT_SUN_count_guarantee","","",null,null],[17,"DW_AT_SUN_command_line","","",null,null],[17,"DW_AT_SUN_vbase","","",null,null],[17,"DW_AT_SUN_compile_options","","",null,null],[17,"DW_AT_SUN_language","","",null,null],[17,"DW_AT_SUN_browser_file","","",null,null],[17,"DW_AT_SUN_vtable_abi","","",null,null],[17,"DW_AT_SUN_func_offsets","","",null,null],[17,"DW_AT_SUN_cf_kind","","",null,null],[17,"DW_AT_SUN_vtable_index","","",null,null],[17,"DW_AT_SUN_omp_tpriv_addr","","",null,null],[17,"DW_AT_SUN_omp_child_func","","",null,null],[17,"DW_AT_SUN_func_offset","","",null,null],[17,"DW_AT_SUN_memop_type_ref","","",null,null],[17,"DW_AT_SUN_profile_id","","",null,null],[17,"DW_AT_SUN_memop_signature","","",null,null],[17,"DW_AT_SUN_obj_dir","","",null,null],[17,"DW_AT_SUN_obj_file","","",null,null],[17,"DW_AT_SUN_original_name","","",null,null],[17,"DW_AT_SUN_hwcprof_signature","","",null,null],[17,"DW_AT_SUN_amd64_parmdump","","",null,null],[17,"DW_AT_SUN_part_link_name","","",null,null],[17,"DW_AT_SUN_link_name","","",null,null],[17,"DW_AT_SUN_pass_with_const","","",null,null],[17,"DW_AT_SUN_return_with_const","","",null,null],[17,"DW_AT_SUN_import_by_name","","",null,null],[17,"DW_AT_SUN_f90_pointer","","",null,null],[17,"DW_AT_SUN_pass_by_ref","","",null,null],[17,"DW_AT_SUN_f90_allocatable","","",null,null],[17,"DW_AT_SUN_f90_assumed_shape_array","","",null,null],[17,"DW_AT_SUN_c_vla","","",null,null],[17,"DW_AT_SUN_return_value_ptr","","",null,null],[17,"DW_AT_SUN_dtor_start","","",null,null],[17,"DW_AT_SUN_dtor_length","","",null,null],[17,"DW_AT_SUN_dtor_state_initial","","",null,null],[17,"DW_AT_SUN_dtor_state_final","","",null,null],[17,"DW_AT_SUN_dtor_state_deltas","","",null,null],[17,"DW_AT_SUN_import_by_lname","","",null,null],[17,"DW_AT_SUN_f90_use_only","","",null,null],[17,"DW_AT_SUN_namelist_spec","","",null,null],[17,"DW_AT_SUN_is_omp_child_func","","",null,null],[17,"DW_AT_SUN_fortran_main_alias","","",null,null],[17,"DW_AT_SUN_fortran_based","","",null,null],[17,"DW_AT_ALTIUM_loclist","","",null,null],[17,"DW_AT_use_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNU_numerator","","",null,null],[17,"DW_AT_GNU_denominator","","",null,null],[17,"DW_AT_GNU_bias","","",null,null],[17,"DW_AT_upc_threads_scaled","","",null,null],[17,"DW_AT_PGI_lbase","","",null,null],[17,"DW_AT_PGI_soffset","","",null,null],[17,"DW_AT_PGI_lstride","","",null,null],[17,"DW_AT_BORLAND_property_read","","",null,null],[17,"DW_AT_BORLAND_property_write","","",null,null],[17,"DW_AT_BORLAND_property_implements","","",null,null],[17,"DW_AT_BORLAND_property_index","","",null,null],[17,"DW_AT_BORLAND_property_default","","",null,null],[17,"DW_AT_BORLAND_Delphi_unit","","",null,null],[17,"DW_AT_BORLAND_Delphi_class","","",null,null],[17,"DW_AT_BORLAND_Delphi_record","","",null,null],[17,"DW_AT_BORLAND_Delphi_metaclass","","",null,null],[17,"DW_AT_BORLAND_Delphi_constructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_destructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_anonymous_method","","",null,null],[17,"DW_AT_BORLAND_Delphi_interface","","",null,null],[17,"DW_AT_BORLAND_Delphi_ABI","","",null,null],[17,"DW_AT_BORLAND_Delphi_return","","",null,null],[17,"DW_AT_BORLAND_Delphi_frameptr","","",null,null],[17,"DW_AT_BORLAND_closure","","",null,null],[17,"DW_AT_LLVM_include_path","","",null,null],[17,"DW_AT_LLVM_config_macros","","",null,null],[17,"DW_AT_LLVM_isysroot","","",null,null],[17,"DW_AT_APPLE_optimized","","",null,null],[17,"DW_AT_APPLE_flags","","",null,null],[17,"DW_AT_APPLE_isa","","",null,null],[17,"DW_AT_APPLE_block","","",null,null],[17,"DW_AT_APPLE_major_runtime_vers","","",null,null],[17,"DW_AT_APPLE_runtime_class","","",null,null],[17,"DW_AT_APPLE_omit_frame_ptr","","",null,null],[17,"DW_AT_APPLE_property_name","","",null,null],[17,"DW_AT_APPLE_property_getter","","",null,null],[17,"DW_AT_APPLE_property_setter","","",null,null],[17,"DW_AT_APPLE_property_attribute","","",null,null],[17,"DW_AT_APPLE_objc_complete_type","","",null,null],[17,"DW_AT_APPLE_property","","",null,null],[11,"static_string","","",4,[[],[["str",15],["option",4]]]],[3,"DwForm","","The attribute form encodings for DIE attributes.",null,null],[12,"0","","",5,null],[17,"DW_FORM_null","","",null,null],[17,"DW_FORM_addr","","",null,null],[17,"DW_FORM_block2","","",null,null],[17,"DW_FORM_block4","","",null,null],[17,"DW_FORM_data2","","",null,null],[17,"DW_FORM_data4","","",null,null],[17,"DW_FORM_data8","","",null,null],[17,"DW_FORM_string","","",null,null],[17,"DW_FORM_block","","",null,null],[17,"DW_FORM_block1","","",null,null],[17,"DW_FORM_data1","","",null,null],[17,"DW_FORM_flag","","",null,null],[17,"DW_FORM_sdata","","",null,null],[17,"DW_FORM_strp","","",null,null],[17,"DW_FORM_udata","","",null,null],[17,"DW_FORM_ref_addr","","",null,null],[17,"DW_FORM_ref1","","",null,null],[17,"DW_FORM_ref2","","",null,null],[17,"DW_FORM_ref4","","",null,null],[17,"DW_FORM_ref8","","",null,null],[17,"DW_FORM_ref_udata","","",null,null],[17,"DW_FORM_indirect","","",null,null],[17,"DW_FORM_sec_offset","","",null,null],[17,"DW_FORM_exprloc","","",null,null],[17,"DW_FORM_flag_present","","",null,null],[17,"DW_FORM_ref_sig8","","",null,null],[17,"DW_FORM_strx","","",null,null],[17,"DW_FORM_addrx","","",null,null],[17,"DW_FORM_ref_sup4","","",null,null],[17,"DW_FORM_strp_sup","","",null,null],[17,"DW_FORM_data16","","",null,null],[17,"DW_FORM_line_strp","","",null,null],[17,"DW_FORM_implicit_const","","",null,null],[17,"DW_FORM_loclistx","","",null,null],[17,"DW_FORM_rnglistx","","",null,null],[17,"DW_FORM_ref_sup8","","",null,null],[17,"DW_FORM_strx1","","",null,null],[17,"DW_FORM_strx2","","",null,null],[17,"DW_FORM_strx3","","",null,null],[17,"DW_FORM_strx4","","",null,null],[17,"DW_FORM_addrx1","","",null,null],[17,"DW_FORM_addrx2","","",null,null],[17,"DW_FORM_addrx3","","",null,null],[17,"DW_FORM_addrx4","","",null,null],[17,"DW_FORM_GNU_addr_index","","",null,null],[17,"DW_FORM_GNU_str_index","","",null,null],[17,"DW_FORM_GNU_ref_alt","","",null,null],[17,"DW_FORM_GNU_strp_alt","","",null,null],[11,"static_string","","",5,[[],[["str",15],["option",4]]]],[3,"DwAte","","The encodings of the constants used in the <code>DW_AT_encoding</code> …",null,null],[12,"0","","",6,null],[17,"DW_ATE_address","","",null,null],[17,"DW_ATE_boolean","","",null,null],[17,"DW_ATE_complex_float","","",null,null],[17,"DW_ATE_float","","",null,null],[17,"DW_ATE_signed","","",null,null],[17,"DW_ATE_signed_char","","",null,null],[17,"DW_ATE_unsigned","","",null,null],[17,"DW_ATE_unsigned_char","","",null,null],[17,"DW_ATE_imaginary_float","","",null,null],[17,"DW_ATE_packed_decimal","","",null,null],[17,"DW_ATE_numeric_string","","",null,null],[17,"DW_ATE_edited","","",null,null],[17,"DW_ATE_signed_fixed","","",null,null],[17,"DW_ATE_unsigned_fixed","","",null,null],[17,"DW_ATE_decimal_float","","",null,null],[17,"DW_ATE_UTF","","",null,null],[17,"DW_ATE_UCS","","",null,null],[17,"DW_ATE_ASCII","","",null,null],[17,"DW_ATE_lo_user","","",null,null],[17,"DW_ATE_hi_user","","",null,null],[11,"static_string","","",6,[[],[["str",15],["option",4]]]],[3,"DwLle","","The encodings of the constants used in location list …",null,null],[12,"0","","",7,null],[17,"DW_LLE_end_of_list","","",null,null],[17,"DW_LLE_base_addressx","","",null,null],[17,"DW_LLE_startx_endx","","",null,null],[17,"DW_LLE_startx_length","","",null,null],[17,"DW_LLE_offset_pair","","",null,null],[17,"DW_LLE_default_location","","",null,null],[17,"DW_LLE_base_address","","",null,null],[17,"DW_LLE_start_end","","",null,null],[17,"DW_LLE_start_length","","",null,null],[17,"DW_LLE_GNU_view_pair","","",null,null],[11,"static_string","","",7,[[],[["str",15],["option",4]]]],[3,"DwDs","","The encodings of the constants used in the …",null,null],[12,"0","","",8,null],[17,"DW_DS_unsigned","","",null,null],[17,"DW_DS_leading_overpunch","","",null,null],[17,"DW_DS_trailing_overpunch","","",null,null],[17,"DW_DS_leading_separate","","",null,null],[17,"DW_DS_trailing_separate","","",null,null],[11,"static_string","","",8,[[],[["str",15],["option",4]]]],[3,"DwEnd","","The encodings of the constants used in the <code>DW_AT_endianity</code>…",null,null],[12,"0","","",9,null],[17,"DW_END_default","","",null,null],[17,"DW_END_big","","",null,null],[17,"DW_END_little","","",null,null],[17,"DW_END_lo_user","","",null,null],[17,"DW_END_hi_user","","",null,null],[11,"static_string","","",9,[[],[["str",15],["option",4]]]],[3,"DwAccess","","The encodings of the constants used in the …",null,null],[12,"0","","",10,null],[17,"DW_ACCESS_public","","",null,null],[17,"DW_ACCESS_protected","","",null,null],[17,"DW_ACCESS_private","","",null,null],[11,"static_string","","",10,[[],[["str",15],["option",4]]]],[3,"DwVis","","The encodings of the constants used in the …",null,null],[12,"0","","",11,null],[17,"DW_VIS_local","","",null,null],[17,"DW_VIS_exported","","",null,null],[17,"DW_VIS_qualified","","",null,null],[11,"static_string","","",11,[[],[["str",15],["option",4]]]],[3,"DwVirtuality","","The encodings of the constants used in the …",null,null],[12,"0","","",12,null],[17,"DW_VIRTUALITY_none","","",null,null],[17,"DW_VIRTUALITY_virtual","","",null,null],[17,"DW_VIRTUALITY_pure_virtual","","",null,null],[11,"static_string","","",12,[[],[["str",15],["option",4]]]],[3,"DwLang","","The encodings of the constants used in the <code>DW_AT_language</code> …",null,null],[12,"0","","",13,null],[17,"DW_LANG_C89","","",null,null],[17,"DW_LANG_C","","",null,null],[17,"DW_LANG_Ada83","","",null,null],[17,"DW_LANG_C_plus_plus","","",null,null],[17,"DW_LANG_Cobol74","","",null,null],[17,"DW_LANG_Cobol85","","",null,null],[17,"DW_LANG_Fortran77","","",null,null],[17,"DW_LANG_Fortran90","","",null,null],[17,"DW_LANG_Pascal83","","",null,null],[17,"DW_LANG_Modula2","","",null,null],[17,"DW_LANG_Java","","",null,null],[17,"DW_LANG_C99","","",null,null],[17,"DW_LANG_Ada95","","",null,null],[17,"DW_LANG_Fortran95","","",null,null],[17,"DW_LANG_PLI","","",null,null],[17,"DW_LANG_ObjC","","",null,null],[17,"DW_LANG_ObjC_plus_plus","","",null,null],[17,"DW_LANG_UPC","","",null,null],[17,"DW_LANG_D","","",null,null],[17,"DW_LANG_Python","","",null,null],[17,"DW_LANG_OpenCL","","",null,null],[17,"DW_LANG_Go","","",null,null],[17,"DW_LANG_Modula3","","",null,null],[17,"DW_LANG_Haskell","","",null,null],[17,"DW_LANG_C_plus_plus_03","","",null,null],[17,"DW_LANG_C_plus_plus_11","","",null,null],[17,"DW_LANG_OCaml","","",null,null],[17,"DW_LANG_Rust","","",null,null],[17,"DW_LANG_C11","","",null,null],[17,"DW_LANG_Swift","","",null,null],[17,"DW_LANG_Julia","","",null,null],[17,"DW_LANG_Dylan","","",null,null],[17,"DW_LANG_C_plus_plus_14","","",null,null],[17,"DW_LANG_Fortran03","","",null,null],[17,"DW_LANG_Fortran08","","",null,null],[17,"DW_LANG_RenderScript","","",null,null],[17,"DW_LANG_BLISS","","",null,null],[17,"DW_LANG_lo_user","","",null,null],[17,"DW_LANG_hi_user","","",null,null],[17,"DW_LANG_Mips_Assembler","","",null,null],[17,"DW_LANG_GOOGLE_RenderScript","","",null,null],[17,"DW_LANG_SUN_Assembler","","",null,null],[17,"DW_LANG_ALTIUM_Assembler","","",null,null],[17,"DW_LANG_BORLAND_Delphi","","",null,null],[11,"static_string","","",13,[[],[["str",15],["option",4]]]],[11,"default_lower_bound","","Get the default DW_AT_lower_bound for this language.",13,[[],[["option",4],["usize",15]]]],[3,"DwAddr","","The encodings of the constants used in the …",null,null],[12,"0","","",14,null],[17,"DW_ADDR_none","","",null,null],[11,"static_string","","",14,[[],[["str",15],["option",4]]]],[3,"DwId","","The encodings of the constants used in the …",null,null],[12,"0","","",15,null],[17,"DW_ID_case_sensitive","","",null,null],[17,"DW_ID_up_case","","",null,null],[17,"DW_ID_down_case","","",null,null],[17,"DW_ID_case_insensitive","","",null,null],[11,"static_string","","",15,[[],[["str",15],["option",4]]]],[3,"DwCc","","The encodings of the constants used in the …",null,null],[12,"0","","",16,null],[17,"DW_CC_normal","","",null,null],[17,"DW_CC_program","","",null,null],[17,"DW_CC_nocall","","",null,null],[17,"DW_CC_pass_by_reference","","",null,null],[17,"DW_CC_pass_by_value","","",null,null],[17,"DW_CC_lo_user","","",null,null],[17,"DW_CC_hi_user","","",null,null],[11,"static_string","","",16,[[],[["str",15],["option",4]]]],[3,"DwInl","","The encodings of the constants used in the <code>DW_AT_inline</code> …",null,null],[12,"0","","",17,null],[17,"DW_INL_not_inlined","","",null,null],[17,"DW_INL_inlined","","",null,null],[17,"DW_INL_declared_not_inlined","","",null,null],[17,"DW_INL_declared_inlined","","",null,null],[11,"static_string","","",17,[[],[["str",15],["option",4]]]],[3,"DwOrd","","The encodings of the constants used in the <code>DW_AT_ordering</code> …",null,null],[12,"0","","",18,null],[17,"DW_ORD_row_major","","",null,null],[17,"DW_ORD_col_major","","",null,null],[11,"static_string","","",18,[[],[["str",15],["option",4]]]],[3,"DwDsc","","The encodings of the constants used in the …",null,null],[12,"0","","",19,null],[17,"DW_DSC_label","","",null,null],[17,"DW_DSC_range","","",null,null],[11,"static_string","","",19,[[],[["str",15],["option",4]]]],[3,"DwIdx","","Name index attribute encodings.",null,null],[12,"0","","",20,null],[17,"DW_IDX_compile_unit","","",null,null],[17,"DW_IDX_type_unit","","",null,null],[17,"DW_IDX_die_offset","","",null,null],[17,"DW_IDX_parent","","",null,null],[17,"DW_IDX_type_hash","","",null,null],[17,"DW_IDX_lo_user","","",null,null],[17,"DW_IDX_hi_user","","",null,null],[11,"static_string","","",20,[[],[["str",15],["option",4]]]],[3,"DwDefaulted","","The encodings of the constants used in the <code>DW_AT_defaulted</code>…",null,null],[12,"0","","",21,null],[17,"DW_DEFAULTED_no","","",null,null],[17,"DW_DEFAULTED_in_class","","",null,null],[17,"DW_DEFAULTED_out_of_class","","",null,null],[11,"static_string","","",21,[[],[["str",15],["option",4]]]],[3,"DwLns","","The encodings for the standard opcodes for line number …",null,null],[12,"0","","",22,null],[17,"DW_LNS_copy","","",null,null],[17,"DW_LNS_advance_pc","","",null,null],[17,"DW_LNS_advance_line","","",null,null],[17,"DW_LNS_set_file","","",null,null],[17,"DW_LNS_set_column","","",null,null],[17,"DW_LNS_negate_stmt","","",null,null],[17,"DW_LNS_set_basic_block","","",null,null],[17,"DW_LNS_const_add_pc","","",null,null],[17,"DW_LNS_fixed_advance_pc","","",null,null],[17,"DW_LNS_set_prologue_end","","",null,null],[17,"DW_LNS_set_epilogue_begin","","",null,null],[17,"DW_LNS_set_isa","","",null,null],[11,"static_string","","",22,[[],[["str",15],["option",4]]]],[3,"DwLne","","The encodings for the extended opcodes for line number …",null,null],[12,"0","","",23,null],[17,"DW_LNE_end_sequence","","",null,null],[17,"DW_LNE_set_address","","",null,null],[17,"DW_LNE_define_file","","",null,null],[17,"DW_LNE_set_discriminator","","",null,null],[17,"DW_LNE_lo_user","","",null,null],[17,"DW_LNE_hi_user","","",null,null],[11,"static_string","","",23,[[],[["str",15],["option",4]]]],[3,"DwLnct","","The encodings for the line number header entry formats.",null,null],[12,"0","","",24,null],[17,"DW_LNCT_path","","",null,null],[17,"DW_LNCT_directory_index","","",null,null],[17,"DW_LNCT_timestamp","","",null,null],[17,"DW_LNCT_size","","",null,null],[17,"DW_LNCT_MD5","","",null,null],[17,"DW_LNCT_lo_user","","",null,null],[17,"DW_LNCT_hi_user","","",null,null],[11,"static_string","","",24,[[],[["str",15],["option",4]]]],[3,"DwMacro","","The encodings for macro information entry types.",null,null],[12,"0","","",25,null],[17,"DW_MACRO_define","","",null,null],[17,"DW_MACRO_undef","","",null,null],[17,"DW_MACRO_start_file","","",null,null],[17,"DW_MACRO_end_file","","",null,null],[17,"DW_MACRO_define_strp","","",null,null],[17,"DW_MACRO_undef_strp","","",null,null],[17,"DW_MACRO_import","","",null,null],[17,"DW_MACRO_define_sup","","",null,null],[17,"DW_MACRO_undef_sup","","",null,null],[17,"DW_MACRO_import_sup","","",null,null],[17,"DW_MACRO_define_strx","","",null,null],[17,"DW_MACRO_undef_strx","","",null,null],[17,"DW_MACRO_lo_user","","",null,null],[17,"DW_MACRO_hi_user","","",null,null],[11,"static_string","","",25,[[],[["str",15],["option",4]]]],[3,"DwRle","","Range list entry encoding values.",null,null],[12,"0","","",26,null],[17,"DW_RLE_end_of_list","","",null,null],[17,"DW_RLE_base_addressx","","",null,null],[17,"DW_RLE_startx_endx","","",null,null],[17,"DW_RLE_startx_length","","",null,null],[17,"DW_RLE_offset_pair","","",null,null],[17,"DW_RLE_base_address","","",null,null],[17,"DW_RLE_start_end","","",null,null],[17,"DW_RLE_start_length","","",null,null],[11,"static_string","","",26,[[],[["str",15],["option",4]]]],[3,"DwOp","","The encodings for DWARF expression operations.",null,null],[12,"0","","",27,null],[17,"DW_OP_addr","","",null,null],[17,"DW_OP_deref","","",null,null],[17,"DW_OP_const1u","","",null,null],[17,"DW_OP_const1s","","",null,null],[17,"DW_OP_const2u","","",null,null],[17,"DW_OP_const2s","","",null,null],[17,"DW_OP_const4u","","",null,null],[17,"DW_OP_const4s","","",null,null],[17,"DW_OP_const8u","","",null,null],[17,"DW_OP_const8s","","",null,null],[17,"DW_OP_constu","","",null,null],[17,"DW_OP_consts","","",null,null],[17,"DW_OP_dup","","",null,null],[17,"DW_OP_drop","","",null,null],[17,"DW_OP_over","","",null,null],[17,"DW_OP_pick","","",null,null],[17,"DW_OP_swap","","",null,null],[17,"DW_OP_rot","","",null,null],[17,"DW_OP_xderef","","",null,null],[17,"DW_OP_abs","","",null,null],[17,"DW_OP_and","","",null,null],[17,"DW_OP_div","","",null,null],[17,"DW_OP_minus","","",null,null],[17,"DW_OP_mod","","",null,null],[17,"DW_OP_mul","","",null,null],[17,"DW_OP_neg","","",null,null],[17,"DW_OP_not","","",null,null],[17,"DW_OP_or","","",null,null],[17,"DW_OP_plus","","",null,null],[17,"DW_OP_plus_uconst","","",null,null],[17,"DW_OP_shl","","",null,null],[17,"DW_OP_shr","","",null,null],[17,"DW_OP_shra","","",null,null],[17,"DW_OP_xor","","",null,null],[17,"DW_OP_bra","","",null,null],[17,"DW_OP_eq","","",null,null],[17,"DW_OP_ge","","",null,null],[17,"DW_OP_gt","","",null,null],[17,"DW_OP_le","","",null,null],[17,"DW_OP_lt","","",null,null],[17,"DW_OP_ne","","",null,null],[17,"DW_OP_skip","","",null,null],[17,"DW_OP_lit0","","",null,null],[17,"DW_OP_lit1","","",null,null],[17,"DW_OP_lit2","","",null,null],[17,"DW_OP_lit3","","",null,null],[17,"DW_OP_lit4","","",null,null],[17,"DW_OP_lit5","","",null,null],[17,"DW_OP_lit6","","",null,null],[17,"DW_OP_lit7","","",null,null],[17,"DW_OP_lit8","","",null,null],[17,"DW_OP_lit9","","",null,null],[17,"DW_OP_lit10","","",null,null],[17,"DW_OP_lit11","","",null,null],[17,"DW_OP_lit12","","",null,null],[17,"DW_OP_lit13","","",null,null],[17,"DW_OP_lit14","","",null,null],[17,"DW_OP_lit15","","",null,null],[17,"DW_OP_lit16","","",null,null],[17,"DW_OP_lit17","","",null,null],[17,"DW_OP_lit18","","",null,null],[17,"DW_OP_lit19","","",null,null],[17,"DW_OP_lit20","","",null,null],[17,"DW_OP_lit21","","",null,null],[17,"DW_OP_lit22","","",null,null],[17,"DW_OP_lit23","","",null,null],[17,"DW_OP_lit24","","",null,null],[17,"DW_OP_lit25","","",null,null],[17,"DW_OP_lit26","","",null,null],[17,"DW_OP_lit27","","",null,null],[17,"DW_OP_lit28","","",null,null],[17,"DW_OP_lit29","","",null,null],[17,"DW_OP_lit30","","",null,null],[17,"DW_OP_lit31","","",null,null],[17,"DW_OP_reg0","","",null,null],[17,"DW_OP_reg1","","",null,null],[17,"DW_OP_reg2","","",null,null],[17,"DW_OP_reg3","","",null,null],[17,"DW_OP_reg4","","",null,null],[17,"DW_OP_reg5","","",null,null],[17,"DW_OP_reg6","","",null,null],[17,"DW_OP_reg7","","",null,null],[17,"DW_OP_reg8","","",null,null],[17,"DW_OP_reg9","","",null,null],[17,"DW_OP_reg10","","",null,null],[17,"DW_OP_reg11","","",null,null],[17,"DW_OP_reg12","","",null,null],[17,"DW_OP_reg13","","",null,null],[17,"DW_OP_reg14","","",null,null],[17,"DW_OP_reg15","","",null,null],[17,"DW_OP_reg16","","",null,null],[17,"DW_OP_reg17","","",null,null],[17,"DW_OP_reg18","","",null,null],[17,"DW_OP_reg19","","",null,null],[17,"DW_OP_reg20","","",null,null],[17,"DW_OP_reg21","","",null,null],[17,"DW_OP_reg22","","",null,null],[17,"DW_OP_reg23","","",null,null],[17,"DW_OP_reg24","","",null,null],[17,"DW_OP_reg25","","",null,null],[17,"DW_OP_reg26","","",null,null],[17,"DW_OP_reg27","","",null,null],[17,"DW_OP_reg28","","",null,null],[17,"DW_OP_reg29","","",null,null],[17,"DW_OP_reg30","","",null,null],[17,"DW_OP_reg31","","",null,null],[17,"DW_OP_breg0","","",null,null],[17,"DW_OP_breg1","","",null,null],[17,"DW_OP_breg2","","",null,null],[17,"DW_OP_breg3","","",null,null],[17,"DW_OP_breg4","","",null,null],[17,"DW_OP_breg5","","",null,null],[17,"DW_OP_breg6","","",null,null],[17,"DW_OP_breg7","","",null,null],[17,"DW_OP_breg8","","",null,null],[17,"DW_OP_breg9","","",null,null],[17,"DW_OP_breg10","","",null,null],[17,"DW_OP_breg11","","",null,null],[17,"DW_OP_breg12","","",null,null],[17,"DW_OP_breg13","","",null,null],[17,"DW_OP_breg14","","",null,null],[17,"DW_OP_breg15","","",null,null],[17,"DW_OP_breg16","","",null,null],[17,"DW_OP_breg17","","",null,null],[17,"DW_OP_breg18","","",null,null],[17,"DW_OP_breg19","","",null,null],[17,"DW_OP_breg20","","",null,null],[17,"DW_OP_breg21","","",null,null],[17,"DW_OP_breg22","","",null,null],[17,"DW_OP_breg23","","",null,null],[17,"DW_OP_breg24","","",null,null],[17,"DW_OP_breg25","","",null,null],[17,"DW_OP_breg26","","",null,null],[17,"DW_OP_breg27","","",null,null],[17,"DW_OP_breg28","","",null,null],[17,"DW_OP_breg29","","",null,null],[17,"DW_OP_breg30","","",null,null],[17,"DW_OP_breg31","","",null,null],[17,"DW_OP_regx","","",null,null],[17,"DW_OP_fbreg","","",null,null],[17,"DW_OP_bregx","","",null,null],[17,"DW_OP_piece","","",null,null],[17,"DW_OP_deref_size","","",null,null],[17,"DW_OP_xderef_size","","",null,null],[17,"DW_OP_nop","","",null,null],[17,"DW_OP_push_object_address","","",null,null],[17,"DW_OP_call2","","",null,null],[17,"DW_OP_call4","","",null,null],[17,"DW_OP_call_ref","","",null,null],[17,"DW_OP_form_tls_address","","",null,null],[17,"DW_OP_call_frame_cfa","","",null,null],[17,"DW_OP_bit_piece","","",null,null],[17,"DW_OP_implicit_value","","",null,null],[17,"DW_OP_stack_value","","",null,null],[17,"DW_OP_implicit_pointer","","",null,null],[17,"DW_OP_addrx","","",null,null],[17,"DW_OP_constx","","",null,null],[17,"DW_OP_entry_value","","",null,null],[17,"DW_OP_const_type","","",null,null],[17,"DW_OP_regval_type","","",null,null],[17,"DW_OP_deref_type","","",null,null],[17,"DW_OP_xderef_type","","",null,null],[17,"DW_OP_convert","","",null,null],[17,"DW_OP_reinterpret","","",null,null],[17,"DW_OP_GNU_push_tls_address","","",null,null],[17,"DW_OP_GNU_implicit_pointer","","",null,null],[17,"DW_OP_GNU_entry_value","","",null,null],[17,"DW_OP_GNU_const_type","","",null,null],[17,"DW_OP_GNU_regval_type","","",null,null],[17,"DW_OP_GNU_deref_type","","",null,null],[17,"DW_OP_GNU_convert","","",null,null],[17,"DW_OP_GNU_reinterpret","","",null,null],[17,"DW_OP_GNU_parameter_ref","","",null,null],[17,"DW_OP_GNU_addr_index","","",null,null],[17,"DW_OP_GNU_const_index","","",null,null],[11,"static_string","","",27,[[],[["str",15],["option",4]]]],[3,"DwEhPe","","Pointer encoding used by <code>.eh_frame</code>.",null,null],[12,"0","","",28,null],[17,"DW_EH_PE_uleb128","","",null,null],[17,"DW_EH_PE_udata2","","",null,null],[17,"DW_EH_PE_udata4","","",null,null],[17,"DW_EH_PE_udata8","","",null,null],[17,"DW_EH_PE_sleb128","","",null,null],[17,"DW_EH_PE_sdata2","","",null,null],[17,"DW_EH_PE_sdata4","","",null,null],[17,"DW_EH_PE_sdata8","","",null,null],[17,"DW_EH_PE_pcrel","","",null,null],[17,"DW_EH_PE_textrel","","",null,null],[17,"DW_EH_PE_datarel","","",null,null],[17,"DW_EH_PE_funcrel","","",null,null],[17,"DW_EH_PE_aligned","","",null,null],[17,"DW_EH_PE_indirect","","",null,null],[17,"DW_EH_PE_absptr","","",null,null],[17,"DW_EH_PE_omit","","",null,null],[11,"static_string","","",28,[[],[["str",15],["option",4]]]],[11,"format","","Get the pointer encoding\'s format.",28,[[],["dwehpe",3]]],[11,"application","","Get the pointer encoding\'s application.",28,[[],["dwehpe",3]]],[11,"is_absent","","Is this encoding the absent pointer encoding?",28,[[],["bool",15]]],[11,"is_indirect","","Is this coding indirect? If so, its encoded value is the …",28,[[],["bool",15]]],[11,"is_valid_encoding","","Is this a known, valid pointer encoding?",28,[[],["bool",15]]],[0,"leb128","gimli","Read and write DWARF\'s \\\"Little Endian Base 128\\\" (LEB128) …",null,null],[0,"read","gimli::leb128","A module for reading signed and unsigned integers that …",null,null],[5,"unsigned","gimli::leb128::read","Read an unsigned LEB128 number from the given <code>Reader</code> and …",null,[[],[["result",6],["u64",15]]]],[5,"u16","","Read an LEB128 u16 from the given <code>Reader</code> and return it or …",null,[[],[["result",6],["u16",15]]]],[5,"signed","","Read a signed LEB128 number from the given <code>Reader</code> and …",null,[[],[["i64",15],["result",6]]]],[0,"read","gimli","Read DWARF debugging information.",null,null],[3,"DebugAddr","gimli::read","The raw contents of the <code>.debug_addr</code> section.",null,null],[3,"DebugFrame","","<code>DebugFrame</code> contains the <code>.debug_frame</code> section\'s frame …",null,null],[3,"EhFrameHdr","","<code>EhFrameHdr</code> contains the information about the …",null,null],[3,"ParsedEhFrameHdr","","<code>ParsedEhFrameHdr</code> contains the parsed information from the …",null,null],[3,"EhHdrTable","","The CFI binary search table that is an optional part of …",null,null],[3,"EhFrame","","<code>EhFrame</code> contains the frame unwinding information needed …",null,null],[8,"UnwindOffset","","An offset into an <code>UnwindSection</code>.",null,null],[10,"into","","Convert an <code>UnwindOffset<T></code> into a <code>T</code>.",29,[[]]],[8,"UnwindSection","","A section holding unwind information: either <code>.debug_frame</code> …",null,null],[16,"Offset","","The offset type associated with this CFI section. Either …",30,null],[11,"entries","","Iterate over the <code>CommonInformationEntry</code>s and …",30,[[["baseaddresses",3]],["cfientriesiter",3]]],[11,"cie_from_offset","","Parse the <code>CommonInformationEntry</code> at the given offset.",30,[[["baseaddresses",3]],[["result",6],["commoninformationentry",3]]]],[11,"partial_fde_from_offset","","Parse the <code>PartialFrameDescriptionEntry</code> at the given …",30,[[["baseaddresses",3]],[["result",6],["partialframedescriptionentry",3]]]],[11,"fde_from_offset","","Parse the <code>FrameDescriptionEntry</code> at the given offset.",30,[[["baseaddresses",3]],[["framedescriptionentry",3],["result",6]]]],[11,"fde_for_address","","Find the <code>FrameDescriptionEntry</code> for the given address.",30,[[["baseaddresses",3],["u64",15]],[["framedescriptionentry",3],["result",6]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",30,[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["unwindtablerow",3],["result",6]]]],[3,"BaseAddresses","","Optional base addresses for the relative <code>DW_EH_PE_*</code> …",null,null],[12,"eh_frame_hdr","","The base addresses to use for pointers in the …",31,null],[12,"eh_frame","","The base addresses to use for pointers in the <code>.eh_frame</code> …",31,null],[3,"SectionBaseAddresses","","Optional base addresses for the relative <code>DW_EH_PE_*</code> …",null,null],[12,"section","","The address of the section containing the pointer.",32,null],[12,"text","","The base address for text relative pointers. This is …",32,null],[12,"data","","The base address for data relative pointers.",32,null],[3,"CfiEntriesIter","","An iterator over CIE and FDE entries in a <code>.debug_frame</code> or …",null,null],[4,"CieOrFde","","Either a <code>CommonInformationEntry</code> (CIE) or a …",null,null],[13,"Cie","","This CFI entry is a <code>CommonInformationEntry</code>.",33,null],[13,"Fde","","This CFI entry is a <code>FrameDescriptionEntry</code>, however fully …",33,null],[3,"Augmentation","","We support the z-style augmentation defined by <code>.eh_frame</code>.",null,null],[3,"CommonInformationEntry","","A Common Information Entry holds information that is …",null,null],[3,"PartialFrameDescriptionEntry","","A partially parsed <code>FrameDescriptionEntry</code>.",null,null],[3,"FrameDescriptionEntry","","A <code>FrameDescriptionEntry</code> is a set of CFA instructions for …",null,null],[3,"UninitializedUnwindContext","","Common context needed when evaluating the call frame …",null,null],[3,"UnwindContext","","An unwinding context.",null,null],[3,"UnwindTable","","The <code>UnwindTable</code> iteratively evaluates a …",null,null],[3,"RegisterRuleIter","","An unordered iterator for register rules.",null,null],[3,"UnwindTableRow","","A row in the virtual unwind table that describes how to …",null,null],[4,"CfaRule","","The canonical frame address (CFA) recovery rules.",null,null],[13,"RegisterAndOffset","","The CFA is given offset from the given register\'s value.",34,null],[12,"register","gimli::read::CfaRule","The register containing the base value.",35,null],[12,"offset","","The offset from the register\'s base value.",35,null],[13,"Expression","gimli::read","The CFA is obtained by evaluating this <code>Reader</code> as a DWARF …",34,null],[4,"RegisterRule","","An entry in the abstract CFI table that describes how to …",null,null],[13,"Undefined","","A register that has this rule has no recoverable value in …",36,null],[13,"SameValue","","This register has not been modified from the previous …",36,null],[13,"Offset","","\\\"The previous value of this register is saved at the …",36,null],[13,"ValOffset","","\\\"The previous value of this register is the value CFA+N …",36,null],[13,"Register","","\\\"The previous value of this register is stored in another …",36,null],[13,"Expression","","\\\"The previous value of this register is located at the …",36,null],[13,"ValExpression","","\\\"The previous value of this register is the value …",36,null],[13,"Architectural","","\\\"The rule is defined externally to this specification by …",36,null],[4,"CallFrameInstruction","","A parsed call frame instruction.",null,null],[13,"SetLoc","","DW_CFA_set_locThe DW_CFA_set_loc instruction takes a …",37,null],[12,"address","gimli::read::CallFrameInstruction","The target address.",38,null],[13,"AdvanceLoc","gimli::read","The <code>AdvanceLoc</code> instruction is used for all of …",37,null],[12,"delta","gimli::read::CallFrameInstruction","The delta to be added to the current address.",39,null],[13,"DefCfa","gimli::read","DW_CFA_def_cfaThe DW_CFA_def_cfa instruction takes two …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",40,null],[12,"offset","","The non-factored offset.",40,null],[13,"DefCfaSf","gimli::read","DW_CFA_def_cfa_sfThe DW_CFA_def_cfa_sf instruction takes …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",41,null],[12,"factored_offset","","The factored offset.",41,null],[13,"DefCfaRegister","gimli::read","DW_CFA_def_cfa_registerThe DW_CFA_def_cfa_register …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",42,null],[13,"DefCfaOffset","gimli::read","DW_CFA_def_cfa_offsetThe DW_CFA_def_cfa_offset …",37,null],[12,"offset","gimli::read::CallFrameInstruction","The non-factored offset.",43,null],[13,"DefCfaOffsetSf","gimli::read","DW_CFA_def_cfa_offset_sfThe DW_CFA_def_cfa_offset_sf …",37,null],[12,"factored_offset","gimli::read::CallFrameInstruction","The factored offset.",44,null],[13,"DefCfaExpression","gimli::read","DW_CFA_def_cfa_expressionThe DW_CFA_def_cfa_expression …",37,null],[12,"expression","gimli::read::CallFrameInstruction","The DWARF expression.",45,null],[13,"Undefined","gimli::read","DW_CFA_undefinedThe DW_CFA_undefined instruction takes a …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",46,null],[13,"SameValue","gimli::read","DW_CFA_same_valueThe DW_CFA_same_value instruction takes …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",47,null],[13,"Offset","gimli::read","The <code>Offset</code> instruction represents both <code>DW_CFA_offset</code> and …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",48,null],[12,"factored_offset","","The factored offset.",48,null],[13,"OffsetExtendedSf","gimli::read","DW_CFA_offset_extended_sfThe DW_CFA_offset_extended_sf …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",49,null],[12,"factored_offset","","The factored offset.",49,null],[13,"ValOffset","gimli::read","DW_CFA_val_offsetThe DW_CFA_val_offset instruction takes …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",50,null],[12,"factored_offset","","The factored offset.",50,null],[13,"ValOffsetSf","gimli::read","DW_CFA_val_offset_sfThe DW_CFA_val_offset_sf instruction …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",51,null],[12,"factored_offset","","The factored offset.",51,null],[13,"Register","gimli::read","DW_CFA_registerThe DW_CFA_register instruction takes two …",37,null],[12,"dest_register","gimli::read::CallFrameInstruction","The number of the register whose rule is being changed.",52,null],[12,"src_register","","The number of the register where the other register\'s …",52,null],[13,"Expression","gimli::read","DW_CFA_expressionThe DW_CFA_expression instruction takes …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",53,null],[12,"expression","","The DWARF expression.",53,null],[13,"ValExpression","gimli::read","DW_CFA_val_expressionThe DW_CFA_val_expression …",37,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",54,null],[12,"expression","","The DWARF expression.",54,null],[13,"Restore","gimli::read","The <code>Restore</code> instruction represents both <code>DW_CFA_restore</code> and…",37,null],[12,"register","gimli::read::CallFrameInstruction","The register to be reset.",55,null],[13,"RememberState","gimli::read","DW_CFA_remember_stateThe DW_CFA_remember_state …",37,null],[13,"RestoreState","","DW_CFA_restore_stateThe DW_CFA_restore_state instruction …",37,null],[13,"ArgsSize","","DW_CFA_GNU_args_size",37,null],[12,"size","gimli::read::CallFrameInstruction","The size of the arguments which have been pushed onto the …",56,null],[13,"Nop","gimli::read","DW_CFA_nopThe DW_CFA_nop instruction has no operands and …",37,null],[3,"CallFrameInstructionIter","","A lazy iterator parsing call frame instructions.",null,null],[4,"Pointer","","A decoded pointer.",null,null],[13,"Direct","","This value is the decoded pointer value.",57,null],[13,"Indirect","","This value is <em>not</em> the pointer value, but points to the …",57,null],[3,"Dwarf","","All of the commonly used DWARF sections, and other common …",null,null],[12,"debug_abbrev","","The <code>.debug_abbrev</code> section.",58,null],[12,"debug_addr","","The <code>.debug_addr</code> section.",58,null],[12,"debug_info","","The <code>.debug_info</code> section.",58,null],[12,"debug_line","","The <code>.debug_line</code> section.",58,null],[12,"debug_line_str","","The <code>.debug_line_str</code> section.",58,null],[12,"debug_str","","The <code>.debug_str</code> section.",58,null],[12,"debug_str_offsets","","The <code>.debug_str_offsets</code> section.",58,null],[12,"debug_str_sup","","The <code>.debug_str</code> section for a supplementary object file.",58,null],[12,"debug_types","","The <code>.debug_types</code> section.",58,null],[12,"locations","","The location lists in the <code>.debug_loc</code> and <code>.debug_loclists</code> …",58,null],[12,"ranges","","The range lists in the <code>.debug_ranges</code> and <code>.debug_rnglists</code> …",58,null],[12,"file_type","","The type of this file.",58,null],[3,"Unit","","All of the commonly used information for a unit in the …",null,null],[12,"header","","The header of the unit.",59,null],[12,"abbreviations","","The parsed abbreviations for the unit.",59,null],[12,"name","","The <code>DW_AT_name</code> attribute of the unit.",59,null],[12,"comp_dir","","The <code>DW_AT_comp_dir</code> attribute of the unit.",59,null],[12,"low_pc","","The <code>DW_AT_low_pc</code> attribute of the unit. Defaults to 0.",59,null],[12,"str_offsets_base","","The <code>DW_AT_str_offsets_base</code> attribute of the unit. …",59,null],[12,"addr_base","","The <code>DW_AT_addr_base</code> attribute of the unit. Defaults to 0.",59,null],[12,"loclists_base","","The <code>DW_AT_loclists_base</code> attribute of the unit. Defaults …",59,null],[12,"rnglists_base","","The <code>DW_AT_rnglists_base</code> attribute of the unit. Defaults …",59,null],[12,"line_program","","The line number program of the unit.",59,null],[3,"RangeIter","","An iterator for the address ranges of a …",null,null],[3,"EndianSlice","","A <code>&[u8]</code> slice with endianity metadata.",null,null],[3,"ReaderOffsetId","","An identifier for an offset within a section reader.",null,null],[12,"0","","",60,null],[8,"ReaderOffset","","A trait for offsets with a DWARF section.",null,null],[10,"from_u8","","Convert a u8 to an offset.",61,[[["u8",15]]]],[10,"from_u16","","Convert a u16 to an offset.",61,[[["u16",15]]]],[10,"from_i16","","Convert an i16 to an offset.",61,[[["i16",15]]]],[10,"from_u32","","Convert a u32 to an offset.",61,[[["u32",15]]]],[10,"from_u64","","Convert a u64 to an offset.",61,[[["u64",15]],["result",6]]],[10,"into_u64","","Convert an offset to a u64.",61,[[],["u64",15]]],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>.",61,[[]]],[10,"checked_sub","","Checked subtraction. Computes <code>self - other</code>.",61,[[],["option",4]]],[8,"Reader","","A trait for reading the data from a DWARF section.",null,null],[16,"Endian","","The endianity of bytes that are read.",62,null],[16,"Offset","","The type used for offsets and lengths.",62,null],[10,"endian","","Return the endianity of bytes that are read.",62,[[]]],[10,"len","","Return the number of bytes remaining.",62,[[]]],[10,"empty","","Set the number of bytes remaining to zero.",62,[[]]],[10,"truncate","","Set the number of bytes remaining to the specified length.",62,[[],["result",6]]],[10,"offset_from","","Return the offset of this reader\'s data relative to the …",62,[[]]],[10,"offset_id","","Return an identifier for the current reader offset.",62,[[],["readeroffsetid",3]]],[10,"lookup_offset_id","","Return the offset corresponding to the given <code>id</code> if it is …",62,[[["readeroffsetid",3]],["option",4]]],[10,"find","","Find the index of the first occurence of the given byte. …",62,[[["u8",15]],["result",6]]],[10,"skip","","Discard the specified number of bytes.",62,[[],["result",6]]],[10,"split","","Split a reader in two.",62,[[],["result",6]]],[10,"to_slice","","Return all remaining data as a clone-on-write slice.",62,[[],[["cow",4],["result",6]]]],[10,"to_string","","Convert all remaining data to a clone-on-write string.",62,[[],[["result",6],["cow",4]]]],[10,"to_string_lossy","","Convert all remaining data to a clone-on-write string, …",62,[[],[["result",6],["cow",4]]]],[10,"read_slice","","Read exactly <code>buf.len()</code> bytes into <code>buf</code>.",62,[[],["result",6]]],[11,"read_u8_array","","Read a u8 array.",62,[[],["result",6]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",62,[[],["bool",15]]],[11,"read_u8","","Read a u8.",62,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Read an i8.",62,[[],[["i8",15],["result",6]]]],[11,"read_u16","","Read a u16.",62,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Read an i16.",62,[[],[["result",6],["i16",15]]]],[11,"read_u32","","Read a u32.",62,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Read an i32.",62,[[],[["i32",15],["result",6]]]],[11,"read_u64","","Read a u64.",62,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Read an i64.",62,[[],[["i64",15],["result",6]]]],[11,"read_f32","","Read a f32.",62,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Read a f64.",62,[[],[["f64",15],["result",6]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",62,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding …",62,[[],["result",6]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",62,[[],[["result",6],["u64",15]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",62,[[],[["result",6],["u16",15]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",62,[[],[["i64",15],["result",6]]]],[11,"read_initial_length","","Read an initial length field.",62,[[],["result",6]]],[11,"read_address","","Read an address-sized integer, and return it as a <code>u64</code>.",62,[[["u8",15]],[["result",6],["u64",15]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",62,[[["format",4]],["result",6]]],[11,"read_length","","Parse a word-sized section length according to the DWARF …",62,[[["format",4]],["result",6]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF …",62,[[["format",4]],["result",6]]],[11,"read_sized_offset","","Parse a section offset of the given size.",62,[[["u8",15]],["result",6]]],[3,"DebugAbbrev","","The <code>DebugAbbrev</code> struct represents the abbreviations …",null,null],[3,"Abbreviations","","A set of type abbreviations.",null,null],[3,"Abbreviation","","An abbreviation describes the shape of a …",null,null],[3,"AttributeSpecification","","The description of an attribute in an abbreviated type. …",null,null],[3,"ArangeEntry","","A single parsed arange.",null,null],[3,"DebugAranges","","The <code>DebugAranges</code> struct represents the DWARF address …",null,null],[3,"ArangeEntryIter","","An iterator over the aranges from a <code>.debug_aranges</code> …",null,null],[3,"DebugLine","","The <code>DebugLine</code> struct contains the source location to …",null,null],[6,"LineNumberProgram","","Deprecated. <code>LineNumberProgram</code> has been renamed to …",null,null],[8,"LineProgram","","A <code>LineProgram</code> provides access to a <code>LineProgramHeader</code> and …",null,null],[10,"header","","Get a reference to the held <code>LineProgramHeader</code>.",63,[[],["lineprogramheader",3]]],[10,"add_file","","Add a file to the file table if necessary.",63,[[["fileentry",3]]]],[6,"StateMachine","","Deprecated. <code>StateMachine</code> has been renamed to <code>LineRows</code>.",null,null],[3,"LineRows","","Executes a <code>LineProgram</code> to iterate over the rows in the …",null,null],[6,"Opcode","","Deprecated. <code>Opcode</code> has been renamed to <code>LineInstruction</code>.",null,null],[4,"LineInstruction","","A parsed line number program instruction.",null,null],[13,"Special","","6.2.5.1 Special OpcodesEach ubyte special opcode has the …",64,null],[13,"Copy","","\\\"[<code>LineInstruction::Copy</code>] appends a row to the matrix …",64,null],[13,"AdvancePc","","\\\"The DW_LNS_advance_pc opcode takes a single unsigned …",64,null],[13,"AdvanceLine","","\\\"The DW_LNS_advance_line opcode takes a single signed …",64,null],[13,"SetFile","","\\\"The DW_LNS_set_file opcode takes a single unsigned …",64,null],[13,"SetColumn","","\\\"The DW_LNS_set_column opcode takes a single unsigned …",64,null],[13,"NegateStatement","","\\\"The DW_LNS_negate_stmt opcode takes no operands. It sets …",64,null],[13,"SetBasicBlock","","\\\"The DW_LNS_set_basic_block opcode takes no operands. It …",64,null],[13,"ConstAddPc","","The DW_LNS_const_add_pc opcode takes no operands. It …",64,null],[13,"FixedAddPc","","The DW_LNS_fixed_advance_pc opcode takes a single uhalf …",64,null],[13,"SetPrologueEnd","","\\\"[<code>LineInstruction::SetPrologueEnd</code>] sets the prologue_end …",64,null],[13,"SetEpilogueBegin","","\\\"[<code>LineInstruction::SetEpilogueBegin</code>] sets the …",64,null],[13,"SetIsa","","\\\"The DW_LNS_set_isa opcode takes a single unsigned LEB128 …",64,null],[13,"UnknownStandard0","","An unknown standard opcode with zero operands.",64,null],[13,"UnknownStandard1","","An unknown standard opcode with one operand.",64,null],[13,"UnknownStandardN","","An unknown standard opcode with multiple operands.",64,null],[13,"EndSequence","","[<code>LineInstruction::EndSequence</code>] sets the end_sequence …",64,null],[13,"SetAddress","","The DW_LNE_set_address opcode takes a single relocatable …",64,null],[13,"DefineFile","","Defines a new source file in the line number program and …",64,null],[13,"SetDiscriminator","","\\\"The DW_LNE_set_discriminator opcode takes a single …",64,null],[13,"UnknownExtended","","An unknown extended opcode and the slice of its unparsed …",64,null],[6,"OpcodesIter","","Deprecated. <code>OpcodesIter</code> has been renamed to …",null,null],[3,"LineInstructions","","An iterator yielding parsed instructions.",null,null],[6,"LineNumberRow","","Deprecated. <code>LineNumberRow</code> has been renamed to <code>LineRow</code>.",null,null],[3,"LineRow","","A row in the line number program\'s resulting matrix.",null,null],[4,"ColumnType","","The type of column that a row is referring to.",null,null],[13,"LeftEdge","","The <code>LeftEdge</code> means that the statement begins at the start …",65,null],[13,"Column","","A column number, whose range begins at 1.",65,null],[6,"LineNumberSequence","","Deprecated. <code>LineNumberSequence</code> has been renamed to …",null,null],[3,"LineSequence","","A sequence within a line number program.  A sequence, as …",null,null],[12,"start","","The first address that is covered by this sequence within …",66,null],[12,"end","","The first address that is <em>not</em> covered by this sequence …",66,null],[6,"LineNumberProgramHeader","","Deprecated. <code>LineNumberProgramHeader</code> has been renamed to …",null,null],[3,"LineProgramHeader","","A header for a line number program in the <code>.debug_line</code> …",null,null],[6,"IncompleteLineNumberProgram","","Deprecated. <code>IncompleteLineNumberProgram</code> has been renamed …",null,null],[3,"IncompleteLineProgram","","A line number program that has not been run to completion.",null,null],[6,"CompleteLineNumberProgram","","Deprecated. <code>CompleteLineNumberProgram</code> has been renamed to …",null,null],[3,"CompleteLineProgram","","A line number program that has previously been run to …",null,null],[3,"FileEntry","","An entry in the <code>LineProgramHeader</code>\'s <code>file_names</code> set.",null,null],[3,"FileEntryFormat","","The format of a component of an include directory or file …",null,null],[12,"content_type","","The type of information that is represented by the …",67,null],[12,"form","","The encoding form of the component value.",67,null],[3,"DebugLoc","","The raw contents of the <code>.debug_loc</code> section.",null,null],[3,"DebugLocLists","","The <code>DebugLocLists</code> struct represents the DWARF data found …",null,null],[3,"LocationLists","","The DWARF data found in <code>.debug_loc</code> and <code>.debug_loclists</code> …",null,null],[3,"RawLocListIter","","A raw iterator over a location list.",null,null],[4,"RawLocListEntry","","A raw entry in .debug_loclists.",null,null],[13,"AddressOrOffsetPair","","A location from DWARF version <= 4.",68,null],[12,"begin","gimli::read::RawLocListEntry","Start of range. May be an address or an offset.",69,null],[12,"end","","End of range. May be an address or an offset.",69,null],[12,"data","","expression",69,null],[13,"BaseAddress","gimli::read","DW_LLE_base_address",68,null],[12,"addr","gimli::read::RawLocListEntry","base address",70,null],[13,"BaseAddressx","gimli::read","DW_LLE_base_addressx",68,null],[12,"addr","gimli::read::RawLocListEntry","base address",71,null],[13,"StartxEndx","gimli::read","DW_LLE_startx_endx",68,null],[12,"begin","gimli::read::RawLocListEntry","start of range",72,null],[12,"end","","end of range",72,null],[12,"data","","expression",72,null],[13,"StartxLength","gimli::read","DW_LLE_startx_length",68,null],[12,"begin","gimli::read::RawLocListEntry","start of range",73,null],[12,"length","","length of range",73,null],[12,"data","","expression",73,null],[13,"OffsetPair","gimli::read","DW_LLE_offset_pair",68,null],[12,"begin","gimli::read::RawLocListEntry","start of range",74,null],[12,"end","","end of range",74,null],[12,"data","","expression",74,null],[13,"DefaultLocation","gimli::read","DW_LLE_default_location",68,null],[12,"data","gimli::read::RawLocListEntry","expression",75,null],[13,"StartEnd","gimli::read","DW_LLE_start_end",68,null],[12,"begin","gimli::read::RawLocListEntry","start of range",76,null],[12,"end","","end of range",76,null],[12,"data","","expression",76,null],[13,"StartLength","gimli::read","DW_LLE_start_length",68,null],[12,"begin","gimli::read::RawLocListEntry","start of range",77,null],[12,"length","","length of range",77,null],[12,"data","","expression",77,null],[3,"LocListIter","gimli::read","An iterator over a location list.",null,null],[3,"LocationListEntry","","A location list entry from the <code>.debug_loc</code> or …",null,null],[12,"range","","The address range that this location is valid for.",78,null],[12,"data","","The data containing a single location description.",78,null],[4,"DieReference","","A reference to a DIE, either relative to the current CU or…",null,null],[13,"UnitRef","","A CU-relative reference.",79,null],[13,"DebugInfoRef","","A section-relative reference.",79,null],[4,"Operation","","A single decoded DWARF expression operation.",null,null],[13,"Deref","","Dereference the topmost value of the stack.",80,null],[12,"base_type","gimli::read::Operation","The DIE of the base type or 0 to indicate the generic type",81,null],[12,"size","","The size of the data to dereference.",81,null],[12,"space","","True if the dereference operation takes an address space …",81,null],[13,"Drop","gimli::read","Drop an item from the stack.",80,null],[13,"Pick","","Pick an item from the stack and push it on top of the …",80,null],[12,"index","gimli::read::Operation","The index, from the top of the stack, of the item to copy.",82,null],[13,"Swap","gimli::read","Swap the top two stack items.",80,null],[13,"Rot","","Rotate the top three stack items.",80,null],[13,"Abs","","Take the absolute value of the top of the stack.",80,null],[13,"And","","Bitwise <code>and</code> of the top two values on the stack.",80,null],[13,"Div","","Divide the top two values on the stack.",80,null],[13,"Minus","","Subtract the top two values on the stack.",80,null],[13,"Mod","","Modulus of the top two values on the stack.",80,null],[13,"Mul","","Multiply the top two values on the stack.",80,null],[13,"Neg","","Negate the top of the stack.",80,null],[13,"Not","","Bitwise <code>not</code> of the top of the stack.",80,null],[13,"Or","","Bitwise <code>or</code> of the top two values on the stack.",80,null],[13,"Plus","","Add the top two values on the stack.",80,null],[13,"PlusConstant","","Add a constant to the topmost value on the stack.",80,null],[12,"value","gimli::read::Operation","The value to add.",83,null],[13,"Shl","gimli::read","Logical left shift of the 2nd value on the stack by the …",80,null],[13,"Shr","","Right shift of the 2nd value on the stack by the number of…",80,null],[13,"Shra","","Arithmetic left shift of the 2nd value on the stack by the…",80,null],[13,"Xor","","Bitwise <code>xor</code> of the top two values on the stack.",80,null],[13,"Bra","","Branch to the target location if the top of stack is …",80,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",84,null],[13,"Eq","gimli::read","Compare the top two stack values for equality.",80,null],[13,"Ge","","Compare the top two stack values using <code>>=</code>.",80,null],[13,"Gt","","Compare the top two stack values using <code>></code>.",80,null],[13,"Le","","Compare the top two stack values using <code><=</code>.",80,null],[13,"Lt","","Compare the top two stack values using <code><</code>.",80,null],[13,"Ne","","Compare the top two stack values using <code>!=</code>.",80,null],[13,"Skip","","Unconditional branch to the target location.",80,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",85,null],[13,"UnsignedConstant","gimli::read","Push an unsigned constant value on the stack.  This …",80,null],[12,"value","gimli::read::Operation","The value to push.",86,null],[13,"SignedConstant","gimli::read","Push a signed constant value on the stack.  This handles …",80,null],[12,"value","gimli::read::Operation","The value to push.",87,null],[13,"Register","gimli::read","Indicate that this piece\'s location is in the given …",80,null],[12,"register","gimli::read::Operation","The register number.",88,null],[13,"RegisterOffset","gimli::read","Find the value of the given register, add the offset, and …",80,null],[12,"register","gimli::read::Operation","The register number.",89,null],[12,"offset","","The offset to add.",89,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",89,null],[13,"FrameOffset","gimli::read","Compute the frame base (using <code>DW_AT_frame_base</code>), add the …",80,null],[12,"offset","gimli::read::Operation","The offset to add.",90,null],[13,"Nop","gimli::read","No operation.",80,null],[13,"PushObjectAddress","","Push the object address on the stack.",80,null],[13,"Call","","Evaluate a DWARF expression as a subroutine.  The …",80,null],[12,"offset","gimli::read::Operation","The DIE to use.",91,null],[13,"TLS","gimli::read","Compute the address of a thread-local variable and push …",80,null],[13,"CallFrameCFA","","Compute the call frame CFA and push it on the stack.",80,null],[13,"Piece","","Terminate a piece.",80,null],[12,"size_in_bits","gimli::read::Operation","The size of this piece in bits.",92,null],[12,"bit_offset","","The bit offset of this piece.  If <code>None</code>, then this piece …",92,null],[13,"ImplicitValue","gimli::read","Represents <code>DW_OP_implicit_value</code>. The object has no …",80,null],[12,"data","gimli::read::Operation","The implicit value to use.",93,null],[13,"StackValue","gimli::read","Represents <code>DW_OP_stack_value</code>. The object has no location, …",80,null],[13,"ImplicitPointer","","Represents <code>DW_OP_implicit_pointer</code>. The object is a …",80,null],[12,"value","gimli::read::Operation","The <code>.debug_info</code> offset of the value that this is an …",94,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer …",94,null],[13,"EntryValue","gimli::read","Represents <code>DW_OP_entry_value</code>. Evaluate an expression at …",80,null],[12,"expression","gimli::read::Operation","The expression to be evaluated.",95,null],[13,"ParameterRef","gimli::read","Represents <code>DW_OP_GNU_parameter_ref</code>. This represents a …",80,null],[12,"offset","gimli::read::Operation","The DIE to use.",96,null],[13,"Address","gimli::read","Represents <code>DW_OP_addr</code>. Relocate the address if needed, …",80,null],[12,"address","gimli::read::Operation","The offset to add.",97,null],[13,"AddressIndex","gimli::read","Represents <code>DW_OP_addrx</code>. Read the address at the given …",80,null],[12,"index","gimli::read::Operation","The index of the address in <code>.debug_addr</code>.",98,null],[13,"ConstantIndex","gimli::read","Represents <code>DW_OP_constx</code>. Read the address at the given …",80,null],[12,"index","gimli::read::Operation","The index of the address in <code>.debug_addr</code>.",99,null],[13,"TypedLiteral","gimli::read","Represents <code>DW_OP_const_type</code>. Interpret the value bytes as …",80,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",100,null],[12,"value","","The value bytes.",100,null],[13,"Convert","gimli::read","Represents <code>DW_OP_convert</code>. Pop the top stack entry, …",80,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",101,null],[13,"Reinterpret","gimli::read","Represents <code>DW_OP_reinterpret</code>. Pop the top stack entry, …",80,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",102,null],[4,"Location","gimli::read","A single location of a piece of the result of a DWARF …",null,null],[13,"Empty","","The piece is empty.  Ordinarily this means the piece has …",103,null],[13,"Register","","The piece is found in a register.",103,null],[12,"register","gimli::read::Location","The register number.",104,null],[13,"Address","gimli::read","The piece is found in memory.",103,null],[12,"address","gimli::read::Location","The address.",105,null],[13,"Value","gimli::read","The piece has no location but its value is known.",103,null],[12,"value","gimli::read::Location","The value.",106,null],[13,"Bytes","gimli::read","The piece is represented by some constant bytes.",103,null],[12,"value","gimli::read::Location","The value.",107,null],[13,"ImplicitPointer","gimli::read","The piece is a pointer to a value which has no actual …",103,null],[12,"value","gimli::read::Location","The <code>.debug_info</code> offset of the value that this is an …",108,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer …",108,null],[3,"Piece","gimli::read","The description of a single piece of the result of a DWARF…",null,null],[12,"size_in_bits","","If given, the size of the piece in bits.  If <code>None</code>, there …",109,null],[12,"bit_offset","","If given, the bit offset of the piece within the location.…",109,null],[12,"location","","Where this piece is to be found.",109,null],[4,"EvaluationResult","","The state of an <code>Evaluation</code> after evaluating a DWARF …",null,null],[13,"Complete","","The <code>Evaluation</code> is complete, and <code>Evaluation::result()</code> can …",110,null],[13,"RequiresMemory","","The <code>Evaluation</code> needs a value from memory to proceed …",110,null],[12,"address","gimli::read::EvaluationResult","The address of the value required.",111,null],[12,"size","","The size of the value required. This is guaranteed to be …",111,null],[12,"space","","If not <code>None</code>, a target-specific address space value.",111,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",111,null],[13,"RequiresRegister","gimli::read","The <code>Evaluation</code> needs a value from a register to proceed …",110,null],[12,"register","gimli::read::EvaluationResult","The register number.",112,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",112,null],[13,"RequiresFrameBase","gimli::read","The <code>Evaluation</code> needs the frame base address to proceed …",110,null],[13,"RequiresTls","","The <code>Evaluation</code> needs a value from TLS to proceed further. …",110,null],[13,"RequiresCallFrameCfa","","The <code>Evaluation</code> needs the CFA to proceed further.  Once …",110,null],[13,"RequiresAtLocation","","The <code>Evaluation</code> needs the DWARF expression at the given …",110,null],[13,"RequiresEntryValue","","The <code>Evaluation</code> needs the value produced by evaluating a …",110,null],[13,"RequiresParameterRef","","The <code>Evaluation</code> needs the value of the parameter at the …",110,null],[13,"RequiresRelocatedAddress","","The <code>Evaluation</code> needs an address to be relocated to …",110,null],[13,"RequiresIndexedAddress","","The <code>Evaluation</code> needs an address from the <code>.debug_addr</code> …",110,null],[12,"index","gimli::read::EvaluationResult","The index of the address in the <code>.debug_addr</code> section, …",113,null],[12,"relocate","","Whether the address also needs to be relocated.",113,null],[13,"RequiresBaseType","gimli::read","The <code>Evaluation</code> needs the <code>ValueType</code> for the base type DIE …",110,null],[3,"Expression","","The bytecode for a DWARF expression or location …",null,null],[12,"0","","",114,null],[3,"OperationIter","","An iterator for the operations in an expression.",null,null],[3,"Evaluation","","A DWARF expression evaluator.",null,null],[3,"PubNamesEntry","","A single parsed pubname.",null,null],[3,"DebugPubNames","","The <code>DebugPubNames</code> struct represents the DWARF public …",null,null],[3,"PubNamesEntryIter","","An iterator over the pubnames from a <code>.debug_pubnames</code> …",null,null],[3,"PubTypesEntry","","A single parsed pubtype.",null,null],[3,"DebugPubTypes","","The <code>DebugPubTypes</code> struct represents the DWARF public …",null,null],[3,"PubTypesEntryIter","","An iterator over the pubtypes from a <code>.debug_pubtypes</code> …",null,null],[3,"DebugRanges","","The raw contents of the <code>.debug_ranges</code> section.",null,null],[3,"DebugRngLists","","The <code>DebugRngLists</code> struct represents the contents of the …",null,null],[3,"RangeLists","","The DWARF data found in <code>.debug_ranges</code> and <code>.debug_rnglists</code> …",null,null],[3,"RawRngListIter","","A raw iterator over an address range list.",null,null],[4,"RawRngListEntry","","A raw entry in .debug_rnglists",null,null],[13,"AddressOrOffsetPair","","A range from DWARF version <= 4.",115,null],[12,"begin","gimli::read::RawRngListEntry","Start of range. May be an address or an offset.",116,null],[12,"end","","End of range. May be an address or an offset.",116,null],[13,"BaseAddress","gimli::read","DW_RLE_base_address",115,null],[12,"addr","gimli::read::RawRngListEntry","base address",117,null],[13,"BaseAddressx","gimli::read","DW_RLE_base_addressx",115,null],[12,"addr","gimli::read::RawRngListEntry","base address",118,null],[13,"StartxEndx","gimli::read","DW_RLE_startx_endx",115,null],[12,"begin","gimli::read::RawRngListEntry","start of range",119,null],[12,"end","","end of range",119,null],[13,"StartxLength","gimli::read","DW_RLE_startx_length",115,null],[12,"begin","gimli::read::RawRngListEntry","start of range",120,null],[12,"length","","length of range",120,null],[13,"OffsetPair","gimli::read","DW_RLE_offset_pair",115,null],[12,"begin","gimli::read::RawRngListEntry","start of range",121,null],[12,"end","","end of range",121,null],[13,"StartEnd","gimli::read","DW_RLE_start_end",115,null],[12,"begin","gimli::read::RawRngListEntry","start of range",122,null],[12,"end","","end of range",122,null],[13,"StartLength","gimli::read","DW_RLE_start_length",115,null],[12,"begin","gimli::read::RawRngListEntry","start of range",123,null],[12,"length","","length of range",123,null],[3,"RngListIter","gimli::read","An iterator over an address range list.",null,null],[3,"Range","","An address range from the <code>.debug_ranges</code> or <code>.debug_rnglists</code>…",null,null],[12,"begin","","The beginning address of the range.",124,null],[12,"end","","The first address past the end of the range.",124,null],[3,"DebugStr","","The <code>DebugStr</code> struct represents the DWARF strings found in …",null,null],[3,"DebugStrOffsets","","The raw contents of the <code>.debug_str_offsets</code> section.",null,null],[3,"DebugLineStr","","The <code>DebugLineStr</code> struct represents the DWARF strings …",null,null],[3,"UnitOffset","","An offset into the current compilation or type unit.",null,null],[12,"0","","",125,null],[3,"DebugInfo","","The <code>DebugInfo</code> struct represents the DWARF debugging …",null,null],[3,"DebugInfoUnitHeadersIter","","An iterator over the units of a .debug_info section.",null,null],[4,"UnitType","","This enum specifies the type of the unit and any type …",null,null],[13,"Compilation","","In DWARF5, a unit with type <code>DW_UT_compile</code>. In previous …",126,null],[13,"Type","","In DWARF5, a unit with type <code>DW_UT_type</code>. In DWARF4, any …",126,null],[12,"type_signature","gimli::read::UnitType","The unique type signature for this type unit.",127,null],[12,"type_offset","","The offset within this type unit where the type is …",127,null],[13,"Partial","gimli::read","A unit with type <code>DW_UT_partial</code>. The root DIE of this unit …",126,null],[13,"Skeleton","","A unit with type <code>DW_UT_skeleton</code>. The enclosed dwo_id can …",126,null],[13,"SplitCompilation","","A unit with type <code>DW_UT_split_compile</code>. The enclosed dwo_id …",126,null],[13,"SplitType","","A unit with type <code>DW_UT_split_type</code>. A split type unit is …",126,null],[12,"type_signature","gimli::read::UnitType","The unique type signature for this type unit.",128,null],[12,"type_offset","","The offset within this type unit where the type is …",128,null],[3,"UnitHeader","gimli::read","The common fields for the headers of compilation units and…",null,null],[3,"DebuggingInformationEntry","","A Debugging Information Entry (DIE).",null,null],[4,"AttributeValue","","The value of an attribute in a <code>DebuggingInformationEntry</code>.",null,null],[13,"Addr","","\\\"Refers to some location in the address space of the …",129,null],[13,"Block","","A slice of an arbitrary number of bytes.",129,null],[13,"Data1","","A one byte constant data value. How to interpret the byte …",129,null],[13,"Data2","","A two byte constant data value. How to interpret the …",129,null],[13,"Data4","","A four byte constant data value. How to interpret the …",129,null],[13,"Data8","","An eight byte constant data value. How to interpret the …",129,null],[13,"Sdata","","A signed integer constant.",129,null],[13,"Udata","","An unsigned integer constant.",129,null],[13,"Exprloc","","\\\"The information bytes contain a DWARF expression (see …",129,null],[13,"Flag","","A boolean that indicates presence or absence of the …",129,null],[13,"SecOffset","","An offset into another section. Which section this is an …",129,null],[13,"DebugAddrBase","","An offset to a set of addresses in the <code>.debug_addr</code> …",129,null],[13,"DebugAddrIndex","","An index into a set of addresses in the <code>.debug_addr</code> …",129,null],[13,"UnitRef","","An offset into the current compilation unit.",129,null],[13,"DebugInfoRef","","An offset into the current <code>.debug_info</code> section, but …",129,null],[13,"DebugInfoRefSup","","An offset into the <code>.debug_info</code> section of the …",129,null],[13,"DebugLineRef","","An offset into the <code>.debug_line</code> section.",129,null],[13,"LocationListsRef","","An offset into either the <code>.debug_loc</code> section or the …",129,null],[13,"DebugLocListsBase","","An offset to a set of offsets in the <code>.debug_loclists</code> …",129,null],[13,"DebugLocListsIndex","","An index into a set of offsets in the <code>.debug_loclists</code> …",129,null],[13,"DebugMacinfoRef","","An offset into the <code>.debug_macinfo</code> section.",129,null],[13,"DebugMacroRef","","An offset into the <code>.debug_macro</code> section.",129,null],[13,"RangeListsRef","","An offset into the <code>.debug_ranges</code> section.",129,null],[13,"DebugRngListsBase","","An offset to a set of offsets in the <code>.debug_rnglists</code> …",129,null],[13,"DebugRngListsIndex","","An index into a set of offsets in the <code>.debug_rnglists</code> …",129,null],[13,"DebugTypesRef","","A type signature.",129,null],[13,"DebugStrRef","","An offset into the <code>.debug_str</code> section.",129,null],[13,"DebugStrRefSup","","An offset into the <code>.debug_str</code> section of the …",129,null],[13,"DebugStrOffsetsBase","","An offset to a set of entries in the <code>.debug_str_offsets</code> …",129,null],[13,"DebugStrOffsetsIndex","","An index into a set of entries in the <code>.debug_str_offsets</code> …",129,null],[13,"DebugLineStrRef","","An offset into the <code>.debug_line_str</code> section.",129,null],[13,"String","","A slice of bytes representing a string. Does not include …",129,null],[13,"Encoding","","The value of a <code>DW_AT_encoding</code> attribute.",129,null],[13,"DecimalSign","","The value of a <code>DW_AT_decimal_sign</code> attribute.",129,null],[13,"Endianity","","The value of a <code>DW_AT_endianity</code> attribute.",129,null],[13,"Accessibility","","The value of a <code>DW_AT_accessibility</code> attribute.",129,null],[13,"Visibility","","The value of a <code>DW_AT_visibility</code> attribute.",129,null],[13,"Virtuality","","The value of a <code>DW_AT_virtuality</code> attribute.",129,null],[13,"Language","","The value of a <code>DW_AT_language</code> attribute.",129,null],[13,"AddressClass","","The value of a <code>DW_AT_address_class</code> attribute.",129,null],[13,"IdentifierCase","","The value of a <code>DW_AT_identifier_case</code> attribute.",129,null],[13,"CallingConvention","","The value of a <code>DW_AT_calling_convention</code> attribute.",129,null],[13,"Inline","","The value of a <code>DW_AT_inline</code> attribute.",129,null],[13,"Ordering","","The value of a <code>DW_AT_ordering</code> attribute.",129,null],[13,"FileIndex","","An index into the filename entries from the line number …",129,null],[13,"DwoId","","An implementation-defined identifier uniquely identifying …",129,null],[3,"Attribute","","An attribute in a <code>DebuggingInformationEntry</code>, consisting …",null,null],[3,"AttrsIter","","An iterator over a particular entry\'s attributes.",null,null],[3,"EntriesRaw","","A raw reader of the data that defines the Debugging …",null,null],[3,"EntriesCursor","","A cursor into the Debugging Information Entries tree for …",null,null],[3,"EntriesTree","","The state information for a tree view of the Debugging …",null,null],[3,"EntriesTreeNode","","A node in the Debugging Information Entry tree.",null,null],[3,"EntriesTreeIter","","An iterator that allows traversal of the children of an …",null,null],[3,"DebugTypes","","The <code>DebugTypes</code> struct represents the DWARF type …",null,null],[3,"DebugTypesUnitHeadersIter","","An iterator over the type-units of this <code>.debug_types</code> …",null,null],[4,"ValueType","","The type of an entry on the DWARF stack.",null,null],[13,"Generic","","The generic type, which is address-sized and of …",130,null],[13,"I8","","Signed 8-bit integer type.",130,null],[13,"U8","","Unsigned 8-bit integer type.",130,null],[13,"I16","","Signed 16-bit integer type.",130,null],[13,"U16","","Unsigned 16-bit integer type.",130,null],[13,"I32","","Signed 32-bit integer type.",130,null],[13,"U32","","Unsigned 32-bit integer type.",130,null],[13,"I64","","Signed 64-bit integer type.",130,null],[13,"U64","","Unsigned 64-bit integer type.",130,null],[13,"F32","","32-bit floating point type.",130,null],[13,"F64","","64-bit floating point type.",130,null],[4,"Value","","The value of an entry on the DWARF stack.",null,null],[13,"Generic","","A generic value, which is address-sized and of …",131,null],[13,"I8","","A signed 8-bit integer value.",131,null],[13,"U8","","An unsigned 8-bit integer value.",131,null],[13,"I16","","A signed 16-bit integer value.",131,null],[13,"U16","","An unsigned 16-bit integer value.",131,null],[13,"I32","","A signed 32-bit integer value.",131,null],[13,"U32","","An unsigned 32-bit integer value.",131,null],[13,"I64","","A signed 64-bit integer value.",131,null],[13,"U64","","An unsigned 64-bit integer value.",131,null],[13,"F32","","A 32-bit floating point value.",131,null],[13,"F64","","A 64-bit floating point value.",131,null],[6,"EndianBuf","","<code>EndianBuf</code> has been renamed to <code>EndianSlice</code>. For ease of …",null,null],[4,"Error","","An error that occurred when parsing.",null,null],[13,"Io","","An I/O error occurred while reading.",132,null],[13,"PcRelativePointerButSectionBaseIsUndefined","","Found a PC relative pointer, but the section base is …",132,null],[13,"TextRelativePointerButTextBaseIsUndefined","","Found a <code>.text</code> relative pointer, but the <code>.text</code> base is …",132,null],[13,"DataRelativePointerButDataBaseIsUndefined","","Found a data relative pointer, but the data base is …",132,null],[13,"FuncRelativePointerInBadContext","","Found a function relative pointer in a context that does …",132,null],[13,"CannotParseOmitPointerEncoding","","Cannot parse a pointer with a <code>DW_EH_PE_omit</code> encoding.",132,null],[13,"BadUnsignedLeb128","","An error parsing an unsigned LEB128 value.",132,null],[13,"BadSignedLeb128","","An error parsing a signed LEB128 value.",132,null],[13,"AbbreviationTagZero","","An abbreviation declared that its tag is zero, but zero …",132,null],[13,"AttributeFormZero","","An attribute specification declared that its form is …",132,null],[13,"BadHasChildren","","The abbreviation\'s has-children byte was not one of …",132,null],[13,"BadLength","","The specified length is impossible.",132,null],[13,"UnknownForm","","Found an unknown <code>DW_FORM_*</code> type.",132,null],[13,"ExpectedZero","","Expected a zero, found something else.",132,null],[13,"DuplicateAbbreviationCode","","Found an abbreviation code that has already been used.",132,null],[13,"DuplicateArange","","Found a duplicate arange.",132,null],[13,"UnknownReservedLength","","Found an unknown reserved length value.",132,null],[13,"UnknownVersion","","Found an unknown DWARF version.",132,null],[13,"UnknownAbbreviation","","Found a record with an unknown abbreviation code.",132,null],[13,"UnexpectedEof","","Hit the end of input before it was expected.",132,null],[13,"UnexpectedNull","","Read a null entry before it was expected.",132,null],[13,"UnknownStandardOpcode","","Found an unknown standard opcode.",132,null],[13,"UnknownExtendedOpcode","","Found an unknown extended opcode.",132,null],[13,"UnsupportedAddressSize","","The specified address size is not supported.",132,null],[13,"UnsupportedOffsetSize","","The specified offset size is not supported.",132,null],[13,"UnsupportedFieldSize","","The specified field size is not supported.",132,null],[13,"MinimumInstructionLengthZero","","The minimum instruction length must not be zero.",132,null],[13,"MaximumOperationsPerInstructionZero","","The maximum operations per instruction must not be zero.",132,null],[13,"LineRangeZero","","The line range must not be zero.",132,null],[13,"OpcodeBaseZero","","The opcode base must not be zero.",132,null],[13,"BadUtf8","","Found an invalid UTF-8 string.",132,null],[13,"NotCieId","","Expected to find the CIE ID, but found something else.",132,null],[13,"NotCiePointer","","Expected to find a pointer to a CIE, but found the CIE ID …",132,null],[13,"NotFdePointer","","Expected to find a pointer to an FDE, but found a CIE …",132,null],[13,"BadBranchTarget","","Invalid branch target for a DW_OP_bra or DW_OP_skip.",132,null],[13,"InvalidPushObjectAddress","","DW_OP_push_object_address used but no address passed in.",132,null],[13,"NotEnoughStackItems","","Not enough items on the stack when evaluating an …",132,null],[13,"TooManyIterations","","Too many iterations to compute the expression.",132,null],[13,"InvalidExpression","","An unrecognized operation was found while parsing a DWARF …",132,null],[13,"InvalidPiece","","The expression had a piece followed by an expression …",132,null],[13,"InvalidExpressionTerminator","","An expression-terminating operation was followed by …",132,null],[13,"DivisionByZero","","Division or modulus by zero when evaluating an expression.",132,null],[13,"TypeMismatch","","An expression operation used mismatching types.",132,null],[13,"IntegralTypeRequired","","An expression operation required an integral type but saw …",132,null],[13,"UnsupportedTypeOperation","","An expression operation used types that are not supported.",132,null],[13,"InvalidShiftExpression","","The shift value in an expression must be a non-negative …",132,null],[13,"UnknownCallFrameInstruction","","An unknown DW_CFA_* instruction.",132,null],[13,"InvalidAddressRange","","The end of an address range was before the beginning.",132,null],[13,"InvalidLocationAddressRange","","The end offset of a loc list entry was before the …",132,null],[13,"CfiInstructionInInvalidContext","","Encountered a call frame instruction in a context in …",132,null],[13,"PopWithEmptyStack","","When evaluating call frame instructions, found a …",132,null],[13,"NoUnwindInfoForAddress","","Do not have unwind info for the given address.",132,null],[13,"UnsupportedOffset","","An offset value was larger than the maximum supported …",132,null],[13,"UnknownPointerEncoding","","The given pointer encoding is either unknown or invalid.",132,null],[13,"NoEntryAtGivenOffset","","Did not find an entry at the given offset.",132,null],[13,"OffsetOutOfBounds","","The given offset is out of bounds.",132,null],[13,"UnknownAugmentation","","Found an unknown CFI augmentation.",132,null],[13,"UnsupportedPointerEncoding","","We do not support the given pointer encoding yet.",132,null],[13,"UnsupportedRegister","","Registers larger than <code>u16</code> are not supported.",132,null],[13,"TooManyRegisterRules","","The CFI program defined more register rules than we have …",132,null],[13,"CfiStackFull","","Attempted to push onto the CFI stack, but it was already …",132,null],[13,"VariableLengthSearchTable","","The <code>.eh_frame_hdr</code> binary search table claims to be …",132,null],[13,"UnsupportedUnitType","","The <code>DW_UT_*</code> value for this unit is not supported yet.",132,null],[13,"UnsupportedAddressIndex","","Ranges using AddressIndex are not supported yet.",132,null],[13,"UnsupportedSegmentSize","","Nonzero segment selector sizes aren\'t supported yet.",132,null],[13,"MissingUnitDie","","A compilation unit or type unit is missing its top level …",132,null],[13,"UnsupportedAttributeForm","","A DIE attribute used an unsupported form.",132,null],[13,"MissingFileEntryFormatPath","","Missing DW_LNCT_path in file entry format.",132,null],[13,"ExpectedStringAttributeValue","","Expected an attribute value to be a string form.",132,null],[13,"InvalidImplicitConst","","<code>DW_FORM_implicit_const</code> used in an invalid context.",132,null],[11,"description","","A short description of the error.",132,[[],["str",15]]],[6,"Result","","The result of a parse.",null,null],[8,"Section","","A convenience trait for loading DWARF sections from …",null,null],[10,"id","","Returns the section id for this type.",133,[[],["sectionid",4]]],[11,"section_name","","Returns the ELF section name for this type.",133,[[],["str",15]]],[11,"dwo_section_name","","Returns the ELF section name (if any) for this type when …",133,[[],[["str",15],["option",4]]]],[11,"load","","Try to load the section using the given loader function.",133,[[],["result",4]]],[10,"reader","","Returns the <code>Reader</code> for this section.",133,[[]]],[11,"lookup_offset_id","","Returns the <code>Reader</code> for this section.",133,[[["readeroffsetid",3]],["option",4]]],[4,"Format","gimli","Whether the format of a compilation unit is 32- or 64-bit.",null,null],[13,"Dwarf64","","64-bit DWARF",134,null],[13,"Dwarf32","","32-bit DWARF",134,null],[3,"Encoding","","Encoding parameters that are commonly used for multiple …",null,null],[12,"address_size","","The size of an address.",135,null],[12,"format","","Whether the DWARF format is 32- or 64-bit.",135,null],[12,"version","","The DWARF version of the header.",135,null],[3,"LineEncoding","","Encoding parameters for a line number program.",null,null],[12,"minimum_instruction_length","","The size in bytes of the smallest target machine …",136,null],[12,"maximum_operations_per_instruction","","The maximum number of individual operations that may be …",136,null],[12,"default_is_stmt","","The initial value of the <code>is_stmt</code> register.",136,null],[12,"line_base","","The minimum value which a special opcode can add to the …",136,null],[12,"line_range","","The range of values which a special opcode can add to the …",136,null],[3,"Register","","A DWARF register number.",null,null],[12,"0","","",137,null],[3,"DebugAbbrevOffset","","An offset into the <code>.debug_abbrev</code> section.",null,null],[12,"0","","",138,null],[3,"DebugAddrBase","","An offset to a set of entries in the <code>.debug_addr</code> section.",null,null],[12,"0","","",139,null],[3,"DebugAddrIndex","","An index into a set of addresses in the <code>.debug_addr</code> …",null,null],[12,"0","","",140,null],[3,"DebugInfoOffset","","An offset into the <code>.debug_info</code> section.",null,null],[12,"0","","",141,null],[3,"DebugLineOffset","","An offset into the <code>.debug_line</code> section.",null,null],[12,"0","","",142,null],[3,"DebugLineStrOffset","","An offset into the <code>.debug_line_str</code> section.",null,null],[12,"0","","",143,null],[3,"LocationListsOffset","","An offset into either the <code>.debug_loc</code> section or the …",null,null],[12,"0","","",144,null],[3,"DebugLocListsBase","","An offset to a set of location list offsets in the …",null,null],[12,"0","","",145,null],[3,"DebugLocListsIndex","","An index into a set of location list offsets in the …",null,null],[12,"0","","",146,null],[3,"DebugMacinfoOffset","","An offset into the <code>.debug_macinfo</code> section.",null,null],[12,"0","","",147,null],[3,"DebugMacroOffset","","An offset into the <code>.debug_macro</code> section.",null,null],[12,"0","","",148,null],[3,"RangeListsOffset","","An offset into either the <code>.debug_ranges</code> section or the …",null,null],[12,"0","","",149,null],[3,"DebugRngListsBase","","An offset to a set of range list offsets in the …",null,null],[12,"0","","",150,null],[3,"DebugRngListsIndex","","An index into a set of range list offsets in the …",null,null],[12,"0","","",151,null],[3,"DebugStrOffset","","An offset into the <code>.debug_str</code> section.",null,null],[12,"0","","",152,null],[3,"DebugStrOffsetsBase","","An offset to a set of entries in the <code>.debug_str_offsets</code> …",null,null],[12,"0","","",153,null],[3,"DebugStrOffsetsIndex","","An index into a set of entries in the <code>.debug_str_offsets</code> …",null,null],[12,"0","","",154,null],[3,"DebugTypesOffset","","An offset into the <code>.debug_types</code> section.",null,null],[12,"0","","",155,null],[3,"DebugTypeSignature","","A type signature as used in the <code>.debug_types</code> section.",null,null],[12,"0","","",156,null],[3,"DebugFrameOffset","","An offset into the <code>.debug_frame</code> section.",null,null],[12,"0","","",157,null],[3,"EhFrameOffset","","An offset into the <code>.eh_frame</code> section.",null,null],[12,"0","","",158,null],[4,"UnitSectionOffset","","An offset into the <code>.debug_info</code> or <code>.debug_types</code> sections.",null,null],[13,"DebugInfoOffset","","An offset into the <code>.debug_info</code> section.",159,null],[13,"DebugTypesOffset","","An offset into the <code>.debug_types</code> section.",159,null],[4,"SectionId","","An identifier for a DWARF section.",null,null],[13,"DebugAbbrev","","The <code>.debug_abbrev</code> section.",160,null],[13,"DebugAddr","","The <code>.debug_addr</code> section.",160,null],[13,"DebugAranges","","The <code>.debug_aranges</code> section.",160,null],[13,"DebugFrame","","The <code>.debug_frame</code> section.",160,null],[13,"EhFrame","","The <code>.eh_frame</code> section.",160,null],[13,"EhFrameHdr","","The <code>.eh_frame_hdr</code> section.",160,null],[13,"DebugInfo","","The <code>.debug_info</code> section.",160,null],[13,"DebugLine","","The <code>.debug_line</code> section.",160,null],[13,"DebugLineStr","","The <code>.debug_line_str</code> section.",160,null],[13,"DebugLoc","","The <code>.debug_loc</code> section.",160,null],[13,"DebugLocLists","","The <code>.debug_loclists</code> section.",160,null],[13,"DebugMacinfo","","The <code>.debug_macinfo</code> section.",160,null],[13,"DebugMacro","","The <code>.debug_macro</code> section.",160,null],[13,"DebugPubNames","","The <code>.debug_pubnames</code> section.",160,null],[13,"DebugPubTypes","","The <code>.debug_pubtypes</code> section.",160,null],[13,"DebugRanges","","The <code>.debug_ranges</code> section.",160,null],[13,"DebugRngLists","","The <code>.debug_rnglists</code> section.",160,null],[13,"DebugStr","","The <code>.debug_str</code> section.",160,null],[13,"DebugStrOffsets","","The <code>.debug_str_offsets</code> section.",160,null],[13,"DebugTypes","","The <code>.debug_types</code> section.",160,null],[3,"DwoId","","An optionally-provided implementation-defined compilation …",null,null],[12,"0","","",161,null],[4,"DwarfFileType","","The \\\"type\\\" of file with DWARF debugging information. This …",null,null],[13,"Main","","A normal executable or object file.",162,null],[13,"Dwo","","A .dwo split DWARF file.",162,null],[3,"Arm","","ARM architecture specific definitions.",null,null],[3,"X86","","Intel i386 architecture specific definitions.",null,null],[3,"X86_64","","AMD64 architecture specific definitions.",null,null],[3,"BigEndian","","Big endian byte order.",null,null],[8,"Endianity","","A trait describing the endianity of some buffer.",null,null],[10,"is_big_endian","","Return true for big endian byte order.",163,[[],["bool",15]]],[11,"is_little_endian","","Return true for little endian byte order.",163,[[],["bool",15]]],[11,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",163,[[],["u16",15]]],[11,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",163,[[],["u32",15]]],[11,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",163,[[],["u64",15]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",163,[[],["u64",15]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",163,[[],["i16",15]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",163,[[],["i32",15]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",163,[[],["i64",15]]],[11,"read_f32","","Reads a 32 bit floating point number from <code>buf</code>.",163,[[],["f32",15]]],[11,"read_f64","","Reads a 32 bit floating point number from <code>buf</code>.",163,[[],["f64",15]]],[11,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",163,[[["u16",15]]]],[11,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",163,[[["u32",15]]]],[11,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",163,[[["u64",15]]]],[3,"LittleEndian","","Little endian byte order.",null,null],[6,"NativeEndian","","The native endianity for the target platform.",null,null],[4,"RunTimeEndian","","Byte order that is selectable at runtime.",null,null],[13,"Little","","Little endian byte order.",164,null],[13,"Big","","Big endian byte order.",164,null],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"from","","",157,[[]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"from","","",158,[[]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"from","gimli::constants","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"from","gimli","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"from","gimli::read","",170,[[]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"from","","",171,[[]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"from","","",172,[[]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"from","","",175,[[]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"into_iter","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"from","","",189,[[]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"from","","",194,[[]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"from","","",196,[[]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"from","","",204,[[]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"from","","",205,[[]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"from","","",212,[[]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"from","","",215,[[]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"from","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"from","","",217,[[]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"from","","",218,[[]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"from","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"from","","",222,[[]]],[11,"from","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"from","","",223,[[]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"from","","",224,[[]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"from","","",225,[[]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"is_big_endian","gimli","",164,[[],["bool",15]]],[11,"is_big_endian","","",168,[[],["bool",15]]],[11,"is_big_endian","","",169,[[],["bool",15]]],[11,"into","","",157,[[]]],[11,"into","","",158,[[]]],[11,"endian","gimli::read","",188,[[]]],[11,"len","","",188,[[],["usize",15]]],[11,"is_empty","","",188,[[],["bool",15]]],[11,"empty","","",188,[[]]],[11,"truncate","","",188,[[["usize",15]],["result",6]]],[11,"offset_from","","",188,[[],["usize",15]]],[11,"offset_id","","",188,[[],["readeroffsetid",3]]],[11,"lookup_offset_id","","",188,[[["readeroffsetid",3]],["option",4]]],[11,"find","","",188,[[["u8",15]],[["usize",15],["result",6]]]],[11,"skip","","",188,[[["usize",15]],["result",6]]],[11,"split","","",188,[[["usize",15]],["result",6]]],[11,"to_slice","","",188,[[],[["cow",4],["result",6]]]],[11,"to_string","","",188,[[],[["result",6],["cow",4]]]],[11,"to_string_lossy","","",188,[[],[["result",6],["cow",4]]]],[11,"read_slice","","",188,[[],["result",6]]],[11,"header","","",201,[[],["lineprogramheader",3]]],[11,"add_file","","",201,[[["fileentry",3]]]],[11,"id","","",170,[[],["sectionid",4]]],[11,"reader","","",170,[[]]],[11,"id","","",171,[[],["sectionid",4]]],[11,"reader","","",171,[[]]],[11,"id","","",172,[[],["sectionid",4]]],[11,"reader","","",172,[[]]],[11,"id","","",175,[[],["sectionid",4]]],[11,"reader","","",175,[[]]],[11,"id","","",189,[[],["sectionid",4]]],[11,"reader","","",189,[[]]],[11,"id","","",194,[[],["sectionid",4]]],[11,"reader","","",194,[[]]],[11,"id","","",196,[[],["sectionid",4]]],[11,"reader","","",196,[[]]],[11,"id","","",204,[[],["sectionid",4]]],[11,"reader","","",204,[[]]],[11,"id","","",205,[[],["sectionid",4]]],[11,"reader","","",205,[[]]],[11,"id","","",212,[[],["sectionid",4]]],[11,"reader","","",212,[[]]],[11,"id","","",215,[[],["sectionid",4]]],[11,"reader","","",215,[[]]],[11,"id","","",217,[[],["sectionid",4]]],[11,"reader","","",217,[[]]],[11,"id","","",218,[[],["sectionid",4]]],[11,"reader","","",218,[[]]],[11,"id","","",222,[[],["sectionid",4]]],[11,"reader","","",222,[[]]],[11,"id","","",223,[[],["sectionid",4]]],[11,"reader","","",223,[[]]],[11,"id","","",224,[[],["sectionid",4]]],[11,"reader","","",224,[[]]],[11,"id","","",225,[[],["sectionid",4]]],[11,"reader","","",225,[[]]],[11,"id","","",236,[[],["sectionid",4]]],[11,"reader","","",236,[[]]],[11,"deref","","",188,[[]]],[11,"from","gimli","",157,[[]]],[11,"from","","",158,[[]]],[11,"from","","",159,[[["debuginfooffset",3]]]],[11,"from","","",159,[[["debugtypesoffset",3]]]],[11,"from","gimli::read","",170,[[]]],[11,"from","","",171,[[]]],[11,"from","","",172,[[]]],[11,"from","","",175,[[]]],[11,"from","","",189,[[]]],[11,"from","","",194,[[]]],[11,"from","","",196,[[]]],[11,"from","","",204,[[]]],[11,"from","","",205,[[]]],[11,"from","","",212,[[]]],[11,"from","","",215,[[]]],[11,"from","","",217,[[]]],[11,"from","","",218,[[]]],[11,"from","","",222,[[]]],[11,"from","","",223,[[]]],[11,"from","","",224,[[]]],[11,"from","","",225,[[]]],[11,"from","","",236,[[]]],[11,"fmt","gimli","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::constants","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","gimli","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::read","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::constants","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","gimli::read","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","gimli","",134,[[["format",4]],["bool",15]]],[11,"eq","","",135,[[["encoding",3]],["bool",15]]],[11,"ne","","",135,[[["encoding",3]],["bool",15]]],[11,"eq","","",136,[[["lineencoding",3]],["bool",15]]],[11,"ne","","",136,[[["lineencoding",3]],["bool",15]]],[11,"eq","","",137,[[["register",3]],["bool",15]]],[11,"ne","","",137,[[["register",3]],["bool",15]]],[11,"eq","","",138,[[["debugabbrevoffset",3]],["bool",15]]],[11,"ne","","",138,[[["debugabbrevoffset",3]],["bool",15]]],[11,"eq","","",139,[[["debugaddrbase",3]],["bool",15]]],[11,"ne","","",139,[[["debugaddrbase",3]],["bool",15]]],[11,"eq","","",140,[[["debugaddrindex",3]],["bool",15]]],[11,"ne","","",140,[[["debugaddrindex",3]],["bool",15]]],[11,"eq","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"ne","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"eq","","",142,[[["debuglineoffset",3]],["bool",15]]],[11,"ne","","",142,[[["debuglineoffset",3]],["bool",15]]],[11,"eq","","",143,[[["debuglinestroffset",3]],["bool",15]]],[11,"ne","","",143,[[["debuglinestroffset",3]],["bool",15]]],[11,"eq","","",144,[[["locationlistsoffset",3]],["bool",15]]],[11,"ne","","",144,[[["locationlistsoffset",3]],["bool",15]]],[11,"eq","","",145,[[["debugloclistsbase",3]],["bool",15]]],[11,"ne","","",145,[[["debugloclistsbase",3]],["bool",15]]],[11,"eq","","",146,[[["debugloclistsindex",3]],["bool",15]]],[11,"ne","","",146,[[["debugloclistsindex",3]],["bool",15]]],[11,"eq","","",147,[[["debugmacinfooffset",3]],["bool",15]]],[11,"ne","","",147,[[["debugmacinfooffset",3]],["bool",15]]],[11,"eq","","",148,[[["debugmacrooffset",3]],["bool",15]]],[11,"ne","","",148,[[["debugmacrooffset",3]],["bool",15]]],[11,"eq","","",149,[[["rangelistsoffset",3]],["bool",15]]],[11,"ne","","",149,[[["rangelistsoffset",3]],["bool",15]]],[11,"eq","","",150,[[["debugrnglistsbase",3]],["bool",15]]],[11,"ne","","",150,[[["debugrnglistsbase",3]],["bool",15]]],[11,"eq","","",151,[[["debugrnglistsindex",3]],["bool",15]]],[11,"ne","","",151,[[["debugrnglistsindex",3]],["bool",15]]],[11,"eq","","",152,[[["debugstroffset",3]],["bool",15]]],[11,"ne","","",152,[[["debugstroffset",3]],["bool",15]]],[11,"eq","","",153,[[["debugstroffsetsbase",3]],["bool",15]]],[11,"ne","","",153,[[["debugstroffsetsbase",3]],["bool",15]]],[11,"eq","","",154,[[["debugstroffsetsindex",3]],["bool",15]]],[11,"ne","","",154,[[["debugstroffsetsindex",3]],["bool",15]]],[11,"eq","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"ne","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"eq","","",156,[[["debugtypesignature",3]],["bool",15]]],[11,"ne","","",156,[[["debugtypesignature",3]],["bool",15]]],[11,"eq","","",157,[[["debugframeoffset",3]],["bool",15]]],[11,"ne","","",157,[[["debugframeoffset",3]],["bool",15]]],[11,"eq","","",158,[[["ehframeoffset",3]],["bool",15]]],[11,"ne","","",158,[[["ehframeoffset",3]],["bool",15]]],[11,"eq","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"ne","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"eq","","",160,[[["sectionid",4]],["bool",15]]],[11,"eq","","",161,[[["dwoid",3]],["bool",15]]],[11,"ne","","",161,[[["dwoid",3]],["bool",15]]],[11,"eq","","",162,[[["dwarffiletype",4]],["bool",15]]],[11,"eq","gimli::constants","",0,[[["dwut",3]],["bool",15]]],[11,"ne","","",0,[[["dwut",3]],["bool",15]]],[11,"eq","","",1,[[["dwcfa",3]],["bool",15]]],[11,"ne","","",1,[[["dwcfa",3]],["bool",15]]],[11,"eq","","",2,[[["dwchildren",3]],["bool",15]]],[11,"ne","","",2,[[["dwchildren",3]],["bool",15]]],[11,"eq","","",3,[[["dwtag",3]],["bool",15]]],[11,"ne","","",3,[[["dwtag",3]],["bool",15]]],[11,"eq","","",4,[[["dwat",3]],["bool",15]]],[11,"ne","","",4,[[["dwat",3]],["bool",15]]],[11,"eq","","",5,[[["dwform",3]],["bool",15]]],[11,"ne","","",5,[[["dwform",3]],["bool",15]]],[11,"eq","","",6,[[["dwate",3]],["bool",15]]],[11,"ne","","",6,[[["dwate",3]],["bool",15]]],[11,"eq","","",7,[[["dwlle",3]],["bool",15]]],[11,"ne","","",7,[[["dwlle",3]],["bool",15]]],[11,"eq","","",8,[[["dwds",3]],["bool",15]]],[11,"ne","","",8,[[["dwds",3]],["bool",15]]],[11,"eq","","",9,[[["dwend",3]],["bool",15]]],[11,"ne","","",9,[[["dwend",3]],["bool",15]]],[11,"eq","","",10,[[["dwaccess",3]],["bool",15]]],[11,"ne","","",10,[[["dwaccess",3]],["bool",15]]],[11,"eq","","",11,[[["dwvis",3]],["bool",15]]],[11,"ne","","",11,[[["dwvis",3]],["bool",15]]],[11,"eq","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"ne","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"eq","","",13,[[["dwlang",3]],["bool",15]]],[11,"ne","","",13,[[["dwlang",3]],["bool",15]]],[11,"eq","","",14,[[["dwaddr",3]],["bool",15]]],[11,"ne","","",14,[[["dwaddr",3]],["bool",15]]],[11,"eq","","",15,[[["dwid",3]],["bool",15]]],[11,"ne","","",15,[[["dwid",3]],["bool",15]]],[11,"eq","","",16,[[["dwcc",3]],["bool",15]]],[11,"ne","","",16,[[["dwcc",3]],["bool",15]]],[11,"eq","","",17,[[["dwinl",3]],["bool",15]]],[11,"ne","","",17,[[["dwinl",3]],["bool",15]]],[11,"eq","","",18,[[["dword",3]],["bool",15]]],[11,"ne","","",18,[[["dword",3]],["bool",15]]],[11,"eq","","",19,[[["dwdsc",3]],["bool",15]]],[11,"ne","","",19,[[["dwdsc",3]],["bool",15]]],[11,"eq","","",20,[[["dwidx",3]],["bool",15]]],[11,"ne","","",20,[[["dwidx",3]],["bool",15]]],[11,"eq","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"ne","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"eq","","",22,[[["dwlns",3]],["bool",15]]],[11,"ne","","",22,[[["dwlns",3]],["bool",15]]],[11,"eq","","",23,[[["dwlne",3]],["bool",15]]],[11,"ne","","",23,[[["dwlne",3]],["bool",15]]],[11,"eq","","",24,[[["dwlnct",3]],["bool",15]]],[11,"ne","","",24,[[["dwlnct",3]],["bool",15]]],[11,"eq","","",25,[[["dwmacro",3]],["bool",15]]],[11,"ne","","",25,[[["dwmacro",3]],["bool",15]]],[11,"eq","","",26,[[["dwrle",3]],["bool",15]]],[11,"ne","","",26,[[["dwrle",3]],["bool",15]]],[11,"eq","","",27,[[["dwop",3]],["bool",15]]],[11,"ne","","",27,[[["dwop",3]],["bool",15]]],[11,"eq","","",28,[[["dwehpe",3]],["bool",15]]],[11,"ne","","",28,[[["dwehpe",3]],["bool",15]]],[11,"eq","gimli","",164,[[["runtimeendian",4]],["bool",15]]],[11,"eq","","",168,[[["littleendian",3]],["bool",15]]],[11,"eq","","",169,[[["bigendian",3]],["bool",15]]],[11,"eq","gimli::read","",171,[[["debugframe",3]],["bool",15]]],[11,"ne","","",171,[[["debugframe",3]],["bool",15]]],[11,"eq","","",172,[[["ehframehdr",3]],["bool",15]]],[11,"ne","","",172,[[["ehframehdr",3]],["bool",15]]],[11,"eq","","",175,[[["ehframe",3]],["bool",15]]],[11,"ne","","",175,[[["ehframe",3]],["bool",15]]],[11,"eq","","",31,[[["baseaddresses",3]],["bool",15]]],[11,"ne","","",31,[[["baseaddresses",3]],["bool",15]]],[11,"eq","","",32,[[["sectionbaseaddresses",3]],["bool",15]]],[11,"ne","","",32,[[["sectionbaseaddresses",3]],["bool",15]]],[11,"eq","","",33,[[["cieorfde",4]],["bool",15]]],[11,"ne","","",33,[[["cieorfde",4]],["bool",15]]],[11,"eq","","",177,[[["augmentation",3]],["bool",15]]],[11,"ne","","",177,[[["augmentation",3]],["bool",15]]],[11,"eq","","",178,[[["commoninformationentry",3]],["bool",15]]],[11,"ne","","",178,[[["commoninformationentry",3]],["bool",15]]],[11,"eq","","",179,[[["partialframedescriptionentry",3]],["bool",15]]],[11,"ne","","",179,[[["partialframedescriptionentry",3]],["bool",15]]],[11,"eq","","",180,[[["framedescriptionentry",3]],["bool",15]]],[11,"ne","","",180,[[["framedescriptionentry",3]],["bool",15]]],[11,"eq","","",182,[[["unwindcontext",3]],["bool",15]]],[11,"eq","","",185,[[["unwindtablerow",3]],["bool",15]]],[11,"ne","","",185,[[["unwindtablerow",3]],["bool",15]]],[11,"eq","","",34,[[["cfarule",4]],["bool",15]]],[11,"ne","","",34,[[["cfarule",4]],["bool",15]]],[11,"eq","","",36,[[["registerrule",4]],["bool",15]]],[11,"ne","","",36,[[["registerrule",4]],["bool",15]]],[11,"eq","","",37,[[["callframeinstruction",4]],["bool",15]]],[11,"ne","","",37,[[["callframeinstruction",4]],["bool",15]]],[11,"eq","","",57,[[["pointer",4]],["bool",15]]],[11,"ne","","",57,[[["pointer",4]],["bool",15]]],[11,"eq","","",188,[[["endianslice",3]],["bool",15]]],[11,"ne","","",188,[[["endianslice",3]],["bool",15]]],[11,"eq","","",60,[[["readeroffsetid",3]],["bool",15]]],[11,"ne","","",60,[[["readeroffsetid",3]],["bool",15]]],[11,"eq","","",191,[[["abbreviation",3]],["bool",15]]],[11,"ne","","",191,[[["abbreviation",3]],["bool",15]]],[11,"eq","","",192,[[["attributespecification",3]],["bool",15]]],[11,"ne","","",192,[[["attributespecification",3]],["bool",15]]],[11,"eq","","",193,[[["arangeentry",3]],["bool",15]]],[11,"ne","","",193,[[["arangeentry",3]],["bool",15]]],[11,"eq","","",64,[[["lineinstruction",4]],["bool",15]]],[11,"ne","","",64,[[["lineinstruction",4]],["bool",15]]],[11,"eq","","",199,[[["linerow",3]],["bool",15]]],[11,"ne","","",199,[[["linerow",3]],["bool",15]]],[11,"eq","","",65,[[["columntype",4]],["bool",15]]],[11,"ne","","",65,[[["columntype",4]],["bool",15]]],[11,"eq","","",200,[[["lineprogramheader",3]],["bool",15]]],[11,"ne","","",200,[[["lineprogramheader",3]],["bool",15]]],[11,"eq","","",201,[[["incompletelineprogram",3]],["bool",15]]],[11,"ne","","",201,[[["incompletelineprogram",3]],["bool",15]]],[11,"eq","","",202,[[["completelineprogram",3]],["bool",15]]],[11,"ne","","",202,[[["completelineprogram",3]],["bool",15]]],[11,"eq","","",203,[[["fileentry",3]],["bool",15]]],[11,"ne","","",203,[[["fileentry",3]],["bool",15]]],[11,"eq","","",67,[[["fileentryformat",3]],["bool",15]]],[11,"ne","","",67,[[["fileentryformat",3]],["bool",15]]],[11,"eq","","",78,[[["locationlistentry",3]],["bool",15]]],[11,"ne","","",78,[[["locationlistentry",3]],["bool",15]]],[11,"eq","","",79,[[["diereference",4]],["bool",15]]],[11,"ne","","",79,[[["diereference",4]],["bool",15]]],[11,"eq","","",80,[[["operation",4]],["bool",15]]],[11,"ne","","",80,[[["operation",4]],["bool",15]]],[11,"eq","","",103,[[["location",4]],["bool",15]]],[11,"ne","","",103,[[["location",4]],["bool",15]]],[11,"eq","","",109,[[["piece",3]],["bool",15]]],[11,"ne","","",109,[[["piece",3]],["bool",15]]],[11,"eq","","",110,[[["evaluationresult",4]],["bool",15]]],[11,"ne","","",110,[[["evaluationresult",4]],["bool",15]]],[11,"eq","","",114,[[["expression",3]],["bool",15]]],[11,"ne","","",114,[[["expression",3]],["bool",15]]],[11,"eq","","",124,[[["range",3]],["bool",15]]],[11,"ne","","",124,[[["range",3]],["bool",15]]],[11,"eq","","",125,[[["unitoffset",3]],["bool",15]]],[11,"ne","","",125,[[["unitoffset",3]],["bool",15]]],[11,"eq","","",126,[[["unittype",4]],["bool",15]]],[11,"ne","","",126,[[["unittype",4]],["bool",15]]],[11,"eq","","",227,[[["unitheader",3]],["bool",15]]],[11,"ne","","",227,[[["unitheader",3]],["bool",15]]],[11,"eq","","",129,[[["attributevalue",4]],["bool",15]]],[11,"ne","","",129,[[["attributevalue",4]],["bool",15]]],[11,"eq","","",229,[[["attribute",3]],["bool",15]]],[11,"ne","","",229,[[["attribute",3]],["bool",15]]],[11,"eq","","",130,[[["valuetype",4]],["bool",15]]],[11,"eq","","",131,[[["value",4]],["bool",15]]],[11,"ne","","",131,[[["value",4]],["bool",15]]],[11,"eq","","",132,[[["error",4]],["bool",15]]],[11,"ne","","",132,[[["error",4]],["bool",15]]],[11,"cmp","gimli","",137,[[["register",3]],["ordering",4]]],[11,"cmp","","",141,[[["debuginfooffset",3]],["ordering",4]]],[11,"cmp","","",155,[[["debugtypesoffset",3]],["ordering",4]]],[11,"cmp","","",159,[[["unitsectionoffset",4]],["ordering",4]]],[11,"cmp","","",160,[[["sectionid",4]],["ordering",4]]],[11,"cmp","gimli::constants","",0,[[["dwut",3]],["ordering",4]]],[11,"cmp","","",1,[[["dwcfa",3]],["ordering",4]]],[11,"cmp","","",2,[[["dwchildren",3]],["ordering",4]]],[11,"cmp","","",3,[[["dwtag",3]],["ordering",4]]],[11,"cmp","","",4,[[["dwat",3]],["ordering",4]]],[11,"cmp","","",5,[[["dwform",3]],["ordering",4]]],[11,"cmp","","",6,[[["dwate",3]],["ordering",4]]],[11,"cmp","","",7,[[["dwlle",3]],["ordering",4]]],[11,"cmp","","",8,[[["dwds",3]],["ordering",4]]],[11,"cmp","","",9,[[["dwend",3]],["ordering",4]]],[11,"cmp","","",10,[[["dwaccess",3]],["ordering",4]]],[11,"cmp","","",11,[[["dwvis",3]],["ordering",4]]],[11,"cmp","","",12,[[["dwvirtuality",3]],["ordering",4]]],[11,"cmp","","",13,[[["dwlang",3]],["ordering",4]]],[11,"cmp","","",14,[[["dwaddr",3]],["ordering",4]]],[11,"cmp","","",15,[[["dwid",3]],["ordering",4]]],[11,"cmp","","",16,[[["dwcc",3]],["ordering",4]]],[11,"cmp","","",17,[[["dwinl",3]],["ordering",4]]],[11,"cmp","","",18,[[["dword",3]],["ordering",4]]],[11,"cmp","","",19,[[["dwdsc",3]],["ordering",4]]],[11,"cmp","","",20,[[["dwidx",3]],["ordering",4]]],[11,"cmp","","",21,[[["dwdefaulted",3]],["ordering",4]]],[11,"cmp","","",22,[[["dwlns",3]],["ordering",4]]],[11,"cmp","","",23,[[["dwlne",3]],["ordering",4]]],[11,"cmp","","",24,[[["dwlnct",3]],["ordering",4]]],[11,"cmp","","",25,[[["dwmacro",3]],["ordering",4]]],[11,"cmp","","",26,[[["dwrle",3]],["ordering",4]]],[11,"cmp","","",27,[[["dwop",3]],["ordering",4]]],[11,"cmp","","",28,[[["dwehpe",3]],["ordering",4]]],[11,"cmp","gimli::read","",193,[[["arangeentry",3]],["ordering",4]]],[11,"cmp","","",65,[[["columntype",4]],["ordering",4]]],[11,"cmp","","",125,[[["unitoffset",3]],["ordering",4]]],[11,"partial_cmp","gimli","",137,[[["register",3]],[["ordering",4],["option",4]]]],[11,"lt","","",137,[[["register",3]],["bool",15]]],[11,"le","","",137,[[["register",3]],["bool",15]]],[11,"gt","","",137,[[["register",3]],["bool",15]]],[11,"ge","","",137,[[["register",3]],["bool",15]]],[11,"partial_cmp","","",141,[[["debuginfooffset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"le","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"gt","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"ge","","",141,[[["debuginfooffset",3]],["bool",15]]],[11,"partial_cmp","","",155,[[["debugtypesoffset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"le","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"gt","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"ge","","",155,[[["debugtypesoffset",3]],["bool",15]]],[11,"partial_cmp","","",159,[[["unitsectionoffset",4]],[["ordering",4],["option",4]]]],[11,"lt","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"le","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"gt","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"ge","","",159,[[["unitsectionoffset",4]],["bool",15]]],[11,"partial_cmp","","",160,[[["sectionid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","gimli::constants","",0,[[["dwut",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["dwut",3]],["bool",15]]],[11,"le","","",0,[[["dwut",3]],["bool",15]]],[11,"gt","","",0,[[["dwut",3]],["bool",15]]],[11,"ge","","",0,[[["dwut",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["dwcfa",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["dwcfa",3]],["bool",15]]],[11,"le","","",1,[[["dwcfa",3]],["bool",15]]],[11,"gt","","",1,[[["dwcfa",3]],["bool",15]]],[11,"ge","","",1,[[["dwcfa",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["dwchildren",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["dwchildren",3]],["bool",15]]],[11,"le","","",2,[[["dwchildren",3]],["bool",15]]],[11,"gt","","",2,[[["dwchildren",3]],["bool",15]]],[11,"ge","","",2,[[["dwchildren",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["dwtag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["dwtag",3]],["bool",15]]],[11,"le","","",3,[[["dwtag",3]],["bool",15]]],[11,"gt","","",3,[[["dwtag",3]],["bool",15]]],[11,"ge","","",3,[[["dwtag",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["dwat",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["dwat",3]],["bool",15]]],[11,"le","","",4,[[["dwat",3]],["bool",15]]],[11,"gt","","",4,[[["dwat",3]],["bool",15]]],[11,"ge","","",4,[[["dwat",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["dwform",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["dwform",3]],["bool",15]]],[11,"le","","",5,[[["dwform",3]],["bool",15]]],[11,"gt","","",5,[[["dwform",3]],["bool",15]]],[11,"ge","","",5,[[["dwform",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["dwate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["dwate",3]],["bool",15]]],[11,"le","","",6,[[["dwate",3]],["bool",15]]],[11,"gt","","",6,[[["dwate",3]],["bool",15]]],[11,"ge","","",6,[[["dwate",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["dwlle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["dwlle",3]],["bool",15]]],[11,"le","","",7,[[["dwlle",3]],["bool",15]]],[11,"gt","","",7,[[["dwlle",3]],["bool",15]]],[11,"ge","","",7,[[["dwlle",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["dwds",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["dwds",3]],["bool",15]]],[11,"le","","",8,[[["dwds",3]],["bool",15]]],[11,"gt","","",8,[[["dwds",3]],["bool",15]]],[11,"ge","","",8,[[["dwds",3]],["bool",15]]],[11,"partial_cmp","","",9,[[["dwend",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["dwend",3]],["bool",15]]],[11,"le","","",9,[[["dwend",3]],["bool",15]]],[11,"gt","","",9,[[["dwend",3]],["bool",15]]],[11,"ge","","",9,[[["dwend",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["dwaccess",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["dwaccess",3]],["bool",15]]],[11,"le","","",10,[[["dwaccess",3]],["bool",15]]],[11,"gt","","",10,[[["dwaccess",3]],["bool",15]]],[11,"ge","","",10,[[["dwaccess",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["dwvis",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["dwvis",3]],["bool",15]]],[11,"le","","",11,[[["dwvis",3]],["bool",15]]],[11,"gt","","",11,[[["dwvis",3]],["bool",15]]],[11,"ge","","",11,[[["dwvis",3]],["bool",15]]],[11,"partial_cmp","","",12,[[["dwvirtuality",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"le","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"gt","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"ge","","",12,[[["dwvirtuality",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["dwlang",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["dwlang",3]],["bool",15]]],[11,"le","","",13,[[["dwlang",3]],["bool",15]]],[11,"gt","","",13,[[["dwlang",3]],["bool",15]]],[11,"ge","","",13,[[["dwlang",3]],["bool",15]]],[11,"partial_cmp","","",14,[[["dwaddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["dwaddr",3]],["bool",15]]],[11,"le","","",14,[[["dwaddr",3]],["bool",15]]],[11,"gt","","",14,[[["dwaddr",3]],["bool",15]]],[11,"ge","","",14,[[["dwaddr",3]],["bool",15]]],[11,"partial_cmp","","",15,[[["dwid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["dwid",3]],["bool",15]]],[11,"le","","",15,[[["dwid",3]],["bool",15]]],[11,"gt","","",15,[[["dwid",3]],["bool",15]]],[11,"ge","","",15,[[["dwid",3]],["bool",15]]],[11,"partial_cmp","","",16,[[["dwcc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",16,[[["dwcc",3]],["bool",15]]],[11,"le","","",16,[[["dwcc",3]],["bool",15]]],[11,"gt","","",16,[[["dwcc",3]],["bool",15]]],[11,"ge","","",16,[[["dwcc",3]],["bool",15]]],[11,"partial_cmp","","",17,[[["dwinl",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["dwinl",3]],["bool",15]]],[11,"le","","",17,[[["dwinl",3]],["bool",15]]],[11,"gt","","",17,[[["dwinl",3]],["bool",15]]],[11,"ge","","",17,[[["dwinl",3]],["bool",15]]],[11,"partial_cmp","","",18,[[["dword",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["dword",3]],["bool",15]]],[11,"le","","",18,[[["dword",3]],["bool",15]]],[11,"gt","","",18,[[["dword",3]],["bool",15]]],[11,"ge","","",18,[[["dword",3]],["bool",15]]],[11,"partial_cmp","","",19,[[["dwdsc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["dwdsc",3]],["bool",15]]],[11,"le","","",19,[[["dwdsc",3]],["bool",15]]],[11,"gt","","",19,[[["dwdsc",3]],["bool",15]]],[11,"ge","","",19,[[["dwdsc",3]],["bool",15]]],[11,"partial_cmp","","",20,[[["dwidx",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["dwidx",3]],["bool",15]]],[11,"le","","",20,[[["dwidx",3]],["bool",15]]],[11,"gt","","",20,[[["dwidx",3]],["bool",15]]],[11,"ge","","",20,[[["dwidx",3]],["bool",15]]],[11,"partial_cmp","","",21,[[["dwdefaulted",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"le","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"gt","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"ge","","",21,[[["dwdefaulted",3]],["bool",15]]],[11,"partial_cmp","","",22,[[["dwlns",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["dwlns",3]],["bool",15]]],[11,"le","","",22,[[["dwlns",3]],["bool",15]]],[11,"gt","","",22,[[["dwlns",3]],["bool",15]]],[11,"ge","","",22,[[["dwlns",3]],["bool",15]]],[11,"partial_cmp","","",23,[[["dwlne",3]],[["ordering",4],["option",4]]]],[11,"lt","","",23,[[["dwlne",3]],["bool",15]]],[11,"le","","",23,[[["dwlne",3]],["bool",15]]],[11,"gt","","",23,[[["dwlne",3]],["bool",15]]],[11,"ge","","",23,[[["dwlne",3]],["bool",15]]],[11,"partial_cmp","","",24,[[["dwlnct",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["dwlnct",3]],["bool",15]]],[11,"le","","",24,[[["dwlnct",3]],["bool",15]]],[11,"gt","","",24,[[["dwlnct",3]],["bool",15]]],[11,"ge","","",24,[[["dwlnct",3]],["bool",15]]],[11,"partial_cmp","","",25,[[["dwmacro",3]],[["ordering",4],["option",4]]]],[11,"lt","","",25,[[["dwmacro",3]],["bool",15]]],[11,"le","","",25,[[["dwmacro",3]],["bool",15]]],[11,"gt","","",25,[[["dwmacro",3]],["bool",15]]],[11,"ge","","",25,[[["dwmacro",3]],["bool",15]]],[11,"partial_cmp","","",26,[[["dwrle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["dwrle",3]],["bool",15]]],[11,"le","","",26,[[["dwrle",3]],["bool",15]]],[11,"gt","","",26,[[["dwrle",3]],["bool",15]]],[11,"ge","","",26,[[["dwrle",3]],["bool",15]]],[11,"partial_cmp","","",27,[[["dwop",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["dwop",3]],["bool",15]]],[11,"le","","",27,[[["dwop",3]],["bool",15]]],[11,"gt","","",27,[[["dwop",3]],["bool",15]]],[11,"ge","","",27,[[["dwop",3]],["bool",15]]],[11,"partial_cmp","","",28,[[["dwehpe",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["dwehpe",3]],["bool",15]]],[11,"le","","",28,[[["dwehpe",3]],["bool",15]]],[11,"gt","","",28,[[["dwehpe",3]],["bool",15]]],[11,"ge","","",28,[[["dwehpe",3]],["bool",15]]],[11,"partial_cmp","gimli::read","",193,[[["arangeentry",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",65,[[["columntype",4]],[["ordering",4],["option",4]]]],[11,"lt","","",65,[[["columntype",4]],["bool",15]]],[11,"le","","",65,[[["columntype",4]],["bool",15]]],[11,"gt","","",65,[[["columntype",4]],["bool",15]]],[11,"ge","","",65,[[["columntype",4]],["bool",15]]],[11,"partial_cmp","","",125,[[["unitoffset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",125,[[["unitoffset",3]],["bool",15]]],[11,"le","","",125,[[["unitoffset",3]],["bool",15]]],[11,"gt","","",125,[[["unitoffset",3]],["bool",15]]],[11,"ge","","",125,[[["unitoffset",3]],["bool",15]]],[11,"index","","",188,[[["usize",15]]]],[11,"index","","",188,[[["usize",15],["rangefrom",3]]]],[11,"hash","gimli","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","gimli::constants","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","gimli","",164,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","gimli::read","",188,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"into","","",57,[[],["u64",15]]],[11,"into","","",188,[[]]],[11,"next","","",184,[[],["option",4]]],[11,"clone","gimli","",134,[[],["format",4]]],[11,"clone","","",135,[[],["encoding",3]]],[11,"clone","","",136,[[],["lineencoding",3]]],[11,"clone","","",137,[[],["register",3]]],[11,"clone","","",138,[[],["debugabbrevoffset",3]]],[11,"clone","","",139,[[],["debugaddrbase",3]]],[11,"clone","","",140,[[],["debugaddrindex",3]]],[11,"clone","","",141,[[],["debuginfooffset",3]]],[11,"clone","","",142,[[],["debuglineoffset",3]]],[11,"clone","","",143,[[],["debuglinestroffset",3]]],[11,"clone","","",144,[[],["locationlistsoffset",3]]],[11,"clone","","",145,[[],["debugloclistsbase",3]]],[11,"clone","","",146,[[],["debugloclistsindex",3]]],[11,"clone","","",147,[[],["debugmacinfooffset",3]]],[11,"clone","","",148,[[],["debugmacrooffset",3]]],[11,"clone","","",149,[[],["rangelistsoffset",3]]],[11,"clone","","",150,[[],["debugrnglistsbase",3]]],[11,"clone","","",151,[[],["debugrnglistsindex",3]]],[11,"clone","","",152,[[],["debugstroffset",3]]],[11,"clone","","",153,[[],["debugstroffsetsbase",3]]],[11,"clone","","",154,[[],["debugstroffsetsindex",3]]],[11,"clone","","",155,[[],["debugtypesoffset",3]]],[11,"clone","","",156,[[],["debugtypesignature",3]]],[11,"clone","","",157,[[],["debugframeoffset",3]]],[11,"clone","","",158,[[],["ehframeoffset",3]]],[11,"clone","","",159,[[],["unitsectionoffset",4]]],[11,"clone","","",160,[[],["sectionid",4]]],[11,"clone","","",161,[[],["dwoid",3]]],[11,"clone","","",162,[[],["dwarffiletype",4]]],[11,"clone","","",165,[[],["arm",3]]],[11,"clone","","",166,[[],["x86",3]]],[11,"clone","","",167,[[],["x86_64",3]]],[11,"clone","gimli::constants","",0,[[],["dwut",3]]],[11,"clone","","",1,[[],["dwcfa",3]]],[11,"clone","","",2,[[],["dwchildren",3]]],[11,"clone","","",3,[[],["dwtag",3]]],[11,"clone","","",4,[[],["dwat",3]]],[11,"clone","","",5,[[],["dwform",3]]],[11,"clone","","",6,[[],["dwate",3]]],[11,"clone","","",7,[[],["dwlle",3]]],[11,"clone","","",8,[[],["dwds",3]]],[11,"clone","","",9,[[],["dwend",3]]],[11,"clone","","",10,[[],["dwaccess",3]]],[11,"clone","","",11,[[],["dwvis",3]]],[11,"clone","","",12,[[],["dwvirtuality",3]]],[11,"clone","","",13,[[],["dwlang",3]]],[11,"clone","","",14,[[],["dwaddr",3]]],[11,"clone","","",15,[[],["dwid",3]]],[11,"clone","","",16,[[],["dwcc",3]]],[11,"clone","","",17,[[],["dwinl",3]]],[11,"clone","","",18,[[],["dword",3]]],[11,"clone","","",19,[[],["dwdsc",3]]],[11,"clone","","",20,[[],["dwidx",3]]],[11,"clone","","",21,[[],["dwdefaulted",3]]],[11,"clone","","",22,[[],["dwlns",3]]],[11,"clone","","",23,[[],["dwlne",3]]],[11,"clone","","",24,[[],["dwlnct",3]]],[11,"clone","","",25,[[],["dwmacro",3]]],[11,"clone","","",26,[[],["dwrle",3]]],[11,"clone","","",27,[[],["dwop",3]]],[11,"clone","","",28,[[],["dwehpe",3]]],[11,"clone","gimli","",164,[[],["runtimeendian",4]]],[11,"clone","","",168,[[],["littleendian",3]]],[11,"clone","","",169,[[],["bigendian",3]]],[11,"clone","gimli::read","",170,[[],["debugaddr",3]]],[11,"clone","","",171,[[],["debugframe",3]]],[11,"clone","","",172,[[],["ehframehdr",3]]],[11,"clone","","",173,[[],["parsedehframehdr",3]]],[11,"clone","","",174,[[],["ehhdrtable",3]]],[11,"clone","","",175,[[],["ehframe",3]]],[11,"clone","","",31,[[],["baseaddresses",3]]],[11,"clone","","",32,[[],["sectionbaseaddresses",3]]],[11,"clone","","",176,[[],["cfientriesiter",3]]],[11,"clone","","",33,[[],["cieorfde",4]]],[11,"clone","","",177,[[],["augmentation",3]]],[11,"clone","","",178,[[],["commoninformationentry",3]]],[11,"clone","","",179,[[],["partialframedescriptionentry",3]]],[11,"clone","","",180,[[],["framedescriptionentry",3]]],[11,"clone","","",181,[[],["uninitializedunwindcontext",3]]],[11,"clone","","",182,[[],["unwindcontext",3]]],[11,"clone","","",184,[[],["registerruleiter",3]]],[11,"clone","","",185,[[],["unwindtablerow",3]]],[11,"clone","","",34,[[],["cfarule",4]]],[11,"clone","","",36,[[],["registerrule",4]]],[11,"clone","","",37,[[],["callframeinstruction",4]]],[11,"clone","","",186,[[],["callframeinstructioniter",3]]],[11,"clone","","",57,[[],["pointer",4]]],[11,"clone","","",188,[[],["endianslice",3]]],[11,"clone","","",60,[[],["readeroffsetid",3]]],[11,"clone","","",189,[[],["debugabbrev",3]]],[11,"clone","","",190,[[],["abbreviations",3]]],[11,"clone","","",191,[[],["abbreviation",3]]],[11,"clone","","",192,[[],["attributespecification",3]]],[11,"clone","","",193,[[],["arangeentry",3]]],[11,"clone","","",194,[[],["debugaranges",3]]],[11,"clone","","",195,[[],["arangeentryiter",3]]],[11,"clone","","",196,[[],["debugline",3]]],[11,"clone","","",197,[[],["linerows",3]]],[11,"clone","","",64,[[],["lineinstruction",4]]],[11,"clone","","",198,[[],["lineinstructions",3]]],[11,"clone","","",199,[[],["linerow",3]]],[11,"clone","","",65,[[],["columntype",4]]],[11,"clone","","",66,[[],["linesequence",3]]],[11,"clone","","",200,[[],["lineprogramheader",3]]],[11,"clone","","",201,[[],["incompletelineprogram",3]]],[11,"clone","","",202,[[],["completelineprogram",3]]],[11,"clone","","",203,[[],["fileentry",3]]],[11,"clone","","",67,[[],["fileentryformat",3]]],[11,"clone","","",204,[[],["debugloc",3]]],[11,"clone","","",205,[[],["debugloclists",3]]],[11,"clone","","",206,[[],["locationlists",3]]],[11,"clone","","",68,[[],["rawloclistentry",4]]],[11,"clone","","",78,[[],["locationlistentry",3]]],[11,"clone","","",79,[[],["diereference",4]]],[11,"clone","","",80,[[],["operation",4]]],[11,"clone","","",103,[[],["location",4]]],[11,"clone","","",109,[[],["piece",3]]],[11,"clone","","",114,[[],["expression",3]]],[11,"clone","","",209,[[],["operationiter",3]]],[11,"clone","","",211,[[],["pubnamesentry",3]]],[11,"clone","","",212,[[],["debugpubnames",3]]],[11,"clone","","",213,[[],["pubnamesentryiter",3]]],[11,"clone","","",214,[[],["pubtypesentry",3]]],[11,"clone","","",215,[[],["debugpubtypes",3]]],[11,"clone","","",216,[[],["pubtypesentryiter",3]]],[11,"clone","","",217,[[],["debugranges",3]]],[11,"clone","","",218,[[],["debugrnglists",3]]],[11,"clone","","",219,[[],["rangelists",3]]],[11,"clone","","",115,[[],["rawrnglistentry",4]]],[11,"clone","","",124,[[],["range",3]]],[11,"clone","","",222,[[],["debugstr",3]]],[11,"clone","","",223,[[],["debugstroffsets",3]]],[11,"clone","","",224,[[],["debuglinestr",3]]],[11,"clone","","",125,[[],["unitoffset",3]]],[11,"clone","","",225,[[],["debuginfo",3]]],[11,"clone","","",226,[[],["debuginfounitheadersiter",3]]],[11,"clone","","",126,[[],["unittype",4]]],[11,"clone","","",227,[[],["unitheader",3]]],[11,"clone","","",228,[[],["debugginginformationentry",3]]],[11,"clone","","",129,[[],["attributevalue",4]]],[11,"clone","","",229,[[],["attribute",3]]],[11,"clone","","",230,[[],["attrsiter",3]]],[11,"clone","","",231,[[],["entriesraw",3]]],[11,"clone","","",232,[[],["entriescursor",3]]],[11,"clone","","",233,[[],["entriestree",3]]],[11,"clone","","",236,[[],["debugtypes",3]]],[11,"clone","","",237,[[],["debugtypesunitheadersiter",3]]],[11,"clone","","",130,[[],["valuetype",4]]],[11,"clone","","",131,[[],["value",4]]],[11,"clone","","",132,[[],["error",4]]],[11,"default","gimli","",136,[[]]],[11,"default","","",162,[[]]],[11,"default","","",164,[[],["runtimeendian",4]]],[11,"default","","",168,[[],["littleendian",3]]],[11,"default","","",169,[[],["bigendian",3]]],[11,"default","gimli::read","",170,[[],["debugaddr",3]]],[11,"default","","",31,[[],["baseaddresses",3]]],[11,"default","","",32,[[],["sectionbaseaddresses",3]]],[11,"default","","",177,[[],["augmentation",3]]],[11,"default","","",181,[[]]],[11,"default","","",185,[[]]],[11,"default","","",34,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[],["dwarf",3]]],[11,"default","","",187,[[]]],[11,"default","","",188,[[],["endianslice",3]]],[11,"default","","",189,[[],["debugabbrev",3]]],[11,"default","","",190,[[],["abbreviations",3]]],[11,"default","","",196,[[],["debugline",3]]],[11,"default","","",204,[[],["debugloc",3]]],[11,"default","","",205,[[],["debugloclists",3]]],[11,"default","","",206,[[],["locationlists",3]]],[11,"default","","",217,[[],["debugranges",3]]],[11,"default","","",218,[[],["debugrnglists",3]]],[11,"default","","",219,[[],["rangelists",3]]],[11,"default","","",222,[[],["debugstr",3]]],[11,"default","","",223,[[],["debugstroffsets",3]]],[11,"default","","",224,[[],["debuglinestr",3]]],[11,"default","","",225,[[],["debuginfo",3]]],[11,"default","","",236,[[],["debugtypes",3]]],[11,"initial_length_size","gimli","Return the serialized size of an initial length field for …",134,[[],["u8",15]]],[11,"word_size","","Return the natural word size for the format",134,[[],["u8",15]]],[11,"as_debug_info_offset","","Returns the <code>DebugInfoOffset</code> inside, or <code>None</code> otherwise.",159,[[],[["debuginfooffset",3],["option",4]]]],[11,"as_debug_types_offset","","Returns the <code>DebugTypesOffset</code> inside, or <code>None</code> otherwise.",159,[[],[["option",4],["debugtypesoffset",3]]]],[11,"name","","Returns the ELF section name for this kind.",160,[[],["str",15]]],[11,"dwo_name","","Returns the ELF section name for this kind, when found in …",160,[[],[["str",15],["option",4]]]],[18,"R0","","",165,null],[18,"R1","","",165,null],[18,"R2","","",165,null],[18,"R3","","",165,null],[18,"R4","","",165,null],[18,"R5","","",165,null],[18,"R6","","",165,null],[18,"R7","","",165,null],[18,"R8","","",165,null],[18,"R9","","",165,null],[18,"R10","","",165,null],[18,"R11","","",165,null],[18,"R12","","",165,null],[18,"R13","","",165,null],[18,"R14","","",165,null],[18,"R15","","",165,null],[11,"register_name","","The name of a register, or <code>None</code> if the register number is …",165,[[["register",3]],[["str",15],["option",4]]]],[11,"name_to_register","","Converts a register name into a register number.",165,[[["str",15]],[["option",4],["register",3]]]],[18,"EAX","","",166,null],[18,"ECX","","",166,null],[18,"EDX","","",166,null],[18,"EBX","","",166,null],[18,"ESP","","",166,null],[18,"EBP","","",166,null],[18,"ESI","","",166,null],[18,"EDI","","",166,null],[18,"RA","","",166,null],[18,"ST0","","",166,null],[18,"ST1","","",166,null],[18,"ST2","","",166,null],[18,"ST3","","",166,null],[18,"ST4","","",166,null],[18,"ST5","","",166,null],[18,"ST6","","",166,null],[18,"ST7","","",166,null],[18,"XMM0","","",166,null],[18,"XMM1","","",166,null],[18,"XMM2","","",166,null],[18,"XMM3","","",166,null],[18,"XMM4","","",166,null],[18,"XMM5","","",166,null],[18,"XMM6","","",166,null],[18,"XMM7","","",166,null],[18,"MM0","","",166,null],[18,"MM1","","",166,null],[18,"MM2","","",166,null],[18,"MM3","","",166,null],[18,"MM4","","",166,null],[18,"MM5","","",166,null],[18,"MM6","","",166,null],[18,"MM7","","",166,null],[18,"MXCSR","","",166,null],[18,"ES","","",166,null],[18,"CS","","",166,null],[18,"SS","","",166,null],[18,"DS","","",166,null],[18,"FS","","",166,null],[18,"GS","","",166,null],[18,"TR","","",166,null],[18,"LDTR","","",166,null],[18,"FS_BASE","","",166,null],[18,"GS_BASE","","",166,null],[11,"register_name","","The name of a register, or <code>None</code> if the register number is …",166,[[["register",3]],[["str",15],["option",4]]]],[11,"name_to_register","","Converts a register name into a register number.",166,[[["str",15]],[["option",4],["register",3]]]],[18,"RAX","","",167,null],[18,"RDX","","",167,null],[18,"RCX","","",167,null],[18,"RBX","","",167,null],[18,"RSI","","",167,null],[18,"RDI","","",167,null],[18,"RBP","","",167,null],[18,"RSP","","",167,null],[18,"R8","","",167,null],[18,"R9","","",167,null],[18,"R10","","",167,null],[18,"R11","","",167,null],[18,"R12","","",167,null],[18,"R13","","",167,null],[18,"R14","","",167,null],[18,"R15","","",167,null],[18,"RA","","",167,null],[18,"XMM0","","",167,null],[18,"XMM1","","",167,null],[18,"XMM2","","",167,null],[18,"XMM3","","",167,null],[18,"XMM4","","",167,null],[18,"XMM5","","",167,null],[18,"XMM6","","",167,null],[18,"XMM7","","",167,null],[18,"XMM8","","",167,null],[18,"XMM9","","",167,null],[18,"XMM10","","",167,null],[18,"XMM11","","",167,null],[18,"XMM12","","",167,null],[18,"XMM13","","",167,null],[18,"XMM14","","",167,null],[18,"XMM15","","",167,null],[18,"ST0","","",167,null],[18,"ST1","","",167,null],[18,"ST2","","",167,null],[18,"ST3","","",167,null],[18,"ST4","","",167,null],[18,"ST5","","",167,null],[18,"ST6","","",167,null],[18,"ST7","","",167,null],[18,"MM0","","",167,null],[18,"MM1","","",167,null],[18,"MM2","","",167,null],[18,"MM3","","",167,null],[18,"MM4","","",167,null],[18,"MM5","","",167,null],[18,"MM6","","",167,null],[18,"MM7","","",167,null],[18,"RFLAGS","","",167,null],[18,"ES","","",167,null],[18,"CS","","",167,null],[18,"SS","","",167,null],[18,"DS","","",167,null],[18,"FS","","",167,null],[18,"GS","","",167,null],[18,"FS_BASE","","",167,null],[18,"GS_BASE","","",167,null],[18,"TR","","",167,null],[18,"LDTR","","",167,null],[18,"MXCSR","","",167,null],[18,"FCW","","",167,null],[18,"FSW","","",167,null],[18,"XMM16","","",167,null],[18,"XMM17","","",167,null],[18,"XMM18","","",167,null],[18,"XMM19","","",167,null],[18,"XMM20","","",167,null],[18,"XMM21","","",167,null],[18,"XMM22","","",167,null],[18,"XMM23","","",167,null],[18,"XMM24","","",167,null],[18,"XMM25","","",167,null],[18,"XMM26","","",167,null],[18,"XMM27","","",167,null],[18,"XMM28","","",167,null],[18,"XMM29","","",167,null],[18,"XMM30","","",167,null],[18,"XMM31","","",167,null],[18,"K0","","",167,null],[18,"K1","","",167,null],[18,"K2","","",167,null],[18,"K3","","",167,null],[18,"K4","","",167,null],[18,"K5","","",167,null],[18,"K6","","",167,null],[18,"K7","","",167,null],[11,"register_name","","The name of a register, or <code>None</code> if the register number is …",167,[[["register",3]],[["str",15],["option",4]]]],[11,"name_to_register","","Converts a register name into a register number.",167,[[["str",15]],[["option",4],["register",3]]]],[11,"is_little_endian","","Return true for little endian byte order.",163,[[],["bool",15]]],[11,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",163,[[],["u16",15]]],[11,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",163,[[],["u32",15]]],[11,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",163,[[],["u64",15]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",163,[[],["u64",15]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",163,[[],["i16",15]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",163,[[],["i32",15]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",163,[[],["i64",15]]],[11,"read_f32","","Reads a 32 bit floating point number from <code>buf</code>.",163,[[],["f32",15]]],[11,"read_f64","","Reads a 32 bit floating point number from <code>buf</code>.",163,[[],["f64",15]]],[11,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",163,[[["u16",15]]]],[11,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",163,[[["u32",15]]]],[11,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",163,[[["u64",15]]]],[11,"get_address","gimli::read","Returns the address at the given <code>base</code> and <code>index</code>.",170,[[["debugaddrbase",3],["debugaddrindex",3],["u8",15]],[["result",6],["u64",15]]]],[11,"borrow","","Create a <code>DebugAddr</code> section that references the data in …",170,[[],["debugaddr",3]]],[11,"set_address_size","","Set the size of a target address in bytes.",171,[[["u8",15]]]],[11,"set_segment_size","","Set the size of a segment selector in bytes.",171,[[["u8",15]]]],[11,"new","","Construct a new <code>DebugFrame</code> instance from the data in the …",171,[[]]],[11,"new","","Constructs a new <code>EhFrameHdr</code> instance from the data in the …",172,[[]]],[11,"parse","","Parses this <code>EhFrameHdr</code> to a <code>ParsedEhFrameHdr</code>.",172,[[["baseaddresses",3],["u8",15]],[["result",6],["parsedehframehdr",3]]]],[11,"eh_frame_ptr","","Returns the address of the binary\'s <code>.eh_frame</code> section.",173,[[],["pointer",4]]],[11,"table","","Retrieves the CFI binary search table, if there is one.",173,[[],[["ehhdrtable",3],["option",4]]]],[11,"lookup","","<em>Probably</em> returns a pointer to the FDE for the given …",174,[[["baseaddresses",3],["u64",15]],[["pointer",4],["result",6]]]],[11,"pointer_to_offset","","Convert a <code>Pointer</code> to a section offset.",174,[[["pointer",4]],[["ehframeoffset",3],["result",6]]]],[11,"fde_for_address","","Returns a parsed FDE for the given address, or …",174,[[["ehframe",3],["baseaddresses",3],["u64",15]],[["framedescriptionentry",3],["result",6]]]],[11,"unwind_info_for_address","","Returns the frame unwind information for the given …",174,[[["baseaddresses",3],["u64",15],["ehframe",3],["uninitializedunwindcontext",3]],[["unwindtablerow",3],["result",6]]]],[11,"set_address_size","","Set the size of a target address in bytes.",175,[[["u8",15]]]],[11,"new","","Construct a new <code>EhFrame</code> instance from the data in the …",175,[[]]],[11,"entries","","Iterate over the <code>CommonInformationEntry</code>s and …",30,[[["baseaddresses",3]],["cfientriesiter",3]]],[11,"cie_from_offset","","Parse the <code>CommonInformationEntry</code> at the given offset.",30,[[["baseaddresses",3]],[["result",6],["commoninformationentry",3]]]],[11,"partial_fde_from_offset","","Parse the <code>PartialFrameDescriptionEntry</code> at the given …",30,[[["baseaddresses",3]],[["result",6],["partialframedescriptionentry",3]]]],[11,"fde_from_offset","","Parse the <code>FrameDescriptionEntry</code> at the given offset.",30,[[["baseaddresses",3]],[["framedescriptionentry",3],["result",6]]]],[11,"fde_for_address","","Find the <code>FrameDescriptionEntry</code> for the given address.",30,[[["baseaddresses",3],["u64",15]],[["framedescriptionentry",3],["result",6]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",30,[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["unwindtablerow",3],["result",6]]]],[11,"set_eh_frame_hdr","","Set the <code>.eh_frame_hdr</code> section base address.",31,[[["u64",15]]]],[11,"set_eh_frame","","Set the <code>.eh_frame</code> section base address.",31,[[["u64",15]]]],[11,"set_text","","Set the <code>.text</code> section base address.",31,[[["u64",15]]]],[11,"set_got","","Set the <code>.got</code> section base address.",31,[[["u64",15]]]],[11,"next","","Advance the iterator to the next entry.",176,[[],[["result",6],["option",4]]]],[11,"offset","","Get the offset of this entry from the start of its …",178,[[]]],[11,"encoding","","Return the encoding parameters for this CIE.",178,[[],["encoding",3]]],[11,"address_size","","The size of addresses (in bytes) in this CIE.",178,[[],["u8",15]]],[11,"instructions","","Iterate over this CIE\'s initial instructions.",178,[[["baseaddresses",3]],["callframeinstructioniter",3]]],[11,"entry_len","","A constant that gives the number of bytes of the CIE …",178,[[]]],[11,"version","","A version number (see Section 7.23). This number is …",178,[[],["u8",15]]],[11,"augmentation","","Get the augmentation data, if any exists.",178,[[],[["augmentation",3],["option",4]]]],[11,"has_lsda","","True if this CIE\'s FDEs have a LSDA.",178,[[],["bool",15]]],[11,"lsda_encoding","","Return the encoding of the LSDA address for this CIE\'s …",178,[[],[["option",4],["dwehpe",3]]]],[11,"personality_with_encoding","","Return the encoding and address of the personality …",178,[[],["option",4]]],[11,"personality","","Return the address of the personality routine handler for …",178,[[],[["option",4],["pointer",4]]]],[11,"fde_address_encoding","","Return the encoding of the addresses for this CIE\'s FDEs.",178,[[],[["option",4],["dwehpe",3]]]],[11,"is_signal_trampoline","","True if this CIE\'s FDEs are trampolines for signal …",178,[[],["bool",15]]],[11,"code_alignment_factor","","A constant that is factored out of all advance location …",178,[[],["u64",15]]],[11,"data_alignment_factor","","A constant that is factored out of certain offset …",178,[[],["i64",15]]],[11,"return_address_register","","An unsigned ... constant that indicates which column in …",178,[[],["register",3]]],[11,"parse","","Fully parse this FDE.",179,[[],[["framedescriptionentry",3],["result",6]]]],[11,"rows","","Return the table of unwind information for this FDE.",180,[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["unwindtable",3],["result",6]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",180,[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["unwindtablerow",3],["result",6]]]],[11,"offset","","Get the offset of this entry from the start of its …",180,[[]]],[11,"cie","","Get a reference to this FDE\'s CIE.",180,[[],["commoninformationentry",3]]],[11,"entry_len","","A constant that gives the number of bytes of the header …",180,[[]]],[11,"instructions","","Iterate over this FDE\'s instructions.",180,[[["baseaddresses",3]],["callframeinstructioniter",3]]],[11,"initial_address","","The first address for which this entry has unwind …",180,[[],["u64",15]]],[11,"len","","The number of bytes of instructions that this entry has …",180,[[],["u64",15]]],[11,"contains","","Return <code>true</code> if the given address is within this FDE, <code>false</code>…",180,[[["u64",15]],["bool",15]]],[11,"lsda","","The address of this FDE\'s language-specific data area …",180,[[],[["option",4],["pointer",4]]]],[11,"is_signal_trampoline","","Return true if this FDE\'s function is a trampoline for a …",180,[[],["bool",15]]],[11,"personality","","Return the address of the FDE\'s function\'s personality …",180,[[],[["option",4],["pointer",4]]]],[11,"new","","Construct a new call frame unwinding context.",181,[[],["uninitializedunwindcontext",3]]],[11,"initialize","","Run the CIE\'s initial instructions, creating and return an…",181,[[["commoninformationentry",3],["baseaddresses",3]],[["unwindcontext",3],["result",6]]]],[11,"new","","Construct a new <code>UnwindTable</code> for the given …",183,[[["uninitializedunwindcontext",3],["baseaddresses",3],["framedescriptionentry",3]],[["unwindtable",3],["result",6]]]],[11,"next_row","","Evaluate call frame instructions until the next row of …",183,[[],[["result",6],["option",4]]]],[11,"start_address","","Get the starting PC address that this row applies to.",185,[[],["u64",15]]],[11,"end_address","","Get the end PC address where this row\'s register rules …",185,[[],["u64",15]]],[11,"contains","","Return <code>true</code> if the given <code>address</code> is within this row\'s …",185,[[["u64",15]],["bool",15]]],[11,"saved_args_size","","Returns the amount of args currently on the stack.",185,[[],["u64",15]]],[11,"cfa","","Get the canonical frame address (CFA) recovery rule for …",185,[[],["cfarule",4]]],[11,"register","","Get the register recovery rule for the given register …",185,[[["register",3]],["registerrule",4]]],[11,"registers","","Iterate over all defined register <code>(number, rule)</code> pairs.",185,[[],["registerruleiter",3]]],[11,"next","","Parse the next call frame instruction.",186,[[],[["option",4],["result",6]]]],[11,"load","","Try to load the DWARF sections using the given loader …",58,[[],["result",4]]],[11,"borrow","","Create a <code>Dwarf</code> structure that references the data in <code>self</code>.",58,[[],["dwarf",3]]],[11,"units","","Iterate the unit headers in the <code>.debug_info</code> section.",58,[[],["debuginfounitheadersiter",3]]],[11,"unit","","Construct a new <code>Unit</code> from the given unit header.",58,[[["unitheader",3]],[["result",6],["unit",3]]]],[11,"type_units","","Iterate the type-unit headers in the <code>.debug_types</code> section.",58,[[],["debugtypesunitheadersiter",3]]],[11,"abbreviations","","Parse the abbreviations for a compilation unit.",58,[[["unitheader",3]],[["result",6],["abbreviations",3]]]],[11,"string_offset","","Return the string offset at the given index.",58,[[["unit",3],["debugstroffsetsindex",3]],[["debugstroffset",3],["result",6]]]],[11,"string","","Return the string at the given offset in <code>.debug_str</code>.",58,[[["debugstroffset",3]],["result",6]]],[11,"line_string","","Return the string at the given offset in <code>.debug_line_str</code>.",58,[[["debuglinestroffset",3]],["result",6]]],[11,"attr_string","","Return an attribute value as a string slice.",58,[[["unit",3],["attributevalue",4]],["result",6]]],[11,"address","","Return the address at the given index.",58,[[["unit",3],["debugaddrindex",3]],[["result",6],["u64",15]]]],[11,"attr_address","","Try to return an attribute value as an address.",58,[[["unit",3],["attributevalue",4]],[["option",4],["result",6]]]],[11,"ranges_offset","","Return the range list offset at the given index.",58,[[["unit",3],["debugrnglistsindex",3]],[["result",6],["rangelistsoffset",3]]]],[11,"ranges","","Iterate over the <code>RangeListEntry</code>s starting at the given …",58,[[["unit",3],["rangelistsoffset",3]],[["result",6],["rnglistiter",3]]]],[11,"attr_ranges_offset","","Try to return an attribute value as a range list offset.",58,[[["unit",3],["attributevalue",4]],[["option",4],["result",6]]]],[11,"attr_ranges","","Try to return an attribute value as a range list entry …",58,[[["unit",3],["attributevalue",4]],[["option",4],["result",6]]]],[11,"die_ranges","","Return an iterator for the address ranges of a …",58,[[["unit",3],["debugginginformationentry",3]],[["result",6],["rangeiter",3]]]],[11,"unit_ranges","","Return an iterator for the address ranges of a <code>Unit</code>.",58,[[["unit",3]],[["result",6],["rangeiter",3]]]],[11,"locations_offset","","Return the location list offset at the given index.",58,[[["unit",3],["debugloclistsindex",3]],[["result",6],["locationlistsoffset",3]]]],[11,"locations","","Iterate over the <code>LocationListEntry</code>s starting at the given …",58,[[["unit",3],["locationlistsoffset",3]],[["loclistiter",3],["result",6]]]],[11,"attr_locations_offset","","Try to return an attribute value as a location list …",58,[[["unit",3],["attributevalue",4]],[["result",6],["option",4]]]],[11,"attr_locations","","Try to return an attribute value as a location list entry …",58,[[["unit",3],["attributevalue",4]],[["result",6],["option",4]]]],[11,"lookup_offset_id","","Call <code>Reader::lookup_offset_id</code> for each section, and …",58,[[["readeroffsetid",3]],["option",4]]],[11,"format_error","","Returns a string representation of the given error.",58,[[["error",4]],["string",3]]],[11,"new","","Construct a new <code>Unit</code> from the given unit header.",59,[[["unitheader",3],["dwarf",3]],["result",6]]],[11,"encoding","","Return the encoding parameters for this unit.",59,[[],["encoding",3]]],[11,"entry","","Read the <code>DebuggingInformationEntry</code> at the given offset.",59,[[["unitoffset",3]],[["debugginginformationentry",3],["result",6]]]],[11,"entries","","Navigate this unit\'s <code>DebuggingInformationEntry</code>s.",59,[[],["entriescursor",3]]],[11,"entries_at_offset","","Navigate this unit\'s <code>DebuggingInformationEntry</code>s starting …",59,[[["unitoffset",3]],[["result",6],["entriescursor",3]]]],[11,"entries_tree","","Navigate this unit\'s <code>DebuggingInformationEntry</code>s as a tree …",59,[[["option",4],["unitoffset",3]],[["entriestree",3],["result",6]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information …",59,[[["option",4],["unitoffset",3]],[["result",6],["entriesraw",3]]]],[11,"copy_relocated_attributes","","Copy attributes that are subject to relocation from …",59,[[["unit",3]]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the …",159,[[["unit",3]],[["option",4],["unitoffset",3]]]],[11,"to_unit_section_offset","gimli::read","Convert an offset to be relative to the start of the …",125,[[["unit",3]],["unitsectionoffset",4]]],[11,"next","","Advance the iterator to the next range.",187,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new <code>EndianSlice</code> with the given slice and …",188,[[],["endianslice",3]]],[11,"slice","","Return a reference to the raw slice.",188,[[]]],[11,"split_at","","Split the slice in two at the given index, resulting in …",188,[[["usize",15]]]],[11,"find","","Find the first occurence of a byte in the slice, and …",188,[[["u8",15]],[["option",4],["usize",15]]]],[11,"offset_from","","Return the offset of the start of the slice relative to …",188,[[["endianslice",3]],["usize",15]]],[11,"to_string","","Converts the slice to a string using <code>str::from_utf8</code>.",188,[[],[["result",6],["str",15]]]],[11,"to_string_lossy","","Converts the slice to a string, including invalid …",188,[[],[["cow",4],["str",15]]]],[11,"range","","Take the given <code>start..end</code> range of the underlying slice …",188,[[["usize",15],["range",3]],["endianslice",3]]],[11,"range_from","","Take the given <code>start..</code> range of the underlying slice and …",188,[[["usize",15],["rangefrom",3]],["endianslice",3]]],[11,"range_to","","Take the given <code>..end</code> range of the underlying slice and …",188,[[["usize",15],["rangeto",3]],["endianslice",3]]],[11,"read_u8_array","","Read a u8 array.",62,[[],["result",6]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",62,[[],["bool",15]]],[11,"read_u8","","Read a u8.",62,[[],[["u8",15],["result",6]]]],[11,"read_i8","","Read an i8.",62,[[],[["i8",15],["result",6]]]],[11,"read_u16","","Read a u16.",62,[[],[["result",6],["u16",15]]]],[11,"read_i16","","Read an i16.",62,[[],[["result",6],["i16",15]]]],[11,"read_u32","","Read a u32.",62,[[],[["u32",15],["result",6]]]],[11,"read_i32","","Read an i32.",62,[[],[["i32",15],["result",6]]]],[11,"read_u64","","Read a u64.",62,[[],[["result",6],["u64",15]]]],[11,"read_i64","","Read an i64.",62,[[],[["i64",15],["result",6]]]],[11,"read_f32","","Read a f32.",62,[[],[["result",6],["f32",15]]]],[11,"read_f64","","Read a f64.",62,[[],[["f64",15],["result",6]]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",62,[[["usize",15]],[["result",6],["u64",15]]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding …",62,[[],["result",6]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",62,[[],[["result",6],["u64",15]]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",62,[[],[["result",6],["u16",15]]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",62,[[],[["i64",15],["result",6]]]],[11,"read_initial_length","","Read an initial length field.",62,[[],["result",6]]],[11,"read_address","","Read an address-sized integer, and return it as a <code>u64</code>.",62,[[["u8",15]],[["result",6],["u64",15]]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",62,[[["format",4]],["result",6]]],[11,"read_length","","Parse a word-sized section length according to the DWARF …",62,[[["format",4]],["result",6]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF …",62,[[["format",4]],["result",6]]],[11,"read_sized_offset","","Parse a section offset of the given size.",62,[[["u8",15]],["result",6]]],[11,"new","","Construct a new <code>DebugAbbrev</code> instance from the data in the …",189,[[]]],[11,"abbreviations","","Parse the abbreviations at the given <code>offset</code> within this …",189,[[["debugabbrevoffset",3]],[["result",6],["abbreviations",3]]]],[11,"borrow","","Create a <code>DebugAbbrev</code> section that references the data in …",189,[[],["debugabbrev",3]]],[11,"get","","Get the abbreviation associated with the given code.",190,[[["u64",15]],[["abbreviation",3],["option",4]]]],[11,"code","","Get this abbreviation\'s code.",191,[[],["u64",15]]],[11,"tag","","Get this abbreviation\'s tag.",191,[[],["dwtag",3]]],[11,"has_children","","Return true if this abbreviation\'s type has children, …",191,[[],["bool",15]]],[11,"attributes","","Get this abbreviation\'s attributes.",191,[[]]],[11,"new","","Construct a new <code>AttributeSpecification</code> from the given …",192,[[["i64",15],["dwform",3],["dwat",3],["option",4]],["attributespecification",3]]],[11,"name","","Get the attribute\'s name.",192,[[],["dwat",3]]],[11,"form","","Get the attribute\'s form.",192,[[],["dwform",3]]],[11,"implicit_const_value","","Get the attribute\'s implicit const value.",192,[[],[["i64",15],["option",4]]]],[11,"size","","Return the size of the attribute, in bytes.",192,[[["unitheader",3]],[["option",4],["usize",15]]]],[11,"segment","","Return the segment selector of this arange.",193,[[],[["u64",15],["option",4]]]],[11,"address","","Return the beginning address of this arange.",193,[[],["u64",15]]],[11,"length","","Return the length of this arange.",193,[[],["u64",15]]],[11,"debug_info_offset","","Return the offset into the .debug_info section for this …",193,[[],["debuginfooffset",3]]],[11,"new","","Construct a new <code>DebugAranges</code> instance from the data in …",194,[[]]],[11,"items","","Iterate the aranges in the <code>.debug_aranges</code> section.",194,[[],["arangeentryiter",3]]],[11,"next","","Advance the iterator and return the next arange.",195,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new <code>DebugLine</code> instance from the data in the …",196,[[]]],[11,"program","","Parse the line number program whose header is at the …",196,[[["option",4],["u8",15],["debuglineoffset",3]],[["incompletelineprogram",3],["result",6]]]],[11,"borrow","","Create a <code>DebugLine</code> section that references the data in …",196,[[],["debugline",3]]],[11,"header","","Get a reference to the header for this state machine\'s …",197,[[],["lineprogramheader",3]]],[11,"next_row","","Parse and execute the next instructions in the line …",197,[[],[["option",4],["result",6]]]],[11,"next_instruction","","Advance the iterator and return the next instruction.",198,[[["lineprogramheader",3]],[["option",4],["result",6]]]],[11,"new","","Create a line number row in the initial state for the …",199,[[["lineprogramheader",3]]]],[11,"address","","\\\"The program-counter value corresponding to a machine …",199,[[],["u64",15]]],[11,"op_index","","An unsigned integer representing the index of an …",199,[[],["u64",15]]],[11,"file_index","","\\\"An unsigned integer indicating the identity of the …",199,[[],["u64",15]]],[11,"file","","The source file corresponding to the current machine …",199,[[["lineprogramheader",3]],[["option",4],["fileentry",3]]]],[11,"line","","\\\"An unsigned integer indicating a source line number. …",199,[[],[["u64",15],["option",4]]]],[11,"column","","\\\"An unsigned integer indicating a column number within a …",199,[[],["columntype",4]]],[11,"is_stmt","","\\\"A boolean indicating that the current instruction is a …",199,[[],["bool",15]]],[11,"basic_block","","\\\"A boolean indicating that the current instruction is the …",199,[[],["bool",15]]],[11,"end_sequence","","\\\"A boolean indicating that the current address is that of …",199,[[],["bool",15]]],[11,"prologue_end","","\\\"A boolean indicating that the current address is one (of …",199,[[],["bool",15]]],[11,"epilogue_begin","","\\\"A boolean indicating that the current address is one (of …",199,[[],["bool",15]]],[11,"isa","","Tag for the current instruction set architecture.",199,[[],["u64",15]]],[11,"discriminator","","\\\"An unsigned integer identifying the block to which the …",199,[[],["u64",15]]],[11,"execute","","Execute the given instruction, and return true if a new …",199,[[["lineinstruction",4]],["bool",15]]],[11,"reset","","Perform any reset that was required after copying the …",199,[[["lineprogramheader",3]]]],[11,"offset","","Return the offset of the line number program header in …",200,[[],["debuglineoffset",3]]],[11,"unit_length","","Return the length of the line number program and header, …",200,[[]]],[11,"encoding","","Return the encoding parameters for this header\'s line …",200,[[],["encoding",3]]],[11,"version","","Get the version of this header\'s line program.",200,[[],["u16",15]]],[11,"header_length","","Get the length of the encoded line number program header, …",200,[[]]],[11,"address_size","","Get the size in bytes of a target machine address.",200,[[],["u8",15]]],[11,"format","","Whether this line program is encoded in 64- or 32-bit …",200,[[],["format",4]]],[11,"line_encoding","","Get the line encoding parameters for this header\'s line …",200,[[],["lineencoding",3]]],[11,"minimum_instruction_length","","Get the minimum instruction length any instruction in …",200,[[],["u8",15]]],[11,"maximum_operations_per_instruction","","Get the maximum number of operations each instruction in …",200,[[],["u8",15]]],[11,"default_is_stmt","","Get the default value of the <code>is_stmt</code> register for this …",200,[[],["bool",15]]],[11,"line_base","","Get the line base for this header\'s line program.",200,[[],["i8",15]]],[11,"line_range","","Get the line range for this header\'s line program.",200,[[],["u8",15]]],[11,"opcode_base","","Get opcode base for this header\'s line program.",200,[[],["u8",15]]],[11,"standard_opcode_lengths","","An array of <code>u8</code> that specifies the number of LEB128 …",200,[[]]],[11,"directory_entry_format","","Get the format of a directory entry.",200,[[]]],[11,"include_directories","","Get the set of include directories for this header\'s line …",200,[[]]],[11,"directory","","The include directory with the given directory index.",200,[[["u64",15]],[["attributevalue",4],["option",4]]]],[11,"file_name_entry_format","","Get the format of a file name entry.",200,[[]]],[11,"file_has_timestamp","","Return true if the file entries may have valid timestamps.",200,[[],["bool",15]]],[11,"file_has_size","","Return true if the file entries may have valid sizes.",200,[[],["bool",15]]],[11,"file_has_md5","","Return true if the file name entry format contains an MD5 …",200,[[],["bool",15]]],[11,"file_names","","Get the list of source files that appear in this header\'s …",200,[[]]],[11,"file","","The source file with the given file index.",200,[[["u64",15]],[["option",4],["fileentry",3]]]],[11,"raw_program_buf","","Get the raw, un-parsed <code>EndianSlice</code> containing this …",200,[[]]],[11,"instructions","","Iterate over the instructions in this header\'s line …",200,[[],["lineinstructions",3]]],[11,"header","","Retrieve the <code>LineProgramHeader</code> for this program.",201,[[],["lineprogramheader",3]]],[11,"rows","","Construct a new <code>LineRows</code> for executing this program to …",201,[[],[["incompletelineprogram",3],["linerows",3]]]],[11,"sequences","","Execute the line number program, completing the …",201,[[],["result",6]]],[11,"header","","Retrieve the <code>LineProgramHeader</code> for this program.",202,[[],["lineprogramheader",3]]],[11,"resume_from","","Construct a new <code>LineRows</code> for executing the subset of the …",202,[[["linesequence",3]],[["linerows",3],["completelineprogram",3]]]],[11,"path_name","","A slice containing the full or relative path name of a …",203,[[],["attributevalue",4]]],[11,"directory_index","","An unsigned LEB128 number representing the directory …",203,[[],["u64",15]]],[11,"directory","","Get this file\'s directory.",203,[[["lineprogramheader",3]],[["attributevalue",4],["option",4]]]],[11,"timestamp","","The implementation-defined time of last modification of …",203,[[],["u64",15]]],[11,"size","","The size of the file in bytes, or 0 if not available.",203,[[],["u64",15]]],[11,"md5","","A 16-byte MD5 digest of the file contents.",203,[[]]],[11,"new","","Construct a new <code>DebugLoc</code> instance from the data in the …",204,[[]]],[11,"new","","Construct a new <code>DebugLocLists</code> instance from the data in …",205,[[]]],[11,"default_for_encoding_and_file","gimli","Returns a <code>DebugLocListsBase</code> with the default value of …",145,[[["dwarffiletype",4],["encoding",3]],["debugloclistsbase",3]]],[11,"new","gimli::read","Construct a new <code>LocationLists</code> instance from the data in …",206,[[["debugloc",3],["debugloclists",3]],["locationlists",3]]],[11,"borrow","","Create a <code>LocationLists</code> that references the data in <code>self</code>.",206,[[],["locationlists",3]]],[11,"locations","","Iterate over the <code>LocationListEntry</code>s starting at the given …",206,[[["debugaddrbase",3],["u64",15],["debugaddr",3],["locationlistsoffset",3],["encoding",3]],[["loclistiter",3],["result",6]]]],[11,"locations_dwo","","Similar to <code>locations</code>, but with special handling for .dwo …",206,[[["debugaddrbase",3],["u64",15],["debugaddr",3],["locationlistsoffset",3],["encoding",3]],[["loclistiter",3],["result",6]]]],[11,"raw_locations","","Iterate over the raw <code>LocationListEntry</code>s starting at the …",206,[[["locationlistsoffset",3],["encoding",3]],[["result",6],["rawloclistiter",3]]]],[11,"raw_locations_dwo","","Similar to <code>raw_locations</code>, but with special handling for …",206,[[["locationlistsoffset",3],["encoding",3]],[["result",6],["rawloclistiter",3]]]],[11,"get_offset","","Returns the <code>.debug_loclists</code> offset at the given <code>base</code> and …",206,[[["debugloclistsindex",3],["debugloclistsbase",3],["encoding",3]],[["result",6],["locationlistsoffset",3]]]],[11,"lookup_offset_id","","Call <code>Reader::lookup_offset_id</code> for each section, and …",206,[[["readeroffsetid",3]],["option",4]]],[11,"next","","Advance the iterator to the next location.",207,[[],[["option",4],["result",6]]]],[11,"next","","Advance the iterator to the next location.",208,[[],[["result",6],["option",4]]]],[11,"is_empty","","Return true if the piece is empty.",103,[[],["bool",15]]],[11,"parse","","Parse a single DWARF expression operation.",80,[[["encoding",3]],[["result",6],["operation",4]]]],[11,"evaluation","","Create an evaluation for this expression.",114,[[["encoding",3]],["evaluation",3]]],[11,"operations","","Return an iterator for the operations in the expression.",114,[[["encoding",3]],["operationiter",3]]],[11,"next","","Read the next operation in an expression.",209,[[],[["result",6],["option",4]]]],[11,"offset_from","","Return the current byte offset of the iterator.",209,[[["expression",3]]]],[11,"new","","Create a new DWARF expression evaluator.",210,[[["encoding",3]],["evaluation",3]]],[11,"set_initial_value","","Set an initial value to be pushed on the DWARF expression …",210,[[["u64",15]]]],[11,"set_object_address","","Set the enclosing object\'s address, as used by …",210,[[["u64",15]]]],[11,"set_max_iterations","","Set the maximum number of iterations to be allowed by the …",210,[[["u32",15]]]],[11,"result","","Get the result of this <code>Evaluation</code>.",210,[[],[["piece",3],["vec",3]]]],[11,"evaluate","","Evaluate a DWARF expression.  This method should only …",210,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_memory","","Resume the <code>Evaluation</code> with the provided memory <code>value</code>.  …",210,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_register","","Resume the <code>Evaluation</code> with the provided <code>register</code> value.  …",210,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_frame_base","","Resume the <code>Evaluation</code> with the provided <code>frame_base</code>.  This …",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_tls","","Resume the <code>Evaluation</code> with the provided <code>value</code>.  This will …",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_call_frame_cfa","","Resume the <code>Evaluation</code> with the provided <code>cfa</code>.  This will …",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_at_location","","Resume the <code>Evaluation</code> with the provided <code>bytes</code>.  This will …",210,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_entry_value","","Resume the <code>Evaluation</code> with the provided <code>entry_value</code>.  …",210,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_parameter_ref","","Resume the <code>Evaluation</code> with the provided <code>parameter_value</code>.  …",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_relocated_address","","Resume the <code>Evaluation</code> with the provided relocated <code>address</code>…",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_indexed_address","","Resume the <code>Evaluation</code> with the provided indexed <code>address</code>.  …",210,[[["u64",15]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_base_type","","Resume the <code>Evaluation</code> with the provided <code>base_type</code>.  This …",210,[[["valuetype",4]],[["result",6],["evaluationresult",4]]]],[11,"name","","Returns the name this entry refers to.",211,[[]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the …",211,[[],["debuginfooffset",3]]],[11,"die_offset","","Returns the offset into the compilation unit for the …",211,[[],["unitoffset",3]]],[11,"new","","Construct a new <code>DebugPubNames</code> instance from the data in …",212,[[]]],[11,"items","","Iterate the pubnames in the <code>.debug_pubnames</code> section.",212,[[],["pubnamesentryiter",3]]],[11,"next","","Advance the iterator and return the next pubname.",213,[[],[["result",6],["option",4]]]],[11,"name","","Returns the name of the type this entry refers to.",214,[[]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the …",214,[[],["debuginfooffset",3]]],[11,"die_offset","","Returns the offset into the compilation unit for the …",214,[[],["unitoffset",3]]],[11,"new","","Construct a new <code>DebugPubTypes</code> instance from the data in …",215,[[]]],[11,"items","","Iterate the pubtypes in the <code>.debug_pubtypes</code> section.",215,[[],["pubtypesentryiter",3]]],[11,"next","","Advance the iterator and return the next pubtype.",216,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new <code>DebugRanges</code> instance from the data in the …",217,[[]]],[11,"new","","Construct a new <code>DebugRngLists</code> instance from the data in …",218,[[]]],[11,"default_for_encoding_and_file","gimli","Returns a <code>DebugRngListsBase</code> with the default value of …",150,[[["dwarffiletype",4],["encoding",3]],["debugrnglistsbase",3]]],[11,"new","gimli::read","Construct a new <code>RangeLists</code> instance from the data in the …",219,[[["debugranges",3],["debugrnglists",3]],["rangelists",3]]],[11,"borrow","","Create a <code>RangeLists</code> that references the data in <code>self</code>.",219,[[],["rangelists",3]]],[11,"ranges","","Iterate over the <code>Range</code> list entries starting at the given …",219,[[["rangelistsoffset",3],["debugaddrbase",3],["u64",15],["debugaddr",3],["encoding",3]],[["result",6],["rnglistiter",3]]]],[11,"raw_ranges","","Iterate over the <code>RawRngListEntry</code>ies starting at the given …",219,[[["encoding",3],["rangelistsoffset",3]],[["rawrnglistiter",3],["result",6]]]],[11,"get_offset","","Returns the <code>.debug_rnglists</code> offset at the given <code>base</code> and …",219,[[["debugrnglistsindex",3],["debugrnglistsbase",3],["encoding",3]],[["result",6],["rangelistsoffset",3]]]],[11,"lookup_offset_id","","Call <code>Reader::lookup_offset_id</code> for each section, and …",219,[[["readeroffsetid",3]],["option",4]]],[11,"next","","Advance the iterator to the next range.",220,[[],[["result",6],["option",4]]]],[11,"next","","Advance the iterator to the next range.",221,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new <code>DebugStr</code> instance from the data in the …",222,[[]]],[11,"get_str","","Lookup a string from the <code>.debug_str</code> section by …",222,[[["debugstroffset",3]],["result",6]]],[11,"borrow","","Create a <code>DebugStr</code> section that references the data in <code>self</code>…",222,[[],["debugstr",3]]],[11,"get_str_offset","","Returns the <code>.debug_str</code> offset at the given <code>base</code> and <code>index</code>.",223,[[["debugstroffsetsbase",3],["debugstroffsetsindex",3],["format",4]],[["debugstroffset",3],["result",6]]]],[11,"borrow","","Create a <code>DebugStrOffsets</code> section that references the data …",223,[[],["debugstroffsets",3]]],[11,"default_for_encoding_and_file","gimli","Returns a <code>DebugStrOffsetsBase</code> with the default value of …",153,[[["dwarffiletype",4],["encoding",3]],["debugstroffsetsbase",3]]],[11,"get_str","gimli::read","Lookup a string from the <code>.debug_line_str</code> section by …",224,[[["debuglinestroffset",3]],["result",6]]],[11,"borrow","","Create a <code>DebugLineStr</code> section that references the data in …",224,[[],["debuglinestr",3]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the …",155,[[["unitheader",3]],[["option",4],["unitoffset",3]]]],[11,"to_unit_offset","","Convert an offset to be relative to the start of the …",141,[[["unitheader",3]],[["option",4],["unitoffset",3]]]],[11,"to_debug_info_offset","gimli::read","Convert an offset to be relative to the start of the …",125,[[["unitheader",3]],[["debuginfooffset",3],["option",4]]]],[11,"to_debug_types_offset","","Convert an offset to be relative to the start of the …",125,[[["unitheader",3]],[["option",4],["debugtypesoffset",3]]]],[11,"new","","Construct a new <code>DebugInfo</code> instance from the data in the …",225,[[]]],[11,"units","","Iterate the units in this <code>.debug_info</code> section.",225,[[],["debuginfounitheadersiter",3]]],[11,"header_from_offset","","Get the UnitHeader located at offset from this …",225,[[["debuginfooffset",3]],[["unitheader",3],["result",6]]]],[11,"borrow","","Create a <code>DebugInfo</code> section that references the data in …",225,[[],["debuginfo",3]]],[11,"next","","Advance the iterator to the next unit header.",226,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new <code>UnitHeader</code>.",227,[[["encoding",3],["unitsectionoffset",4],["unittype",4],["debugabbrevoffset",3]]]],[11,"offset","","Get the offset of this unit within its section.",227,[[],["unitsectionoffset",4]]],[11,"size_of_header","","Return the serialized size of the common unit header for …",227,[[],["usize",15]]],[11,"unit_length","","Get the length of the debugging info for this compilation …",227,[[]]],[11,"length_including_self","","Get the length of the debugging info for this compilation …",227,[[]]],[11,"encoding","","Return the encoding parameters for this unit.",227,[[],["encoding",3]]],[11,"version","","Get the DWARF version of the debugging info for this …",227,[[],["u16",15]]],[11,"type_","","Get the UnitType of this unit.",227,[[],["unittype",4]]],[11,"debug_abbrev_offset","","The offset into the <code>.debug_abbrev</code> section for this …",227,[[],["debugabbrevoffset",3]]],[11,"address_size","","The size of addresses (in bytes) in this compilation unit.",227,[[],["u8",15]]],[11,"format","","Whether this compilation unit is encoded in 64- or 32-bit …",227,[[],["format",4]]],[11,"header_size","","The serialized size of the header for this compilation …",227,[[]]],[11,"range","","Get the underlying bytes for the supplied range.",227,[[["range",3],["unitoffset",3]],["result",6]]],[11,"range_from","","Get the underlying bytes for the supplied range.",227,[[["rangefrom",3],["unitoffset",3]],["result",6]]],[11,"range_to","","Get the underlying bytes for the supplied range.",227,[[["rangeto",3],["unitoffset",3]],["result",6]]],[11,"entry","","Read the <code>DebuggingInformationEntry</code> at the given offset.",227,[[["abbreviations",3],["unitoffset",3]],[["result",6],["debugginginformationentry",3]]]],[11,"entries","","Navigate this unit\'s <code>DebuggingInformationEntry</code>s.",227,[[["abbreviations",3]],["entriescursor",3]]],[11,"entries_at_offset","","Navigate this compilation unit\'s <code>DebuggingInformationEntry</code>…",227,[[["abbreviations",3],["unitoffset",3]],[["result",6],["entriescursor",3]]]],[11,"entries_tree","","Navigate this unit\'s <code>DebuggingInformationEntry</code>s as a tree …",227,[[["abbreviations",3],["option",4],["unitoffset",3]],[["result",6],["entriestree",3]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information …",227,[[["abbreviations",3],["option",4],["unitoffset",3]],[["entriesraw",3],["result",6]]]],[11,"abbreviations","","Parse this unit\'s abbreviations.",227,[[["debugabbrev",3]],[["result",6],["abbreviations",3]]]],[11,"new","","Construct a new <code>DebuggingInformationEntry</code>.",228,[[["abbreviation",3],["unitoffset",3],["unitheader",3]]]],[11,"code","","Get this entry\'s code.",228,[[],["u64",15]]],[11,"offset","","Get this entry\'s offset.",228,[[],["unitoffset",3]]],[11,"tag","","Get this entry\'s <code>DW_TAG_whatever</code> tag.",228,[[],["dwtag",3]]],[11,"has_children","","Return true if this entry\'s type can have children, false …",228,[[],["bool",15]]],[11,"attrs","","Iterate over this entry\'s set of attributes.",228,[[],["attrsiter",3]]],[11,"attr","","Find the first attribute in this entry which has the …",228,[[["dwat",3]],[["result",6],["option",4]]]],[11,"attr_value_raw","","Find the first attribute in this entry which has the …",228,[[["dwat",3]],[["result",6],["option",4]]]],[11,"attr_value","","Find the first attribute in this entry which has the …",228,[[["dwat",3]],[["result",6],["option",4]]]],[11,"name","","Get this attribute\'s name.",229,[[],["dwat",3]]],[11,"raw_value","","Get this attribute\'s raw value.",229,[[],["attributevalue",4]]],[11,"value","","Get this attribute\'s normalized value.",229,[[],["attributevalue",4]]],[11,"u8_value","","Try to convert this attribute\'s value to a u8.",229,[[],[["option",4],["u8",15]]]],[11,"u16_value","","Try to convert this attribute\'s value to a u16.",229,[[],[["option",4],["u16",15]]]],[11,"udata_value","","Try to convert this attribute\'s value to an unsigned …",229,[[],[["u64",15],["option",4]]]],[11,"sdata_value","","Try to convert this attribute\'s value to a signed integer.",229,[[],[["i64",15],["option",4]]]],[11,"offset_value","","Try to convert this attribute\'s value to an offset.",229,[[],["option",4]]],[11,"exprloc_value","","Try to convert this attribute\'s value to an expression or …",229,[[],[["option",4],["expression",3]]]],[11,"string_value","","Try to return this attribute\'s value as a string slice.",229,[[["debugstr",3]],["option",4]]],[11,"string_value_sup","","Try to return this attribute\'s value as a string slice.",229,[[["debugstr",3],["option",4]],["option",4]]],[11,"u8_value","","Try to convert this attribute\'s value to a u8.",129,[[],[["option",4],["u8",15]]]],[11,"u16_value","","Try to convert this attribute\'s value to a u16.",129,[[],[["option",4],["u16",15]]]],[11,"udata_value","","Try to convert this attribute\'s value to an unsigned …",129,[[],[["u64",15],["option",4]]]],[11,"sdata_value","","Try to convert this attribute\'s value to a signed integer.",129,[[],[["i64",15],["option",4]]]],[11,"offset_value","","Try to convert this attribute\'s value to an offset.",129,[[],["option",4]]],[11,"exprloc_value","","Try to convert this attribute\'s value to an expression or …",129,[[],[["option",4],["expression",3]]]],[11,"string_value","","Try to return this attribute\'s value as a string slice.",129,[[["debugstr",3]],["option",4]]],[11,"string_value_sup","","Try to return this attribute\'s value as a string slice.",129,[[["debugstr",3],["option",4]],["option",4]]],[11,"next","","Advance the iterator and return the next attribute.",230,[[],[["result",6],["option",4]]]],[11,"is_empty","","Return true if there is no more input.",231,[[],["bool",15]]],[11,"next_offset","","Return the unit offset at which the reader will read next.",231,[[],["unitoffset",3]]],[11,"next_depth","","Return the depth of the next entry.",231,[[],["isize",15]]],[11,"read_abbreviation","","Read an abbreviation code and lookup the corresponding …",231,[[],[["option",4],["result",6]]]],[11,"read_attribute","","Read an attribute.",231,[[["attributespecification",3]],[["result",6],["attribute",3]]]],[11,"current","","Get a reference to the entry that the cursor is currently …",232,[[],[["option",4],["debugginginformationentry",3]]]],[11,"next_entry","","Move the cursor to the next DIE in the tree.",232,[[],[["option",4],["result",6]]]],[11,"next_dfs","","Move the cursor to the next DIE in the tree in DFS order.",232,[[],[["option",4],["result",6]]]],[11,"next_sibling","","Move the cursor to the next sibling DIE of the current …",232,[[],[["option",4],["result",6]]]],[11,"root","","Returns the root node of the tree.",233,[[],[["result",6],["entriestreenode",3]]]],[11,"entry","","Returns the current entry in the tree.",234,[[],["debugginginformationentry",3]]],[11,"children","","Create an iterator for the children of the current entry.",234,[[],["entriestreeiter",3]]],[11,"next","","Returns an <code>EntriesTreeNode</code> for the next child entry.",235,[[],[["option",4],["result",6]]]],[11,"new","","Construct a new <code>DebugTypes</code> instance from the data in the …",236,[[]]],[11,"borrow","","Create a <code>DebugTypes</code> section that references the data in …",236,[[],["debugtypes",3]]],[11,"units","","Iterate the type-units in this <code>.debug_types</code> section.",236,[[],["debugtypesunitheadersiter",3]]],[11,"next","","Advance the iterator to the next type unit header.",237,[[],[["result",6],["option",4]]]],[11,"bit_size","","The size in bits of a value for this type.",130,[[["u64",15]],["u32",15]]],[11,"from_encoding","","Construct a <code>ValueType</code> from the attributes of a base type …",130,[[["u64",15],["dwate",3]],[["option",4],["valuetype",4]]]],[11,"from_entry","","Construct a <code>ValueType</code> from a base type DIE.",130,[[["debugginginformationentry",3]],[["result",6],["option",4]]]],[11,"value_type","","Return the <code>ValueType</code> corresponding to this <code>Value</code>.",131,[[],["valuetype",4]]],[11,"parse","","Read a <code>Value</code> with the given <code>value_type</code> from a <code>Reader</code>.",131,[[["valuetype",4],["reader",8]],[["result",6],["value",4]]]],[11,"to_u64","","Convert a <code>Value</code> to a <code>u64</code>.",131,[[["u64",15]],[["result",6],["u64",15]]]],[11,"from_u64","","Create a <code>Value</code> with the given <code>value_type</code> from a <code>u64</code> value.",131,[[["valuetype",4],["u64",15]],[["result",6],["value",4]]]],[11,"convert","","Convert a <code>Value</code> to the given <code>value_type</code>.",131,[[["valuetype",4],["u64",15]],[["result",6],["value",4]]]],[11,"reinterpret","","Reinterpret the bits in a <code>Value</code> as the given <code>value_type</code>.",131,[[["valuetype",4],["u64",15]],[["result",6],["value",4]]]],[11,"abs","","Perform an absolute value operation.",131,[[["u64",15]],[["result",6],["value",4]]]],[11,"neg","","Perform a negation operation.",131,[[["u64",15]],[["result",6],["value",4]]]],[11,"add","","Perform an addition operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"sub","","Perform a subtraction operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"mul","","Perform a multiplication operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"div","","Perform a division operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"rem","","Perform a remainder operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"not","","Perform a bitwise not operation.",131,[[["u64",15]],[["result",6],["value",4]]]],[11,"and","","Perform a bitwise and operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"or","","Perform a bitwise or operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"xor","","Perform a bitwise exclusive-or operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"shl","","Perform a shift left operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"shr","","Perform a logical shift right operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"shra","","Perform an arithmetic shift right operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"eq","","Perform the <code>==</code> relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"ge","","Perform the <code>>=</code> relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"gt","","Perform the <code>></code> relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"le","","Perform the `<= relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"lt","","Perform the `< relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]],[11,"ne","","Perform the `!= relational operation.",131,[[["u64",15],["value",4]],[["result",6],["value",4]]]]],"p":[[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[3,"DwEhPe"],[8,"UnwindOffset"],[8,"UnwindSection"],[3,"BaseAddresses"],[3,"SectionBaseAddresses"],[4,"CieOrFde"],[4,"CfaRule"],[13,"RegisterAndOffset"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"DefCfa"],[13,"DefCfaSf"],[13,"DefCfaRegister"],[13,"DefCfaOffset"],[13,"DefCfaOffsetSf"],[13,"DefCfaExpression"],[13,"Undefined"],[13,"SameValue"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"Register"],[13,"Expression"],[13,"ValExpression"],[13,"Restore"],[13,"ArgsSize"],[4,"Pointer"],[3,"Dwarf"],[3,"Unit"],[3,"ReaderOffsetId"],[8,"ReaderOffset"],[8,"Reader"],[8,"LineProgram"],[4,"LineInstruction"],[4,"ColumnType"],[3,"LineSequence"],[3,"FileEntryFormat"],[4,"RawLocListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"DefaultLocation"],[13,"StartEnd"],[13,"StartLength"],[3,"LocationListEntry"],[4,"DieReference"],[4,"Operation"],[13,"Deref"],[13,"Pick"],[13,"PlusConstant"],[13,"Bra"],[13,"Skip"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"Register"],[13,"RegisterOffset"],[13,"FrameOffset"],[13,"Call"],[13,"Piece"],[13,"ImplicitValue"],[13,"ImplicitPointer"],[13,"EntryValue"],[13,"ParameterRef"],[13,"Address"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[4,"Location"],[13,"Register"],[13,"Address"],[13,"Value"],[13,"Bytes"],[13,"ImplicitPointer"],[3,"Piece"],[4,"EvaluationResult"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[3,"Expression"],[4,"RawRngListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[3,"Range"],[3,"UnitOffset"],[4,"UnitType"],[13,"Type"],[13,"SplitType"],[4,"AttributeValue"],[4,"ValueType"],[4,"Value"],[4,"Error"],[8,"Section"],[4,"Format"],[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugInfoOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypesOffset"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[4,"UnitSectionOffset"],[4,"SectionId"],[3,"DwoId"],[4,"DwarfFileType"],[8,"Endianity"],[4,"RunTimeEndian"],[3,"Arm"],[3,"X86"],[3,"X86_64"],[3,"LittleEndian"],[3,"BigEndian"],[3,"DebugAddr"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"CfiEntriesIter"],[3,"Augmentation"],[3,"CommonInformationEntry"],[3,"PartialFrameDescriptionEntry"],[3,"FrameDescriptionEntry"],[3,"UninitializedUnwindContext"],[3,"UnwindContext"],[3,"UnwindTable"],[3,"RegisterRuleIter"],[3,"UnwindTableRow"],[3,"CallFrameInstructionIter"],[3,"RangeIter"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"Abbreviations"],[3,"Abbreviation"],[3,"AttributeSpecification"],[3,"ArangeEntry"],[3,"DebugAranges"],[3,"ArangeEntryIter"],[3,"DebugLine"],[3,"LineRows"],[3,"LineInstructions"],[3,"LineRow"],[3,"LineProgramHeader"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"FileEntry"],[3,"DebugLoc"],[3,"DebugLocLists"],[3,"LocationLists"],[3,"RawLocListIter"],[3,"LocListIter"],[3,"OperationIter"],[3,"Evaluation"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"RangeLists"],[3,"RawRngListIter"],[3,"RngListIter"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"DebugInfoUnitHeadersIter"],[3,"UnitHeader"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[3,"AttrsIter"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"DebugTypes"],[3,"DebugTypesUnitHeadersIter"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google\'s high-performance …","i":[[0,"raw","hashbrown","Experimental and unsafe <code>RawTable</code> API. This module is only …",null,null],[3,"Bucket","hashbrown::raw","A reference to a hash table bucket containing a <code>T</code>.",null,null],[3,"RawTable","","A raw hash table with an unsafe API.",null,null],[3,"RawIter","","Iterator which returns a raw pointer to every full bucket …",null,null],[3,"RawIntoIter","","Iterator which consumes a table and returns elements.",null,null],[3,"RawDrain","","Iterator which consumes elements without freeing the …",null,null],[3,"RawIterHash","","Iterator over occupied buckets that could match a given …",null,null],[0,"hash_map","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[4,"DefaultHashBuilder","hashbrown::hash_map","Dummy default hasher for <code>HashMap</code>.",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"Iter","","An iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HashMap</code>.",null,null],[3,"Keys","","An iterator over the keys of a <code>HashMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>HashMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>HashMap</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashMap</code> which don\'t …",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>HashMap</code>.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",1,null],[13,"Vacant","","A vacant entry.",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[0,"hash_set","hashbrown","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>HashSet</code>.",null,null],[3,"IntoIter","","An owning iterator over the items of a <code>HashSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>HashSet</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashSet</code> which don\'t …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of <code>HashSet</code>…",null,null],[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"HashSet","","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",2,null],[13,"AllocError","","The memory allocator returned an error",2,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",3,null],[11,"from","hashbrown::raw","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","hashbrown::hash_map","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","hashbrown::hash_set","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"into_iter","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"into_iter","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"into_iter","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"into_iter","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","hashbrown","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","hashbrown::hash_map","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",2,[[["formatter",3]],["result",6]]],[11,"eq","hashbrown::hash_map","",11,[[],["bool",15]]],[11,"eq","hashbrown::hash_set","",26,[[],["bool",15]]],[11,"eq","hashbrown","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"ne","","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"drop","hashbrown::raw","",5,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","hashbrown::hash_map","",18,[[]]],[11,"drop","hashbrown::hash_set","",30,[[]]],[11,"index","hashbrown::hash_map","Returns a reference to the value corresponding to the …",11,[[]]],[11,"len","","",12,[[],["usize",15]]],[11,"len","","",13,[[],["usize",15]]],[11,"len","","",14,[[],["usize",15]]],[11,"len","","",15,[[],["usize",15]]],[11,"len","","",16,[[],["usize",15]]],[11,"len","","",19,[[],["usize",15]]],[11,"len","","",17,[[],["usize",15]]],[11,"len","hashbrown::hash_set","",27,[[],["usize",15]]],[11,"len","","",28,[[],["usize",15]]],[11,"len","","",29,[[],["usize",15]]],[11,"from_iter","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"from_iter","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"next","hashbrown::raw","",6,[[],[["bucket",3],["option",4]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["bucket",3],["option",4]]]],[11,"next","hashbrown::hash_map","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","hashbrown::hash_set","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"into_iter","hashbrown::raw","",5,[[],["rawintoiter",3]]],[11,"into_iter","hashbrown::hash_map","Creates a consuming iterator, that is, one that moves …",11,[[],["intoiter",3]]],[11,"into_iter","hashbrown::hash_set","Creates a consuming iterator, that is, one that moves …",26,[[],["intoiter",3]]],[11,"extend","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"clone","hashbrown::raw","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone_from","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","hashbrown::hash_map","",11,[[]]],[11,"clone_from","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","hashbrown::hash_set","",26,[[]]],[11,"clone_from","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","hashbrown","",2,[[],["tryreserveerror",4]]],[11,"default","hashbrown::hash_map","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …",11,[[]]],[11,"default","hashbrown::hash_set","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …",26,[[]]],[11,"as_ptr","hashbrown::raw","",4,[[]]],[11,"drop","","",4,[[]]],[11,"read","","",4,[[]]],[11,"write","","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_mut","","",4,[[]]],[11,"copy_from_nonoverlapping","","",4,[[]]],[11,"new","","Creates a new empty hash table without allocating any …",5,[[]]],[11,"try_with_capacity","","Attempts to allocate a new hash table with at least …",5,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"with_capacity","","Allocates a new hash table with at least enough capacity …",5,[[["usize",15]]]],[11,"data_end","","Returns pointer to one past last element of data table.",5,[[],["nonnull",3]]],[11,"bucket_index","","Returns the index of a bucket from a <code>Bucket</code>.",5,[[["bucket",3]],["usize",15]]],[11,"bucket","","Returns a pointer to an element in the table.",5,[[["usize",15]],["bucket",3]]],[11,"erase_no_drop","","Erases an element from the table without dropping it.",5,[[["bucket",3]]]],[11,"erase","","Erases an element from the table, dropping it in place.",5,[[["bucket",3]]]],[11,"erase_entry","","Finds and erases an element from the table, dropping it …",5,[[["u64",15]],["bool",15]]],[11,"remove","","Removes an element from the table, returning it.",5,[[["bucket",3]]]],[11,"remove_entry","","Finds and removes an element from the table, returning it.",5,[[["u64",15]],["option",4]]],[11,"clear_no_drop","","Marks all table buckets as empty without dropping their …",5,[[]]],[11,"clear","","Removes all elements from the table without freeing the …",5,[[]]],[11,"shrink_to","","Shrinks the table to fit <code>max(self.len(), min_size)</code> …",5,[[["usize",15]]]],[11,"reserve","","Ensures that at least <code>additional</code> items can be inserted …",5,[[["usize",15]]]],[11,"try_reserve","","Tries to ensure that at least <code>additional</code> items can be …",5,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"insert","","Inserts a new element into the table, and returns its raw …",5,[[["u64",15]],["bucket",3]]],[11,"insert_entry","","Inserts a new element into the table, and returns a …",5,[[["u64",15]]]],[11,"insert_no_grow","","Inserts a new element into the table, without growing the …",5,[[["u64",15]],["bucket",3]]],[11,"replace_bucket_with","","Temporary removes a bucket, applying the given function …",5,[[["bucket",3]],["bool",15]]],[11,"find","","Searches for an element in the table.",5,[[["u64",15]],[["bucket",3],["option",4]]]],[11,"get","","Gets a reference to an element in the table.",5,[[["u64",15]],["option",4]]],[11,"get_mut","","Gets a mutable reference to an element in the table.",5,[[["u64",15]],["option",4]]],[11,"capacity","","Returns the number of elements the map can hold without …",5,[[],["usize",15]]],[11,"len","","Returns the number of elements in the table.",5,[[],["usize",15]]],[11,"buckets","","Returns the number of buckets in the table.",5,[[],["usize",15]]],[11,"iter","","Returns an iterator over every element in the table. It …",5,[[],["rawiter",3]]],[11,"iter_hash","","Returns an iterator over occupied buckets that could …",5,[[["u64",15]],["rawiterhash",3]]],[11,"drain","","Returns an iterator which removes all elements from the …",5,[[],["rawdrain",3]]],[11,"drain_iter_from","","Returns an iterator which removes all elements from the …",5,[[["rawiter",3]],["rawdrain",3]]],[11,"into_iter_from","","Returns an iterator which consumes all elements from the …",5,[[["rawiter",3]],["rawintoiter",3]]],[11,"clone_from_with_hasher","","Variant of <code>clone_from</code> to use when a hasher is available.",5,[[]]],[11,"reflect_remove","","Refresh the iterator so that it reflects a removal from …",6,[[["bucket",3]]]],[11,"reflect_insert","","Refresh the iterator so that it reflects an insertion …",6,[[["bucket",3]]]],[11,"iter","","",7,[[],["rawiter",3]]],[11,"iter","","",8,[[],["rawiter",3]]],[11,"with_hasher","hashbrown::hash_map","Creates an empty <code>HashMap</code> which will use the given hash …",11,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",11,[[["usize",15]]]],[11,"hasher","","Returns a reference to the map\'s <code>BuildHasher</code>.",11,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",11,[[],["usize",15]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",11,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",11,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",11,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",11,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",11,[[],["bool",15]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",11,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",11,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",11,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",11,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",11,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",11,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",11,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",11,[[["usize",15]]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",11,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",11,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",11,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",11,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",11,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",11,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",11,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",11,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",11,[[],["rawentrybuilder",3]]],[11,"from_key","","Creates a <code>RawEntryMut</code> from the given key.",20,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a <code>RawEntryMut</code> from the given key and its hash.",20,[[["u64",15]],["rawentrymut",4]]],[11,"from_hash","","Creates a <code>RawEntryMut</code> from the given hash.",20,[[["u64",15]],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",23,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",23,[[["u64",15]],["option",4]]],[11,"from_hash","","Access an entry by hash.",23,[[["u64",15]],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a …",0,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",0,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",0,[[]]],[11,"key","","Gets a reference to the key in the entry.",21,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",21,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in …",21,[[]]],[11,"get","","Gets a reference to the value in the entry.",21,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",21,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",21,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the …",21,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",21,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",21,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",21,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[["u64",15]]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",22,[[["u64",15]]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",1,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",1,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",1,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",1,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",1,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",1,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"key","","Gets a reference to the key in the entry.",24,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",24,[[]]],[11,"get","","Gets a reference to the value in the entry.",24,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",24,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",24,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",24,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The …",24,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to …",24,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",24,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when …",25,[[]]],[11,"into_key","","Take ownership of the key.",25,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",25,[[]]],[11,"with_hasher","hashbrown::hash_set","Creates a new empty hash set which will use the given …",26,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashSet</code> with the specified capacity, …",26,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the set can hold without …",26,[[],["usize",15]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The …",26,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",26,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",26,[[],["bool",15]]],[11,"drain","","Clears the set, returning all elements in an iterator.",26,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",26,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",26,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",26,[[]]],[11,"hasher","","Returns a reference to the set\'s <code>BuildHasher</code>.",26,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",26,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",26,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It …",26,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It …",26,[[["usize",15]]]],[11,"difference","","Visits the values representing the difference, i.e., the …",26,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",26,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",26,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",26,[[],["union",3]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",26,[[],["bool",15]]],[11,"get","","Returns a reference to the value in the set, if any, that …",26,[[],["option",4]]],[11,"get_or_insert","","Inserts the given <code>value</code> into the set if it is not …",26,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given <code>value</code> into the set if …",26,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the set if the given …",26,[[]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",26,[[],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",26,[[],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",26,[[],["bool",15]]],[11,"insert","","Adds a value to the set.",26,[[],["bool",15]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",26,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",26,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",26,[[],["option",4]]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"RawIterHash"],[4,"DefaultHashBuilder"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"heck":{"doc":"<strong>heck</strong> is a case conversion library.","i":[[8,"CamelCase","heck","This trait defines a camel case conversion.",null,null],[10,"to_camel_case","","Convert this type to camel case.",0,[[]]],[8,"KebabCase","","This trait defines a kebab case conversion.",null,null],[10,"to_kebab_case","","Convert this type to kebab case.",1,[[]]],[8,"MixedCase","","This trait defines a mixed case conversion.",null,null],[10,"to_mixed_case","","Convert this type to mixed case.",2,[[]]],[8,"ShoutyKebabCase","","This trait defines a shouty kebab case conversion.",null,null],[10,"to_shouty_kebab_case","","Convert this type to shouty kebab case.",3,[[]]],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",null,null],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",4,[[]]],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase. …",null,null],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",5,[[]]],[8,"SnakeCase","","This trait defines a snake case conversion.",null,null],[10,"to_snake_case","","Convert this type to snake case.",6,[[]]],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See …",null,null],[10,"to_snek_case","","Convert this type to snek case.",7,[[]]],[8,"TitleCase","","This trait defines a title case conversion.",null,null],[10,"to_title_case","","Convert this type to title case.",8,[[]]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutyKebabCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]},\
"hound":{"doc":"Hound, a wav encoding and decoding library.","i":[[3,"WavReader","hound","A reader that reads the WAVE format from the underlying …",null,null],[3,"WavIntoSamples","","An iterator that yields samples of type <code>S</code> read from a …",null,null],[3,"WavSamples","","An iterator that yields samples of type <code>S</code> read from a …",null,null],[5,"read_wave_header","","Reads the RIFF WAVE header, returns the supposed file …",null,[[],[["result",6],["u64",15]]]],[3,"SampleWriter16","","A writer that specifically only writes integer samples of …",null,null],[3,"WavWriter","","A writer that accepts samples and writes the WAVE format.",null,null],[8,"Sample","","A type that can be used to represent audio samples.",null,null],[10,"write","","Writes the audio sample to the WAVE data chunk.",0,[[["u16",15]],["result",6]]],[10,"read","","Reads the audio sample from the WAVE data chunk.",0,[[["sampleformat",4],["u16",15]],["result",6]]],[10,"as_i16","","Cast the sample to a 16-bit sample.",0,[[],["i16",15]]],[4,"SampleFormat","","Specifies whether a sample is stored as an \\\"IEEE Float\\\" …",null,null],[13,"Float","","Wave files with the <code>WAVE_FORMAT_IEEE_FLOAT</code> format tag …",1,null],[13,"Int","","Wave files with the <code>WAVE_FORMAT_PCM</code> format tag store …",1,null],[3,"WavSpec","","Specifies properties of the audio data.",null,null],[12,"channels","","The number of channels.",2,null],[12,"sample_rate","","The number of samples per second.",2,null],[12,"bits_per_sample","","The number of bits per sample.",2,null],[12,"sample_format","","Whether the wav\'s samples are float or integer values.",2,null],[4,"Error","","The error type for operations on <code>WavReader</code> and <code>WavWriter</code>.",null,null],[13,"IoError","","An IO error occured in the underlying reader or writer.",3,null],[13,"FormatError","","Ill-formed WAVE data was encountered.",3,null],[13,"TooWide","","The sample has more bits than the destination type.",3,null],[13,"UnfinishedSample","","The number of samples written is not a multiple of the …",3,null],[13,"Unsupported","","The format is not supported.",3,null],[13,"InvalidSampleFormat","","The sample format is different than the destination …",3,null],[6,"Result","","A type for results generated by Hound where the error …",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","","",7,[[]]],[11,"from","","",3,[[["error",3]],["error",4]]],[11,"next","","",5,[[],[["option",4],["result",6]]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],[["option",4],["result",6]]]],[11,"size_hint","","",6,[[]]],[11,"clone","","",1,[[],["sampleformat",4]]],[11,"clone","","",2,[[],["wavspec",3]]],[11,"eq","","",1,[[["sampleformat",4]],["bool",15]]],[11,"eq","","",2,[[["wavspec",3]],["bool",15]]],[11,"ne","","",2,[[["wavspec",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",3,[[],["str",15]]],[11,"cause","","",3,[[],[["error",8],["option",4]]]],[11,"new","","Attempts to create a reader that reads the WAVE format.",4,[[],[["wavreader",3],["result",6]]]],[11,"spec","","Returns information about the WAVE file.",4,[[],["wavspec",3]]],[11,"samples","","Returns an iterator over all samples.",4,[[],[["wavsamples",3],["sample",8]]]],[11,"into_samples","","Same as <code>samples</code>, but takes ownership of the <code>WavReader</code>.",4,[[],[["wavintosamples",3],["sample",8]]]],[11,"duration","","Returns the duration of the file in samples.",4,[[],["u32",15]]],[11,"len","","Returns the number of values that the sample iterator …",4,[[],["u32",15]]],[11,"into_inner","","Destroys the <code>WavReader</code> and returns the underlying reader.",4,[[]]],[11,"seek","","Seek to the given time within the file.",4,[[["u32",15]],["result",6]]],[11,"open","","Attempts to create a reader that reads from the specified …",4,[[["asref",8],["path",3]],[["result",6],["wavreader",3]]]],[11,"new","","Creates a writer that writes the WAVE format to the …",7,[[["wavspec",3]],[["wavwriter",3],["result",6]]]],[11,"write_sample","","Writes a single sample for one channel.",7,[[["sample",8]],["result",6]]],[11,"get_i16_writer","","Create an efficient writer that writes 16-bit integer …",7,[[["u32",15]],["samplewriter16",3]]],[11,"flush","","Updates the WAVE header and flushes the underlying writer.",7,[[],["result",6]]],[11,"finalize","","Updates the WAVE header (which requires knowing all …",7,[[],["result",6]]],[11,"spec","","Returns information about the WAVE file being written.",7,[[],["wavspec",3]]],[11,"duration","","Returns the duration of the file written so far, in …",7,[[],["u32",15]]],[11,"len","","Returns the number of samples in the file written so far.",7,[[],["u32",15]]],[11,"create","","Creates a writer that writes the WAVE format to a file.",7,[[["asref",8],["path",3],["wavspec",3]],[["result",6],["wavwriter",3]]]],[11,"append","","Creates a writer that appends samples to an existing file.",7,[[["asref",8],["path",3]],[["result",6],["wavwriter",3]]]],[11,"new_append","","Creates a writer that appends samples to an existing file …",7,[[],[["wavwriter",3],["result",6]]]],[11,"write_sample","","Writes a single sample for one channel.",8,[[["sample",8]]]],[11,"write_sample_unchecked","","Like <code>write_sample()</code>, but does not perform a bounds check …",8,[[["sample",8]]]],[11,"flush","","Flush the internal buffer to the underlying writer.",8,[[],["result",6]]]],"p":[[8,"Sample"],[4,"SampleFormat"],[3,"WavSpec"],[4,"Error"],[3,"WavReader"],[3,"WavSamples"],[3,"WavIntoSamples"],[3,"WavWriter"],[3,"SampleWriter16"]]},\
"indenter":{"doc":"A few wrappers for the <code>fmt::Write</code> objects that …","i":[[4,"Format","indenter","The set of supported formats for indentation",null,null],[13,"Uniform","","Insert uniform indentation before every line",0,null],[12,"indentation","indenter::Format","The string to insert as indentation",1,null],[13,"Numbered","indenter","Inserts a number before the first line",0,null],[12,"ind","indenter::Format","The index to insert before the first line of output",2,null],[13,"Custom","indenter","A custom indenter which is executed after every newline",0,null],[12,"inserter","indenter::Format","The custom indenter",3,null],[3,"Indented","indenter","Helper struct for efficiently indenting multi line …",null,null],[6,"Inserter","","A callback for <code>Format::Custom</code> used to insert indenation …",null,null],[11,"ind","","Sets the format to <code>Format::Numbered</code> with the provided …",4,[[["usize",15]]]],[11,"with_str","","Sets the format to <code>Format::Uniform</code> with the provided …",4,[[["str",15]]]],[11,"with_format","","Construct an indenter with a user defined format",4,[[["format",4]]]],[5,"indented","","Helper function for creating a default indenter",null,[[],[["indented",3],["sized",8]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"write_str","","",4,[[["str",15]],["result",6]]]],"p":[[4,"Format"],[13,"Uniform"],[13,"Numbered"],[13,"Custom"],[3,"Indented"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","i":[[0,"serde_seq","indexmap","Functions to serialize and deserialize an <code>IndexMap</code> as an …",null,null],[5,"serialize","indexmap::serde_seq","Serializes an <code>IndexMap</code> as an ordered sequence.",null,[[["indexmap",3]],["result",4]]],[5,"deserialize","","Deserializes an <code>IndexMap</code> from an ordered sequence.",null,[[],[["result",4],["indexmap",3]]]],[0,"map","indexmap","<code>IndexMap</code> is a hash table where the iteration order of the …",null,null],[8,"MutableKeys","indexmap::map","Opt-in mutable access to keys.",null,null],[16,"Key","","",0,null],[16,"Value","","",0,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",0,[[],["option",4]]],[10,"retain2","","Scan through each key-value pair in the map and keep …",0,[[]]],[10,"__private_marker","","This method is not useful in itself – it is there to …",0,[[],["privatemarker",3]]],[4,"Entry","","Entry for an existing key-value pair or a vacant location …",null,null],[13,"Occupied","","Existing slot with equivalent key.",1,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>IndexMap</code>. It is part …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>IndexMap</code>. It is part of …",null,null],[3,"IndexMap","","A hash table where the iteration order of the key-value …",null,null],[11,"new","","Create a new map. (Does not allocate.)",2,[[]]],[11,"with_capacity","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[["usize",15]]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[["usize",15]]]],[11,"with_hasher","","Create a new map with <code>hash_builder</code>",2,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",2,[[],["usize",15]]],[11,"hasher","","Return a reference to the map\'s <code>BuildHasher</code>.",2,[[]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[],["bool",15]]],[11,"iter","","Return an iterator over the key-value pairs of the map, …",2,[[],["iter",3]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, …",2,[[],["itermut",3]]],[11,"keys","","Return an iterator over the keys of the map, in their …",2,[[],["keys",3]]],[11,"values","","Return an iterator over the values of the map, in their …",2,[[],["values",3]]],[11,"values_mut","","Return an iterator over mutable references to the the …",2,[[],["valuesmut",3]]],[11,"clear","","Remove all key-value pairs in the map, while preserving …",2,[[]]],[11,"truncate","","Shortens the map, keeping the first <code>len</code> elements and …",2,[[["usize",15]]]],[11,"drain","","Clears the <code>IndexMap</code> in the given index range, returning …",2,[[],["drain",3]]],[11,"split_off","","Splits the collection into two at the given index.",2,[[["usize",15]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more key-value pairs.",2,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the map as much as possible.",2,[[]]],[11,"insert","","Insert a key-value pair in the map.",2,[[],["option",4]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[]]],[11,"entry","","Get the given key’s corresponding entry in the map for …",2,[[],["entry",4]]],[11,"contains_key","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.",2,[[],["bool",15]]],[11,"get","","Return a reference to the value stored for <code>key</code>, if it is …",2,[[],["option",4]]],[11,"get_key_value","","Return references to the key-value pair stored for <code>key</code>, …",2,[[],["option",4]]],[11,"get_full","","Return item index, key and value",2,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the map",2,[[],[["option",4],["usize",15]]]],[11,"get_mut","","",2,[[],["option",4]]],[11,"get_full_mut","","",2,[[],["option",4]]],[11,"remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"swap_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"shift_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"shift_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"pop","","Remove the last key-value pair",2,[[],["option",4]]],[11,"retain","","Scan through each key-value pair in the map and keep …",2,[[]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering …",2,[[]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the …",2,[[]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value …",2,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the map’s key-value pairs in …",2,[[]]],[11,"get_index","","Get a key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"first","","Get the first key-value pair",2,[[],["option",4]]],[11,"first_mut","","Get the first key-value pair, with mutable access to the …",2,[[],["option",4]]],[11,"last","","Get the last key-value pair",2,[[],["option",4]]],[11,"last_mut","","Get the last key-value pair, with mutable access to the …",2,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"swap_indices","","Swaps the position of two key-value pairs in the map.",2,[[["usize",15]]]],[3,"Keys","","An iterator over the keys of a <code>IndexMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>IndexMap</code>.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>IndexMap</code>.",null,null],[3,"Iter","","An iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>IndexMap</code>.",null,null],[0,"set","indexmap","A hash set implemented using <code>IndexMap</code>",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is …",null,null],[11,"new","","Create a new set. (Does not allocate.)",3,[[]]],[11,"with_capacity","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[["usize",15]]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[["usize",15]]]],[11,"with_hasher","","Create a new set with <code>hash_builder</code>",3,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",3,[[],["usize",15]]],[11,"hasher","","Return a reference to the set\'s <code>BuildHasher</code>.",3,[[]]],[11,"len","","Return the number of elements in the set.",3,[[],["usize",15]]],[11,"is_empty","","Returns true if the set contains no elements.",3,[[],["bool",15]]],[11,"iter","","Return an iterator over the values of the set, in their …",3,[[],["iter",3]]],[11,"clear","","Remove all elements in the set, while preserving its …",3,[[]]],[11,"truncate","","Shortens the set, keeping the first <code>len</code> elements and …",3,[[["usize",15]]]],[11,"drain","","Clears the <code>IndexSet</code> in the given index range, returning …",3,[[],["drain",3]]],[11,"split_off","","Splits the collection into two at the given index.",3,[[["usize",15]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more values.",3,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the set as much as possible.",3,[[]]],[11,"insert","","Insert the value into the set.",3,[[],["bool",15]]],[11,"insert_full","","Insert the value into the set, and get its index.",3,[[]]],[11,"difference","","Return an iterator over the values that are in <code>self</code> but …",3,[[["indexset",3]],["difference",3]]],[11,"symmetric_difference","","Return an iterator over the values that are in <code>self</code> or …",3,[[["indexset",3]],["symmetricdifference",3]]],[11,"intersection","","Return an iterator over the values that are in both <code>self</code> …",3,[[["indexset",3]],["intersection",3]]],[11,"union","","Return an iterator over all values that are in <code>self</code> or …",3,[[["indexset",3]],["union",3]]],[11,"contains","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.",3,[[],["bool",15]]],[11,"get","","Return a reference to the value stored in the set, if it …",3,[[],["option",4]]],[11,"get_full","","Return item index and value",3,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the set",3,[[],[["option",4],["usize",15]]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",3,[[],["option",4]]],[11,"remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"swap_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"shift_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"pop","","Remove the last value",3,[[],["option",4]]],[11,"retain","","Scan through each value in the set and keep those where …",3,[[]]],[11,"sort","","Sort the set’s values by their default ordering.",3,[[]]],[11,"sort_by","","Sort the set’s values in place using the comparison …",3,[[]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator …",3,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the set’s values in place.",3,[[]]],[11,"get_index","","Get a value by index",3,[[["usize",15]],["option",4]]],[11,"first","","Get the first value",3,[[],["option",4]]],[11,"last","","Get the last value",3,[[],["option",4]]],[11,"swap_remove_index","","Remove the value by index",3,[[["usize",15]],["option",4]]],[11,"shift_remove_index","","Remove the value by index",3,[[["usize",15]],["option",4]]],[11,"swap_indices","","Swaps the position of two values in the set.",3,[[["usize",15]]]],[3,"IntoIter","","An owning iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>IndexSet</code>.",null,null],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.",3,[[["indexset",3]],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if all elements of <code>self</code> are contained in …",3,[[["indexset",3]],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if all elements of <code>other</code> are contained in …",3,[[["indexset",3]],["bool",15]]],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of …",null,null],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to <code>key</code> and return <code>true</code> if they are equal.",4,[[],["bool",15]]],[14,"indexmap","","Create an <code>IndexMap</code> from a list of key-value pairs",null,null],[14,"indexset","","Create an <code>IndexSet</code> from a list of values",null,null],[11,"from","indexmap::map","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","indexmap::set","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"get_full_mut2","indexmap::map","",2,[[],["option",4]]],[11,"retain2","","",2,[[]]],[11,"__private_marker","","",2,[[],["privatemarker",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","indexmap::set","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"eq","indexmap::map","",2,[[["indexmap",3]],["bool",15]]],[11,"eq","indexmap::set","",3,[[["indexset",3]],["bool",15]]],[11,"index","indexmap::map","Returns a reference to the value corresponding to the …",2,[[]]],[11,"index","","Returns a reference to the value at the supplied <code>index</code>.",2,[[["usize",15]]]],[11,"index","indexmap::set","Returns a reference to the value at the supplied <code>index</code>.",3,[[["usize",15]]]],[11,"index_mut","indexmap::map","Returns a mutable reference to the value corresponding to …",2,[[]]],[11,"index_mut","","Returns a mutable reference to the value at the supplied …",2,[[["usize",15]]]],[11,"len","","",7,[[],["usize",15]]],[11,"len","","",8,[[],["usize",15]]],[11,"len","","",9,[[],["usize",15]]],[11,"len","","",10,[[],["usize",15]]],[11,"len","","",11,[[],["usize",15]]],[11,"len","","",12,[[],["usize",15]]],[11,"len","indexmap::set","",14,[[],["usize",15]]],[11,"len","","",15,[[],["usize",15]]],[11,"from_iter","indexmap::map","Create an <code>IndexMap</code> from the sequence of key-value pairs …",2,[[["intoiterator",8]]]],[11,"from_iter","indexmap::set","",3,[[["intoiterator",8]]]],[11,"next_back","indexmap::map","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","indexmap::set","",14,[[],["option",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next","indexmap::map","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[],["usize",15]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"collect","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[],["usize",15]]],[11,"nth","","",8,[[["usize",15]],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"collect","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[],["usize",15]]],[11,"nth","","",9,[[["usize",15]],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"collect","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[],["usize",15]]],[11,"nth","","",10,[[["usize",15]],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"collect","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[],["usize",15]]],[11,"nth","","",11,[[["usize",15]],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"collect","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[],["usize",15]]],[11,"nth","","",12,[[["usize",15]],["option",4]]],[11,"last","","",12,[[],["option",4]]],[11,"collect","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[],["usize",15]]],[11,"nth","","",13,[[["usize",15]],["option",4]]],[11,"last","","",13,[[],["option",4]]],[11,"collect","","",13,[[]]],[11,"next","indexmap::set","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"count","","",14,[[],["usize",15]]],[11,"nth","","",14,[[["usize",15]],["option",4]]],[11,"last","","",14,[[],["option",4]]],[11,"collect","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"count","","",15,[[],["usize",15]]],[11,"nth","","",15,[[["usize",15]],["option",4]]],[11,"last","","",15,[[],["option",4]]],[11,"collect","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"count","","",16,[[],["usize",15]]],[11,"nth","","",16,[[["usize",15]],["option",4]]],[11,"last","","",16,[[],["option",4]]],[11,"collect","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",3,[[]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","indexmap::set","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","indexmap::map","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[]]],[11,"clone","indexmap::set","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"default","indexmap::map","Return an empty <code>IndexMap</code>",2,[[]]],[11,"default","indexmap::set","Return an empty <code>IndexSet</code>",3,[[]]],[11,"into_deserializer","indexmap::map","",2,[[]]],[11,"into_deserializer","indexmap::set","",3,[[]]],[11,"serialize","indexmap::map","",2,[[],["result",4]]],[11,"serialize","indexmap::set","",3,[[],["result",4]]],[11,"deserialize","indexmap::map","",2,[[],["result",4]]],[11,"deserialize","indexmap::set","",3,[[],["result",4]]],[11,"key","indexmap::map","Gets a reference to the entry\'s key in the map.",5,[[]]],[11,"get","","Gets a reference to the entry\'s value in the map.",5,[[]]],[11,"get_mut","","Gets a mutable reference to the entry\'s value in the map.",5,[[]]],[11,"index","","Return the index of the key-value pair",5,[[],["usize",15]]],[11,"into_mut","","Converts into a mutable reference to the entry\'s value in …",5,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"or_insert","","Inserts the given default value in the entry if it is …",1,[[]]],[11,"or_insert_with","","Inserts the result of the <code>call</code> function in the entry if …",1,[[]]],[11,"or_insert_with_key","","Inserts the result of the <code>call</code> function with a reference …",1,[[]]],[11,"key","","Gets a reference to the entry\'s key, either within the …",1,[[]]],[11,"index","","Return the index where the key-value pair exists or will …",1,[[],["usize",15]]],[11,"and_modify","","Modifies the entry if it is occupied.",1,[[]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is …",1,[[]]],[11,"insert","","Sets the value of the entry to <code>value</code>, and returns the …",5,[[]]],[11,"remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"key","","Gets a reference to the key that was used to find the …",6,[[]]],[11,"into_key","","Takes ownership of the key, leaving the entry vacant.",6,[[]]],[11,"index","","Return the index where the key-value pair will be …",6,[[],["usize",15]]],[11,"insert","","Inserts the entry\'s key and the given value into the map, …",6,[[]]]],"p":[[8,"MutableKeys"],[4,"Entry"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"instant":{"doc":"","i":[[6,"Instant","instant","",null,null],[3,"Duration","","A <code>Duration</code> type to represent a span of time, typically …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"add","","",0,[[["duration",3]],["duration",3]]],[11,"div_assign","","",0,[[["u32",15]]]],[11,"add_assign","","",0,[[["duration",3]]]],[11,"cmp","","",0,[[["duration",3]],["ordering",4]]],[11,"clone","","",0,[[],["duration",3]]],[11,"sum","","",0,[[],["duration",3]]],[11,"sum","","",0,[[],["duration",3]]],[11,"default","","",0,[[],["duration",3]]],[11,"hash","","",0,[[]]],[11,"sub_assign","","",0,[[["duration",3]]]],[11,"eq","","",0,[[["duration",3]],["bool",15]]],[11,"ne","","",0,[[["duration",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["duration",3]],["bool",15]]],[11,"le","","",0,[[["duration",3]],["bool",15]]],[11,"gt","","",0,[[["duration",3]],["bool",15]]],[11,"ge","","",0,[[["duration",3]],["bool",15]]],[11,"mul_assign","","",0,[[["u32",15]]]],[11,"div","","",0,[[["u32",15]],["duration",3]]],[11,"mul","","",0,[[["u32",15]],["duration",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",0,[[["duration",3]],["duration",3]]],[18,"SECOND","","The duration of one second.",0,null],[18,"MILLISECOND","","The duration of one millisecond.",0,null],[18,"MICROSECOND","","The duration of one microsecond.",0,null],[18,"NANOSECOND","","The duration of one nanosecond.",0,null],[18,"ZERO","","A duration of zero time.",0,null],[18,"MAX","","The maximum duration.",0,null],[11,"new","","Creates a new <code>Duration</code> from the specified number of whole …",0,[[["u32",15],["u64",15]],["duration",3]]],[11,"from_secs","","Creates a new <code>Duration</code> from the specified number of whole …",0,[[["u64",15]],["duration",3]]],[11,"from_millis","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"from_micros","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"from_nanos","","Creates a new <code>Duration</code> from the specified number of …",0,[[["u64",15]],["duration",3]]],[11,"is_zero","","Returns true if this <code>Duration</code> spans no time.",0,[[],["bool",15]]],[11,"as_secs","","Returns the number of <em>whole</em> seconds contained by this …",0,[[],["u64",15]]],[11,"subsec_millis","","Returns the fractional part of this <code>Duration</code>, in whole …",0,[[],["u32",15]]],[11,"subsec_micros","","Returns the fractional part of this <code>Duration</code>, in whole …",0,[[],["u32",15]]],[11,"subsec_nanos","","Returns the fractional part of this <code>Duration</code>, in …",0,[[],["u32",15]]],[11,"as_millis","","Returns the total number of whole milliseconds contained …",0,[[],["u128",15]]],[11,"as_micros","","Returns the total number of whole microseconds contained …",0,[[],["u128",15]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this …",0,[[],["u128",15]]],[11,"checked_add","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …",0,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_add","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …",0,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …",0,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_sub","","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …",0,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …",0,[[["u32",15]],[["duration",3],["option",4]]]],[11,"saturating_mul","","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…",0,[[["u32",15]],["duration",3]]],[11,"checked_div","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …",0,[[["u32",15]],[["duration",3],["option",4]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this <code>Duration</code> …",0,[[],["f64",15]]],[11,"as_secs_f32","","Returns the number of seconds contained by this <code>Duration</code> …",0,[[],["f32",15]]],[11,"from_secs_f64","","Creates a new <code>Duration</code> from the specified number of …",0,[[["f64",15]],["duration",3]]],[11,"from_secs_f32","","Creates a new <code>Duration</code> from the specified number of …",0,[[["f32",15]],["duration",3]]],[11,"mul_f64","","Multiplies <code>Duration</code> by <code>f64</code>.",0,[[["f64",15]],["duration",3]]],[11,"mul_f32","","Multiplies <code>Duration</code> by <code>f32</code>.",0,[[["f32",15]],["duration",3]]],[11,"div_f64","","Divide <code>Duration</code> by <code>f64</code>.",0,[[["f64",15]],["duration",3]]],[11,"div_f32","","Divide <code>Duration</code> by <code>f32</code>.",0,[[["f32",15]],["duration",3]]],[11,"div_duration_f64","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.",0,[[["duration",3]],["f64",15]]],[11,"div_duration_f32","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.",0,[[["duration",3]],["f32",15]]]],"p":[[3,"Duration"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"lewton":{"doc":"A <code>vorbis</code> decoder, written in Rust.","i":[[0,"header","lewton","Header decoding",null,null],[4,"HeaderReadError","lewton::header","Errors that can occur during Header decoding",null,null],[13,"EndOfPacket","","",0,null],[13,"NotVorbisHeader","","If the passed data don\'t start with the \\\"vorbis\\\" capture …",0,null],[13,"UnsupportedVorbisVersion","","",0,null],[13,"HeaderBadFormat","","If the header violates the vorbis spec",0,null],[13,"HeaderBadType","","The given packet indeed seems to be a vorbis header, but …",0,null],[13,"HeaderIsAudio","","The given packet does not seem to be a header as per …",0,null],[13,"Utf8DecodeError","","",0,null],[13,"BufferNotAddressable","","If the needed memory isn\'t addressable by us",0,null],[6,"HeaderSet","","The set of the three Vorbis headers",null,null],[3,"IdentHeader","","Representation for the identification header",null,null],[12,"audio_channels","","The number of audio channels in the stream",1,null],[12,"audio_sample_rate","","The sample rate of the stream",1,null],[12,"bitrate_maximum","","The maximum bit rate of the stream",1,null],[12,"bitrate_nominal","","The nominal bit rate of the stream",1,null],[12,"bitrate_minimum","","The minimum bit rate of the stream",1,null],[12,"blocksize_0","","",1,null],[12,"blocksize_1","","",1,null],[5,"read_header_ident","","Reading the Identification header",null,[[],[["headerreaderror",4],["result",4],["identheader",3]]]],[3,"CommentHeader","","Representation of the comment header",null,null],[12,"vendor","","An identification string of the software/library that …",2,null],[12,"comment_list","","A key-value list of the comments attached to the stream.",2,null],[5,"read_header_comment","","Reading the Comment header",null,[[],[["headerreaderror",4],["result",4],["commentheader",3]]]],[3,"SetupHeader","","",null,null],[5,"read_header_setup","","Reading the setup header.",null,[[["u8",15]],[["headerreaderror",4],["result",4],["setupheader",3]]]],[0,"audio","lewton","Audio packet decoding",null,null],[4,"AudioReadError","lewton::audio","",null,null],[13,"EndOfPacket","","",3,null],[13,"AudioBadFormat","","",3,null],[13,"AudioIsHeader","","",3,null],[13,"BufferNotAddressable","","If the needed memory isn\'t addressable by us",3,null],[3,"PreviousWindowRight","","The right part of the previous window",null,null],[11,"new","","Initialisation for new streams",4,[[]]],[11,"is_empty","","If the state is still uninitialized",4,[[],["bool",15]]],[5,"get_decoded_sample_count","","Returns the per-channel sample count of a packet if it …",null,[[["identheader",3],["setupheader",3]],[["usize",15],["result",4],["audioreaderror",4]]]],[5,"read_audio_packet_generic","","Main audio packet decoding function",null,[[["identheader",3],["setupheader",3],["previouswindowright",3]],[["result",4],["audioreaderror",4],["samples",8]]]],[5,"read_audio_packet","","Main audio packet decoding function",null,[[["identheader",3],["setupheader",3],["previouswindowright",3]],[["result",4],["audioreaderror",4],["vec",3]]]],[0,"inside_ogg","lewton","Higher-level utilities for Ogg streams and files",null,null],[5,"read_headers","lewton::inside_ogg","Reads the three vorbis headers from an ogg stream as well …",null,[[["packetreader",3]],[["result",4],["vorbiserror",4]]]],[3,"OggStreamReader","","Reading ogg/vorbis files or streams",null,null],[12,"ident_hdr","","",5,null],[12,"comment_hdr","","",5,null],[12,"setup_hdr","","",5,null],[11,"new","","Constructs a new OggStreamReader from a given …",5,[[],[["vorbiserror",4],["result",4]]]],[11,"from_ogg_reader","","Constructs a new OggStreamReader from a given Ogg …",5,[[["packetreader",3]],[["vorbiserror",4],["result",4]]]],[11,"into_inner","","",5,[[],["packetreader",3]]],[11,"read_dec_packet","","Reads and decompresses an audio packet from the stream.",5,[[],[["option",4],["result",4],["vorbiserror",4]]]],[11,"read_dec_packet_generic","","Reads and decompresses an audio packet from the stream …",5,[[],[["option",4],["result",4],["vorbiserror",4]]]],[11,"read_dec_packet_itl","","Reads and decompresses an audio packet from the stream …",5,[[],[["option",4],["vorbiserror",4],["result",4]]]],[11,"stream_serial","","Returns the stream serial of the current stream",5,[[],["u32",15]]],[11,"get_last_absgp","","Returns the absolute granule position of the last read …",5,[[],[["option",4],["u64",15]]]],[11,"seek_absgp_pg","","Seeks to the specified absolute granule position, with a …",5,[[["u64",15]],[["vorbiserror",4],["result",4]]]],[0,"samples","lewton","Traits for sample formats",null,null],[8,"Samples","lewton::samples","Trait for a packet of multiple samples",null,null],[10,"num_samples","","",6,[[],["usize",15]]],[10,"truncate","","",6,[[["usize",15]]]],[10,"from_floats","","",6,[[["vec",3],["vec",3]]]],[3,"InterleavedSamples","","A packet of multi-channel interleaved samples",null,null],[12,"samples","","",7,null],[12,"channel_count","","",7,null],[8,"Sample","","Trait representing a single sample",null,null],[10,"from_float","","",8,[[["f32",15]]]],[4,"VorbisError","lewton","Errors that can occur during decoding",null,null],[13,"BadAudio","","",9,null],[13,"BadHeader","","",9,null],[13,"OggError","","",9,null],[11,"from","lewton::header","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","lewton::audio","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","lewton::inside_ogg","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","lewton::samples","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","lewton","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"num_samples","lewton::samples","",7,[[],["usize",15]]],[11,"truncate","","",7,[[["usize",15]]]],[11,"from_floats","","",7,[[["vec",3],["vec",3]]]],[11,"from","lewton::header","",0,[[],["headerreaderror",4]]],[11,"from","","",0,[[["error",3]],["headerreaderror",4]]],[11,"from","","",0,[[["fromutf8error",3]],["headerreaderror",4]]],[11,"from","lewton::audio","",3,[[],["audioreaderror",4]]],[11,"from","lewton","",9,[[["audioreaderror",4]],["vorbiserror",4]]],[11,"from","","",9,[[["headerreaderror",4]],["vorbiserror",4]]],[11,"from","","",9,[[["oggreaderror",4]],["vorbiserror",4]]],[11,"clone","lewton::header","",2,[[],["commentheader",3]]],[11,"eq","","",0,[[["headerreaderror",4]],["bool",15]]],[11,"ne","","",0,[[["headerreaderror",4]],["bool",15]]],[11,"eq","","",2,[[["commentheader",3]],["bool",15]]],[11,"ne","","",2,[[["commentheader",3]],["bool",15]]],[11,"eq","lewton::audio","",3,[[["audioreaderror",4]],["bool",15]]],[11,"fmt","lewton::header","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","lewton::audio","",3,[[["formatter",3]],["result",6]]],[11,"fmt","lewton","",9,[[["formatter",3]],["result",6]]],[11,"fmt","lewton::header","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","lewton::audio","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","lewton","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","lewton::header","",2,[[]]]],"p":[[4,"HeaderReadError"],[3,"IdentHeader"],[3,"CommentHeader"],[4,"AudioReadError"],[3,"PreviousWindowRight"],[3,"OggStreamReader"],[8,"Samples"],[3,"InterleavedSamples"],[8,"Sample"],[4,"VorbisError"],[3,"SetupHeader"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"preadv64","","",null,null],[5,"pwritev64","","",null,null],[5,"forkpty","","",null,null],[5,"openpty","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"getnameinfo","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"futimes","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"accept4","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"gettid","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"preadv2","","",null,null],[5,"pwritev2","","",null,null],[5,"renameat2","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_CLASS","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_NUMBER","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_ECN","","",null,[[["u8",15]],["u8",15]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"canid_t","","",null,null],[6,"can_err_mask_t","","",null,null],[6,"iconv_t","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"uinput_ff_upload","","",null,null],[12,"request_id","","",65,null],[12,"retval","","",65,null],[12,"effect","","",65,null],[12,"old","","",65,null],[3,"uinput_ff_erase","","",null,null],[12,"request_id","","",66,null],[12,"retval","","",66,null],[12,"effect_id","","",66,null],[3,"uinput_abs_setup","","",null,null],[12,"code","","",67,null],[12,"absinfo","","",67,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",68,null],[12,"dlpi_name","","",68,null],[12,"dlpi_phdr","","",68,null],[12,"dlpi_phnum","","",68,null],[12,"dlpi_adds","","",68,null],[12,"dlpi_subs","","",68,null],[12,"dlpi_tls_modid","","",68,null],[12,"dlpi_tls_data","","",68,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",69,null],[12,"e_type","","",69,null],[12,"e_machine","","",69,null],[12,"e_version","","",69,null],[12,"e_entry","","",69,null],[12,"e_phoff","","",69,null],[12,"e_shoff","","",69,null],[12,"e_flags","","",69,null],[12,"e_ehsize","","",69,null],[12,"e_phentsize","","",69,null],[12,"e_phnum","","",69,null],[12,"e_shentsize","","",69,null],[12,"e_shnum","","",69,null],[12,"e_shstrndx","","",69,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",70,null],[12,"e_type","","",70,null],[12,"e_machine","","",70,null],[12,"e_version","","",70,null],[12,"e_entry","","",70,null],[12,"e_phoff","","",70,null],[12,"e_shoff","","",70,null],[12,"e_flags","","",70,null],[12,"e_ehsize","","",70,null],[12,"e_phentsize","","",70,null],[12,"e_phnum","","",70,null],[12,"e_shentsize","","",70,null],[12,"e_shnum","","",70,null],[12,"e_shstrndx","","",70,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",71,null],[12,"st_value","","",71,null],[12,"st_size","","",71,null],[12,"st_info","","",71,null],[12,"st_other","","",71,null],[12,"st_shndx","","",71,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",72,null],[12,"st_info","","",72,null],[12,"st_other","","",72,null],[12,"st_shndx","","",72,null],[12,"st_value","","",72,null],[12,"st_size","","",72,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",73,null],[12,"p_offset","","",73,null],[12,"p_vaddr","","",73,null],[12,"p_paddr","","",73,null],[12,"p_filesz","","",73,null],[12,"p_memsz","","",73,null],[12,"p_flags","","",73,null],[12,"p_align","","",73,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",74,null],[12,"p_flags","","",74,null],[12,"p_offset","","",74,null],[12,"p_vaddr","","",74,null],[12,"p_paddr","","",74,null],[12,"p_filesz","","",74,null],[12,"p_memsz","","",74,null],[12,"p_align","","",74,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",75,null],[12,"sh_type","","",75,null],[12,"sh_flags","","",75,null],[12,"sh_addr","","",75,null],[12,"sh_offset","","",75,null],[12,"sh_size","","",75,null],[12,"sh_link","","",75,null],[12,"sh_info","","",75,null],[12,"sh_addralign","","",75,null],[12,"sh_entsize","","",75,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",76,null],[12,"sh_type","","",76,null],[12,"sh_flags","","",76,null],[12,"sh_addr","","",76,null],[12,"sh_offset","","",76,null],[12,"sh_size","","",76,null],[12,"sh_link","","",76,null],[12,"sh_info","","",76,null],[12,"sh_addralign","","",76,null],[12,"sh_entsize","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"fanotify_response","","",null,null],[12,"fd","","",83,null],[12,"response","","",83,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",84,null],[12,"svm_reserved1","","",84,null],[12,"svm_port","","",84,null],[12,"svm_cid","","",84,null],[12,"svm_zero","","",84,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",85,null],[12,"rm_eo","","",85,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",86,null],[12,"ee_origin","","",86,null],[12,"ee_type","","",86,null],[12,"ee_code","","",86,null],[12,"ee_pad","","",86,null],[12,"ee_info","","",86,null],[12,"ee_data","","",86,null],[3,"__c_anonymous_sockaddr_can_tp","","",null,null],[12,"rx_id","","",87,null],[12,"tx_id","","",87,null],[3,"__c_anonymous_sockaddr_can_j1939","","",null,null],[12,"name","","",88,null],[12,"pgn","","",88,null],[12,"addr","","",88,null],[3,"can_filter","","",null,null],[12,"can_id","","",89,null],[12,"can_mask","","",89,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",90,null],[12,"nl_pid","","",90,null],[12,"nl_groups","","",90,null],[3,"dirent","","",null,null],[12,"d_ino","","",91,null],[12,"d_off","","",91,null],[12,"d_reclen","","",91,null],[12,"d_type","","",91,null],[12,"d_name","","",91,null],[3,"dirent64","","",null,null],[12,"d_ino","","",92,null],[12,"d_off","","",92,null],[12,"d_reclen","","",92,null],[12,"d_type","","",92,null],[12,"d_name","","",92,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",93,null],[12,"salg_type","","",93,null],[12,"salg_feat","","",93,null],[12,"salg_mask","","",93,null],[12,"salg_name","","",93,null],[3,"uinput_setup","","",null,null],[12,"id","","",94,null],[12,"name","","",94,null],[12,"ff_effects_max","","",94,null],[3,"uinput_user_dev","","",null,null],[12,"name","","",95,null],[12,"id","","",95,null],[12,"ff_effects_max","","",95,null],[12,"absmax","","",95,null],[12,"absmin","","",95,null],[12,"absfuzz","","",95,null],[12,"absflat","","",95,null],[3,"af_alg_iv","","WARNING: The <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of …",null,null],[12,"ivlen","","",96,null],[12,"iv","","",96,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",97,null],[12,"mq_maxmsg","","",97,null],[12,"mq_msgsize","","",97,null],[12,"mq_curmsgs","","",97,null],[19,"__c_anonymous_sockaddr_can_can_addr","","",null,null],[12,"tp","","",98,null],[12,"j1939","","",98,null],[3,"sockaddr_can","","",null,null],[12,"can_family","","",99,null],[12,"can_ifindex","","",99,null],[12,"can_addr","","",99,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_GSO_MAX_SEGS","","",null,null],[17,"IFLA_GSO_MAX_SIZE","","",null,null],[17,"IFLA_PAD","","",null,null],[17,"IFLA_XDP","","",null,null],[17,"IFLA_EVENT","","",null,null],[17,"IFLA_NEW_NETNSID","","",null,null],[17,"IFLA_IF_NETNSID","","",null,null],[17,"IFLA_TARGET_NETNSID","","",null,null],[17,"IFLA_CARRIER_UP_COUNT","","",null,null],[17,"IFLA_CARRIER_DOWN_COUNT","","",null,null],[17,"IFLA_NEW_IFINDEX","","",null,null],[17,"IFLA_MIN_MTU","","",null,null],[17,"IFLA_MAX_MTU","","",null,null],[17,"IFLA_PROP_LIST","","",null,null],[17,"IFLA_ALT_IFNAME","","",null,null],[17,"IFLA_PERM_ADDRESS","","",null,null],[17,"IFLA_PROTO_DOWN_REASON","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"TCP_ULP","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FF_MAX","","",null,null],[17,"FF_CNT","","",null,null],[17,"INPUT_PROP_MAX","","",null,null],[17,"INPUT_PROP_CNT","","",null,null],[17,"EV_MAX","","",null,null],[17,"EV_CNT","","",null,null],[17,"SYN_MAX","","",null,null],[17,"SYN_CNT","","",null,null],[17,"KEY_MAX","","",null,null],[17,"KEY_CNT","","",null,null],[17,"REL_MAX","","",null,null],[17,"REL_CNT","","",null,null],[17,"ABS_MAX","","",null,null],[17,"ABS_CNT","","",null,null],[17,"SW_MAX","","",null,null],[17,"SW_CNT","","",null,null],[17,"MSC_MAX","","",null,null],[17,"MSC_CNT","","",null,null],[17,"LED_MAX","","",null,null],[17,"LED_CNT","","",null,null],[17,"REP_MAX","","",null,null],[17,"REP_CNT","","",null,null],[17,"SND_MAX","","",null,null],[17,"SND_CNT","","",null,null],[17,"UINPUT_VERSION","","",null,null],[17,"UINPUT_MAX_NAME_SIZE","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CAN_EFF_FLAG","","",null,null],[17,"CAN_RTR_FLAG","","",null,null],[17,"CAN_ERR_FLAG","","",null,null],[17,"CAN_SFF_MASK","","",null,null],[17,"CAN_EFF_MASK","","",null,null],[17,"CAN_ERR_MASK","","",null,null],[17,"CAN_SFF_ID_BITS","","",null,null],[17,"CAN_EFF_ID_BITS","","",null,null],[17,"CAN_MAX_DLC","","",null,null],[17,"CAN_MAX_DLEN","","",null,null],[17,"CANFD_MAX_DLC","","",null,null],[17,"CANFD_MAX_DLEN","","",null,null],[17,"CANFD_BRS","","",null,null],[17,"CANFD_ESI","","",null,null],[17,"CAN_MTU","","",null,null],[17,"CANFD_MTU","","",null,null],[17,"CAN_RAW","","",null,null],[17,"CAN_BCM","","",null,null],[17,"CAN_TP16","","",null,null],[17,"CAN_TP20","","",null,null],[17,"CAN_MCNET","","",null,null],[17,"CAN_ISOTP","","",null,null],[17,"CAN_J1939","","",null,null],[17,"CAN_NPROTO","","",null,null],[17,"SOL_CAN_BASE","","",null,null],[17,"CAN_INV_FILTER","","",null,null],[17,"CAN_RAW_FILTER_MAX","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["usize",15],["cpu_set_t",3]],["bool",15]]],[5,"CPU_COUNT_S","","",null,[[["usize",15],["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]],["bool",15]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_PREC","","",null,[[["u8",15]],["u8",15]]],[5,"RT_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"RT_ADDRCLASS","","",null,[[["u32",15]],["u32",15]]],[5,"RT_LOCALADDR","","",null,[[["u32",15]],["bool",15]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",100,null],[12,"stx_blksize","","",100,null],[12,"stx_attributes","","",100,null],[12,"stx_nlink","","",100,null],[12,"stx_uid","","",100,null],[12,"stx_gid","","",100,null],[12,"stx_mode","","",100,null],[12,"stx_ino","","",100,null],[12,"stx_size","","",100,null],[12,"stx_blocks","","",100,null],[12,"stx_attributes_mask","","",100,null],[12,"stx_atime","","",100,null],[12,"stx_btime","","",100,null],[12,"stx_ctime","","",100,null],[12,"stx_mtime","","",100,null],[12,"stx_rdev_major","","",100,null],[12,"stx_rdev_minor","","",100,null],[12,"stx_dev_major","","",100,null],[12,"stx_dev_minor","","",100,null],[12,"stx_mnt_id","","",100,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",101,null],[12,"tv_nsec","","",101,null],[12,"__statx_timestamp_pad1","","",101,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",102,null],[12,"aio_lio_opcode","","",102,null],[12,"aio_reqprio","","",102,null],[12,"aio_buf","","",102,null],[12,"aio_nbytes","","",102,null],[12,"aio_sigevent","","",102,null],[12,"aio_offset","","",102,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",103,null],[12,"e_exit","","",103,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",104,null],[12,"tv_usec","","",104,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",105,null],[12,"gl_pathv","","",105,null],[12,"gl_offs","","",105,null],[12,"gl_flags","","",105,null],[3,"msghdr","","",null,null],[12,"msg_name","","",106,null],[12,"msg_namelen","","",106,null],[12,"msg_iov","","",106,null],[12,"msg_iovlen","","",106,null],[12,"msg_control","","",106,null],[12,"msg_controllen","","",106,null],[12,"msg_flags","","",106,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",107,null],[12,"cmsg_level","","",107,null],[12,"cmsg_type","","",107,null],[3,"termios","","",null,null],[12,"c_iflag","","",108,null],[12,"c_oflag","","",108,null],[12,"c_cflag","","",108,null],[12,"c_lflag","","",108,null],[12,"c_line","","",108,null],[12,"c_cc","","",108,null],[12,"c_ispeed","","",108,null],[12,"c_ospeed","","",108,null],[3,"mallinfo","","",null,null],[12,"arena","","",109,null],[12,"ordblks","","",109,null],[12,"smblks","","",109,null],[12,"hblks","","",109,null],[12,"hblkhd","","",109,null],[12,"usmblks","","",109,null],[12,"fsmblks","","",109,null],[12,"uordblks","","",109,null],[12,"fordblks","","",109,null],[12,"keepcost","","",109,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",110,null],[12,"nlmsg_type","","",110,null],[12,"nlmsg_flags","","",110,null],[12,"nlmsg_seq","","",110,null],[12,"nlmsg_pid","","",110,null],[3,"nlmsgerr","","",null,null],[12,"error","","",111,null],[12,"msg","","",111,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",112,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",113,null],[12,"nm_block_nr","","",113,null],[12,"nm_frame_size","","",113,null],[12,"nm_frame_nr","","",113,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",114,null],[12,"nm_len","","",114,null],[12,"nm_group","","",114,null],[12,"nm_pid","","",114,null],[12,"nm_uid","","",114,null],[12,"nm_gid","","",114,null],[3,"nlattr","","",null,null],[12,"nla_len","","",115,null],[12,"nla_type","","",115,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",116,null],[12,"rt_dst","","",116,null],[12,"rt_gateway","","",116,null],[12,"rt_genmask","","",116,null],[12,"rt_flags","","",116,null],[12,"rt_pad2","","",116,null],[12,"rt_pad3","","",116,null],[12,"rt_tos","","",116,null],[12,"rt_class","","",116,null],[12,"rt_pad4","","",116,null],[12,"rt_metric","","",116,null],[12,"rt_dev","","",116,null],[12,"rt_mtu","","",116,null],[12,"rt_window","","",116,null],[12,"rt_irtt","","",116,null],[3,"timex","","",null,null],[12,"modes","","",117,null],[12,"offset","","",117,null],[12,"freq","","",117,null],[12,"maxerror","","",117,null],[12,"esterror","","",117,null],[12,"status","","",117,null],[12,"constant","","",117,null],[12,"precision","","",117,null],[12,"tolerance","","",117,null],[12,"time","","",117,null],[12,"tick","","",117,null],[12,"ppsfreq","","",117,null],[12,"jitter","","",117,null],[12,"shift","","",117,null],[12,"stabil","","",117,null],[12,"jitcnt","","",117,null],[12,"calcnt","","",117,null],[12,"errcnt","","",117,null],[12,"stbcnt","","",117,null],[12,"tai","","",117,null],[12,"__unused1","","",117,null],[12,"__unused2","","",117,null],[12,"__unused3","","",117,null],[12,"__unused4","","",117,null],[12,"__unused5","","",117,null],[12,"__unused6","","",117,null],[12,"__unused7","","",117,null],[12,"__unused8","","",117,null],[12,"__unused9","","",117,null],[12,"__unused10","","",117,null],[12,"__unused11","","",117,null],[3,"ntptimeval","","",null,null],[12,"time","","",118,null],[12,"maxerror","","",118,null],[12,"esterror","","",118,null],[12,"tai","","",118,null],[12,"__glibc_reserved1","","",118,null],[12,"__glibc_reserved2","","",118,null],[12,"__glibc_reserved3","","",118,null],[12,"__glibc_reserved4","","",118,null],[3,"regex_t","","",null,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",119,null],[12,"ch_reserved","","",119,null],[12,"ch_size","","",119,null],[12,"ch_addralign","","",119,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",120,null],[12,"ch_size","","",120,null],[12,"ch_addralign","","",120,null],[3,"utmpx","","",null,null],[12,"ut_type","","",121,null],[12,"ut_pid","","",121,null],[12,"ut_line","","",121,null],[12,"ut_id","","",121,null],[12,"ut_user","","",121,null],[12,"ut_host","","",121,null],[12,"ut_exit","","",121,null],[12,"ut_session","","",121,null],[12,"ut_tv","","",121,null],[12,"ut_addr_v6","","",121,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening …",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SECURITYFS_MAGIC","","",null,null],[17,"SELINUX_MAGIC","","",null,null],[17,"SMACK_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"RWF_HIPRI","","",null,null],[17,"RWF_DSYNC","","",null,null],[17,"RWF_SYNC","","",null,null],[17,"RWF_NOWAIT","","",null,null],[17,"RWF_APPEND","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_MNT_ID","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",122,null],[12,"loads","","",122,null],[12,"totalram","","",122,null],[12,"freeram","","",122,null],[12,"sharedram","","",122,null],[12,"bufferram","","",122,null],[12,"totalswap","","",122,null],[12,"freeswap","","",122,null],[12,"procs","","",122,null],[12,"pad","","",122,null],[12,"totalhigh","","",122,null],[12,"freehigh","","",122,null],[12,"mem_unit","","",122,null],[12,"_f","","",122,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",123,null],[12,"msg_stime","","",123,null],[12,"msg_rtime","","",123,null],[12,"msg_ctime","","",123,null],[12,"msg_qnum","","",123,null],[12,"msg_qbytes","","",123,null],[12,"msg_lspid","","",123,null],[12,"msg_lrpid","","",123,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",124,null],[12,"sa_mask","","",124,null],[12,"sa_flags","","",124,null],[12,"sa_restorer","","",124,null],[3,"statfs","","",null,null],[12,"f_type","","",125,null],[12,"f_bsize","","",125,null],[12,"f_blocks","","",125,null],[12,"f_bfree","","",125,null],[12,"f_bavail","","",125,null],[12,"f_files","","",125,null],[12,"f_ffree","","",125,null],[12,"f_fsid","","",125,null],[12,"f_namelen","","",125,null],[12,"f_frsize","","",125,null],[3,"flock","","",null,null],[12,"l_type","","",126,null],[12,"l_whence","","",126,null],[12,"l_start","","",126,null],[12,"l_len","","",126,null],[12,"l_pid","","",126,null],[3,"flock64","","",null,null],[12,"l_type","","",127,null],[12,"l_whence","","",127,null],[12,"l_start","","",127,null],[12,"l_len","","",127,null],[12,"l_pid","","",127,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",128,null],[12,"si_errno","","",128,null],[12,"si_code","","",128,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",129,null],[12,"ss_flags","","",129,null],[12,"ss_size","","",129,null],[3,"stat","","",null,null],[12,"st_dev","","",130,null],[12,"st_ino","","",130,null],[12,"st_nlink","","",130,null],[12,"st_mode","","",130,null],[12,"st_uid","","",130,null],[12,"st_gid","","",130,null],[12,"st_rdev","","",130,null],[12,"st_size","","",130,null],[12,"st_blksize","","",130,null],[12,"st_blocks","","",130,null],[12,"st_atime","","",130,null],[12,"st_atime_nsec","","",130,null],[12,"st_mtime","","",130,null],[12,"st_mtime_nsec","","",130,null],[12,"st_ctime","","",130,null],[12,"st_ctime_nsec","","",130,null],[3,"stat64","","",null,null],[12,"st_dev","","",131,null],[12,"st_ino","","",131,null],[12,"st_nlink","","",131,null],[12,"st_mode","","",131,null],[12,"st_uid","","",131,null],[12,"st_gid","","",131,null],[12,"st_rdev","","",131,null],[12,"st_size","","",131,null],[12,"st_blksize","","",131,null],[12,"st_blocks","","",131,null],[12,"st_atime","","",131,null],[12,"st_atime_nsec","","",131,null],[12,"st_mtime","","",131,null],[12,"st_mtime_nsec","","",131,null],[12,"st_ctime","","",131,null],[12,"st_ctime_nsec","","",131,null],[3,"statfs64","","",null,null],[12,"f_type","","",132,null],[12,"f_bsize","","",132,null],[12,"f_blocks","","",132,null],[12,"f_bfree","","",132,null],[12,"f_bavail","","",132,null],[12,"f_files","","",132,null],[12,"f_ffree","","",132,null],[12,"f_fsid","","",132,null],[12,"f_namelen","","",132,null],[12,"f_frsize","","",132,null],[12,"f_flags","","",132,null],[12,"f_spare","","",132,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",133,null],[12,"f_frsize","","",133,null],[12,"f_blocks","","",133,null],[12,"f_bfree","","",133,null],[12,"f_bavail","","",133,null],[12,"f_files","","",133,null],[12,"f_ffree","","",133,null],[12,"f_favail","","",133,null],[12,"f_fsid","","",133,null],[12,"f_flag","","",133,null],[12,"f_namemax","","",133,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",134,null],[12,"exponent","","",134,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",135,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",136,null],[12,"swd","","",136,null],[12,"ftw","","",136,null],[12,"fop","","",136,null],[12,"rip","","",136,null],[12,"rdp","","",136,null],[12,"mxcsr","","",136,null],[12,"mxcr_mask","","",136,null],[12,"_st","","",136,null],[12,"_xmm","","",136,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",137,null],[12,"r14","","",137,null],[12,"r13","","",137,null],[12,"r12","","",137,null],[12,"rbp","","",137,null],[12,"rbx","","",137,null],[12,"r11","","",137,null],[12,"r10","","",137,null],[12,"r9","","",137,null],[12,"r8","","",137,null],[12,"rax","","",137,null],[12,"rcx","","",137,null],[12,"rdx","","",137,null],[12,"rsi","","",137,null],[12,"rdi","","",137,null],[12,"orig_rax","","",137,null],[12,"rip","","",137,null],[12,"cs","","",137,null],[12,"eflags","","",137,null],[12,"rsp","","",137,null],[12,"ss","","",137,null],[12,"fs_base","","",137,null],[12,"gs_base","","",137,null],[12,"ds","","",137,null],[12,"es","","",137,null],[12,"fs","","",137,null],[12,"gs","","",137,null],[3,"user","","",null,null],[12,"regs","","",138,null],[12,"u_fpvalid","","",138,null],[12,"i387","","",138,null],[12,"u_tsize","","",138,null],[12,"u_dsize","","",138,null],[12,"u_ssize","","",138,null],[12,"start_code","","",138,null],[12,"start_stack","","",138,null],[12,"signal","","",138,null],[12,"u_ar0","","",138,null],[12,"u_fpstate","","",138,null],[12,"magic","","",138,null],[12,"u_comm","","",138,null],[12,"u_debugreg","","",138,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",139,null],[12,"fpregs","","",139,null],[3,"ipc_perm","","",null,null],[12,"__key","","",140,null],[12,"uid","","",140,null],[12,"gid","","",140,null],[12,"cuid","","",140,null],[12,"cgid","","",140,null],[12,"mode","","",140,null],[12,"__seq","","",140,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",141,null],[12,"shm_segsz","","",141,null],[12,"shm_atime","","",141,null],[12,"shm_dtime","","",141,null],[12,"shm_ctime","","",141,null],[12,"shm_cpid","","",141,null],[12,"shm_lpid","","",141,null],[12,"shm_nattch","","",141,null],[3,"termios2","","",null,null],[12,"c_iflag","","",142,null],[12,"c_oflag","","",142,null],[12,"c_cflag","","",142,null],[12,"c_lflag","","",142,null],[12,"c_line","","",142,null],[12,"c_cc","","",142,null],[12,"c_ispeed","","",142,null],[12,"c_ospeed","","",142,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",143,null],[12,"imr_address","","",143,null],[12,"imr_ifindex","","",143,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",144,null],[12,"swd","","",144,null],[12,"ftw","","",144,null],[12,"fop","","",144,null],[12,"rip","","",144,null],[12,"rdp","","",144,null],[12,"mxcsr","","",144,null],[12,"mxcr_mask","","",144,null],[12,"st_space","","",144,null],[12,"xmm_space","","",144,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",145,null],[12,"uc_link","","",145,null],[12,"uc_stack","","",145,null],[12,"uc_mcontext","","",145,null],[12,"uc_sigmask","","",145,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",146,null],[12,"f_frsize","","",146,null],[12,"f_blocks","","",146,null],[12,"f_bfree","","",146,null],[12,"f_bavail","","",146,null],[12,"f_files","","",146,null],[12,"f_ffree","","",146,null],[12,"f_favail","","",146,null],[12,"f_fsid","","",146,null],[12,"f_flag","","",146,null],[12,"f_namemax","","",146,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_send_signal","","",null,null],[17,"SYS_io_uring_setup","","",null,null],[17,"SYS_io_uring_enter","","",null,null],[17,"SYS_io_uring_register","","",null,null],[17,"SYS_open_tree","","",null,null],[17,"SYS_move_mount","","",null,null],[17,"SYS_fsopen","","",null,null],[17,"SYS_fsconfig","","",null,null],[17,"SYS_fsmount","","",null,null],[17,"SYS_fspick","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[17,"SYS_close_range","","",null,null],[17,"SYS_openat2","","",null,null],[17,"SYS_pidfd_getfd","","",null,null],[17,"SYS_faccessat2","","",null,null],[17,"SYS_process_madvise","","",null,null],[17,"SYS_epoll_pwait2","","",null,null],[17,"SYS_mount_setattr","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",147,null],[12,"vers","","",147,null],[12,"reserved","","",147,null],[12,"metadata_len","","",147,null],[12,"mask","","",147,null],[12,"fd","","",147,null],[12,"pid","","",147,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"can_frame","","",null,null],[12,"can_id","","",148,null],[12,"can_dlc","","",148,null],[12,"data","","",148,null],[3,"canfd_frame","","",null,null],[12,"can_id","","",149,null],[12,"len","","",149,null],[12,"flags","","",149,null],[12,"data","","",149,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",150,null],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["group",3]],["bool",15]]],[11,"ne","","",0,[[["group",3]],["bool",15]]],[11,"eq","","",1,[[["utimbuf",3]],["bool",15]]],[11,"ne","","",1,[[["utimbuf",3]],["bool",15]]],[11,"eq","","",2,[[["timeval",3]],["bool",15]]],[11,"ne","","",2,[[["timeval",3]],["bool",15]]],[11,"eq","","",3,[[["timespec",3]],["bool",15]]],[11,"ne","","",3,[[["timespec",3]],["bool",15]]],[11,"eq","","",4,[[["rlimit",3]],["bool",15]]],[11,"ne","","",4,[[["rlimit",3]],["bool",15]]],[11,"eq","","",5,[[["rusage",3]],["bool",15]]],[11,"ne","","",5,[[["rusage",3]],["bool",15]]],[11,"eq","","",6,[[["ipv6_mreq",3]],["bool",15]]],[11,"ne","","",6,[[["ipv6_mreq",3]],["bool",15]]],[11,"eq","","",7,[[["hostent",3]],["bool",15]]],[11,"ne","","",7,[[["hostent",3]],["bool",15]]],[11,"eq","","",8,[[["iovec",3]],["bool",15]]],[11,"ne","","",8,[[["iovec",3]],["bool",15]]],[11,"eq","","",9,[[["pollfd",3]],["bool",15]]],[11,"ne","","",9,[[["pollfd",3]],["bool",15]]],[11,"eq","","",10,[[["winsize",3]],["bool",15]]],[11,"ne","","",10,[[["winsize",3]],["bool",15]]],[11,"eq","","",11,[[["linger",3]],["bool",15]]],[11,"ne","","",11,[[["linger",3]],["bool",15]]],[11,"eq","","",12,[[["sigval",3]],["bool",15]]],[11,"ne","","",12,[[["sigval",3]],["bool",15]]],[11,"eq","","",13,[[["itimerval",3]],["bool",15]]],[11,"ne","","",13,[[["itimerval",3]],["bool",15]]],[11,"eq","","",14,[[["tms",3]],["bool",15]]],[11,"ne","","",14,[[["tms",3]],["bool",15]]],[11,"eq","","",15,[[["servent",3]],["bool",15]]],[11,"ne","","",15,[[["servent",3]],["bool",15]]],[11,"eq","","",16,[[["protoent",3]],["bool",15]]],[11,"ne","","",16,[[["protoent",3]],["bool",15]]],[11,"eq","","",17,[[["in_addr",3]],["bool",15]]],[11,"ne","","",17,[[["in_addr",3]],["bool",15]]],[11,"eq","","",18,[[["ip_mreq",3]],["bool",15]]],[11,"ne","","",18,[[["ip_mreq",3]],["bool",15]]],[11,"eq","","",19,[[["ip_mreq_source",3]],["bool",15]]],[11,"ne","","",19,[[["ip_mreq_source",3]],["bool",15]]],[11,"eq","","",20,[[["sockaddr",3]],["bool",15]]],[11,"ne","","",20,[[["sockaddr",3]],["bool",15]]],[11,"eq","","",21,[[["sockaddr_in",3]],["bool",15]]],[11,"ne","","",21,[[["sockaddr_in",3]],["bool",15]]],[11,"eq","","",22,[[["sockaddr_in6",3]],["bool",15]]],[11,"ne","","",22,[[["sockaddr_in6",3]],["bool",15]]],[11,"eq","","",23,[[["addrinfo",3]],["bool",15]]],[11,"ne","","",23,[[["addrinfo",3]],["bool",15]]],[11,"eq","","",24,[[["sockaddr_ll",3]],["bool",15]]],[11,"ne","","",24,[[["sockaddr_ll",3]],["bool",15]]],[11,"eq","","",168,[[["fd_set",3]],["bool",15]]],[11,"ne","","",168,[[["fd_set",3]],["bool",15]]],[11,"eq","","",25,[[["tm",3]],["bool",15]]],[11,"ne","","",25,[[["tm",3]],["bool",15]]],[11,"eq","","",26,[[["sched_param",3]],["bool",15]]],[11,"ne","","",26,[[["sched_param",3]],["bool",15]]],[11,"eq","","",27,[[["dl_info",3]],["bool",15]]],[11,"ne","","",27,[[["dl_info",3]],["bool",15]]],[11,"eq","","",28,[[["lconv",3]],["bool",15]]],[11,"ne","","",28,[[["lconv",3]],["bool",15]]],[11,"eq","","",29,[[["in_pktinfo",3]],["bool",15]]],[11,"ne","","",29,[[["in_pktinfo",3]],["bool",15]]],[11,"eq","","",30,[[["ifaddrs",3]],["bool",15]]],[11,"ne","","",30,[[["ifaddrs",3]],["bool",15]]],[11,"eq","","",169,[[["in6_rtmsg",3]],["bool",15]]],[11,"ne","","",169,[[["in6_rtmsg",3]],["bool",15]]],[11,"eq","","",31,[[["arpreq",3]],["bool",15]]],[11,"ne","","",31,[[["arpreq",3]],["bool",15]]],[11,"eq","","",32,[[["arpreq_old",3]],["bool",15]]],[11,"ne","","",32,[[["arpreq_old",3]],["bool",15]]],[11,"eq","","",33,[[["arphdr",3]],["bool",15]]],[11,"ne","","",33,[[["arphdr",3]],["bool",15]]],[11,"eq","","",34,[[["mmsghdr",3]],["bool",15]]],[11,"ne","","",34,[[["mmsghdr",3]],["bool",15]]],[11,"eq","","",35,[[["epoll_event",3]],["bool",15]]],[11,"eq","","",36,[[["sockaddr_un",3]],["bool",15]]],[11,"eq","","",37,[[["sockaddr_storage",3]],["bool",15]]],[11,"eq","","",38,[[["utsname",3]],["bool",15]]],[11,"eq","","",39,[[["sigevent",3]],["bool",15]]],[11,"eq","","",40,[[["rlimit64",3]],["bool",15]]],[11,"ne","","",40,[[["rlimit64",3]],["bool",15]]],[11,"eq","","",41,[[["glob_t",3]],["bool",15]]],[11,"ne","","",41,[[["glob_t",3]],["bool",15]]],[11,"eq","","",42,[[["passwd",3]],["bool",15]]],[11,"ne","","",42,[[["passwd",3]],["bool",15]]],[11,"eq","","",43,[[["spwd",3]],["bool",15]]],[11,"ne","","",43,[[["spwd",3]],["bool",15]]],[11,"eq","","",44,[[["dqblk",3]],["bool",15]]],[11,"ne","","",44,[[["dqblk",3]],["bool",15]]],[11,"eq","","",45,[[["signalfd_siginfo",3]],["bool",15]]],[11,"ne","","",45,[[["signalfd_siginfo",3]],["bool",15]]],[11,"eq","","",46,[[["itimerspec",3]],["bool",15]]],[11,"ne","","",46,[[["itimerspec",3]],["bool",15]]],[11,"eq","","",157,[[["fsid_t",3]],["bool",15]]],[11,"ne","","",157,[[["fsid_t",3]],["bool",15]]],[11,"eq","","",47,[[["packet_mreq",3]],["bool",15]]],[11,"ne","","",47,[[["packet_mreq",3]],["bool",15]]],[11,"eq","","",158,[[["cpu_set_t",3]],["bool",15]]],[11,"ne","","",158,[[["cpu_set_t",3]],["bool",15]]],[11,"eq","","",48,[[["if_nameindex",3]],["bool",15]]],[11,"ne","","",48,[[["if_nameindex",3]],["bool",15]]],[11,"eq","","",49,[[["msginfo",3]],["bool",15]]],[11,"ne","","",49,[[["msginfo",3]],["bool",15]]],[11,"eq","","",50,[[["sembuf",3]],["bool",15]]],[11,"ne","","",50,[[["sembuf",3]],["bool",15]]],[11,"eq","","",51,[[["input_event",3]],["bool",15]]],[11,"ne","","",51,[[["input_event",3]],["bool",15]]],[11,"eq","","",52,[[["input_id",3]],["bool",15]]],[11,"ne","","",52,[[["input_id",3]],["bool",15]]],[11,"eq","","",53,[[["input_absinfo",3]],["bool",15]]],[11,"ne","","",53,[[["input_absinfo",3]],["bool",15]]],[11,"eq","","",54,[[["input_keymap_entry",3]],["bool",15]]],[11,"ne","","",54,[[["input_keymap_entry",3]],["bool",15]]],[11,"eq","","",55,[[["input_mask",3]],["bool",15]]],[11,"ne","","",55,[[["input_mask",3]],["bool",15]]],[11,"eq","","",56,[[["ff_replay",3]],["bool",15]]],[11,"ne","","",56,[[["ff_replay",3]],["bool",15]]],[11,"eq","","",57,[[["ff_trigger",3]],["bool",15]]],[11,"ne","","",57,[[["ff_trigger",3]],["bool",15]]],[11,"eq","","",58,[[["ff_envelope",3]],["bool",15]]],[11,"ne","","",58,[[["ff_envelope",3]],["bool",15]]],[11,"eq","","",59,[[["ff_constant_effect",3]],["bool",15]]],[11,"ne","","",59,[[["ff_constant_effect",3]],["bool",15]]],[11,"eq","","",60,[[["ff_ramp_effect",3]],["bool",15]]],[11,"ne","","",60,[[["ff_ramp_effect",3]],["bool",15]]],[11,"eq","","",61,[[["ff_condition_effect",3]],["bool",15]]],[11,"ne","","",61,[[["ff_condition_effect",3]],["bool",15]]],[11,"eq","","",62,[[["ff_periodic_effect",3]],["bool",15]]],[11,"ne","","",62,[[["ff_periodic_effect",3]],["bool",15]]],[11,"eq","","",63,[[["ff_rumble_effect",3]],["bool",15]]],[11,"ne","","",63,[[["ff_rumble_effect",3]],["bool",15]]],[11,"eq","","",64,[[["ff_effect",3]],["bool",15]]],[11,"ne","","",64,[[["ff_effect",3]],["bool",15]]],[11,"eq","","",65,[[["uinput_ff_upload",3]],["bool",15]]],[11,"ne","","",65,[[["uinput_ff_upload",3]],["bool",15]]],[11,"eq","","",66,[[["uinput_ff_erase",3]],["bool",15]]],[11,"ne","","",66,[[["uinput_ff_erase",3]],["bool",15]]],[11,"eq","","",67,[[["uinput_abs_setup",3]],["bool",15]]],[11,"ne","","",67,[[["uinput_abs_setup",3]],["bool",15]]],[11,"eq","","",68,[[["dl_phdr_info",3]],["bool",15]]],[11,"ne","","",68,[[["dl_phdr_info",3]],["bool",15]]],[11,"eq","","",69,[[["elf32_ehdr",3]],["bool",15]]],[11,"ne","","",69,[[["elf32_ehdr",3]],["bool",15]]],[11,"eq","","",70,[[["elf64_ehdr",3]],["bool",15]]],[11,"ne","","",70,[[["elf64_ehdr",3]],["bool",15]]],[11,"eq","","",71,[[["elf32_sym",3]],["bool",15]]],[11,"ne","","",71,[[["elf32_sym",3]],["bool",15]]],[11,"eq","","",72,[[["elf64_sym",3]],["bool",15]]],[11,"ne","","",72,[[["elf64_sym",3]],["bool",15]]],[11,"eq","","",73,[[["elf32_phdr",3]],["bool",15]]],[11,"ne","","",73,[[["elf32_phdr",3]],["bool",15]]],[11,"eq","","",74,[[["elf64_phdr",3]],["bool",15]]],[11,"ne","","",74,[[["elf64_phdr",3]],["bool",15]]],[11,"eq","","",75,[[["elf32_shdr",3]],["bool",15]]],[11,"ne","","",75,[[["elf32_shdr",3]],["bool",15]]],[11,"eq","","",76,[[["elf64_shdr",3]],["bool",15]]],[11,"ne","","",76,[[["elf64_shdr",3]],["bool",15]]],[11,"eq","","",77,[[["ucred",3]],["bool",15]]],[11,"ne","","",77,[[["ucred",3]],["bool",15]]],[11,"eq","","",78,[[["mntent",3]],["bool",15]]],[11,"ne","","",78,[[["mntent",3]],["bool",15]]],[11,"eq","","",159,[[["posix_spawn_file_actions_t",3]],["bool",15]]],[11,"ne","","",159,[[["posix_spawn_file_actions_t",3]],["bool",15]]],[11,"eq","","",160,[[["posix_spawnattr_t",3]],["bool",15]]],[11,"ne","","",160,[[["posix_spawnattr_t",3]],["bool",15]]],[11,"eq","","",79,[[["genlmsghdr",3]],["bool",15]]],[11,"ne","","",79,[[["genlmsghdr",3]],["bool",15]]],[11,"eq","","",80,[[["in6_pktinfo",3]],["bool",15]]],[11,"ne","","",80,[[["in6_pktinfo",3]],["bool",15]]],[11,"eq","","",81,[[["arpd_request",3]],["bool",15]]],[11,"ne","","",81,[[["arpd_request",3]],["bool",15]]],[11,"eq","","",82,[[["inotify_event",3]],["bool",15]]],[11,"ne","","",82,[[["inotify_event",3]],["bool",15]]],[11,"eq","","",83,[[["fanotify_response",3]],["bool",15]]],[11,"ne","","",83,[[["fanotify_response",3]],["bool",15]]],[11,"eq","","",84,[[["sockaddr_vm",3]],["bool",15]]],[11,"ne","","",84,[[["sockaddr_vm",3]],["bool",15]]],[11,"eq","","",85,[[["regmatch_t",3]],["bool",15]]],[11,"ne","","",85,[[["regmatch_t",3]],["bool",15]]],[11,"eq","","",86,[[["sock_extended_err",3]],["bool",15]]],[11,"ne","","",86,[[["sock_extended_err",3]],["bool",15]]],[11,"eq","","",87,[[["__c_anonymous_sockaddr_can_tp",3]],["bool",15]]],[11,"ne","","",87,[[["__c_anonymous_sockaddr_can_tp",3]],["bool",15]]],[11,"eq","","",88,[[["__c_anonymous_sockaddr_can_j1939",3]],["bool",15]]],[11,"ne","","",88,[[["__c_anonymous_sockaddr_can_j1939",3]],["bool",15]]],[11,"eq","","",89,[[["can_filter",3]],["bool",15]]],[11,"ne","","",89,[[["can_filter",3]],["bool",15]]],[11,"eq","","",90,[[["sockaddr_nl",3]],["bool",15]]],[11,"eq","","",91,[[["dirent",3]],["bool",15]]],[11,"eq","","",92,[[["dirent64",3]],["bool",15]]],[11,"eq","","",164,[[["pthread_cond_t",3]],["bool",15]]],[11,"eq","","",165,[[["pthread_mutex_t",3]],["bool",15]]],[11,"eq","","",166,[[["pthread_rwlock_t",3]],["bool",15]]],[11,"eq","","",93,[[["sockaddr_alg",3]],["bool",15]]],[11,"eq","","",94,[[["uinput_setup",3]],["bool",15]]],[11,"eq","","",95,[[["uinput_user_dev",3]],["bool",15]]],[11,"eq","","",96,[[["af_alg_iv",3]],["bool",15]]],[11,"eq","","",97,[[["mq_attr",3]],["bool",15]]],[11,"eq","","",100,[[["statx",3]],["bool",15]]],[11,"ne","","",100,[[["statx",3]],["bool",15]]],[11,"eq","","",101,[[["statx_timestamp",3]],["bool",15]]],[11,"ne","","",101,[[["statx_timestamp",3]],["bool",15]]],[11,"eq","","",102,[[["aiocb",3]],["bool",15]]],[11,"ne","","",102,[[["aiocb",3]],["bool",15]]],[11,"eq","","",103,[[["__exit_status",3]],["bool",15]]],[11,"ne","","",103,[[["__exit_status",3]],["bool",15]]],[11,"eq","","",104,[[["__timeval",3]],["bool",15]]],[11,"ne","","",104,[[["__timeval",3]],["bool",15]]],[11,"eq","","",105,[[["glob64_t",3]],["bool",15]]],[11,"ne","","",105,[[["glob64_t",3]],["bool",15]]],[11,"eq","","",106,[[["msghdr",3]],["bool",15]]],[11,"ne","","",106,[[["msghdr",3]],["bool",15]]],[11,"eq","","",107,[[["cmsghdr",3]],["bool",15]]],[11,"ne","","",107,[[["cmsghdr",3]],["bool",15]]],[11,"eq","","",108,[[["termios",3]],["bool",15]]],[11,"ne","","",108,[[["termios",3]],["bool",15]]],[11,"eq","","",109,[[["mallinfo",3]],["bool",15]]],[11,"ne","","",109,[[["mallinfo",3]],["bool",15]]],[11,"eq","","",110,[[["nlmsghdr",3]],["bool",15]]],[11,"ne","","",110,[[["nlmsghdr",3]],["bool",15]]],[11,"eq","","",111,[[["nlmsgerr",3]],["bool",15]]],[11,"ne","","",111,[[["nlmsgerr",3]],["bool",15]]],[11,"eq","","",112,[[["nl_pktinfo",3]],["bool",15]]],[11,"ne","","",112,[[["nl_pktinfo",3]],["bool",15]]],[11,"eq","","",113,[[["nl_mmap_req",3]],["bool",15]]],[11,"ne","","",113,[[["nl_mmap_req",3]],["bool",15]]],[11,"eq","","",114,[[["nl_mmap_hdr",3]],["bool",15]]],[11,"ne","","",114,[[["nl_mmap_hdr",3]],["bool",15]]],[11,"eq","","",115,[[["nlattr",3]],["bool",15]]],[11,"ne","","",115,[[["nlattr",3]],["bool",15]]],[11,"eq","","",116,[[["rtentry",3]],["bool",15]]],[11,"ne","","",116,[[["rtentry",3]],["bool",15]]],[11,"eq","","",117,[[["timex",3]],["bool",15]]],[11,"ne","","",117,[[["timex",3]],["bool",15]]],[11,"eq","","",118,[[["ntptimeval",3]],["bool",15]]],[11,"ne","","",118,[[["ntptimeval",3]],["bool",15]]],[11,"eq","","",155,[[["regex_t",3]],["bool",15]]],[11,"ne","","",155,[[["regex_t",3]],["bool",15]]],[11,"eq","","",119,[[["elf64_chdr",3]],["bool",15]]],[11,"ne","","",119,[[["elf64_chdr",3]],["bool",15]]],[11,"eq","","",120,[[["elf32_chdr",3]],["bool",15]]],[11,"ne","","",120,[[["elf32_chdr",3]],["bool",15]]],[11,"eq","","",121,[[["utmpx",3]],["bool",15]]],[11,"eq","","",153,[[["sigset_t",3]],["bool",15]]],[11,"ne","","",153,[[["sigset_t",3]],["bool",15]]],[11,"eq","","",122,[[["sysinfo",3]],["bool",15]]],[11,"ne","","",122,[[["sysinfo",3]],["bool",15]]],[11,"eq","","",123,[[["msqid_ds",3]],["bool",15]]],[11,"ne","","",123,[[["msqid_ds",3]],["bool",15]]],[11,"eq","","",124,[[["sigaction",3]],["bool",15]]],[11,"ne","","",124,[[["sigaction",3]],["bool",15]]],[11,"eq","","",125,[[["statfs",3]],["bool",15]]],[11,"ne","","",125,[[["statfs",3]],["bool",15]]],[11,"eq","","",126,[[["flock",3]],["bool",15]]],[11,"ne","","",126,[[["flock",3]],["bool",15]]],[11,"eq","","",127,[[["flock64",3]],["bool",15]]],[11,"ne","","",127,[[["flock64",3]],["bool",15]]],[11,"eq","","",128,[[["siginfo_t",3]],["bool",15]]],[11,"ne","","",128,[[["siginfo_t",3]],["bool",15]]],[11,"eq","","",129,[[["stack_t",3]],["bool",15]]],[11,"ne","","",129,[[["stack_t",3]],["bool",15]]],[11,"eq","","",130,[[["stat",3]],["bool",15]]],[11,"ne","","",130,[[["stat",3]],["bool",15]]],[11,"eq","","",131,[[["stat64",3]],["bool",15]]],[11,"ne","","",131,[[["stat64",3]],["bool",15]]],[11,"eq","","",132,[[["statfs64",3]],["bool",15]]],[11,"ne","","",132,[[["statfs64",3]],["bool",15]]],[11,"eq","","",133,[[["statvfs64",3]],["bool",15]]],[11,"ne","","",133,[[["statvfs64",3]],["bool",15]]],[11,"eq","","",152,[[["pthread_attr_t",3]],["bool",15]]],[11,"ne","","",152,[[["pthread_attr_t",3]],["bool",15]]],[11,"eq","","",134,[[["_libc_fpxreg",3]],["bool",15]]],[11,"ne","","",134,[[["_libc_fpxreg",3]],["bool",15]]],[11,"eq","","",135,[[["_libc_xmmreg",3]],["bool",15]]],[11,"ne","","",135,[[["_libc_xmmreg",3]],["bool",15]]],[11,"eq","","",136,[[["_libc_fpstate",3]],["bool",15]]],[11,"ne","","",136,[[["_libc_fpstate",3]],["bool",15]]],[11,"eq","","",137,[[["user_regs_struct",3]],["bool",15]]],[11,"ne","","",137,[[["user_regs_struct",3]],["bool",15]]],[11,"eq","","",138,[[["user",3]],["bool",15]]],[11,"ne","","",138,[[["user",3]],["bool",15]]],[11,"eq","","",139,[[["mcontext_t",3]],["bool",15]]],[11,"ne","","",139,[[["mcontext_t",3]],["bool",15]]],[11,"eq","","",140,[[["ipc_perm",3]],["bool",15]]],[11,"ne","","",140,[[["ipc_perm",3]],["bool",15]]],[11,"eq","","",141,[[["shmid_ds",3]],["bool",15]]],[11,"ne","","",141,[[["shmid_ds",3]],["bool",15]]],[11,"eq","","",142,[[["termios2",3]],["bool",15]]],[11,"ne","","",142,[[["termios2",3]],["bool",15]]],[11,"eq","","",143,[[["ip_mreqn",3]],["bool",15]]],[11,"ne","","",143,[[["ip_mreqn",3]],["bool",15]]],[11,"eq","","",144,[[["user_fpregs_struct",3]],["bool",15]]],[11,"eq","","",145,[[["ucontext_t",3]],["bool",15]]],[11,"eq","","",146,[[["statvfs",3]],["bool",15]]],[11,"ne","","",146,[[["statvfs",3]],["bool",15]]],[11,"eq","","",154,[[["sem_t",3]],["bool",15]]],[11,"ne","","",154,[[["sem_t",3]],["bool",15]]],[11,"eq","","",161,[[["pthread_mutexattr_t",3]],["bool",15]]],[11,"ne","","",161,[[["pthread_mutexattr_t",3]],["bool",15]]],[11,"eq","","",162,[[["pthread_rwlockattr_t",3]],["bool",15]]],[11,"ne","","",162,[[["pthread_rwlockattr_t",3]],["bool",15]]],[11,"eq","","",163,[[["pthread_condattr_t",3]],["bool",15]]],[11,"ne","","",163,[[["pthread_condattr_t",3]],["bool",15]]],[11,"eq","","",147,[[["fanotify_event_metadata",3]],["bool",15]]],[11,"ne","","",147,[[["fanotify_event_metadata",3]],["bool",15]]],[11,"eq","","",150,[[["in6_addr",3]],["bool",15]]],[11,"ne","","",150,[[["in6_addr",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",150,[[]]],[11,"clone","","",170,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",171,[[],["file",4]]],[11,"clone","","",172,[[],["fpos_t",4]]],[11,"clone","","",167,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",168,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",169,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",156,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",157,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",158,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["uinput_ff_upload",3]]],[11,"clone","","",66,[[],["uinput_ff_erase",3]]],[11,"clone","","",67,[[],["uinput_abs_setup",3]]],[11,"clone","","",68,[[],["dl_phdr_info",3]]],[11,"clone","","",69,[[],["elf32_ehdr",3]]],[11,"clone","","",70,[[],["elf64_ehdr",3]]],[11,"clone","","",71,[[],["elf32_sym",3]]],[11,"clone","","",72,[[],["elf64_sym",3]]],[11,"clone","","",73,[[],["elf32_phdr",3]]],[11,"clone","","",74,[[],["elf64_phdr",3]]],[11,"clone","","",75,[[],["elf32_shdr",3]]],[11,"clone","","",76,[[],["elf64_shdr",3]]],[11,"clone","","",77,[[],["ucred",3]]],[11,"clone","","",78,[[],["mntent",3]]],[11,"clone","","",159,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",160,[[],["posix_spawnattr_t",3]]],[11,"clone","","",79,[[],["genlmsghdr",3]]],[11,"clone","","",80,[[],["in6_pktinfo",3]]],[11,"clone","","",81,[[],["arpd_request",3]]],[11,"clone","","",82,[[],["inotify_event",3]]],[11,"clone","","",83,[[],["fanotify_response",3]]],[11,"clone","","",84,[[],["sockaddr_vm",3]]],[11,"clone","","",85,[[],["regmatch_t",3]]],[11,"clone","","",86,[[],["sock_extended_err",3]]],[11,"clone","","",87,[[],["__c_anonymous_sockaddr_can_tp",3]]],[11,"clone","","",88,[[],["__c_anonymous_sockaddr_can_j1939",3]]],[11,"clone","","",89,[[],["can_filter",3]]],[11,"clone","","",90,[[],["sockaddr_nl",3]]],[11,"clone","","",91,[[],["dirent",3]]],[11,"clone","","",92,[[],["dirent64",3]]],[11,"clone","","",93,[[],["sockaddr_alg",3]]],[11,"clone","","",94,[[],["uinput_setup",3]]],[11,"clone","","",95,[[],["uinput_user_dev",3]]],[11,"clone","","",96,[[],["af_alg_iv",3]]],[11,"clone","","",97,[[],["mq_attr",3]]],[11,"clone","","",98,[[],["__c_anonymous_sockaddr_can_can_addr",19]]],[11,"clone","","",99,[[],["sockaddr_can",3]]],[11,"clone","","",100,[[],["statx",3]]],[11,"clone","","",101,[[],["statx_timestamp",3]]],[11,"clone","","",102,[[],["aiocb",3]]],[11,"clone","","",103,[[],["__exit_status",3]]],[11,"clone","","",104,[[],["__timeval",3]]],[11,"clone","","",105,[[],["glob64_t",3]]],[11,"clone","","",106,[[],["msghdr",3]]],[11,"clone","","",107,[[],["cmsghdr",3]]],[11,"clone","","",108,[[],["termios",3]]],[11,"clone","","",109,[[],["mallinfo",3]]],[11,"clone","","",110,[[],["nlmsghdr",3]]],[11,"clone","","",111,[[],["nlmsgerr",3]]],[11,"clone","","",112,[[],["nl_pktinfo",3]]],[11,"clone","","",113,[[],["nl_mmap_req",3]]],[11,"clone","","",114,[[],["nl_mmap_hdr",3]]],[11,"clone","","",115,[[],["nlattr",3]]],[11,"clone","","",116,[[],["rtentry",3]]],[11,"clone","","",117,[[],["timex",3]]],[11,"clone","","",118,[[],["ntptimeval",3]]],[11,"clone","","",155,[[],["regex_t",3]]],[11,"clone","","",119,[[],["elf64_chdr",3]]],[11,"clone","","",120,[[],["elf32_chdr",3]]],[11,"clone","","",121,[[],["utmpx",3]]],[11,"clone","","",153,[[],["sigset_t",3]]],[11,"clone","","",122,[[],["sysinfo",3]]],[11,"clone","","",123,[[],["msqid_ds",3]]],[11,"clone","","",124,[[],["sigaction",3]]],[11,"clone","","",125,[[],["statfs",3]]],[11,"clone","","",126,[[],["flock",3]]],[11,"clone","","",127,[[],["flock64",3]]],[11,"clone","","",128,[[],["siginfo_t",3]]],[11,"clone","","",129,[[],["stack_t",3]]],[11,"clone","","",130,[[],["stat",3]]],[11,"clone","","",131,[[],["stat64",3]]],[11,"clone","","",132,[[],["statfs64",3]]],[11,"clone","","",133,[[],["statvfs64",3]]],[11,"clone","","",152,[[],["pthread_attr_t",3]]],[11,"clone","","",134,[[],["_libc_fpxreg",3]]],[11,"clone","","",135,[[],["_libc_xmmreg",3]]],[11,"clone","","",136,[[],["_libc_fpstate",3]]],[11,"clone","","",137,[[],["user_regs_struct",3]]],[11,"clone","","",138,[[],["user",3]]],[11,"clone","","",139,[[],["mcontext_t",3]]],[11,"clone","","",140,[[],["ipc_perm",3]]],[11,"clone","","",141,[[],["shmid_ds",3]]],[11,"clone","","",142,[[],["termios2",3]]],[11,"clone","","",143,[[],["ip_mreqn",3]]],[11,"clone","","",144,[[],["user_fpregs_struct",3]]],[11,"clone","","",145,[[],["ucontext_t",3]]],[11,"clone","","",146,[[],["statvfs",3]]],[11,"clone","","",151,[[],["max_align_t",3]]],[11,"clone","","",154,[[],["sem_t",3]]],[11,"clone","","",161,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",162,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",163,[[],["pthread_condattr_t",3]]],[11,"clone","","",147,[[],["fanotify_event_metadata",3]]],[11,"clone","","",164,[[],["pthread_cond_t",3]]],[11,"clone","","",165,[[],["pthread_mutex_t",3]]],[11,"clone","","",166,[[],["pthread_rwlock_t",3]]],[11,"clone","","",148,[[],["can_frame",3]]],[11,"clone","","",149,[[],["canfd_frame",3]]],[11,"clone","","",150,[[],["in6_addr",3]]],[11,"si_addr","","",128,[[]]],[11,"si_value","","",128,[[],["sigval",3]]],[11,"si_pid","","",128,[[],["pid_t",6]]],[11,"si_uid","","",128,[[],["uid_t",6]]],[11,"si_status","","",128,[[],["c_int",6]]],[11,"si_utime","","",128,[[],["c_long",6]]],[11,"si_stime","","",128,[[],["c_long",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","i":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a …",null,null],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a …",null,null],[8,"RawMutex","","Basic operations for a mutex.",null,null],[18,"INIT","","Initial value for an unlocked mutex.",0,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should …",0,null],[10,"lock","","Acquires this mutex, blocking the current thread until it …",0,[[]]],[10,"try_lock","","Attempts to acquire this mutex without blocking. Returns …",0,[[],["bool",15]]],[10,"unlock","","Unlocks this mutex.",0,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",0,[[],["bool",15]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair …",null,null],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",1,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there …",1,[[]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with …",null,null],[16,"Duration","","Duration type used for <code>try_lock_for</code>.",2,null],[16,"Instant","","Instant type used for <code>try_lock_until</code>.",2,null],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",2,[[],["bool",15]]],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",2,[[],["bool",15]]],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared …",null,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[3,"MappedMutexGuard","","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …",null,null],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",null,null],[18,"INIT","","Initial value.",3,null],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current …",3,[[],["nonzerousize",3]]],[3,"RawReentrantMutex","","A raw mutex type that wraps another raw mutex to provide …",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single …",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a reentrant …",null,null],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …",null,null],[8,"RawRwLock","","Basic operations for a reader-writer lock.",null,null],[18,"INIT","","Initial value for an unlocked <code>RwLock</code>.",4,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should …",4,null],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until …",4,[[]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",4,[[],["bool",15]]],[10,"unlock_shared","","Releases a shared lock.",4,[[]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread …",4,[[]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",4,[[],["bool",15]]],[10,"unlock_exclusive","","Releases an exclusive lock.",4,[[]]],[11,"is_locked","","Checks if this <code>RwLock</code> is currently locked in any way.",4,[[],["bool",15]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair …",null,null],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",5,[[]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",5,[[]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if …",5,[[]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread …",5,[[]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically …",null,null],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared …",6,[[]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with …",null,null],[16,"Duration","","Duration type used for <code>try_lock_for</code>.",7,null],[16,"Instant","","Instant type used for <code>try_lock_until</code>.",7,null],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is …",7,[[],["bool",15]]],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is …",7,[[],["bool",15]]],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is …",7,[[],["bool",15]]],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is …",7,[[],["bool",15]]],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive …",null,null],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a …",8,[[]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in …",8,[[],["bool",15]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive …",null,null],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is …",9,[[],["bool",15]]],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is …",9,[[],["bool",15]]],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically …",null,null],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread …",10,[[]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",10,[[],["bool",15]]],[10,"unlock_upgradable","","Releases an upgradable lock.",10,[[]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",10,[[]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive …",10,[[],["bool",15]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable …",null,null],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",11,[[]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread …",11,[[]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable …",null,null],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",12,[[]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",12,[[]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable …",null,null],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is …",13,[[],["bool",15]]],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is …",13,[[],["bool",15]]],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive …",13,[[],["bool",15]]],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive …",13,[[],["bool",15]]],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access …",null,null],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …",null,null],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…",null,null],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"deref","","",15,[[]]],[11,"deref","","",16,[[]]],[11,"deref","","",19,[[]]],[11,"deref","","",20,[[]]],[11,"deref","","",22,[[]]],[11,"deref","","",23,[[]]],[11,"deref","","",24,[[]]],[11,"deref","","",25,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",15,[[]]],[11,"deref_mut","","",16,[[]]],[11,"deref_mut","","",23,[[]]],[11,"deref_mut","","",26,[[]]],[11,"from","","",14,[[],["mutex",3]]],[11,"from","","",18,[[],["reentrantmutex",3]]],[11,"from","","",21,[[],["rwlock",3]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"drop","","",15,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",19,[[]]],[11,"drop","","",20,[[]]],[11,"drop","","",22,[[]]],[11,"drop","","",23,[[]]],[11,"drop","","",24,[[]]],[11,"drop","","",25,[[]]],[11,"drop","","",26,[[]]],[11,"default","","",14,[[],["mutex",3]]],[11,"default","","",18,[[],["reentrantmutex",3]]],[11,"default","","",21,[[],["rwlock",3]]],[18,"INIT","","Initial value for an unlocked mutex.",0,null],[11,"is_locked","","Checks whether the mutex is currently locked.",0,[[],["bool",15]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there …",1,[[]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",14,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",14,[[]]],[11,"const_new","","Creates a new mutex based on a pre-existing raw mutex.",14,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is …",14,[[],["mutexguard",3]]],[11,"try_lock","","Attempts to acquire this lock.",14,[[],[["option",4],["mutexguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",14,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",14,[[],["bool",15]]],[11,"force_unlock","","Forcibly unlocks the mutex.",14,[[]]],[11,"raw","","Returns the underlying raw mutex object.",14,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",14,[[]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",14,[[]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,[[],[["option",4],["mutexguard",3]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,[[],[["option",4],["mutexguard",3]]]],[11,"mutex","","Returns a reference to the original <code>Mutex</code> object.",15,[[],["mutex",3]]],[11,"map","","Makes a new <code>MappedMutexGuard</code> for a component of the …",15,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new <code>MappedMutexGuard</code> for a component …",15,[[],[["mappedmutexguard",3],["result",4]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given …",15,[[]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",15,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given …",15,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there …",15,[[]]],[11,"map","","Makes a new <code>MappedMutexGuard</code> for a component of the …",16,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new <code>MappedMutexGuard</code> for a component …",16,[[],[["mappedmutexguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",16,[[]]],[18,"INIT","","Initial value.",3,null],[18,"INIT","","Initial value for an unlocked mutex.",17,null],[11,"lock","","Acquires this mutex, blocking if it\'s held by another …",17,[[]]],[11,"try_lock","","Attempts to acquire this mutex without blocking. Returns …",17,[[],["bool",15]]],[11,"unlock","","Unlocks this mutex. The inner mutex may not be unlocked if…",17,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",17,[[],["bool",15]]],[11,"unlock_fair","","Unlocks this mutex using a fair unlock protocol. The …",17,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there …",17,[[]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",17,[[],["bool",15]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",17,[[],["bool",15]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready …",18,[[],["reentrantmutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",18,[[]]],[11,"const_new","","Creates a new reentrant mutex based on a pre-existing raw …",18,[[],["reentrantmutex",3]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread …",18,[[],["reentrantmutexguard",3]]],[11,"try_lock","","Attempts to acquire this lock.",18,[[],[["option",4],["reentrantmutexguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",18,[[]]],[11,"is_locked","","Checks whether the mutex is currently locked.",18,[[],["bool",15]]],[11,"force_unlock","","Forcibly unlocks the mutex.",18,[[]]],[11,"raw","","Returns the underlying raw mutex object.",18,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",18,[[]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",18,[[]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",18,[[],[["option",4],["reentrantmutexguard",3]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",18,[[],[["option",4],["reentrantmutexguard",3]]]],[11,"remutex","","Returns a reference to the original <code>ReentrantMutex</code> object.",19,[[],["reentrantmutex",3]]],[11,"map","","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …",19,[[],[["mappedreentrantmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …",19,[[],[["result",4],["mappedreentrantmutexguard",3]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given …",19,[[]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",19,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given …",19,[[]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there …",19,[[]]],[11,"map","","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …",20,[[],[["mappedreentrantmutexguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …",20,[[],[["result",4],["mappedreentrantmutexguard",3]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",20,[[]]],[18,"INIT","","Initial value for an unlocked <code>RwLock</code>.",4,null],[11,"is_locked","","Checks if this <code>RwLock</code> is currently locked in any way.",4,[[],["bool",15]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if …",5,[[]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread …",5,[[]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread …",11,[[]]],[11,"new","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",21,[[],["rwlock",3]]],[11,"into_inner","","Consumes this <code>RwLock</code>, returning the underlying data.",21,[[]]],[11,"const_new","","Creates a new new instance of an <code>RwLock<T></code> based on a …",21,[[],["rwlock",3]]],[11,"read","","Locks this <code>RwLock</code> with shared read access, blocking the …",21,[[],["rwlockreadguard",3]]],[11,"try_read","","Attempts to acquire this <code>RwLock</code> with shared read access.",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"write","","Locks this <code>RwLock</code> with exclusive write access, blocking …",21,[[],["rwlockwriteguard",3]]],[11,"try_write","","Attempts to lock this <code>RwLock</code> with exclusive write access.",21,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",21,[[]]],[11,"is_locked","","Checks whether this <code>RwLock</code> is currently locked in any way.",21,[[],["bool",15]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",21,[[]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",21,[[]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",21,[[]]],[11,"data_ptr","","Returns a raw pointer to the underlying data.",21,[[]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",21,[[]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock …",21,[[]]],[11,"try_read_for","","Attempts to acquire this <code>RwLock</code> with shared read access …",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_until","","Attempts to acquire this <code>RwLock</code> with shared read access …",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_write_for","","Attempts to acquire this <code>RwLock</code> with exclusive write …",21,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"try_write_until","","Attempts to acquire this <code>RwLock</code> with exclusive write …",21,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"read_recursive","","Locks this <code>RwLock</code> with shared read access, blocking the …",21,[[],["rwlockreadguard",3]]],[11,"try_read_recursive","","Attempts to acquire this <code>RwLock</code> with shared read access.",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_recursive_for","","Attempts to acquire this <code>RwLock</code> with shared read access …",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"try_read_recursive_until","","Attempts to acquire this <code>RwLock</code> with shared read access …",21,[[],[["rwlockreadguard",3],["option",4]]]],[11,"upgradable_read","","Locks this <code>RwLock</code> with upgradable read access, blocking …",21,[[],["rwlockupgradablereadguard",3]]],[11,"try_upgradable_read","","Attempts to acquire this <code>RwLock</code> with upgradable read …",21,[[],[["rwlockupgradablereadguard",3],["option",4]]]],[11,"try_upgradable_read_for","","Attempts to acquire this <code>RwLock</code> with upgradable read …",21,[[],[["rwlockupgradablereadguard",3],["option",4]]]],[11,"try_upgradable_read_until","","Attempts to acquire this <code>RwLock</code> with upgradable read …",21,[[],[["rwlockupgradablereadguard",3],["option",4]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock …",22,[[],["rwlock",3]]],[11,"map","","Make a new <code>MappedRwLockReadGuard</code> for a component of the …",22,[[],[["mappedrwlockreadguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …",22,[[],[["mappedrwlockreadguard",3],["result",4]]]],[11,"unlocked","","Temporarily unlocks the <code>RwLock</code> to execute the given …",22,[[]]],[11,"unlock_fair","","Unlocks the <code>RwLock</code> using a fair unlock protocol.",22,[[]]],[11,"unlocked_fair","","Temporarily unlocks the <code>RwLock</code> to execute the given …",22,[[]]],[11,"bump","","Temporarily yields the <code>RwLock</code> to a waiting thread if …",22,[[]]],[11,"rwlock","","Returns a reference to the original reader-writer lock …",23,[[],["rwlock",3]]],[11,"map","","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …",23,[[],[["mappedrwlockwriteguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …",23,[[],[["result",4],["mappedrwlockwriteguard",3]]]],[11,"unlocked","","Temporarily unlocks the <code>RwLock</code> to execute the given …",23,[[]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock …",23,[[],["rwlockreadguard",3]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable …",23,[[],["rwlockupgradablereadguard",3]]],[11,"unlock_fair","","Unlocks the <code>RwLock</code> using a fair unlock protocol.",23,[[]]],[11,"unlocked_fair","","Temporarily unlocks the <code>RwLock</code> to execute the given …",23,[[]]],[11,"bump","","Temporarily yields the <code>RwLock</code> to a waiting thread if …",23,[[]]],[11,"rwlock","","Returns a reference to the original reader-writer lock …",24,[[],["rwlock",3]]],[11,"unlocked","","Temporarily unlocks the <code>RwLock</code> to execute the given …",24,[[]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a …",24,[[],["rwlockwriteguard",3]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into …",24,[[],[["rwlockwriteguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the <code>RwLock</code> using a fair unlock protocol.",24,[[]]],[11,"unlocked_fair","","Temporarily unlocks the <code>RwLock</code> to execute the given …",24,[[]]],[11,"bump","","Temporarily yields the <code>RwLock</code> to a waiting thread if …",24,[[]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a …",24,[[],["rwlockreadguard",3]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into …",24,[[],[["rwlockwriteguard",3],["result",4]]]],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into …",24,[[],[["rwlockwriteguard",3],["result",4]]]],[11,"map","","Make a new <code>MappedRwLockReadGuard</code> for a component of the …",25,[[],[["mappedrwlockreadguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …",25,[[],[["mappedrwlockreadguard",3],["result",4]]]],[11,"unlock_fair","","Unlocks the <code>RwLock</code> using a fair unlock protocol.",25,[[]]],[11,"map","","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …",26,[[],[["mappedrwlockwriteguard",3],["sized",8]]]],[11,"try_map","","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …",26,[[],[["result",4],["mappedrwlockwriteguard",3]]]],[11,"unlock_fair","","Unlocks the <code>RwLock</code> using a fair unlock protocol.",26,[[]]]],"p":[[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"RawReentrantMutex"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the <code>Level</code>.",0,[[],["str",15]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",1,[[],["str",15]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[],["str",15]]],[11,"module_path","","The module path of the message.",2,[[],[["str",15],["option",4]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"file","","The source file containing the message.",2,[[],[["str",15],["option",4]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"line","","The line containing the message.",2,[[],[["u32",15],["option",4]]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["u32",15],["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_boxed_logger","","Sets the global logger to a <code>Box<Log></code>.",null,[[["log",8],["box",3]],[["result",4],["setloggererror",3]]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"eq","","",4,[[["metadata",3]],["bool",15]]],[11,"ne","","",4,[[["metadata",3]],["bool",15]]],[11,"eq","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"le","","",1,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",1,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["level",4]],["bool",15]]],[11,"le","","",1,[[["level",4]],["bool",15]]],[11,"gt","","",1,[[["level",4]],["bool",15]]],[11,"ge","","",1,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["metadata",3]],["bool",15]]],[11,"le","","",4,[[["metadata",3]],["bool",15]]],[11,"gt","","",4,[[["metadata",3]],["bool",15]]],[11,"ge","","",4,[[["metadata",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"le","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"gt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ge","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["level",4]]]],[11,"from_str","","",1,[[["str",15]],[["levelfilter",4],["result",4]]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"minimp3":{"doc":"minimp3Provides a simple wrapper and bindinings to the …","i":[[4,"Error","minimp3","Errors encountered by the MP3 decoder.",null,null],[13,"Io","","An error caused by some IO operation required during …",0,null],[13,"InsufficientData","","The decoder tried to parse a frame from its internal …",0,null],[13,"SkippedData","","The decoder encountered data which was not a frame (ie, …",0,null],[13,"Eof","","The decoder has reached the end of the provided reader.",0,null],[17,"MAX_SAMPLES_PER_FRAME","","Maximum number of samples present in a MP3 frame.",null,null],[3,"Decoder","","A MP3 decoder which consumes a reader and produces <code>Frame</code>s.",null,null],[3,"Frame","","A MP3 frame, owning the decoded audio of that frame.",null,null],[12,"data","","The decoded audio held by this frame. Channels are …",1,null],[12,"sample_rate","","This frame\'s sample rate in hertz.",1,null],[12,"channels","","The number of channels in this frame.",1,null],[12,"layer","","MPEG layer used by this file.",1,null],[12,"bitrate","","Current bitrate as of this frame, in kb/s.",1,null],[11,"new","","Creates a new decoder, consuming the <code>reader</code>.",2,[[]]],[11,"reader","","Return a reference to the underlying reader.",2,[[]]],[11,"reader_mut","","Return a mutable reference to the underlying reader …",2,[[]]],[11,"into_inner","","Destroy the decoder and return the inner reader",2,[[]]],[11,"next_frame","","Reads a new frame from the internal reader. Returns a …",2,[[],[["result",4],["frame",3],["error",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","","",1,[[],["frame",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"Error"],[3,"Frame"],[3,"Decoder"]]},\
"minimp3_sys":{"doc":"","i":[[5,"mp3dec_init","minimp3_sys","",null,null],[5,"mp3dec_decode_frame","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"MINIMP3_MAX_SAMPLES_PER_FRAME","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[3,"__fsid_t","","",null,null],[12,"__val","","",0,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[3,"mp3dec_frame_info_t","","",null,null],[12,"frame_bytes","","",1,null],[12,"frame_offset","","",1,null],[12,"channels","","",1,null],[12,"hz","","",1,null],[12,"layer","","",1,null],[12,"bitrate_kbps","","",1,null],[3,"mp3dec_t","","",null,null],[12,"mdct_overlap","","",2,null],[12,"qmf_state","","",2,null],[12,"reserv","","",2,null],[12,"free_format_bytes","","",2,null],[12,"header","","",2,null],[12,"reserv_buf","","",2,null],[6,"mp3d_sample_t","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["__fsid_t",3]]],[11,"clone","","",1,[[],["mp3dec_frame_info_t",3]]],[11,"clone","","",2,[[],["mp3dec_t",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"__fsid_t"],[3,"mp3dec_frame_info_t"],[3,"mp3dec_t"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","i":[[0,"deflate","miniz_oxide","This module contains functionality for compression.",null,null],[0,"core","miniz_oxide::deflate","Streaming compression functionality.",null,null],[0,"deflate_flags","miniz_oxide::deflate::core","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing …",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We …",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. …",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed …",null,null],[4,"CompressionStrategy","miniz_oxide::deflate::core","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",0,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",0,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",0,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do …",0,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default …",0,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return …",1,null],[13,"Sync","","Try to flush the current data and output an empty raw …",1,null],[13,"Full","","Same as sync, but reset the dictionary so that the …",1,null],[13,"Finish","","Try to flush everything and end the stream.",1,null],[11,"new","","",1,[[["i32",15]],[["mzerror",4],["result",4]]]],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",2,null],[13,"PutBufFailed","","",2,null],[13,"Okay","","",2,null],[13,"Done","","",2,null],[3,"CompressorOxide","","Main compression struct.",null,null],[11,"new","","Create a new <code>CompressorOxide</code> with the given flags.",3,[[["u32",15]]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",3,[[],["u32",15]]],[11,"prev_return_status","","Get the return status of the previous <code>compress</code> call with …",3,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",3,[[],["i32",15]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a …",3,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same …",3,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",3,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an …",3,[[["u8",15]]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",3,[[["dataformat",4],["u8",15]]]],[3,"CallbackFunc","","Callback function and user used in <code>compress_to_output</code>.",null,null],[12,"put_buf_func","","",4,null],[5,"compress","","Main compression function. Tries to compress as much as …",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used …",null,[[["i32",15]],["u32",15]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given …",null,[[["compressoroxide",3],["mzflush",4]],["streamresult",3]]],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress …",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that …",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find …",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified …",null,[[["u8",15]],[["vec",3],["u8",15]]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified …",null,[[["u8",15]],[["vec",3],["u8",15]]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[0,"core","miniz_oxide::inflate","Streaming decompression functionality.",null,null],[0,"inflate_flags","miniz_oxide::inflate::core","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the …",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output …",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[3,"DecompressorOxide","","Main decompression struct.",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",6,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to <code>Start</code>.",6,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently …",6,[[],[["option",4],["u32",15]]]],[5,"decompress","","Main decompression function. Keeps decompressing data …",null,[[["usize",15],["decompressoroxide",3],["u32",15]]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[8,"ResetPolicy","miniz_oxide::inflate::stream","Tag that determines reset policy of InflateState",null,null],[10,"reset","","Performs reset",7,[[["inflatestate",3]]]],[3,"MinReset","","Resets state, without performing expensive ops (e.g. …",null,null],[3,"ZeroReset","","Resets state and zero memory, continuing to use the same …",null,null],[3,"FullReset","","Full reset of the state, including zeroing memory.",null,null],[12,"0","","",8,null],[3,"InflateState","","A struct that compbines a decompressor with extra data …",null,null],[11,"new","","Create a new state.",9,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",9,[[["dataformat",4]],[["box",3],["inflatestate",3]]]],[11,"decompressor","","Access the innner decompressor.",9,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to <code>inflate</code> with this …",9,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits …",9,[[["i32",15]],[["box",3],["inflatestate",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, …",9,[[["dataformat",4]]]],[11,"reset_as","","Resets the state according to specified policy.",9,[[["resetpolicy",8]]]],[5,"inflate","","Try to decompress from <code>input</code> to <code>output</code> with the given …",null,[[["mzflush",4],["inflatestate",3]],["streamresult",3]]],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated …",10,null],[13,"BadParam","","One or more of the input parameters were invalid.",10,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did …",10,null],[13,"Failed","","Failed to decompress due to invalid data.",10,null],[13,"Done","","Finished decomression without issues.",10,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue …",10,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output …",10,null],[11,"from_i32","","",10,[[["i32",15]],[["option",4],["tinflstatus",4]]]],[5,"decompress_to_vec","","Decompress the deflate-encoded data in <code>input</code> to a vector.",null,[[],[["result",4],["vec",3],["tinflstatus",4]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper) …",null,[[],[["result",4],["vec",3],["tinflstatus",4]]]],[5,"decompress_to_vec_with_limit","","Decompress the deflate-encoded data in <code>input</code> to a vector. …",null,[[["usize",15]],[["result",4],["vec",3],["tinflstatus",4]]]],[5,"decompress_to_vec_zlib_with_limit","","Decompress the deflate-encoded data (with a zlib wrapper) …",null,[[["usize",15]],[["result",4],["vec",3],["tinflstatus",4]]]],[4,"MZFlush","miniz_oxide","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is …",11,null],[13,"Partial","","Zlib partial flush. Currently treated as <code>Sync</code>.",11,null],[13,"Sync","","Finish compressing the currently buffered data, and …",11,null],[13,"Full","","Same as <code>Sync</code>, but resets the compression dictionary so …",11,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",11,null],[13,"Block","","Not implemented.",11,null],[11,"new","","Create an MZFlush value from an integer value.",11,[[["i32",15]],[["mzerror",4],["result",4]]]],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",12,null],[13,"StreamEnd","","",12,null],[13,"NeedDict","","",12,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",13,null],[13,"Stream","","",13,null],[13,"Data","","",13,null],[13,"Mem","","",13,null],[13,"Buf","","",13,null],[13,"Version","","",13,null],[13,"Param","","",13,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",14,null],[13,"Raw","","Raw DEFLATE.",14,null],[6,"MZResult","","<code>Result</code> alias for all miniz status codes both successful …",null,null],[3,"StreamResult","","A structure containg the result of a call to the inflate …",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",15,null],[12,"bytes_written","","The number of bytes written to the output slice.",15,null],[12,"status","","The return status of the call.",15,null],[11,"from","miniz_oxide::deflate::core","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","miniz_oxide::inflate::core","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","miniz_oxide","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"reset","miniz_oxide::inflate::stream","",16,[[["inflatestate",3]]]],[11,"reset","","",17,[[["inflatestate",3]]]],[11,"reset","","",8,[[["inflatestate",3]]]],[11,"from","miniz_oxide::deflate::core","",1,[[["mzflush",4]]]],[11,"from","miniz_oxide","",18,[[["streamresult",3]]]],[11,"from","","",18,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",10,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"eq","miniz_oxide::deflate::core","",0,[[["compressionstrategy",4]],["bool",15]]],[11,"eq","","",1,[[["tdeflflush",4]],["bool",15]]],[11,"eq","","",2,[[["tdeflstatus",4]],["bool",15]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]],["bool",15]]],[11,"eq","miniz_oxide::inflate","",10,[[["tinflstatus",4]],["bool",15]]],[11,"eq","miniz_oxide","",11,[[["mzflush",4]],["bool",15]]],[11,"eq","","",12,[[["mzstatus",4]],["bool",15]]],[11,"eq","","",13,[[["mzerror",4]],["bool",15]]],[11,"eq","","",14,[[["dataformat",4]],["bool",15]]],[11,"eq","","",15,[[["streamresult",3]],["bool",15]]],[11,"ne","","",15,[[["streamresult",3]],["bool",15]]],[11,"hash","miniz_oxide::deflate::core","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",10,[[]]],[11,"hash","miniz_oxide","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"clone","miniz_oxide::deflate::core","",0,[[],["compressionstrategy",4]]],[11,"clone","","",1,[[],["tdeflflush",4]]],[11,"clone","","",2,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",10,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",11,[[],["mzflush",4]]],[11,"clone","","",12,[[],["mzstatus",4]]],[11,"clone","","",13,[[],["mzerror",4]]],[11,"clone","","",14,[[],["dataformat",4]]],[11,"clone","","",15,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper …",3,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",6,[[]]],[11,"default","miniz_oxide::inflate::stream","",9,[[]]]],"p":[[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[3,"CallbackFunc"],[4,"CompressionLevel"],[3,"DecompressorOxide"],[8,"ResetPolicy"],[3,"FullReset"],[3,"InflateState"],[4,"TINFLStatus"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[3,"MinReset"],[3,"ZeroReset"],[6,"MZResult"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","i":[[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Event","mio::event","A readiness event.",null,null],[3,"Events","","A collection of readiness events.",null,null],[3,"Iter","","<code>Events</code> iterator.",null,null],[8,"Source","","An event source that may be registered with <code>Registry</code>.",null,null],[10,"register","","Register <code>self</code> with the given <code>Registry</code> instance.",0,[[["registry",3],["token",3],["interest",3]],["result",6]]],[10,"reregister","","Re-register <code>self</code> with the given <code>Registry</code> instance.",0,[[["registry",3],["token",3],["interest",3]],["result",6]]],[10,"deregister","","Deregister <code>self</code> from the given <code>Registry</code> instance.",0,[[["registry",3]],["result",6]]],[0,"unix","mio","Unix only extensions.",null,null],[0,"pipe","mio::unix","Unix pipe.",null,null],[5,"new","mio::unix::pipe","Create a new non-blocking Unix pipe.",null,[[],["result",6]]],[3,"Receiver","","Receiving end of an Unix pipe.",null,null],[3,"Sender","","Sending end of an Unix pipe.",null,null],[3,"SourceFd","mio::unix","Adapter for [<code>RawFd</code>] providing an <code>event::Source</code> …",null,null],[12,"0","","",1,null],[0,"features","mio","Mio\'s optional features.This document describes the …",null,null],[0,"guide","","Getting started guide.In this guide we\'ll do the …",null,null],[3,"Interest","","Interest used in registering.",null,null],[3,"Poll","","Polls for readiness events on all registered values.",null,null],[3,"Registry","","Registers I/O resources.",null,null],[3,"Token","","Associates readiness events with <code>event::Source</code>s.",null,null],[12,"0","","",2,null],[3,"Waker","","Waker allows cross-thread waking of <code>Poll</code>.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","mio::unix","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","mio::unix::pipe","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","mio","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","mio::event","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"register","mio::unix","",1,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",1,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",1,[[["registry",3]],["result",6]]],[11,"register","mio::unix::pipe","",6,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",6,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",6,[[["registry",3]],["result",6]]],[11,"register","","",7,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",7,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",7,[[["registry",3]],["result",6]]],[11,"from","","",6,[[["childstdin",3]],["sender",3]]],[11,"from","","",7,[[["childstdout",3]],["receiver",3]]],[11,"from","","",7,[[["childstderr",3]],["receiver",3]]],[11,"next","mio::event","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[],["usize",15]]],[11,"clone","mio","",3,[[],["interest",3]]],[11,"clone","","",2,[[],["token",3]]],[11,"clone","mio::event","",9,[[],["event",3]]],[11,"clone","","",11,[[],["iter",3]]],[11,"cmp","mio","",3,[[["interest",3]],["ordering",4]]],[11,"cmp","","",2,[[["token",3]],["ordering",4]]],[11,"eq","","",3,[[["interest",3]],["bool",15]]],[11,"ne","","",3,[[["interest",3]],["bool",15]]],[11,"eq","","",2,[[["token",3]],["bool",15]]],[11,"ne","","",2,[[["token",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["interest",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["interest",3]],["bool",15]]],[11,"le","","",3,[[["interest",3]],["bool",15]]],[11,"gt","","",3,[[["interest",3]],["bool",15]]],[11,"ge","","",3,[[["interest",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["token",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["token",3]],["bool",15]]],[11,"le","","",2,[[["token",3]],["bool",15]]],[11,"gt","","",2,[[["token",3]],["bool",15]]],[11,"ge","","",2,[[["token",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","mio::unix","",1,[[["formatter",3]],["result",6]]],[11,"fmt","mio::unix::pipe","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","mio","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","mio::event","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"bitor","mio","",3,[[]]],[11,"bitor_assign","","",3,[[]]],[11,"hash","","",2,[[]]],[11,"read","mio::unix::pipe","",7,[[],[["usize",15],["result",6]]]],[11,"read_vectored","","",7,[[],[["usize",15],["result",6]]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"write_vectored","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"as_raw_fd","mio","",4,[[],["rawfd",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"as_raw_fd","mio::unix::pipe","",6,[[],["rawfd",6]]],[11,"as_raw_fd","","",7,[[],["rawfd",6]]],[11,"from_raw_fd","","",6,[[["rawfd",6]],["sender",3]]],[11,"from_raw_fd","","",7,[[["rawfd",6]],["receiver",3]]],[11,"into_raw_fd","","",6,[[],["rawfd",6]]],[11,"into_raw_fd","","",7,[[],["rawfd",6]]],[18,"READABLE","mio","Returns a <code>Interest</code> set representing readable interests.",3,null],[18,"WRITABLE","","Returns a <code>Interest</code> set representing writable interests.",3,null],[11,"add","","Add together two <code>Interest</code>.",3,[[["interest",3]],["interest",3]]],[11,"remove","","Removes <code>other</code> <code>Interest</code> from <code>self</code>.",3,[[["interest",3]],[["interest",3],["option",4]]]],[11,"is_readable","","Returns true if the value includes readable readiness.",3,[[],["bool",15]]],[11,"is_writable","","Returns true if the value includes writable readiness.",3,[[],["bool",15]]],[11,"is_aio","","Returns true if <code>Interest</code> contains AIO readiness",3,[[],["bool",15]]],[11,"is_lio","","Returns true if <code>Interest</code> contains LIO readiness",3,[[],["bool",15]]],[11,"registry","","Create a separate <code>Registry</code> which can be used to register …",4,[[],["registry",3]]],[11,"poll","","Wait for readiness events",4,[[["duration",3],["option",4],["events",3]],["result",6]]],[11,"new","","Return a new <code>Poll</code> handle.",4,[[],[["poll",3],["result",6]]]],[11,"register","","Register an <code>event::Source</code> with the <code>Poll</code> instance.",5,[[["token",3],["interest",3]],["result",6]]],[11,"reregister","","Re-register an [<code>event::Source</code>] with the <code>Poll</code> instance.",5,[[["token",3],["interest",3]],["result",6]]],[11,"deregister","","Deregister an [<code>event::Source</code>] with the <code>Poll</code> instance.",5,[[],["result",6]]],[11,"try_clone","","Creates a new independently owned <code>Registry</code>.",5,[[],[["registry",3],["result",6]]]],[11,"set_nonblocking","mio::unix::pipe","Set the <code>Sender</code> into or out of non-blocking mode.",6,[[["bool",15]],["result",6]]],[11,"set_nonblocking","","Set the <code>Receiver</code> into or out of non-blocking mode.",7,[[["bool",15]],["result",6]]],[11,"new","mio","Create a new <code>Waker</code>.",8,[[["registry",3],["token",3]],[["waker",3],["result",6]]]],[11,"wake","","Wake up the <code>Poll</code> associated with this <code>Waker</code>.",8,[[],["result",6]]],[11,"token","mio::event","Returns the event\'s token.",9,[[],["token",3]]],[11,"is_readable","","Returns true if the event contains readable readiness.",9,[[],["bool",15]]],[11,"is_writable","","Returns true if the event contains writable readiness.",9,[[],["bool",15]]],[11,"is_error","","Returns true if the event contains error readiness.",9,[[],["bool",15]]],[11,"is_read_closed","","Returns true if the event contains read closed readiness.",9,[[],["bool",15]]],[11,"is_write_closed","","Returns true if the event contains write closed readiness.",9,[[],["bool",15]]],[11,"is_priority","","Returns true if the event contains priority readiness.",9,[[],["bool",15]]],[11,"is_aio","","Returns true if the event contains AIO readiness.",9,[[],["bool",15]]],[11,"is_lio","","Returns true if the event contains LIO readiness.",9,[[],["bool",15]]],[11,"with_capacity","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …",10,[[["usize",15]],["events",3]]],[11,"capacity","","Returns the number of <code>Event</code> values that <code>self</code> can hold.",10,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.",10,[[],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Event</code> values.",10,[[],["iter",3]]],[11,"clear","","Clearing all <code>Event</code> values from container explicitly.",10,[[]]]],"p":[[8,"Source"],[3,"SourceFd"],[3,"Token"],[3,"Interest"],[3,"Poll"],[3,"Registry"],[3,"Sender"],[3,"Receiver"],[3,"Waker"],[3,"Event"],[3,"Events"],[3,"Iter"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","i":[[0,"dir","nix","",null,null],[3,"Dir","nix::dir","An open directory.",null,null],[11,"open","","Opens the given path as with <code>fcntl::open</code>.",0,[[["mode",3],["oflag",3]],["result",6]]],[11,"openat","","Opens the given path as with <code>fcntl::openat</code>.",0,[[["mode",3],["oflag",3],["rawfd",6]],["result",6]]],[11,"from","","Converts from a descriptor-based object, closing the …",0,[[["intorawfd",8]],["result",6]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or …",0,[[["rawfd",6]],["result",6]]],[11,"iter","","Returns an iterator of <code>Result<Entry></code> which rewinds when …",0,[[],["iter",3]]],[3,"Iter","","",null,null],[3,"OwningIter","","The return type of [Dir::into_iter]",null,null],[3,"Entry","","A directory entry, similar to <code>std::fs::DirEntry</code>.",null,null],[4,"Type","","",null,null],[13,"Fifo","","",1,null],[13,"CharacterDevice","","",1,null],[13,"Directory","","",1,null],[13,"BlockDevice","","",1,null],[13,"File","","",1,null],[13,"Symlink","","",1,null],[13,"Socket","","",1,null],[11,"ino","","Returns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.",2,[[],["u64",15]]],[11,"file_name","","Returns the bare file name of this directory entry …",2,[[],["cstr",3]]],[11,"file_type","","Returns the type of this directory entry, if known.",2,[[],[["type",4],["option",4]]]],[0,"env","nix","",null,null],[5,"clearenv","nix::env","Clear the environment of all name-value pairs.",null,[[],["result",6]]],[0,"errno","nix","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",3,null],[13,"EPERM","","",3,null],[13,"ENOENT","","",3,null],[13,"ESRCH","","",3,null],[13,"EINTR","","",3,null],[13,"EIO","","",3,null],[13,"ENXIO","","",3,null],[13,"E2BIG","","",3,null],[13,"ENOEXEC","","",3,null],[13,"EBADF","","",3,null],[13,"ECHILD","","",3,null],[13,"EAGAIN","","",3,null],[13,"ENOMEM","","",3,null],[13,"EACCES","","",3,null],[13,"EFAULT","","",3,null],[13,"ENOTBLK","","",3,null],[13,"EBUSY","","",3,null],[13,"EEXIST","","",3,null],[13,"EXDEV","","",3,null],[13,"ENODEV","","",3,null],[13,"ENOTDIR","","",3,null],[13,"EISDIR","","",3,null],[13,"EINVAL","","",3,null],[13,"ENFILE","","",3,null],[13,"EMFILE","","",3,null],[13,"ENOTTY","","",3,null],[13,"ETXTBSY","","",3,null],[13,"EFBIG","","",3,null],[13,"ENOSPC","","",3,null],[13,"ESPIPE","","",3,null],[13,"EROFS","","",3,null],[13,"EMLINK","","",3,null],[13,"EPIPE","","",3,null],[13,"EDOM","","",3,null],[13,"ERANGE","","",3,null],[13,"EDEADLK","","",3,null],[13,"ENAMETOOLONG","","",3,null],[13,"ENOLCK","","",3,null],[13,"ENOSYS","","",3,null],[13,"ENOTEMPTY","","",3,null],[13,"ELOOP","","",3,null],[13,"ENOMSG","","",3,null],[13,"EIDRM","","",3,null],[13,"ECHRNG","","",3,null],[13,"EL2NSYNC","","",3,null],[13,"EL3HLT","","",3,null],[13,"EL3RST","","",3,null],[13,"ELNRNG","","",3,null],[13,"EUNATCH","","",3,null],[13,"ENOCSI","","",3,null],[13,"EL2HLT","","",3,null],[13,"EBADE","","",3,null],[13,"EBADR","","",3,null],[13,"EXFULL","","",3,null],[13,"ENOANO","","",3,null],[13,"EBADRQC","","",3,null],[13,"EBADSLT","","",3,null],[13,"EBFONT","","",3,null],[13,"ENOSTR","","",3,null],[13,"ENODATA","","",3,null],[13,"ETIME","","",3,null],[13,"ENOSR","","",3,null],[13,"ENONET","","",3,null],[13,"ENOPKG","","",3,null],[13,"EREMOTE","","",3,null],[13,"ENOLINK","","",3,null],[13,"EADV","","",3,null],[13,"ESRMNT","","",3,null],[13,"ECOMM","","",3,null],[13,"EPROTO","","",3,null],[13,"EMULTIHOP","","",3,null],[13,"EDOTDOT","","",3,null],[13,"EBADMSG","","",3,null],[13,"EOVERFLOW","","",3,null],[13,"ENOTUNIQ","","",3,null],[13,"EBADFD","","",3,null],[13,"EREMCHG","","",3,null],[13,"ELIBACC","","",3,null],[13,"ELIBBAD","","",3,null],[13,"ELIBSCN","","",3,null],[13,"ELIBMAX","","",3,null],[13,"ELIBEXEC","","",3,null],[13,"EILSEQ","","",3,null],[13,"ERESTART","","",3,null],[13,"ESTRPIPE","","",3,null],[13,"EUSERS","","",3,null],[13,"ENOTSOCK","","",3,null],[13,"EDESTADDRREQ","","",3,null],[13,"EMSGSIZE","","",3,null],[13,"EPROTOTYPE","","",3,null],[13,"ENOPROTOOPT","","",3,null],[13,"EPROTONOSUPPORT","","",3,null],[13,"ESOCKTNOSUPPORT","","",3,null],[13,"EOPNOTSUPP","","",3,null],[13,"EPFNOSUPPORT","","",3,null],[13,"EAFNOSUPPORT","","",3,null],[13,"EADDRINUSE","","",3,null],[13,"EADDRNOTAVAIL","","",3,null],[13,"ENETDOWN","","",3,null],[13,"ENETUNREACH","","",3,null],[13,"ENETRESET","","",3,null],[13,"ECONNABORTED","","",3,null],[13,"ECONNRESET","","",3,null],[13,"ENOBUFS","","",3,null],[13,"EISCONN","","",3,null],[13,"ENOTCONN","","",3,null],[13,"ESHUTDOWN","","",3,null],[13,"ETOOMANYREFS","","",3,null],[13,"ETIMEDOUT","","",3,null],[13,"ECONNREFUSED","","",3,null],[13,"EHOSTDOWN","","",3,null],[13,"EHOSTUNREACH","","",3,null],[13,"EALREADY","","",3,null],[13,"EINPROGRESS","","",3,null],[13,"ESTALE","","",3,null],[13,"EUCLEAN","","",3,null],[13,"ENOTNAM","","",3,null],[13,"ENAVAIL","","",3,null],[13,"EISNAM","","",3,null],[13,"EREMOTEIO","","",3,null],[13,"EDQUOT","","",3,null],[13,"ENOMEDIUM","","",3,null],[13,"EMEDIUMTYPE","","",3,null],[13,"ECANCELED","","",3,null],[13,"ENOKEY","","",3,null],[13,"EKEYEXPIRED","","",3,null],[13,"EKEYREVOKED","","",3,null],[13,"EKEYREJECTED","","",3,null],[13,"EOWNERDEAD","","",3,null],[13,"ENOTRECOVERABLE","","",3,null],[13,"ERFKILL","","",3,null],[13,"EHWPOISON","","",3,null],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENOTSUP","","",null,null],[5,"from_i32","","",null,[[["i32",15]],["errno",4]]],[5,"errno","","Returns the platform-specific value of errno",null,[[],["i32",15]]],[11,"last","","",3,[[]]],[11,"desc","","",3,[[],["str",15]]],[11,"from_i32","","",3,[[["i32",15]],["errno",4]]],[11,"clear","","",3,[[]]],[11,"result","","Returns <code>Ok(value)</code> if it does not contain the sentinel …",3,[[["errnosentinel",8],["partialeq",8]],[["result",6],["errnosentinel",8],["partialeq",8]]]],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and …",null,null],[10,"sentinel","","",4,[[]]],[0,"features","nix","Feature tests for OS functionality",null,null],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",null,[[],["bool",15]]],[0,"fcntl","nix","",null,null],[4,"PosixFadviseAdvice","nix::fcntl","",null,null],[13,"POSIX_FADV_NORMAL","","",5,null],[13,"POSIX_FADV_SEQUENTIAL","","",5,null],[13,"POSIX_FADV_RANDOM","","",5,null],[13,"POSIX_FADV_NOREUSE","","",5,null],[13,"POSIX_FADV_WILLNEED","","",5,null],[13,"POSIX_FADV_DONTNEED","","",5,null],[5,"posix_fadvise","","",null,[[["posixfadviseadvice",4],["off_t",6],["rawfd",6]],[["c_int",6],["result",6]]]],[3,"AtFlags","","",null,null],[18,"AT_REMOVEDIR","","",6,null],[18,"AT_SYMLINK_FOLLOW","","",6,null],[18,"AT_SYMLINK_NOFOLLOW","","",6,null],[18,"AT_NO_AUTOMOUNT","","",6,null],[18,"AT_EMPTY_PATH","","",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["atflags",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["atflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",6,[[["c_int",6]],[["atflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",6,[[["c_int",6]],["atflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[["c_int",6]],["atflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",6,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",6,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",6,[[["atflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",6,[[["atflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["atflags",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["atflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["atflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",6,[[["bool",15],["atflags",3]]]],[3,"OFlag","","Configuration options for opened files.",null,null],[18,"O_ACCMODE","","Mask for the access mode of the file.",7,null],[18,"O_APPEND","","Open the file in append-only mode.",7,null],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",7,null],[18,"O_CLOEXEC","","Closes the file descriptor once an <code>execve</code> call is made.",7,null],[18,"O_CREAT","","Create the file if it does not exist.",7,null],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",7,null],[18,"O_DIRECTORY","","If the specified path isn\'t a directory, fail.",7,null],[18,"O_DSYNC","","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.",7,null],[18,"O_EXCL","","Error out if a file was not created.",7,null],[18,"O_FSYNC","","Same as <code>O_SYNC</code>.",7,null],[18,"O_LARGEFILE","","Allow files whose sizes can\'t be represented in an <code>off_t</code> …",7,null],[18,"O_NOATIME","","Do not update the file last access time during <code>read(2)</code>s.",7,null],[18,"O_NOCTTY","","Don\'t attach the device as the process\' controlling …",7,null],[18,"O_NDELAY","","Same as <code>O_NONBLOCK</code>.",7,null],[18,"O_NOFOLLOW","","<code>open()</code> will fail if the given path is a symbolic link.",7,null],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",7,null],[18,"O_PATH","","Obtain a file descriptor for low-level access.",7,null],[18,"O_RDONLY","","Only allow reading.",7,null],[18,"O_RDWR","","Allow both reading and writing.",7,null],[18,"O_RSYNC","","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.",7,null],[18,"O_SYNC","","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.",7,null],[18,"O_TMPFILE","","Create an unnamed temporary file.",7,null],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it …",7,null],[18,"O_WRONLY","","Only allow writing.",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["oflag",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",7,[[["c_int",6]],[["option",4],["oflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",7,[[["c_int",6]],["oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[["c_int",6]],["oflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",7,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",7,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",7,[[["oflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",7,[[["oflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",7,[[["bool",15],["oflag",3]]]],[5,"open","","",null,[[["oflag",3],["mode",3]],[["result",6],["rawfd",6]]]],[5,"openat","","",null,[[["mode",3],["oflag",3],["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"renameat","","",null,[[["option",4],["rawfd",6]],["result",6]]],[5,"readlink","","",null,[[],[["result",6],["osstring",3]]]],[5,"readlinkat","","",null,[[["rawfd",6]],[["result",6],["osstring",3]]]],[3,"SealFlag","","Additional flags for file sealing, which allows for …",null,null],[18,"F_SEAL_SEAL","","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.",8,null],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",8,null],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",8,null],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["sealflag",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["sealflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",8,[[["c_int",6]],[["option",4],["sealflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",8,[[["c_int",6]],["sealflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["c_int",6]],["sealflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",8,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",8,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",8,[[["sealflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",8,[[["sealflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["sealflag",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["sealflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["sealflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",8,[[["bool",15],["sealflag",3]]]],[3,"FdFlag","","Additional configuration flags for <code>fcntl</code>\'s <code>F_SETFD</code>.",null,null],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a …",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",9,[[["c_int",6]],[["option",4],["fdflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",9,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",9,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",9,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",9,[[["fdflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",9,[[["fdflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",9,[[["fdflag",3],["bool",15]]]],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",10,null],[13,"F_DUPFD_CLOEXEC","","",10,null],[13,"F_GETFD","","",10,null],[13,"F_SETFD","","",10,null],[13,"F_GETFL","","",10,null],[13,"F_SETFL","","",10,null],[13,"F_SETLK","","",10,null],[13,"F_SETLKW","","",10,null],[13,"F_GETLK","","",10,null],[13,"F_OFD_SETLK","","",10,null],[13,"F_OFD_SETLKW","","",10,null],[13,"F_OFD_GETLK","","",10,null],[13,"F_ADD_SEALS","","",10,null],[13,"F_GET_SEALS","","",10,null],[13,"F_GETPIPE_SZ","","",10,null],[13,"F_SETPIPE_SZ","","",10,null],[5,"fcntl","","",null,[[["fcntlarg",4],["rawfd",6]],[["c_int",6],["result",6]]]],[4,"FlockArg","","",null,null],[13,"LockShared","","",11,null],[13,"LockExclusive","","",11,null],[13,"Unlock","","",11,null],[13,"LockSharedNonblock","","",11,null],[13,"LockExclusiveNonblock","","",11,null],[13,"UnlockNonblock","","",11,null],[5,"flock","","",null,[[["flockarg",4],["rawfd",6]],["result",6]]],[3,"SpliceFFlags","","Additional flags to <code>splice</code> and friends.",null,null],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",12,null],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",12,null],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",12,null],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["splicefflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["splicefflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["c_uint",6]],[["splicefflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["c_uint",6]],["splicefflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_uint",6]],["splicefflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["splicefflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["splicefflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["splicefflags",3],["bool",15]]]],[5,"copy_file_range","","Copy a range of data from one file to another",null,[[["usize",15],["loff_t",6],["option",4],["rawfd",6]],[["result",6],["usize",15]]]],[5,"splice","","",null,[[["usize",15],["splicefflags",3],["loff_t",6],["option",4],["rawfd",6]],[["result",6],["usize",15]]]],[5,"tee","","",null,[[["usize",15],["splicefflags",3],["rawfd",6]],[["result",6],["usize",15]]]],[5,"vmsplice","","",null,[[["splicefflags",3],["rawfd",6]],[["result",6],["usize",15]]]],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation …",null,null],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",13,null],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",13,null],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",13,null],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",13,null],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file …",13,null],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["fallocateflags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["fallocateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",13,[[["c_int",6]],[["fallocateflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",13,[[["c_int",6]],["fallocateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["c_int",6]],["fallocateflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",13,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",13,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",13,[[["fallocateflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",13,[[["fallocateflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",13,[[["fallocateflags",3],["bool",15]]]],[5,"fallocate","","Manipulates file space.",null,[[["fallocateflags",3],["off_t",6],["rawfd",6]],["result",6]]],[5,"posix_fallocate","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[0,"ifaddrs","nix","Query network interface addresses",null,null],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned …",null,null],[12,"interface_name","","Name of the network interface",14,null],[12,"flags","","Flags as from <code>SIOCGIFFLAGS</code> ioctl",14,null],[12,"address","","Network address of this interface",14,null],[12,"netmask","","Netmask of this interface",14,null],[12,"broadcast","","Broadcast address of this interface, if applicable",14,null],[12,"destination","","Point-to-point destination address",14,null],[3,"InterfaceAddressIterator","","Holds the results of <code>getifaddrs</code>.",null,null],[5,"getifaddrs","","Get interface addresses using libc\'s <code>getifaddrs</code>",null,[[],[["interfaceaddressiterator",3],["result",6]]]],[0,"kmod","nix","Load and unload kernel modules.",null,null],[5,"init_module","nix::kmod","Loads a kernel module from a buffer.",null,[[["cstr",3]],["result",6]]],[3,"ModuleInitFlags","","Flags used by the <code>finit_module</code> function.",null,null],[18,"MODULE_INIT_IGNORE_MODVERSIONS","","Ignore symbol version hashes.",15,null],[18,"MODULE_INIT_IGNORE_VERMAGIC","","Ignore kernel version magic.",15,null],[11,"empty","","Returns an empty set of flags",15,[[],["moduleinitflags",3]]],[11,"all","","Returns the set containing all flags.",15,[[],["moduleinitflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",15,[[["c_uint",6]],[["option",4],["moduleinitflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",15,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",15,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",15,[[["moduleinitflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",15,[[["moduleinitflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",15,[[["bool",15],["moduleinitflags",3]]]],[5,"finit_module","","Loads a kernel module from a given file descriptor.",null,[[["cstr",3],["moduleinitflags",3]],["result",6]]],[3,"DeleteModuleFlags","","Flags used by <code>delete_module</code>.",null,null],[18,"O_NONBLOCK","","",16,null],[18,"O_TRUNC","","",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["deletemoduleflags",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["deletemoduleflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",16,[[["c_int",6]],[["option",4],["deletemoduleflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",16,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",16,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",16,[[["bool",15],["deletemoduleflags",3]]]],[5,"delete_module","","Unloads the kernel module with the given name.",null,[[["deletemoduleflags",3],["cstr",3]],["result",6]]],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[18,"MS_RDONLY","","Mount read-only",17,null],[18,"MS_NOSUID","","Ignore suid and sgid bits",17,null],[18,"MS_NODEV","","Disallow access to device special files",17,null],[18,"MS_NOEXEC","","Disallow program execution",17,null],[18,"MS_SYNCHRONOUS","","Writes are synced at once",17,null],[18,"MS_REMOUNT","","Alter flags of a mounted FS",17,null],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",17,null],[18,"MS_DIRSYNC","","Directory modifications are synchronous",17,null],[18,"MS_NOATIME","","Do not update access times",17,null],[18,"MS_NODIRATIME","","Do not update directory access times",17,null],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",17,null],[18,"MS_MOVE","","",17,null],[18,"MS_REC","","",17,null],[18,"MS_SILENT","","",17,null],[18,"MS_POSIXACL","","",17,null],[18,"MS_UNBINDABLE","","",17,null],[18,"MS_PRIVATE","","",17,null],[18,"MS_SLAVE","","",17,null],[18,"MS_SHARED","","",17,null],[18,"MS_RELATIME","","",17,null],[18,"MS_KERNMOUNT","","",17,null],[18,"MS_I_VERSION","","",17,null],[18,"MS_STRICTATIME","","",17,null],[18,"MS_ACTIVE","","",17,null],[18,"MS_NOUSER","","",17,null],[18,"MS_RMT_MASK","","",17,null],[18,"MS_MGC_VAL","","",17,null],[18,"MS_MGC_MSK","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",17,[[["c_ulong",6]],[["msflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",17,[[["c_ulong",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["c_ulong",6]],["msflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",17,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",17,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",17,[[["msflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",17,[[["msflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",17,[[["msflags",3],["bool",15]]]],[3,"MntFlags","","",null,null],[18,"MNT_FORCE","","",18,null],[18,"MNT_DETACH","","",18,null],[18,"MNT_EXPIRE","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["mntflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["mntflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",18,[[["c_int",6]],[["option",4],["mntflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",18,[[["c_int",6]],["mntflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["c_int",6]],["mntflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",18,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",18,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",18,[[["mntflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",18,[[["mntflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["mntflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["mntflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["mntflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",18,[[["bool",15],["mntflags",3]]]],[5,"mount","","",null,[[["msflags",3],["option",4],["option",4],["option",4]],["result",6]]],[5,"umount","","",null,[[],["result",6]]],[5,"umount2","","",null,[[["mntflags",3]],["result",6]]],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[18,"O_RDONLY","","",19,null],[18,"O_WRONLY","","",19,null],[18,"O_RDWR","","",19,null],[18,"O_CREAT","","",19,null],[18,"O_EXCL","","",19,null],[18,"O_NONBLOCK","","",19,null],[18,"O_CLOEXEC","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["mq_oflag",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["mq_oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",19,[[["c_int",6]],[["mq_oflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",19,[[["c_int",6]],["mq_oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["c_int",6]],["mq_oflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",19,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",19,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",19,[[["mq_oflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",19,[[["mq_oflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",19,[[["bool",15],["mq_oflag",3]]]],[3,"FdFlag","","",null,null],[18,"FD_CLOEXEC","","",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",20,[[["c_int",6]],[["fdflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",20,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",20,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",20,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",20,[[["fdflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",20,[[["fdflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",20,[[["bool",15],["fdflag",3]]]],[3,"MqAttr","","",null,null],[6,"mq_attr_member_t","","",null,null],[11,"new","","",21,[[["mq_attr_member_t",6]],["mqattr",3]]],[11,"flags","","",21,[[],["mq_attr_member_t",6]]],[5,"mq_open","","Open a message queue",null,[[["cstring",3],["option",4],["mq_oflag",3],["mqattr",3],["mode",3]],[["result",6],["mqd_t",6]]]],[5,"mq_unlink","","Remove a message queue",null,[[["cstring",3]],["result",6]]],[5,"mq_close","","Close a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_receive","","Receive a message from a message queue",null,[[["u32",15],["mqd_t",6]],[["result",6],["usize",15]]]],[5,"mq_send","","Send a message to a message queue",null,[[["u32",15],["mqd_t",6]],["result",6]]],[5,"mq_getattr","","Get message queue attributes",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only <code>O_NONBLOCK</code> …",null,[[["mqattr",3],["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_set_nonblock","","Convenience function. Sets the <code>O_NONBLOCK</code> attribute for a …",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_remove_nonblock","","Convenience function. Removes <code>O_NONBLOCK</code> attribute for a …",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[0,"net","nix","Functionality involving network interfaces",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,[[],[["c_uint",6],["result",6]]]],[3,"InterfaceFlags","","Standard interface flags, used by <code>getifaddrs</code>",null,null],[18,"IFF_UP","","Interface is running. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_BROADCAST","","Valid broadcast address set. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_DEBUG","","Internal debugging flag. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_RUNNING","","Resources allocated. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see …",22,null],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_MASTER","","Master of a load balancing bundle. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_MULTICAST","","Supports multicast. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see …",22,null],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",22,null],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",22,null],[18,"IFF_ECHO","","Echo sent packets. Volatile.",22,null],[18,"IFF_NO_PI","","Do not provide packet information",22,null],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",22,null],[18,"IFF_TAP","","TAP device",22,null],[11,"empty","","Returns an empty set of flags",22,[[],["interfaceflags",3]]],[11,"all","","Returns the set containing all flags.",22,[[],["interfaceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",22,[[["c_int",6]],[["option",4],["interfaceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",22,[[["c_int",6]],["interfaceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",22,[[["c_int",6]],["interfaceflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",22,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",22,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",22,[[["interfaceflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",22,[[["interfaceflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",22,[[["bool",15],["interfaceflags",3]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",null,null],[3,"PollFd","nix::poll","This is a wrapper around <code>libc::pollfd</code>.",null,null],[11,"new","","Creates a new <code>PollFd</code> specifying the events of interest …",23,[[["pollflags",3],["rawfd",6]],["pollfd",3]]],[11,"revents","","Returns the events that occured in the last call to <code>poll</code> …",23,[[],[["option",4],["pollflags",3]]]],[3,"PollFlags","","These flags define the different events that can be …",null,null],[18,"POLLIN","","There is data to read.",24,null],[18,"POLLPRI","","There is some exceptional condition on the file …",24,null],[18,"POLLOUT","","Writing is now possible, though a write larger that the …",24,null],[18,"POLLRDNORM","","Equivalent to <code>POLLIN</code>",24,null],[18,"POLLWRNORM","","Equivalent to <code>POLLOUT</code>",24,null],[18,"POLLRDBAND","","Priority band data can be read (generally unused on …",24,null],[18,"POLLWRBAND","","Priority data may be written.",24,null],[18,"POLLERR","","Error condition (only returned in <code>PollFd::revents</code>; …",24,null],[18,"POLLHUP","","Hang up (only returned in <code>PollFd::revents</code>; ignored in …",24,null],[18,"POLLNVAL","","Invalid request: <code>fd</code> not open (only returned in …",24,null],[11,"empty","","Returns an empty set of flags",24,[[],["pollflags",3]]],[11,"all","","Returns the set containing all flags.",24,[[],["pollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",24,[[["c_short",6]],[["option",4],["pollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",24,[[["c_short",6]],["pollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",24,[[["c_short",6]],["pollflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",24,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",24,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",24,[[["pollflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",24,[[["pollflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["pollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["pollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["pollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",24,[[["bool",15],["pollflags",3]]]],[5,"poll","","<code>poll</code> waits for one of a set of file descriptors to become …",null,[[["c_int",6]],[["c_int",6],["result",6]]]],[5,"ppoll","","<code>ppoll()</code> allows an application to safely wait until either …",null,[[["option",4],["sigset",3],["timespec",3]],[["c_int",6],["result",6]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",25,null],[12,"ws_col","","",25,null],[12,"ws_xpixel","","",25,null],[12,"ws_ypixel","","",25,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","The master port in a virtual pty pair",26,null],[12,"slave","","The slave port in a virtual pty pair",26,null],[3,"ForkptyResult","","Representation of a master with a forked pty",null,null],[12,"master","","The master port in a virtual pty pair",27,null],[12,"fork_result","","Metadata about forked process",27,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty …",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see <code>grantpt(3)</code>)",null,[[["ptymaster",3]],["result",6]]],[5,"posix_openpt","","Open a pseudoterminal device (see <code>posix_openpt(3)</code>)",null,[[["oflag",3]],[["result",6],["ptymaster",3]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)",null,[[["ptymaster",3]],[["string",3],["result",6]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)",null,[[["ptymaster",3]],[["string",3],["result",6]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair …",null,[[["ptymaster",3]],["result",6]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and …",null,[[["option",4],["option",4],["into",8],["into",8]],[["result",6],["openptyresult",3]]]],[5,"forkpty","","Create a new pseudoterminal, returning the master file …",null,[[["option",4],["option",4],["into",8],["into",8]],[["forkptyresult",3],["result",6]]]],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[6,"CloneCb","","",null,null],[3,"CpuSet","","CpuSet represent a bit-mask of CPUs. CpuSets are used by …",null,null],[5,"sched_setaffinity","","<code>sched_setaffinity</code> set a thread\'s CPU affinity mask (…",null,[[["cpuset",3],["pid",3]],["result",6]]],[5,"sched_getaffinity","","<code>sched_getaffinity</code> get a thread\'s CPU affinity mask (…",null,[[["pid",3]],[["result",6],["cpuset",3]]]],[5,"clone","","",null,[[["clonecb",6],["cloneflags",3],["option",4],["c_int",6]],[["result",6],["pid",3]]]],[5,"unshare","","",null,[[["cloneflags",3]],["result",6]]],[5,"setns","","",null,[[["cloneflags",3],["rawfd",6]],["result",6]]],[5,"sched_yield","","Explicitly yield the processor to other threads.",null,[[],["result",6]]],[0,"sys","nix","",null,null],[0,"aio","nix::sys","POSIX Asynchronous I/O",null,null],[4,"AioFsyncMode","nix::sys::aio","Mode for <code>AioCb::fsync</code>.  Controls whether only data or …",null,null],[13,"O_SYNC","","do it like <code>fsync</code>",28,null],[13,"O_DSYNC","","on supported operating systems only, do it like <code>fdatasync</code>",28,null],[4,"LioOpcode","","When used with <code>lio_listio</code>, determines whether a given …",null,null],[13,"LIO_NOP","","",29,null],[13,"LIO_WRITE","","",29,null],[13,"LIO_READ","","",29,null],[4,"LioMode","","Mode for <code>lio_listio</code>",null,null],[13,"LIO_WAIT","","Requests that <code>lio_listio</code> block until all requested …",30,null],[13,"LIO_NOWAIT","","Requests that <code>lio_listio</code> return immediately",30,null],[4,"AioCancelStat","","Return values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>",null,null],[13,"AioCanceled","","All outstanding requests were canceled",31,null],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be …",31,null],[13,"AioAllDone","","All of the requests have already finished",31,null],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from …",null,null],[13,"None","","No buffer to own.",32,null],[13,"Phantom","","Keeps a reference to a slice",32,null],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",32,null],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",32,null],[3,"AioCb","","AIO Control Block.",null,null],[11,"buffer","","Remove the inner <code>Buffer</code> and return it",33,[[],["buffer",4]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",33,[[],[["box",3],["option",4]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return …",33,[[],[["option",4],["box",3]]]],[11,"fd","","Returns the underlying file descriptor associated with …",33,[[],["rawfd",6]]],[11,"from_fd","","Constructs a new <code>AioCb</code> with no associated buffer.",33,[[["c_int",6],["sigevnotify",4],["rawfd",6]],["aiocb",3]]],[11,"from_mut_slice","","Constructs a new <code>AioCb</code> from a mutable slice.",33,[[["sigevnotify",4],["lioopcode",4],["c_int",6],["off_t",6],["rawfd",6]],["aiocb",3]]],[11,"from_boxed_slice","","The safest and most flexible way to create an <code>AioCb</code>.",33,[[["lioopcode",4],["sigevnotify",4],["borrow",8],["box",3],["off_t",6],["c_int",6],["rawfd",6]],["aiocb",3]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an <code>AioCb</code> for …",33,[[["borrowmut",8],["box",3],["sigevnotify",4],["lioopcode",4],["c_int",6],["off_t",6],["rawfd",6]],["aiocb",3]]],[11,"from_mut_ptr","","Constructs a new <code>AioCb</code> from a mutable raw pointer",33,[[["usize",15],["sigevnotify",4],["lioopcode",4],["c_int",6],["off_t",6],["rawfd",6]],["aiocb",3]]],[11,"from_ptr","","Constructs a new <code>AioCb</code> from a raw pointer.",33,[[["usize",15],["sigevnotify",4],["lioopcode",4],["c_int",6],["off_t",6],["rawfd",6]],["aiocb",3]]],[11,"from_slice","","Like <code>from_mut_slice</code>, but works on constant slices rather …",33,[[["sigevnotify",4],["lioopcode",4],["c_int",6],["off_t",6],["rawfd",6]],["aiocb",3]]],[11,"set_sigev_notify","","Update the notification settings for an existing <code>aiocb</code>",33,[[["sigevnotify",4]]]],[11,"cancel","","Cancels an outstanding AIO request.",33,[[],[["result",6],["aiocancelstat",4]]]],[11,"error","","Retrieve error status of an asynchronous operation.",33,[[],["result",6]]],[11,"fsync","","An asynchronous version of <code>fsync(2)</code>.",33,[[["aiofsyncmode",4]],["result",6]]],[11,"lio_opcode","","Returns the <code>aiocb</code>\'s <code>LioOpcode</code> field",33,[[],[["option",4],["lioopcode",4]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",33,[[],["usize",15]]],[11,"offset","","Returns the file offset stored in the <code>AioCb</code>",33,[[],["off_t",6]]],[11,"priority","","Returns the priority of the <code>AioCb</code>",33,[[],["c_int",6]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",33,[[],["result",6]]],[11,"sigevent","","Returns the <code>SigEvent</code> stored in the <code>AioCb</code>",33,[[],["sigevent",3]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",33,[[],[["result",6],["isize",15]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",33,[[],["result",6]]],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file …",null,[[["rawfd",6]],[["result",6],["aiocancelstat",4]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the …",null,[[["option",4],["timespec",3]],["result",6]]],[3,"LioCb","","LIO Control Block.",null,null],[12,"aiocbs","","A collection of <code>AioCb</code>s.  All of these will be issued …",34,null],[11,"with_capacity","","Initialize an empty <code>LioCb</code>",34,[[["usize",15]],["liocb",3]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single …",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"listio_resubmit","","Resubmits any incomplete operations with <code>lio_listio</code>.",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"aio_return","","Collect final status for an individual <code>AioCb</code> submitted as …",34,[[["usize",15]],[["result",6],["isize",15]]]],[11,"error","","Retrieve error status of an individual <code>AioCb</code> submitted as …",34,[[["usize",15]],["result",6]]],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[18,"EPOLLIN","","",35,null],[18,"EPOLLPRI","","",35,null],[18,"EPOLLOUT","","",35,null],[18,"EPOLLRDNORM","","",35,null],[18,"EPOLLRDBAND","","",35,null],[18,"EPOLLWRNORM","","",35,null],[18,"EPOLLWRBAND","","",35,null],[18,"EPOLLMSG","","",35,null],[18,"EPOLLERR","","",35,null],[18,"EPOLLHUP","","",35,null],[18,"EPOLLRDHUP","","",35,null],[18,"EPOLLEXCLUSIVE","","",35,null],[18,"EPOLLWAKEUP","","",35,null],[18,"EPOLLONESHOT","","",35,null],[18,"EPOLLET","","",35,null],[11,"empty","","Returns an empty set of flags",35,[[],["epollflags",3]]],[11,"all","","Returns the set containing all flags.",35,[[],["epollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",35,[[["c_int",6]],[["option",4],["epollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",35,[[["c_int",6]],["epollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",35,[[["c_int",6]],["epollflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",35,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",35,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",35,[[["epollflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",35,[[["epollflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["epollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["epollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["epollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",35,[[["bool",15],["epollflags",3]]]],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",36,null],[13,"EpollCtlDel","","",36,null],[13,"EpollCtlMod","","",36,null],[3,"EpollCreateFlags","","",null,null],[18,"EPOLL_CLOEXEC","","",37,null],[11,"empty","","Returns an empty set of flags",37,[[],["epollcreateflags",3]]],[11,"all","","Returns the set containing all flags.",37,[[],["epollcreateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",37,[[["c_int",6]],[["epollcreateflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",37,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",37,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",37,[[["epollcreateflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",37,[[["epollcreateflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",37,[[["epollcreateflags",3],["bool",15]]]],[3,"EpollEvent","","",null,null],[11,"new","","",38,[[["epollflags",3],["u64",15]]]],[11,"empty","","",38,[[]]],[11,"events","","",38,[[],["epollflags",3]]],[11,"data","","",38,[[],["u64",15]]],[5,"epoll_create","","",null,[[],[["result",6],["rawfd",6]]]],[5,"epoll_create1","","",null,[[["epollcreateflags",3]],[["result",6],["rawfd",6]]]],[5,"epoll_ctl","","",null,[[["epollop",4],["rawfd",6]],["result",6]]],[5,"epoll_wait","","",null,[[["isize",15],["rawfd",6]],[["result",6],["usize",15]]]],[0,"eventfd","nix::sys","",null,null],[3,"EfdFlags","nix::sys::eventfd","",null,null],[18,"EFD_CLOEXEC","","",39,null],[18,"EFD_NONBLOCK","","",39,null],[18,"EFD_SEMAPHORE","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["efdflags",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["efdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",39,[[["c_int",6]],[["option",4],["efdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",39,[[["c_int",6]],["efdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[["c_int",6]],["efdflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",39,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",39,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",39,[[["efdflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",39,[[["efdflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["efdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["efdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["efdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",39,[[["bool",15],["efdflags",3]]]],[5,"eventfd","","",null,[[["c_uint",6],["efdflags",3]],[["result",6],["rawfd",6]]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"memfd","","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[18,"MFD_CLOEXEC","","",40,null],[18,"MFD_ALLOW_SEALING","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["memfdcreateflag",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["memfdcreateflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",40,[[["c_uint",6]],[["memfdcreateflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",40,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",40,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",40,[[["bool",15],["memfdcreateflag",3]]]],[5,"memfd_create","","",null,[[["memfdcreateflag",3],["cstr",3]],[["result",6],["rawfd",6]]]],[0,"mman","nix::sys","",null,null],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",null,null],[18,"PROT_NONE","","Pages cannot be accessed.",41,null],[18,"PROT_READ","","Pages can be read.",41,null],[18,"PROT_WRITE","","Pages can be written.",41,null],[18,"PROT_EXEC","","Pages can be executed",41,null],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows …",41,null],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that …",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["protflags",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["protflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",41,[[["c_int",6]],[["protflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",41,[[["c_int",6]],["protflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["c_int",6]],["protflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",41,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",41,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",41,[[["protflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",41,[[["protflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["protflags",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["protflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["protflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",41,[[["protflags",3],["bool",15]]]],[3,"MapFlags","","Additional parameters for <code>mmap()</code>.",null,null],[18,"MAP_FILE","","Compatibility flag. Ignored.",42,null],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.",42,null],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually …",42,null],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in <code>addr</code>…",42,null],[18,"MAP_ANON","","Synonym for <code>MAP_ANONYMOUS</code>.",42,null],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",42,null],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address …",42,null],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping …",42,null],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",42,null],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",42,null],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as …",42,null],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",42,null],[18,"MAP_POPULATE","","Populate page tables for a mapping.",42,null],[18,"MAP_NONBLOCK","","Only meaningful when used with <code>MAP_POPULATE</code>. Don\'t …",42,null],[18,"MAP_HUGETLB","","Allocate the mapping using \\\"huge pages.\\\"",42,null],[18,"MAP_HUGE_64KB","","Make use of 64KB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_512KB","","Make use of 512KB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_1MB","","Make use of 1MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_2MB","","Make use of 2MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_8MB","","Make use of 8MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_16MB","","Make use of 16MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_32MB","","Make use of 32MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_256MB","","Make use of 256MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_512MB","","Make use of 512MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_1GB","","Make use of 1GB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_2GB","","Make use of 2GB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_16GB","","Make use of 16GB huge page (must be supported by the …",42,null],[18,"MAP_STACK","","Region grows down, like a stack.",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["mapflags",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["mapflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",42,[[["c_int",6]],[["mapflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",42,[[["c_int",6]],["mapflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["c_int",6]],["mapflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",42,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",42,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",42,[[["mapflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",42,[[["mapflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["mapflags",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["mapflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["mapflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",42,[[["bool",15],["mapflags",3]]]],[3,"MRemapFlags","","Options for <code>mremap()</code>.",null,null],[18,"MREMAP_MAYMOVE","","Permit the kernel to relocate the mapping to a new …",43,null],[18,"MREMAP_FIXED","","Place the mapping at exactly the address specified in …",43,null],[11,"empty","","Returns an empty set of flags",43,[[],["mremapflags",3]]],[11,"all","","Returns the set containing all flags.",43,[[],["mremapflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",43,[[["c_int",6]],[["option",4],["mremapflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",43,[[["c_int",6]],["mremapflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",43,[[["c_int",6]],["mremapflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",43,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",43,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",43,[[["mremapflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",43,[[["mremapflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["mremapflags",3]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["mremapflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["mremapflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",43,[[["bool",15],["mremapflags",3]]]],[4,"MmapAdvise","","Usage information for a range of memory to allow for …",null,null],[13,"MADV_NORMAL","","No further special treatment. This is the default.",44,null],[13,"MADV_RANDOM","","Expect random page references.",44,null],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",44,null],[13,"MADV_WILLNEED","","Expect access in the near future.",44,null],[13,"MADV_DONTNEED","","Do not expect access in the near future.",44,null],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing …",44,null],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child …",44,null],[13,"MADV_DOFORK","","Undo the effect of <code>MADV_DONTFORK</code>.",44,null],[13,"MADV_HWPOISON","","Poison the given pages.",44,null],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",44,null],[13,"MADV_UNMERGEABLE","","Undo the effect of <code>MADV_MERGEABLE</code>",44,null],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original …",44,null],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the …",44,null],[13,"MADV_NOHUGEPAGE","","Undo the effect of <code>MADV_HUGEPAGE</code>.",44,null],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",44,null],[13,"MADV_DODUMP","","Undo the effect of an earlier <code>MADV_DONTDUMP</code>.",44,null],[13,"MADV_FREE","","Specify that the application no longer needs the pages in …",44,null],[3,"MsFlags","","Configuration flags for <code>msync</code>.",null,null],[18,"MS_ASYNC","","Schedule an update but return immediately.",45,null],[18,"MS_INVALIDATE","","Invalidate all cached data.",45,null],[18,"MS_SYNC","","Perform an update and wait for it to complete.",45,null],[11,"empty","","Returns an empty set of flags",45,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",45,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",45,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",45,[[["c_int",6]],[["option",4],["msflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",45,[[["c_int",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",45,[[["c_int",6]],["msflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",45,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",45,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",45,[[["msflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",45,[[["msflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",45,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",45,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",45,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",45,[[["bool",15],["msflags",3]]]],[3,"MlockAllFlags","","Flags for <code>mlockall</code>.",null,null],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address …",46,null],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address …",46,null],[11,"empty","","Returns an empty set of flags",46,[[],["mlockallflags",3]]],[11,"all","","Returns the set containing all flags.",46,[[],["mlockallflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",46,[[["c_int",6]],[["option",4],["mlockallflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",46,[[["c_int",6]],["mlockallflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",46,[[["c_int",6]],["mlockallflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",46,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",46,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",46,[[["mlockallflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",46,[[["mlockallflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["mlockallflags",3]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["mlockallflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["mlockallflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",46,[[["bool",15],["mlockallflags",3]]]],[5,"mlock","","Locks all memory pages that contain part of the address …",null,[[["size_t",6]],["result",6]]],[5,"munlock","","Unlocks all memory pages that contain part of the address …",null,[[["size_t",6]],["result",6]]],[5,"mlockall","","Locks all memory pages mapped into this process\' address …",null,[[["mlockallflags",3]],["result",6]]],[5,"munlockall","","Unlocks all memory pages mapped into this process\' …",null,[[],["result",6]]],[5,"mmap","","allocate memory, or map files or devices into memory",null,[[["protflags",3],["mapflags",3],["size_t",6],["off_t",6],["rawfd",6]],["result",6]]],[5,"mremap","","Expands (or shrinks) an existing memory mapping, …",null,[[["option",4],["size_t",6],["mremapflags",3]],["result",6]]],[5,"munmap","","remove a mapping",null,[[["size_t",6]],["result",6]]],[5,"madvise","","give advice about use of memory",null,[[["size_t",6],["mmapadvise",4]],["result",6]]],[5,"mprotect","","Set protection of memory mapping.",null,[[["protflags",3],["size_t",6]],["result",6]]],[5,"msync","","synchronize a mapped region",null,[[["msflags",3],["size_t",6]],["result",6]]],[5,"shm_open","","",null,[[["oflag",3],["mode",3]],[["result",6],["rawfd",6]]]],[5,"shm_unlink","","",null,[[],["result",6]]],[0,"personality","nix::sys","",null,null],[3,"Persona","nix::sys::personality","Flags used and returned by <code>get()</code> and <code>set()</code>.",null,null],[18,"ADDR_COMPAT_LAYOUT","","",47,null],[18,"ADDR_NO_RANDOMIZE","","",47,null],[18,"ADDR_LIMIT_32BIT","","",47,null],[18,"ADDR_LIMIT_3GB","","",47,null],[18,"FDPIC_FUNCPTRS","","",47,null],[18,"MMAP_PAGE_ZERO","","",47,null],[18,"READ_IMPLIES_EXEC","","",47,null],[18,"SHORT_INODE","","",47,null],[18,"STICKY_TIMEOUTS","","",47,null],[18,"UNAME26","","",47,null],[18,"WHOLE_SECONDS","","",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["persona",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["persona",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",47,[[["c_int",6]],[["persona",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",47,[[["c_int",6]],["persona",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["c_int",6]],["persona",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",47,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",47,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",47,[[["persona",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",47,[[["persona",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["persona",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["persona",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["persona",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",47,[[["persona",3],["bool",15]]]],[5,"get","","Retrieve the current process personality.",null,[[],[["result",6],["persona",3]]]],[5,"set","","Set the current process personality.",null,[[["persona",3]],[["result",6],["persona",3]]]],[0,"pthread","nix::sys","",null,null],[6,"Pthread","nix::sys::pthread","",null,null],[5,"pthread_self","","Obtain ID of the calling thread (see <code>pthread_self(3)</code>",null,[[],["pthread",6]]],[0,"ptrace","nix::sys","",null,null],[6,"AddressType","nix::sys::ptrace","",null,null],[4,"Request","","Ptrace Request enum defining the action to be taken.",null,null],[13,"PTRACE_TRACEME","","",48,null],[13,"PTRACE_PEEKTEXT","","",48,null],[13,"PTRACE_PEEKDATA","","",48,null],[13,"PTRACE_PEEKUSER","","",48,null],[13,"PTRACE_POKETEXT","","",48,null],[13,"PTRACE_POKEDATA","","",48,null],[13,"PTRACE_POKEUSER","","",48,null],[13,"PTRACE_CONT","","",48,null],[13,"PTRACE_KILL","","",48,null],[13,"PTRACE_SINGLESTEP","","",48,null],[13,"PTRACE_GETREGS","","",48,null],[13,"PTRACE_SETREGS","","",48,null],[13,"PTRACE_GETFPREGS","","",48,null],[13,"PTRACE_SETFPREGS","","",48,null],[13,"PTRACE_ATTACH","","",48,null],[13,"PTRACE_DETACH","","",48,null],[13,"PTRACE_GETFPXREGS","","",48,null],[13,"PTRACE_SETFPXREGS","","",48,null],[13,"PTRACE_SYSCALL","","",48,null],[13,"PTRACE_SETOPTIONS","","",48,null],[13,"PTRACE_GETEVENTMSG","","",48,null],[13,"PTRACE_GETSIGINFO","","",48,null],[13,"PTRACE_SETSIGINFO","","",48,null],[13,"PTRACE_GETREGSET","","",48,null],[13,"PTRACE_SETREGSET","","",48,null],[13,"PTRACE_SEIZE","","",48,null],[13,"PTRACE_INTERRUPT","","",48,null],[13,"PTRACE_LISTEN","","",48,null],[13,"PTRACE_PEEKSIGINFO","","",48,null],[13,"PTRACE_SYSEMU","","",48,null],[13,"PTRACE_SYSEMU_SINGLESTEP","","",48,null],[4,"Event","","Using the ptrace options the tracer can configure the …",null,null],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",49,null],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",49,null],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",49,null],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",49,null],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",49,null],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit …",49,null],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",49,null],[3,"Options","","Ptrace options used in conjunction with the …",null,null],[5,"getregs","","Get user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>",null,[[["pid",3]],[["user_regs_struct",3],["result",6]]]],[5,"setregs","","Set user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>",null,[[["pid",3],["user_regs_struct",3]],["result",6]]],[5,"setoptions","","Set options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.",null,[[["pid",3],["options",3]],["result",6]]],[5,"getevent","","Gets a ptrace event as described by …",null,[[["pid",3]],[["c_long",6],["result",6]]]],[5,"getsiginfo","","Get siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>",null,[[["pid",3]],[["result",6],["siginfo_t",3]]]],[5,"setsiginfo","","Set siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>",null,[[["siginfo_t",3],["pid",3]],["result",6]]],[5,"traceme","","Sets the process as traceable, as with …",null,[[],["result",6]]],[5,"syscall","","Continue execution until the next syscall, as with …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"sysemu","","Continue execution until the next syscall, as with …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"attach","","Attach to a running process, as with …",null,[[["pid",3]],["result",6]]],[5,"seize","","Attach to a running process, as with …",null,[[["pid",3],["options",3]],["result",6]]],[5,"detach","","Detaches the current running process, as with …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"cont","","Restart the stopped tracee process, as with …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"kill","","Issues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>",null,[[["pid",3]],["result",6]]],[5,"step","","Move the stopped tracee process forward by a single step …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"sysemu_step","","Move the stopped tracee process forward by a single step …",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"read","","Reads a word from a processes memory at the given address",null,[[["pid",3],["addresstype",6]],[["c_long",6],["result",6]]]],[5,"write","","Writes a word into the processes memory at the given …",null,[[["pid",3],["addresstype",6]],["result",6]]],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or …",null,null],[4,"QuotaType","nix::sys::quota","The scope of the quota.",null,null],[13,"USRQUOTA","","Specify a user quota",50,null],[13,"GRPQUOTA","","Specify a group quota",50,null],[4,"QuotaFmt","","The type of quota format to use.",null,null],[13,"QFMT_VFS_OLD","","Use the original quota format.",51,null],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",51,null],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",51,null],[3,"QuotaValidFlags","","Indicates the quota fields that are valid to read from.",null,null],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",52,null],[18,"QIF_SPACE","","The current space field.",52,null],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",52,null],[18,"QIF_INODES","","The current inodes field.",52,null],[18,"QIF_BTIME","","The disk use time limit field.",52,null],[18,"QIF_ITIME","","The file quote time limit field.",52,null],[18,"QIF_LIMITS","","All block & inode limits.",52,null],[18,"QIF_USAGE","","The space & inodes usage fields.",52,null],[18,"QIF_TIMES","","The time limit fields.",52,null],[18,"QIF_ALL","","All fields.",52,null],[11,"empty","","Returns an empty set of flags",52,[[],["quotavalidflags",3]]],[11,"all","","Returns the set containing all flags.",52,[[],["quotavalidflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",52,[[["u32",15]],[["quotavalidflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",52,[[["u32",15]],["quotavalidflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",52,[[["u32",15]],["quotavalidflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",52,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",52,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",52,[[["quotavalidflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",52,[[["quotavalidflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["quotavalidflags",3]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["quotavalidflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["quotavalidflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",52,[[["quotavalidflags",3],["bool",15]]]],[3,"Dqblk","","Wrapper type for <code>if_dqblk</code>",null,null],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",53,[[],[["option",4],["u64",15]]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",53,[[["u64",15]]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",53,[[],[["option",4],["u64",15]]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",53,[[["u64",15]]]],[11,"occupied_space","","Current occupied space (bytes).",53,[[],[["option",4],["u64",15]]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",53,[[],[["option",4],["u64",15]]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",53,[[["u64",15]]]],[11,"inodes_soft_limit","","Preferred inode limit",53,[[],[["option",4],["u64",15]]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",53,[[["u64",15]]]],[11,"allocated_inodes","","Current number of allocated inodes.",53,[[],[["option",4],["u64",15]]]],[11,"block_time_limit","","Time limit for excessive disk use.",53,[[],[["option",4],["u64",15]]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",53,[[["u64",15]]]],[11,"inode_time_limit","","Time limit for excessive files.",53,[[],[["option",4],["u64",15]]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",53,[[["u64",15]]]],[5,"quotactl_on","","Turn on disk quotas for a block device.",null,[[["quotafmt",4],["quotatype",4]],["result",6]]],[5,"quotactl_off","","Disable disk quotas for a block device.",null,[[["quotatype",4]],["result",6]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",null,[[["option",4],["quotatype",4]],["result",6]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given …",null,[[["c_int",6],["quotatype",4]],[["dqblk",3],["result",6]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a …",null,[[["dqblk",3],["quotavalidflags",3],["quotatype",4],["c_int",6]],["result",6]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",54,null],[13,"RB_KEXEC","","",54,null],[13,"RB_POWER_OFF","","",54,null],[13,"RB_AUTOBOOT","","",54,null],[13,"RB_SW_SUSPEND","","",54,null],[5,"reboot","","",null,[[["rebootmode",4]],[["result",6],["infallible",4]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,[[["bool",15]],["result",6]]],[0,"select","nix::sys","",null,null],[17,"FD_SETSIZE","nix::sys::select","",null,null],[3,"FdSet","","",null,null],[11,"new","","",55,[[],["fdset",3]]],[11,"insert","","",55,[[["rawfd",6]]]],[11,"remove","","",55,[[["rawfd",6]]]],[11,"contains","","",55,[[["rawfd",6]],["bool",15]]],[11,"clear","","",55,[[]]],[11,"highest","","Finds the highest file descriptor in the set.",55,[[],[["option",4],["rawfd",6]]]],[11,"fds","","Returns an iterator over the file descriptors in the set.",55,[[["option",4],["rawfd",6]],["fds",3]]],[3,"Fds","","Iterator over <code>FdSet</code>.",null,null],[5,"select","","Monitors file descriptors for readiness",null,[[],[["c_int",6],["result",6]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered …",null,[[],[["c_int",6],["result",6]]]],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …",null,[[["option",4],["usize",15],["off_t",6],["rawfd",6]],[["result",6],["usize",15]]]],[0,"signal","nix::sys","",null,null],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the …",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",56,null],[13,"SIGINT","","",56,null],[13,"SIGQUIT","","",56,null],[13,"SIGILL","","",56,null],[13,"SIGTRAP","","",56,null],[13,"SIGABRT","","",56,null],[13,"SIGBUS","","",56,null],[13,"SIGFPE","","",56,null],[13,"SIGKILL","","",56,null],[13,"SIGUSR1","","",56,null],[13,"SIGSEGV","","",56,null],[13,"SIGUSR2","","",56,null],[13,"SIGPIPE","","",56,null],[13,"SIGALRM","","",56,null],[13,"SIGTERM","","",56,null],[13,"SIGSTKFLT","","",56,null],[13,"SIGCHLD","","",56,null],[13,"SIGCONT","","",56,null],[13,"SIGSTOP","","",56,null],[13,"SIGTSTP","","",56,null],[13,"SIGTTIN","","",56,null],[13,"SIGTTOU","","",56,null],[13,"SIGURG","","",56,null],[13,"SIGXCPU","","",56,null],[13,"SIGXFSZ","","",56,null],[13,"SIGVTALRM","","",56,null],[13,"SIGPROF","","",56,null],[13,"SIGWINCH","","",56,null],[13,"SIGIO","","",56,null],[13,"SIGPWR","","",56,null],[13,"SIGSYS","","",56,null],[11,"as_str","","Returns name of signal.",56,[[],["str",15]]],[17,"NSIG","","",null,null],[3,"SignalIterator","","",null,null],[11,"iterator","","",56,[[],["signaliterator",3]]],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[3,"SaFlags","","",null,null],[18,"SA_NOCLDSTOP","","",57,null],[18,"SA_NOCLDWAIT","","",57,null],[18,"SA_NODEFER","","",57,null],[18,"SA_ONSTACK","","",57,null],[18,"SA_RESETHAND","","",57,null],[18,"SA_RESTART","","",57,null],[18,"SA_SIGINFO","","",57,null],[11,"empty","","Returns an empty set of flags",57,[[],["saflags",3]]],[11,"all","","Returns the set containing all flags.",57,[[],["saflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",57,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",57,[[["c_int",6]],[["saflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",57,[[["c_int",6]],["saflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",57,[[["c_int",6]],["saflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",57,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",57,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",57,[[["saflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",57,[[["saflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",57,[[["saflags",3]]]],[11,"remove","","Removes the specified flags in-place.",57,[[["saflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",57,[[["saflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",57,[[["bool",15],["saflags",3]]]],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",58,null],[13,"SIG_UNBLOCK","","",58,null],[13,"SIG_SETMASK","","",58,null],[3,"SigSet","","",null,null],[11,"all","","",59,[[],["sigset",3]]],[11,"empty","","",59,[[],["sigset",3]]],[11,"add","","",59,[[["signal",4]]]],[11,"clear","","",59,[[]]],[11,"remove","","",59,[[["signal",4]]]],[11,"contains","","",59,[[["signal",4]],["bool",15]]],[11,"extend","","",59,[[["sigset",3]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for …",59,[[],[["result",6],["sigset",3]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the …",59,[[],["result",6]]],[11,"thread_block","","Adds the set of signals to the signal mask for the …",59,[[],["result",6]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the …",59,[[],["result",6]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns …",59,[[["sigmaskhow",4]],[["result",6],["sigset",3]]]],[11,"wait","","Suspends execution of the calling thread until one of the …",59,[[],[["result",6],["signal",4]]]],[4,"SigHandler","","A signal handler.",null,null],[13,"SigDfl","","Default signal handling.",60,null],[13,"SigIgn","","Request that the signal be ignored.",60,null],[13,"Handler","","Use the given signal-catching function, which takes in …",60,null],[13,"SigAction","","Use the given signal-catching function, which takes in …",60,null],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to …",null,null],[11,"new","","Creates a new action.",61,[[["sigset",3],["sighandler",4],["saflags",3]],["sigaction",3]]],[11,"flags","","Returns the flags set on the action.",61,[[],["saflags",3]]],[11,"mask","","Returns the set of signals that are blocked during …",61,[[],["sigset",3]]],[11,"handler","","Returns the action\'s handler.",61,[[],["sighandler",4]]],[5,"sigaction","","Changes the action taken by a process on receipt of a …",null,[[["sigaction",3],["signal",4]],[["result",6],["sigaction",3]]]],[5,"signal","","Signal management (see signal(3p))",null,[[["sighandler",4],["signal",4]],[["result",6],["sighandler",4]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the …",null,[[["sigmaskhow",4],["option",4],["sigset",3],["option",4],["sigset",3]],["result",6]]],[5,"sigprocmask","","Examine and change blocked signals.",null,[[["sigmaskhow",4],["option",4],["sigset",3],["option",4],["sigset",3]],["result",6]]],[5,"kill","","",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"killpg","","Send a signal to a process group (see killpg(3)).",null,[[["option",4],["pid",3],["into",8]],["result",6]]],[5,"raise","","",null,[[["signal",4]],["result",6]]],[6,"type_of_thread_id","","",null,null],[4,"SigevNotify","","Used to request asynchronous notification of certain …",null,null],[13,"SigevNone","","No notification will be delivered",62,null],[13,"SigevSignal","","The signal given by <code>signal</code> will be delivered to the …",62,null],[12,"signal","nix::sys::signal::SigevNotify","",63,null],[12,"si_value","","",63,null],[13,"SigevThreadId","nix::sys::signal","The signal <code>signal</code> is queued to the thread whose LWP ID is …",62,null],[12,"signal","nix::sys::signal::SigevNotify","",64,null],[12,"thread_id","","",64,null],[12,"si_value","","",64,null],[0,"signalfd","nix::sys","Interface for the <code>signalfd</code> syscall.",null,null],[3,"siginfo","nix::sys::signalfd","",null,null],[12,"ssi_signo","","",65,null],[12,"ssi_errno","","",65,null],[12,"ssi_code","","",65,null],[12,"ssi_pid","","",65,null],[12,"ssi_uid","","",65,null],[12,"ssi_fd","","",65,null],[12,"ssi_tid","","",65,null],[12,"ssi_band","","",65,null],[12,"ssi_overrun","","",65,null],[12,"ssi_trapno","","",65,null],[12,"ssi_status","","",65,null],[12,"ssi_int","","",65,null],[12,"ssi_ptr","","",65,null],[12,"ssi_utime","","",65,null],[12,"ssi_stime","","",65,null],[12,"ssi_addr","","",65,null],[12,"ssi_addr_lsb","","",65,null],[12,"ssi_syscall","","",65,null],[12,"ssi_call_addr","","",65,null],[12,"ssi_arch","","",65,null],[3,"SfdFlags","","",null,null],[18,"SFD_NONBLOCK","","",66,null],[18,"SFD_CLOEXEC","","",66,null],[11,"empty","","Returns an empty set of flags",66,[[],["sfdflags",3]]],[11,"all","","Returns the set containing all flags.",66,[[],["sfdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",66,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",66,[[["c_int",6]],[["sfdflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",66,[[["c_int",6]],["sfdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",66,[[["c_int",6]],["sfdflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",66,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",66,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",66,[[["sfdflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",66,[[["sfdflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",66,[[["sfdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",66,[[["sfdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",66,[[["sfdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",66,[[["bool",15],["sfdflags",3]]]],[17,"SIGNALFD_NEW","","",null,null],[17,"SIGNALFD_SIGINFO_SIZE","","",null,null],[5,"signalfd","","Creates a new file descriptor for reading signals.",null,[[["sigset",3],["sfdflags",3],["rawfd",6]],[["result",6],["rawfd",6]]]],[3,"SignalFd","","A helper struct for creating, reading and closing a …",null,null],[11,"new","","",67,[[["sigset",3]],[["signalfd",3],["result",6]]]],[11,"with_flags","","",67,[[["sfdflags",3],["sigset",3]],[["signalfd",3],["result",6]]]],[11,"set_mask","","",67,[[["sigset",3]],["result",6]]],[11,"read_signal","","",67,[[],[["result",6],["option",4]]]],[0,"socket","nix::sys","Socket interface functions",null,null],[0,"sockopt","nix::sys::socket","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"TcpKeepCount","","",null,null],[3,"TcpKeepInterval","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"BindToDevice","","",null,null],[3,"OriginalDst","","",null,null],[3,"ReceiveTimestamp","","",null,null],[3,"IpTransparent","","",null,null],[3,"Mark","","",null,null],[3,"PassCred","","",null,null],[3,"TcpCongestion","","",null,null],[3,"Ipv4PacketInfo","","",null,null],[3,"Ipv6RecvPacketInfo","","",null,null],[3,"UdpGsoSegment","","",null,null],[3,"UdpGroSegment","","",null,null],[3,"AlgSetAeadAuthSize","","",null,null],[3,"AlgSetKey","","",null,null],[4,"AddressFamily","nix::sys::socket","These constants specify the protocol family to be used in …",null,null],[13,"Unix","","Local communication (see <code>unix(7)</code>)",68,null],[13,"Inet","","IPv4 Internet protocols (see <code>ip(7)</code>)",68,null],[13,"Inet6","","IPv6 Internet protocols (see <code>ipv6(7)</code>)",68,null],[13,"Netlink","","Kernel user interface device (see <code>netlink(7)</code>)",68,null],[13,"Packet","","Low level packet interface (see <code>packet(7)</code>)",68,null],[13,"Ax25","","Amateur radio AX.25 protocol",68,null],[13,"Ipx","","IPX - Novell protocols",68,null],[13,"AppleTalk","","AppleTalk",68,null],[13,"NetRom","","",68,null],[13,"Bridge","","",68,null],[13,"AtmPvc","","Access to raw ATM PVCs",68,null],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)",68,null],[13,"Rose","","",68,null],[13,"Decnet","","",68,null],[13,"NetBeui","","",68,null],[13,"Security","","",68,null],[13,"Key","","",68,null],[13,"Ash","","",68,null],[13,"Econet","","",68,null],[13,"AtmSvc","","",68,null],[13,"Rds","","",68,null],[13,"Sna","","",68,null],[13,"Irda","","",68,null],[13,"Pppox","","",68,null],[13,"Wanpipe","","",68,null],[13,"Llc","","",68,null],[13,"Ib","","",68,null],[13,"Mpls","","",68,null],[13,"Can","","",68,null],[13,"Tipc","","",68,null],[13,"Bluetooth","","",68,null],[13,"Iucv","","",68,null],[13,"RxRpc","","",68,null],[13,"Isdn","","",68,null],[13,"Phonet","","",68,null],[13,"Ieee802154","","",68,null],[13,"Caif","","",68,null],[13,"Alg","","Interface to kernel crypto API",68,null],[13,"Nfc","","",68,null],[13,"Vsock","","",68,null],[13,"Unspec","","Unspecified address family, (see <code>getaddrinfo(3)</code>)",68,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",69,null],[13,"Unix","","",69,null],[13,"Netlink","","",69,null],[13,"Alg","","",69,null],[13,"Link","","Datalink address (MAC)",69,null],[13,"Vsock","","",69,null],[4,"InetAddr","","",null,null],[13,"V4","","",70,null],[13,"V6","","",70,null],[3,"UnixAddr","","A wrapper around <code>sockaddr_un</code>.",null,null],[12,"0","","",71,null],[12,"1","","",71,null],[4,"IpAddr","","",null,null],[13,"V4","","",72,null],[13,"V6","","",72,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",73,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",74,null],[3,"LinkAddr","","Hardware Address",null,null],[12,"0","","",75,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",76,null],[3,"AlgAddr","","",null,null],[12,"0","","",77,null],[3,"VsockAddr","","",null,null],[12,"0","","",78,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",79,null],[12,"cmsg_level","","",79,null],[12,"cmsg_type","","",79,null],[3,"msghdr","","",null,null],[12,"msg_name","","",80,null],[12,"msg_namelen","","",80,null],[12,"msg_iov","","",80,null],[12,"msg_iovlen","","",80,null],[12,"msg_control","","",80,null],[12,"msg_controllen","","",80,null],[12,"msg_flags","","",80,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",81,null],[12,"sa_data","","",81,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",82,null],[12,"sin_port","","",82,null],[12,"sin_addr","","",82,null],[12,"sin_zero","","",82,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",83,null],[12,"sin6_port","","",83,null],[12,"sin6_flowinfo","","",83,null],[12,"sin6_addr","","",83,null],[12,"sin6_scope_id","","",83,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",84,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",85,null],[12,"sun_path","","",85,null],[4,"SockType","","These constants are used to specify the communication …",null,null],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based …",86,null],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages …",86,null],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based …",86,null],[13,"Raw","","Provides raw network protocol access.",86,null],[13,"Rdm","","Provides a reliable datagram layer that does not …",86,null],[4,"SockProtocol","","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …",null,null],[13,"Tcp","","TCP protocol (ip(7))",87,null],[13,"Udp","","UDP protocol (ip(7))",87,null],[13,"NetlinkRoute","","Receives routing and link updates and may be used to …",87,null],[13,"NetlinkUserSock","","Reserved for user-mode socket protocols (ref)",87,null],[13,"NetlinkSockDiag","","Query information about sockets of various protocol …",87,null],[13,"NetlinkSELinux","","SELinux event notifications. (ref)",87,null],[13,"NetlinkISCSI","","Open-iSCSI (ref)",87,null],[13,"NetlinkAudit","","Auditing (ref)",87,null],[13,"NetlinkFIBLookup","","Access to FIB lookup from user space (ref)",87,null],[13,"NetlinkNetFilter","","Netfilter subsystem (ref)",87,null],[13,"NetlinkSCSITransport","","SCSI Transports (ref)",87,null],[13,"NetlinkRDMA","","Infiniband RDMA (ref)",87,null],[13,"NetlinkIPv6Firewall","","Transport IPv6 packets from netfilter to user space.  …",87,null],[13,"NetlinkDECNetRoutingMessage","","DECnet routing messages (ref)",87,null],[13,"NetlinkKObjectUEvent","","Kernel messages to user space (ref)",87,null],[13,"NetlinkCrypto","","Netlink interface to request information about ciphers …",87,null],[3,"SockFlag","","Additional socket options",null,null],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",88,null],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",88,null],[11,"empty","","Returns an empty set of flags",88,[[],["sockflag",3]]],[11,"all","","Returns the set containing all flags.",88,[[],["sockflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",88,[[["c_int",6]],[["sockflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",88,[[["c_int",6]],["sockflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",88,[[["c_int",6]],["sockflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",88,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",88,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",88,[[["sockflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",88,[[["sockflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["sockflag",3]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["sockflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["sockflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",88,[[["sockflag",3],["bool",15]]]],[3,"MsgFlags","","Flags for send/recv and their relatives",null,null],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that …",89,null],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as …",89,null],[18,"MSG_WAITALL","","Receive operation blocks until the full amount of data …",89,null],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would …",89,null],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too …",89,null],[18,"MSG_TRUNC","","For raw (<code>Packet</code>), Internet datagram (since Linux …",89,null],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",89,null],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received …",89,null],[18,"MSG_CMSG_CLOEXEC","","Set the <code>close-on-exec</code> flag for the file descriptor …",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["msgflags",3]]],[11,"all","","Returns the set containing all flags.",89,[[],["msgflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",89,[[["c_int",6]],[["msgflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",89,[[["c_int",6]],["msgflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[["c_int",6]],["msgflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",89,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",89,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",89,[[["msgflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",89,[[["msgflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["msgflags",3]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["msgflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["msgflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",89,[[["bool",15],["msgflags",3]]]],[3,"UnixCredentials","","Unix credentials of the sending process.",null,null],[11,"new","","Creates a new instance with the credentials of the …",90,[[]]],[11,"pid","","Returns the process identifier",90,[[],["pid_t",6]]],[11,"uid","","Returns the user identifier",90,[[],["uid_t",6]]],[11,"gid","","Returns the group identifier",90,[[],["gid_t",6]]],[3,"IpMembershipRequest","","Request for multicast socket operations",null,null],[11,"new","","Instantiate a new <code>IpMembershipRequest</code>",91,[[["ipv4addr",3],["option",4]]]],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",null,null],[11,"new","","Instantiate a new <code>Ipv6MembershipRequest</code>",92,[[["ipv6addr",3]]]],[3,"RecvMsg","","",null,null],[12,"bytes","","",93,null],[12,"address","","",93,null],[12,"flags","","",93,null],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",93,[[],["cmsgiterator",3]]],[3,"CmsgIterator","","",null,null],[4,"ControlMessageOwned","","A type-safe wrapper around a single control message, as …",null,null],[13,"ScmRights","","Received version of [<code>ControlMessage::ScmRights</code>][…",94,null],[13,"ScmCredentials","","Received version of [<code>ControlMessage::ScmCredentials</code>][…",94,null],[13,"ScmTimestamp","","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …",94,null],[13,"Ipv4PacketInfo","","",94,null],[13,"Ipv6PacketInfo","","",94,null],[13,"UdpGroSegments","","UDP Generic Receive Offload (GRO) allows receiving …",94,null],[4,"ControlMessage","","A type-safe zero-copy wrapper around a single control …",null,null],[13,"ScmRights","","A message of type <code>SCM_RIGHTS</code>, containing an array of file …",95,null],[13,"ScmCredentials","","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, …",95,null],[13,"AlgSetIv","","Set IV for <code>AF_ALG</code> crypto API.",95,null],[13,"AlgSetOp","","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …",95,null],[13,"AlgSetAeadAssoclen","","Set the length of associated authentication data (AAD) …",95,null],[13,"UdpGsoSegments","","UDP GSO makes it possible for applications to generate …",95,null],[13,"Ipv4PacketInfo","","Configure the sending addressing and interface for v4",95,null],[13,"Ipv6PacketInfo","","Configure the sending addressing and interface for v6",95,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly …",null,[[["sockaddr",4],["msgflags",3],["option",4],["rawfd",6]],[["result",6],["usize",15]]]],[3,"SendMmsgData","","",null,null],[12,"iov","","",96,null],[12,"cmsgs","","",96,null],[12,"addr","","",96,null],[12,"_lt","","",96,null],[5,"sendmmsg","","An extension of <code>sendmsg</code> that allows the caller to …",null,[[["msgflags",3],["rawfd",6]],[["result",6],["vec",3]]]],[3,"RecvMmsgData","","",null,null],[12,"iov","","",97,null],[12,"cmsg_buffer","","",97,null],[5,"recvmmsg","","An extension of <code>recvmsg</code> that allows the caller to receive …",null,[[["timespec",3],["msgflags",3],["option",4],["rawfd",6]],[["result",6],["vec",3]]]],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, …",null,[[["option",4],["vec",3],["msgflags",3],["rawfd",6]],[["result",6],["recvmsg",3]]]],[5,"socket","","Create an endpoint for communication",null,[[["into",8],["socktype",4],["sockflag",3],["addressfamily",4],["option",4]],[["result",6],["rawfd",6]]]],[5,"socketpair","","Create a pair of connected sockets",null,[[["into",8],["socktype",4],["addressfamily",4],["option",4],["sockflag",3]],["result",6]]],[5,"listen","","Listen for connections on a socket",null,[[["usize",15],["rawfd",6]],["result",6]]],[5,"bind","","Bind a name to a socket",null,[[["sockaddr",4],["rawfd",6]],["result",6]]],[5,"accept","","Accept a connection on a socket",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"accept4","","Accept a connection on a socket",null,[[["sockflag",3],["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"connect","","Initiate a connection on a socket",null,[[["sockaddr",4],["rawfd",6]],["result",6]]],[5,"recv","","Receive data from a connection-oriented socket. Returns …",null,[[["msgflags",3],["rawfd",6]],[["result",6],["usize",15]]]],[5,"recvfrom","","Receive data from a connectionless or connection-oriented …",null,[[["rawfd",6]],["result",6]]],[5,"sendto","","Send a message to a socket",null,[[["sockaddr",4],["msgflags",3],["rawfd",6]],[["result",6],["usize",15]]]],[5,"send","","Send data to a connection-oriented socket. Returns the …",null,[[["msgflags",3],["rawfd",6]],[["result",6],["usize",15]]]],[8,"GetSockOpt","","Represents a socket option that can be accessed or set. …",null,null],[16,"Val","","",98,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. …",null,null],[16,"Val","","",99,null],[5,"getsockopt","","Get the current value for the requested socket option",null,[[["getsockopt",8],["rawfd",6]],["result",6]]],[5,"setsockopt","","Sets the value for the requested socket option",null,[[["setsockopt",8],["rawfd",6]],["result",6]]],[5,"getpeername","","Get the address of the peer connected to the socket <code>fd</code>.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"getsockname","","Get the current address to which the socket <code>fd</code> is bound.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate <code>SockAddr</code> type from a …",null,[[["usize",15],["sockaddr_storage",3]],[["result",6],["sockaddr",4]]]],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",100,null],[13,"Write","","Further  transmissions will be disallowed.",100,null],[13,"Both","","Further receptions and transmissions will be disallowed.",100,null],[5,"shutdown","","Shut down part of a full-duplex connection.",null,[[["shutdown",4],["rawfd",6]],["result",6]]],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[6,"mode_t","","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",101,null],[12,"st_ino","","",101,null],[12,"st_nlink","","",101,null],[12,"st_mode","","",101,null],[12,"st_uid","","",101,null],[12,"st_gid","","",101,null],[12,"st_rdev","","",101,null],[12,"st_size","","",101,null],[12,"st_blksize","","",101,null],[12,"st_blocks","","",101,null],[12,"st_atime","","",101,null],[12,"st_atime_nsec","","",101,null],[12,"st_mtime","","",101,null],[12,"st_mtime_nsec","","",101,null],[12,"st_ctime","","",101,null],[12,"st_ctime_nsec","","",101,null],[5,"FileStat","","",null,[[],["i32",15]]],[3,"SFlag","","",null,null],[18,"S_IFIFO","","",102,null],[18,"S_IFCHR","","",102,null],[18,"S_IFDIR","","",102,null],[18,"S_IFBLK","","",102,null],[18,"S_IFREG","","",102,null],[18,"S_IFLNK","","",102,null],[18,"S_IFSOCK","","",102,null],[18,"S_IFMT","","",102,null],[11,"empty","","Returns an empty set of flags",102,[[],["sflag",3]]],[11,"all","","Returns the set containing all flags.",102,[[],["sflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",102,[[["mode_t",6]],[["option",4],["sflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",102,[[["mode_t",6]],["sflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",102,[[["mode_t",6]],["sflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",102,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",102,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",102,[[["sflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",102,[[["sflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["sflag",3]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["sflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["sflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",102,[[["bool",15],["sflag",3]]]],[3,"Mode","","",null,null],[18,"S_IRWXU","","",103,null],[18,"S_IRUSR","","",103,null],[18,"S_IWUSR","","",103,null],[18,"S_IXUSR","","",103,null],[18,"S_IRWXG","","",103,null],[18,"S_IRGRP","","",103,null],[18,"S_IWGRP","","",103,null],[18,"S_IXGRP","","",103,null],[18,"S_IRWXO","","",103,null],[18,"S_IROTH","","",103,null],[18,"S_IWOTH","","",103,null],[18,"S_IXOTH","","",103,null],[18,"S_ISUID","","",103,null],[18,"S_ISGID","","",103,null],[18,"S_ISVTX","","",103,null],[11,"empty","","Returns an empty set of flags",103,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",103,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",103,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",103,[[["mode_t",6]],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",103,[[["mode_t",6]],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",103,[[["mode_t",6]],["mode",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",103,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",103,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",103,[[["mode",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",103,[[["mode",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",103,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",103,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",103,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",103,[[["bool",15],["mode",3]]]],[5,"mknod","","",null,[[["dev_t",6],["sflag",3],["mode",3]],["result",6]]],[5,"major","","",null,[[["dev_t",6]],["u64",15]]],[5,"minor","","",null,[[["dev_t",6]],["u64",15]]],[5,"makedev","","",null,[[["u64",15]],["dev_t",6]]],[5,"umask","","",null,[[["mode",3]],["mode",3]]],[5,"stat","","",null,[[],[["result",6],["filestat",3]]]],[5,"lstat","","",null,[[],[["result",6],["filestat",3]]]],[5,"fstat","","",null,[[["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fstatat","","",null,[[["atflags",3],["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fchmod","","Change the file permission bits of the file specified by …",null,[[["mode",3],["rawfd",6]],["result",6]]],[4,"FchmodatFlags","","Flags for <code>fchmodat</code> function.",null,null],[13,"FollowSymlink","","",104,null],[13,"NoFollowSymlink","","",104,null],[5,"fchmodat","","Change the file permission bits.",null,[[["rawfd",6],["fchmodatflags",4],["option",4],["mode",3]],["result",6]]],[5,"utimes","","Change the access and modification times of a file.",null,[[["timeval",3]],["result",6]]],[5,"lutimes","","Change the access and modification times of a file …",null,[[["timeval",3]],["result",6]]],[5,"futimens","","Change the access and modification times of the file …",null,[[["timespec",3],["rawfd",6]],["result",6]]],[4,"UtimensatFlags","","Flags for <code>utimensat</code> function.",null,null],[13,"FollowSymlink","","",105,null],[13,"NoFollowSymlink","","",105,null],[5,"utimensat","","Change the access and modification times of a file.",null,[[["timespec",3],["option",4],["utimensatflags",4],["rawfd",6]],["result",6]]],[5,"mkdirat","","",null,[[["mode",3],["rawfd",6]],["result",6]]],[0,"statfs","nix::sys","",null,null],[6,"fsid_t","nix::sys::statfs","",null,null],[3,"Statfs","","",null,null],[3,"FsType","","",null,null],[12,"0","","",106,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[11,"filesystem_type","","Magic code defining system type",107,[[],["fstype",3]]],[11,"optimal_transfer_size","","Optimal transfer block size",107,[[],["__fsword_t",6]]],[11,"block_size","","Size of a block",107,[[],["__fsword_t",6]]],[11,"maximum_name_length","","Maximum length of filenames",107,[[],["__fsword_t",6]]],[11,"blocks","","Total data blocks in filesystem",107,[[],["c_ulong",6]]],[11,"blocks_free","","Free blocks in filesystem",107,[[],["c_ulong",6]]],[11,"blocks_available","","Free blocks available to unprivileged user",107,[[],["c_ulong",6]]],[11,"files","","Total file nodes in filesystem",107,[[],["c_ulong",6]]],[11,"files_free","","Free file nodes in filesystem",107,[[],["c_ulong",6]]],[11,"filesystem_id","","Filesystem ID",107,[[],["fsid_t",6]]],[5,"statfs","","",null,[[],[["statfs",3],["result",6]]]],[5,"fstatfs","","",null,[[],[["statfs",3],["result",6]]]],[0,"statvfs","nix::sys","Get filesystem statistics",null,null],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",null,null],[18,"ST_RDONLY","","Read Only",108,null],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",108,null],[18,"ST_NODEV","","Do not interpret character or block-special devices",108,null],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",108,null],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",108,null],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",108,null],[18,"ST_WRITE","","Write on file/directory/symlink",108,null],[18,"ST_APPEND","","Append-only file",108,null],[18,"ST_IMMUTABLE","","Immutable file",108,null],[18,"ST_NOATIME","","Do not update access times on files",108,null],[18,"ST_NODIRATIME","","Do not update access times on files",108,null],[18,"ST_RELATIME","","Update access time relative to modify/change time",108,null],[11,"empty","","Returns an empty set of flags",108,[[],["fsflags",3]]],[11,"all","","Returns the set containing all flags.",108,[[],["fsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",108,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",108,[[["c_ulong",6]],[["option",4],["fsflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",108,[[["c_ulong",6]],["fsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",108,[[["c_ulong",6]],["fsflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",108,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",108,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",108,[[["fsflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",108,[[["fsflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",108,[[["fsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",108,[[["fsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",108,[[["fsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",108,[[["bool",15],["fsflags",3]]]],[3,"Statvfs","","Wrapper around the POSIX <code>statvfs</code> struct",null,null],[11,"block_size","","get the file system block size",109,[[],["c_ulong",6]]],[11,"fragment_size","","Get the fundamental file system block size",109,[[],["c_ulong",6]]],[11,"blocks","","Get the number of blocks.",109,[[],["fsblkcnt_t",6]]],[11,"blocks_free","","Get the number of free blocks in the file system",109,[[],["fsblkcnt_t",6]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",109,[[],["fsblkcnt_t",6]]],[11,"files","","Get the total number of file inodes",109,[[],["fsfilcnt_t",6]]],[11,"files_free","","Get the number of free file inodes",109,[[],["fsfilcnt_t",6]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",109,[[],["fsfilcnt_t",6]]],[11,"filesystem_id","","Get the file system id",109,[[],["c_ulong",6]]],[11,"flags","","Get the mount flags",109,[[],["fsflags",3]]],[11,"name_max","","Get the maximum filename length",109,[[],["c_ulong",6]]],[5,"statvfs","","Return a <code>Statvfs</code> object with information about the <code>path</code>",null,[[],[["result",6],["statvfs",3]]]],[5,"fstatvfs","","Return a <code>Statvfs</code> object with information about <code>fd</code>",null,[[],[["result",6],["statvfs",3]]]],[0,"sysinfo","nix::sys","",null,null],[3,"SysInfo","nix::sys::sysinfo","System info structure returned by <code>sysinfo</code>.",null,null],[11,"load_average","","Returns the load average tuple.",110,[[]]],[11,"uptime","","Returns the time since system boot.",110,[[],["duration",3]]],[11,"process_count","","Current number of processes.",110,[[],["u16",15]]],[11,"swap_total","","Returns the amount of swap memory in Bytes.",110,[[],["u64",15]]],[11,"swap_free","","Returns the amount of unused swap memory in Bytes.",110,[[],["u64",15]]],[11,"ram_total","","Returns the total amount of installed RAM in Bytes.",110,[[],["u64",15]]],[11,"ram_unused","","Returns the amount of completely unused RAM in Bytes.",110,[[],["u64",15]]],[5,"sysinfo","","Returns system information.",null,[[],[["sysinfo",3],["result",6]]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication …",null,null],[3,"Termios","nix::sys::termios","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see <code>termios.c_iflag</code> documentation)",111,null],[12,"output_flags","","Output mode flags (see <code>termios.c_oflag</code> documentation)",111,null],[12,"control_flags","","Control mode flags (see <code>termios.c_cflag</code> documentation)",111,null],[12,"local_flags","","Local mode flags (see <code>termios.c_lflag</code> documentation)",111,null],[12,"control_chars","","Control characters (see <code>termios.c_cc</code> documentation)",111,null],[4,"BaudRate","","Baud rates supported by the system.",null,null],[13,"B0","","",112,null],[13,"B50","","",112,null],[13,"B75","","",112,null],[13,"B110","","",112,null],[13,"B134","","",112,null],[13,"B150","","",112,null],[13,"B200","","",112,null],[13,"B300","","",112,null],[13,"B600","","",112,null],[13,"B1200","","",112,null],[13,"B1800","","",112,null],[13,"B2400","","",112,null],[13,"B4800","","",112,null],[13,"B9600","","",112,null],[13,"B19200","","",112,null],[13,"B38400","","",112,null],[13,"B57600","","",112,null],[13,"B115200","","",112,null],[13,"B230400","","",112,null],[13,"B460800","","",112,null],[13,"B500000","","",112,null],[13,"B576000","","",112,null],[13,"B921600","","",112,null],[13,"B1000000","","",112,null],[13,"B1152000","","",112,null],[13,"B1500000","","",112,null],[13,"B2000000","","",112,null],[13,"B2500000","","",112,null],[13,"B3000000","","",112,null],[13,"B3500000","","",112,null],[13,"B4000000","","",112,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",113,null],[13,"TCSADRAIN","","The change occurs after all output has been written",113,null],[13,"TCSAFLUSH","","Same as <code>TCSADRAIN</code>, but will also flush the input buffer",113,null],[4,"FlushArg","","Specify a combination of the input and output buffers to …",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",114,null],[13,"TCOFLUSH","","Flush data written but not transmitted",114,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not …",114,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",115,null],[13,"TCOON","","Resume transmission",115,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a …",115,null],[13,"TCION","","Transmit a START character, which should re-enable a …",115,null],[4,"SpecialCharacterIndices","","Indices into the <code>termios.c_cc</code> array for special …",null,null],[13,"VDISCARD","","",116,null],[13,"VEOF","","",116,null],[13,"VEOL","","",116,null],[13,"VEOL2","","",116,null],[13,"VERASE","","",116,null],[13,"VINTR","","",116,null],[13,"VKILL","","",116,null],[13,"VLNEXT","","",116,null],[13,"VMIN","","",116,null],[13,"VQUIT","","",116,null],[13,"VREPRINT","","",116,null],[13,"VSTART","","",116,null],[13,"VSTOP","","",116,null],[13,"VSUSP","","",116,null],[13,"VSWTC","","",116,null],[13,"VTIME","","",116,null],[13,"VWERASE","","",116,null],[17,"NCCS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[18,"IGNBRK","","",117,null],[18,"BRKINT","","",117,null],[18,"IGNPAR","","",117,null],[18,"PARMRK","","",117,null],[18,"INPCK","","",117,null],[18,"ISTRIP","","",117,null],[18,"INLCR","","",117,null],[18,"IGNCR","","",117,null],[18,"ICRNL","","",117,null],[18,"IXON","","",117,null],[18,"IXOFF","","",117,null],[18,"IXANY","","",117,null],[18,"IMAXBEL","","",117,null],[18,"IUTF8","","",117,null],[11,"empty","","Returns an empty set of flags",117,[[],["inputflags",3]]],[11,"all","","Returns the set containing all flags.",117,[[],["inputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",117,[[["tcflag_t",6]],[["option",4],["inputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",117,[[["tcflag_t",6]],["inputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",117,[[["tcflag_t",6]],["inputflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",117,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",117,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",117,[[["inputflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",117,[[["inputflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["inputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["inputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["inputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",117,[[["bool",15],["inputflags",3]]]],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[18,"OPOST","","",118,null],[18,"OLCUC","","",118,null],[18,"ONLCR","","",118,null],[18,"OCRNL","","",118,null],[18,"ONOCR","","",118,null],[18,"ONLRET","","",118,null],[18,"OFILL","","",118,null],[18,"OFDEL","","",118,null],[18,"NL0","","",118,null],[18,"NL1","","",118,null],[18,"CR0","","",118,null],[18,"CR1","","",118,null],[18,"CR2","","",118,null],[18,"CR3","","",118,null],[18,"TAB0","","",118,null],[18,"TAB1","","",118,null],[18,"TAB2","","",118,null],[18,"TAB3","","",118,null],[18,"XTABS","","",118,null],[18,"BS0","","",118,null],[18,"BS1","","",118,null],[18,"VT0","","",118,null],[18,"VT1","","",118,null],[18,"FF0","","",118,null],[18,"FF1","","",118,null],[18,"NLDLY","","",118,null],[18,"CRDLY","","",118,null],[18,"TABDLY","","",118,null],[18,"BSDLY","","",118,null],[18,"VTDLY","","",118,null],[18,"FFDLY","","",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["outputflags",3]]],[11,"all","","Returns the set containing all flags.",118,[[],["outputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",118,[[["tcflag_t",6]],[["option",4],["outputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",118,[[["tcflag_t",6]],["outputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["tcflag_t",6]],["outputflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",118,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",118,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",118,[[["outputflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",118,[[["outputflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["outputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["outputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["outputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",118,[[["bool",15],["outputflags",3]]]],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[18,"CS5","","",119,null],[18,"CS6","","",119,null],[18,"CS7","","",119,null],[18,"CS8","","",119,null],[18,"CSTOPB","","",119,null],[18,"CREAD","","",119,null],[18,"PARENB","","",119,null],[18,"PARODD","","",119,null],[18,"HUPCL","","",119,null],[18,"CLOCAL","","",119,null],[18,"CRTSCTS","","",119,null],[18,"CBAUD","","",119,null],[18,"CMSPAR","","",119,null],[18,"CIBAUD","","",119,null],[18,"CBAUDEX","","",119,null],[18,"CSIZE","","",119,null],[11,"empty","","Returns an empty set of flags",119,[[],["controlflags",3]]],[11,"all","","Returns the set containing all flags.",119,[[],["controlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",119,[[["tcflag_t",6]],[["option",4],["controlflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",119,[[["tcflag_t",6]],["controlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",119,[[["tcflag_t",6]],["controlflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",119,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",119,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",119,[[["controlflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",119,[[["controlflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["controlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["controlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["controlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",119,[[["bool",15],["controlflags",3]]]],[3,"LocalFlags","","Flags for setting any local modes",null,null],[18,"ECHOKE","","",120,null],[18,"ECHOE","","",120,null],[18,"ECHOK","","",120,null],[18,"ECHO","","",120,null],[18,"ECHONL","","",120,null],[18,"ECHOPRT","","",120,null],[18,"ECHOCTL","","",120,null],[18,"ISIG","","",120,null],[18,"ICANON","","",120,null],[18,"IEXTEN","","",120,null],[18,"EXTPROC","","",120,null],[18,"TOSTOP","","",120,null],[18,"FLUSHO","","",120,null],[18,"PENDIN","","",120,null],[18,"NOFLSH","","",120,null],[11,"empty","","Returns an empty set of flags",120,[[],["localflags",3]]],[11,"all","","Returns the set containing all flags.",120,[[],["localflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",120,[[["tcflag_t",6]],[["localflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",120,[[["tcflag_t",6]],["localflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",120,[[["tcflag_t",6]],["localflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",120,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",120,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",120,[[["localflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",120,[[["localflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["localflags",3]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["localflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["localflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",120,[[["bool",15],["localflags",3]]]],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,[[["termios",3],["baudrate",4]],["result",6]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,[[["termios",3],["baudrate",4]],["result",6]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,[[["termios",3],["baudrate",4]],["result",6]]],[5,"cfmakeraw","","Configures the port to something like the \\\"raw\\\" mode of …",null,[[["termios",3]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,[[["rawfd",6]],[["termios",3],["result",6]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,[[["setarg",4],["termios",3],["rawfd",6]],["result",6]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,[[["rawfd",6]],["result",6]]],[5,"tcflow","","Suspend or resume the transmission or reception of data …",null,[[["flowarg",4],["rawfd",6]],["result",6]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)…",null,[[["flusharg",4],["rawfd",6]],["result",6]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)…",null,[[["c_int",6],["rawfd",6]],["result",6]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see …",null,[[["rawfd",6]],[["result",6],["pid",3]]]],[0,"time","nix::sys","",null,null],[6,"time_t","nix::sys::time","",null,null],[6,"suseconds_t","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",121,[[]]],[11,"hours","","",121,[[["i64",15]]]],[11,"minutes","","",121,[[["i64",15]]]],[10,"seconds","","",121,[[["i64",15]]]],[10,"milliseconds","","",121,[[["i64",15]]]],[10,"microseconds","","",121,[[["i64",15]]]],[10,"nanoseconds","","",121,[[["i64",15]]]],[11,"num_hours","","",121,[[],["i64",15]]],[11,"num_minutes","","",121,[[],["i64",15]]],[10,"num_seconds","","",121,[[],["i64",15]]],[10,"num_milliseconds","","",121,[[],["i64",15]]],[10,"num_microseconds","","",121,[[],["i64",15]]],[10,"num_nanoseconds","","",121,[[],["i64",15]]],[3,"TimeSpec","","",null,null],[11,"tv_sec","","",122,[[],["time_t",6]]],[11,"tv_nsec","","",122,[[],["c_long",6]]],[3,"TimeVal","","",null,null],[11,"tv_sec","","",123,[[],["time_t",6]]],[11,"tv_usec","","",123,[[],["suseconds_t",6]]],[0,"uio","nix::sys","",null,null],[5,"writev","nix::sys::uio","",null,[[["rawfd",6]],[["result",6],["usize",15]]]],[5,"readv","","",null,[[["rawfd",6]],[["result",6],["usize",15]]]],[5,"pwritev","","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.",null,[[["off_t",6],["rawfd",6]],[["result",6],["usize",15]]]],[5,"preadv","","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.",null,[[["off_t",6],["rawfd",6]],[["result",6],["usize",15]]]],[5,"pwrite","","",null,[[["off_t",6],["rawfd",6]],[["result",6],["usize",15]]]],[5,"pread","","",null,[[["off_t",6],["rawfd",6]],[["result",6],["usize",15]]]],[3,"RemoteIoVec","","A slice of memory in a remote process, starting at …",null,null],[12,"base","","The starting address of this slice (<code>iov_base</code>).",124,null],[12,"len","","The number of bytes in this slice (<code>iov_len</code>).",124,null],[5,"process_vm_writev","","Write data directly to another process\'s virtual memory …",null,[[["pid",3]],[["result",6],["usize",15]]]],[5,"process_vm_readv","","Read data directly from another process\'s virtual memory …",null,[[["pid",3]],[["result",6],["usize",15]]]],[3,"IoVec","","",null,null],[11,"as_slice","","",125,[[]]],[11,"from_slice","","",125,[[],["iovec",3]]],[11,"from_mut_slice","","",125,[[],["iovec",3]]],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[11,"sysname","","",126,[[],["str",15]]],[11,"nodename","","",126,[[],["str",15]]],[11,"release","","",126,[[],["str",15]]],[11,"version","","",126,[[],["str",15]]],[11,"machine","","",126,[[],["str",15]]],[5,"uname","","",null,[[],["utsname",3]]],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[18,"WNOHANG","","",127,null],[18,"WUNTRACED","","",127,null],[18,"WEXITED","","",127,null],[18,"WCONTINUED","","",127,null],[18,"WSTOPPED","","",127,null],[18,"WNOWAIT","","Don\'t reap, just poll status.",127,null],[18,"__WNOTHREAD","","Don\'t wait on children of other threads in this group",127,null],[18,"__WALL","","Wait on all children, regardless of type",127,null],[18,"__WCLONE","","",127,null],[11,"empty","","Returns an empty set of flags",127,[[],["waitpidflag",3]]],[11,"all","","Returns the set containing all flags.",127,[[],["waitpidflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",127,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",127,[[["c_int",6]],[["waitpidflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",127,[[["c_int",6]],["waitpidflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",127,[[["c_int",6]],["waitpidflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",127,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",127,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",127,[[["waitpidflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",127,[[["waitpidflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",127,[[["waitpidflag",3]]]],[11,"remove","","Removes the specified flags in-place.",127,[[["waitpidflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",127,[[["waitpidflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",127,[[["bool",15],["waitpidflag",3]]]],[4,"WaitStatus","","Possible return values from <code>wait()</code> or <code>waitpid()</code>.",null,null],[13,"Exited","","The process exited normally (as with <code>exit()</code> or returning …",128,null],[13,"Signaled","","The process was killed by the given signal. The third …",128,null],[13,"Stopped","","The process is alive, but was stopped by the given …",128,null],[13,"PtraceEvent","","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …",128,null],[13,"PtraceSyscall","","The traced process was stopped by execution of a system …",128,null],[13,"Continued","","The process was previously stopped but has resumed …",128,null],[13,"StillAlive","","There are currently no state changes to report in any …",128,null],[11,"pid","","Extracts the PID from the WaitStatus unless it equals …",128,[[],[["pid",3],["option",4]]]],[11,"from_raw","","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …",128,[[["pid",3],["i32",15]],[["result",6],["waitstatus",4]]]],[5,"waitpid","","",null,[[["waitpidflag",3],["option",4],["option",4],["into",8]],[["result",6],["waitstatus",4]]]],[5,"wait","","",null,[[],[["result",6],["waitstatus",4]]]],[0,"inotify","nix::sys","Monitoring API for filesystem events.",null,null],[3,"AddWatchFlags","nix::sys::inotify","Configuration options for <code>inotify_add_watch</code>.",null,null],[18,"IN_ACCESS","","",129,null],[18,"IN_MODIFY","","",129,null],[18,"IN_ATTRIB","","",129,null],[18,"IN_CLOSE_WRITE","","",129,null],[18,"IN_CLOSE_NOWRITE","","",129,null],[18,"IN_OPEN","","",129,null],[18,"IN_MOVED_FROM","","",129,null],[18,"IN_MOVED_TO","","",129,null],[18,"IN_CREATE","","",129,null],[18,"IN_DELETE","","",129,null],[18,"IN_DELETE_SELF","","",129,null],[18,"IN_MOVE_SELF","","",129,null],[18,"IN_UNMOUNT","","",129,null],[18,"IN_Q_OVERFLOW","","",129,null],[18,"IN_IGNORED","","",129,null],[18,"IN_CLOSE","","",129,null],[18,"IN_MOVE","","",129,null],[18,"IN_ONLYDIR","","",129,null],[18,"IN_DONT_FOLLOW","","",129,null],[18,"IN_ISDIR","","",129,null],[18,"IN_ONESHOT","","",129,null],[18,"IN_ALL_EVENTS","","",129,null],[11,"empty","","Returns an empty set of flags",129,[[],["addwatchflags",3]]],[11,"all","","Returns the set containing all flags.",129,[[],["addwatchflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",129,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",129,[[["u32",15]],[["option",4],["addwatchflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",129,[[["u32",15]],["addwatchflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",129,[[["u32",15]],["addwatchflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",129,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",129,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",129,[[["addwatchflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",129,[[["addwatchflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",129,[[["addwatchflags",3]]]],[11,"remove","","Removes the specified flags in-place.",129,[[["addwatchflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",129,[[["addwatchflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",129,[[["bool",15],["addwatchflags",3]]]],[3,"InitFlags","","Configuration options for <code>inotify_init1</code>.",null,null],[18,"IN_CLOEXEC","","",130,null],[18,"IN_NONBLOCK","","",130,null],[11,"empty","","Returns an empty set of flags",130,[[],["initflags",3]]],[11,"all","","Returns the set containing all flags.",130,[[],["initflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",130,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",130,[[["c_int",6]],[["option",4],["initflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",130,[[["c_int",6]],["initflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",130,[[["c_int",6]],["initflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",130,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",130,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",130,[[["initflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",130,[[["initflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",130,[[["initflags",3]]]],[11,"remove","","Removes the specified flags in-place.",130,[[["initflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",130,[[["initflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",130,[[["initflags",3],["bool",15]]]],[3,"Inotify","","An inotify instance. This is also a file descriptor, you …",null,null],[3,"WatchDescriptor","","This object is returned when you create a new watch on an …",null,null],[3,"InotifyEvent","","A single inotify event.",null,null],[12,"wd","","Watch descriptor. This field corresponds to the watch …",131,null],[12,"mask","","Event mask. This field is a bitfield describing the exact …",131,null],[12,"cookie","","This cookie is a number that allows you to connect …",131,null],[12,"name","","Filename. This field exists only if the event was …",131,null],[11,"init","","Initialize a new inotify instance.",132,[[["initflags",3]],[["result",6],["inotify",3]]]],[11,"add_watch","","Adds a new watch on the target file or directory. ",132,[[["addwatchflags",3]],[["result",6],["watchdescriptor",3]]]],[11,"rm_watch","","Removes an existing watch using the watch descriptor …",132,[[["watchdescriptor",3]],["result",6]]],[11,"read_events","","Reads a collection of events from the inotify file …",132,[[],[["result",6],["vec",3]]]],[0,"timerfd","nix::sys","Timer API via file descriptors.",null,null],[3,"TimerFd","nix::sys::timerfd","A timerfd instance. This is also a file descriptor, you …",null,null],[4,"ClockId","","The type of the clock used to mark the progress of the …",null,null],[13,"CLOCK_REALTIME","","",133,null],[13,"CLOCK_MONOTONIC","","",133,null],[13,"CLOCK_BOOTTIME","","",133,null],[13,"CLOCK_REALTIME_ALARM","","",133,null],[13,"CLOCK_BOOTTIME_ALARM","","",133,null],[3,"TimerFlags","","Additional flags to change the behaviour of the file …",null,null],[18,"TFD_NONBLOCK","","",134,null],[18,"TFD_CLOEXEC","","",134,null],[11,"empty","","Returns an empty set of flags",134,[[],["timerflags",3]]],[11,"all","","Returns the set containing all flags.",134,[[],["timerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",134,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",134,[[["c_int",6]],[["timerflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",134,[[["c_int",6]],["timerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",134,[[["c_int",6]],["timerflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",134,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",134,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",134,[[["timerflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",134,[[["timerflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",134,[[["timerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",134,[[["timerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",134,[[["timerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",134,[[["timerflags",3],["bool",15]]]],[3,"TimerSetTimeFlags","","Flags that are used for arming the timer.",null,null],[18,"TFD_TIMER_ABSTIME","","",135,null],[11,"empty","","Returns an empty set of flags",135,[[],["timersettimeflags",3]]],[11,"all","","Returns the set containing all flags.",135,[[],["timersettimeflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",135,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",135,[[["c_int",6]],[["timersettimeflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",135,[[["c_int",6]],["timersettimeflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",135,[[["c_int",6]],["timersettimeflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",135,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",135,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",135,[[["timersettimeflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",135,[[["timersettimeflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",135,[[["timersettimeflags",3]]]],[11,"remove","","Removes the specified flags in-place.",135,[[["timersettimeflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",135,[[["timersettimeflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",135,[[["bool",15],["timersettimeflags",3]]]],[4,"Expiration","","An enumeration allowing the definition of the expiration …",null,null],[13,"OneShot","","",136,null],[13,"IntervalDelayed","","",136,null],[13,"Interval","","",136,null],[11,"new","","Creates a new timer based on the clock defined by <code>clockid</code>…",137,[[["timerflags",3],["clockid",4]],["result",6]]],[11,"set","","Sets a new alarm on the timer.",137,[[["expiration",4],["timersettimeflags",3]],["result",6]]],[11,"get","","Get the parameters for the alarm currently set, if any.",137,[[],[["option",4],["result",6]]]],[11,"unset","","Remove the alarm if any is set.",137,[[],["result",6]]],[11,"wait","","Wait for the configured alarm to expire.",137,[[],["result",6]]],[0,"time","nix","",null,null],[3,"ClockId","nix::time","Clock identifier",null,null],[11,"from_raw","","Creates <code>ClockId</code> from raw <code>clockid_t</code>",138,[[["clockid_t",6]]]],[11,"pid_cpu_clock_id","","Returns <code>ClockId</code> of a <code>pid</code> CPU-time clock",138,[[["pid",3]],["result",6]]],[11,"res","","Returns resolution of the clock id",138,[[],[["result",6],["timespec",3]]]],[11,"now","","Returns the current time on the clock id",138,[[],[["result",6],["timespec",3]]]],[11,"set_time","","Sets time to <code>timespec</code> on the clock id",138,[[["timespec",3]],["result",6]]],[11,"as_raw","","Gets the raw <code>clockid_t</code> wrapped by <code>self</code>",138,[[],["clockid_t",6]]],[18,"CLOCK_BOOTTIME","","",138,null],[18,"CLOCK_BOOTTIME_ALARM","","",138,null],[18,"CLOCK_MONOTONIC","","",138,null],[18,"CLOCK_MONOTONIC_COARSE","","",138,null],[18,"CLOCK_MONOTONIC_RAW","","",138,null],[18,"CLOCK_PROCESS_CPUTIME_ID","","",138,null],[18,"CLOCK_REALTIME","","",138,null],[18,"CLOCK_REALTIME_ALARM","","",138,null],[18,"CLOCK_REALTIME_COARSE","","",138,null],[18,"CLOCK_THREAD_CPUTIME_ID","","",138,null],[5,"clock_getres","","Get the resolution of the specified clock, (see …",null,[[["clockid",3]],[["result",6],["timespec",3]]]],[5,"clock_gettime","","Get the time of the specified clock, (see clock_gettime(2)…",null,[[["clockid",3]],[["result",6],["timespec",3]]]],[5,"clock_settime","","Set the time of the specified clock, (see clock_settime(2)…",null,[[["clockid",3],["timespec",3]],["result",6]]],[5,"clock_getcpuclockid","","Get the clock id of the specified process id, (see …",null,[[["pid",3]],[["clockid",3],["result",6]]]],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"get","","",139,[[],[["ucontext",3],["result",6]]]],[11,"set","","",139,[[],["result",6]]],[11,"sigmask_mut","","",139,[[],["sigset",3]]],[11,"sigmask","","",139,[[],["sigset",3]]],[0,"unistd","nix","Safe wrappers around functions found in libc \\\"unistd.h\\\" …",null,null],[0,"alarm","nix::unistd","Alarm signal scheduling.",null,null],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",null,[[["c_uint",6]],[["c_uint",6],["option",4]]]],[5,"cancel","","Cancel an previously set alarm signal.",null,[[],[["c_uint",6],["option",4]]]],[0,"acct","nix::unistd","",null,null],[5,"enable","nix::unistd::acct","Enable process accounting",null,[[],["result",6]]],[5,"disable","","Disable process accounting",null,[[],["result",6]]],[5,"pivot_root","nix::unistd","",null,[[],["result",6]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2)…",null,[[["uid",3]],["result",6]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2)…",null,[[["gid",3]],["result",6]]],[3,"Uid","","User identifier",null,null],[11,"from_raw","","Creates <code>Uid</code> from raw <code>uid_t</code>.",140,[[["uid_t",6]]]],[11,"current","","Returns Uid of calling process. This is practically a …",140,[[]]],[11,"effective","","Returns effective Uid of calling process. This is …",140,[[]]],[11,"is_root","","Returns true if the <code>Uid</code> represents privileged user - …",140,[[],["bool",15]]],[11,"as_raw","","Get the raw <code>uid_t</code> wrapped by <code>self</code>.",140,[[],["uid_t",6]]],[17,"ROOT","","Constant for UID = 0",null,null],[3,"Gid","","Group identifier",null,null],[11,"from_raw","","Creates <code>Gid</code> from raw <code>gid_t</code>.",141,[[["gid_t",6]]]],[11,"current","","Returns Gid of calling process. This is practically a …",141,[[]]],[11,"effective","","Returns effective Gid of calling process. This is …",141,[[]]],[11,"as_raw","","Get the raw <code>gid_t</code> wrapped by <code>self</code>.",141,[[],["gid_t",6]]],[3,"Pid","","Process identifier",null,null],[11,"from_raw","","Creates <code>Pid</code> from raw <code>pid_t</code>.",142,[[["pid_t",6]]]],[11,"this","","Returns PID of calling process",142,[[]]],[11,"parent","","Returns PID of parent of calling process",142,[[]]],[11,"as_raw","","Get the raw <code>pid_t</code> wrapped by <code>self</code>.",142,[[],["pid_t",6]]],[4,"ForkResult","","Represents the successful result of calling <code>fork</code>",null,null],[13,"Parent","","",143,null],[12,"child","nix::unistd::ForkResult","",144,null],[13,"Child","nix::unistd","",143,null],[11,"is_child","","Return <code>true</code> if this is the child process of the <code>fork()</code>",143,[[],["bool",15]]],[11,"is_parent","","Returns <code>true</code> if this is the parent process of the <code>fork()</code>",143,[[],["bool",15]]],[5,"fork","","Create a new child process duplicating the parent process …",null,[[],[["forkresult",4],["result",6]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,[[],["pid",3]]],[5,"getppid","","Get the pid of this processes\' parent (see getpid(2)).",null,[[],["pid",3]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,[[["pid",3]],["result",6]]],[5,"getpgid","","",null,[[["pid",3],["option",4]],[["result",6],["pid",3]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)…",null,[[],[["result",6],["pid",3]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",null,[[["pid",3],["option",4]],[["result",6],["pid",3]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see …",null,[[["c_int",6]],[["result",6],["pid",3]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see …",null,[[["c_int",6],["pid",3]],["result",6]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,[[],["pid",3]]],[5,"gettid","","Get the caller\'s thread ID (see gettid(2).",null,[[],["pid",3]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)…",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"dup2","","Create a copy of the specified file descriptor using the …",null,[[["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"dup3","","Create a new copy of the specified file descriptor using …",null,[[["oflag",3],["rawfd",6]],[["result",6],["rawfd",6]]]],[5,"chdir","","Change the current working directory of the calling …",null,[[],["result",6]]],[5,"fchdir","","Change the current working directory of the process to …",null,[[["rawfd",6]],["result",6]]],[5,"mkdir","","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …",null,[[["mode",3]],["result",6]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path <code>path</code> …",null,[[["mode",3]],["result",6]]],[5,"mkfifoat","","Creates new fifo special file (named pipe) with path <code>path</code> …",null,[[["mode",3],["option",4],["rawfd",6]],["result",6]]],[5,"symlinkat","","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.",null,[[["option",4],["rawfd",6]],["result",6]]],[5,"getcwd","","Returns the current directory as a <code>PathBuf</code>",null,[[],[["result",6],["pathbuf",3]]]],[5,"chown","","Change the ownership of the file at <code>path</code> to be owned by …",null,[[["gid",3],["uid",3],["option",4],["option",4]],["result",6]]],[5,"fchown","","Change the ownership of the file referred to by the open …",null,[[["gid",3],["uid",3],["option",4],["option",4],["rawfd",6]],["result",6]]],[4,"FchownatFlags","","Flags for <code>fchownat</code> function.",null,null],[13,"FollowSymlink","","",145,null],[13,"NoFollowSymlink","","",145,null],[5,"fchownat","","Change the ownership of the file at <code>path</code> to be owned by …",null,[[["fchownatflags",4],["option",4],["gid",3],["uid",3],["option",4],["option",4],["rawfd",6]],["result",6]]],[5,"execv","","Replace the current process image with a new one (see …",null,[[["cstr",3]],[["result",6],["infallible",4]]]],[5,"execve","","Replace the current process image with a new one (see …",null,[[["cstr",3]],[["result",6],["infallible",4]]]],[5,"execvp","","Replace the current process image with a new one and …",null,[[["cstr",3]],[["result",6],["infallible",4]]]],[5,"execvpe","","Replace the current process image with a new one and …",null,[[["cstr",3]],[["result",6],["infallible",4]]]],[5,"fexecve","","Replace the current process image with a new one (see …",null,[[["rawfd",6]],[["result",6],["infallible",4]]]],[5,"execveat","","Execute program relative to a directory file descriptor …",null,[[["atflags",3],["cstr",3],["rawfd",6]],[["result",6],["infallible",4]]]],[5,"daemon","","Daemonize this process by detaching from the controlling …",null,[[["bool",15]],["result",6]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",null,[[["osstr",3],["asref",8]],["result",6]]],[5,"gethostname","","Get the host name and store it in the provided buffer, …",null,[[],[["result",6],["cstr",3]]]],[5,"close","","Close a raw file descriptor",null,[[["rawfd",6]],["result",6]]],[5,"read","","Read from a raw file descriptor.",null,[[["rawfd",6]],[["result",6],["usize",15]]]],[5,"write","","Write to a raw file descriptor.",null,[[["rawfd",6]],[["result",6],["usize",15]]]],[4,"Whence","","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …",null,null],[13,"SeekSet","","Specify an offset relative to the start of the file.",146,null],[13,"SeekCur","","Specify an offset relative to the current file location.",146,null],[13,"SeekEnd","","Specify an offset relative to the end of the file.",146,null],[13,"SeekData","","Specify an offset relative to the next location in the …",146,null],[13,"SeekHole","","Specify an offset relative to the next hole in the file …",146,null],[5,"lseek","","Move the read/write file offset.",null,[[["off_t",6],["whence",4],["rawfd",6]],[["result",6],["off_t",6]]]],[5,"lseek64","","",null,[[["off64_t",6],["whence",4],["rawfd",6]],[["result",6],["off64_t",6]]]],[5,"pipe","","Create an interprocess channel.",null,[[],["result",6]]],[5,"pipe2","","Like <code>pipe</code>, but allows setting certain file descriptor …",null,[[["oflag",3]],["result",6]]],[5,"truncate","","Truncate a file to a specified length",null,[[["off_t",6]],["result",6]]],[5,"ftruncate","","Truncate a file to a specified length",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"isatty","","",null,[[["rawfd",6]],[["result",6],["bool",15]]]],[4,"LinkatFlags","","Flags for <code>linkat</code> function.",null,null],[13,"SymlinkFollow","","",147,null],[13,"NoSymlinkFollow","","",147,null],[5,"linkat","","Link one file to another file",null,[[["linkatflags",4],["option",4],["rawfd",6]],["result",6]]],[5,"unlink","","Remove a directory entry",null,[[],["result",6]]],[4,"UnlinkatFlags","","Flags for <code>unlinkat</code> function.",null,null],[13,"RemoveDir","","",148,null],[13,"NoRemoveDir","","",148,null],[5,"unlinkat","","Remove a directory entry",null,[[["unlinkatflags",4],["option",4],["rawfd",6]],["result",6]]],[5,"chroot","","",null,[[],["result",6]]],[5,"sync","","Commit filesystem caches to disk",null,[[]]],[5,"fsync","","Synchronize changes to a file",null,[[["rawfd",6]],["result",6]]],[5,"fdatasync","","Synchronize the data of a file",null,[[["rawfd",6]],["result",6]]],[5,"getuid","","Get a real user ID",null,[[],["uid",3]]],[5,"geteuid","","Get the effective user ID",null,[[],["uid",3]]],[5,"getgid","","Get the real group ID",null,[[],["gid",3]]],[5,"getegid","","Get the effective group ID",null,[[],["gid",3]]],[5,"seteuid","","Set the effective user ID",null,[[["uid",3]],["result",6]]],[5,"setegid","","Set the effective group ID",null,[[["gid",3]],["result",6]]],[5,"setuid","","Set the user ID",null,[[["uid",3]],["result",6]]],[5,"setgid","","Set the group ID",null,[[["gid",3]],["result",6]]],[5,"setfsuid","","Set the user identity used for filesystem checks …",null,[[["uid",3]],["uid",3]]],[5,"setfsgid","","Set the group identity used for filesystem checks …",null,[[["gid",3]],["gid",3]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling …",null,[[],[["vec",3],["result",6]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling …",null,[[],["result",6]]],[5,"getgrouplist","","Calculate the supplementary group access list.",null,[[["cstr",3],["gid",3]],[["vec",3],["result",6]]]],[5,"initgroups","","Initialize the supplementary group access list.",null,[[["cstr",3],["gid",3]],["result",6]]],[5,"pause","","Suspend the thread until a signal is received.",null,[[]]],[5,"sleep","","Suspend execution for an interval of time",null,[[["c_uint",6]],["c_uint",6]]],[5,"mkstemp","","Creates a regular file which persists even after process …",null,[[],["result",6]]],[4,"PathconfVar","","Variable names for <code>pathconf</code>",null,null],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed …",149,null],[13,"LINK_MAX","","Maximum number of links to a single file.",149,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input …",149,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a …",149,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the …",149,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as …",149,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic …",149,null],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",149,null],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for …",149,null],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the …",149,null],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",149,null],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",149,null],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",149,null],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",149,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of <code>chown</code> and <code>fchown</code> is restricted to a process …",149,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an …",149,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a …",149,null],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed …",149,null],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed …",149,null],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed …",149,null],[5,"fpathconf","","Like <code>pathconf</code>, but works with file descriptors instead of …",null,[[["pathconfvar",4],["rawfd",6]],[["result",6],["option",4]]]],[5,"pathconf","","Get path-dependent configurable system variables (see …",null,[[["pathconfvar",4]],[["result",6],["option",4]]]],[4,"SysconfVar","","Variable names for <code>sysconf</code>",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O …",150,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations …",150,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its …",150,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions …",150,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with …",150,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",150,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the …",150,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",150,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc …",150,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",150,null],[13,"CLK_TCK","","",150,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an …",150,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",150,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within …",150,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the …",150,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has …",150,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of …",150,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",150,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs …",150,null],[13,"GETGR_R_SIZE_MAX","","Initial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers",150,null],[13,"GETPW_R_SIZE_MAX","","Initial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers",150,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a …",150,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the …",150,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the …",150,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information …",150,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",150,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",150,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",150,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks …",150,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization …",150,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",150,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",150,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",150,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking …",150,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking …",150,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",150,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",150,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",150,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and …",150,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",150,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",150,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",150,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",150,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression …",150,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved …",150,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",150,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects …",150,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",150,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",150,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",150,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server …",150,null],[13,"_POSIX_SS_REPL_MAX","","",150,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and …",150,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address …",150,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size …",150,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks …",150,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority …",150,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority …",150,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution …",150,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared …",150,null],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority …",150,null],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority …",150,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",150,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server …",150,null],[13,"_POSIX_THREADS","","The implementation supports threads.",150,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",150,null],[13,"_POSIX_TIMERS","","The implementation supports timers.",150,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",150,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",150,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",150,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",150,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",150,null],[13,"_POSIX_TRACE_NAME_MAX","","",150,null],[13,"_POSIX_TRACE_SYS_MAX","","",150,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",150,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects …",150,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard …",150,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation …",150,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation …",150,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation …",150,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation …",150,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",150,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development …",150,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics …",150,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development …",150,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities …",150,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by …",150,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment …",150,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",150,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart …",150,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request …",150,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request …",150,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request …",150,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development …",150,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability …",150,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and …",150,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",150,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",150,null],[13,"PTHREAD_KEYS_MAX","","",150,null],[13,"PTHREAD_STACK_MIN","","",150,null],[13,"PTHREAD_THREADS_MAX","","",150,null],[13,"RE_DUP_MAX","","",150,null],[13,"RTSIG_MAX","","",150,null],[13,"SEM_NSEMS_MAX","","",150,null],[13,"SEM_VALUE_MAX","","",150,null],[13,"SIGQUEUE_MAX","","",150,null],[13,"STREAM_MAX","","",150,null],[13,"SYMLOOP_MAX","","",150,null],[13,"TIMER_MAX","","",150,null],[13,"TTY_NAME_MAX","","",150,null],[13,"TZNAME_MAX","","",150,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option …",150,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 …",150,null],[13,"_XOPEN_LEGACY","","",150,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option …",150,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads …",150,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared …",150,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",150,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",150,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open …",150,null],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,[[["sysconfvar",4]],[["result",6],["option",4]]]],[3,"AccessFlags","","Options for access()",null,null],[18,"F_OK","","Test for existence of file.",151,null],[18,"R_OK","","Test for read permission.",151,null],[18,"W_OK","","Test for write permission.",151,null],[18,"X_OK","","Test for execute (search) permission.",151,null],[11,"empty","","Returns an empty set of flags",151,[[],["accessflags",3]]],[11,"all","","Returns the set containing all flags.",151,[[],["accessflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",151,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",151,[[["c_int",6]],[["accessflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",151,[[["c_int",6]],["accessflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",151,[[["c_int",6]],["accessflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",151,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",151,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",151,[[["accessflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",151,[[["accessflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",151,[[["accessflags",3]]]],[11,"remove","","Removes the specified flags in-place.",151,[[["accessflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",151,[[["accessflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",151,[[["bool",15],["accessflags",3]]]],[5,"access","","Checks the file named by <code>path</code> for accessibility according …",null,[[["accessflags",3]],["result",6]]],[3,"User","","Representation of a User, based on <code>libc::passwd</code>",null,null],[12,"name","","Username",152,null],[12,"passwd","","User password (probably encrypted)",152,null],[12,"uid","","User ID",152,null],[12,"gid","","Group ID",152,null],[12,"gecos","","User information",152,null],[12,"dir","","Home directory",152,null],[12,"shell","","Path to shell",152,null],[11,"from_uid","","Get a user by UID.",152,[[["uid",3]],[["option",4],["result",6]]]],[11,"from_name","","Get a user by name.",152,[[["str",15]],[["option",4],["result",6]]]],[3,"Group","","Representation of a Group, based on <code>libc::group</code>",null,null],[12,"name","","Group name",153,null],[12,"passwd","","Group password",153,null],[12,"gid","","Group ID",153,null],[12,"mem","","List of Group members",153,null],[11,"from_gid","","Get a group by GID.",153,[[["gid",3]],[["option",4],["result",6]]]],[11,"from_name","","Get a group by name.",153,[[["str",15]],[["option",4],["result",6]]]],[5,"ttyname","","Get the name of the terminal device that is open on file …",null,[[["rawfd",6]],[["result",6],["pathbuf",3]]]],[6,"Result","nix","Nix Result Type",null,null],[4,"Error","","Nix Error Type",null,null],[13,"Sys","","",154,null],[13,"InvalidPath","","",154,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust\'s native …",154,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance …",154,null],[11,"as_errno","","Convert this <code>Error</code> to an <code>Errno</code>.",154,[[],[["option",4],["errno",4]]]],[11,"from_errno","","Create a nix Error from a given errno",154,[[["errno",4]],["error",4]]],[11,"last","","Get the current errno and convert it to a nix Error",154,[[],["error",4]]],[11,"invalid_argument","","Create a new invalid argument error (<code>EINVAL</code>)",154,[[],["error",4]]],[8,"NixPath","","",null,null],[10,"is_empty","","",155,[[],["bool",15]]],[10,"len","","",155,[[],["usize",15]]],[10,"with_nix_path","","",155,[[],["result",6]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes …",null,null],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",null,null],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",null,null],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads …",null,null],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no …",null,null],[14,"ioctl_none_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data …",null,null],[14,"ioctl_read_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads …",null,null],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes …",null,null],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an …",null,null],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and …",null,null],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads …",null,null],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an …",null,null],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an …",null,null],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and …",null,null],[14,"cmsg_space","","Create a buffer large enough for storing some control …",null,null],[11,"from","nix::dir","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","nix::errno","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","nix::fcntl","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","nix::ifaddrs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"into_iter","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","nix::kmod","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","nix::mount","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","nix::mqueue","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","nix::net::if_","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","nix::poll","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","nix::pty","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","nix::sched","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","nix::sys::aio","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","nix::sys::epoll","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","nix::sys::eventfd","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","nix::sys::memfd","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","nix::sys::mman","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","nix::sys::personality","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","nix::sys::ptrace","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","nix::sys::quota","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","nix::sys::reboot","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","nix::sys::select","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"into_iter","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","nix::sys::signal","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"into_iter","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","nix::sys::signalfd","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"into_iter","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","nix::sys::socket","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","nix::sys::socket::sockopt","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","nix::sys::socket","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"into_iter","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","nix::sys::stat","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","nix::sys::statfs","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","nix::sys::statvfs","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","nix::sys::sysinfo","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","nix::sys::termios","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","nix::sys::time","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"to_string","","",123,[[],["string",3]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","nix::sys::uio","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","nix::sys::utsname","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","nix::sys::wait","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","nix::sys::inotify","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","nix::sys::timerfd","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","nix::time","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","nix::ucontext","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","nix::unistd","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"to_string","","",140,[[],["string",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"to_string","","",141,[[],["string",3]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"to_string","","",142,[[],["string",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","nix","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"to_string","","",154,[[],["string",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"fmt","nix::sys::signalfd","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::socket","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::pty","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::socket","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","nix::sys::signalfd","",65,[[],["signalfd_siginfo",3]]],[11,"clone","nix::sys::socket","",79,[[],["cmsghdr",3]]],[11,"clone","","",83,[[],["sockaddr_in6",3]]],[11,"clone","","",82,[[],["sockaddr_in",3]]],[11,"clone","","",81,[[],["sockaddr",3]]],[11,"clone","","",85,[[],["sockaddr_un",3]]],[11,"clone","","",84,[[],["sockaddr_storage",3]]],[11,"clone","nix::pty","",25,[[],["winsize",3]]],[11,"clone","nix::sys::socket","",80,[[],["msghdr",3]]],[11,"clone","nix::sys::stat","",101,[[],["stat",3]]],[11,"hash","nix::sys::signalfd","",65,[[]]],[11,"hash","nix::sys::stat","",101,[[]]],[11,"hash","nix::sys::socket","",81,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",79,[[]]],[11,"hash","nix::pty","",25,[[]]],[11,"hash","nix::sys::socket","",80,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",83,[[]]],[11,"eq","","",81,[[["sockaddr",3]],["bool",15]]],[11,"ne","","",81,[[["sockaddr",3]],["bool",15]]],[11,"eq","","",82,[[["sockaddr_in",3]],["bool",15]]],[11,"ne","","",82,[[["sockaddr_in",3]],["bool",15]]],[11,"eq","","",84,[[["sockaddr_storage",3]],["bool",15]]],[11,"eq","","",80,[[["msghdr",3]],["bool",15]]],[11,"ne","","",80,[[["msghdr",3]],["bool",15]]],[11,"eq","","",85,[[["sockaddr_un",3]],["bool",15]]],[11,"eq","nix::sys::stat","",101,[[["stat",3]],["bool",15]]],[11,"ne","","",101,[[["stat",3]],["bool",15]]],[11,"eq","nix::sys::socket","",79,[[["cmsghdr",3]],["bool",15]]],[11,"ne","","",79,[[["cmsghdr",3]],["bool",15]]],[11,"eq","nix::sys::signalfd","",65,[[["signalfd_siginfo",3]],["bool",15]]],[11,"ne","","",65,[[["signalfd_siginfo",3]],["bool",15]]],[11,"eq","nix::sys::socket","",83,[[["sockaddr_in6",3]],["bool",15]]],[11,"ne","","",83,[[["sockaddr_in6",3]],["bool",15]]],[11,"eq","nix::pty","",25,[[["winsize",3]],["bool",15]]],[11,"ne","","",25,[[["winsize",3]],["bool",15]]],[11,"get","nix::sys::socket::sockopt","",166,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",167,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",168,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",169,[[["rawfd",6]],[["result",6],["linger",3]]]],[11,"get","","",174,[[["rawfd",6]],[["result",6],["u8",15]]]],[11,"get","","",175,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",176,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",177,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",178,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",179,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",180,[[["rawfd",6]],[["result",6],["i32",15]]]],[11,"get","","",181,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",182,[[["rawfd",6]],[["result",6],["unixcredentials",3]]]],[11,"get","","",183,[[["rawfd",6]],[["u32",15],["result",6]]]],[11,"get","","",184,[[["rawfd",6]],[["u32",15],["result",6]]]],[11,"get","","",185,[[["rawfd",6]],[["u32",15],["result",6]]]],[11,"get","","",186,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"get","","",187,[[["rawfd",6]],[["result",6],["usize",15]]]],[11,"get","","",190,[[["rawfd",6]],[["socktype",4],["result",6]]]],[11,"get","","",191,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",192,[[["rawfd",6]],[["result",6],["osstring",3]]]],[11,"get","","",193,[[["rawfd",6]],[["sockaddr_in",3],["result",6]]]],[11,"get","","",194,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",195,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",196,[[["rawfd",6]],[["u32",15],["result",6]]]],[11,"get","","",197,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",198,[[["rawfd",6]],[["result",6],["osstring",3]]]],[11,"get","","",199,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",200,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"get","","",201,[[["rawfd",6]],[["c_int",6],["result",6]]]],[11,"get","","",202,[[["rawfd",6]],[["result",6],["bool",15]]]],[11,"set","","",166,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",167,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",168,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",169,[[["linger",3],["rawfd",6]],["result",6]]],[11,"set","","",170,[[["ipmembershiprequest",3],["rawfd",6]],["result",6]]],[11,"set","","",171,[[["ipmembershiprequest",3],["rawfd",6]],["result",6]]],[11,"set","","",172,[[["ipv6membershiprequest",3],["rawfd",6]],["result",6]]],[11,"set","","",173,[[["ipv6membershiprequest",3],["rawfd",6]],["result",6]]],[11,"set","","",174,[[["u8",15],["rawfd",6]],["result",6]]],[11,"set","","",175,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",176,[[["timeval",3],["rawfd",6]],["result",6]]],[11,"set","","",177,[[["timeval",3],["rawfd",6]],["result",6]]],[11,"set","","",178,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",179,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",181,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",183,[[["u32",15],["rawfd",6]],["result",6]]],[11,"set","","",184,[[["u32",15],["rawfd",6]],["result",6]]],[11,"set","","",185,[[["u32",15],["rawfd",6]],["result",6]]],[11,"set","","",186,[[["usize",15],["rawfd",6]],["result",6]]],[11,"set","","",187,[[["usize",15],["rawfd",6]],["result",6]]],[11,"set","","",188,[[["usize",15],["rawfd",6]],["result",6]]],[11,"set","","",189,[[["usize",15],["rawfd",6]],["result",6]]],[11,"set","","",192,[[["osstring",3],["rawfd",6]],["result",6]]],[11,"set","","",194,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",195,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",196,[[["u32",15],["rawfd",6]],["result",6]]],[11,"set","","",197,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",198,[[["osstring",3],["rawfd",6]],["result",6]]],[11,"set","","",199,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",200,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",201,[[["c_int",6],["rawfd",6]],["result",6]]],[11,"set","","",202,[[["bool",15],["rawfd",6]],["result",6]]],[11,"set","","",203,[[["usize",15],["rawfd",6]],["result",6]]],[11,"set","","",204,[[["rawfd",6]],["result",6]]],[11,"seconds","nix::sys::time","",122,[[["i64",15]],["timespec",3]]],[11,"milliseconds","","",122,[[["i64",15]],["timespec",3]]],[11,"microseconds","","Makes a new <code>TimeSpec</code> with given number of microseconds.",122,[[["i64",15]],["timespec",3]]],[11,"nanoseconds","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.",122,[[["i64",15]],["timespec",3]]],[11,"num_seconds","","",122,[[],["i64",15]]],[11,"num_milliseconds","","",122,[[],["i64",15]]],[11,"num_microseconds","","",122,[[],["i64",15]]],[11,"num_nanoseconds","","",122,[[],["i64",15]]],[11,"seconds","","",123,[[["i64",15]],["timeval",3]]],[11,"milliseconds","","",123,[[["i64",15]],["timeval",3]]],[11,"microseconds","","Makes a new <code>TimeVal</code> with given number of microseconds.",123,[[["i64",15]],["timeval",3]]],[11,"nanoseconds","","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …",123,[[["i64",15]],["timeval",3]]],[11,"num_seconds","","",123,[[],["i64",15]]],[11,"num_milliseconds","","",123,[[],["i64",15]]],[11,"num_microseconds","","",123,[[],["i64",15]]],[11,"num_nanoseconds","","",123,[[],["i64",15]]],[11,"drop","nix::dir","",0,[[]]],[11,"drop","","",156,[[]]],[11,"drop","nix::ifaddrs","",158,[[]]],[11,"drop","nix::pty","",159,[[]]],[11,"drop","nix::sys::aio","If the <code>AioCb</code> has no remaining state in the kernel, just …",33,[[]]],[11,"drop","nix::sys::signalfd","",67,[[]]],[11,"drop","nix::sys::timerfd","",137,[[]]],[11,"as_mut","nix::sys::time","",122,[[],["timespec",3]]],[11,"as_mut","","",123,[[],["timeval",3]]],[11,"as_ref","nix::sys::signal","",56,[[],["str",15]]],[11,"as_ref","","",59,[[],["sigset_t",3]]],[11,"as_ref","nix::sys::time","",122,[[],["timespec",3]]],[11,"as_ref","","",123,[[],["timeval",3]]],[11,"from","nix::sys::aio","",34,[[["aiocb",3],["vec",3]],["liocb",3]]],[11,"from","nix::sys::signal","",164,[[["sigevent",3]]]],[11,"from","nix::sys::socket","",90,[[["ucred",3]]]],[11,"from","nix::sys::termios","",111,[[["termios",3]]]],[11,"from","nix::sys::time","",122,[[["timespec",3]]]],[11,"from","","",122,[[["duration",3]]]],[11,"from","","",123,[[["timeval",3]]]],[11,"from","nix::time","",138,[[["clockid_t",6]]]],[11,"from","nix","",207,[[["pid",3]]]],[11,"from","nix::unistd","",152,[[["passwd",3]],["user",3]]],[11,"from","","",153,[[["group",3]],["group",3]]],[11,"from","nix","",154,[[["errno",4]],["error",4]]],[11,"from","","",154,[[["fromutf8error",3]],["error",4]]],[11,"into","nix::sys::socket","",90,[[],["ucred",3]]],[11,"into","nix::time","",138,[[],["clockid_t",6]]],[11,"next_back","nix::sys::select","",163,[[],[["option",4],["rawfd",6]]]],[11,"extend","nix::fcntl","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","nix::kmod","",15,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"extend","nix::mount","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","nix::mqueue","",19,[[["intoiterator",8]]]],[11,"extend","","",20,[[["intoiterator",8]]]],[11,"extend","nix::net::if_","",22,[[["intoiterator",8]]]],[11,"extend","nix::poll","",24,[[["intoiterator",8]]]],[11,"extend","nix::sched","",160,[[["intoiterator",8]]]],[11,"extend","nix::sys::epoll","",35,[[["intoiterator",8]]]],[11,"extend","","",37,[[["intoiterator",8]]]],[11,"extend","nix::sys::eventfd","",39,[[["intoiterator",8]]]],[11,"extend","nix::sys::memfd","",40,[[["intoiterator",8]]]],[11,"extend","nix::sys::mman","",41,[[["intoiterator",8]]]],[11,"extend","","",42,[[["intoiterator",8]]]],[11,"extend","","",43,[[["intoiterator",8]]]],[11,"extend","","",45,[[["intoiterator",8]]]],[11,"extend","","",46,[[["intoiterator",8]]]],[11,"extend","nix::sys::personality","",47,[[["intoiterator",8]]]],[11,"extend","nix::sys::ptrace","",162,[[["intoiterator",8]]]],[11,"extend","nix::sys::quota","",52,[[["intoiterator",8]]]],[11,"extend","nix::sys::signal","",57,[[["intoiterator",8]]]],[11,"extend","nix::sys::signalfd","",66,[[["intoiterator",8]]]],[11,"extend","nix::sys::socket","",88,[[["intoiterator",8]]]],[11,"extend","","",89,[[["intoiterator",8]]]],[11,"extend","nix::sys::stat","",102,[[["intoiterator",8]]]],[11,"extend","","",103,[[["intoiterator",8]]]],[11,"extend","nix::sys::statvfs","",108,[[["intoiterator",8]]]],[11,"extend","nix::sys::termios","",117,[[["intoiterator",8]]]],[11,"extend","","",118,[[["intoiterator",8]]]],[11,"extend","","",119,[[["intoiterator",8]]]],[11,"extend","","",120,[[["intoiterator",8]]]],[11,"extend","nix::sys::wait","",127,[[["intoiterator",8]]]],[11,"extend","nix::sys::inotify","",129,[[["intoiterator",8]]]],[11,"extend","","",130,[[["intoiterator",8]]]],[11,"extend","nix::sys::timerfd","",134,[[["intoiterator",8]]]],[11,"extend","","",135,[[["intoiterator",8]]]],[11,"extend","nix::unistd","",151,[[["intoiterator",8]]]],[11,"into_iter","nix::dir","Creates a owning iterator, that is, one that takes …",0,[[]]],[11,"next","","",156,[[],["option",4]]],[11,"next","","",157,[[],["option",4]]],[11,"next","nix::ifaddrs","",158,[[],["option",4]]],[11,"next","nix::sys::select","",163,[[],[["option",4],["rawfd",6]]]],[11,"size_hint","","",163,[[]]],[11,"next","nix::sys::signal","",165,[[],[["option",4],["signal",4]]]],[11,"next","nix::sys::signalfd","",67,[[],["option",4]]],[11,"next","nix::sys::socket","",205,[[],[["controlmessageowned",4],["option",4]]]],[11,"clone","nix::dir","",2,[[],["entry",3]]],[11,"clone","","",1,[[],["type",4]]],[11,"clone","nix::errno","",3,[[],["errno",4]]],[11,"clone","nix::fcntl","",6,[[],["atflags",3]]],[11,"clone","","",7,[[],["oflag",3]]],[11,"clone","","",8,[[],["sealflag",3]]],[11,"clone","","",9,[[],["fdflag",3]]],[11,"clone","","",11,[[],["flockarg",4]]],[11,"clone","","",12,[[],["splicefflags",3]]],[11,"clone","","",13,[[],["fallocateflags",3]]],[11,"clone","","",5,[[],["posixfadviseadvice",4]]],[11,"clone","nix::ifaddrs","",14,[[],["interfaceaddress",3]]],[11,"clone","nix::kmod","",15,[[],["moduleinitflags",3]]],[11,"clone","","",16,[[],["deletemoduleflags",3]]],[11,"clone","nix::mount","",17,[[],["msflags",3]]],[11,"clone","","",18,[[],["mntflags",3]]],[11,"clone","nix::mqueue","",19,[[],["mq_oflag",3]]],[11,"clone","","",20,[[],["fdflag",3]]],[11,"clone","","",21,[[],["mqattr",3]]],[11,"clone","nix::net::if_","",22,[[],["interfaceflags",3]]],[11,"clone","nix::poll","",23,[[],["pollfd",3]]],[11,"clone","","",24,[[],["pollflags",3]]],[11,"clone","nix::pty","",26,[[],["openptyresult",3]]],[11,"clone","","",27,[[],["forkptyresult",3]]],[11,"clone","nix::sched","",160,[[],["cloneflags",3]]],[11,"clone","","",161,[[],["cpuset",3]]],[11,"clone","nix::sys::aio","",28,[[],["aiofsyncmode",4]]],[11,"clone","","",29,[[],["lioopcode",4]]],[11,"clone","","",30,[[],["liomode",4]]],[11,"clone","","",31,[[],["aiocancelstat",4]]],[11,"clone","nix::sys::epoll","",35,[[],["epollflags",3]]],[11,"clone","","",36,[[],["epollop",4]]],[11,"clone","","",37,[[],["epollcreateflags",3]]],[11,"clone","","",38,[[],["epollevent",3]]],[11,"clone","nix::sys::eventfd","",39,[[],["efdflags",3]]],[11,"clone","nix::sys::memfd","",40,[[],["memfdcreateflag",3]]],[11,"clone","nix::sys::mman","",41,[[],["protflags",3]]],[11,"clone","","",42,[[],["mapflags",3]]],[11,"clone","","",43,[[],["mremapflags",3]]],[11,"clone","","",44,[[],["mmapadvise",4]]],[11,"clone","","",45,[[],["msflags",3]]],[11,"clone","","",46,[[],["mlockallflags",3]]],[11,"clone","nix::sys::personality","",47,[[],["persona",3]]],[11,"clone","nix::sys::ptrace","",48,[[],["request",4]]],[11,"clone","","",49,[[],["event",4]]],[11,"clone","","",162,[[],["options",3]]],[11,"clone","nix::sys::quota","",50,[[],["quotatype",4]]],[11,"clone","","",51,[[],["quotafmt",4]]],[11,"clone","","",52,[[],["quotavalidflags",3]]],[11,"clone","","",53,[[],["dqblk",3]]],[11,"clone","nix::sys::reboot","",54,[[],["rebootmode",4]]],[11,"clone","nix::sys::select","",55,[[],["fdset",3]]],[11,"clone","nix::sys::signal","",56,[[],["signal",4]]],[11,"clone","","",165,[[],["signaliterator",3]]],[11,"clone","","",57,[[],["saflags",3]]],[11,"clone","","",58,[[],["sigmaskhow",4]]],[11,"clone","","",59,[[],["sigset",3]]],[11,"clone","","",60,[[],["sighandler",4]]],[11,"clone","","",61,[[],["sigaction",3]]],[11,"clone","","",62,[[],["sigevnotify",4]]],[11,"clone","","",164,[[],["sigevent",3]]],[11,"clone","nix::sys::signalfd","",66,[[],["sfdflags",3]]],[11,"clone","nix::sys::socket","",68,[[],["addressfamily",4]]],[11,"clone","","",70,[[],["inetaddr",4]]],[11,"clone","","",72,[[],["ipaddr",4]]],[11,"clone","","",73,[[],["ipv4addr",3]]],[11,"clone","","",74,[[],["ipv6addr",3]]],[11,"clone","","",71,[[],["unixaddr",3]]],[11,"clone","","",69,[[],["sockaddr",4]]],[11,"clone","","",76,[[],["netlinkaddr",3]]],[11,"clone","","",77,[[],["algaddr",3]]],[11,"clone","","",75,[[],["linkaddr",3]]],[11,"clone","","",78,[[],["vsockaddr",3]]],[11,"clone","nix::sys::socket::sockopt","",166,[[],["reuseaddr",3]]],[11,"clone","","",167,[[],["reuseport",3]]],[11,"clone","","",168,[[],["tcpnodelay",3]]],[11,"clone","","",169,[[],["linger",3]]],[11,"clone","","",170,[[],["ipaddmembership",3]]],[11,"clone","","",171,[[],["ipdropmembership",3]]],[11,"clone","","",172,[[],["ipv6addmembership",3]]],[11,"clone","","",173,[[],["ipv6dropmembership",3]]],[11,"clone","","",174,[[],["ipmulticastttl",3]]],[11,"clone","","",175,[[],["ipmulticastloop",3]]],[11,"clone","","",176,[[],["receivetimeout",3]]],[11,"clone","","",177,[[],["sendtimeout",3]]],[11,"clone","","",178,[[],["broadcast",3]]],[11,"clone","","",179,[[],["oobinline",3]]],[11,"clone","","",180,[[],["socketerror",3]]],[11,"clone","","",181,[[],["keepalive",3]]],[11,"clone","","",182,[[],["peercredentials",3]]],[11,"clone","","",183,[[],["tcpkeepidle",3]]],[11,"clone","","",184,[[],["tcpkeepcount",3]]],[11,"clone","","",185,[[],["tcpkeepinterval",3]]],[11,"clone","","",186,[[],["rcvbuf",3]]],[11,"clone","","",187,[[],["sndbuf",3]]],[11,"clone","","",188,[[],["rcvbufforce",3]]],[11,"clone","","",189,[[],["sndbufforce",3]]],[11,"clone","","",190,[[],["socktype",3]]],[11,"clone","","",191,[[],["acceptconn",3]]],[11,"clone","","",192,[[],["bindtodevice",3]]],[11,"clone","","",193,[[],["originaldst",3]]],[11,"clone","","",194,[[],["receivetimestamp",3]]],[11,"clone","","",195,[[],["iptransparent",3]]],[11,"clone","","",196,[[],["mark",3]]],[11,"clone","","",197,[[],["passcred",3]]],[11,"clone","","",198,[[],["tcpcongestion",3]]],[11,"clone","","",199,[[],["ipv4packetinfo",3]]],[11,"clone","","",200,[[],["ipv6recvpacketinfo",3]]],[11,"clone","","",201,[[],["udpgsosegment",3]]],[11,"clone","","",202,[[],["udpgrosegment",3]]],[11,"clone","","",203,[[],["algsetaeadauthsize",3]]],[11,"clone","","",204,[[],["algsetkey",3]]],[11,"clone","nix::sys::socket","",86,[[],["socktype",4]]],[11,"clone","","",87,[[],["sockprotocol",4]]],[11,"clone","","",88,[[],["sockflag",3]]],[11,"clone","","",89,[[],["msgflags",3]]],[11,"clone","","",90,[[],["unixcredentials",3]]],[11,"clone","","",91,[[],["ipmembershiprequest",3]]],[11,"clone","","",92,[[],["ipv6membershiprequest",3]]],[11,"clone","","",93,[[],["recvmsg",3]]],[11,"clone","","",205,[[],["cmsgiterator",3]]],[11,"clone","","",94,[[],["controlmessageowned",4]]],[11,"clone","","",95,[[],["controlmessage",4]]],[11,"clone","","",100,[[],["shutdown",4]]],[11,"clone","nix::sys::stat","",102,[[],["sflag",3]]],[11,"clone","","",103,[[],["mode",3]]],[11,"clone","","",104,[[],["fchmodatflags",4]]],[11,"clone","","",105,[[],["utimensatflags",4]]],[11,"clone","nix::sys::statfs","",107,[[],["statfs",3]]],[11,"clone","","",106,[[],["fstype",3]]],[11,"clone","nix::sys::statvfs","",108,[[],["fsflags",3]]],[11,"clone","","",109,[[],["statvfs",3]]],[11,"clone","nix::sys::sysinfo","",110,[[],["sysinfo",3]]],[11,"clone","nix::sys::termios","",111,[[],["termios",3]]],[11,"clone","","",112,[[],["baudrate",4]]],[11,"clone","","",113,[[],["setarg",4]]],[11,"clone","","",114,[[],["flusharg",4]]],[11,"clone","","",115,[[],["flowarg",4]]],[11,"clone","","",116,[[],["specialcharacterindices",4]]],[11,"clone","","",117,[[],["inputflags",3]]],[11,"clone","","",118,[[],["outputflags",3]]],[11,"clone","","",119,[[],["controlflags",3]]],[11,"clone","","",120,[[],["localflags",3]]],[11,"clone","nix::sys::time","",122,[[],["timespec",3]]],[11,"clone","","",123,[[],["timeval",3]]],[11,"clone","nix::sys::uio","",124,[[],["remoteiovec",3]]],[11,"clone","","",125,[[],["iovec",3]]],[11,"clone","nix::sys::utsname","",126,[[],["utsname",3]]],[11,"clone","nix::sys::wait","",127,[[],["waitpidflag",3]]],[11,"clone","","",128,[[],["waitstatus",4]]],[11,"clone","nix::sys::inotify","",129,[[],["addwatchflags",3]]],[11,"clone","","",130,[[],["initflags",3]]],[11,"clone","","",132,[[],["inotify",3]]],[11,"clone","","",206,[[],["watchdescriptor",3]]],[11,"clone","nix::sys::timerfd","",133,[[],["clockid",4]]],[11,"clone","","",134,[[],["timerflags",3]]],[11,"clone","","",135,[[],["timersettimeflags",3]]],[11,"clone","","",136,[[],["expiration",4]]],[11,"clone","nix::time","",138,[[],["clockid",3]]],[11,"clone","nix::ucontext","",139,[[],["ucontext",3]]],[11,"clone","nix::unistd","",140,[[],["uid",3]]],[11,"clone","","",141,[[],["gid",3]]],[11,"clone","","",142,[[],["pid",3]]],[11,"clone","","",143,[[],["forkresult",4]]],[11,"clone","","",145,[[],["fchownatflags",4]]],[11,"clone","","",146,[[],["whence",4]]],[11,"clone","","",147,[[],["linkatflags",4]]],[11,"clone","","",148,[[],["unlinkatflags",4]]],[11,"clone","","",149,[[],["pathconfvar",4]]],[11,"clone","","",150,[[],["sysconfvar",4]]],[11,"clone","","",151,[[],["accessflags",3]]],[11,"clone","","",152,[[],["user",3]]],[11,"clone","","",153,[[],["group",3]]],[11,"clone","nix","",154,[[],["error",4]]],[11,"default","nix::sched","",161,[[]]],[11,"default","nix::sys::quota","",52,[[],["quotavalidflags",3]]],[11,"default","","",53,[[],["dqblk",3]]],[11,"default","nix::sys::select","",55,[[]]],[11,"default","nix::sys::socket::sockopt","",204,[[]]],[11,"default","nix::sys::socket","",90,[[]]],[11,"default","nix::sys::statvfs","",108,[[],["fsflags",3]]],[11,"cmp","nix::fcntl","",6,[[["atflags",3]],["ordering",4]]],[11,"cmp","","",7,[[["oflag",3]],["ordering",4]]],[11,"cmp","","",8,[[["sealflag",3]],["ordering",4]]],[11,"cmp","","",9,[[["fdflag",3]],["ordering",4]]],[11,"cmp","","",12,[[["splicefflags",3]],["ordering",4]]],[11,"cmp","","",13,[[["fallocateflags",3]],["ordering",4]]],[11,"cmp","","",5,[[["posixfadviseadvice",4]],["ordering",4]]],[11,"cmp","nix::kmod","",15,[[["moduleinitflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["deletemoduleflags",3]],["ordering",4]]],[11,"cmp","nix::mount","",17,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",18,[[["mntflags",3]],["ordering",4]]],[11,"cmp","nix::mqueue","",19,[[["mq_oflag",3]],["ordering",4]]],[11,"cmp","","",20,[[["fdflag",3]],["ordering",4]]],[11,"cmp","nix::net::if_","",22,[[["interfaceflags",3]],["ordering",4]]],[11,"cmp","nix::poll","",24,[[["pollflags",3]],["ordering",4]]],[11,"cmp","nix::sched","",160,[[["cloneflags",3]],["ordering",4]]],[11,"cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],["ordering",4]]],[11,"cmp","","",29,[[["lioopcode",4]],["ordering",4]]],[11,"cmp","","",30,[[["liomode",4]],["ordering",4]]],[11,"cmp","nix::sys::epoll","",35,[[["epollflags",3]],["ordering",4]]],[11,"cmp","","",37,[[["epollcreateflags",3]],["ordering",4]]],[11,"cmp","nix::sys::eventfd","",39,[[["efdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],["ordering",4]]],[11,"cmp","nix::sys::mman","",41,[[["protflags",3]],["ordering",4]]],[11,"cmp","","",42,[[["mapflags",3]],["ordering",4]]],[11,"cmp","","",43,[[["mremapflags",3]],["ordering",4]]],[11,"cmp","","",44,[[["mmapadvise",4]],["ordering",4]]],[11,"cmp","","",45,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",46,[[["mlockallflags",3]],["ordering",4]]],[11,"cmp","nix::sys::personality","",47,[[["persona",3]],["ordering",4]]],[11,"cmp","nix::sys::ptrace","",48,[[["request",4]],["ordering",4]]],[11,"cmp","","",49,[[["event",4]],["ordering",4]]],[11,"cmp","","",162,[[["options",3]],["ordering",4]]],[11,"cmp","nix::sys::quota","",50,[[["quotatype",4]],["ordering",4]]],[11,"cmp","","",51,[[["quotafmt",4]],["ordering",4]]],[11,"cmp","","",52,[[["quotavalidflags",3]],["ordering",4]]],[11,"cmp","nix::sys::reboot","",54,[[["rebootmode",4]],["ordering",4]]],[11,"cmp","nix::sys::signal","",56,[[["signal",4]],["ordering",4]]],[11,"cmp","","",57,[[["saflags",3]],["ordering",4]]],[11,"cmp","","",58,[[["sigmaskhow",4]],["ordering",4]]],[11,"cmp","nix::sys::signalfd","",66,[[["sfdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::socket","",88,[[["sockflag",3]],["ordering",4]]],[11,"cmp","","",89,[[["msgflags",3]],["ordering",4]]],[11,"cmp","nix::sys::stat","",102,[[["sflag",3]],["ordering",4]]],[11,"cmp","","",103,[[["mode",3]],["ordering",4]]],[11,"cmp","nix::sys::statvfs","",108,[[["fsflags",3]],["ordering",4]]],[11,"cmp","nix::sys::termios","",112,[[["baudrate",4]],["ordering",4]]],[11,"cmp","","",113,[[["setarg",4]],["ordering",4]]],[11,"cmp","","",114,[[["flusharg",4]],["ordering",4]]],[11,"cmp","","",115,[[["flowarg",4]],["ordering",4]]],[11,"cmp","","",116,[[["specialcharacterindices",4]],["ordering",4]]],[11,"cmp","","",117,[[["inputflags",3]],["ordering",4]]],[11,"cmp","","",118,[[["outputflags",3]],["ordering",4]]],[11,"cmp","","",119,[[["controlflags",3]],["ordering",4]]],[11,"cmp","","",120,[[["localflags",3]],["ordering",4]]],[11,"cmp","nix::sys::time","",122,[[["timespec",3]],["ordering",4]]],[11,"cmp","","",123,[[["timeval",3]],["ordering",4]]],[11,"cmp","nix::sys::wait","",127,[[["waitpidflag",3]],["ordering",4]]],[11,"cmp","nix::sys::inotify","",129,[[["addwatchflags",3]],["ordering",4]]],[11,"cmp","","",130,[[["initflags",3]],["ordering",4]]],[11,"cmp","","",206,[[["watchdescriptor",3]],["ordering",4]]],[11,"cmp","nix::sys::timerfd","",133,[[["clockid",4]],["ordering",4]]],[11,"cmp","","",134,[[["timerflags",3]],["ordering",4]]],[11,"cmp","","",135,[[["timersettimeflags",3]],["ordering",4]]],[11,"cmp","nix::time","",138,[[["clockid",3]],["ordering",4]]],[11,"cmp","nix::unistd","",142,[[["pid",3]],["ordering",4]]],[11,"cmp","","",151,[[["accessflags",3]],["ordering",4]]],[11,"eq","nix::dir","",0,[[["dir",3]],["bool",15]]],[11,"ne","","",0,[[["dir",3]],["bool",15]]],[11,"eq","","",156,[[["iter",3]],["bool",15]]],[11,"ne","","",156,[[["iter",3]],["bool",15]]],[11,"eq","","",157,[[["owningiter",3]],["bool",15]]],[11,"ne","","",157,[[["owningiter",3]],["bool",15]]],[11,"eq","","",2,[[["entry",3]],["bool",15]]],[11,"ne","","",2,[[["entry",3]],["bool",15]]],[11,"eq","","",1,[[["type",4]],["bool",15]]],[11,"eq","nix::errno","",3,[[["errno",4]],["bool",15]]],[11,"eq","nix::fcntl","",6,[[["atflags",3]],["bool",15]]],[11,"ne","","",6,[[["atflags",3]],["bool",15]]],[11,"eq","","",7,[[["oflag",3]],["bool",15]]],[11,"ne","","",7,[[["oflag",3]],["bool",15]]],[11,"eq","","",8,[[["sealflag",3]],["bool",15]]],[11,"ne","","",8,[[["sealflag",3]],["bool",15]]],[11,"eq","","",9,[[["fdflag",3]],["bool",15]]],[11,"ne","","",9,[[["fdflag",3]],["bool",15]]],[11,"eq","","",10,[[["fcntlarg",4]],["bool",15]]],[11,"ne","","",10,[[["fcntlarg",4]],["bool",15]]],[11,"eq","","",11,[[["flockarg",4]],["bool",15]]],[11,"eq","","",12,[[["splicefflags",3]],["bool",15]]],[11,"ne","","",12,[[["splicefflags",3]],["bool",15]]],[11,"eq","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"ne","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"eq","","",5,[[["posixfadviseadvice",4]],["bool",15]]],[11,"eq","nix::ifaddrs","",14,[[["interfaceaddress",3]],["bool",15]]],[11,"ne","","",14,[[["interfaceaddress",3]],["bool",15]]],[11,"eq","","",158,[[["interfaceaddressiterator",3]],["bool",15]]],[11,"ne","","",158,[[["interfaceaddressiterator",3]],["bool",15]]],[11,"eq","nix::kmod","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"ne","","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"eq","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"ne","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"eq","nix::mount","",17,[[["msflags",3]],["bool",15]]],[11,"ne","","",17,[[["msflags",3]],["bool",15]]],[11,"eq","","",18,[[["mntflags",3]],["bool",15]]],[11,"ne","","",18,[[["mntflags",3]],["bool",15]]],[11,"eq","nix::mqueue","",19,[[["mq_oflag",3]],["bool",15]]],[11,"ne","","",19,[[["mq_oflag",3]],["bool",15]]],[11,"eq","","",20,[[["fdflag",3]],["bool",15]]],[11,"ne","","",20,[[["fdflag",3]],["bool",15]]],[11,"eq","","",21,[[["mqattr",3]],["bool",15]]],[11,"ne","","",21,[[["mqattr",3]],["bool",15]]],[11,"eq","nix::net::if_","",22,[[["interfaceflags",3]],["bool",15]]],[11,"ne","","",22,[[["interfaceflags",3]],["bool",15]]],[11,"eq","nix::poll","",23,[[["pollfd",3]],["bool",15]]],[11,"ne","","",23,[[["pollfd",3]],["bool",15]]],[11,"eq","","",24,[[["pollflags",3]],["bool",15]]],[11,"ne","","",24,[[["pollflags",3]],["bool",15]]],[11,"eq","nix::pty","",26,[[["openptyresult",3]],["bool",15]]],[11,"ne","","",26,[[["openptyresult",3]],["bool",15]]],[11,"eq","","",159,[[["ptymaster",3]],["bool",15]]],[11,"ne","","",159,[[["ptymaster",3]],["bool",15]]],[11,"eq","nix::sched","",160,[[["cloneflags",3]],["bool",15]]],[11,"ne","","",160,[[["cloneflags",3]],["bool",15]]],[11,"eq","","",161,[[["cpuset",3]],["bool",15]]],[11,"ne","","",161,[[["cpuset",3]],["bool",15]]],[11,"eq","nix::sys::aio","",28,[[["aiofsyncmode",4]],["bool",15]]],[11,"eq","","",29,[[["lioopcode",4]],["bool",15]]],[11,"eq","","",30,[[["liomode",4]],["bool",15]]],[11,"eq","","",31,[[["aiocancelstat",4]],["bool",15]]],[11,"eq","nix::sys::epoll","",35,[[["epollflags",3]],["bool",15]]],[11,"ne","","",35,[[["epollflags",3]],["bool",15]]],[11,"eq","","",36,[[["epollop",4]],["bool",15]]],[11,"eq","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"ne","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"eq","","",38,[[["epollevent",3]],["bool",15]]],[11,"ne","","",38,[[["epollevent",3]],["bool",15]]],[11,"eq","nix::sys::eventfd","",39,[[["efdflags",3]],["bool",15]]],[11,"ne","","",39,[[["efdflags",3]],["bool",15]]],[11,"eq","nix::sys::memfd","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"ne","","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"eq","nix::sys::mman","",41,[[["protflags",3]],["bool",15]]],[11,"ne","","",41,[[["protflags",3]],["bool",15]]],[11,"eq","","",42,[[["mapflags",3]],["bool",15]]],[11,"ne","","",42,[[["mapflags",3]],["bool",15]]],[11,"eq","","",43,[[["mremapflags",3]],["bool",15]]],[11,"ne","","",43,[[["mremapflags",3]],["bool",15]]],[11,"eq","","",44,[[["mmapadvise",4]],["bool",15]]],[11,"eq","","",45,[[["msflags",3]],["bool",15]]],[11,"ne","","",45,[[["msflags",3]],["bool",15]]],[11,"eq","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"ne","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"eq","nix::sys::personality","",47,[[["persona",3]],["bool",15]]],[11,"ne","","",47,[[["persona",3]],["bool",15]]],[11,"eq","nix::sys::ptrace","",48,[[["request",4]],["bool",15]]],[11,"eq","","",49,[[["event",4]],["bool",15]]],[11,"eq","","",162,[[["options",3]],["bool",15]]],[11,"ne","","",162,[[["options",3]],["bool",15]]],[11,"eq","nix::sys::quota","",50,[[["quotatype",4]],["bool",15]]],[11,"eq","","",51,[[["quotafmt",4]],["bool",15]]],[11,"eq","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"ne","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"eq","","",53,[[["dqblk",3]],["bool",15]]],[11,"ne","","",53,[[["dqblk",3]],["bool",15]]],[11,"eq","nix::sys::reboot","",54,[[["rebootmode",4]],["bool",15]]],[11,"eq","nix::sys::select","",55,[[["fdset",3]],["bool",15]]],[11,"ne","","",55,[[["fdset",3]],["bool",15]]],[11,"eq","nix::sys::signal","",56,[[["signal",4]],["bool",15]]],[11,"eq","","",165,[[["signaliterator",3]],["bool",15]]],[11,"ne","","",165,[[["signaliterator",3]],["bool",15]]],[11,"eq","","",57,[[["saflags",3]],["bool",15]]],[11,"ne","","",57,[[["saflags",3]],["bool",15]]],[11,"eq","","",58,[[["sigmaskhow",4]],["bool",15]]],[11,"eq","","",59,[[["sigset",3]],["bool",15]]],[11,"ne","","",59,[[["sigset",3]],["bool",15]]],[11,"eq","","",60,[[["sighandler",4]],["bool",15]]],[11,"ne","","",60,[[["sighandler",4]],["bool",15]]],[11,"eq","","",61,[[["sigaction",3]],["bool",15]]],[11,"ne","","",61,[[["sigaction",3]],["bool",15]]],[11,"eq","","",62,[[["sigevnotify",4]],["bool",15]]],[11,"ne","","",62,[[["sigevnotify",4]],["bool",15]]],[11,"eq","","",164,[[["sigevent",3]],["bool",15]]],[11,"ne","","",164,[[["sigevent",3]],["bool",15]]],[11,"eq","nix::sys::signalfd","",66,[[["sfdflags",3]],["bool",15]]],[11,"ne","","",66,[[["sfdflags",3]],["bool",15]]],[11,"eq","","",67,[[["signalfd",3]],["bool",15]]],[11,"ne","","",67,[[["signalfd",3]],["bool",15]]],[11,"eq","nix::sys::socket","",68,[[["addressfamily",4]],["bool",15]]],[11,"eq","","",70,[[["inetaddr",4]],["bool",15]]],[11,"ne","","",70,[[["inetaddr",4]],["bool",15]]],[11,"eq","","",72,[[["ipaddr",4]],["bool",15]]],[11,"ne","","",72,[[["ipaddr",4]],["bool",15]]],[11,"eq","","",73,[[["ipv4addr",3]],["bool",15]]],[11,"ne","","",73,[[["ipv4addr",3]],["bool",15]]],[11,"eq","","",74,[[["ipv6addr",3]],["bool",15]]],[11,"ne","","",74,[[["ipv6addr",3]],["bool",15]]],[11,"eq","","",71,[[["unixaddr",3]],["bool",15]]],[11,"eq","","",69,[[["sockaddr",4]],["bool",15]]],[11,"ne","","",69,[[["sockaddr",4]],["bool",15]]],[11,"eq","","",76,[[["netlinkaddr",3]],["bool",15]]],[11,"ne","","",76,[[["netlinkaddr",3]],["bool",15]]],[11,"eq","","",77,[[],["bool",15]]],[11,"eq","","",75,[[["linkaddr",3]],["bool",15]]],[11,"ne","","",75,[[["linkaddr",3]],["bool",15]]],[11,"eq","","",78,[[],["bool",15]]],[11,"eq","nix::sys::socket::sockopt","",166,[[["reuseaddr",3]],["bool",15]]],[11,"eq","","",167,[[["reuseport",3]],["bool",15]]],[11,"eq","","",168,[[["tcpnodelay",3]],["bool",15]]],[11,"eq","","",169,[[["linger",3]],["bool",15]]],[11,"eq","","",170,[[["ipaddmembership",3]],["bool",15]]],[11,"eq","","",171,[[["ipdropmembership",3]],["bool",15]]],[11,"eq","","",172,[[["ipv6addmembership",3]],["bool",15]]],[11,"eq","","",173,[[["ipv6dropmembership",3]],["bool",15]]],[11,"eq","","",174,[[["ipmulticastttl",3]],["bool",15]]],[11,"eq","","",175,[[["ipmulticastloop",3]],["bool",15]]],[11,"eq","","",176,[[["receivetimeout",3]],["bool",15]]],[11,"eq","","",177,[[["sendtimeout",3]],["bool",15]]],[11,"eq","","",178,[[["broadcast",3]],["bool",15]]],[11,"eq","","",179,[[["oobinline",3]],["bool",15]]],[11,"eq","","",180,[[["socketerror",3]],["bool",15]]],[11,"eq","","",181,[[["keepalive",3]],["bool",15]]],[11,"eq","","",182,[[["peercredentials",3]],["bool",15]]],[11,"eq","","",183,[[["tcpkeepidle",3]],["bool",15]]],[11,"eq","","",184,[[["tcpkeepcount",3]],["bool",15]]],[11,"eq","","",185,[[["tcpkeepinterval",3]],["bool",15]]],[11,"eq","","",186,[[["rcvbuf",3]],["bool",15]]],[11,"eq","","",187,[[["sndbuf",3]],["bool",15]]],[11,"eq","","",188,[[["rcvbufforce",3]],["bool",15]]],[11,"eq","","",189,[[["sndbufforce",3]],["bool",15]]],[11,"eq","","",190,[[["socktype",3]],["bool",15]]],[11,"eq","","",191,[[["acceptconn",3]],["bool",15]]],[11,"eq","","",192,[[["bindtodevice",3]],["bool",15]]],[11,"eq","","",193,[[["originaldst",3]],["bool",15]]],[11,"eq","","",194,[[["receivetimestamp",3]],["bool",15]]],[11,"eq","","",195,[[["iptransparent",3]],["bool",15]]],[11,"eq","","",196,[[["mark",3]],["bool",15]]],[11,"eq","","",197,[[["passcred",3]],["bool",15]]],[11,"eq","","",198,[[["tcpcongestion",3]],["bool",15]]],[11,"eq","","",199,[[["ipv4packetinfo",3]],["bool",15]]],[11,"eq","","",200,[[["ipv6recvpacketinfo",3]],["bool",15]]],[11,"eq","","",201,[[["udpgsosegment",3]],["bool",15]]],[11,"eq","","",202,[[["udpgrosegment",3]],["bool",15]]],[11,"eq","nix::sys::socket","",86,[[["socktype",4]],["bool",15]]],[11,"eq","","",87,[[["sockprotocol",4]],["bool",15]]],[11,"eq","","",88,[[["sockflag",3]],["bool",15]]],[11,"ne","","",88,[[["sockflag",3]],["bool",15]]],[11,"eq","","",89,[[["msgflags",3]],["bool",15]]],[11,"ne","","",89,[[["msgflags",3]],["bool",15]]],[11,"eq","","",90,[[["unixcredentials",3]],["bool",15]]],[11,"ne","","",90,[[["unixcredentials",3]],["bool",15]]],[11,"eq","","",91,[[["ipmembershiprequest",3]],["bool",15]]],[11,"ne","","",91,[[["ipmembershiprequest",3]],["bool",15]]],[11,"eq","","",92,[[["ipv6membershiprequest",3]],["bool",15]]],[11,"ne","","",92,[[["ipv6membershiprequest",3]],["bool",15]]],[11,"eq","","",93,[[["recvmsg",3]],["bool",15]]],[11,"ne","","",93,[[["recvmsg",3]],["bool",15]]],[11,"eq","","",205,[[["cmsgiterator",3]],["bool",15]]],[11,"ne","","",205,[[["cmsgiterator",3]],["bool",15]]],[11,"eq","","",94,[[["controlmessageowned",4]],["bool",15]]],[11,"ne","","",94,[[["controlmessageowned",4]],["bool",15]]],[11,"eq","","",95,[[["controlmessage",4]],["bool",15]]],[11,"ne","","",95,[[["controlmessage",4]],["bool",15]]],[11,"eq","","",100,[[["shutdown",4]],["bool",15]]],[11,"eq","nix::sys::stat","",102,[[["sflag",3]],["bool",15]]],[11,"ne","","",102,[[["sflag",3]],["bool",15]]],[11,"eq","","",103,[[["mode",3]],["bool",15]]],[11,"ne","","",103,[[["mode",3]],["bool",15]]],[11,"eq","nix::sys::statfs","",106,[[["fstype",3]],["bool",15]]],[11,"ne","","",106,[[["fstype",3]],["bool",15]]],[11,"eq","nix::sys::statvfs","",108,[[["fsflags",3]],["bool",15]]],[11,"ne","","",108,[[["fsflags",3]],["bool",15]]],[11,"eq","","",109,[[["statvfs",3]],["bool",15]]],[11,"ne","","",109,[[["statvfs",3]],["bool",15]]],[11,"eq","nix::sys::sysinfo","",110,[[["sysinfo",3]],["bool",15]]],[11,"ne","","",110,[[["sysinfo",3]],["bool",15]]],[11,"eq","nix::sys::termios","",111,[[["termios",3]],["bool",15]]],[11,"ne","","",111,[[["termios",3]],["bool",15]]],[11,"eq","","",112,[[["baudrate",4]],["bool",15]]],[11,"eq","","",113,[[["setarg",4]],["bool",15]]],[11,"eq","","",114,[[["flusharg",4]],["bool",15]]],[11,"eq","","",115,[[["flowarg",4]],["bool",15]]],[11,"eq","","",116,[[["specialcharacterindices",4]],["bool",15]]],[11,"eq","","",117,[[["inputflags",3]],["bool",15]]],[11,"ne","","",117,[[["inputflags",3]],["bool",15]]],[11,"eq","","",118,[[["outputflags",3]],["bool",15]]],[11,"ne","","",118,[[["outputflags",3]],["bool",15]]],[11,"eq","","",119,[[["controlflags",3]],["bool",15]]],[11,"ne","","",119,[[["controlflags",3]],["bool",15]]],[11,"eq","","",120,[[["localflags",3]],["bool",15]]],[11,"ne","","",120,[[["localflags",3]],["bool",15]]],[11,"eq","nix::sys::time","",122,[[["timespec",3]],["bool",15]]],[11,"ne","","",122,[[["timespec",3]],["bool",15]]],[11,"eq","","",123,[[["timeval",3]],["bool",15]]],[11,"ne","","",123,[[["timeval",3]],["bool",15]]],[11,"eq","nix::sys::uio","",124,[[["remoteiovec",3]],["bool",15]]],[11,"ne","","",124,[[["remoteiovec",3]],["bool",15]]],[11,"eq","","",125,[[["iovec",3]],["bool",15]]],[11,"ne","","",125,[[["iovec",3]],["bool",15]]],[11,"eq","nix::sys::utsname","",126,[[["utsname",3]],["bool",15]]],[11,"ne","","",126,[[["utsname",3]],["bool",15]]],[11,"eq","nix::sys::wait","",127,[[["waitpidflag",3]],["bool",15]]],[11,"ne","","",127,[[["waitpidflag",3]],["bool",15]]],[11,"eq","","",128,[[["waitstatus",4]],["bool",15]]],[11,"ne","","",128,[[["waitstatus",4]],["bool",15]]],[11,"eq","nix::sys::inotify","",129,[[["addwatchflags",3]],["bool",15]]],[11,"ne","","",129,[[["addwatchflags",3]],["bool",15]]],[11,"eq","","",130,[[["initflags",3]],["bool",15]]],[11,"ne","","",130,[[["initflags",3]],["bool",15]]],[11,"eq","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"ne","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"eq","nix::sys::timerfd","",133,[[["clockid",4]],["bool",15]]],[11,"eq","","",134,[[["timerflags",3]],["bool",15]]],[11,"ne","","",134,[[["timerflags",3]],["bool",15]]],[11,"eq","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"ne","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"eq","","",136,[[["expiration",4]],["bool",15]]],[11,"ne","","",136,[[["expiration",4]],["bool",15]]],[11,"eq","nix::time","",138,[[["clockid",3]],["bool",15]]],[11,"ne","","",138,[[["clockid",3]],["bool",15]]],[11,"eq","nix::ucontext","",139,[[["ucontext",3]],["bool",15]]],[11,"ne","","",139,[[["ucontext",3]],["bool",15]]],[11,"eq","nix::unistd","",140,[[["uid",3]],["bool",15]]],[11,"ne","","",140,[[["uid",3]],["bool",15]]],[11,"eq","","",141,[[["gid",3]],["bool",15]]],[11,"ne","","",141,[[["gid",3]],["bool",15]]],[11,"eq","","",142,[[["pid",3]],["bool",15]]],[11,"ne","","",142,[[["pid",3]],["bool",15]]],[11,"eq","","",149,[[["pathconfvar",4]],["bool",15]]],[11,"eq","","",150,[[["sysconfvar",4]],["bool",15]]],[11,"eq","","",151,[[["accessflags",3]],["bool",15]]],[11,"ne","","",151,[[["accessflags",3]],["bool",15]]],[11,"eq","","",152,[[["user",3]],["bool",15]]],[11,"ne","","",152,[[["user",3]],["bool",15]]],[11,"eq","","",153,[[["group",3]],["bool",15]]],[11,"ne","","",153,[[["group",3]],["bool",15]]],[11,"eq","nix","",154,[[["error",4]],["bool",15]]],[11,"ne","","",154,[[["error",4]],["bool",15]]],[11,"partial_cmp","nix::fcntl","",6,[[["atflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["atflags",3]],["bool",15]]],[11,"le","","",6,[[["atflags",3]],["bool",15]]],[11,"gt","","",6,[[["atflags",3]],["bool",15]]],[11,"ge","","",6,[[["atflags",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["oflag",3]],["bool",15]]],[11,"le","","",7,[[["oflag",3]],["bool",15]]],[11,"gt","","",7,[[["oflag",3]],["bool",15]]],[11,"ge","","",7,[[["oflag",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["sealflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["sealflag",3]],["bool",15]]],[11,"le","","",8,[[["sealflag",3]],["bool",15]]],[11,"gt","","",8,[[["sealflag",3]],["bool",15]]],[11,"ge","","",8,[[["sealflag",3]],["bool",15]]],[11,"partial_cmp","","",9,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["fdflag",3]],["bool",15]]],[11,"le","","",9,[[["fdflag",3]],["bool",15]]],[11,"gt","","",9,[[["fdflag",3]],["bool",15]]],[11,"ge","","",9,[[["fdflag",3]],["bool",15]]],[11,"partial_cmp","","",12,[[["splicefflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["splicefflags",3]],["bool",15]]],[11,"le","","",12,[[["splicefflags",3]],["bool",15]]],[11,"gt","","",12,[[["splicefflags",3]],["bool",15]]],[11,"ge","","",12,[[["splicefflags",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["fallocateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"le","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"gt","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"ge","","",13,[[["fallocateflags",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["posixfadviseadvice",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::kmod","",15,[[["moduleinitflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"le","","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"gt","","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"ge","","",15,[[["moduleinitflags",3]],["bool",15]]],[11,"partial_cmp","","",16,[[["deletemoduleflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"le","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"gt","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"ge","","",16,[[["deletemoduleflags",3]],["bool",15]]],[11,"partial_cmp","nix::mount","",17,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["msflags",3]],["bool",15]]],[11,"le","","",17,[[["msflags",3]],["bool",15]]],[11,"gt","","",17,[[["msflags",3]],["bool",15]]],[11,"ge","","",17,[[["msflags",3]],["bool",15]]],[11,"partial_cmp","","",18,[[["mntflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["mntflags",3]],["bool",15]]],[11,"le","","",18,[[["mntflags",3]],["bool",15]]],[11,"gt","","",18,[[["mntflags",3]],["bool",15]]],[11,"ge","","",18,[[["mntflags",3]],["bool",15]]],[11,"partial_cmp","nix::mqueue","",19,[[["mq_oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["mq_oflag",3]],["bool",15]]],[11,"le","","",19,[[["mq_oflag",3]],["bool",15]]],[11,"gt","","",19,[[["mq_oflag",3]],["bool",15]]],[11,"ge","","",19,[[["mq_oflag",3]],["bool",15]]],[11,"partial_cmp","","",20,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["fdflag",3]],["bool",15]]],[11,"le","","",20,[[["fdflag",3]],["bool",15]]],[11,"gt","","",20,[[["fdflag",3]],["bool",15]]],[11,"ge","","",20,[[["fdflag",3]],["bool",15]]],[11,"partial_cmp","nix::net::if_","",22,[[["interfaceflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["interfaceflags",3]],["bool",15]]],[11,"le","","",22,[[["interfaceflags",3]],["bool",15]]],[11,"gt","","",22,[[["interfaceflags",3]],["bool",15]]],[11,"ge","","",22,[[["interfaceflags",3]],["bool",15]]],[11,"partial_cmp","nix::poll","",24,[[["pollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["pollflags",3]],["bool",15]]],[11,"le","","",24,[[["pollflags",3]],["bool",15]]],[11,"gt","","",24,[[["pollflags",3]],["bool",15]]],[11,"ge","","",24,[[["pollflags",3]],["bool",15]]],[11,"partial_cmp","nix::sched","",160,[[["cloneflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",160,[[["cloneflags",3]],["bool",15]]],[11,"le","","",160,[[["cloneflags",3]],["bool",15]]],[11,"gt","","",160,[[["cloneflags",3]],["bool",15]]],[11,"ge","","",160,[[["cloneflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",29,[[["lioopcode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["liomode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::epoll","",35,[[["epollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["epollflags",3]],["bool",15]]],[11,"le","","",35,[[["epollflags",3]],["bool",15]]],[11,"gt","","",35,[[["epollflags",3]],["bool",15]]],[11,"ge","","",35,[[["epollflags",3]],["bool",15]]],[11,"partial_cmp","","",37,[[["epollcreateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"le","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"gt","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"ge","","",37,[[["epollcreateflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::eventfd","",39,[[["efdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["efdflags",3]],["bool",15]]],[11,"le","","",39,[[["efdflags",3]],["bool",15]]],[11,"gt","","",39,[[["efdflags",3]],["bool",15]]],[11,"ge","","",39,[[["efdflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"le","","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"gt","","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"ge","","",40,[[["memfdcreateflag",3]],["bool",15]]],[11,"partial_cmp","nix::sys::mman","",41,[[["protflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["protflags",3]],["bool",15]]],[11,"le","","",41,[[["protflags",3]],["bool",15]]],[11,"gt","","",41,[[["protflags",3]],["bool",15]]],[11,"ge","","",41,[[["protflags",3]],["bool",15]]],[11,"partial_cmp","","",42,[[["mapflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["mapflags",3]],["bool",15]]],[11,"le","","",42,[[["mapflags",3]],["bool",15]]],[11,"gt","","",42,[[["mapflags",3]],["bool",15]]],[11,"ge","","",42,[[["mapflags",3]],["bool",15]]],[11,"partial_cmp","","",43,[[["mremapflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["mremapflags",3]],["bool",15]]],[11,"le","","",43,[[["mremapflags",3]],["bool",15]]],[11,"gt","","",43,[[["mremapflags",3]],["bool",15]]],[11,"ge","","",43,[[["mremapflags",3]],["bool",15]]],[11,"partial_cmp","","",44,[[["mmapadvise",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",45,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["msflags",3]],["bool",15]]],[11,"le","","",45,[[["msflags",3]],["bool",15]]],[11,"gt","","",45,[[["msflags",3]],["bool",15]]],[11,"ge","","",45,[[["msflags",3]],["bool",15]]],[11,"partial_cmp","","",46,[[["mlockallflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"le","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"gt","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"ge","","",46,[[["mlockallflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::personality","",47,[[["persona",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["persona",3]],["bool",15]]],[11,"le","","",47,[[["persona",3]],["bool",15]]],[11,"gt","","",47,[[["persona",3]],["bool",15]]],[11,"ge","","",47,[[["persona",3]],["bool",15]]],[11,"partial_cmp","nix::sys::ptrace","",48,[[["request",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",49,[[["event",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",162,[[["options",3]],[["option",4],["ordering",4]]]],[11,"lt","","",162,[[["options",3]],["bool",15]]],[11,"le","","",162,[[["options",3]],["bool",15]]],[11,"gt","","",162,[[["options",3]],["bool",15]]],[11,"ge","","",162,[[["options",3]],["bool",15]]],[11,"partial_cmp","nix::sys::quota","",50,[[["quotatype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",51,[[["quotafmt",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",52,[[["quotavalidflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"le","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"gt","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"ge","","",52,[[["quotavalidflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::reboot","",54,[[["rebootmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signal","",56,[[["signal",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",57,[[["saflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",57,[[["saflags",3]],["bool",15]]],[11,"le","","",57,[[["saflags",3]],["bool",15]]],[11,"gt","","",57,[[["saflags",3]],["bool",15]]],[11,"ge","","",57,[[["saflags",3]],["bool",15]]],[11,"partial_cmp","","",58,[[["sigmaskhow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signalfd","",66,[[["sfdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",66,[[["sfdflags",3]],["bool",15]]],[11,"le","","",66,[[["sfdflags",3]],["bool",15]]],[11,"gt","","",66,[[["sfdflags",3]],["bool",15]]],[11,"ge","","",66,[[["sfdflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::socket","",88,[[["sockflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",88,[[["sockflag",3]],["bool",15]]],[11,"le","","",88,[[["sockflag",3]],["bool",15]]],[11,"gt","","",88,[[["sockflag",3]],["bool",15]]],[11,"ge","","",88,[[["sockflag",3]],["bool",15]]],[11,"partial_cmp","","",89,[[["msgflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",89,[[["msgflags",3]],["bool",15]]],[11,"le","","",89,[[["msgflags",3]],["bool",15]]],[11,"gt","","",89,[[["msgflags",3]],["bool",15]]],[11,"ge","","",89,[[["msgflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::stat","",102,[[["sflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["sflag",3]],["bool",15]]],[11,"le","","",102,[[["sflag",3]],["bool",15]]],[11,"gt","","",102,[[["sflag",3]],["bool",15]]],[11,"ge","","",102,[[["sflag",3]],["bool",15]]],[11,"partial_cmp","","",103,[[["mode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",103,[[["mode",3]],["bool",15]]],[11,"le","","",103,[[["mode",3]],["bool",15]]],[11,"gt","","",103,[[["mode",3]],["bool",15]]],[11,"ge","","",103,[[["mode",3]],["bool",15]]],[11,"partial_cmp","nix::sys::statvfs","",108,[[["fsflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",108,[[["fsflags",3]],["bool",15]]],[11,"le","","",108,[[["fsflags",3]],["bool",15]]],[11,"gt","","",108,[[["fsflags",3]],["bool",15]]],[11,"ge","","",108,[[["fsflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::termios","",112,[[["baudrate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",113,[[["setarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",114,[[["flusharg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",115,[[["flowarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",116,[[["specialcharacterindices",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",117,[[["inputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",117,[[["inputflags",3]],["bool",15]]],[11,"le","","",117,[[["inputflags",3]],["bool",15]]],[11,"gt","","",117,[[["inputflags",3]],["bool",15]]],[11,"ge","","",117,[[["inputflags",3]],["bool",15]]],[11,"partial_cmp","","",118,[[["outputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",118,[[["outputflags",3]],["bool",15]]],[11,"le","","",118,[[["outputflags",3]],["bool",15]]],[11,"gt","","",118,[[["outputflags",3]],["bool",15]]],[11,"ge","","",118,[[["outputflags",3]],["bool",15]]],[11,"partial_cmp","","",119,[[["controlflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",119,[[["controlflags",3]],["bool",15]]],[11,"le","","",119,[[["controlflags",3]],["bool",15]]],[11,"gt","","",119,[[["controlflags",3]],["bool",15]]],[11,"ge","","",119,[[["controlflags",3]],["bool",15]]],[11,"partial_cmp","","",120,[[["localflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",120,[[["localflags",3]],["bool",15]]],[11,"le","","",120,[[["localflags",3]],["bool",15]]],[11,"gt","","",120,[[["localflags",3]],["bool",15]]],[11,"ge","","",120,[[["localflags",3]],["bool",15]]],[11,"partial_cmp","nix::sys::time","",122,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",123,[[["timeval",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","nix::sys::wait","",127,[[["waitpidflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",127,[[["waitpidflag",3]],["bool",15]]],[11,"le","","",127,[[["waitpidflag",3]],["bool",15]]],[11,"gt","","",127,[[["waitpidflag",3]],["bool",15]]],[11,"ge","","",127,[[["waitpidflag",3]],["bool",15]]],[11,"partial_cmp","nix::sys::inotify","",129,[[["addwatchflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",129,[[["addwatchflags",3]],["bool",15]]],[11,"le","","",129,[[["addwatchflags",3]],["bool",15]]],[11,"gt","","",129,[[["addwatchflags",3]],["bool",15]]],[11,"ge","","",129,[[["addwatchflags",3]],["bool",15]]],[11,"partial_cmp","","",130,[[["initflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",130,[[["initflags",3]],["bool",15]]],[11,"le","","",130,[[["initflags",3]],["bool",15]]],[11,"gt","","",130,[[["initflags",3]],["bool",15]]],[11,"ge","","",130,[[["initflags",3]],["bool",15]]],[11,"partial_cmp","","",206,[[["watchdescriptor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"le","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"gt","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"ge","","",206,[[["watchdescriptor",3]],["bool",15]]],[11,"partial_cmp","nix::sys::timerfd","",133,[[["clockid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",134,[[["timerflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",134,[[["timerflags",3]],["bool",15]]],[11,"le","","",134,[[["timerflags",3]],["bool",15]]],[11,"gt","","",134,[[["timerflags",3]],["bool",15]]],[11,"ge","","",134,[[["timerflags",3]],["bool",15]]],[11,"partial_cmp","","",135,[[["timersettimeflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"le","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"gt","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"ge","","",135,[[["timersettimeflags",3]],["bool",15]]],[11,"partial_cmp","nix::time","",138,[[["clockid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",138,[[["clockid",3]],["bool",15]]],[11,"le","","",138,[[["clockid",3]],["bool",15]]],[11,"gt","","",138,[[["clockid",3]],["bool",15]]],[11,"ge","","",138,[[["clockid",3]],["bool",15]]],[11,"partial_cmp","nix::unistd","",142,[[["pid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",142,[[["pid",3]],["bool",15]]],[11,"le","","",142,[[["pid",3]],["bool",15]]],[11,"gt","","",142,[[["pid",3]],["bool",15]]],[11,"ge","","",142,[[["pid",3]],["bool",15]]],[11,"partial_cmp","","",151,[[["accessflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",151,[[["accessflags",3]],["bool",15]]],[11,"le","","",151,[[["accessflags",3]],["bool",15]]],[11,"gt","","",151,[[["accessflags",3]],["bool",15]]],[11,"ge","","",151,[[["accessflags",3]],["bool",15]]],[11,"fmt","nix::dir","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ifaddrs","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::pty","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::aio","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::personality","",47,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::reboot","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::select","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket::sockopt","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statfs","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::sysinfo","",110,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::uio","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::utsname","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","nix::time","",138,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ucontext","",139,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",154,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",56,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","nix::time","",138,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",154,[[["formatter",3]],["result",6]]],[11,"div","nix::sys::time","",122,[[["i32",15]],["timespec",3]]],[11,"div","","",123,[[["i32",15]],["timeval",3]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"sub","nix::kmod","Returns the set difference of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"sub","nix::mount","Returns the set difference of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"sub","nix::sched","Returns the set difference of the two sets of flags.",160,[[["cloneflags",3]],["cloneflags",3]]],[11,"sub","nix::sys::epoll","Returns the set difference of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"sub","nix::sys::eventfd","Returns the set difference of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"sub","nix::sys::memfd","Returns the set difference of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",43,[[["mremapflags",3]],["mremapflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",45,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"sub","nix::sys::personality","Returns the set difference of the two sets of flags.",47,[[["persona",3]],["persona",3]]],[11,"sub","nix::sys::ptrace","Returns the set difference of the two sets of flags.",162,[[["options",3]],["options",3]]],[11,"sub","nix::sys::quota","Returns the set difference of the two sets of flags.",52,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",57,[[["saflags",3]],["saflags",3]]],[11,"sub","nix::sys::signalfd","Returns the set difference of the two sets of flags.",66,[[["sfdflags",3]],["sfdflags",3]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",88,[[["sockflag",3]],["sockflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["msgflags",3]],["msgflags",3]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",102,[[["sflag",3]],["sflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",103,[[["mode",3]],["mode",3]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",108,[[["fsflags",3]],["fsflags",3]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",117,[[["inputflags",3]],["inputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["outputflags",3]],["outputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["controlflags",3]],["controlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["localflags",3]],["localflags",3]]],[11,"sub","nix::sys::time","",122,[[["timespec",3]],["timespec",3]]],[11,"sub","","",123,[[["timeval",3]],["timeval",3]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",127,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"sub","nix::sys::inotify","Returns the set difference of the two sets of flags.",129,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",130,[[["initflags",3]],["initflags",3]]],[11,"sub","nix::sys::timerfd","Returns the set difference of the two sets of flags.",134,[[["timerflags",3]],["timerflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",135,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"sub","nix::unistd","Returns the set difference of the two sets of flags.",151,[[["accessflags",3]],["accessflags",3]]],[11,"add","nix::sys::time","",122,[[["timespec",3]],["timespec",3]]],[11,"add","","",123,[[["timeval",3]],["timeval",3]]],[11,"mul","","",122,[[["i32",15]],["timespec",3]]],[11,"mul","","",123,[[["i32",15]],["timeval",3]]],[11,"neg","","",122,[[],["timespec",3]]],[11,"neg","","",123,[[],["timeval",3]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",6,[[["atflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["sealflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["fdflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["splicefflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["fallocateflags",3]]]],[11,"sub_assign","nix::kmod","Disables all flags enabled in the set.",15,[[["moduleinitflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"sub_assign","nix::mount","Disables all flags enabled in the set.",17,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["mntflags",3]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",19,[[["mq_oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["fdflag",3]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",22,[[["interfaceflags",3]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",24,[[["pollflags",3]]]],[11,"sub_assign","nix::sched","Disables all flags enabled in the set.",160,[[["cloneflags",3]]]],[11,"sub_assign","nix::sys::epoll","Disables all flags enabled in the set.",35,[[["epollflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["epollcreateflags",3]]]],[11,"sub_assign","nix::sys::eventfd","Disables all flags enabled in the set.",39,[[["efdflags",3]]]],[11,"sub_assign","nix::sys::memfd","Disables all flags enabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",41,[[["protflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["mapflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",43,[[["mremapflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",45,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["mlockallflags",3]]]],[11,"sub_assign","nix::sys::personality","Disables all flags enabled in the set.",47,[[["persona",3]]]],[11,"sub_assign","nix::sys::ptrace","Disables all flags enabled in the set.",162,[[["options",3]]]],[11,"sub_assign","nix::sys::quota","Disables all flags enabled in the set.",52,[[["quotavalidflags",3]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",57,[[["saflags",3]]]],[11,"sub_assign","nix::sys::signalfd","Disables all flags enabled in the set.",66,[[["sfdflags",3]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",88,[[["sockflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["msgflags",3]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",102,[[["sflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",103,[[["mode",3]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",108,[[["fsflags",3]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",117,[[["inputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["outputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["controlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["localflags",3]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",127,[[["waitpidflag",3]]]],[11,"sub_assign","nix::sys::inotify","Disables all flags enabled in the set.",129,[[["addwatchflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",130,[[["initflags",3]]]],[11,"sub_assign","nix::sys::timerfd","Disables all flags enabled in the set.",134,[[["timerflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",135,[[["timersettimeflags",3]]]],[11,"sub_assign","nix::unistd","Disables all flags enabled in the set.",151,[[["accessflags",3]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",6,[[],["atflags",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["oflag",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["sealflag",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["fdflag",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["splicefflags",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["fallocateflags",3]]],[11,"not","nix::kmod","Returns the complement of this set of flags.",15,[[],["moduleinitflags",3]]],[11,"not","","Returns the complement of this set of flags.",16,[[],["deletemoduleflags",3]]],[11,"not","nix::mount","Returns the complement of this set of flags.",17,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["mntflags",3]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",19,[[],["mq_oflag",3]]],[11,"not","","Returns the complement of this set of flags.",20,[[],["fdflag",3]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",22,[[],["interfaceflags",3]]],[11,"not","nix::poll","Returns the complement of this set of flags.",24,[[],["pollflags",3]]],[11,"not","nix::sched","Returns the complement of this set of flags.",160,[[],["cloneflags",3]]],[11,"not","nix::sys::epoll","Returns the complement of this set of flags.",35,[[],["epollflags",3]]],[11,"not","","Returns the complement of this set of flags.",37,[[],["epollcreateflags",3]]],[11,"not","nix::sys::eventfd","Returns the complement of this set of flags.",39,[[],["efdflags",3]]],[11,"not","nix::sys::memfd","Returns the complement of this set of flags.",40,[[],["memfdcreateflag",3]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",41,[[],["protflags",3]]],[11,"not","","Returns the complement of this set of flags.",42,[[],["mapflags",3]]],[11,"not","","Returns the complement of this set of flags.",43,[[],["mremapflags",3]]],[11,"not","","Returns the complement of this set of flags.",45,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",46,[[],["mlockallflags",3]]],[11,"not","nix::sys::personality","Returns the complement of this set of flags.",47,[[],["persona",3]]],[11,"not","nix::sys::ptrace","Returns the complement of this set of flags.",162,[[],["options",3]]],[11,"not","nix::sys::quota","Returns the complement of this set of flags.",52,[[],["quotavalidflags",3]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",57,[[],["saflags",3]]],[11,"not","nix::sys::signalfd","Returns the complement of this set of flags.",66,[[],["sfdflags",3]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",88,[[],["sockflag",3]]],[11,"not","","Returns the complement of this set of flags.",89,[[],["msgflags",3]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",102,[[],["sflag",3]]],[11,"not","","Returns the complement of this set of flags.",103,[[],["mode",3]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",108,[[],["fsflags",3]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",117,[[],["inputflags",3]]],[11,"not","","Returns the complement of this set of flags.",118,[[],["outputflags",3]]],[11,"not","","Returns the complement of this set of flags.",119,[[],["controlflags",3]]],[11,"not","","Returns the complement of this set of flags.",120,[[],["localflags",3]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",127,[[],["waitpidflag",3]]],[11,"not","nix::sys::inotify","Returns the complement of this set of flags.",129,[[],["addwatchflags",3]]],[11,"not","","Returns the complement of this set of flags.",130,[[],["initflags",3]]],[11,"not","nix::sys::timerfd","Returns the complement of this set of flags.",134,[[],["timerflags",3]]],[11,"not","","Returns the complement of this set of flags.",135,[[],["timersettimeflags",3]]],[11,"not","nix::unistd","Returns the complement of this set of flags.",151,[[],["accessflags",3]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitand","nix::kmod","Returns the intersection between the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitand","nix::mount","Returns the intersection between the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitand","nix::sched","Returns the intersection between the two sets of flags.",160,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitand","nix::sys::epoll","Returns the intersection between the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitand","nix::sys::eventfd","Returns the intersection between the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitand","nix::sys::memfd","Returns the intersection between the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",43,[[["mremapflags",3]],["mremapflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",45,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitand","nix::sys::personality","Returns the intersection between the two sets of flags.",47,[[["persona",3]],["persona",3]]],[11,"bitand","nix::sys::ptrace","Returns the intersection between the two sets of flags.",162,[[["options",3]],["options",3]]],[11,"bitand","nix::sys::quota","Returns the intersection between the two sets of flags.",52,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",57,[[["saflags",3]],["saflags",3]]],[11,"bitand","nix::sys::signalfd","Returns the intersection between the two sets of flags.",66,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",88,[[["sockflag",3]],["sockflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["msgflags",3]],["msgflags",3]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",102,[[["sflag",3]],["sflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",103,[[["mode",3]],["mode",3]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",108,[[["fsflags",3]],["fsflags",3]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",117,[[["inputflags",3]],["inputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["outputflags",3]],["outputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["controlflags",3]],["controlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["localflags",3]],["localflags",3]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",127,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitand","nix::sys::inotify","Returns the intersection between the two sets of flags.",129,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",130,[[["initflags",3]],["initflags",3]]],[11,"bitand","nix::sys::timerfd","Returns the intersection between the two sets of flags.",134,[[["timerflags",3]],["timerflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",135,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitand","nix::unistd","Returns the intersection between the two sets of flags.",151,[[["accessflags",3]],["accessflags",3]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitor","nix::kmod","Returns the union of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitor","nix::mount","Returns the union of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitor","nix::sched","Returns the union of the two sets of flags.",160,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitor","nix::sys::epoll","Returns the union of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitor","nix::sys::eventfd","Returns the union of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitor","nix::sys::memfd","Returns the union of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",43,[[["mremapflags",3]],["mremapflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",45,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitor","nix::sys::personality","Returns the union of the two sets of flags.",47,[[["persona",3]],["persona",3]]],[11,"bitor","nix::sys::ptrace","Returns the union of the two sets of flags.",162,[[["options",3]],["options",3]]],[11,"bitor","nix::sys::quota","Returns the union of the two sets of flags.",52,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",57,[[["saflags",3]],["saflags",3]]],[11,"bitor","nix::sys::signalfd","Returns the union of the two sets of flags.",66,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",88,[[["sockflag",3]],["sockflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["msgflags",3]],["msgflags",3]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",102,[[["sflag",3]],["sflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",103,[[["mode",3]],["mode",3]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",108,[[["fsflags",3]],["fsflags",3]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",117,[[["inputflags",3]],["inputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["outputflags",3]],["outputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["controlflags",3]],["controlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["localflags",3]],["localflags",3]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",127,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitor","nix::sys::inotify","Returns the union of the two sets of flags.",129,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",130,[[["initflags",3]],["initflags",3]]],[11,"bitor","nix::sys::timerfd","Returns the union of the two sets of flags.",134,[[["timerflags",3]],["timerflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",135,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitor","nix::unistd","Returns the union of the two sets of flags.",151,[[["accessflags",3]],["accessflags",3]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags …",6,[[["atflags",3]],["atflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",7,[[["oflag",3]],["oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitxor","nix::kmod","Returns the left flags, but with all the right flags …",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitxor","nix::mount","Returns the left flags, but with all the right flags …",17,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags …",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags …",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags …",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitxor","nix::sched","Returns the left flags, but with all the right flags …",160,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitxor","nix::sys::epoll","Returns the left flags, but with all the right flags …",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitxor","nix::sys::eventfd","Returns the left flags, but with all the right flags …",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitxor","nix::sys::memfd","Returns the left flags, but with all the right flags …",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags …",41,[[["protflags",3]],["protflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",43,[[["mremapflags",3]],["mremapflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",45,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",46,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitxor","nix::sys::personality","Returns the left flags, but with all the right flags …",47,[[["persona",3]],["persona",3]]],[11,"bitxor","nix::sys::ptrace","Returns the left flags, but with all the right flags …",162,[[["options",3]],["options",3]]],[11,"bitxor","nix::sys::quota","Returns the left flags, but with all the right flags …",52,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags …",57,[[["saflags",3]],["saflags",3]]],[11,"bitxor","nix::sys::signalfd","Returns the left flags, but with all the right flags …",66,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags …",88,[[["sockflag",3]],["sockflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",89,[[["msgflags",3]],["msgflags",3]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags …",102,[[["sflag",3]],["sflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",103,[[["mode",3]],["mode",3]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags …",108,[[["fsflags",3]],["fsflags",3]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags …",117,[[["inputflags",3]],["inputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",118,[[["outputflags",3]],["outputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",119,[[["controlflags",3]],["controlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",120,[[["localflags",3]],["localflags",3]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags …",127,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitxor","nix::sys::inotify","Returns the left flags, but with all the right flags …",129,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",130,[[["initflags",3]],["initflags",3]]],[11,"bitxor","nix::sys::timerfd","Returns the left flags, but with all the right flags …",134,[[["timerflags",3]],["timerflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",135,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitxor","nix::unistd","Returns the left flags, but with all the right flags …",151,[[["accessflags",3]],["accessflags",3]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",6,[[["atflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["sealflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["fdflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["splicefflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["fallocateflags",3]]]],[11,"bitand_assign","nix::kmod","Disables all flags disabled in the set.",15,[[["moduleinitflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"bitand_assign","nix::mount","Disables all flags disabled in the set.",17,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["mntflags",3]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",19,[[["mq_oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["fdflag",3]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",22,[[["interfaceflags",3]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",24,[[["pollflags",3]]]],[11,"bitand_assign","nix::sched","Disables all flags disabled in the set.",160,[[["cloneflags",3]]]],[11,"bitand_assign","nix::sys::epoll","Disables all flags disabled in the set.",35,[[["epollflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["epollcreateflags",3]]]],[11,"bitand_assign","nix::sys::eventfd","Disables all flags disabled in the set.",39,[[["efdflags",3]]]],[11,"bitand_assign","nix::sys::memfd","Disables all flags disabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",41,[[["protflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["mapflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",43,[[["mremapflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",45,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["mlockallflags",3]]]],[11,"bitand_assign","nix::sys::personality","Disables all flags disabled in the set.",47,[[["persona",3]]]],[11,"bitand_assign","nix::sys::ptrace","Disables all flags disabled in the set.",162,[[["options",3]]]],[11,"bitand_assign","nix::sys::quota","Disables all flags disabled in the set.",52,[[["quotavalidflags",3]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",57,[[["saflags",3]]]],[11,"bitand_assign","nix::sys::signalfd","Disables all flags disabled in the set.",66,[[["sfdflags",3]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",88,[[["sockflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["msgflags",3]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",102,[[["sflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",103,[[["mode",3]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",108,[[["fsflags",3]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",117,[[["inputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["outputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["controlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["localflags",3]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",127,[[["waitpidflag",3]]]],[11,"bitand_assign","nix::sys::inotify","Disables all flags disabled in the set.",129,[[["addwatchflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",130,[[["initflags",3]]]],[11,"bitand_assign","nix::sys::timerfd","Disables all flags disabled in the set.",134,[[["timerflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",135,[[["timersettimeflags",3]]]],[11,"bitand_assign","nix::unistd","Disables all flags disabled in the set.",151,[[["accessflags",3]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",6,[[["atflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["sealflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["fdflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["splicefflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitor_assign","nix::kmod","Adds the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitor_assign","nix::mount","Adds the set of flags.",17,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["mntflags",3]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["fdflag",3]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",24,[[["pollflags",3]]]],[11,"bitor_assign","nix::sched","Adds the set of flags.",160,[[["cloneflags",3]]]],[11,"bitor_assign","nix::sys::epoll","Adds the set of flags.",35,[[["epollflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitor_assign","nix::sys::eventfd","Adds the set of flags.",39,[[["efdflags",3]]]],[11,"bitor_assign","nix::sys::memfd","Adds the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",41,[[["protflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["mapflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",43,[[["mremapflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",45,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["mlockallflags",3]]]],[11,"bitor_assign","nix::sys::personality","Adds the set of flags.",47,[[["persona",3]]]],[11,"bitor_assign","nix::sys::ptrace","Adds the set of flags.",162,[[["options",3]]]],[11,"bitor_assign","nix::sys::quota","Adds the set of flags.",52,[[["quotavalidflags",3]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",57,[[["saflags",3]]]],[11,"bitor_assign","nix::sys::signalfd","Adds the set of flags.",66,[[["sfdflags",3]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",88,[[["sockflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["msgflags",3]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",102,[[["sflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",103,[[["mode",3]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",108,[[["fsflags",3]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",117,[[["inputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["outputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["controlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["localflags",3]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",127,[[["waitpidflag",3]]]],[11,"bitor_assign","nix::sys::inotify","Adds the set of flags.",129,[[["addwatchflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",130,[[["initflags",3]]]],[11,"bitor_assign","nix::sys::timerfd","Adds the set of flags.",134,[[["timerflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",135,[[["timersettimeflags",3]]]],[11,"bitor_assign","nix::unistd","Adds the set of flags.",151,[[["accessflags",3]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",6,[[["atflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["sealflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["fdflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["splicefflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitxor_assign","nix::kmod","Toggles the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitxor_assign","nix::mount","Toggles the set of flags.",17,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["mntflags",3]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["fdflag",3]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",24,[[["pollflags",3]]]],[11,"bitxor_assign","nix::sched","Toggles the set of flags.",160,[[["cloneflags",3]]]],[11,"bitxor_assign","nix::sys::epoll","Toggles the set of flags.",35,[[["epollflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitxor_assign","nix::sys::eventfd","Toggles the set of flags.",39,[[["efdflags",3]]]],[11,"bitxor_assign","nix::sys::memfd","Toggles the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",41,[[["protflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["mapflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",43,[[["mremapflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",45,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["mlockallflags",3]]]],[11,"bitxor_assign","nix::sys::personality","Toggles the set of flags.",47,[[["persona",3]]]],[11,"bitxor_assign","nix::sys::ptrace","Toggles the set of flags.",162,[[["options",3]]]],[11,"bitxor_assign","nix::sys::quota","Toggles the set of flags.",52,[[["quotavalidflags",3]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",57,[[["saflags",3]]]],[11,"bitxor_assign","nix::sys::signalfd","Toggles the set of flags.",66,[[["sfdflags",3]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",88,[[["sockflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["msgflags",3]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",102,[[["sflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",103,[[["mode",3]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",108,[[["fsflags",3]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",117,[[["inputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["outputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["controlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["localflags",3]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",127,[[["waitpidflag",3]]]],[11,"bitxor_assign","nix::sys::inotify","Toggles the set of flags.",129,[[["addwatchflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",130,[[["initflags",3]]]],[11,"bitxor_assign","nix::sys::timerfd","Toggles the set of flags.",134,[[["timerflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",135,[[["timersettimeflags",3]]]],[11,"bitxor_assign","nix::unistd","Toggles the set of flags.",151,[[["accessflags",3]]]],[11,"hash","nix::dir","",0,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","nix::fcntl","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",5,[[]]],[11,"hash","nix::ifaddrs","",14,[[]]],[11,"hash","","",158,[[]]],[11,"hash","nix::kmod","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","nix::mount","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","nix::mqueue","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","nix::net::if_","",22,[[]]],[11,"hash","nix::poll","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","nix::pty","",26,[[]]],[11,"hash","","",159,[[]]],[11,"hash","nix::sched","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","nix::sys::aio","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","nix::sys::epoll","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","nix::sys::eventfd","",39,[[]]],[11,"hash","nix::sys::memfd","",40,[[]]],[11,"hash","nix::sys::mman","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","nix::sys::personality","",47,[[]]],[11,"hash","nix::sys::ptrace","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",162,[[]]],[11,"hash","nix::sys::quota","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","nix::sys::reboot","",54,[[]]],[11,"hash","nix::sys::select","",55,[[]]],[11,"hash","nix::sys::signal","",56,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",164,[[]]],[11,"hash","nix::sys::signalfd","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","nix::sys::socket","",68,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",78,[[]]],[11,"hash","nix::sys::socket::sockopt","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","nix::sys::socket","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",100,[[]]],[11,"hash","nix::sys::stat","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","nix::sys::statvfs","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","nix::sys::sysinfo","",110,[[]]],[11,"hash","nix::sys::termios","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","nix::sys::time","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","nix::sys::uio","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","nix::sys::utsname","",126,[[]]],[11,"hash","nix::sys::wait","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","nix::sys::inotify","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",206,[[]]],[11,"hash","nix::sys::timerfd","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","nix::time","",138,[[]]],[11,"hash","nix::ucontext","",139,[[]]],[11,"hash","nix::unistd","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"try_from","nix::sys::signal","",56,[[["c_int",6]],[["result",6],["signal",4]]]],[11,"try_from","nix::sys::termios","",112,[[["speed_t",6]],[["baudrate",4],["result",6]]]],[11,"from_str","nix::sys::signal","",56,[[["str",15]],[["result",6],["signal",4]]]],[11,"from_iter","nix::fcntl","",6,[[["intoiterator",8]],["atflags",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["oflag",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["sealflag",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["splicefflags",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["fallocateflags",3]]],[11,"from_iter","nix::kmod","",15,[[["intoiterator",8]],["moduleinitflags",3]]],[11,"from_iter","","",16,[[["intoiterator",8]],["deletemoduleflags",3]]],[11,"from_iter","nix::mount","",17,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["mntflags",3]]],[11,"from_iter","nix::mqueue","",19,[[["intoiterator",8]],["mq_oflag",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","nix::net::if_","",22,[[["intoiterator",8]],["interfaceflags",3]]],[11,"from_iter","nix::poll","",24,[[["intoiterator",8]],["pollflags",3]]],[11,"from_iter","nix::sched","",160,[[["intoiterator",8]],["cloneflags",3]]],[11,"from_iter","nix::sys::epoll","",35,[[["intoiterator",8]],["epollflags",3]]],[11,"from_iter","","",37,[[["intoiterator",8]],["epollcreateflags",3]]],[11,"from_iter","nix::sys::eventfd","",39,[[["intoiterator",8]],["efdflags",3]]],[11,"from_iter","nix::sys::memfd","",40,[[["intoiterator",8]],["memfdcreateflag",3]]],[11,"from_iter","nix::sys::mman","",41,[[["intoiterator",8]],["protflags",3]]],[11,"from_iter","","",42,[[["intoiterator",8]],["mapflags",3]]],[11,"from_iter","","",43,[[["intoiterator",8]],["mremapflags",3]]],[11,"from_iter","","",45,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",46,[[["intoiterator",8]],["mlockallflags",3]]],[11,"from_iter","nix::sys::personality","",47,[[["intoiterator",8]],["persona",3]]],[11,"from_iter","nix::sys::ptrace","",162,[[["intoiterator",8]],["options",3]]],[11,"from_iter","nix::sys::quota","",52,[[["intoiterator",8]],["quotavalidflags",3]]],[11,"from_iter","nix::sys::signal","",57,[[["intoiterator",8]],["saflags",3]]],[11,"from_iter","nix::sys::signalfd","",66,[[["intoiterator",8]],["sfdflags",3]]],[11,"from_iter","nix::sys::socket","",88,[[["intoiterator",8]],["sockflag",3]]],[11,"from_iter","","",89,[[["intoiterator",8]],["msgflags",3]]],[11,"from_iter","nix::sys::stat","",102,[[["intoiterator",8]],["sflag",3]]],[11,"from_iter","","",103,[[["intoiterator",8]],["mode",3]]],[11,"from_iter","nix::sys::statvfs","",108,[[["intoiterator",8]],["fsflags",3]]],[11,"from_iter","nix::sys::termios","",117,[[["intoiterator",8]],["inputflags",3]]],[11,"from_iter","","",118,[[["intoiterator",8]],["outputflags",3]]],[11,"from_iter","","",119,[[["intoiterator",8]],["controlflags",3]]],[11,"from_iter","","",120,[[["intoiterator",8]],["localflags",3]]],[11,"from_iter","nix::sys::wait","",127,[[["intoiterator",8]],["waitpidflag",3]]],[11,"from_iter","nix::sys::inotify","",129,[[["intoiterator",8]],["addwatchflags",3]]],[11,"from_iter","","",130,[[["intoiterator",8]],["initflags",3]]],[11,"from_iter","nix::sys::timerfd","",134,[[["intoiterator",8]],["timerflags",3]]],[11,"from_iter","","",135,[[["intoiterator",8]],["timersettimeflags",3]]],[11,"from_iter","nix::unistd","",151,[[["intoiterator",8]],["accessflags",3]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::personality","",47,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",162,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",57,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",66,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::personality","",47,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",162,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",57,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",66,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::personality","",47,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",162,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",57,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",66,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::personality","",47,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",162,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",57,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",66,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",151,[[["formatter",3]],["result",6]]],[11,"read","nix::pty","",159,[[],[["result",6],["usize",15]]]],[11,"write","","",159,[[],[["result",6],["usize",15]]]],[11,"flush","","",159,[[],["result",6]]],[11,"as_raw_fd","nix::dir","",0,[[],["rawfd",6]]],[11,"as_raw_fd","nix::pty","",159,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::signalfd","",67,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::inotify","",132,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::timerfd","",137,[[],["rawfd",6]]],[11,"from_raw_fd","nix::sys::inotify","",132,[[["rawfd",6]]]],[11,"from_raw_fd","nix::sys::timerfd","",137,[[["rawfd",6]]]],[11,"into_raw_fd","nix::pty","",159,[[],["rawfd",6]]],[18,"CLONE_VM","nix::sched","",160,null],[18,"CLONE_FS","","",160,null],[18,"CLONE_FILES","","",160,null],[18,"CLONE_SIGHAND","","",160,null],[18,"CLONE_PTRACE","","",160,null],[18,"CLONE_VFORK","","",160,null],[18,"CLONE_PARENT","","",160,null],[18,"CLONE_THREAD","","",160,null],[18,"CLONE_NEWNS","","",160,null],[18,"CLONE_SYSVSEM","","",160,null],[18,"CLONE_SETTLS","","",160,null],[18,"CLONE_PARENT_SETTID","","",160,null],[18,"CLONE_CHILD_CLEARTID","","",160,null],[18,"CLONE_DETACHED","","",160,null],[18,"CLONE_UNTRACED","","",160,null],[18,"CLONE_CHILD_SETTID","","",160,null],[18,"CLONE_NEWCGROUP","","",160,null],[18,"CLONE_NEWUTS","","",160,null],[18,"CLONE_NEWIPC","","",160,null],[18,"CLONE_NEWUSER","","",160,null],[18,"CLONE_NEWPID","","",160,null],[18,"CLONE_NEWNET","","",160,null],[18,"CLONE_IO","","",160,null],[11,"empty","","Returns an empty set of flags",160,[[],["cloneflags",3]]],[11,"all","","Returns the set containing all flags.",160,[[],["cloneflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",160,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",160,[[["c_int",6]],[["cloneflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",160,[[["c_int",6]],["cloneflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",160,[[["c_int",6]],["cloneflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",160,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",160,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",160,[[["cloneflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",160,[[["cloneflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",160,[[["cloneflags",3]]]],[11,"remove","","Removes the specified flags in-place.",160,[[["cloneflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",160,[[["cloneflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",160,[[["cloneflags",3],["bool",15]]]],[11,"new","","Create a new and empty CpuSet.",161,[[],["cpuset",3]]],[11,"is_set","","Test to see if a CPU is in the CpuSet. <code>field</code> is the CPU …",161,[[["usize",15]],[["result",6],["bool",15]]]],[11,"set","","Add a CPU to CpuSet. <code>field</code> is the CPU id to add",161,[[["usize",15]],["result",6]]],[11,"unset","","Remove a CPU from CpuSet. <code>field</code> is the CPU id to remove",161,[[["usize",15]],["result",6]]],[11,"count","","Return the maximum number of CPU in CpuSet",161,[[],["usize",15]]],[18,"PTRACE_O_TRACESYSGOOD","nix::sys::ptrace","When delivering system call traps set a bit to allow …",162,null],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked …",162,null],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked …",162,null],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned …",162,null],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",162,null],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",162,null],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit …",162,null],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. …",162,null],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits.  This …",162,null],[11,"empty","","Returns an empty set of flags",162,[[],["options",3]]],[11,"all","","Returns the set containing all flags.",162,[[],["options",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",162,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",162,[[["c_int",6]],[["options",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",162,[[["c_int",6]],["options",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",162,[[["c_int",6]],["options",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",162,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",162,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",162,[[["options",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",162,[[["options",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",162,[[["options",3]]]],[11,"remove","","Removes the specified flags in-place.",162,[[["options",3]]]],[11,"toggle","","Toggles the specified flags in-place.",162,[[["options",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",162,[[["bool",15],["options",3]]]],[11,"new","nix::sys::signal","<strong>Note:</strong> this constructor does not allow the user to set the …",164,[[["sigevnotify",4]],["sigevent",3]]],[11,"sigevent","","",164,[[],["sigevent",3]]],[11,"new","nix::sys::socket","",76,[[["u32",15]],["netlinkaddr",3]]],[11,"pid","","",76,[[],["u32",15]]],[11,"groups","","",76,[[],["u32",15]]],[11,"new","","",77,[[["str",15]],["algaddr",3]]],[11,"alg_type","","",77,[[],["cstr",3]]],[11,"alg_name","","",77,[[],["cstr",3]]],[11,"family","","Always AF_PACKET",75,[[],["addressfamily",4]]],[11,"protocol","","Physical-layer protocol",75,[[],["u16",15]]],[11,"ifindex","","Interface number",75,[[],["usize",15]]],[11,"hatype","","ARP hardware type",75,[[],["u16",15]]],[11,"pkttype","","Packet type",75,[[],["u8",15]]],[11,"halen","","Length of MAC address",75,[[],["usize",15]]],[11,"addr","","Physical-layer address (MAC)",75,[[]]],[11,"new","","",78,[[["u32",15]],["vsockaddr",3]]],[11,"cid","","Context Identifier (CID)",78,[[],["u32",15]]],[11,"port","","Port number",78,[[],["u32",15]]],[11,"from_i32","","Create a new <code>AddressFamily</code> from an integer value …",68,[[["i32",15]],[["option",4],["addressfamily",4]]]],[11,"from_std","","",70,[[["socketaddr",4]],["inetaddr",4]]],[11,"new","","",70,[[["ipaddr",4],["u16",15]],["inetaddr",4]]],[11,"ip","","Gets the IP address associated with this socket address.",70,[[],["ipaddr",4]]],[11,"port","","Gets the port number associated with this socket address",70,[[],["u16",15]]],[11,"to_std","","",70,[[],["socketaddr",4]]],[11,"to_str","","",70,[[],["string",3]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",72,[[["u8",15]],["ipaddr",4]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",72,[[["u16",15]],["ipaddr",4]]],[11,"from_std","","",72,[[["ipaddr",4]],["ipaddr",4]]],[11,"to_std","","",72,[[],["ipaddr",4]]],[11,"new","","",73,[[["u8",15]],["ipv4addr",3]]],[11,"from_std","","",73,[[["ipv4addr",3]],["ipv4addr",3]]],[11,"any","","",73,[[],["ipv4addr",3]]],[11,"octets","","",73,[[]]],[11,"to_std","","",73,[[],["ipv4addr",3]]],[11,"new","","",74,[[["u16",15]],["ipv6addr",3]]],[11,"from_std","","",74,[[["ipv6addr",3]],["ipv6addr",3]]],[11,"segments","","Return the eight 16-bit segments that make up this address",74,[[]]],[11,"to_std","","",74,[[],["ipv6addr",3]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",71,[[],[["unixaddr",3],["result",6]]]],[11,"new_abstract","","Create a new <code>sockaddr_un</code> representing an address in the …",71,[[],[["unixaddr",3],["result",6]]]],[11,"path","","If this address represents a filesystem path, return that …",71,[[],[["option",4],["path",3]]]],[11,"as_abstract","","If this address represents an abstract socket, return its …",71,[[],["option",4]]],[11,"new_inet","","",69,[[["inetaddr",4]],["sockaddr",4]]],[11,"new_unix","","",69,[[],[["result",6],["sockaddr",4]]]],[11,"new_netlink","","",69,[[["u32",15]],["sockaddr",4]]],[11,"new_alg","","",69,[[["str",15]],["sockaddr",4]]],[11,"new_vsock","","",69,[[["u32",15]],["sockaddr",4]]],[11,"family","","",69,[[],["addressfamily",4]]],[11,"to_str","","",69,[[],["string",3]]],[11,"as_ffi_pair","","Conversion from nix\'s SockAddr type to the underlying …",69,[[]]]],"p":[[3,"Dir"],[4,"Type"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"PosixFadviseAdvice"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[3,"LioCb"],[3,"EpollFlags"],[4,"EpollOp"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MRemapFlags"],[4,"MmapAdvise"],[3,"MsFlags"],[3,"MlockAllFlags"],[3,"Persona"],[4,"Request"],[4,"Event"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[3,"SaFlags"],[4,"SigmaskHow"],[3,"SigSet"],[4,"SigHandler"],[3,"SigAction"],[4,"SigevNotify"],[13,"SigevSignal"],[13,"SigevThreadId"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[3,"UnixAddr"],[4,"IpAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"AlgAddr"],[3,"VsockAddr"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[4,"SockType"],[4,"SockProtocol"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"RecvMsg"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[3,"SendMmsgData"],[3,"RecvMmsgData"],[8,"GetSockOpt"],[8,"SetSockOpt"],[4,"Shutdown"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"FsType"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[3,"WaitPidFlag"],[4,"WaitStatus"],[3,"AddWatchFlags"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Inotify"],[4,"ClockId"],[3,"TimerFlags"],[3,"TimerSetTimeFlags"],[4,"Expiration"],[3,"TimerFd"],[3,"ClockId"],[3,"UContext"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[4,"ForkResult"],[13,"Parent"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"AccessFlags"],[3,"User"],[3,"Group"],[4,"Error"],[8,"NixPath"],[3,"Iter"],[3,"OwningIter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"Options"],[3,"Fds"],[3,"SigEvent"],[3,"SignalIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"TcpKeepCount"],[3,"TcpKeepInterval"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"CmsgIterator"],[3,"WatchDescriptor"],[6,"SessionId"]]},\
"object":{"doc":"<code>object</code>The <code>object</code> crate provides a unified interface to …","i":[[0,"endian","object","Types for compile-time and run-time endianness.",null,null],[8,"Endian","object::endian","A trait for using an endianness specification.",null,null],[10,"from_big_endian","","Construct a specification for the endianness of some …",0,[[["bool",15]],["option",4]]],[11,"from_little_endian","","Construct a specification for the endianness of some …",0,[[["bool",15]],["option",4]]],[10,"is_big_endian","","Return true for big endian byte order.",0,[[],["bool",15]]],[11,"is_little_endian","","Return true for little endian byte order.",0,[[],["bool",15]]],[11,"read_u16","","Converts an unsigned 16 bit integer to native endian.",0,[[["u16",15]],["u16",15]]],[11,"read_u32","","Converts an unsigned 32 bit integer to native endian.",0,[[["u32",15]],["u32",15]]],[11,"read_u64","","Converts an unsigned 64 bit integer to native endian.",0,[[["u64",15]],["u64",15]]],[11,"read_i16","","Converts a signed 16 bit integer to native endian.",0,[[["i16",15]],["i16",15]]],[11,"read_i32","","Converts a signed 32 bit integer to native endian.",0,[[["i32",15]],["i32",15]]],[11,"read_i64","","Converts a signed 64 bit integer to native endian.",0,[[["i64",15]],["i64",15]]],[11,"read_u16_bytes","","Converts an unaligned unsigned 16 bit integer to native …",0,[[],["u16",15]]],[11,"read_u32_bytes","","Converts an unaligned unsigned 32 bit integer to native …",0,[[],["u32",15]]],[11,"read_u64_bytes","","Converts an unaligned unsigned 64 bit integer to native …",0,[[],["u64",15]]],[11,"read_i16_bytes","","Converts an unaligned signed 16 bit integer to native …",0,[[],["i16",15]]],[11,"read_i32_bytes","","Converts an unaligned signed 32 bit integer to native …",0,[[],["i32",15]]],[11,"read_i64_bytes","","Converts an unaligned signed 64 bit integer to native …",0,[[],["i64",15]]],[11,"write_u16","","Converts an unsigned 16 bit integer from native endian.",0,[[["u16",15]],["u16",15]]],[11,"write_u32","","Converts an unsigned 32 bit integer from native endian.",0,[[["u32",15]],["u32",15]]],[11,"write_u64","","Converts an unsigned 64 bit integer from native endian.",0,[[["u64",15]],["u64",15]]],[11,"write_i16","","Converts a signed 16 bit integer from native endian.",0,[[["i16",15]],["i16",15]]],[11,"write_i32","","Converts a signed 32 bit integer from native endian.",0,[[["i32",15]],["i32",15]]],[11,"write_i64","","Converts a signed 64 bit integer from native endian.",0,[[["i64",15]],["i64",15]]],[11,"write_u16_bytes","","Converts an unaligned unsigned 16 bit integer from native …",0,[[["u16",15]]]],[11,"write_u32_bytes","","Converts an unaligned unsigned 32 bit integer from native …",0,[[["u32",15]]]],[11,"write_u64_bytes","","Converts an unaligned unsigned 64 bit integer from native …",0,[[["u64",15]]]],[11,"write_i16_bytes","","Converts an unaligned signed 16 bit integer from native …",0,[[["i16",15]]]],[11,"write_i32_bytes","","Converts an unaligned signed 32 bit integer from native …",0,[[["i32",15]]]],[11,"write_i64_bytes","","Converts an unaligned signed 64 bit integer from native …",0,[[["i64",15]]]],[4,"Endianness","","An endianness that is selectable at run-time.",null,null],[13,"Little","","Little endian byte order.",1,null],[13,"Big","","Big endian byte order.",1,null],[3,"LittleEndian","","Compile-time little endian byte order.",null,null],[3,"BigEndian","","Compile-time big endian byte order.",null,null],[6,"NativeEndian","","The native endianness for the target platform.",null,null],[6,"U16","","A <code>u16</code> value with an externally specified endianness of …",null,null],[6,"U32","","A <code>u32</code> value with an externally specified endianness of …",null,null],[6,"U64","","A <code>u64</code> value with an externally specified endianness of …",null,null],[6,"I16","","An <code>i16</code> value with an externally specified endianness of …",null,null],[6,"I32","","An <code>i32</code> value with an externally specified endianness of …",null,null],[6,"I64","","An <code>i64</code> value with an externally specified endianness of …",null,null],[3,"U16Bytes","","An unaligned <code>u16</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",2,[[["u16",15]]]],[11,"get","","Return the value as a native endian value.",2,[[],["u16",15]]],[11,"set","","Set the value given a native endian value.",2,[[["u16",15]]]],[3,"U32Bytes","","An unaligned <code>u32</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",3,[[["u32",15]]]],[11,"get","","Return the value as a native endian value.",3,[[],["u32",15]]],[11,"set","","Set the value given a native endian value.",3,[[["u32",15]]]],[3,"U64Bytes","","An unaligned <code>u64</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",4,[[["u64",15]]]],[11,"get","","Return the value as a native endian value.",4,[[],["u64",15]]],[11,"set","","Set the value given a native endian value.",4,[[["u64",15]]]],[3,"I16Bytes","","An unaligned <code>i16</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",5,[[["i16",15]]]],[11,"get","","Return the value as a native endian value.",5,[[],["i16",15]]],[11,"set","","Set the value given a native endian value.",5,[[["i16",15]]]],[3,"I32Bytes","","An unaligned <code>i32</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",6,[[["i32",15]]]],[11,"get","","Return the value as a native endian value.",6,[[],["i32",15]]],[11,"set","","Set the value given a native endian value.",6,[[["i32",15]]]],[3,"I64Bytes","","An unaligned <code>i64</code> value with an externally specified …",null,null],[11,"new","","Construct a new value given a native endian value.",7,[[["i64",15]]]],[11,"get","","Return the value as a native endian value.",7,[[],["i64",15]]],[11,"set","","Set the value given a native endian value.",7,[[["i64",15]]]],[0,"pod","object","Tools for converting file format structures to and from …",null,null],[8,"Pod","object::pod","A trait for types that can safely be converted from and …",null,null],[5,"from_bytes","","Cast a byte slice to a <code>Pod</code> type.",null,[[],["result",4]]],[5,"slice_from_bytes","","Cast a byte slice to a slice of a <code>Pod</code> type.",null,[[["usize",15]],["result",4]]],[5,"bytes_of","","Cast a <code>Pod</code> type to a byte slice.",null,[[]]],[3,"Bytes","","A newtype for byte slices.",null,null],[12,"0","","",8,null],[11,"len","","Return the length of the byte slice.",8,[[],["usize",15]]],[11,"is_empty","","Return true if the byte slice is empty.",8,[[],["bool",15]]],[11,"skip","","Skip over the given number of bytes at the start of the …",8,[[["usize",15]],["result",4]]],[11,"read_bytes","","Return a reference to the given number of bytes at the …",8,[[["usize",15]],[["bytes",3],["result",4]]]],[11,"read_bytes_at","","Return a reference to the given number of bytes at the …",8,[[["usize",15]],[["bytes",3],["result",4]]]],[11,"read","","Return a reference to a <code>Pod</code> struct at the start of the …",8,[[],["result",4]]],[11,"read_at","","Return a reference to a <code>Pod</code> struct at the given offset of …",8,[[["usize",15]],["result",4]]],[11,"read_slice","","Return a reference to a slice of <code>Pod</code> structs at the start …",8,[[["usize",15]],["result",4]]],[11,"read_slice_at","","Return a reference to a slice of <code>Pod</code> structs at the given …",8,[[["usize",15]],["result",4]]],[11,"read_string","","Read a null terminated string.",8,[[],["result",4]]],[11,"read_string_at","","Read a null terminated string at an offset.",8,[[["usize",15]],["result",4]]],[8,"WritableBuffer","","Trait for writable buffer.",null,null],[10,"len","","Returns position/offset for data to be written at.",9,[[],["usize",15]]],[10,"is_empty","","Returns true if buffer contains no data.",9,[[],["bool",15]]],[10,"reserve","","Reserves specified number of bytes in the buffer.",9,[[["usize",15]],["result",4]]],[10,"resize","","Resizes buffer to the specified length, fills new items …",9,[[["usize",15],["u8",15]]]],[10,"extend","","Extends buffer with the specified slice of bytes.",9,[[]]],[0,"read","object","Interface for reading object files.",null,null],[0,"archive","object::read","Support for archive files.",null,null],[4,"ArchiveKind","object::read::archive","The kind of archive format.",null,null],[13,"Unknown","","There are no special files that indicate the archive …",10,null],[13,"Gnu","","The GNU (or System V) archive format.",10,null],[13,"Bsd","","The BSD archive format.",10,null],[13,"Coff","","The Windows COFF archive format.",10,null],[3,"ArchiveFile","","A partially parsed archive file.",null,null],[11,"parse","","Parse the archive header and special members.",11,[[],["result",6]]],[11,"kind","","Return the archive format.",11,[[],["archivekind",4]]],[11,"members","","Iterate over the members of the archive.",11,[[],["archivememberiterator",3]]],[3,"ArchiveMemberIterator","","An iterator over the members of an archive.",null,null],[3,"ArchiveMember","","A partially parsed archive member.",null,null],[11,"header","","Return the raw header.",12,[[],["header",3]]],[11,"name","","Return the parsed file name.",12,[[]]],[11,"date","","Parse the file modification timestamp from the header.",12,[[],[["option",4],["usize",15]]]],[11,"uid","","Parse the user ID from the header.",12,[[],[["option",4],["usize",15]]]],[11,"gid","","Parse the group ID from the header.",12,[[],[["option",4],["usize",15]]]],[11,"mode","","Parse the file mode from the header.",12,[[],[["option",4],["usize",15]]]],[11,"data","","Return the file data.",12,[[]]],[0,"coff","object::read","Support for reading Windows COFF files.",null,null],[3,"CoffFile","object::read::coff","A COFF object file.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"CoffSegmentIterator","","An iterator over the loadable sections of a <code>CoffFile</code>.",null,null],[3,"CoffSegment","","A loadable section of a <code>CoffFile</code>.",null,null],[3,"CoffSectionIterator","","An iterator over the sections of a <code>CoffFile</code>.",null,null],[3,"CoffSection","","A section of a <code>CoffFile</code>.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[3,"CoffSymbolTable","","A symbol table of a <code>CoffFile</code>.",null,null],[3,"CoffSymbolIterator","","An iterator over the symbols of a <code>CoffFile</code>.",null,null],[3,"CoffSymbol","","A symbol of a <code>CoffFile</code>.",null,null],[3,"CoffRelocationIterator","","An iterator over the relocations in a <code>CoffSection</code>.",null,null],[3,"CoffComdatIterator","","An iterator over the COMDAT section groups of a <code>CoffFile</code>.",null,null],[3,"CoffComdat","","A COMDAT section group of a <code>CoffFile</code>.",null,null],[3,"CoffComdatSectionIterator","","An iterator over the sections in a COMDAT section group …",null,null],[0,"elf","object::read","Support for reading ELF files.",null,null],[6,"ElfFile32","object::read::elf","A 32-bit ELF object file.",null,null],[6,"ElfFile64","","A 64-bit ELF object file.",null,null],[3,"ElfFile","","A partially parsed ELF file.",null,null],[8,"FileHeader","","A trait for generic access to <code>FileHeader32</code> and …",null,null],[16,"Word","","",13,null],[16,"Sword","","",13,null],[16,"Endian","","",13,null],[16,"ProgramHeader","","",13,null],[16,"SectionHeader","","",13,null],[16,"CompressionHeader","","",13,null],[16,"NoteHeader","","",13,null],[16,"Dyn","","",13,null],[16,"Sym","","",13,null],[16,"Rel","","",13,null],[16,"Rela","","",13,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",13,[[],["bool",15]]],[10,"e_ident","","",13,[[],["ident",3]]],[10,"e_type","","",13,[[],["u16",15]]],[10,"e_machine","","",13,[[],["u16",15]]],[10,"e_version","","",13,[[],["u32",15]]],[10,"e_entry","","",13,[[]]],[10,"e_phoff","","",13,[[]]],[10,"e_shoff","","",13,[[]]],[10,"e_flags","","",13,[[],["u32",15]]],[10,"e_ehsize","","",13,[[],["u16",15]]],[10,"e_phentsize","","",13,[[],["u16",15]]],[10,"e_phnum","","",13,[[],["u16",15]]],[10,"e_shentsize","","",13,[[],["u16",15]]],[10,"e_shnum","","",13,[[],["u16",15]]],[10,"e_shstrndx","","",13,[[],["u16",15]]],[11,"parse","","Read the file header.",13,[[["bytes",3]],["result",6]]],[11,"is_supported","","Check that the ident field in the file header is a …",13,[[],["bool",15]]],[11,"is_class_32","","",13,[[],["bool",15]]],[11,"is_class_64","","",13,[[],["bool",15]]],[11,"is_little_endian","","",13,[[],["bool",15]]],[11,"is_big_endian","","",13,[[],["bool",15]]],[11,"endian","","",13,[[],["result",6]]],[11,"section_0","","Return the first section header, if present.",13,[[["bytes",3]],[["option",4],["result",6]]]],[11,"phnum","","Return the <code>e_phnum</code> field of the header. Handles extended …",13,[[["bytes",3]],[["usize",15],["result",6]]]],[11,"shnum","","Return the <code>e_shnum</code> field of the header. Handles extended …",13,[[["bytes",3]],[["usize",15],["result",6]]]],[11,"shstrndx","","Return the <code>e_shstrndx</code> field of the header. Handles …",13,[[["bytes",3]],[["result",6],["u32",15]]]],[11,"program_headers","","Return the slice of program headers.",13,[[["bytes",3]],["result",6]]],[11,"section_headers","","Return the slice of section headers.",13,[[["bytes",3]],["result",6]]],[11,"section_strings","","Return the string table for the section headers.",13,[[["bytes",3]],[["result",6],["stringtable",3]]]],[11,"sections","","Return the section table.",13,[[["bytes",3]],[["sectiontable",3],["result",6]]]],[6,"ElfSegmentIterator32","","An iterator over the segments of an <code>ElfFile32</code>.",null,null],[6,"ElfSegmentIterator64","","An iterator over the segments of an <code>ElfFile64</code>.",null,null],[3,"ElfSegmentIterator","","An iterator over the segments of an <code>ElfFile</code>.",null,null],[6,"ElfSegment32","","A segment of an <code>ElfFile32</code>.",null,null],[6,"ElfSegment64","","A segment of an <code>ElfFile64</code>.",null,null],[3,"ElfSegment","","A segment of an <code>ElfFile</code>.",null,null],[8,"ProgramHeader","","A trait for generic access to <code>ProgramHeader32</code> and …",null,null],[16,"Elf","","",14,null],[16,"Word","","",14,null],[16,"Endian","","",14,null],[10,"p_type","","",14,[[],["u32",15]]],[10,"p_flags","","",14,[[],["u32",15]]],[10,"p_offset","","",14,[[]]],[10,"p_vaddr","","",14,[[]]],[10,"p_paddr","","",14,[[]]],[10,"p_filesz","","",14,[[]]],[10,"p_memsz","","",14,[[]]],[10,"p_align","","",14,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",14,[[]]],[11,"data","","Return the segment data.",14,[[["bytes",3]],[["result",4],["bytes",3]]]],[11,"data_as_array","","Return the segment data as a slice of the given type.",14,[[["bytes",3]],["result",4]]],[11,"data_range","","Return the segment data in the given virtual address range",14,[[["bytes",3],["u64",15]],[["result",4],["option",4]]]],[11,"dynamic","","Return entries in a dynamic segment.",14,[[["bytes",3]],[["result",6],["option",4]]]],[11,"notes","","Return a note iterator for the segment data.",14,[[["bytes",3]],[["option",4],["result",6]]]],[3,"SectionTable","","The table of section headers in an ELF file.",null,null],[6,"ElfSectionIterator32","","An iterator over the sections of an <code>ElfFile32</code>.",null,null],[6,"ElfSectionIterator64","","An iterator over the sections of an <code>ElfFile64</code>.",null,null],[3,"ElfSectionIterator","","An iterator over the sections of an <code>ElfFile</code>.",null,null],[6,"ElfSection32","","A section of an <code>ElfFile32</code>.",null,null],[6,"ElfSection64","","A section of an <code>ElfFile64</code>.",null,null],[3,"ElfSection","","A section of an <code>ElfFile</code>.",null,null],[8,"SectionHeader","","A trait for generic access to <code>SectionHeader32</code> and …",null,null],[16,"Elf","","",15,null],[16,"Word","","",15,null],[16,"Endian","","",15,null],[10,"sh_name","","",15,[[],["u32",15]]],[10,"sh_type","","",15,[[],["u32",15]]],[10,"sh_flags","","",15,[[]]],[10,"sh_addr","","",15,[[]]],[10,"sh_offset","","",15,[[]]],[10,"sh_size","","",15,[[]]],[10,"sh_link","","",15,[[],["u32",15]]],[10,"sh_info","","",15,[[],["u32",15]]],[10,"sh_addralign","","",15,[[]]],[10,"sh_entsize","","",15,[[]]],[11,"name","","Parse the section name from the string table.",15,[[["stringtable",3]],["result",6]]],[11,"file_range","","Return the offset and size of the section in the file.",15,[[],["option",4]]],[11,"data","","Return the section data.",15,[[["bytes",3]],[["result",4],["bytes",3]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",15,[[["bytes",3]],["result",4]]],[11,"symbols","","Return the symbols in the section.",15,[[["usize",15],["bytes",3],["sectiontable",3]],[["option",4],["result",6]]]],[11,"rel","","Return the <code>Elf::Rel</code> entries in the section.",15,[[["bytes",3]],[["option",4],["result",6]]]],[11,"rela","","Return the <code>Elf::Rela</code> entries in the section.",15,[[["bytes",3]],[["result",6],["option",4]]]],[11,"relocation_symbols","","Return the symbol table for a relocation section.",15,[[["bytes",3],["sectiontable",3]],[["symboltable",3],["result",6]]]],[11,"notes","","Return a note iterator for the section data.",15,[[["bytes",3]],[["result",6],["option",4]]]],[11,"group","","Return the contents of a group section.",15,[[["bytes",3]],[["result",6],["option",4]]]],[3,"SymbolTable","","A table of symbol entries in an ELF file.",null,null],[6,"ElfSymbolTable32","","A symbol table of an <code>ElfFile32</code>.",null,null],[6,"ElfSymbolTable64","","A symbol table of an <code>ElfFile32</code>.",null,null],[3,"ElfSymbolTable","","A symbol table of an <code>ElfFile</code>.",null,null],[6,"ElfSymbolIterator32","","An iterator over the symbols of an <code>ElfFile32</code>.",null,null],[6,"ElfSymbolIterator64","","An iterator over the symbols of an <code>ElfFile64</code>.",null,null],[3,"ElfSymbolIterator","","An iterator over the symbols of an <code>ElfFile</code>.",null,null],[6,"ElfSymbol32","","A symbol of an <code>ElfFile32</code>.",null,null],[6,"ElfSymbol64","","A symbol of an <code>ElfFile64</code>.",null,null],[3,"ElfSymbol","","A symbol of an <code>ElfFile</code>.",null,null],[8,"Sym","","A trait for generic access to <code>Sym32</code> and <code>Sym64</code>.",null,null],[16,"Word","","",16,null],[16,"Endian","","",16,null],[10,"st_name","","",16,[[],["u32",15]]],[10,"st_info","","",16,[[],["u8",15]]],[10,"st_bind","","",16,[[],["u8",15]]],[10,"st_type","","",16,[[],["u8",15]]],[10,"st_other","","",16,[[],["u8",15]]],[10,"st_visibility","","",16,[[],["u8",15]]],[10,"st_shndx","","",16,[[],["u16",15]]],[10,"st_value","","",16,[[]]],[10,"st_size","","",16,[[]]],[11,"name","","Parse the symbol name from the string table.",16,[[["stringtable",3]],["result",6]]],[11,"is_undefined","","Return true if the symbol is undefined.",16,[[],["bool",15]]],[11,"is_definition","","Return true if the symbol is a definition of a function …",16,[[],["bool",15]]],[3,"RelocationSections","","A mapping from section index to associated relocation …",null,null],[6,"ElfDynamicRelocationIterator32","","An iterator over the dynamic relocations for an <code>ElfFile32</code>.",null,null],[6,"ElfDynamicRelocationIterator64","","An iterator over the dynamic relocations for an <code>ElfFile64</code>.",null,null],[3,"ElfDynamicRelocationIterator","","An iterator over the dynamic relocations for an <code>ElfFile</code>.",null,null],[6,"ElfSectionRelocationIterator32","","An iterator over the relocations for an <code>ElfSection32</code>.",null,null],[6,"ElfSectionRelocationIterator64","","An iterator over the relocations for an <code>ElfSection64</code>.",null,null],[3,"ElfSectionRelocationIterator","","An iterator over the relocations for an <code>ElfSection</code>.",null,null],[8,"Rel","","A trait for generic access to <code>Rel32</code> and <code>Rel64</code>.",null,null],[16,"Word","","",17,null],[16,"Sword","","",17,null],[16,"Endian","","",17,null],[10,"r_offset","","",17,[[]]],[10,"r_info","","",17,[[]]],[10,"r_sym","","",17,[[],["u32",15]]],[10,"r_type","","",17,[[],["u32",15]]],[8,"Rela","","A trait for generic access to <code>Rela32</code> and <code>Rela64</code>.",null,null],[16,"Word","","",18,null],[16,"Sword","","",18,null],[16,"Endian","","",18,null],[10,"r_offset","","",18,[[]]],[10,"r_info","","",18,[[]]],[10,"r_addend","","",18,[[]]],[10,"r_sym","","",18,[[],["u32",15]]],[10,"r_type","","",18,[[],["u32",15]]],[6,"ElfComdatIterator32","","An iterator over the COMDAT section groups of an <code>ElfFile32</code>…",null,null],[6,"ElfComdatIterator64","","An iterator over the COMDAT section groups of an <code>ElfFile64</code>…",null,null],[3,"ElfComdatIterator","","An iterator over the COMDAT section groups of an <code>ElfFile</code>.",null,null],[6,"ElfComdat32","","A COMDAT section group of an <code>ElfFile32</code>.",null,null],[6,"ElfComdat64","","A COMDAT section group of an <code>ElfFile64</code>.",null,null],[3,"ElfComdat","","A COMDAT section group of an <code>ElfFile</code>.",null,null],[6,"ElfComdatSectionIterator32","","An iterator over the sections in a COMDAT section group …",null,null],[6,"ElfComdatSectionIterator64","","An iterator over the sections in a COMDAT section group …",null,null],[3,"ElfComdatSectionIterator","","An iterator over the sections in a COMDAT section group …",null,null],[8,"Dyn","","A trait for generic access to <code>Dyn32</code> and <code>Dyn64</code>.",null,null],[16,"Word","","",19,null],[16,"Endian","","",19,null],[10,"d_tag","","",19,[[]]],[10,"d_val","","",19,[[]]],[8,"CompressionHeader","","A trait for generic access to <code>CompressionHeader32</code> and …",null,null],[16,"Word","","",20,null],[16,"Endian","","",20,null],[10,"ch_type","","",20,[[],["u32",15]]],[10,"ch_size","","",20,[[]]],[10,"ch_addralign","","",20,[[]]],[3,"NoteIterator","","An iterator over the notes in an ELF section or segment.",null,null],[3,"Note","","A parsed <code>NoteHeader</code>.",null,null],[8,"NoteHeader","","A trait for generic access to <code>NoteHeader32</code> and …",null,null],[16,"Endian","","",21,null],[10,"n_namesz","","",21,[[],["u32",15]]],[10,"n_descsz","","",21,[[],["u32",15]]],[10,"n_type","","",21,[[],["u32",15]]],[0,"macho","object::read","Support for reading Mach-O files.",null,null],[8,"FatArch","object::read::macho","A trait for generic access to <code>FatArch32</code> and <code>FatArch64</code>.",null,null],[16,"Word","","",22,null],[10,"cputype","","",22,[[],["u32",15]]],[10,"cpusubtype","","",22,[[],["u32",15]]],[10,"offset","","",22,[[]]],[10,"size","","",22,[[]]],[10,"align","","",22,[[],["u32",15]]],[11,"architecture","","",22,[[],["architecture",4]]],[11,"data","","",22,[[],["result",6]]],[6,"MachOFile32","","A 32-bit Mach-O object file.",null,null],[6,"MachOFile64","","A 64-bit Mach-O object file.",null,null],[3,"MachOFile","","A partially parsed Mach-O file.",null,null],[6,"MachOComdatIterator32","","An iterator over the COMDAT section groups of a …",null,null],[6,"MachOComdatIterator64","","An iterator over the COMDAT section groups of a …",null,null],[3,"MachOComdatIterator","","An iterator over the COMDAT section groups of a <code>MachOFile</code>.",null,null],[6,"MachOComdat32","","A COMDAT section group of a <code>MachOFile32</code>.",null,null],[6,"MachOComdat64","","A COMDAT section group of a <code>MachOFile64</code>.",null,null],[3,"MachOComdat","","A COMDAT section group of a <code>MachOFile</code>.",null,null],[6,"MachOComdatSectionIterator32","","An iterator over the sections in a COMDAT section group …",null,null],[6,"MachOComdatSectionIterator64","","An iterator over the sections in a COMDAT section group …",null,null],[3,"MachOComdatSectionIterator","","An iterator over the sections in a COMDAT section group …",null,null],[8,"MachHeader","","A trait for generic access to <code>MachHeader32</code> and …",null,null],[16,"Word","","",23,null],[16,"Endian","","",23,null],[16,"Segment","","",23,null],[16,"Section","","",23,null],[16,"Nlist","","",23,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",23,[[],["bool",15]]],[10,"is_big_endian","","Return true if the <code>magic</code> field signifies big-endian.",23,[[],["bool",15]]],[10,"is_little_endian","","Return true if the <code>magic</code> field signifies little-endian.",23,[[],["bool",15]]],[10,"magic","","",23,[[],["u32",15]]],[10,"cputype","","",23,[[],["u32",15]]],[10,"cpusubtype","","",23,[[],["u32",15]]],[10,"filetype","","",23,[[],["u32",15]]],[10,"ncmds","","",23,[[],["u32",15]]],[10,"sizeofcmds","","",23,[[],["u32",15]]],[10,"flags","","",23,[[],["u32",15]]],[11,"parse","","Read the file header.",23,[[["bytes",3]],["result",6]]],[11,"is_supported","","",23,[[],["bool",15]]],[11,"endian","","",23,[[],["result",6]]],[11,"load_commands","","",23,[[["bytes",3]],[["macholoadcommanditerator",3],["result",6]]]],[11,"uuid","","Return the UUID from the <code>LC_UUID</code> load command, if one is …",23,[[["bytes",3]],[["option",4],["result",6]]]],[6,"MachOSegmentIterator32","","An iterator over the segments of a <code>MachOFile32</code>.",null,null],[6,"MachOSegmentIterator64","","An iterator over the segments of a <code>MachOFile64</code>.",null,null],[3,"MachOSegmentIterator","","An iterator over the segments of a <code>MachOFile</code>.",null,null],[6,"MachOSegment32","","A segment of a <code>MachOFile32</code>.",null,null],[6,"MachOSegment64","","A segment of a <code>MachOFile64</code>.",null,null],[3,"MachOSegment","","A segment of a <code>MachOFile</code>.",null,null],[8,"Segment","","A trait for generic access to <code>SegmentCommand32</code> and …",null,null],[16,"Word","","",24,null],[16,"Endian","","",24,null],[16,"Section","","",24,null],[10,"from_command","","",24,[[["macholoadcommand",3]],[["result",6],["option",4]]]],[10,"cmd","","",24,[[],["u32",15]]],[10,"cmdsize","","",24,[[],["u32",15]]],[10,"segname","","",24,[[]]],[10,"vmaddr","","",24,[[]]],[10,"vmsize","","",24,[[]]],[10,"fileoff","","",24,[[]]],[10,"filesize","","",24,[[]]],[10,"maxprot","","",24,[[],["u32",15]]],[10,"initprot","","",24,[[],["u32",15]]],[10,"nsects","","",24,[[],["u32",15]]],[10,"flags","","",24,[[],["u32",15]]],[11,"name","","Return the <code>segname</code> bytes up until the null terminator.",24,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",24,[[]]],[11,"data","","Get the segment data from the file data.",24,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"sections","","Get the array of sections from the data following the …",24,[[["bytes",3]],["result",6]]],[6,"MachOSectionIterator32","","An iterator over the sections of a <code>MachOFile32</code>.",null,null],[6,"MachOSectionIterator64","","An iterator over the sections of a <code>MachOFile64</code>.",null,null],[3,"MachOSectionIterator","","An iterator over the sections of a <code>MachOFile</code>.",null,null],[6,"MachOSection32","","A section of a <code>MachOFile32</code>.",null,null],[6,"MachOSection64","","A section of a <code>MachOFile64</code>.",null,null],[3,"MachOSection","","A section of a <code>MachOFile</code>.",null,null],[8,"Section","","A trait for generic access to <code>Section32</code> and <code>Section64</code>.",null,null],[16,"Word","","",25,null],[16,"Endian","","",25,null],[10,"sectname","","",25,[[]]],[10,"segname","","",25,[[]]],[10,"addr","","",25,[[]]],[10,"size","","",25,[[]]],[10,"offset","","",25,[[],["u32",15]]],[10,"align","","",25,[[],["u32",15]]],[10,"reloff","","",25,[[],["u32",15]]],[10,"nreloc","","",25,[[],["u32",15]]],[10,"flags","","",25,[[],["u32",15]]],[11,"name","","Return the <code>sectname</code> bytes up until the null terminator.",25,[[]]],[11,"segment_name","","Return the <code>segname</code> bytes up until the null terminator.",25,[[]]],[11,"file_range","","Return the offset and size of the section in the file.",25,[[],["option",4]]],[11,"data","","Return the section data.",25,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"relocations","","Return the relocation array.",25,[[["bytes",3]],["result",6]]],[3,"SymbolTable","","A table of symbol entries in a Mach-O file.",null,null],[6,"MachOSymbolTable32","","An iterator over the symbols of a <code>MachOFile32</code>.",null,null],[6,"MachOSymbolTable64","","An iterator over the symbols of a <code>MachOFile64</code>.",null,null],[3,"MachOSymbolTable","","A symbol table of a <code>MachOFile</code>.",null,null],[6,"MachOSymbolIterator32","","An iterator over the symbols of a <code>MachOFile32</code>.",null,null],[6,"MachOSymbolIterator64","","An iterator over the symbols of a <code>MachOFile64</code>.",null,null],[3,"MachOSymbolIterator","","An iterator over the symbols of a <code>MachOFile</code>.",null,null],[6,"MachOSymbol32","","A symbol of a <code>MachOFile32</code>.",null,null],[6,"MachOSymbol64","","A symbol of a <code>MachOFile64</code>.",null,null],[3,"MachOSymbol","","A symbol of a <code>MachOFile</code>.",null,null],[8,"Nlist","","A trait for generic access to <code>Nlist32</code> and <code>Nlist64</code>.",null,null],[16,"Word","","",26,null],[16,"Endian","","",26,null],[10,"n_strx","","",26,[[],["u32",15]]],[10,"n_type","","",26,[[],["u8",15]]],[10,"n_sect","","",26,[[],["u8",15]]],[10,"n_desc","","",26,[[],["u16",15]]],[10,"n_value","","",26,[[]]],[11,"name","","",26,[[["stringtable",3]],["result",6]]],[11,"is_definition","","Return true if the symbol is a definition of a function …",26,[[],["bool",15]]],[11,"library_ordinal","","Return the library ordinal.",26,[[],["u8",15]]],[6,"MachORelocationIterator32","","An iterator over the relocations in a <code>MachOSection32</code>.",null,null],[6,"MachORelocationIterator64","","An iterator over the relocations in a <code>MachOSection64</code>.",null,null],[3,"MachORelocationIterator","","An iterator over the relocations in a <code>MachOSection</code>.",null,null],[0,"pe","object::read","Support for reading ELF files.",null,null],[6,"PeFile32","object::read::pe","A PE32 (32-bit) image file.",null,null],[6,"PeFile64","","A PE32+ (64-bit) image file.",null,null],[3,"PeFile","","A PE object file.",null,null],[6,"PeComdatIterator32","","An iterator over the COMDAT section groups of a <code>PeFile32</code>.",null,null],[6,"PeComdatIterator64","","An iterator over the COMDAT section groups of a <code>PeFile64</code>.",null,null],[3,"PeComdatIterator","","An iterator over the COMDAT section groups of a <code>PeFile</code>.",null,null],[6,"PeComdat32","","A COMDAT section group of a <code>PeFile32</code>.",null,null],[6,"PeComdat64","","A COMDAT section group of a <code>PeFile64</code>.",null,null],[3,"PeComdat","","A COMDAT section group of a <code>PeFile</code>.",null,null],[6,"PeComdatSectionIterator32","","An iterator over the sections in a COMDAT section group …",null,null],[6,"PeComdatSectionIterator64","","An iterator over the sections in a COMDAT section group …",null,null],[3,"PeComdatSectionIterator","","An iterator over the sections in a COMDAT section group …",null,null],[8,"ImageNtHeaders","","A trait for generic access to <code>ImageNtHeaders32</code> and …",null,null],[16,"ImageOptionalHeader","","",27,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",27,[[],["bool",15]]],[10,"is_valid_optional_magic","","Return true if the magic field in the optional header is …",27,[[],["bool",15]]],[10,"signature","","Return the signature",27,[[],["u32",15]]],[10,"file_header","","Return the file header.",27,[[],["imagefileheader",3]]],[10,"optional_header","","Return the optional header.",27,[[]]],[11,"parse","","Read the NT headers, including the data directories.",27,[[["imagedosheader",3],["bytes",3]],["result",6]]],[11,"sections","","Read the section table.",27,[[["bytes",3]],[["sectiontable",3],["result",6]]]],[11,"symbols","","Read the symbol table and string table.",27,[[["bytes",3]],[["symboltable",3],["result",6]]]],[8,"ImageOptionalHeader","","A trait for generic access to <code>ImageOptionalHeader32</code> and …",null,null],[10,"magic","","",28,[[],["u16",15]]],[10,"major_linker_version","","",28,[[],["u8",15]]],[10,"minor_linker_version","","",28,[[],["u8",15]]],[10,"size_of_code","","",28,[[],["u32",15]]],[10,"size_of_initialized_data","","",28,[[],["u32",15]]],[10,"size_of_uninitialized_data","","",28,[[],["u32",15]]],[10,"address_of_entry_point","","",28,[[],["u32",15]]],[10,"base_of_code","","",28,[[],["u32",15]]],[10,"image_base","","",28,[[],["u64",15]]],[10,"section_alignment","","",28,[[],["u32",15]]],[10,"file_alignment","","",28,[[],["u32",15]]],[10,"major_operating_system_version","","",28,[[],["u16",15]]],[10,"minor_operating_system_version","","",28,[[],["u16",15]]],[10,"major_image_version","","",28,[[],["u16",15]]],[10,"minor_image_version","","",28,[[],["u16",15]]],[10,"major_subsystem_version","","",28,[[],["u16",15]]],[10,"minor_subsystem_version","","",28,[[],["u16",15]]],[10,"win32_version_value","","",28,[[],["u32",15]]],[10,"size_of_image","","",28,[[],["u32",15]]],[10,"size_of_headers","","",28,[[],["u32",15]]],[10,"check_sum","","",28,[[],["u32",15]]],[10,"subsystem","","",28,[[],["u16",15]]],[10,"dll_characteristics","","",28,[[],["u16",15]]],[10,"size_of_stack_reserve","","",28,[[],["u64",15]]],[10,"size_of_stack_commit","","",28,[[],["u64",15]]],[10,"size_of_heap_reserve","","",28,[[],["u64",15]]],[10,"size_of_heap_commit","","",28,[[],["u64",15]]],[10,"loader_flags","","",28,[[],["u32",15]]],[10,"number_of_rva_and_sizes","","",28,[[],["u32",15]]],[6,"PeSegmentIterator32","","An iterator over the loadable sections of a <code>PeFile32</code>.",null,null],[6,"PeSegmentIterator64","","An iterator over the loadable sections of a <code>PeFile64</code>.",null,null],[3,"PeSegmentIterator","","An iterator over the loadable sections of a <code>PeFile</code>.",null,null],[6,"PeSegment32","","A loadable section of a <code>PeFile32</code>.",null,null],[6,"PeSegment64","","A loadable section of a <code>PeFile64</code>.",null,null],[3,"PeSegment","","A loadable section of a <code>PeFile</code>.",null,null],[6,"PeSectionIterator32","","An iterator over the sections of a <code>PeFile32</code>.",null,null],[6,"PeSectionIterator64","","An iterator over the sections of a <code>PeFile64</code>.",null,null],[3,"PeSectionIterator","","An iterator over the sections of a <code>PeFile</code>.",null,null],[6,"PeSection32","","A section of a <code>PeFile32</code>.",null,null],[6,"PeSection64","","A section of a <code>PeFile64</code>.",null,null],[3,"PeSection","","A section of a <code>PeFile</code>.",null,null],[3,"PeRelocationIterator","","An iterator over the relocations in an <code>PeSection</code>.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[3,"StringTable","object::read","A table of zero-terminated strings.",null,null],[3,"File","","An object file.",null,null],[3,"SegmentIterator","","An iterator over the segments of a <code>File</code>.",null,null],[3,"Segment","","A segment of a <code>File</code>.",null,null],[3,"SectionIterator","","An iterator of the sections of a <code>File</code>.",null,null],[3,"Section","","A Section of a File",null,null],[3,"ComdatIterator","","An iterator of the COMDAT section groups of a <code>File</code>.",null,null],[3,"Comdat","","A COMDAT section group of a <code>File</code>.",null,null],[3,"ComdatSectionIterator","","An iterator over COMDAT section entries.",null,null],[3,"SymbolTable","","A symbol table.",null,null],[3,"SymbolIterator","","An iterator over symbol table entries.",null,null],[3,"Symbol","","A symbol table entry.",null,null],[3,"DynamicRelocationIterator","","An iterator over dynamic relocation entries.",null,null],[3,"SectionRelocationIterator","","An iterator over section relocation entries.",null,null],[8,"Object","","An object file.",null,null],[16,"Segment","","A segment in the object file.",29,null],[16,"SegmentIterator","","An iterator over the segments in the object file.",29,null],[16,"Section","","A section in the object file.",29,null],[16,"SectionIterator","","An iterator over the sections in the object file.",29,null],[16,"Comdat","","A COMDAT section group in the object file.",29,null],[16,"ComdatIterator","","An iterator over the COMDAT section groups in the object …",29,null],[16,"Symbol","","A symbol in the object file.",29,null],[16,"SymbolIterator","","An iterator over symbols in the object file.",29,null],[16,"SymbolTable","","A symbol table in the object file.",29,null],[16,"DynamicRelocationIterator","","An iterator over dynamic relocations in the file.",29,null],[10,"architecture","","Get the architecture type of the file.",29,[[],["architecture",4]]],[11,"endianness","","Get the endianness of the file.",29,[[],["endianness",4]]],[10,"is_little_endian","","Return true if the file is little endian, false if it is …",29,[[],["bool",15]]],[10,"is_64","","Return true if the file can contain 64-bit addresses.",29,[[],["bool",15]]],[10,"segments","","Get an iterator over the segments in the file.",29,[[]]],[10,"entry","","Get the entry point address of the binary",29,[[],["u64",15]]],[10,"section_by_name","","Get the section named <code>section_name</code>, if such a section …",29,[[["str",15]],["option",4]]],[10,"section_by_index","","Get the section at the given index.",29,[[["sectionindex",3]],["result",6]]],[10,"sections","","Get an iterator over the sections in the file.",29,[[]]],[10,"comdats","","Get an iterator over the COMDAT section groups in the …",29,[[]]],[10,"symbol_table","","Get the symbol table, if any.",29,[[],["option",4]]],[10,"symbol_by_index","","Get the debugging symbol at the given index.",29,[[["symbolindex",3]],["result",6]]],[10,"symbols","","Get an iterator over the debugging symbols in the file.",29,[[]]],[10,"dynamic_symbol_table","","Get the dynamic linking symbol table, if any.",29,[[],["option",4]]],[10,"dynamic_symbols","","Get an iterator over the dynamic linking symbols in the …",29,[[]]],[10,"dynamic_relocations","","Get the dynamic relocations for this file.",29,[[],["option",4]]],[11,"symbol_map","","Construct a map from addresses to symbol names.",29,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object …",29,[[],["objectmap",3]]],[10,"imports","","Get the imported symbols.",29,[[],[["result",6],["vec",3]]]],[10,"exports","","Get the exported symbols.",29,[[],[["vec",3],["result",6]]]],[10,"has_debug_symbols","","Return true if the file contains debug information …",29,[[],["bool",15]]],[11,"mach_uuid","","The UUID from a Mach-O <code>LC_UUID</code> load command.",29,[[],[["option",4],["result",6]]]],[11,"build_id","","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.",29,[[],[["result",6],["option",4]]]],[11,"gnu_debuglink","","The filename and CRC from a <code>.gnu_debuglink</code> section.",29,[[],[["option",4],["result",6]]]],[10,"flags","","File flags that are specific to each file format.",29,[[],["fileflags",4]]],[8,"ObjectSegment","","A loadable segment defined in an object file.",null,null],[10,"address","","Returns the virtual address of the segment.",30,[[],["u64",15]]],[10,"size","","Returns the size of the segment in memory.",30,[[],["u64",15]]],[10,"align","","Returns the alignment of the segment in memory.",30,[[],["u64",15]]],[10,"file_range","","Returns the offset and size of the segment in the file.",30,[[]]],[10,"data","","Returns a reference to the file contents of the segment.",30,[[],["result",6]]],[10,"data_range","","Return the segment data in the given range.",30,[[["u64",15]],[["result",6],["option",4]]]],[10,"name","","Returns the name of the segment.",30,[[],[["result",6],["option",4]]]],[8,"ObjectSection","","A section defined in an object file.",null,null],[16,"RelocationIterator","","An iterator over the relocations for a section.",31,null],[10,"index","","Returns the section index.",31,[[],["sectionindex",3]]],[10,"address","","Returns the address of the section.",31,[[],["u64",15]]],[10,"size","","Returns the size of the section in memory.",31,[[],["u64",15]]],[10,"align","","Returns the alignment of the section in memory.",31,[[],["u64",15]]],[10,"file_range","","Returns offset and size of on-disk segment (if any).",31,[[],["option",4]]],[10,"data","","Returns the raw contents of the section.",31,[[],["result",6]]],[10,"data_range","","Return the raw contents of the section data in the given …",31,[[["u64",15]],[["result",6],["option",4]]]],[10,"compressed_data","","Returns the potentially compressed contents of the …",31,[[],[["result",6],["compresseddata",3]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",31,[[],[["result",6],["cow",4]]]],[10,"name","","Returns the name of the section.",31,[[],[["result",6],["str",15]]]],[10,"segment_name","","Returns the name of the segment for this section.",31,[[],[["result",6],["option",4]]]],[10,"kind","","Return the kind of this section.",31,[[],["sectionkind",4]]],[10,"relocations","","Get the relocations for this section.",31,[[]]],[10,"flags","","Section flags that are specific to each file format.",31,[[],["sectionflags",4]]],[8,"ObjectComdat","","A COMDAT section group defined in an object file.",null,null],[16,"SectionIterator","","An iterator over the sections in the object file.",32,null],[10,"kind","","Returns the COMDAT selection kind.",32,[[],["comdatkind",4]]],[10,"symbol","","Returns the index of the symbol used for the name of …",32,[[],["symbolindex",3]]],[10,"name","","Returns the name of the COMDAT section group.",32,[[],[["result",6],["str",15]]]],[10,"sections","","Get the sections in this section group.",32,[[]]],[8,"ObjectSymbolTable","","A symbol table.",null,null],[16,"Symbol","","A symbol table entry.",33,null],[16,"SymbolIterator","","An iterator over the symbols in a symbol table.",33,null],[10,"symbols","","Get an iterator over the symbols in the table.",33,[[]]],[10,"symbol_by_index","","Get the symbol at the given index.",33,[[["symbolindex",3]],["result",6]]],[8,"ObjectSymbol","","A symbol table entry.",null,null],[10,"index","","The index of the symbol.",34,[[],["symbolindex",3]]],[10,"name","","The name of the symbol.",34,[[],[["result",6],["str",15]]]],[10,"address","","The address of the symbol. May be zero if the address is …",34,[[],["u64",15]]],[10,"size","","The size of the symbol. May be zero if the size is …",34,[[],["u64",15]]],[10,"kind","","Return the kind of this symbol.",34,[[],["symbolkind",4]]],[10,"section","","Returns the section where the symbol is defined.",34,[[],["symbolsection",4]]],[11,"section_index","","Returns the section index for the section containing this …",34,[[],[["option",4],["sectionindex",3]]]],[10,"is_undefined","","Return true if the symbol is undefined.",34,[[],["bool",15]]],[10,"is_definition","","Return true if the symbol is a definition of a function …",34,[[],["bool",15]]],[10,"is_common","","Return true if the symbol is common data.",34,[[],["bool",15]]],[10,"is_weak","","Return true if the symbol is weak.",34,[[],["bool",15]]],[10,"scope","","Returns the symbol scope.",34,[[],["symbolscope",4]]],[10,"is_global","","Return true if the symbol visible outside of the …",34,[[],["bool",15]]],[10,"is_local","","Return true if the symbol is only visible within the …",34,[[],["bool",15]]],[10,"flags","","Symbol flags that are specific to each file format.",34,[[],[["sectionindex",3],["symbolflags",4]]]],[3,"NoDynamicRelocationIterator","","An iterator for files that don\'t have dynamic relocations.",null,null],[3,"Error","","The error type used within the read module.",null,null],[6,"Result","","The result type used within the read module.",null,null],[6,"NativeFile","","The native executable file for the target platform.",null,null],[4,"FileKind","","An object file kind.",null,null],[13,"Archive","","A Unix archive.",35,null],[13,"Coff","","A COFF object file.",35,null],[13,"Elf32","","A 32-bit ELF file.",35,null],[13,"Elf64","","A 64-bit ELF file.",35,null],[13,"MachO32","","A 32-bit Mach-O file.",35,null],[13,"MachO64","","A 64-bit Mach-O file.",35,null],[13,"MachOFat32","","A 32-bit Mach-O fat binary.",35,null],[13,"MachOFat64","","A 64-bit Mach-O fat binary.",35,null],[13,"Pe32","","A 32-bit PE file.",35,null],[13,"Pe64","","A 64-bit PE file.",35,null],[11,"parse","","Determine a file kind by parsing the start of the file.",35,[[],[["filekind",4],["result",6]]]],[3,"SectionIndex","","The index used to identify a section of a file.",null,null],[12,"0","","",36,null],[3,"SymbolIndex","","The index used to identify a symbol of a file.",null,null],[12,"0","","",37,null],[4,"SymbolSection","","The section where a symbol is defined.",null,null],[13,"Unknown","","The section is unknown.",38,null],[13,"None","","The section is not applicable for this symbol (such as …",38,null],[13,"Undefined","","The symbol is undefined.",38,null],[13,"Absolute","","The symbol has an absolute value.",38,null],[13,"Common","","The symbol is a zero-initialized symbol that will be …",38,null],[13,"Section","","The symbol is defined in the given section.",38,null],[11,"index","","Returns the section index for the section where the …",38,[[],[["option",4],["sectionindex",3]]]],[8,"SymbolMapEntry","","An entry in a <code>SymbolMap</code>.",null,null],[10,"address","","The symbol address.",39,[[],["u64",15]]],[3,"SymbolMap","","A map from addresses to symbols.",null,null],[11,"new","","Construct a new symbol map.",40,[[["vec",3]]]],[11,"get","","Get the symbol before the given address.",40,[[["u64",15]],["option",4]]],[11,"symbols","","Get all symbols in the map.",40,[[]]],[3,"SymbolMapName","","A <code>SymbolMap</code> entry for symbol names.",null,null],[11,"new","","Construct a <code>SymbolMapName</code>.",41,[[["str",15],["u64",15]]]],[11,"address","","The symbol address.",41,[[],["u64",15]]],[11,"name","","The symbol name.",41,[[],["str",15]]],[3,"ObjectMap","","A map from addresses to symbol names and object files.",null,null],[11,"get","","Get the entry containing the given address.",42,[[["u64",15]],[["option",4],["objectmapentry",3]]]],[11,"symbols","","Get all symbols in the map.",42,[[]]],[11,"objects","","Get all objects in the map.",42,[[]]],[3,"ObjectMapEntry","","A <code>ObjectMap</code> entry.",null,null],[11,"address","","Get the symbol address.",43,[[],["u64",15]]],[11,"size","","Get the symbol size.",43,[[],["u64",15]]],[11,"name","","Get the symbol name.",43,[[]]],[11,"object_index","","Get the index of the object file name.",43,[[],["usize",15]]],[11,"object","","Get the object file name.",43,[[["objectmap",3]]]],[3,"Import","","An imported symbol.",null,null],[11,"name","","The symbol name.",44,[[]]],[11,"library","","The name of the library to import the symbol from.",44,[[]]],[3,"Export","","An exported symbol.",null,null],[11,"name","","The symbol name.",45,[[]]],[11,"address","","The symbol address.",45,[[],["u64",15]]],[4,"RelocationTarget","","The target referenced by a relocation.",null,null],[13,"Symbol","","The target is a symbol.",46,null],[13,"Section","","The target is a section.",46,null],[13,"Absolute","","The offset is an absolute address.",46,null],[3,"Relocation","","A relocation entry.",null,null],[11,"kind","","The operation used to calculate the result of the …",47,[[],["relocationkind",4]]],[11,"encoding","","Information about how the result of the relocation …",47,[[],["relocationencoding",4]]],[11,"size","","The size in bits of the place of the relocation.",47,[[],["u8",15]]],[11,"target","","The target of the relocation.",47,[[],["relocationtarget",4]]],[11,"addend","","The addend to use in the relocation calculation.",47,[[],["i64",15]]],[11,"set_addend","","Set the addend to use in the relocation calculation.",47,[[["i64",15]]]],[11,"has_implicit_addend","","Returns true if there is an implicit addend stored in the …",47,[[],["bool",15]]],[3,"CompressedData","","Data that may be compressed.",null,null],[12,"format","","The data compression format.",48,null],[12,"data","","The compressed data.",48,null],[12,"uncompressed_size","","The uncompressed data size.",48,null],[4,"CompressionFormat","","A data compression format.",null,null],[13,"None","","The data is uncompressed.",49,null],[13,"Unknown","","The data is compressed, but the compression format is …",49,null],[13,"Zlib","","ZLIB/DEFLATE.",49,null],[11,"none","","Data that is uncompressed.",48,[[]]],[11,"decompress","","Return the uncompressed data.",48,[[],[["result",6],["cow",4]]]],[0,"archive","object","Archive definitions.",null,null],[17,"MAGIC","object::archive","File identification bytes stored at the beginning of the …",null,null],[17,"THIN_MAGIC","","File identification bytes stored at the beginning of a …",null,null],[17,"TERMINATOR","","The terminator for each archive member header.",null,null],[3,"Header","","The header at the start of an archive member.",null,null],[12,"name","","The file name.",50,null],[12,"date","","File modification timestamp in decimal.",50,null],[12,"uid","","User ID in decimal.",50,null],[12,"gid","","Group ID in decimal.",50,null],[12,"mode","","File mode in octal.",50,null],[12,"size","","File size in decimal.",50,null],[12,"terminator","","Must be equal to <code>TERMINATOR</code>.",50,null],[0,"elf","object","ELF definitions.",null,null],[3,"FileHeader32","object::elf","The header at the start of every 32-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",51,null],[12,"e_type","","Object file type. One of the <code>ET_*</code> constants.",51,null],[12,"e_machine","","Architecture. One of the <code>EM_*</code> constants.",51,null],[12,"e_version","","Object file version. Must be <code>EV_CURRENT</code>.",51,null],[12,"e_entry","","Entry point virtual address.",51,null],[12,"e_phoff","","Program header table file offset.",51,null],[12,"e_shoff","","Section header table file offset.",51,null],[12,"e_flags","","Processor-specific flags.",51,null],[12,"e_ehsize","","Size in bytes of this header.",51,null],[12,"e_phentsize","","Program header table entry size.",51,null],[12,"e_phnum","","Program header table entry count.",51,null],[12,"e_shentsize","","Section header table entry size.",51,null],[12,"e_shnum","","Section header table entry count.",51,null],[12,"e_shstrndx","","Section header string table index.",51,null],[3,"FileHeader64","","The header at the start of every 64-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",52,null],[12,"e_type","","Object file type. One of the <code>ET_*</code> constants.",52,null],[12,"e_machine","","Architecture. One of the <code>EM_*</code> constants.",52,null],[12,"e_version","","Object file version. Must be <code>EV_CURRENT</code>.",52,null],[12,"e_entry","","Entry point virtual address.",52,null],[12,"e_phoff","","Program header table file offset.",52,null],[12,"e_shoff","","Section header table file offset.",52,null],[12,"e_flags","","Processor-specific flags.",52,null],[12,"e_ehsize","","Size in bytes of this header.",52,null],[12,"e_phentsize","","Program header table entry size.",52,null],[12,"e_phnum","","Program header table entry count.",52,null],[12,"e_shentsize","","Section header table entry size.",52,null],[12,"e_shnum","","Section header table entry count.",52,null],[12,"e_shstrndx","","Section header string table index.",52,null],[3,"Ident","","Magic number and other information.",null,null],[12,"magic","","Magic number. Must be <code>ELFMAG</code>.",53,null],[12,"class","","File class. One of the <code>ELFCLASS*</code> constants.",53,null],[12,"data","","Data encoding. One of the <code>ELFDATA*</code> constants.",53,null],[12,"version","","ELF version. Must be <code>EV_CURRENT</code>.",53,null],[12,"os_abi","","OS ABI identification. One of the <code>ELFOSABI*</code> constants.",53,null],[12,"abi_version","","ABI version.",53,null],[12,"padding","","Padding bytes.",53,null],[17,"ELFMAG","","File identification bytes stored in <code>Ident::magic</code>.",null,null],[17,"ELFCLASSNONE","","Invalid class.",null,null],[17,"ELFCLASS32","","32-bit object.",null,null],[17,"ELFCLASS64","","64-bit object.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2\'s complement, little endian.",null,null],[17,"ELFDATA2MSB","","2\'s complement, big endian.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"ELFOSABI_SYSV","","UNIX System V ABI.",null,null],[17,"ELFOSABI_HPUX","","HP-UX.",null,null],[17,"ELFOSABI_NETBSD","","NetBSD.",null,null],[17,"ELFOSABI_GNU","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_LINUX","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_SOLARIS","","Sun Solaris.",null,null],[17,"ELFOSABI_AIX","","IBM AIX.",null,null],[17,"ELFOSABI_IRIX","","SGI Irix.",null,null],[17,"ELFOSABI_FREEBSD","","FreeBSD.",null,null],[17,"ELFOSABI_TRU64","","Compaq TRU64 UNIX.",null,null],[17,"ELFOSABI_MODESTO","","Novell Modesto.",null,null],[17,"ELFOSABI_OPENBSD","","OpenBSD.",null,null],[17,"ELFOSABI_ARM_AEABI","","ARM EABI.",null,null],[17,"ELFOSABI_ARM","","ARM.",null,null],[17,"ELFOSABI_STANDALONE","","Standalone (embedded) application.",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_LOOS","","OS-specific range start.",null,null],[17,"ET_HIOS","","OS-specific range end.",null,null],[17,"ET_LOPROC","","Processor-specific range start.",null,null],[17,"ET_HIPROC","","Processor-specific range end.",null,null],[17,"EM_NONE","","No machine",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun\'s \\\"v8plus\\\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth\'s educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_QDSP6","","QUALCOMM DSP6",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_CSKY","","C-SKY",null,null],[17,"EM_ALPHA","","Digital Alpha",null,null],[17,"EV_NONE","","Invalid ELF version.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[3,"SectionHeader32","","Section header.",null,null],[12,"sh_name","","Section name.",54,null],[12,"sh_type","","Section type. One of the <code>SHT_*</code> constants.",54,null],[12,"sh_flags","","Section flags. A combination of the <code>SHF_*</code> constants.",54,null],[12,"sh_addr","","Section virtual address at execution.",54,null],[12,"sh_offset","","Section file offset.",54,null],[12,"sh_size","","Section size in bytes.",54,null],[12,"sh_link","","Link to another section.",54,null],[12,"sh_info","","Additional section information.",54,null],[12,"sh_addralign","","Section alignment.",54,null],[12,"sh_entsize","","Entry size if the section holds a table.",54,null],[3,"SectionHeader64","","Section header.",null,null],[12,"sh_name","","Section name.",55,null],[12,"sh_type","","Section type. One of the <code>SHT_*</code> constants.",55,null],[12,"sh_flags","","Section flags. A combination of the <code>SHF_*</code> constants.",55,null],[12,"sh_addr","","Section virtual address at execution.",55,null],[12,"sh_offset","","Section file offset.",55,null],[12,"sh_size","","Section size in bytes.",55,null],[12,"sh_link","","Link to another section.",55,null],[12,"sh_info","","Additional section information.",55,null],[12,"sh_addralign","","Section alignment.",55,null],[12,"sh_entsize","","Entry size if the section holds a table.",55,null],[17,"SHN_UNDEF","","Undefined section.",null,null],[17,"SHN_LORESERVE","","OS-specific range start. Start of reserved section …",null,null],[17,"SHN_LOPROC","","Start of processor-specific section indices.",null,null],[17,"SHN_HIPROC","","End of processor-specific section indices.",null,null],[17,"SHN_LOOS","","Start of OS-specific section indices.",null,null],[17,"SHN_HIOS","","End of OS-specific section indices.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Section index is in the <code>SHT_SYMTAB_SHNDX</code> section.",null,null],[17,"SHN_HIRESERVE","","End of reserved section indices.",null,null],[17,"SHT_NULL","","Section header table entry is unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with explicit addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries without explicit addends.",null,null],[17,"SHT_SHLIB","","Reserved section type.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indices for a symbol table.",null,null],[17,"SHT_LOOS","","Start of OS-specific section types.",null,null],[17,"SHT_HIOS","","End of OS-specific section types.",null,null],[17,"SHT_LOPROC","","Start of processor-specific section types.",null,null],[17,"SHT_HIPROC","","End of processor-specific section types.",null,null],[17,"SHT_LOUSER","","Start of application-specific section types.",null,null],[17,"SHT_HIUSER","","End of application-specific section types.",null,null],[17,"SHF_WRITE","","Section is writable.",null,null],[17,"SHF_ALLOC","","Section occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Section is executable.",null,null],[17,"SHF_MERGE","","Section may be be merged to eliminate duplication.",null,null],[17,"SHF_STRINGS","","Section contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","The <code>sh_info</code> field contains a section header table index.",null,null],[17,"SHF_LINK_ORDER","","Section has special ordering requirements when combining …",null,null],[17,"SHF_OS_NONCONFORMING","","Section requires special OS-specific handling.",null,null],[17,"SHF_GROUP","","Section is a member of a group.",null,null],[17,"SHF_TLS","","Section holds thread-local storage.",null,null],[17,"SHF_COMPRESSED","","Section is compressed.",null,null],[17,"SHF_MASKOS","","OS-specific section flags.",null,null],[17,"SHF_MASKPROC","","Processor-specific section flags.",null,null],[3,"CompressionHeader32","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the <code>ELFCOMPRESS_*</code> values.",56,null],[12,"ch_size","","Uncompressed data size.",56,null],[12,"ch_addralign","","Uncompressed data alignment.",56,null],[3,"CompressionHeader64","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the <code>ELFCOMPRESS_*</code> values.",57,null],[12,"ch_reserved","","Reserved.",57,null],[12,"ch_size","","Uncompressed data size.",57,null],[12,"ch_addralign","","Uncompressed data alignment.",57,null],[17,"ELFCOMPRESS_ZLIB","","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific compression types.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific compression types.",null,null],[17,"GRP_COMDAT","","Mark group as COMDAT.",null,null],[3,"Sym32","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",58,null],[12,"st_value","","Symbol value.",58,null],[12,"st_size","","Symbol size.",58,null],[12,"st_info","","Symbol type and binding.",58,null],[12,"st_other","","Symbol visibility.",58,null],[12,"st_shndx","","Section index or one of the <code>SHN_*</code> values.",58,null],[11,"st_bind","","Get the <code>st_bind</code> component of the <code>st_info</code> field.",58,[[],["u8",15]]],[11,"st_type","","Get the <code>st_type</code> component of the <code>st_info</code> field.",58,[[],["u8",15]]],[11,"set_st_info","","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …",58,[[["u8",15]]]],[11,"st_visibility","","Get the <code>st_visibility</code> component of the <code>st_info</code> field.",58,[[],["u8",15]]],[3,"Sym64","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",59,null],[12,"st_info","","Symbol type and binding.",59,null],[12,"st_other","","Symbol visibility.",59,null],[12,"st_shndx","","Section index or one of the <code>SHN_*</code> values.",59,null],[12,"st_value","","Symbol value.",59,null],[12,"st_size","","Symbol size.",59,null],[11,"st_bind","","Get the <code>st_bind</code> component of the <code>st_info</code> field.",59,[[],["u8",15]]],[11,"st_type","","Get the <code>st_type</code> component of the <code>st_info</code> field.",59,[[],["u8",15]]],[11,"set_st_info","","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …",59,[[["u8",15]]]],[11,"st_visibility","","Get the <code>st_visibility</code> component of the <code>st_info</code> field.",59,[[],["u8",15]]],[3,"Syminfo32","","Additional information about a <code>Sym32</code>.",null,null],[12,"si_boundto","","Direct bindings, symbol bound to.",60,null],[12,"si_flags","","Per symbol flags.",60,null],[3,"Syminfo64","","Additional information about a <code>Sym64</code>.",null,null],[12,"si_boundto","","Direct bindings, symbol bound to.",61,null],[12,"si_flags","","Per symbol flags.",61,null],[17,"SYMINFO_BT_SELF","","Symbol bound to self",null,null],[17,"SYMINFO_BT_PARENT","","Symbol bound to parent",null,null],[17,"SYMINFO_BT_LOWRESERVE","","Beginning of reserved entries",null,null],[17,"SYMINFO_FLG_DIRECT","","Direct bound symbol",null,null],[17,"SYMINFO_FLG_PASSTHRU","","Pass-thru symbol for translator",null,null],[17,"SYMINFO_FLG_COPY","","Symbol is a copy-reloc",null,null],[17,"SYMINFO_FLG_LAZYLOAD","","Symbol bound to object to be lazy loaded",null,null],[17,"SYMINFO_NONE","","",null,null],[17,"SYMINFO_CURRENT","","",null,null],[17,"SYMINFO_NUM","","",null,null],[17,"STB_LOCAL","","Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_LOOS","","Start of OS-specific symbol binding.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol.",null,null],[17,"STB_HIOS","","End of OS-specific symbol binding.",null,null],[17,"STB_LOPROC","","Start of processor-specific symbol binding.",null,null],[17,"STB_HIPROC","","End of processor-specific symbol binding.",null,null],[17,"STT_NOTYPE","","Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol is associated with a section.",null,null],[17,"STT_FILE","","Symbol\'s name is a file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is a thread-local storage object.",null,null],[17,"STT_LOOS","","Start of OS-specific symbol types.",null,null],[17,"STT_GNU_IFUNC","","Symbol is an indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific symbol types.",null,null],[17,"STT_LOPROC","","Start of processor-specific symbol types.",null,null],[17,"STT_HIPROC","","End of processor-specific symbol types.",null,null],[17,"STV_DEFAULT","","Default symbol visibility rules.",null,null],[17,"STV_INTERNAL","","Processor specific hidden class.",null,null],[17,"STV_HIDDEN","","Symbol is not visible to other components.",null,null],[17,"STV_PROTECTED","","Symbol is visible to other components, but is not …",null,null],[3,"Rel32","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",62,null],[12,"r_info","","Relocation type and symbol index.",62,null],[11,"r_sym","","Get the <code>r_sym</code> component of the <code>r_info</code> field.",62,[[],["u32",15]]],[11,"r_type","","Get the <code>r_type</code> component of the <code>r_info</code> field.",62,[[],["u32",15]]],[11,"r_info","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",62,[[["u32",15],["u8",15]],["u32",6]]],[11,"set_r_info","","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",62,[[["u32",15],["u8",15]]]],[3,"Rela32","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",63,null],[12,"r_info","","Relocation type and symbol index.",63,null],[12,"r_addend","","Explicit addend.",63,null],[11,"r_sym","","Get the <code>r_sym</code> component of the <code>r_info</code> field.",63,[[],["u32",15]]],[11,"r_type","","Get the <code>r_type</code> component of the <code>r_info</code> field.",63,[[],["u32",15]]],[11,"r_info","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",63,[[["u32",15],["u8",15]],["u32",6]]],[11,"set_r_info","","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",63,[[["u32",15],["u8",15]]]],[3,"Rel64","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",64,null],[12,"r_info","","Relocation type and symbol index.",64,null],[11,"r_sym","","Get the <code>r_sym</code> component of the <code>r_info</code> field.",64,[[],["u32",15]]],[11,"r_type","","Get the <code>r_type</code> component of the <code>r_info</code> field.",64,[[],["u32",15]]],[11,"r_info","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",64,[[["u32",15]],["u64",6]]],[11,"set_r_info","","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",64,[[["u32",15]]]],[3,"Rela64","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",65,null],[12,"r_info","","Relocation type and symbol index.",65,null],[12,"r_addend","","Explicit addend.",65,null],[11,"r_sym","","Get the <code>r_sym</code> component of the <code>r_info</code> field.",65,[[],["u32",15]]],[11,"r_type","","Get the <code>r_type</code> component of the <code>r_info</code> field.",65,[[],["u32",15]]],[11,"r_info","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",65,[[["u32",15]],["u64",6]]],[11,"set_r_info","","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …",65,[[["u32",15]]]],[3,"ProgramHeader32","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the <code>PT_*</code> constants.",66,null],[12,"p_offset","","Segment file offset.",66,null],[12,"p_vaddr","","Segment virtual address.",66,null],[12,"p_paddr","","Segment physical address.",66,null],[12,"p_filesz","","Segment size in the file.",66,null],[12,"p_memsz","","Segment size in memory.",66,null],[12,"p_flags","","Segment flags. A combination of the <code>PF_*</code> constants.",66,null],[12,"p_align","","Segment alignment.",66,null],[3,"ProgramHeader64","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the <code>PT_*</code> constants.",67,null],[12,"p_flags","","Segment flags. A combination of the <code>PF_*</code> constants.",67,null],[12,"p_offset","","Segment file offset.",67,null],[12,"p_vaddr","","Segment virtual address.",67,null],[12,"p_paddr","","Segment physical address.",67,null],[12,"p_filesz","","Segment size in the file.",67,null],[12,"p_memsz","","Segment size in memory.",67,null],[12,"p_align","","Segment alignment.",67,null],[17,"PN_XNUM","","Special value for <code>FileHeader*::e_phnum</code>.",null,null],[17,"PT_NULL","","Program header table entry is unused.",null,null],[17,"PT_LOAD","","Loadable program segment.",null,null],[17,"PT_DYNAMIC","","Dynamic linking information.",null,null],[17,"PT_INTERP","","Program interpreter.",null,null],[17,"PT_NOTE","","Auxiliary information.",null,null],[17,"PT_SHLIB","","Reserved.",null,null],[17,"PT_PHDR","","Segment contains the program header table.",null,null],[17,"PT_TLS","","Thread-local storage segment.",null,null],[17,"PT_LOOS","","Start of OS-specific segment types.",null,null],[17,"PT_GNU_EH_FRAME","","GCC <code>.eh_frame_hdr</code> segment.",null,null],[17,"PT_GNU_STACK","","Indicates stack executability.",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation.",null,null],[17,"PT_HIOS","","End of OS-specific segment types.",null,null],[17,"PT_LOPROC","","Start of processor-specific segment types.",null,null],[17,"PT_HIPROC","","End of processor-specific segment types.",null,null],[17,"PF_X","","Segment is executable.",null,null],[17,"PF_W","","Segment is writable.",null,null],[17,"PF_R","","Segment is readable.",null,null],[17,"PF_MASKOS","","OS-specific segment flags.",null,null],[17,"PF_MASKPROC","","Processor-specific segment flags.",null,null],[7,"ELF_NOTE_CORE","","Note name for core files.",null,null],[7,"ELF_NOTE_LINUX","","Note name for linux core files.",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRFPREG","","Contains copy of fpregset struct.",null,null],[17,"NT_FPREGSET","","Contains copy of fpregset struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_PRXREG","","Contains copy of prxregset struct.",null,null],[17,"NT_TASKSTRUCT","","Contains copy of task structure.",null,null],[17,"NT_PLATFORM","","String from sysinfo(SI_PLATFORM).",null,null],[17,"NT_AUXV","","Contains copy of auxv array.",null,null],[17,"NT_GWINDOWS","","Contains copy of gwindows struct.",null,null],[17,"NT_ASRS","","Contains copy of asrset struct.",null,null],[17,"NT_PSTATUS","","Contains copy of pstatus struct.",null,null],[17,"NT_PSINFO","","Contains copy of psinfo struct.",null,null],[17,"NT_PRCRED","","Contains copy of prcred struct.",null,null],[17,"NT_UTSNAME","","Contains copy of utsname struct.",null,null],[17,"NT_LWPSTATUS","","Contains copy of lwpstatus struct.",null,null],[17,"NT_LWPSINFO","","Contains copy of lwpinfo struct.",null,null],[17,"NT_PRFPXREG","","Contains copy of fprxregset struct.",null,null],[17,"NT_SIGINFO","","Contains copy of siginfo_t, size might increase.",null,null],[17,"NT_FILE","","Contains information about mapped files.",null,null],[17,"NT_PRXFPREG","","Contains copy of user_fxsr_struct.",null,null],[17,"NT_PPC_VMX","","PowerPC Altivec/VMX registers.",null,null],[17,"NT_PPC_SPE","","PowerPC SPE/EVR registers.",null,null],[17,"NT_PPC_VSX","","PowerPC VSX registers.",null,null],[17,"NT_PPC_TAR","","Target Address Register.",null,null],[17,"NT_PPC_PPR","","Program Priority Register.",null,null],[17,"NT_PPC_DSCR","","Data Stream Control Register.",null,null],[17,"NT_PPC_EBB","","Event Based Branch Registers.",null,null],[17,"NT_PPC_PMU","","Performance Monitor Registers.",null,null],[17,"NT_PPC_TM_CGPR","","TM checkpointed GPR Registers.",null,null],[17,"NT_PPC_TM_CFPR","","TM checkpointed FPR Registers.",null,null],[17,"NT_PPC_TM_CVMX","","TM checkpointed VMX Registers.",null,null],[17,"NT_PPC_TM_CVSX","","TM checkpointed VSX Registers.",null,null],[17,"NT_PPC_TM_SPR","","TM Special Purpose Registers.",null,null],[17,"NT_PPC_TM_CTAR","","TM checkpointed Target Address Register.",null,null],[17,"NT_PPC_TM_CPPR","","TM checkpointed Program Priority Register.",null,null],[17,"NT_PPC_TM_CDSCR","","TM checkpointed Data Stream Control Register.",null,null],[17,"NT_PPC_PKEY","","Memory Protection Keys registers.",null,null],[17,"NT_386_TLS","","i386 TLS slots (struct user_desc).",null,null],[17,"NT_386_IOPERM","","x86 io permission bitmap (1=deny).",null,null],[17,"NT_X86_XSTATE","","x86 extended state using xsave.",null,null],[17,"NT_S390_HIGH_GPRS","","s390 upper register halves.",null,null],[17,"NT_S390_TIMER","","s390 timer register.",null,null],[17,"NT_S390_TODCMP","","s390 TOD clock comparator register.",null,null],[17,"NT_S390_TODPREG","","s390 TOD programmable register.",null,null],[17,"NT_S390_CTRS","","s390 control registers.",null,null],[17,"NT_S390_PREFIX","","s390 prefix register.",null,null],[17,"NT_S390_LAST_BREAK","","s390 breaking event address.",null,null],[17,"NT_S390_SYSTEM_CALL","","s390 system call restart data.",null,null],[17,"NT_S390_TDB","","s390 transaction diagnostic block.",null,null],[17,"NT_S390_VXRS_LOW","","s390 vector registers 0-15 upper half.",null,null],[17,"NT_S390_VXRS_HIGH","","s390 vector registers 16-31.",null,null],[17,"NT_S390_GS_CB","","s390 guarded storage registers.",null,null],[17,"NT_S390_GS_BC","","s390 guarded storage broadcast control block.",null,null],[17,"NT_S390_RI_CB","","s390 runtime instrumentation.",null,null],[17,"NT_ARM_VFP","","ARM VFP/NEON registers.",null,null],[17,"NT_ARM_TLS","","ARM TLS register.",null,null],[17,"NT_ARM_HW_BREAK","","ARM hardware breakpoint registers.",null,null],[17,"NT_ARM_HW_WATCH","","ARM hardware watchpoint registers.",null,null],[17,"NT_ARM_SYSTEM_CALL","","ARM system call number.",null,null],[17,"NT_ARM_SVE","","ARM Scalable Vector Extension registers.",null,null],[17,"NT_VMCOREDD","","Vmcore Device Dump Note.",null,null],[17,"NT_MIPS_DSP","","MIPS DSP ASE registers.",null,null],[17,"NT_MIPS_FP_MODE","","MIPS floating-point mode.",null,null],[17,"NT_VERSION","","Note type for version string.",null,null],[3,"Dyn32","","Dynamic section entry.",null,null],[12,"d_tag","","Dynamic entry type.",68,null],[12,"d_val","","Value (integer or address).",68,null],[3,"Dyn64","","Dynamic section entry.",null,null],[12,"d_tag","","Dynamic entry type.",69,null],[12,"d_val","","Value (integer or address).",69,null],[17,"DT_NULL","","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_SYMTAB_SHNDX","","Address of SYMTAB_SHNDX section",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_VALRNGLO","","",null,null],[17,"DT_GNU_PRELINKED","","Prelinking timestamp",null,null],[17,"DT_GNU_CONFLICTSZ","","Size of conflict section",null,null],[17,"DT_GNU_LIBLISTSZ","","Size of library list",null,null],[17,"DT_CHECKSUM","","",null,null],[17,"DT_PLTPADSZ","","",null,null],[17,"DT_MOVEENT","","",null,null],[17,"DT_MOVESZ","","",null,null],[17,"DT_FEATURE_1","","Feature selection (DTF_*).",null,null],[17,"DT_POSFLAG_1","","Flags for DT_* entries, affecting the following DT_* …",null,null],[17,"DT_SYMINSZ","","Size of syminfo table (in bytes)",null,null],[17,"DT_SYMINENT","","Entry size of syminfo",null,null],[17,"DT_VALRNGHI","","",null,null],[17,"DT_ADDRRNGLO","","",null,null],[17,"DT_GNU_HASH","","GNU-style hash table.",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information.",null,null],[17,"DT_DEPAUDIT","","Dependency auditing.",null,null],[17,"DT_AUDIT","","Object auditing.",null,null],[17,"DT_PLTPAD","","PLT padding.",null,null],[17,"DT_MOVETAB","","Move table.",null,null],[17,"DT_SYMINFO","","Syminfo table.",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_VERSYM","","",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below.",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DT_AUXILIARY","","Shared object to load before self",null,null],[17,"DT_FILTER","","Shared object to get values from",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here",null,null],[17,"DF_TEXTREL","","Object contains text relocations",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model",null,null],[17,"DF_1_NOW","","Set RTLD_NOW for this object.",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can\'t be dldump\'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton symbols are used.",null,null],[17,"DF_1_STUB","","",null,null],[17,"DF_1_PIE","","",null,null],[3,"NoteHeader32","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note\'s name.",70,null],[12,"n_descsz","","Length of the note\'s descriptor.",70,null],[12,"n_type","","Type of the note.",70,null],[3,"NoteHeader64","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note\'s name.",71,null],[12,"n_descsz","","Length of the note\'s descriptor.",71,null],[12,"n_type","","Type of the note.",71,null],[7,"ELF_NOTE_SOLARIS","","Solaris entries in the note section have this name.",null,null],[17,"NT_SOLARIS_PAGESIZE_HINT","","Desired pagesize for the binary.",null,null],[7,"ELF_NOTE_GNU","","GNU entries in the note section have this name.",null,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_OS_LINUX","","OS descriptor for <code>NT_GNU_ABI_TAG</code>.",null,null],[17,"ELF_NOTE_OS_GNU","","OS descriptor for <code>NT_GNU_ABI_TAG</code>.",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","OS descriptor for <code>NT_GNU_ABI_TAG</code>.",null,null],[17,"ELF_NOTE_OS_FREEBSD","","OS descriptor for <code>NT_GNU_ABI_TAG</code>.",null,null],[17,"NT_GNU_HWCAP","","Synthetic hwcap information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by <code>ld --build-id</code>.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version …",null,null],[17,"NT_GNU_PROPERTY_TYPE_0","","Program property.",null,null],[17,"R_68K_NONE","","No reloc",null,null],[17,"R_68K_32","","Direct 32 bit",null,null],[17,"R_68K_16","","Direct 16 bit",null,null],[17,"R_68K_8","","Direct 8 bit",null,null],[17,"R_68K_PC32","","PC relative 32 bit",null,null],[17,"R_68K_PC16","","PC relative 16 bit",null,null],[17,"R_68K_PC8","","PC relative 8 bit",null,null],[17,"R_68K_GOT32","","32 bit PC relative GOT entry",null,null],[17,"R_68K_GOT16","","16 bit PC relative GOT entry",null,null],[17,"R_68K_GOT8","","8 bit PC relative GOT entry",null,null],[17,"R_68K_GOT32O","","32 bit GOT offset",null,null],[17,"R_68K_GOT16O","","16 bit GOT offset",null,null],[17,"R_68K_GOT8O","","8 bit GOT offset",null,null],[17,"R_68K_PLT32","","32 bit PC relative PLT address",null,null],[17,"R_68K_PLT16","","16 bit PC relative PLT address",null,null],[17,"R_68K_PLT8","","8 bit PC relative PLT address",null,null],[17,"R_68K_PLT32O","","32 bit PLT offset",null,null],[17,"R_68K_PLT16O","","16 bit PLT offset",null,null],[17,"R_68K_PLT8O","","8 bit PLT offset",null,null],[17,"R_68K_COPY","","Copy symbol at runtime",null,null],[17,"R_68K_GLOB_DAT","","Create GOT entry",null,null],[17,"R_68K_JMP_SLOT","","Create PLT entry",null,null],[17,"R_68K_RELATIVE","","Adjust by program base",null,null],[17,"R_68K_TLS_GD32","","32 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD16","","16 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD8","","8 bit GOT offset for GD",null,null],[17,"R_68K_TLS_LDM32","","32 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM16","","16 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM8","","8 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDO32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO16","","16 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO8","","8 bit module-relative offset",null,null],[17,"R_68K_TLS_IE32","","32 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE16","","16 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE8","","8 bit GOT offset for IE",null,null],[17,"R_68K_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE16","","16 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE8","","8 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_DTPMOD32","","32 bit module number",null,null],[17,"R_68K_TLS_DTPREL32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_TPREL32","","32 bit TP-relative offset",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","Direct 32 bit PLT address",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread …",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread …",null,null],[17,"R_386_16","","Direct 16 bit",null,null],[17,"R_386_PC16","","PC relative 16 bit",null,null],[17,"R_386_8","","Direct 8 bit",null,null],[17,"R_386_PC8","","PC relative 8 bit",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE …",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation.",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to …",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable.",null,null],[17,"STT_SPARC_REGISTER","","Global register reserved to app.",null,null],[17,"EF_SPARCV9_MM","","",null,null],[17,"EF_SPARCV9_TSO","","",null,null],[17,"EF_SPARCV9_PSO","","",null,null],[17,"EF_SPARCV9_RMO","","",null,null],[17,"EF_SPARC_LEDATA","","little endian data",null,null],[17,"EF_SPARC_EXT_MASK","","",null,null],[17,"EF_SPARC_32PLUS","","generic V8+ features",null,null],[17,"EF_SPARC_SUN_US1","","Sun UltraSPARC1 extensions",null,null],[17,"EF_SPARC_HAL_R1","","HAL R1 extensions",null,null],[17,"EF_SPARC_SUN_US3","","Sun UltraSPARCIII extensions",null,null],[17,"R_SPARC_NONE","","No reloc",null,null],[17,"R_SPARC_8","","Direct 8 bit",null,null],[17,"R_SPARC_16","","Direct 16 bit",null,null],[17,"R_SPARC_32","","Direct 32 bit",null,null],[17,"R_SPARC_DISP8","","PC relative 8 bit",null,null],[17,"R_SPARC_DISP16","","PC relative 16 bit",null,null],[17,"R_SPARC_DISP32","","PC relative 32 bit",null,null],[17,"R_SPARC_WDISP30","","PC relative 30 bit shifted",null,null],[17,"R_SPARC_WDISP22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_HI22","","High 22 bit",null,null],[17,"R_SPARC_22","","Direct 22 bit",null,null],[17,"R_SPARC_13","","Direct 13 bit",null,null],[17,"R_SPARC_LO10","","Truncated 10 bit",null,null],[17,"R_SPARC_GOT10","","Truncated 10 bit GOT entry",null,null],[17,"R_SPARC_GOT13","","13 bit GOT entry",null,null],[17,"R_SPARC_GOT22","","22 bit GOT entry shifted",null,null],[17,"R_SPARC_PC10","","PC relative 10 bit truncated",null,null],[17,"R_SPARC_PC22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_WPLT30","","30 bit PC relative PLT address",null,null],[17,"R_SPARC_COPY","","Copy symbol at runtime",null,null],[17,"R_SPARC_GLOB_DAT","","Create GOT entry",null,null],[17,"R_SPARC_JMP_SLOT","","Create PLT entry",null,null],[17,"R_SPARC_RELATIVE","","Adjust by program base",null,null],[17,"R_SPARC_UA32","","Direct 32 bit unaligned",null,null],[17,"R_SPARC_PLT32","","Direct 32 bit ref to PLT entry",null,null],[17,"R_SPARC_HIPLT22","","High 22 bit PLT entry",null,null],[17,"R_SPARC_LOPLT10","","Truncated 10 bit PLT entry",null,null],[17,"R_SPARC_PCPLT32","","PC rel 32 bit ref to PLT entry",null,null],[17,"R_SPARC_PCPLT22","","PC rel high 22 bit PLT entry",null,null],[17,"R_SPARC_PCPLT10","","PC rel trunc 10 bit PLT entry",null,null],[17,"R_SPARC_10","","Direct 10 bit",null,null],[17,"R_SPARC_11","","Direct 11 bit",null,null],[17,"R_SPARC_64","","Direct 64 bit",null,null],[17,"R_SPARC_OLO10","","10bit with secondary 13bit addend",null,null],[17,"R_SPARC_HH22","","Top 22 bits of direct 64 bit",null,null],[17,"R_SPARC_HM10","","High middle 10 bits of ...",null,null],[17,"R_SPARC_LM22","","Low middle 22 bits of ...",null,null],[17,"R_SPARC_PC_HH22","","Top 22 bits of pc rel 64 bit",null,null],[17,"R_SPARC_PC_HM10","","High middle 10 bit of ...",null,null],[17,"R_SPARC_PC_LM22","","Low miggle 22 bits of ...",null,null],[17,"R_SPARC_WDISP16","","PC relative 16 bit shifted",null,null],[17,"R_SPARC_WDISP19","","PC relative 19 bit shifted",null,null],[17,"R_SPARC_GLOB_JMP","","was part of v9 ABI but was removed",null,null],[17,"R_SPARC_7","","Direct 7 bit",null,null],[17,"R_SPARC_5","","Direct 5 bit",null,null],[17,"R_SPARC_6","","Direct 6 bit",null,null],[17,"R_SPARC_DISP64","","PC relative 64 bit",null,null],[17,"R_SPARC_PLT64","","Direct 64 bit ref to PLT entry",null,null],[17,"R_SPARC_HIX22","","High 22 bit complemented",null,null],[17,"R_SPARC_LOX10","","Truncated 11 bit complemented",null,null],[17,"R_SPARC_H44","","Direct high 12 of 44 bit",null,null],[17,"R_SPARC_M44","","Direct mid 22 of 44 bit",null,null],[17,"R_SPARC_L44","","Direct low 10 of 44 bit",null,null],[17,"R_SPARC_REGISTER","","Global register usage",null,null],[17,"R_SPARC_UA64","","Direct 64 bit unaligned",null,null],[17,"R_SPARC_UA16","","Direct 16 bit unaligned",null,null],[17,"R_SPARC_TLS_GD_HI22","","",null,null],[17,"R_SPARC_TLS_GD_LO10","","",null,null],[17,"R_SPARC_TLS_GD_ADD","","",null,null],[17,"R_SPARC_TLS_GD_CALL","","",null,null],[17,"R_SPARC_TLS_LDM_HI22","","",null,null],[17,"R_SPARC_TLS_LDM_LO10","","",null,null],[17,"R_SPARC_TLS_LDM_ADD","","",null,null],[17,"R_SPARC_TLS_LDM_CALL","","",null,null],[17,"R_SPARC_TLS_LDO_HIX22","","",null,null],[17,"R_SPARC_TLS_LDO_LOX10","","",null,null],[17,"R_SPARC_TLS_LDO_ADD","","",null,null],[17,"R_SPARC_TLS_IE_HI22","","",null,null],[17,"R_SPARC_TLS_IE_LO10","","",null,null],[17,"R_SPARC_TLS_IE_LD","","",null,null],[17,"R_SPARC_TLS_IE_LDX","","",null,null],[17,"R_SPARC_TLS_IE_ADD","","",null,null],[17,"R_SPARC_TLS_LE_HIX22","","",null,null],[17,"R_SPARC_TLS_LE_LOX10","","",null,null],[17,"R_SPARC_TLS_DTPMOD32","","",null,null],[17,"R_SPARC_TLS_DTPMOD64","","",null,null],[17,"R_SPARC_TLS_DTPOFF32","","",null,null],[17,"R_SPARC_TLS_DTPOFF64","","",null,null],[17,"R_SPARC_TLS_TPOFF32","","",null,null],[17,"R_SPARC_TLS_TPOFF64","","",null,null],[17,"R_SPARC_GOTDATA_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_OP_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP","","",null,null],[17,"R_SPARC_H34","","",null,null],[17,"R_SPARC_SIZE32","","",null,null],[17,"R_SPARC_SIZE64","","",null,null],[17,"R_SPARC_WDISP10","","",null,null],[17,"R_SPARC_JMP_IREL","","",null,null],[17,"R_SPARC_IRELATIVE","","",null,null],[17,"R_SPARC_GNU_VTINHERIT","","",null,null],[17,"R_SPARC_GNU_VTENTRY","","",null,null],[17,"R_SPARC_REV32","","",null,null],[17,"DT_SPARC_REGISTER","","",null,null],[17,"EF_MIPS_NOREORDER","","A .noreorder directive was used.",null,null],[17,"EF_MIPS_PIC","","Contains PIC code.",null,null],[17,"EF_MIPS_CPIC","","Uses PIC calling sequence.",null,null],[17,"EF_MIPS_XGOT","","",null,null],[17,"EF_MIPS_64BIT_WHIRL","","",null,null],[17,"EF_MIPS_ABI2","","",null,null],[17,"EF_MIPS_ABI_ON32","","",null,null],[17,"EF_MIPS_FP64","","Uses FP64 (12 callee-saved).",null,null],[17,"EF_MIPS_NAN2008","","Uses IEEE 754-2008 NaN encoding.",null,null],[17,"EF_MIPS_ARCH","","MIPS architecture level.",null,null],[17,"EF_MIPS_ARCH_1","","-mips1 code.",null,null],[17,"EF_MIPS_ARCH_2","","-mips2 code.",null,null],[17,"EF_MIPS_ARCH_3","","-mips3 code.",null,null],[17,"EF_MIPS_ARCH_4","","-mips4 code.",null,null],[17,"EF_MIPS_ARCH_5","","-mips5 code.",null,null],[17,"EF_MIPS_ARCH_32","","MIPS32 code.",null,null],[17,"EF_MIPS_ARCH_64","","MIPS64 code.",null,null],[17,"EF_MIPS_ARCH_32R2","","MIPS32r2 code.",null,null],[17,"EF_MIPS_ARCH_64R2","","MIPS64r2 code.",null,null],[17,"SHN_MIPS_ACOMMON","","Allocated common symbols.",null,null],[17,"SHN_MIPS_TEXT","","Allocated test symbols.",null,null],[17,"SHN_MIPS_DATA","","Allocated data symbols.",null,null],[17,"SHN_MIPS_SCOMMON","","Small common symbols.",null,null],[17,"SHN_MIPS_SUNDEFINED","","Small undefined symbols.",null,null],[17,"SHT_MIPS_LIBLIST","","Shared objects used in link.",null,null],[17,"SHT_MIPS_MSYM","","",null,null],[17,"SHT_MIPS_CONFLICT","","Conflicting symbols.",null,null],[17,"SHT_MIPS_GPTAB","","Global data area sizes.",null,null],[17,"SHT_MIPS_UCODE","","Reserved for SGI/MIPS compilers",null,null],[17,"SHT_MIPS_DEBUG","","MIPS ECOFF debugging info.",null,null],[17,"SHT_MIPS_REGINFO","","Register usage information.",null,null],[17,"SHT_MIPS_PACKAGE","","",null,null],[17,"SHT_MIPS_PACKSYM","","",null,null],[17,"SHT_MIPS_RELD","","",null,null],[17,"SHT_MIPS_IFACE","","",null,null],[17,"SHT_MIPS_CONTENT","","",null,null],[17,"SHT_MIPS_OPTIONS","","Miscellaneous options.",null,null],[17,"SHT_MIPS_SHDR","","",null,null],[17,"SHT_MIPS_FDESC","","",null,null],[17,"SHT_MIPS_EXTSYM","","",null,null],[17,"SHT_MIPS_DENSE","","",null,null],[17,"SHT_MIPS_PDESC","","",null,null],[17,"SHT_MIPS_LOCSYM","","",null,null],[17,"SHT_MIPS_AUXSYM","","",null,null],[17,"SHT_MIPS_OPTSYM","","",null,null],[17,"SHT_MIPS_LOCSTR","","",null,null],[17,"SHT_MIPS_LINE","","",null,null],[17,"SHT_MIPS_RFDESC","","",null,null],[17,"SHT_MIPS_DELTASYM","","",null,null],[17,"SHT_MIPS_DELTAINST","","",null,null],[17,"SHT_MIPS_DELTACLASS","","",null,null],[17,"SHT_MIPS_DWARF","","DWARF debugging information.",null,null],[17,"SHT_MIPS_DELTADECL","","",null,null],[17,"SHT_MIPS_SYMBOL_LIB","","",null,null],[17,"SHT_MIPS_EVENTS","","Event section.",null,null],[17,"SHT_MIPS_TRANSLATE","","",null,null],[17,"SHT_MIPS_PIXIE","","",null,null],[17,"SHT_MIPS_XLATE","","",null,null],[17,"SHT_MIPS_XLATE_DEBUG","","",null,null],[17,"SHT_MIPS_WHIRL","","",null,null],[17,"SHT_MIPS_EH_REGION","","",null,null],[17,"SHT_MIPS_XLATE_OLD","","",null,null],[17,"SHT_MIPS_PDR_EXCEPTION","","",null,null],[17,"SHF_MIPS_GPREL","","Must be in global data area.",null,null],[17,"SHF_MIPS_MERGE","","",null,null],[17,"SHF_MIPS_ADDR","","",null,null],[17,"SHF_MIPS_STRINGS","","",null,null],[17,"SHF_MIPS_NOSTRIP","","",null,null],[17,"SHF_MIPS_LOCAL","","",null,null],[17,"SHF_MIPS_NAMES","","",null,null],[17,"SHF_MIPS_NODUPE","","",null,null],[17,"STO_MIPS_PLT","","",null,null],[17,"STO_MIPS_SC_ALIGN_UNUSED","","Only valid for <code>STB_MIPS_SPLIT_COMMON</code>.",null,null],[17,"STB_MIPS_SPLIT_COMMON","","",null,null],[17,"ODK_NULL","","Undefined.",null,null],[17,"ODK_REGINFO","","Register usage information.",null,null],[17,"ODK_EXCEPTIONS","","Exception processing options.",null,null],[17,"ODK_PAD","","Section padding options.",null,null],[17,"ODK_HWPATCH","","Hardware workarounds performed",null,null],[17,"ODK_FILL","","record the fill value used by the linker.",null,null],[17,"ODK_TAGS","","reserve space for desktop tools to write.",null,null],[17,"ODK_HWAND","","HW workarounds.  \'AND\' bits when merging.",null,null],[17,"ODK_HWOR","","HW workarounds.  \'OR\' bits when merging.",null,null],[17,"OEX_FPU_MIN","","FPE\'s which MUST be enabled.",null,null],[17,"OEX_FPU_MAX","","FPE\'s which MAY be enabled.",null,null],[17,"OEX_PAGE0","","page zero must be mapped.",null,null],[17,"OEX_SMM","","Force sequential memory mode?",null,null],[17,"OEX_FPDBUG","","Force floating point debug mode?",null,null],[17,"OEX_PRECISEFP","","",null,null],[17,"OEX_DISMISS","","Dismiss invalid address faults?",null,null],[17,"OEX_FPU_INVAL","","",null,null],[17,"OEX_FPU_DIV0","","",null,null],[17,"OEX_FPU_OFLO","","",null,null],[17,"OEX_FPU_UFLO","","",null,null],[17,"OEX_FPU_INEX","","",null,null],[17,"OHW_R4KEOP","","R4000 end-of-page patch.",null,null],[17,"OHW_R8KPFETCH","","may need R8000 prefetch patch.",null,null],[17,"OHW_R5KEOP","","R5000 end-of-page patch.",null,null],[17,"OHW_R5KCVTL","","R5000 cvt.[ds].l bug.  clean=1.",null,null],[17,"OPAD_PREFIX","","",null,null],[17,"OPAD_POSTFIX","","",null,null],[17,"OPAD_SYMBOL","","",null,null],[17,"OHWA0_R4KEOP_CHECKED","","",null,null],[17,"OHWA1_R4KEOP_CLEAN","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"PT_MIPS_REGINFO","","Register usage information.",null,null],[17,"PT_MIPS_RTPROC","","Runtime procedure table.",null,null],[17,"PT_MIPS_OPTIONS","","",null,null],[17,"PT_MIPS_ABIFLAGS","","FP mode requirement.",null,null],[17,"PF_MIPS_LOCAL","","",null,null],[17,"DT_MIPS_RLD_VERSION","","Runtime linker interface version",null,null],[17,"DT_MIPS_TIME_STAMP","","Timestamp",null,null],[17,"DT_MIPS_ICHECKSUM","","Checksum",null,null],[17,"DT_MIPS_IVERSION","","Version string (string tbl index)",null,null],[17,"DT_MIPS_FLAGS","","Flags",null,null],[17,"DT_MIPS_BASE_ADDRESS","","Base address",null,null],[17,"DT_MIPS_MSYM","","",null,null],[17,"DT_MIPS_CONFLICT","","Address of CONFLICT section",null,null],[17,"DT_MIPS_LIBLIST","","Address of LIBLIST section",null,null],[17,"DT_MIPS_LOCAL_GOTNO","","Number of local GOT entries",null,null],[17,"DT_MIPS_CONFLICTNO","","Number of CONFLICT entries",null,null],[17,"DT_MIPS_LIBLISTNO","","Number of LIBLIST entries",null,null],[17,"DT_MIPS_SYMTABNO","","Number of DYNSYM entries",null,null],[17,"DT_MIPS_UNREFEXTNO","","First external DYNSYM",null,null],[17,"DT_MIPS_GOTSYM","","First GOT entry in DYNSYM",null,null],[17,"DT_MIPS_HIPAGENO","","Number of GOT page table entries",null,null],[17,"DT_MIPS_RLD_MAP","","Address of run time loader map.",null,null],[17,"DT_MIPS_DELTA_CLASS","","Delta C++ class definition.",null,null],[17,"DT_MIPS_DELTA_CLASS_NO","","Number of entries in DT_MIPS_DELTA_CLASS.",null,null],[17,"DT_MIPS_DELTA_INSTANCE","","Delta C++ class instances.",null,null],[17,"DT_MIPS_DELTA_INSTANCE_NO","","Number of entries in DT_MIPS_DELTA_INSTANCE.",null,null],[17,"DT_MIPS_DELTA_RELOC","","Delta relocations.",null,null],[17,"DT_MIPS_DELTA_RELOC_NO","","Number of entries in DT_MIPS_DELTA_RELOC.",null,null],[17,"DT_MIPS_DELTA_SYM","","Delta symbols that Delta relocations refer to.",null,null],[17,"DT_MIPS_DELTA_SYM_NO","","Number of entries in DT_MIPS_DELTA_SYM.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM","","Delta symbols that hold the class declaration.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM_NO","","Number of entries in DT_MIPS_DELTA_CLASSSYM.",null,null],[17,"DT_MIPS_CXX_FLAGS","","Flags indicating for C++ flavor.",null,null],[17,"DT_MIPS_PIXIE_INIT","","",null,null],[17,"DT_MIPS_SYMBOL_LIB","","",null,null],[17,"DT_MIPS_LOCALPAGE_GOTIDX","","",null,null],[17,"DT_MIPS_LOCAL_GOTIDX","","",null,null],[17,"DT_MIPS_HIDDEN_GOTIDX","","",null,null],[17,"DT_MIPS_PROTECTED_GOTIDX","","",null,null],[17,"DT_MIPS_OPTIONS","","Address of .options.",null,null],[17,"DT_MIPS_INTERFACE","","Address of .interface.",null,null],[17,"DT_MIPS_DYNSTR_ALIGN","","",null,null],[17,"DT_MIPS_INTERFACE_SIZE","","Size of the .interface section.",null,null],[17,"DT_MIPS_RLD_TEXT_RESOLVE_ADDR","","Address of rld_text_rsolve function stored in GOT.",null,null],[17,"DT_MIPS_PERF_SUFFIX","","Default suffix of dso to be added by rld on dlopen() …",null,null],[17,"DT_MIPS_COMPACT_SIZE","","(O32)Size of compact rel section.",null,null],[17,"DT_MIPS_GP_VALUE","","GP value for aux GOTs.",null,null],[17,"DT_MIPS_AUX_DYNAMIC","","Address of aux .dynamic.",null,null],[17,"DT_MIPS_PLTGOT","","The address of .got.plt in an executable using the new …",null,null],[17,"DT_MIPS_RWPLT","","The base of the PLT in an executable using the new …",null,null],[17,"DT_MIPS_RLD_MAP_REL","","An alternative description of the classic MIPS RLD_MAP …",null,null],[17,"RHF_NONE","","No flags",null,null],[17,"RHF_QUICKSTART","","Use quickstart",null,null],[17,"RHF_NOTPOT","","Hash size not power of 2",null,null],[17,"RHF_NO_LIBRARY_REPLACEMENT","","Ignore LD_LIBRARY_PATH",null,null],[17,"RHF_NO_MOVE","","",null,null],[17,"RHF_SGI_ONLY","","",null,null],[17,"RHF_GUARANTEE_INIT","","",null,null],[17,"RHF_DELTA_C_PLUS_PLUS","","",null,null],[17,"RHF_GUARANTEE_START_INIT","","",null,null],[17,"RHF_PIXIE","","",null,null],[17,"RHF_DEFAULT_DELAY_LOAD","","",null,null],[17,"RHF_REQUICKSTART","","",null,null],[17,"RHF_REQUICKSTARTED","","",null,null],[17,"RHF_CORD","","",null,null],[17,"RHF_NO_UNRES_UNDEF","","",null,null],[17,"RHF_RLD_ORDER_SAFE","","",null,null],[17,"LL_NONE","","",null,null],[17,"LL_EXACT_MATCH","","Require exact match",null,null],[17,"LL_IGNORE_INT_VER","","Ignore interface version",null,null],[17,"LL_REQUIRE_MINOR","","",null,null],[17,"LL_EXPORTS","","",null,null],[17,"LL_DELAY_LOAD","","",null,null],[17,"LL_DELTA","","",null,null],[17,"EF_PARISC_TRAPNIL","","Trap nil pointer dereference.",null,null],[17,"EF_PARISC_EXT","","Program uses arch. extensions.",null,null],[17,"EF_PARISC_LSB","","Program expects little endian.",null,null],[17,"EF_PARISC_WIDE","","Program expects wide mode.",null,null],[17,"EF_PARISC_NO_KABP","","No kernel assisted branch prediction.",null,null],[17,"EF_PARISC_LAZYSWAP","","Allow lazy swapping.",null,null],[17,"EF_PARISC_ARCH","","Architecture version.",null,null],[17,"EFA_PARISC_1_0","","PA-RISC 1.0 big-endian.",null,null],[17,"EFA_PARISC_1_1","","PA-RISC 1.1 big-endian.",null,null],[17,"EFA_PARISC_2_0","","PA-RISC 2.0 big-endian.",null,null],[17,"SHN_PARISC_ANSI_COMMON","","Section for tenatively declared symbols in ANSI C.",null,null],[17,"SHN_PARISC_HUGE_COMMON","","Common blocks in huge model.",null,null],[17,"SHT_PARISC_EXT","","Contains product specific ext.",null,null],[17,"SHT_PARISC_UNWIND","","Unwind information.",null,null],[17,"SHT_PARISC_DOC","","Debug info for optimized code.",null,null],[17,"SHF_PARISC_SHORT","","Section with short addressing.",null,null],[17,"SHF_PARISC_HUGE","","Section far from gp.",null,null],[17,"SHF_PARISC_SBP","","Static branch prediction code.",null,null],[17,"STT_PARISC_MILLICODE","","Millicode function entry point.",null,null],[17,"STT_HP_OPAQUE","","",null,null],[17,"STT_HP_STUB","","",null,null],[17,"R_PARISC_NONE","","No reloc.",null,null],[17,"R_PARISC_DIR32","","Direct 32-bit reference.",null,null],[17,"R_PARISC_DIR21L","","Left 21 bits of eff. address.",null,null],[17,"R_PARISC_DIR17R","","Right 17 bits of eff. address.",null,null],[17,"R_PARISC_DIR17F","","17 bits of eff. address.",null,null],[17,"R_PARISC_DIR14R","","Right 14 bits of eff. address.",null,null],[17,"R_PARISC_PCREL32","","32-bit rel. address.",null,null],[17,"R_PARISC_PCREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17R","","Right 17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17F","","17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_DPREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_DPREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_GPREL21L","","GP-relative, left 21 bits.",null,null],[17,"R_PARISC_GPREL14R","","GP-relative, right 14 bits.",null,null],[17,"R_PARISC_LTOFF21L","","LT-relative, left 21 bits.",null,null],[17,"R_PARISC_LTOFF14R","","LT-relative, right 14 bits.",null,null],[17,"R_PARISC_SECREL32","","32 bits section rel. address.",null,null],[17,"R_PARISC_SEGBASE","","No relocation, set segment base.",null,null],[17,"R_PARISC_SEGREL32","","32 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF21L","","PLT rel. address, left 21 bits.",null,null],[17,"R_PARISC_PLTOFF14R","","PLT rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR32","","32 bits LT-rel. function pointer.",null,null],[17,"R_PARISC_LTOFF_FPTR21L","","LT-rel. fct ptr, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14R","","LT-rel. fct ptr, right 14 bits.",null,null],[17,"R_PARISC_FPTR64","","64 bits function address.",null,null],[17,"R_PARISC_PLABEL32","","32 bits function address.",null,null],[17,"R_PARISC_PLABEL21L","","Left 21 bits of fdesc address.",null,null],[17,"R_PARISC_PLABEL14R","","Right 14 bits of fdesc address.",null,null],[17,"R_PARISC_PCREL64","","64 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL22F","","22 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL14WR","","PC-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL14DR","","PC rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL16F","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16WF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16DF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_DIR64","","64 bits of eff. address.",null,null],[17,"R_PARISC_DIR14WR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR14DR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR16F","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16WF","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16DF","","16 bits of eff. address.",null,null],[17,"R_PARISC_GPREL64","","64 bits of GP-rel. address.",null,null],[17,"R_PARISC_GPREL14WR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL14DR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL16F","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16WF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16DF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_LTOFF64","","64 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF14WR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF14DR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16WF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16DF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_SECREL64","","64 bits section rel. address.",null,null],[17,"R_PARISC_SEGREL64","","64 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF14WR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF14DR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16WF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16DF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_LTOFF_FPTR64","","64 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR14WR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14DR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR16F","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16WF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16DF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LORESERVE","","",null,null],[17,"R_PARISC_COPY","","Copy relocation.",null,null],[17,"R_PARISC_IPLT","","Dynamic reloc, imported PLT",null,null],[17,"R_PARISC_EPLT","","Dynamic reloc, exported PLT",null,null],[17,"R_PARISC_TPREL32","","32 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL21L","","TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_TPREL14R","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP21L","","LT-TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_TP14R","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14F","","14 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_TPREL64","","64 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL14WR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL14DR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL16F","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16WF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16DF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP64","","64 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP14WR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14DR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP16F","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16WF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16DF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_GNU_VTENTRY","","",null,null],[17,"R_PARISC_GNU_VTINHERIT","","",null,null],[17,"R_PARISC_TLS_GD21L","","GD 21-bit left.",null,null],[17,"R_PARISC_TLS_GD14R","","GD 14-bit right.",null,null],[17,"R_PARISC_TLS_GDCALL","","GD call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDM21L","","LD module 21-bit left.",null,null],[17,"R_PARISC_TLS_LDM14R","","LD module 14-bit right.",null,null],[17,"R_PARISC_TLS_LDMCALL","","LD module call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDO21L","","LD offset 21-bit left.",null,null],[17,"R_PARISC_TLS_LDO14R","","LD offset 14-bit right.",null,null],[17,"R_PARISC_TLS_DTPMOD32","","DTP module 32-bit.",null,null],[17,"R_PARISC_TLS_DTPMOD64","","DTP module 64-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF32","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF64","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_LE21L","","",null,null],[17,"R_PARISC_TLS_LE14R","","",null,null],[17,"R_PARISC_TLS_IE21L","","",null,null],[17,"R_PARISC_TLS_IE14R","","",null,null],[17,"R_PARISC_TLS_TPREL32","","",null,null],[17,"R_PARISC_TLS_TPREL64","","",null,null],[17,"R_PARISC_HIRESERVE","","",null,null],[17,"PT_HP_TLS","","",null,null],[17,"PT_HP_CORE_NONE","","",null,null],[17,"PT_HP_CORE_VERSION","","",null,null],[17,"PT_HP_CORE_KERNEL","","",null,null],[17,"PT_HP_CORE_COMM","","",null,null],[17,"PT_HP_CORE_PROC","","",null,null],[17,"PT_HP_CORE_LOADABLE","","",null,null],[17,"PT_HP_CORE_STACK","","",null,null],[17,"PT_HP_CORE_SHM","","",null,null],[17,"PT_HP_CORE_MMF","","",null,null],[17,"PT_HP_PARALLEL","","",null,null],[17,"PT_HP_FASTBIND","","",null,null],[17,"PT_HP_OPT_ANNOT","","",null,null],[17,"PT_HP_HSL_ANNOT","","",null,null],[17,"PT_HP_STACK","","",null,null],[17,"PT_PARISC_ARCHEXT","","",null,null],[17,"PT_PARISC_UNWIND","","",null,null],[17,"PF_PARISC_SBP","","",null,null],[17,"PF_HP_PAGE_SIZE","","",null,null],[17,"PF_HP_FAR_SHARED","","",null,null],[17,"PF_HP_NEAR_SHARED","","",null,null],[17,"PF_HP_CODE","","",null,null],[17,"PF_HP_MODIFY","","",null,null],[17,"PF_HP_LAZYSWAP","","",null,null],[17,"PF_HP_SBP","","",null,null],[17,"EF_ALPHA_32BIT","","All addresses must be < 2GB.",null,null],[17,"EF_ALPHA_CANRELAX","","Relocations for relaxing exist.",null,null],[17,"SHT_ALPHA_DEBUG","","",null,null],[17,"SHT_ALPHA_REGINFO","","",null,null],[17,"SHF_ALPHA_GPREL","","",null,null],[17,"STO_ALPHA_NOPV","","No PV required.",null,null],[17,"STO_ALPHA_STD_GPLOAD","","PV only used for initial ldgp.",null,null],[17,"R_ALPHA_NONE","","No reloc",null,null],[17,"R_ALPHA_REFLONG","","Direct 32 bit",null,null],[17,"R_ALPHA_REFQUAD","","Direct 64 bit",null,null],[17,"R_ALPHA_GPREL32","","GP relative 32 bit",null,null],[17,"R_ALPHA_LITERAL","","GP relative 16 bit w/optimization",null,null],[17,"R_ALPHA_LITUSE","","Optimization hint for LITERAL",null,null],[17,"R_ALPHA_GPDISP","","Add displacement to GP",null,null],[17,"R_ALPHA_BRADDR","","PC+4 relative 23 bit shifted",null,null],[17,"R_ALPHA_HINT","","PC+4 relative 16 bit shifted",null,null],[17,"R_ALPHA_SREL16","","PC relative 16 bit",null,null],[17,"R_ALPHA_SREL32","","PC relative 32 bit",null,null],[17,"R_ALPHA_SREL64","","PC relative 64 bit",null,null],[17,"R_ALPHA_GPRELHIGH","","GP relative 32 bit, high 16 bits",null,null],[17,"R_ALPHA_GPRELLOW","","GP relative 32 bit, low 16 bits",null,null],[17,"R_ALPHA_GPREL16","","GP relative 16 bit",null,null],[17,"R_ALPHA_COPY","","Copy symbol at runtime",null,null],[17,"R_ALPHA_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ALPHA_JMP_SLOT","","Create PLT entry",null,null],[17,"R_ALPHA_RELATIVE","","Adjust by program base",null,null],[17,"R_ALPHA_TLS_GD_HI","","",null,null],[17,"R_ALPHA_TLSGD","","",null,null],[17,"R_ALPHA_TLS_LDM","","",null,null],[17,"R_ALPHA_DTPMOD64","","",null,null],[17,"R_ALPHA_GOTDTPREL","","",null,null],[17,"R_ALPHA_DTPREL64","","",null,null],[17,"R_ALPHA_DTPRELHI","","",null,null],[17,"R_ALPHA_DTPRELLO","","",null,null],[17,"R_ALPHA_DTPREL16","","",null,null],[17,"R_ALPHA_GOTTPREL","","",null,null],[17,"R_ALPHA_TPREL64","","",null,null],[17,"R_ALPHA_TPRELHI","","",null,null],[17,"R_ALPHA_TPRELLO","","",null,null],[17,"R_ALPHA_TPREL16","","",null,null],[17,"LITUSE_ALPHA_ADDR","","",null,null],[17,"LITUSE_ALPHA_BASE","","",null,null],[17,"LITUSE_ALPHA_BYTOFF","","",null,null],[17,"LITUSE_ALPHA_JSR","","",null,null],[17,"LITUSE_ALPHA_TLS_GD","","",null,null],[17,"LITUSE_ALPHA_TLS_LDM","","",null,null],[17,"DT_ALPHA_PLTRO","","",null,null],[17,"EF_PPC_EMB","","PowerPC embedded flag",null,null],[17,"EF_PPC_RELOCATABLE","","PowerPC -mrelocatable flag",null,null],[17,"EF_PPC_RELOCATABLE_LIB","","PowerPC -mrelocatable-lib flag",null,null],[17,"R_PPC_NONE","","",null,null],[17,"R_PPC_ADDR32","","32bit absolute address",null,null],[17,"R_PPC_ADDR24","","26bit address, 2 bits ignored.",null,null],[17,"R_PPC_ADDR16","","16bit absolute address",null,null],[17,"R_PPC_ADDR16_LO","","lower 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HI","","high 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HA","","adjusted high 16bit",null,null],[17,"R_PPC_ADDR14","","16bit address, 2 bits ignored",null,null],[17,"R_PPC_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC_REL24","","PC relative 26 bit",null,null],[17,"R_PPC_REL14","","PC relative 16 bit",null,null],[17,"R_PPC_REL14_BRTAKEN","","",null,null],[17,"R_PPC_REL14_BRNTAKEN","","",null,null],[17,"R_PPC_GOT16","","",null,null],[17,"R_PPC_GOT16_LO","","",null,null],[17,"R_PPC_GOT16_HI","","",null,null],[17,"R_PPC_GOT16_HA","","",null,null],[17,"R_PPC_PLTREL24","","",null,null],[17,"R_PPC_COPY","","",null,null],[17,"R_PPC_GLOB_DAT","","",null,null],[17,"R_PPC_JMP_SLOT","","",null,null],[17,"R_PPC_RELATIVE","","",null,null],[17,"R_PPC_LOCAL24PC","","",null,null],[17,"R_PPC_UADDR32","","",null,null],[17,"R_PPC_UADDR16","","",null,null],[17,"R_PPC_REL32","","",null,null],[17,"R_PPC_PLT32","","",null,null],[17,"R_PPC_PLTREL32","","",null,null],[17,"R_PPC_PLT16_LO","","",null,null],[17,"R_PPC_PLT16_HI","","",null,null],[17,"R_PPC_PLT16_HA","","",null,null],[17,"R_PPC_SDAREL16","","",null,null],[17,"R_PPC_SECTOFF","","",null,null],[17,"R_PPC_SECTOFF_LO","","",null,null],[17,"R_PPC_SECTOFF_HI","","",null,null],[17,"R_PPC_SECTOFF_HA","","",null,null],[17,"R_PPC_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC_DTPMOD32","","word32  (sym+add)@dtpmod",null,null],[17,"R_PPC_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC_TPREL32","","word32  (sym+add)@tprel",null,null],[17,"R_PPC_DTPREL16","","half16*(sym+add)@dtprel",null,null],[17,"R_PPC_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC_DTPREL32","","word32  (sym+add)@dtprel",null,null],[17,"R_PPC_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC_GOT_TPREL16","","half16* (sym+add)@got@tprel",null,null],[17,"R_PPC_GOT_TPREL16_LO","","half16  (sym+add)@got@tprel@l",null,null],[17,"R_PPC_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC_GOT_DTPREL16","","half16* (sym+add)@got@dtprel",null,null],[17,"R_PPC_GOT_DTPREL16_LO","","half16* (sym+add)@got@dtprel@l",null,null],[17,"R_PPC_GOT_DTPREL16_HI","","half16* (sym+add)@got@dtprel@h",null,null],[17,"R_PPC_GOT_DTPREL16_HA","","half16* (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC_EMB_NADDR32","","",null,null],[17,"R_PPC_EMB_NADDR16","","",null,null],[17,"R_PPC_EMB_NADDR16_LO","","",null,null],[17,"R_PPC_EMB_NADDR16_HI","","",null,null],[17,"R_PPC_EMB_NADDR16_HA","","",null,null],[17,"R_PPC_EMB_SDAI16","","",null,null],[17,"R_PPC_EMB_SDA2I16","","",null,null],[17,"R_PPC_EMB_SDA2REL","","",null,null],[17,"R_PPC_EMB_SDA21","","16 bit offset in SDA",null,null],[17,"R_PPC_EMB_MRKREF","","",null,null],[17,"R_PPC_EMB_RELSEC16","","",null,null],[17,"R_PPC_EMB_RELST_LO","","",null,null],[17,"R_PPC_EMB_RELST_HI","","",null,null],[17,"R_PPC_EMB_RELST_HA","","",null,null],[17,"R_PPC_EMB_BIT_FLD","","",null,null],[17,"R_PPC_EMB_RELSDA","","16 bit relative offset in SDA",null,null],[17,"R_PPC_DIAB_SDA21_LO","","like EMB_SDA21, but lower 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HI","","like EMB_SDA21, but high 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HA","","like EMB_SDA21, adjusted high 16",null,null],[17,"R_PPC_DIAB_RELSDA_LO","","like EMB_RELSDA, but lower 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HI","","like EMB_RELSDA, but high 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HA","","like EMB_RELSDA, adjusted high 16",null,null],[17,"R_PPC_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"R_PPC_TOC16","","This is a phony reloc to handle any old fashioned TOC16 …",null,null],[17,"DT_PPC_GOT","","",null,null],[17,"DT_PPC_OPT","","",null,null],[17,"PPC_OPT_TLS","","",null,null],[17,"R_PPC64_NONE","","",null,null],[17,"R_PPC64_ADDR32","","32bit absolute address",null,null],[17,"R_PPC64_ADDR24","","26bit address, word aligned",null,null],[17,"R_PPC64_ADDR16","","16bit absolute address",null,null],[17,"R_PPC64_ADDR16_LO","","lower 16bits of address",null,null],[17,"R_PPC64_ADDR16_HI","","high 16bits of address.",null,null],[17,"R_PPC64_ADDR16_HA","","adjusted high 16bits.",null,null],[17,"R_PPC64_ADDR14","","16bit address, word aligned",null,null],[17,"R_PPC64_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC64_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC64_REL24","","PC-rel. 26 bit, word aligned",null,null],[17,"R_PPC64_REL14","","PC relative 16 bit",null,null],[17,"R_PPC64_REL14_BRTAKEN","","",null,null],[17,"R_PPC64_REL14_BRNTAKEN","","",null,null],[17,"R_PPC64_GOT16","","",null,null],[17,"R_PPC64_GOT16_LO","","",null,null],[17,"R_PPC64_GOT16_HI","","",null,null],[17,"R_PPC64_GOT16_HA","","",null,null],[17,"R_PPC64_COPY","","",null,null],[17,"R_PPC64_GLOB_DAT","","",null,null],[17,"R_PPC64_JMP_SLOT","","",null,null],[17,"R_PPC64_RELATIVE","","",null,null],[17,"R_PPC64_UADDR32","","",null,null],[17,"R_PPC64_UADDR16","","",null,null],[17,"R_PPC64_REL32","","",null,null],[17,"R_PPC64_PLT32","","",null,null],[17,"R_PPC64_PLTREL32","","",null,null],[17,"R_PPC64_PLT16_LO","","",null,null],[17,"R_PPC64_PLT16_HI","","",null,null],[17,"R_PPC64_PLT16_HA","","",null,null],[17,"R_PPC64_SECTOFF","","",null,null],[17,"R_PPC64_SECTOFF_LO","","",null,null],[17,"R_PPC64_SECTOFF_HI","","",null,null],[17,"R_PPC64_SECTOFF_HA","","",null,null],[17,"R_PPC64_ADDR30","","word30 (S + A - P) >> 2",null,null],[17,"R_PPC64_ADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_ADDR16_HIGHER","","half16 #higher(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHERA","","half16 #highera(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHEST","","half16 #highest(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHESTA","","half16 #highesta(S + A)",null,null],[17,"R_PPC64_UADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_REL64","","doubleword64 S + A - P",null,null],[17,"R_PPC64_PLT64","","doubleword64 L + A",null,null],[17,"R_PPC64_PLTREL64","","doubleword64 L + A - P",null,null],[17,"R_PPC64_TOC16","","half16* S + A - .TOC",null,null],[17,"R_PPC64_TOC16_LO","","half16 #lo(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HI","","half16 #hi(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HA","","half16 #ha(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC","","doubleword64 .TOC",null,null],[17,"R_PPC64_PLTGOT16","","half16* M + A",null,null],[17,"R_PPC64_PLTGOT16_LO","","half16 #lo(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HI","","half16 #hi(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HA","","half16 #ha(M + A)",null,null],[17,"R_PPC64_ADDR16_DS","","half16ds* (S + A) >> 2",null,null],[17,"R_PPC64_ADDR16_LO_DS","","half16ds  #lo(S + A) >> 2",null,null],[17,"R_PPC64_GOT16_DS","","half16ds* (G + A) >> 2",null,null],[17,"R_PPC64_GOT16_LO_DS","","half16ds  #lo(G + A) >> 2",null,null],[17,"R_PPC64_PLT16_LO_DS","","half16ds  #lo(L + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_DS","","half16ds* (R + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_LO_DS","","half16ds  #lo(R + A) >> 2",null,null],[17,"R_PPC64_TOC16_DS","","half16ds* (S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_TOC16_LO_DS","","half16ds  #lo(S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_PLTGOT16_DS","","half16ds* (M + A) >> 2",null,null],[17,"R_PPC64_PLTGOT16_LO_DS","","half16ds  #lo(M + A) >> 2",null,null],[17,"R_PPC64_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC64_DTPMOD64","","doubleword64 (sym+add)@dtpmod",null,null],[17,"R_PPC64_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC64_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC64_TPREL64","","doubleword64 (sym+add)@tprel",null,null],[17,"R_PPC64_DTPREL16","","half16* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC64_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC64_DTPREL64","","doubleword64 (sym+add)@dtprel",null,null],[17,"R_PPC64_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC64_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC64_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC64_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC64_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC64_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC64_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC64_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC64_GOT_TPREL16_DS","","half16ds* (sym+add)@got@tprel",null,null],[17,"R_PPC64_GOT_TPREL16_LO_DS","","half16ds (sym+add)@got@tprel@l",null,null],[17,"R_PPC64_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC64_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC64_GOT_DTPREL16_DS","","half16ds* (sym+add)@got@dtprel",null,null],[17,"R_PPC64_GOT_DTPREL16_LO_DS","","half16ds (sym+add)@got@dtprel@l",null,null],[17,"R_PPC64_GOT_DTPREL16_HI","","half16  (sym+add)@got@dtprel@h",null,null],[17,"R_PPC64_GOT_DTPREL16_HA","","half16  (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC64_TPREL16_DS","","half16ds* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO_DS","","half16ds (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HIGHER","","half16  (sym+add)@tprel@higher",null,null],[17,"R_PPC64_TPREL16_HIGHERA","","half16  (sym+add)@tprel@highera",null,null],[17,"R_PPC64_TPREL16_HIGHEST","","half16  (sym+add)@tprel@highest",null,null],[17,"R_PPC64_TPREL16_HIGHESTA","","half16  (sym+add)@tprel@highesta",null,null],[17,"R_PPC64_DTPREL16_DS","","half16ds* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO_DS","","half16ds (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HIGHER","","half16  (sym+add)@dtprel@higher",null,null],[17,"R_PPC64_DTPREL16_HIGHERA","","half16  (sym+add)@dtprel@highera",null,null],[17,"R_PPC64_DTPREL16_HIGHEST","","half16  (sym+add)@dtprel@highest",null,null],[17,"R_PPC64_DTPREL16_HIGHESTA","","half16  (sym+add)@dtprel@highesta",null,null],[17,"R_PPC64_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC64_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC64_TOCSAVE","","none",null,null],[17,"R_PPC64_ADDR16_HIGH","","",null,null],[17,"R_PPC64_ADDR16_HIGHA","","",null,null],[17,"R_PPC64_TPREL16_HIGH","","",null,null],[17,"R_PPC64_TPREL16_HIGHA","","",null,null],[17,"R_PPC64_DTPREL16_HIGH","","",null,null],[17,"R_PPC64_DTPREL16_HIGHA","","",null,null],[17,"R_PPC64_JMP_IREL","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC64_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC64_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC64_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"EF_PPC64_ABI","","PowerPC64 bits specifying ABI.",null,null],[17,"DT_PPC64_GLINK","","",null,null],[17,"DT_PPC64_OPD","","",null,null],[17,"DT_PPC64_OPDSZ","","",null,null],[17,"DT_PPC64_OPT","","",null,null],[17,"PPC64_OPT_TLS","","",null,null],[17,"PPC64_OPT_MULTI_TOC","","",null,null],[17,"PPC64_OPT_LOCALENTRY","","",null,null],[17,"STO_PPC64_LOCAL_BIT","","",null,null],[17,"STO_PPC64_LOCAL_MASK","","",null,null],[17,"EF_ARM_RELEXEC","","",null,null],[17,"EF_ARM_HASENTRY","","",null,null],[17,"EF_ARM_INTERWORK","","",null,null],[17,"EF_ARM_APCS_26","","",null,null],[17,"EF_ARM_APCS_FLOAT","","",null,null],[17,"EF_ARM_PIC","","",null,null],[17,"EF_ARM_ALIGN8","","8-bit structure alignment is in use",null,null],[17,"EF_ARM_NEW_ABI","","",null,null],[17,"EF_ARM_OLD_ABI","","",null,null],[17,"EF_ARM_SOFT_FLOAT","","",null,null],[17,"EF_ARM_VFP_FLOAT","","",null,null],[17,"EF_ARM_MAVERICK_FLOAT","","",null,null],[17,"EF_ARM_ABI_FLOAT_SOFT","","NB conflicts with EF_ARM_SOFT_FLOAT",null,null],[17,"EF_ARM_ABI_FLOAT_HARD","","NB conflicts with EF_ARM_VFP_FLOAT",null,null],[17,"EF_ARM_SYMSARESORTED","","",null,null],[17,"EF_ARM_DYNSYMSUSESEGIDX","","",null,null],[17,"EF_ARM_MAPSYMSFIRST","","",null,null],[17,"EF_ARM_BE8","","",null,null],[17,"EF_ARM_LE8","","",null,null],[17,"EF_ARM_EABIMASK","","",null,null],[17,"EF_ARM_EABI_UNKNOWN","","",null,null],[17,"EF_ARM_EABI_VER1","","",null,null],[17,"EF_ARM_EABI_VER2","","",null,null],[17,"EF_ARM_EABI_VER3","","",null,null],[17,"EF_ARM_EABI_VER4","","",null,null],[17,"EF_ARM_EABI_VER5","","",null,null],[17,"STT_ARM_TFUNC","","A Thumb function.",null,null],[17,"STT_ARM_16BIT","","A Thumb label.",null,null],[17,"SHF_ARM_ENTRYSECT","","Section contains an entry point",null,null],[17,"SHF_ARM_COMDEF","","Section may be multiply defined in the input to a link …",null,null],[17,"PF_ARM_SB","","Segment contains the location addressed by the static …",null,null],[17,"PF_ARM_PI","","Position-independent segment.",null,null],[17,"PF_ARM_ABS","","Absolute segment.",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment.",null,null],[17,"SHT_ARM_EXIDX","","ARM unwind section.",null,null],[17,"SHT_ARM_PREEMPTMAP","","Preemption details.",null,null],[17,"SHT_ARM_ATTRIBUTES","","ARM attributes section.",null,null],[17,"R_AARCH64_NONE","","No relocation.",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit.",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit.",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit.",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit.",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit.",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0.",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16.",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32.",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2.",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check.",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0.",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2.",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2.",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL.",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1.",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2.",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3.",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48.",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit.",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit.",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2.",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3.",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12.",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0.",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0.",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0.",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12.",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3.",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3.",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck.",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR.",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD.",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit.",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch.",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR).",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL).",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC (Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation.",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation.",null,null],[17,"R_ARM_THM_SWI8","","Reserved.",null,null],[17,"R_ARM_XPC25","","Reserved.",null,null],[17,"R_ARM_THM_XPC22","","Reserved.",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address.",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX).",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL).",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W).",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base.",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete.",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative.",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative.",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT).",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT).",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W).",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ).",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W).",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit.",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit.",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC).",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT).",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation.",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry.",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry.",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR).",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B).",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B).",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_ME_TOO","","Obsolete.",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_CKCORE_NONE","","no reloc",null,null],[17,"R_CKCORE_ADDR32","","direct 32 bit (S + A)",null,null],[17,"R_CKCORE_PCRELIMM8BY4","","disp ((S + A - P) >> 2) & 0xff",null,null],[17,"R_CKCORE_PCRELIMM11BY2","","disp ((S + A - P) >> 1) & 0x7ff",null,null],[17,"R_CKCORE_PCREL32","","32-bit rel (S + A - P)",null,null],[17,"R_CKCORE_PCRELJSR_IMM11BY2","","disp ((S + A - P) >>1) & 0x7ff",null,null],[17,"R_CKCORE_RELATIVE","","32 bit adjust program base(B + A)",null,null],[17,"R_CKCORE_COPY","","32 bit adjust by program base",null,null],[17,"R_CKCORE_GLOB_DAT","","off between got and sym (S)",null,null],[17,"R_CKCORE_JUMP_SLOT","","PLT entry (S)",null,null],[17,"R_CKCORE_GOTOFF","","offset to GOT (S + A - GOT)",null,null],[17,"R_CKCORE_GOTPC","","PC offset to GOT (GOT + A - P)",null,null],[17,"R_CKCORE_GOT32","","32 bit GOT entry (G)",null,null],[17,"R_CKCORE_PLT32","","32 bit PLT entry (G)",null,null],[17,"R_CKCORE_ADDRGOT","","GOT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_ADDRPLT","","PLT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_PCREL_IMM26BY2","","((S + A - P) >> 1) & 0x3ff_ffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY2","","disp ((S + A - P) >> 1) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY4","","disp ((S + A - P) >> 2) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM10BY2","","disp ((S + A - P) >> 1) & 0x3ff",null,null],[17,"R_CKCORE_PCREL_IMM10BY4","","disp ((S + A - P) >> 2) & 0x3ff",null,null],[17,"R_CKCORE_ADDR_HI16","","high & low 16 bit ADDR, ((S + A) >> 16) & 0xffff",null,null],[17,"R_CKCORE_ADDR_LO16","","(S + A) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_HI16","","high & low 16 bit GOTPC, ((GOT + A - P) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_LO16","","(GOT + A - P) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_HI16","","high & low 16 bit GOTOFF, ((S + A - GOT) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_LO16","","(S + A - GOT) & 0xffff",null,null],[17,"R_CKCORE_GOT12","","12 bit disp GOT entry (G)",null,null],[17,"R_CKCORE_GOT_HI16","","high & low 16 bit GOT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOT_LO16","","(G & 0xffff)",null,null],[17,"R_CKCORE_PLT12","","12 bit disp PLT entry (G)",null,null],[17,"R_CKCORE_PLT_HI16","","high & low 16 bit PLT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_PLT_LO16","","G & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_HI16","","high & low 16 bit ADDRGOT, (GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_LO16","","(GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRPLT_HI16","","high & low 16 bit ADDRPLT, ((GOT + G * 4) >> 16) & 0xFFFF",null,null],[17,"R_CKCORE_ADDRPLT_LO16","","(GOT+G*4) & 0xffff",null,null],[17,"R_CKCORE_PCREL_JSR_IMM26BY2","","disp ((S+A-P) >>1) & x3ff_ffff",null,null],[17,"R_CKCORE_TOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_DOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM18BY2","","disp ((S+A-P) >>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18","","disp (S+A-BDATA) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY2","","disp ((S+A-BDATA)>>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY4","","disp ((S+A-BDATA)>>2) & 0x3ffff",null,null],[17,"R_CKCORE_GOT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PLT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PCREL_IMM7BY4","","disp ((S+A-P) >>2) & 0x7f",null,null],[17,"R_CKCORE_TLS_LE32","","32 bit offset to TLS block",null,null],[17,"R_CKCORE_TLS_IE32","","",null,null],[17,"R_CKCORE_TLS_GD32","","",null,null],[17,"R_CKCORE_TLS_LDM32","","",null,null],[17,"R_CKCORE_TLS_LDO32","","",null,null],[17,"R_CKCORE_TLS_DTPMOD32","","",null,null],[17,"R_CKCORE_TLS_DTPOFF32","","",null,null],[17,"R_CKCORE_TLS_TPOFF32","","",null,null],[17,"EF_CSKY_ABIMASK","","",null,null],[17,"EF_CSKY_OTHER","","",null,null],[17,"EF_CSKY_PROCESSOR","","",null,null],[17,"EF_CSKY_ABIV1","","",null,null],[17,"EF_CSKY_ABIV2","","",null,null],[17,"SHT_CSKY_ATTRIBUTES","","C-SKY attributes section.",null,null],[17,"EF_IA_64_MASKOS","","os-specific flags",null,null],[17,"EF_IA_64_ABI64","","64-bit ABI",null,null],[17,"EF_IA_64_ARCH","","arch. version mask",null,null],[17,"PT_IA_64_ARCHEXT","","arch extension bits",null,null],[17,"PT_IA_64_UNWIND","","ia64 unwind bits",null,null],[17,"PT_IA_64_HP_OPT_ANOT","","",null,null],[17,"PT_IA_64_HP_HSL_ANOT","","",null,null],[17,"PT_IA_64_HP_STACK","","",null,null],[17,"PF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"SHT_IA_64_EXT","","extension bits",null,null],[17,"SHT_IA_64_UNWIND","","unwind bits",null,null],[17,"SHF_IA_64_SHORT","","section near gp",null,null],[17,"SHF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"DT_IA_64_PLT_RESERVE","","",null,null],[17,"R_IA64_NONE","","none",null,null],[17,"R_IA64_IMM14","","symbol + addend, add imm14",null,null],[17,"R_IA64_IMM22","","symbol + addend, add imm22",null,null],[17,"R_IA64_IMM64","","symbol + addend, mov imm64",null,null],[17,"R_IA64_DIR32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_DIR32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_DIR64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_DIR64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_GPREL22","","@gprel(sym + add), add imm22",null,null],[17,"R_IA64_GPREL64I","","@gprel(sym + add), mov imm64",null,null],[17,"R_IA64_GPREL32MSB","","@gprel(sym + add), data4 MSB",null,null],[17,"R_IA64_GPREL32LSB","","@gprel(sym + add), data4 LSB",null,null],[17,"R_IA64_GPREL64MSB","","@gprel(sym + add), data8 MSB",null,null],[17,"R_IA64_GPREL64LSB","","@gprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF22","","@ltoff(sym + add), add imm22",null,null],[17,"R_IA64_LTOFF64I","","@ltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF22","","@pltoff(sym + add), add imm22",null,null],[17,"R_IA64_PLTOFF64I","","@pltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF64MSB","","@pltoff(sym + add), data8 MSB",null,null],[17,"R_IA64_PLTOFF64LSB","","@pltoff(sym + add), data8 LSB",null,null],[17,"R_IA64_FPTR64I","","@fptr(sym + add), mov imm64",null,null],[17,"R_IA64_FPTR32MSB","","@fptr(sym + add), data4 MSB",null,null],[17,"R_IA64_FPTR32LSB","","@fptr(sym + add), data4 LSB",null,null],[17,"R_IA64_FPTR64MSB","","@fptr(sym + add), data8 MSB",null,null],[17,"R_IA64_FPTR64LSB","","@fptr(sym + add), data8 LSB",null,null],[17,"R_IA64_PCREL60B","","@pcrel(sym + add), brl",null,null],[17,"R_IA64_PCREL21B","","@pcrel(sym + add), ptb, call",null,null],[17,"R_IA64_PCREL21M","","@pcrel(sym + add), chk.s",null,null],[17,"R_IA64_PCREL21F","","@pcrel(sym + add), fchkf",null,null],[17,"R_IA64_PCREL32MSB","","@pcrel(sym + add), data4 MSB",null,null],[17,"R_IA64_PCREL32LSB","","@pcrel(sym + add), data4 LSB",null,null],[17,"R_IA64_PCREL64MSB","","@pcrel(sym + add), data8 MSB",null,null],[17,"R_IA64_PCREL64LSB","","@pcrel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_FPTR22","","@ltoff(@fptr(s+a)), imm22",null,null],[17,"R_IA64_LTOFF_FPTR64I","","@ltoff(@fptr(s+a)), imm64",null,null],[17,"R_IA64_LTOFF_FPTR32MSB","","@ltoff(@fptr(s+a)), data4 MSB",null,null],[17,"R_IA64_LTOFF_FPTR32LSB","","@ltoff(@fptr(s+a)), data4 LSB",null,null],[17,"R_IA64_LTOFF_FPTR64MSB","","@ltoff(@fptr(s+a)), data8 MSB",null,null],[17,"R_IA64_LTOFF_FPTR64LSB","","@ltoff(@fptr(s+a)), data8 LSB",null,null],[17,"R_IA64_SEGREL32MSB","","@segrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SEGREL32LSB","","@segrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SEGREL64MSB","","@segrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SEGREL64LSB","","@segrel(sym + add), data8 LSB",null,null],[17,"R_IA64_SECREL32MSB","","@secrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SECREL32LSB","","@secrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SECREL64MSB","","@secrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SECREL64LSB","","@secrel(sym + add), data8 LSB",null,null],[17,"R_IA64_REL32MSB","","data 4 + REL",null,null],[17,"R_IA64_REL32LSB","","data 4 + REL",null,null],[17,"R_IA64_REL64MSB","","data 8 + REL",null,null],[17,"R_IA64_REL64LSB","","data 8 + REL",null,null],[17,"R_IA64_LTV32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_LTV32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_LTV64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_LTV64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_PCREL21BI","","@pcrel(sym + add), 21bit inst",null,null],[17,"R_IA64_PCREL22","","@pcrel(sym + add), 22bit inst",null,null],[17,"R_IA64_PCREL64I","","@pcrel(sym + add), 64bit inst",null,null],[17,"R_IA64_IPLTMSB","","dynamic reloc, imported PLT, MSB",null,null],[17,"R_IA64_IPLTLSB","","dynamic reloc, imported PLT, LSB",null,null],[17,"R_IA64_COPY","","copy relocation",null,null],[17,"R_IA64_SUB","","Addend and symbol difference",null,null],[17,"R_IA64_LTOFF22X","","LTOFF22, relaxable.",null,null],[17,"R_IA64_LDXMOV","","Use of LTOFF22X.",null,null],[17,"R_IA64_TPREL14","","@tprel(sym + add), imm14",null,null],[17,"R_IA64_TPREL22","","@tprel(sym + add), imm22",null,null],[17,"R_IA64_TPREL64I","","@tprel(sym + add), imm64",null,null],[17,"R_IA64_TPREL64MSB","","@tprel(sym + add), data8 MSB",null,null],[17,"R_IA64_TPREL64LSB","","@tprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_TPREL22","","@ltoff(@tprel(s+a)), imm2",null,null],[17,"R_IA64_DTPMOD64MSB","","@dtpmod(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPMOD64LSB","","@dtpmod(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPMOD22","","@ltoff(@dtpmod(sym + add)), imm22",null,null],[17,"R_IA64_DTPREL14","","@dtprel(sym + add), imm14",null,null],[17,"R_IA64_DTPREL22","","@dtprel(sym + add), imm22",null,null],[17,"R_IA64_DTPREL64I","","@dtprel(sym + add), imm64",null,null],[17,"R_IA64_DTPREL32MSB","","@dtprel(sym + add), data4 MSB",null,null],[17,"R_IA64_DTPREL32LSB","","@dtprel(sym + add), data4 LSB",null,null],[17,"R_IA64_DTPREL64MSB","","@dtprel(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPREL64LSB","","@dtprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPREL22","","@ltoff(@dtprel(s+a)), imm22",null,null],[17,"EF_SH_MACH_MASK","","",null,null],[17,"EF_SH_UNKNOWN","","",null,null],[17,"EF_SH1","","",null,null],[17,"EF_SH2","","",null,null],[17,"EF_SH3","","",null,null],[17,"EF_SH_DSP","","",null,null],[17,"EF_SH3_DSP","","",null,null],[17,"EF_SH4AL_DSP","","",null,null],[17,"EF_SH3E","","",null,null],[17,"EF_SH4","","",null,null],[17,"EF_SH2E","","",null,null],[17,"EF_SH4A","","",null,null],[17,"EF_SH2A","","",null,null],[17,"EF_SH4_NOFPU","","",null,null],[17,"EF_SH4A_NOFPU","","",null,null],[17,"EF_SH4_NOMMU_NOFPU","","",null,null],[17,"EF_SH2A_NOFPU","","",null,null],[17,"EF_SH3_NOMMU","","",null,null],[17,"EF_SH2A_SH4_NOFPU","","",null,null],[17,"EF_SH2A_SH3_NOFPU","","",null,null],[17,"EF_SH2A_SH4","","",null,null],[17,"EF_SH2A_SH3E","","",null,null],[17,"R_SH_NONE","","",null,null],[17,"R_SH_DIR32","","",null,null],[17,"R_SH_REL32","","",null,null],[17,"R_SH_DIR8WPN","","",null,null],[17,"R_SH_IND12W","","",null,null],[17,"R_SH_DIR8WPL","","",null,null],[17,"R_SH_DIR8WPZ","","",null,null],[17,"R_SH_DIR8BP","","",null,null],[17,"R_SH_DIR8W","","",null,null],[17,"R_SH_DIR8L","","",null,null],[17,"R_SH_SWITCH16","","",null,null],[17,"R_SH_SWITCH32","","",null,null],[17,"R_SH_USES","","",null,null],[17,"R_SH_COUNT","","",null,null],[17,"R_SH_ALIGN","","",null,null],[17,"R_SH_CODE","","",null,null],[17,"R_SH_DATA","","",null,null],[17,"R_SH_LABEL","","",null,null],[17,"R_SH_SWITCH8","","",null,null],[17,"R_SH_GNU_VTINHERIT","","",null,null],[17,"R_SH_GNU_VTENTRY","","",null,null],[17,"R_SH_TLS_GD_32","","",null,null],[17,"R_SH_TLS_LD_32","","",null,null],[17,"R_SH_TLS_LDO_32","","",null,null],[17,"R_SH_TLS_IE_32","","",null,null],[17,"R_SH_TLS_LE_32","","",null,null],[17,"R_SH_TLS_DTPMOD32","","",null,null],[17,"R_SH_TLS_DTPOFF32","","",null,null],[17,"R_SH_TLS_TPOFF32","","",null,null],[17,"R_SH_GOT32","","",null,null],[17,"R_SH_PLT32","","",null,null],[17,"R_SH_COPY","","",null,null],[17,"R_SH_GLOB_DAT","","",null,null],[17,"R_SH_JMP_SLOT","","",null,null],[17,"R_SH_RELATIVE","","",null,null],[17,"R_SH_GOTOFF","","",null,null],[17,"R_SH_GOTPC","","",null,null],[17,"EF_S390_HIGH_GPRS","","High GPRs kernel facility needed.",null,null],[17,"R_390_NONE","","No reloc.",null,null],[17,"R_390_8","","Direct 8 bit.",null,null],[17,"R_390_12","","Direct 12 bit.",null,null],[17,"R_390_16","","Direct 16 bit.",null,null],[17,"R_390_32","","Direct 32 bit.",null,null],[17,"R_390_PC32","","PC relative 32 bit.",null,null],[17,"R_390_GOT12","","12 bit GOT offset.",null,null],[17,"R_390_GOT32","","32 bit GOT offset.",null,null],[17,"R_390_PLT32","","32 bit PC relative PLT address.",null,null],[17,"R_390_COPY","","Copy symbol at runtime.",null,null],[17,"R_390_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_390_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_390_RELATIVE","","Adjust by program base.",null,null],[17,"R_390_GOTOFF32","","32 bit offset to GOT.",null,null],[17,"R_390_GOTPC","","32 bit PC relative offset to GOT.",null,null],[17,"R_390_GOT16","","16 bit GOT offset.",null,null],[17,"R_390_PC16","","PC relative 16 bit.",null,null],[17,"R_390_PC16DBL","","PC relative 16 bit shifted by 1.",null,null],[17,"R_390_PLT16DBL","","16 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_PC32DBL","","PC relative 32 bit shifted by 1.",null,null],[17,"R_390_PLT32DBL","","32 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_GOTPCDBL","","32 bit PC rel. GOT shifted by 1.",null,null],[17,"R_390_64","","Direct 64 bit.",null,null],[17,"R_390_PC64","","PC relative 64 bit.",null,null],[17,"R_390_GOT64","","64 bit GOT offset.",null,null],[17,"R_390_PLT64","","64 bit PC relative PLT address.",null,null],[17,"R_390_GOTENT","","32 bit PC rel. to GOT entry >> 1.",null,null],[17,"R_390_GOTOFF16","","16 bit offset to GOT.",null,null],[17,"R_390_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_390_GOTPLT12","","12 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT16","","16 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT32","","32 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT64","","64 bit offset to jump slot.",null,null],[17,"R_390_GOTPLTENT","","32 bit rel. offset to jump slot.",null,null],[17,"R_390_PLTOFF16","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF32","","32 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF64","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_TLS_LOAD","","Tag for load insn in TLS code.",null,null],[17,"R_390_TLS_GDCALL","","Tag for function call in general dynamic TLS code.",null,null],[17,"R_390_TLS_LDCALL","","Tag for function call in local dynamic TLS code.",null,null],[17,"R_390_TLS_GD32","","Direct 32 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GD64","","Direct 64 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GOTIE12","","12 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE32","","32 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE64","","64 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_LDM32","","Direct 32 bit for local dynamic thread local data in LE …",null,null],[17,"R_390_TLS_LDM64","","Direct 64 bit for local dynamic thread local data in LE …",null,null],[17,"R_390_TLS_IE32","","32 bit address of GOT entry for negated static TLS block …",null,null],[17,"R_390_TLS_IE64","","64 bit address of GOT entry for negated static TLS block …",null,null],[17,"R_390_TLS_IEENT","","32 bit rel. offset to GOT entry for negated static TLS …",null,null],[17,"R_390_TLS_LE32","","32 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LE64","","64 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LDO32","","32 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_LDO64","","64 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_390_TLS_DTPOFF","","Offset in TLS block.",null,null],[17,"R_390_TLS_TPOFF","","Negated offset in static TLS block.",null,null],[17,"R_390_20","","Direct 20 bit.",null,null],[17,"R_390_GOT20","","20 bit GOT offset.",null,null],[17,"R_390_GOTPLT20","","20 bit offset to jump slot.",null,null],[17,"R_390_TLS_GOTIE20","","20 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_CRIS_NONE","","",null,null],[17,"R_CRIS_8","","",null,null],[17,"R_CRIS_16","","",null,null],[17,"R_CRIS_32","","",null,null],[17,"R_CRIS_8_PCREL","","",null,null],[17,"R_CRIS_16_PCREL","","",null,null],[17,"R_CRIS_32_PCREL","","",null,null],[17,"R_CRIS_GNU_VTINHERIT","","",null,null],[17,"R_CRIS_GNU_VTENTRY","","",null,null],[17,"R_CRIS_COPY","","",null,null],[17,"R_CRIS_GLOB_DAT","","",null,null],[17,"R_CRIS_JUMP_SLOT","","",null,null],[17,"R_CRIS_RELATIVE","","",null,null],[17,"R_CRIS_16_GOT","","",null,null],[17,"R_CRIS_32_GOT","","",null,null],[17,"R_CRIS_16_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_PCREL","","",null,null],[17,"R_X86_64_NONE","","No reloc",null,null],[17,"R_X86_64_64","","Direct 64 bit",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module\'s TLS block",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for …",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for …",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE …",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor.",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry …",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry …",null,null],[17,"SHT_X86_64_UNWIND","","Unwind information.",null,null],[17,"R_MN10300_NONE","","No reloc.",null,null],[17,"R_MN10300_32","","Direct 32 bit.",null,null],[17,"R_MN10300_16","","Direct 16 bit.",null,null],[17,"R_MN10300_8","","Direct 8 bit.",null,null],[17,"R_MN10300_PCREL32","","PC-relative 32-bit.",null,null],[17,"R_MN10300_PCREL16","","PC-relative 16-bit signed.",null,null],[17,"R_MN10300_PCREL8","","PC-relative 8-bit signed.",null,null],[17,"R_MN10300_GNU_VTINHERIT","","Ancient C++ vtable garbage...",null,null],[17,"R_MN10300_GNU_VTENTRY","","... collection annotation.",null,null],[17,"R_MN10300_24","","Direct 24 bit.",null,null],[17,"R_MN10300_GOTPC32","","32-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTPC16","","16-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTOFF32","","32-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF24","","24-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF16","","16-bit offset from GOT.",null,null],[17,"R_MN10300_PLT32","","32-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_PLT16","","16-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_GOT32","","32-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT24","","24-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT16","","16-bit offset to GOT entry.",null,null],[17,"R_MN10300_COPY","","Copy symbol at runtime.",null,null],[17,"R_MN10300_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MN10300_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_MN10300_RELATIVE","","Adjust by program base.",null,null],[17,"R_MN10300_TLS_GD","","32-bit offset for global dynamic.",null,null],[17,"R_MN10300_TLS_LD","","32-bit offset for local dynamic.",null,null],[17,"R_MN10300_TLS_LDO","","Module-relative offset.",null,null],[17,"R_MN10300_TLS_GOTIE","","GOT offset for static TLS block offset.",null,null],[17,"R_MN10300_TLS_IE","","GOT address for static TLS block offset.",null,null],[17,"R_MN10300_TLS_LE","","Offset relative to static TLS block.",null,null],[17,"R_MN10300_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_MN10300_TLS_DTPOFF","","Offset in module TLS block.",null,null],[17,"R_MN10300_TLS_TPOFF","","Offset in static TLS block.",null,null],[17,"R_MN10300_SYM_DIFF","","Adjustment for next reloc as needed by linker relaxation.",null,null],[17,"R_MN10300_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_M32R_NONE","","No reloc.",null,null],[17,"R_M32R_16","","Direct 16 bit.",null,null],[17,"R_M32R_32","","Direct 32 bit.",null,null],[17,"R_M32R_24","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO","","High 16 bit with unsigned low.",null,null],[17,"R_M32R_HI16_SLO","","High 16 bit with signed low.",null,null],[17,"R_M32R_LO16","","Low 16 bit.",null,null],[17,"R_M32R_SDA16","","16 bit offset in SDA.",null,null],[17,"R_M32R_GNU_VTINHERIT","","",null,null],[17,"R_M32R_GNU_VTENTRY","","",null,null],[17,"R_M32R_16_RELA","","Direct 16 bit.",null,null],[17,"R_M32R_32_RELA","","Direct 32 bit.",null,null],[17,"R_M32R_24_RELA","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL_RELA","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL_RELA","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL_RELA","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO_RELA","","High 16 bit with unsigned low",null,null],[17,"R_M32R_HI16_SLO_RELA","","High 16 bit with signed low",null,null],[17,"R_M32R_LO16_RELA","","Low 16 bit",null,null],[17,"R_M32R_SDA16_RELA","","16 bit offset in SDA",null,null],[17,"R_M32R_RELA_GNU_VTINHERIT","","",null,null],[17,"R_M32R_RELA_GNU_VTENTRY","","",null,null],[17,"R_M32R_REL32","","PC relative 32 bit.",null,null],[17,"R_M32R_GOT24","","24 bit GOT entry",null,null],[17,"R_M32R_26_PLTREL","","26 bit PC relative to PLT shifted",null,null],[17,"R_M32R_COPY","","Copy symbol at runtime",null,null],[17,"R_M32R_GLOB_DAT","","Create GOT entry",null,null],[17,"R_M32R_JMP_SLOT","","Create PLT entry",null,null],[17,"R_M32R_RELATIVE","","Adjust by program base",null,null],[17,"R_M32R_GOTOFF","","24 bit offset to GOT",null,null],[17,"R_M32R_GOTPC24","","24 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOT16_HI_ULO","","High 16 bit GOT entry with unsigned low",null,null],[17,"R_M32R_GOT16_HI_SLO","","High 16 bit GOT entry with signed low",null,null],[17,"R_M32R_GOT16_LO","","Low 16 bit GOT entry",null,null],[17,"R_M32R_GOTPC_HI_ULO","","High 16 bit PC relative offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTPC_HI_SLO","","High 16 bit PC relative offset to GOT with signed low",null,null],[17,"R_M32R_GOTPC_LO","","Low 16 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOTOFF_HI_ULO","","High 16 bit offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTOFF_HI_SLO","","High 16 bit offset to GOT with signed low",null,null],[17,"R_M32R_GOTOFF_LO","","Low 16 bit offset to GOT",null,null],[17,"R_M32R_NUM","","Keep this the last entry.",null,null],[17,"R_MICROBLAZE_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32","","Direct 32 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL","","PC relative 32 bit.",null,null],[17,"R_MICROBLAZE_64_PCREL","","PC relative 64 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL_LO","","Low 16 bits of PCREL32.",null,null],[17,"R_MICROBLAZE_64","","Direct 64 bit.",null,null],[17,"R_MICROBLAZE_32_LO","","Low 16 bit.",null,null],[17,"R_MICROBLAZE_SRO32","","Read-only small data area.",null,null],[17,"R_MICROBLAZE_SRW32","","Read-write small data area.",null,null],[17,"R_MICROBLAZE_64_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32_SYM_OP_SYM","","Symbol Op Symbol relocation.",null,null],[17,"R_MICROBLAZE_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_MICROBLAZE_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_MICROBLAZE_GOTPC_64","","PC-relative GOT offset.",null,null],[17,"R_MICROBLAZE_GOT_64","","GOT entry offset.",null,null],[17,"R_MICROBLAZE_PLT_64","","PLT offset (PC-relative).",null,null],[17,"R_MICROBLAZE_REL","","Adjust by program base.",null,null],[17,"R_MICROBLAZE_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_MICROBLAZE_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MICROBLAZE_GOTOFF_64","","64 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_GOTOFF_32","","32 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_COPY","","Runtime copy.",null,null],[17,"R_MICROBLAZE_TLS","","TLS Reloc.",null,null],[17,"R_MICROBLAZE_TLSGD","","TLS General Dynamic.",null,null],[17,"R_MICROBLAZE_TLSLD","","TLS Local Dynamic.",null,null],[17,"R_MICROBLAZE_TLSDTPMOD32","","TLS Module ID.",null,null],[17,"R_MICROBLAZE_TLSDTPREL32","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSDTPREL64","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSGOTTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"R_MICROBLAZE_TLSTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"DT_NIOS2_GP","","Address of _gp.",null,null],[17,"R_NIOS2_NONE","","No reloc.",null,null],[17,"R_NIOS2_S16","","Direct signed 16 bit.",null,null],[17,"R_NIOS2_U16","","Direct unsigned 16 bit.",null,null],[17,"R_NIOS2_PCREL16","","PC relative 16 bit.",null,null],[17,"R_NIOS2_CALL26","","Direct call.",null,null],[17,"R_NIOS2_IMM5","","5 bit constant expression.",null,null],[17,"R_NIOS2_CACHE_OPX","","5 bit expression, shift 22.",null,null],[17,"R_NIOS2_IMM6","","6 bit constant expression.",null,null],[17,"R_NIOS2_IMM8","","8 bit constant expression.",null,null],[17,"R_NIOS2_HI16","","High 16 bit.",null,null],[17,"R_NIOS2_LO16","","Low 16 bit.",null,null],[17,"R_NIOS2_HIADJ16","","High 16 bit, adjusted.",null,null],[17,"R_NIOS2_BFD_RELOC_32","","32 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_16","","16 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_8","","8 bit symbol value + addend.",null,null],[17,"R_NIOS2_GPREL","","16 bit GP pointer offset.",null,null],[17,"R_NIOS2_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_NIOS2_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_NIOS2_UJMP","","Unconditional branch.",null,null],[17,"R_NIOS2_CJMP","","Conditional branch.",null,null],[17,"R_NIOS2_CALLR","","Indirect call through register.",null,null],[17,"R_NIOS2_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_NIOS2_GOT16","","16 bit GOT entry.",null,null],[17,"R_NIOS2_CALL16","","16 bit GOT entry for function.",null,null],[17,"R_NIOS2_GOTOFF_LO","","%lo of offset to GOT pointer.",null,null],[17,"R_NIOS2_GOTOFF_HA","","%hiadj of offset to GOT pointer.",null,null],[17,"R_NIOS2_PCREL_LO","","%lo of PC relative offset.",null,null],[17,"R_NIOS2_PCREL_HA","","%hiadj of PC relative offset.",null,null],[17,"R_NIOS2_TLS_GD16","","16 bit GOT offset for TLS GD.",null,null],[17,"R_NIOS2_TLS_LDM16","","16 bit GOT offset for TLS LDM.",null,null],[17,"R_NIOS2_TLS_LDO16","","16 bit module relative offset.",null,null],[17,"R_NIOS2_TLS_IE16","","16 bit GOT offset for TLS IE.",null,null],[17,"R_NIOS2_TLS_LE16","","16 bit LE TP-relative offset.",null,null],[17,"R_NIOS2_TLS_DTPMOD","","Module number.",null,null],[17,"R_NIOS2_TLS_DTPREL","","Module-relative offset.",null,null],[17,"R_NIOS2_TLS_TPREL","","TP-relative offset.",null,null],[17,"R_NIOS2_COPY","","Copy symbol at runtime.",null,null],[17,"R_NIOS2_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_NIOS2_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_NIOS2_RELATIVE","","Adjust by program base.",null,null],[17,"R_NIOS2_GOTOFF","","16 bit offset to GOT pointer.",null,null],[17,"R_NIOS2_CALL26_NOAT","","Direct call in .noat section.",null,null],[17,"R_NIOS2_GOT_LO","","%lo() of GOT entry.",null,null],[17,"R_NIOS2_GOT_HA","","%hiadj() of GOT entry.",null,null],[17,"R_NIOS2_CALL_LO","","%lo() of function GOT entry.",null,null],[17,"R_NIOS2_CALL_HA","","%hiadj() of function GOT entry.",null,null],[17,"R_TILEPRO_NONE","","No reloc",null,null],[17,"R_TILEPRO_32","","Direct 32 bit",null,null],[17,"R_TILEPRO_16","","Direct 16 bit",null,null],[17,"R_TILEPRO_8","","Direct 8 bit",null,null],[17,"R_TILEPRO_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEPRO_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEPRO_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEPRO_LO16","","Low 16 bit",null,null],[17,"R_TILEPRO_HI16","","High 16 bit",null,null],[17,"R_TILEPRO_HA16","","High 16 bit, adjusted",null,null],[17,"R_TILEPRO_COPY","","Copy relocation",null,null],[17,"R_TILEPRO_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEPRO_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEPRO_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEPRO_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1","","X1 pipe jump offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEPRO_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEPRO_MT_IMM15_X1","","X1 pipe mtspr",null,null],[17,"R_TILEPRO_MF_IMM15_X1","","X1 pipe mfspr",null,null],[17,"R_TILEPRO_IMM16_X0","","X0 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1","","X1 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO","","X0 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO","","X1 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI","","X0 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI","","X1 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA","","X0 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X1_HA","","X1 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X0_PCREL","","X0 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_PCREL","","X1 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO_PCREL","","X0 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO_PCREL","","X1 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI_PCREL","","X0 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI_PCREL","","X1 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA_PCREL","","X0 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HA_PCREL","","X1 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_GOT","","X0 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT","","X1 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_LO","","X0 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_LO","","X1 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HI","","X0 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HI","","X1 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HA","","X0 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HA","","X1 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_MMSTART_X0","","X0 pipe mm \\\"start\\\"",null,null],[17,"R_TILEPRO_MMEND_X0","","X0 pipe mm \\\"end\\\"",null,null],[17,"R_TILEPRO_MMSTART_X1","","X1 pipe mm \\\"start\\\"",null,null],[17,"R_TILEPRO_MMEND_X1","","X1 pipe mm \\\"end\\\"",null,null],[17,"R_TILEPRO_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEPRO_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEPRO_TLS_GD_CALL","","\\\"jal\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X0_TLS_GD_ADD","","X0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X1_TLS_GD_ADD","","X1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_TLS_IE_LOAD","","\\\"lw_tls\\\" for TLS IE",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD","","X0 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD","","X1 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_LO","","X0 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_LO","","X1 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HI","","X0 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HI","","X1 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HA","","X0 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HA","","X1 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE","","X0 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE","","X1 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_LO","","X0 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_LO","","X1 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HI","","X0 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HI","","X1 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HA","","X0 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HA","","X1 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_TILEPRO_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_TILEPRO_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE","","X0 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE","","X1 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_LO","","X0 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_LO","","X1 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HI","","X0 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HI","","X1 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HA","","X0 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HA","","X1 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEPRO_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_TILEGX_NONE","","No reloc",null,null],[17,"R_TILEGX_64","","Direct 64 bit",null,null],[17,"R_TILEGX_32","","Direct 32 bit",null,null],[17,"R_TILEGX_16","","Direct 16 bit",null,null],[17,"R_TILEGX_8","","Direct 8 bit",null,null],[17,"R_TILEGX_64_PCREL","","PC relative 64 bit",null,null],[17,"R_TILEGX_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEGX_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEGX_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEGX_HW0","","hword 0 16-bit",null,null],[17,"R_TILEGX_HW1","","hword 1 16-bit",null,null],[17,"R_TILEGX_HW2","","hword 2 16-bit",null,null],[17,"R_TILEGX_HW3","","hword 3 16-bit",null,null],[17,"R_TILEGX_HW0_LAST","","last hword 0 16-bit",null,null],[17,"R_TILEGX_HW1_LAST","","last hword 1 16-bit",null,null],[17,"R_TILEGX_HW2_LAST","","last hword 2 16-bit",null,null],[17,"R_TILEGX_COPY","","Copy relocation",null,null],[17,"R_TILEGX_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEGX_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEGX_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEGX_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEGX_JUMPOFF_X1","","X1 pipe jump offset",null,null],[17,"R_TILEGX_JUMPOFF_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEGX_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEGX_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEGX_MT_IMM14_X1","","X1 pipe mtspr",null,null],[17,"R_TILEGX_MF_IMM14_X1","","X1 pipe mfspr",null,null],[17,"R_TILEGX_MMSTART_X0","","X0 pipe mm \\\"start\\\"",null,null],[17,"R_TILEGX_MMEND_X0","","X0 pipe mm \\\"end\\\"",null,null],[17,"R_TILEGX_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEGX_IMM16_X0_HW0","","X0 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0","","X1 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1","","X0 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1","","X1 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2","","X0 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2","","X1 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3","","X0 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3","","X1 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST","","X0 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST","","X1 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST","","X0 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST","","X1 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST","","X0 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST","","X1 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PCREL","","X0 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PCREL","","X1 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PCREL","","X0 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PCREL","","X1 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PCREL","","X0 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PCREL","","X1 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PCREL","","X0 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PCREL","","X1 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PCREL","","X0 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PCREL","","X1 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PCREL","","X0 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PCREL","","X1 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PCREL","","X0 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PCREL","","X1 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_GOT","","X0 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_GOT","","X1 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PLT_PCREL","","X0 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PLT_PCREL","","X1 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PLT_PCREL","","X0 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PLT_PCREL","","X1 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PLT_PCREL","","X0 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PLT_PCREL","","X1 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_GOT","","X0 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_GOT","","X1 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_GOT","","X0 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_GOT","","X1 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PLT_PCREL","","X0 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PLT_PCREL","","X1 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_GD","","X0 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_GD","","X1 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_LE","","X0 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_LE","","X1 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","","X0 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","","X1 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","","X0 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","","X1 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","","X0 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","","X1 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","","X0 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","","X1 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_IE","","X0 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_IE","","X1 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","","X0 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","","X1 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","","X0 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","","X1 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_TLS_DTPMOD64","","64-bit ID of symbol\'s module",null,null],[17,"R_TILEGX_TLS_DTPOFF64","","64-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF64","","64-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_DTPMOD32","","32-bit ID of symbol\'s module",null,null],[17,"R_TILEGX_TLS_DTPOFF32","","32-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF32","","32-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_GD_CALL","","\\\"jal\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X0_TLS_GD_ADD","","X0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X1_TLS_GD_ADD","","X1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_TLS_IE_LOAD","","\\\"ld_tls\\\" for TLS IE",null,null],[17,"R_TILEGX_IMM8_X0_TLS_ADD","","X0 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_X1_TLS_ADD","","X1 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_ADD","","Y0 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_ADD","","Y1 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEGX_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"EF_RISCV_RVC","","",null,null],[17,"EF_RISCV_FLOAT_ABI","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SOFT","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SINGLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_DOUBLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_QUAD","","",null,null],[17,"R_RISCV_NONE","","",null,null],[17,"R_RISCV_32","","",null,null],[17,"R_RISCV_64","","",null,null],[17,"R_RISCV_RELATIVE","","",null,null],[17,"R_RISCV_COPY","","",null,null],[17,"R_RISCV_JUMP_SLOT","","",null,null],[17,"R_RISCV_TLS_DTPMOD32","","",null,null],[17,"R_RISCV_TLS_DTPMOD64","","",null,null],[17,"R_RISCV_TLS_DTPREL32","","",null,null],[17,"R_RISCV_TLS_DTPREL64","","",null,null],[17,"R_RISCV_TLS_TPREL32","","",null,null],[17,"R_RISCV_TLS_TPREL64","","",null,null],[17,"R_RISCV_BRANCH","","",null,null],[17,"R_RISCV_JAL","","",null,null],[17,"R_RISCV_CALL","","",null,null],[17,"R_RISCV_CALL_PLT","","",null,null],[17,"R_RISCV_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GD_HI20","","",null,null],[17,"R_RISCV_PCREL_HI20","","",null,null],[17,"R_RISCV_PCREL_LO12_I","","",null,null],[17,"R_RISCV_PCREL_LO12_S","","",null,null],[17,"R_RISCV_HI20","","",null,null],[17,"R_RISCV_LO12_I","","",null,null],[17,"R_RISCV_LO12_S","","",null,null],[17,"R_RISCV_TPREL_HI20","","",null,null],[17,"R_RISCV_TPREL_LO12_I","","",null,null],[17,"R_RISCV_TPREL_LO12_S","","",null,null],[17,"R_RISCV_TPREL_ADD","","",null,null],[17,"R_RISCV_ADD8","","",null,null],[17,"R_RISCV_ADD16","","",null,null],[17,"R_RISCV_ADD32","","",null,null],[17,"R_RISCV_ADD64","","",null,null],[17,"R_RISCV_SUB8","","",null,null],[17,"R_RISCV_SUB16","","",null,null],[17,"R_RISCV_SUB32","","",null,null],[17,"R_RISCV_SUB64","","",null,null],[17,"R_RISCV_GNU_VTINHERIT","","",null,null],[17,"R_RISCV_GNU_VTENTRY","","",null,null],[17,"R_RISCV_ALIGN","","",null,null],[17,"R_RISCV_RVC_BRANCH","","",null,null],[17,"R_RISCV_RVC_JUMP","","",null,null],[17,"R_RISCV_RVC_LUI","","",null,null],[17,"R_RISCV_GPREL_I","","",null,null],[17,"R_RISCV_GPREL_S","","",null,null],[17,"R_RISCV_TPREL_I","","",null,null],[17,"R_RISCV_TPREL_S","","",null,null],[17,"R_RISCV_RELAX","","",null,null],[17,"R_RISCV_SUB6","","",null,null],[17,"R_RISCV_SET6","","",null,null],[17,"R_RISCV_SET8","","",null,null],[17,"R_RISCV_SET16","","",null,null],[17,"R_RISCV_SET32","","",null,null],[17,"R_RISCV_32_PCREL","","",null,null],[17,"R_BPF_NONE","","No reloc",null,null],[17,"R_BPF_64_64","","",null,null],[17,"R_BPF_64_32","","",null,null],[17,"R_METAG_HIADDR16","","",null,null],[17,"R_METAG_LOADDR16","","",null,null],[17,"R_METAG_ADDR32","","32bit absolute address",null,null],[17,"R_METAG_NONE","","No reloc",null,null],[17,"R_METAG_RELBRANCH","","",null,null],[17,"R_METAG_GETSETOFF","","",null,null],[17,"R_METAG_REG32OP1","","",null,null],[17,"R_METAG_REG32OP2","","",null,null],[17,"R_METAG_REG32OP3","","",null,null],[17,"R_METAG_REG16OP1","","",null,null],[17,"R_METAG_REG16OP2","","",null,null],[17,"R_METAG_REG16OP3","","",null,null],[17,"R_METAG_REG32OP4","","",null,null],[17,"R_METAG_HIOG","","",null,null],[17,"R_METAG_LOOG","","",null,null],[17,"R_METAG_REL8","","",null,null],[17,"R_METAG_REL16","","",null,null],[17,"R_METAG_GNU_VTINHERIT","","",null,null],[17,"R_METAG_GNU_VTENTRY","","",null,null],[17,"R_METAG_HI16_GOTOFF","","",null,null],[17,"R_METAG_LO16_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOT","","",null,null],[17,"R_METAG_HI16_GOTPC","","",null,null],[17,"R_METAG_LO16_GOTPC","","",null,null],[17,"R_METAG_HI16_PLT","","",null,null],[17,"R_METAG_LO16_PLT","","",null,null],[17,"R_METAG_RELBRANCH_PLT","","",null,null],[17,"R_METAG_GOTOFF","","",null,null],[17,"R_METAG_PLT","","",null,null],[17,"R_METAG_COPY","","",null,null],[17,"R_METAG_JMP_SLOT","","",null,null],[17,"R_METAG_RELATIVE","","",null,null],[17,"R_METAG_GLOB_DAT","","",null,null],[17,"R_METAG_TLS_GD","","",null,null],[17,"R_METAG_TLS_LDM","","",null,null],[17,"R_METAG_TLS_LDO_HI16","","",null,null],[17,"R_METAG_TLS_LDO_LO16","","",null,null],[17,"R_METAG_TLS_LDO","","",null,null],[17,"R_METAG_TLS_IE","","",null,null],[17,"R_METAG_TLS_IENONPIC","","",null,null],[17,"R_METAG_TLS_IENONPIC_HI16","","",null,null],[17,"R_METAG_TLS_IENONPIC_LO16","","",null,null],[17,"R_METAG_TLS_TPOFF","","",null,null],[17,"R_METAG_TLS_DTPMOD","","",null,null],[17,"R_METAG_TLS_DTPOFF","","",null,null],[17,"R_METAG_TLS_LE","","",null,null],[17,"R_METAG_TLS_LE_HI16","","",null,null],[17,"R_METAG_TLS_LE_LO16","","",null,null],[17,"R_NDS32_NONE","","",null,null],[17,"R_NDS32_32_RELA","","",null,null],[17,"R_NDS32_COPY","","",null,null],[17,"R_NDS32_GLOB_DAT","","",null,null],[17,"R_NDS32_JMP_SLOT","","",null,null],[17,"R_NDS32_RELATIVE","","",null,null],[17,"R_NDS32_TLS_TPOFF","","",null,null],[17,"R_NDS32_TLS_DESC","","",null,null],[0,"macho","object","Mach-O definitions.",null,null],[17,"CPU_ARCH_MASK","object::macho","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","ABI for 64-bit hardware with 32-bit types; LP32",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MASK","","mask for feature flags",null,null],[17,"CPU_SUBTYPE_LIB64","","64 bit libraries",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[5,"cpu_subtype_intel","","",null,[[["u32",15]],["u32",15]]],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[5,"cpu_subtype_intel_family","","",null,[[["u32",15]],["u32",15]]],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[5,"cpu_subtype_intel_model","","",null,[[["u32",15]],["u32",15]]],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","Haswell feature subset",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","pmax",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","3max",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","Cortex A9",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","Swift",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"VM_PROT_READ","","read permission",null,null],[17,"VM_PROT_WRITE","","write permission",null,null],[17,"VM_PROT_EXECUTE","","execute permission",null,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","NXSwapLong(FAT_MAGIC)",null,null],[3,"FatHeader","","",null,null],[12,"magic","","FAT_MAGIC or FAT_MAGIC_64",72,null],[12,"nfat_arch","","number of structs that follow",72,null],[3,"FatArch32","","",null,null],[12,"cputype","","cpu specifier (int)",73,null],[12,"cpusubtype","","machine specifier (int)",73,null],[12,"offset","","file offset to this object file",73,null],[12,"size","","size of this object file",73,null],[12,"align","","alignment as a power of 2",73,null],[17,"FAT_MAGIC_64","","",null,null],[17,"FAT_CIGAM_64","","NXSwapLong(FAT_MAGIC_64)",null,null],[3,"FatArch64","","",null,null],[12,"cputype","","cpu specifier (int)",74,null],[12,"cpusubtype","","machine specifier (int)",74,null],[12,"offset","","file offset to this object file",74,null],[12,"size","","size of this object file",74,null],[12,"align","","alignment as a power of 2",74,null],[12,"reserved","","reserved",74,null],[3,"MachHeader32","","The 32-bit mach header.",null,null],[12,"magic","","mach magic number identifier",75,null],[12,"cputype","","cpu specifier",75,null],[12,"cpusubtype","","machine specifier",75,null],[12,"filetype","","type of file",75,null],[12,"ncmds","","number of load commands",75,null],[12,"sizeofcmds","","the size of all the load commands",75,null],[12,"flags","","flags",75,null],[17,"MH_MAGIC","","the mach magic number",null,null],[17,"MH_CIGAM","","NXSwapInt(MH_MAGIC)",null,null],[3,"MachHeader64","","The 64-bit mach header.",null,null],[12,"magic","","mach magic number identifier",76,null],[12,"cputype","","cpu specifier",76,null],[12,"cpusubtype","","machine specifier",76,null],[12,"filetype","","type of file",76,null],[12,"ncmds","","number of load commands",76,null],[12,"sizeofcmds","","the size of all the load commands",76,null],[12,"flags","","flags",76,null],[12,"reserved","","reserved",76,null],[17,"MH_MAGIC_64","","the 64-bit mach magic number",null,null],[17,"MH_CIGAM_64","","NXSwapInt(MH_MAGIC_64)",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section …",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link …",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can\'t …",null,null],[17,"MH_BINDATLOAD","","the object file\'s undefined references are bound by the …",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via …",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name …",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of …",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this …",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding …",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level …",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via …",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind …",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be …",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for …",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for …",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does …",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main …",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs.  When linking against a dylib …",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable …",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_NLIST_OUTOFSYNC_WITH_DYLDINFO","","",null,null],[17,"MH_SIM_SUPPORT","","The external symbols listed in the nlist symbol table do …",null,null],[3,"LoadCommand","","Common fields at the start of every load command.",null,null],[12,"cmd","","Type of load command.",77,null],[12,"cmdsize","","Total size of command in bytes.",77,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_SEGMENT","","segment of this file to be mapped",null,null],[17,"LC_SYMTAB","","link-edit stab symbol table info",null,null],[17,"LC_SYMSEG","","link-edit gdb symbol table info (obsolete)",null,null],[17,"LC_THREAD","","thread",null,null],[17,"LC_UNIXTHREAD","","unix thread (includes a stack)",null,null],[17,"LC_LOADFVMLIB","","load a specified fixed VM shared library",null,null],[17,"LC_IDFVMLIB","","fixed VM shared library identification",null,null],[17,"LC_IDENT","","object identification info (obsolete)",null,null],[17,"LC_FVMFILE","","fixed VM file inclusion (internal use)",null,null],[17,"LC_PREPAGE","","prepage command (internal use)",null,null],[17,"LC_DYSYMTAB","","dynamic link-edit symbol table info",null,null],[17,"LC_LOAD_DYLIB","","load a dynamically linked shared library",null,null],[17,"LC_ID_DYLIB","","dynamically linked shared lib ident",null,null],[17,"LC_LOAD_DYLINKER","","load a dynamic linker",null,null],[17,"LC_ID_DYLINKER","","dynamic linker identification",null,null],[17,"LC_PREBOUND_DYLIB","","modules prebound for a dynamically linked shared library",null,null],[17,"LC_ROUTINES","","image routines",null,null],[17,"LC_SUB_FRAMEWORK","","sub framework",null,null],[17,"LC_SUB_UMBRELLA","","sub umbrella",null,null],[17,"LC_SUB_CLIENT","","sub client",null,null],[17,"LC_SUB_LIBRARY","","sub library",null,null],[17,"LC_TWOLEVEL_HINTS","","two-level namespace lookup hints",null,null],[17,"LC_PREBIND_CKSUM","","prebind checksum",null,null],[17,"LC_LOAD_WEAK_DYLIB","","load a dynamically linked shared library that is allowed …",null,null],[17,"LC_SEGMENT_64","","64-bit segment of this file to be mapped",null,null],[17,"LC_ROUTINES_64","","64-bit image routines",null,null],[17,"LC_UUID","","the uuid",null,null],[17,"LC_RPATH","","runpath additions",null,null],[17,"LC_CODE_SIGNATURE","","local of code signature",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","local of info to split segments",null,null],[17,"LC_REEXPORT_DYLIB","","load and re-export dylib",null,null],[17,"LC_LAZY_LOAD_DYLIB","","delay load of dylib until first use",null,null],[17,"LC_ENCRYPTION_INFO","","encrypted segment information",null,null],[17,"LC_DYLD_INFO","","compressed dyld information",null,null],[17,"LC_DYLD_INFO_ONLY","","compressed dyld information only",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","load upward dylib",null,null],[17,"LC_VERSION_MIN_MACOSX","","build for MacOSX min OS version",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","build for iPhoneOS min OS version",null,null],[17,"LC_FUNCTION_STARTS","","compressed table of function start addresses",null,null],[17,"LC_DYLD_ENVIRONMENT","","string for dyld to treat like environment variable",null,null],[17,"LC_MAIN","","replacement for LC_UNIXTHREAD",null,null],[17,"LC_DATA_IN_CODE","","table of non-instructions in __text",null,null],[17,"LC_SOURCE_VERSION","","source version used to build binary",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","Code signing DRs copied from linked dylibs",null,null],[17,"LC_ENCRYPTION_INFO_64","","64-bit encrypted segment information",null,null],[17,"LC_LINKER_OPTION","","linker options in MH_OBJECT files",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","optimization hints in MH_OBJECT files",null,null],[17,"LC_VERSION_MIN_TVOS","","build for AppleTV min OS version",null,null],[17,"LC_VERSION_MIN_WATCHOS","","build for Watch min OS version",null,null],[17,"LC_NOTE","","arbitrary data included within a Mach-O file",null,null],[17,"LC_BUILD_VERSION","","build for platform min OS version",null,null],[17,"LC_DYLD_EXPORTS_TRIE","","used with <code>LinkeditDataCommand</code>, payload is trie",null,null],[17,"LC_DYLD_CHAINED_FIXUPS","","used with <code>LinkeditDataCommand</code>",null,null],[3,"LcStr","","A variable length string in a load command.",null,null],[12,"offset","","offset to the string",78,null],[3,"SegmentCommand32","","32-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT",79,null],[12,"cmdsize","","includes sizeof section structs",79,null],[12,"segname","","segment name",79,null],[12,"vmaddr","","memory address of this segment",79,null],[12,"vmsize","","memory size of this segment",79,null],[12,"fileoff","","file offset of this segment",79,null],[12,"filesize","","amount to map from the file",79,null],[12,"maxprot","","maximum VM protection",79,null],[12,"initprot","","initial VM protection",79,null],[12,"nsects","","number of sections in segment",79,null],[12,"flags","","flags",79,null],[3,"SegmentCommand64","","64-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT_64",80,null],[12,"cmdsize","","includes sizeof section_64 structs",80,null],[12,"segname","","segment name",80,null],[12,"vmaddr","","memory address of this segment",80,null],[12,"vmsize","","memory size of this segment",80,null],[12,"fileoff","","file offset of this segment",80,null],[12,"filesize","","amount to map from the file",80,null],[12,"maxprot","","maximum VM protection",80,null],[12,"initprot","","initial VM protection",80,null],[12,"nsects","","number of sections in segment",80,null],[12,"flags","","flags",80,null],[17,"SG_HIGHVM","","the file contents for this segment is for the high part …",null,null],[17,"SG_FVMLIB","","this segment is the VM that is allocated by a fixed VM …",null,null],[17,"SG_NORELOC","","this segment has nothing that was relocated in it and …",null,null],[17,"SG_PROTECTED_VERSION_1","","This segment is protected.  If the segment starts at file …",null,null],[17,"SG_READ_ONLY","","This segment is made read-only after fixups",null,null],[3,"Section32","","32-bit section.",null,null],[12,"sectname","","name of this section",81,null],[12,"segname","","segment this section goes in",81,null],[12,"addr","","memory address of this section",81,null],[12,"size","","size in bytes of this section",81,null],[12,"offset","","file offset of this section",81,null],[12,"align","","section alignment (power of 2)",81,null],[12,"reloff","","file offset of relocation entries",81,null],[12,"nreloc","","number of relocation entries",81,null],[12,"flags","","flags (section type and attributes)",81,null],[12,"reserved1","","reserved (for offset or index)",81,null],[12,"reserved2","","reserved (for count or sizeof)",81,null],[3,"Section64","","64-bit section.",null,null],[12,"sectname","","name of this section",82,null],[12,"segname","","segment this section goes in",82,null],[12,"addr","","memory address of this section",82,null],[12,"size","","size in bytes of this section",82,null],[12,"offset","","file offset of this section",82,null],[12,"align","","section alignment (power of 2)",82,null],[12,"reloff","","file offset of relocation entries",82,null],[12,"nreloc","","number of relocation entries",82,null],[12,"flags","","flags (section type and attributes)",82,null],[12,"reserved1","","reserved (for offset or index)",82,null],[12,"reserved2","","reserved (for count or sizeof)",82,null],[12,"reserved3","","reserved",82,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to literals",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the …",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section (that can be larger than 4 …",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for …",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded …",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"S_INIT_FUNC_OFFSETS","","32-bit offsets to initializers",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in …",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with …",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","a debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches …",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no …",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss …",null,null],[17,"SECT_BSS","","the real uninitialized data section no padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link …",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained …",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that …",null,null],[3,"Fvmlib","","",null,null],[12,"name","","library\'s target pathname",83,null],[12,"minor_version","","library\'s minor version number",83,null],[12,"header_addr","","library\'s header address",83,null],[3,"FvmlibCommand","","",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",84,null],[12,"cmdsize","","includes pathname string",84,null],[12,"fvmlib","","the library identification",84,null],[3,"Dylib","","",null,null],[12,"name","","library\'s path name",85,null],[12,"timestamp","","library\'s build time stamp",85,null],[12,"current_version","","library\'s current version number",85,null],[12,"compatibility_version","","library\'s compatibility vers number",85,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_{,WEAK_}DYLIB, LC_REEXPORT_DYLIB",86,null],[12,"cmdsize","","includes pathname string",86,null],[12,"dylib","","the library identification",86,null],[3,"SubFrameworkCommand","","",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",87,null],[12,"cmdsize","","includes umbrella string",87,null],[12,"umbrella","","the umbrella framework name",87,null],[3,"SubClientCommand","","",null,null],[12,"cmd","","LC_SUB_CLIENT",88,null],[12,"cmdsize","","includes client string",88,null],[12,"client","","the client name",88,null],[3,"SubUmbrellaCommand","","",null,null],[12,"cmd","","LC_SUB_UMBRELLA",89,null],[12,"cmdsize","","includes sub_umbrella string",89,null],[12,"sub_umbrella","","the sub_umbrella framework name",89,null],[3,"SubLibraryCommand","","",null,null],[12,"cmd","","LC_SUB_LIBRARY",90,null],[12,"cmdsize","","includes sub_library string",90,null],[12,"sub_library","","the sub_library name",90,null],[3,"PreboundDylibCommand","","",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",91,null],[12,"cmdsize","","includes strings",91,null],[12,"name","","library\'s path name",91,null],[12,"nmodules","","number of modules in library",91,null],[12,"linked_modules","","bit vector of linked modules",91,null],[3,"DylinkerCommand","","",null,null],[12,"cmd","","LC_ID_DYLINKER, LC_LOAD_DYLINKER or LC_DYLD_ENVIRONMENT",92,null],[12,"cmdsize","","includes pathname string",92,null],[12,"name","","dynamic linker\'s path name",92,null],[3,"ThreadCommand","","",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",93,null],[12,"cmdsize","","total size of this command",93,null],[3,"RoutinesCommand","","",null,null],[12,"cmd","","LC_ROUTINES",94,null],[12,"cmdsize","","total size of this command",94,null],[12,"init_address","","address of initialization routine",94,null],[12,"init_module","","index into the module table that the init routine is …",94,null],[12,"reserved1","","",94,null],[12,"reserved2","","",94,null],[12,"reserved3","","",94,null],[12,"reserved4","","",94,null],[12,"reserved5","","",94,null],[12,"reserved6","","",94,null],[3,"RoutinesCommand_64","","",null,null],[12,"cmd","","LC_ROUTINES_64",95,null],[12,"cmdsize","","total size of this command",95,null],[12,"init_address","","address of initialization routine",95,null],[12,"init_module","","index into the module table that the init routine is …",95,null],[12,"reserved1","","",95,null],[12,"reserved2","","",95,null],[12,"reserved3","","",95,null],[12,"reserved4","","",95,null],[12,"reserved5","","",95,null],[12,"reserved6","","",95,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","LC_SYMTAB",96,null],[12,"cmdsize","","sizeof(struct SymtabCommand)",96,null],[12,"symoff","","symbol table offset",96,null],[12,"nsyms","","number of symbol table entries",96,null],[12,"stroff","","string table offset",96,null],[12,"strsize","","string table size in bytes",96,null],[3,"DysymtabCommand","","",null,null],[12,"cmd","","LC_DYSYMTAB",97,null],[12,"cmdsize","","sizeof(struct DysymtabCommand)",97,null],[12,"ilocalsym","","index to local symbols",97,null],[12,"nlocalsym","","number of local symbols",97,null],[12,"iextdefsym","","index to externally defined symbols",97,null],[12,"nextdefsym","","number of externally defined symbols",97,null],[12,"iundefsym","","index to undefined symbols",97,null],[12,"nundefsym","","number of undefined symbols",97,null],[12,"tocoff","","file offset to table of contents",97,null],[12,"ntoc","","number of entries in table of contents",97,null],[12,"modtaboff","","file offset to module table",97,null],[12,"nmodtab","","number of module table entries",97,null],[12,"extrefsymoff","","offset to referenced symbol table",97,null],[12,"nextrefsyms","","number of referenced symbol table entries",97,null],[12,"indirectsymoff","","file offset to the indirect symbol table",97,null],[12,"nindirectsyms","","number of indirect symbol table entries",97,null],[12,"extreloff","","offset to external relocation entries",97,null],[12,"nextrel","","number of external relocation entries",97,null],[12,"locreloff","","offset to local relocation entries",97,null],[12,"nlocrel","","number of local relocation entries",97,null],[17,"INDIRECT_SYMBOL_LOCAL","","",null,null],[17,"INDIRECT_SYMBOL_ABS","","",null,null],[3,"DylibTableOfContents","","",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",98,null],[12,"module_index","","index into the module table this symbol is defined in",98,null],[3,"DylibModule32","","",null,null],[12,"module_name","","the module name (index into string table)",99,null],[12,"iextdefsym","","index into externally defined symbols",99,null],[12,"nextdefsym","","number of externally defined symbols",99,null],[12,"irefsym","","index into reference symbol table",99,null],[12,"nrefsym","","number of reference symbol table entries",99,null],[12,"ilocalsym","","index into symbols for local symbols",99,null],[12,"nlocalsym","","number of local symbols",99,null],[12,"iextrel","","index into external relocation entries",99,null],[12,"nextrel","","number of external relocation entries",99,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16 …",99,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high …",99,null],[12,"objc_module_info_addr","","for this module address of the start of the (__OBJC,__…",99,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",99,null],[3,"DylibModule64","","",null,null],[12,"module_name","","the module name (index into string table)",100,null],[12,"iextdefsym","","index into externally defined symbols",100,null],[12,"nextdefsym","","number of externally defined symbols",100,null],[12,"irefsym","","index into reference symbol table",100,null],[12,"nrefsym","","number of reference symbol table entries",100,null],[12,"ilocalsym","","index into symbols for local symbols",100,null],[12,"nlocalsym","","number of local symbols",100,null],[12,"iextrel","","index into external relocation entries",100,null],[12,"nextrel","","number of external relocation entries",100,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16 …",100,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high …",100,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",100,null],[12,"objc_module_info_addr","","for this module address of the start of the (__OBJC,__…",100,null],[3,"DylibReference","","",null,null],[12,"bitfield","","",101,null],[3,"TwolevelHintsCommand","","",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",102,null],[12,"cmdsize","","sizeof(struct TwolevelHintsCommand)",102,null],[12,"offset","","offset to the hint table",102,null],[12,"nhints","","number of hints in the hint table",102,null],[3,"TwolevelHint","","",null,null],[12,"bitfield","","",103,null],[3,"PrebindCksumCommand","","",null,null],[12,"cmd","","LC_PREBIND_CKSUM",104,null],[12,"cmdsize","","sizeof(struct PrebindCksumCommand)",104,null],[12,"cksum","","the check sum or zero",104,null],[3,"UuidCommand","","",null,null],[12,"cmd","","LC_UUID",105,null],[12,"cmdsize","","sizeof(struct UuidCommand)",105,null],[12,"uuid","","the 128-bit uuid",105,null],[3,"RpathCommand","","",null,null],[12,"cmd","","LC_RPATH",106,null],[12,"cmdsize","","includes string",106,null],[12,"path","","path to add to run path",106,null],[3,"LinkeditDataCommand","","",null,null],[12,"cmd","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO, …",107,null],[12,"cmdsize","","sizeof(struct LinkeditDataCommand)",107,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",107,null],[12,"datasize","","file size of data in __LINKEDIT segment",107,null],[3,"EncryptionInfoCommand","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",108,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand)",108,null],[12,"cryptoff","","file offset of encrypted range",108,null],[12,"cryptsize","","file size of encrypted range",108,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",108,null],[3,"EncryptionInfoCommand64","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",109,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand64)",109,null],[12,"cryptoff","","file offset of encrypted range",109,null],[12,"cryptsize","","file size of encrypted range",109,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",109,null],[12,"pad","","padding to make this struct\'s size a multiple of 8 bytes",109,null],[3,"VersionMinCommand","","",null,null],[12,"cmd","","LC_VERSION_MIN_MACOSX or LC_VERSION_MIN_IPHONEOS or …",110,null],[12,"cmdsize","","sizeof(struct VersionMinCommand)",110,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",110,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",110,null],[3,"BuildVersionCommand","","",null,null],[12,"cmd","","LC_BUILD_VERSION",111,null],[12,"cmdsize","","sizeof(struct BuildVersionCommand) plus ntools * …",111,null],[12,"platform","","platform",111,null],[12,"minos","","X.Y.Z is encoded in nibbles xxxx.yy.zz",111,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",111,null],[12,"ntools","","number of tool entries following this",111,null],[3,"BuildToolVersion","","",null,null],[12,"tool","","enum for the tool",112,null],[12,"version","","version number of the tool",112,null],[17,"PLATFORM_MACOS","","",null,null],[17,"PLATFORM_IOS","","",null,null],[17,"PLATFORM_TVOS","","",null,null],[17,"PLATFORM_WATCHOS","","",null,null],[17,"PLATFORM_BRIDGEOS","","",null,null],[17,"PLATFORM_IOSMAC","","",null,null],[17,"PLATFORM_IOSSIMULATOR","","",null,null],[17,"PLATFORM_TVOSSIMULATOR","","",null,null],[17,"PLATFORM_WATCHOSSIMULATOR","","",null,null],[17,"TOOL_CLANG","","",null,null],[17,"TOOL_SWIFT","","",null,null],[17,"TOOL_LD","","",null,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",113,null],[12,"cmdsize","","sizeof(struct DyldInfoCommand)",113,null],[12,"rebase_off","","file offset to rebase info",113,null],[12,"rebase_size","","size of rebase info",113,null],[12,"bind_off","","file offset to binding info",113,null],[12,"bind_size","","size of binding info",113,null],[12,"weak_bind_off","","file offset to weak binding info",113,null],[12,"weak_bind_size","","size of weak binding info",113,null],[12,"lazy_bind_off","","file offset to lazy binding info",113,null],[12,"lazy_bind_size","","size of lazy binding infs",113,null],[12,"export_off","","file offset to lazy binding info",113,null],[12,"export_size","","size of lazy binding infs",113,null],[17,"REBASE_TYPE_POINTER","","",null,null],[17,"REBASE_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"REBASE_TYPE_TEXT_PCREL32","","",null,null],[17,"REBASE_OPCODE_MASK","","",null,null],[17,"REBASE_IMMEDIATE_MASK","","",null,null],[17,"REBASE_OPCODE_DONE","","",null,null],[17,"REBASE_OPCODE_SET_TYPE_IMM","","",null,null],[17,"REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_IMM_SCALED","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_IMM_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SPECIAL_DYLIB_WEAK_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_OPCODE_THREADED","","",null,null],[17,"BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB","","",null,null],[17,"BIND_SUBOPCODE_THREADED_APPLY","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[3,"LinkerOptionCommand","","",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT filetypes",114,null],[12,"cmdsize","","",114,null],[12,"count","","number of strings",114,null],[3,"SymSegCommand","","",null,null],[12,"cmd","","LC_SYMSEG",115,null],[12,"cmdsize","","sizeof(struct SymSegCommand)",115,null],[12,"offset","","symbol segment offset",115,null],[12,"size","","symbol segment size in bytes",115,null],[3,"IdentCommand","","",null,null],[12,"cmd","","LC_IDENT",116,null],[12,"cmdsize","","strings that follow this command",116,null],[3,"FvmfileCommand","","",null,null],[12,"cmd","","LC_FVMFILE",117,null],[12,"cmdsize","","includes pathname string",117,null],[12,"name","","files pathname",117,null],[12,"header_addr","","files virtual address",117,null],[3,"EntryPointCommand","","",null,null],[12,"cmd","","LC_MAIN only used in MH_EXECUTE filetypes",118,null],[12,"cmdsize","","24",118,null],[12,"entryoff","","file (__TEXT) offset of main()",118,null],[12,"stacksize","","if not zero, initial stack size",118,null],[3,"SourceVersionCommand","","",null,null],[12,"cmd","","LC_SOURCE_VERSION",119,null],[12,"cmdsize","","16",119,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",119,null],[3,"DataInCodeEntry","","",null,null],[12,"offset","","from mach_header to start of data range",120,null],[12,"length","","number of bytes in data range",120,null],[12,"kind","","a DICE_KIND_* value",120,null],[17,"DICE_KIND_DATA","","",null,null],[17,"DICE_KIND_JUMP_TABLE8","","",null,null],[17,"DICE_KIND_JUMP_TABLE16","","",null,null],[17,"DICE_KIND_JUMP_TABLE32","","",null,null],[17,"DICE_KIND_ABS_JUMP_TABLE32","","",null,null],[3,"NoteCommand","","",null,null],[12,"cmd","","LC_NOTE",121,null],[12,"cmdsize","","sizeof(struct NoteCommand)",121,null],[12,"data_owner","","owner name for this LC_NOTE",121,null],[12,"offset","","file offset of this data",121,null],[12,"size","","length of data region",121,null],[3,"Nlist32","","",null,null],[12,"n_strx","","index into the string table",122,null],[12,"n_type","","type flag, see below",122,null],[12,"n_sect","","section number or NO_SECT",122,null],[12,"n_desc","","see <mach-o/stab.h>",122,null],[12,"n_value","","value of this symbol (or stab offset)",122,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",123,null],[12,"n_type","","type flag, see below",123,null],[12,"n_sect","","section number or NO_SECT",123,null],[12,"n_desc","","see <mach-o/stab.h>",123,null],[12,"n_value","","value of this symbol (or stab offset)",123,null],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"REFERENCE_TYPE","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","",null,null],[17,"REFERENCE_FLAG_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","",null,null],[17,"REFERENCED_DYNAMICALLY","","",null,null],[17,"SELF_LIBRARY_ORDINAL","","",null,null],[17,"MAX_LIBRARY_ORDINAL","","",null,null],[17,"DYNAMIC_LOOKUP_ORDINAL","","",null,null],[17,"EXECUTABLE_ORDINAL","","",null,null],[17,"N_NO_DEAD_STRIP","","symbol is not to be dead stripped",null,null],[17,"N_DESC_DISCARDED","","symbol is discarded",null,null],[17,"N_WEAK_REF","","symbol is weak referenced",null,null],[17,"N_WEAK_DEF","","coalesed symbol is a weak definition",null,null],[17,"N_REF_TO_WEAK","","reference to a weak symbol",null,null],[17,"N_ARM_THUMB_DEF","","symbol is a Thumb function (ARM)",null,null],[17,"N_SYMBOL_RESOLVER","","",null,null],[17,"N_ALT_ENTRY","","",null,null],[17,"N_GSYM","","global symbol: name,,NO_SECT,type,0",null,null],[17,"N_FNAME","","procedure name (f77 kludge): name,,NO_SECT,0,0",null,null],[17,"N_FUN","","procedure: name,,n_sect,linenumber,address",null,null],[17,"N_STSYM","","static symbol: name,,n_sect,type,address",null,null],[17,"N_LCSYM","",".lcomm symbol: name,,n_sect,type,address",null,null],[17,"N_BNSYM","","begin nsect sym: 0,,n_sect,0,address",null,null],[17,"N_AST","","AST file path: name,,NO_SECT,0,0",null,null],[17,"N_OPT","","emitted with gcc2_compiled and in gcc source",null,null],[17,"N_RSYM","","register sym: name,,NO_SECT,type,register",null,null],[17,"N_SLINE","","src line: 0,,n_sect,linenumber,address",null,null],[17,"N_ENSYM","","end nsect sym: 0,,n_sect,0,address",null,null],[17,"N_SSYM","","structure elt: name,,NO_SECT,type,struct_offset",null,null],[17,"N_SO","","source file name: name,,n_sect,0,address",null,null],[17,"N_OSO","","object file name: name,,0,0,st_mtime",null,null],[17,"N_LSYM","","local sym: name,,NO_SECT,type,offset",null,null],[17,"N_BINCL","","include file beginning: name,,NO_SECT,0,sum",null,null],[17,"N_SOL","","#included file name: name,,n_sect,0,address",null,null],[17,"N_PARAMS","","compiler parameters: name,,NO_SECT,0,0",null,null],[17,"N_VERSION","","compiler version: name,,NO_SECT,0,0",null,null],[17,"N_OLEVEL","","compiler -O level: name,,NO_SECT,0,0",null,null],[17,"N_PSYM","","parameter: name,,NO_SECT,type,offset",null,null],[17,"N_EINCL","","include file end: name,,NO_SECT,0,0",null,null],[17,"N_ENTRY","","alternate entry: name,,n_sect,linenumber,address",null,null],[17,"N_LBRAC","","left bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_EXCL","","deleted include file: name,,NO_SECT,0,sum",null,null],[17,"N_RBRAC","","right bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_BCOMM","","begin common: name,,NO_SECT,0,0",null,null],[17,"N_ECOMM","","end common: name,,n_sect,0,0",null,null],[17,"N_ECOML","","end common (local name): 0,,n_sect,0,address",null,null],[17,"N_LENG","","second stab entry with length information",null,null],[17,"N_PC","","global pascal symbol: name,,NO_SECT,subtype,line",null,null],[3,"Relocation","","A relocation entry.",null,null],[12,"r_word0","","",124,null],[12,"r_word1","","",124,null],[11,"r_scattered","","Determine whether this is a scattered relocation.",124,[[["u32",15]],["bool",15]]],[11,"info","","Return the fields of a plain relocation.",124,[[],["relocationinfo",3]]],[11,"scattered_info","","Return the fields of a scattered relocation.",124,[[],["scatteredrelocationinfo",3]]],[3,"RelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",125,null],[12,"r_symbolnum","","symbol index if r_extern == 1 or section ordinal if …",125,null],[12,"r_pcrel","","was relocated pc relative already",125,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",125,null],[12,"r_extern","","does not include value of sym referenced",125,null],[12,"r_type","","if not 0, machine specific relocation type",125,null],[11,"relocation","","Combine the fields into a <code>Relocation</code>.",125,[[["endian",8]],[["endian",8],["relocation",3]]]],[17,"R_ABS","","absolute relocation type for Mach-O files",null,null],[17,"R_SCATTERED","","Bit set in <code>Relocation::r_word0</code> for scattered relocations.",null,null],[3,"ScatteredRelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",126,null],[12,"r_type","","if not 0, machine specific relocation type",126,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",126,null],[12,"r_pcrel","","was relocated pc relative already",126,null],[12,"r_value","","the value the item to be relocated is refering to …",126,null],[11,"relocation","","Combine the fields into a <code>Relocation</code>.",126,[[["endian",8]],[["endian",8],["relocation",3]]]],[17,"GENERIC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"GENERIC_RELOC_PAIR","","Only follows a GENERIC_RELOC_SECTDIFF",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","thread local variables",null,null],[17,"ARM_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"ARM_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"ARM_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","like ARM_RELOC_SECTDIFF, but the symbol referenced was …",null,null],[17,"ARM_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"ARM_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"ARM_THUMB_RELOC_BR22","","22 bit branch displacement (to a half-word address)",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","obsolete - a thumb 32-bit branch instruction possibly …",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","for pointers",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","must be followed by a ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","a B/BL instruction with 26-bit displacement",null,null],[17,"ARM64_RELOC_PAGE21","","pc-rel distance to page of target",null,null],[17,"ARM64_RELOC_PAGEOFF12","","offset within page, scaled by r_length",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","pc-rel distance to page of GOT slot",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","offset within page of GOT slot, scaled by r_length",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","for pointers to GOT slots",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","pc-rel distance to page of TLVP slot",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","offset within page of TLVP slot, scaled by r_length",null,null],[17,"ARM64_RELOC_ADDEND","","must be followed by PAGE21 or PAGEOFF12",null,null],[17,"ARM64_RELOC_AUTHENTICATED_POINTER","","",null,null],[17,"PPC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"PPC_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"PPC_RELOC_BR14","","14 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_HI16","","a PAIR follows with the low half",null,null],[17,"PPC_RELOC_LO16","","a PAIR follows with the high half",null,null],[17,"PPC_RELOC_HA16","","Same as the RELOC_HI16 except the low 16 bits and the …",null,null],[17,"PPC_RELOC_LO14","","Same as the LO16 except that the low 2 bits are not …",null,null],[17,"PPC_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"PPC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"PPC_RELOC_HI16_SECTDIFF","","section difference forms of above.  a PAIR",null,null],[17,"PPC_RELOC_LO16_SECTDIFF","","follows these with subtract symbol value",null,null],[17,"PPC_RELOC_HA16_SECTDIFF","","",null,null],[17,"PPC_RELOC_JBSR","","",null,null],[17,"PPC_RELOC_LO14_SECTDIFF","","",null,null],[17,"PPC_RELOC_LOCAL_SECTDIFF","","like PPC_RELOC_SECTDIFF, but the symbol referenced was …",null,null],[17,"X86_64_RELOC_UNSIGNED","","for absolute addresses",null,null],[17,"X86_64_RELOC_SIGNED","","for signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","a CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","a MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","must be followed by a X86_64_RELOC_UNSIGNED",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[0,"pe","object","PE/COFF definitions.",null,null],[17,"IMAGE_DOS_SIGNATURE","object::pe","MZ",null,null],[17,"IMAGE_OS2_SIGNATURE","","NE",null,null],[17,"IMAGE_OS2_SIGNATURE_LE","","LE",null,null],[17,"IMAGE_VXD_SIGNATURE","","LE",null,null],[17,"IMAGE_NT_SIGNATURE","","PE00",null,null],[3,"ImageDosHeader","","DOS .EXE header",null,null],[12,"e_magic","","Magic number",127,null],[12,"e_cblp","","Bytes on last page of file",127,null],[12,"e_cp","","Pages in file",127,null],[12,"e_crlc","","Relocations",127,null],[12,"e_cparhdr","","Size of header in paragraphs",127,null],[12,"e_minalloc","","Minimum extra paragraphs needed",127,null],[12,"e_maxalloc","","Maximum extra paragraphs needed",127,null],[12,"e_ss","","Initial (relative) SS value",127,null],[12,"e_sp","","Initial SP value",127,null],[12,"e_csum","","Checksum",127,null],[12,"e_ip","","Initial IP value",127,null],[12,"e_cs","","Initial (relative) CS value",127,null],[12,"e_lfarlc","","File address of relocation table",127,null],[12,"e_ovno","","Overlay number",127,null],[12,"e_res","","Reserved words",127,null],[12,"e_oemid","","OEM identifier (for e_oeminfo)",127,null],[12,"e_oeminfo","","OEM information; e_oemid specific",127,null],[12,"e_res2","","Reserved words",127,null],[12,"e_lfanew","","File address of new exe header",127,null],[3,"ImageOs2Header","","OS/2 .EXE header",null,null],[12,"ne_magic","","Magic number",128,null],[12,"ne_ver","","Version number",128,null],[12,"ne_rev","","Revision number",128,null],[12,"ne_enttab","","Offset of Entry Table",128,null],[12,"ne_cbenttab","","Number of bytes in Entry Table",128,null],[12,"ne_crc","","Checksum of whole file",128,null],[12,"ne_flags","","Flag word",128,null],[12,"ne_autodata","","Automatic data segment number",128,null],[12,"ne_heap","","Initial heap allocation",128,null],[12,"ne_stack","","Initial stack allocation",128,null],[12,"ne_csip","","Initial CS:IP setting",128,null],[12,"ne_sssp","","Initial SS:SP setting",128,null],[12,"ne_cseg","","Count of file segments",128,null],[12,"ne_cmod","","Entries in Module Reference Table",128,null],[12,"ne_cbnrestab","","Size of non-resident name table",128,null],[12,"ne_segtab","","Offset of Segment Table",128,null],[12,"ne_rsrctab","","Offset of Resource Table",128,null],[12,"ne_restab","","Offset of resident name table",128,null],[12,"ne_modtab","","Offset of Module Reference Table",128,null],[12,"ne_imptab","","Offset of Imported Names Table",128,null],[12,"ne_nrestab","","Offset of Non-resident Names Table",128,null],[12,"ne_cmovent","","Count of movable entries",128,null],[12,"ne_align","","Segment alignment shift count",128,null],[12,"ne_cres","","Count of resource segments",128,null],[12,"ne_exetyp","","Target Operating system",128,null],[12,"ne_flagsothers","","Other .EXE flags",128,null],[12,"ne_pretthunks","","offset to return thunks",128,null],[12,"ne_psegrefbytes","","offset to segment ref. bytes",128,null],[12,"ne_swaparea","","Minimum code swap area size",128,null],[12,"ne_expver","","Expected Windows version number",128,null],[3,"ImageVxdHeader","","Windows VXD header",null,null],[12,"e32_magic","","Magic number",129,null],[12,"e32_border","","The byte ordering for the VXD",129,null],[12,"e32_worder","","The word ordering for the VXD",129,null],[12,"e32_level","","The EXE format level for now = 0",129,null],[12,"e32_cpu","","The CPU type",129,null],[12,"e32_os","","The OS type",129,null],[12,"e32_ver","","Module version",129,null],[12,"e32_mflags","","Module flags",129,null],[12,"e32_mpages","","Module # pages",129,null],[12,"e32_startobj","","Object # for instruction pointer",129,null],[12,"e32_eip","","Extended instruction pointer",129,null],[12,"e32_stackobj","","Object # for stack pointer",129,null],[12,"e32_esp","","Extended stack pointer",129,null],[12,"e32_pagesize","","VXD page size",129,null],[12,"e32_lastpagesize","","Last page size in VXD",129,null],[12,"e32_fixupsize","","Fixup section size",129,null],[12,"e32_fixupsum","","Fixup section checksum",129,null],[12,"e32_ldrsize","","Loader section size",129,null],[12,"e32_ldrsum","","Loader section checksum",129,null],[12,"e32_objtab","","Object table offset",129,null],[12,"e32_objcnt","","Number of objects in module",129,null],[12,"e32_objmap","","Object page map offset",129,null],[12,"e32_itermap","","Object iterated data map offset",129,null],[12,"e32_rsrctab","","Offset of Resource Table",129,null],[12,"e32_rsrccnt","","Number of resource entries",129,null],[12,"e32_restab","","Offset of resident name table",129,null],[12,"e32_enttab","","Offset of Entry Table",129,null],[12,"e32_dirtab","","Offset of Module Directive Table",129,null],[12,"e32_dircnt","","Number of module directives",129,null],[12,"e32_fpagetab","","Offset of Fixup Page Table",129,null],[12,"e32_frectab","","Offset of Fixup Record Table",129,null],[12,"e32_impmod","","Offset of Import Module Name Table",129,null],[12,"e32_impmodcnt","","Number of entries in Import Module Name Table",129,null],[12,"e32_impproc","","Offset of Import Procedure Name Table",129,null],[12,"e32_pagesum","","Offset of Per-Page Checksum Table",129,null],[12,"e32_datapage","","Offset of Enumerated Data Pages",129,null],[12,"e32_preload","","Number of preload pages",129,null],[12,"e32_nrestab","","Offset of Non-resident Names Table",129,null],[12,"e32_cbnrestab","","Size of Non-resident Name Table",129,null],[12,"e32_nressum","","Non-resident Name Table Checksum",129,null],[12,"e32_autodata","","Object # for automatic data object",129,null],[12,"e32_debuginfo","","Offset of the debugging information",129,null],[12,"e32_debuglen","","The length of the debugging info. in bytes",129,null],[12,"e32_instpreload","","Number of instance pages in preload section of VXD file",129,null],[12,"e32_instdemand","","Number of instance pages in demand load section of VXD …",129,null],[12,"e32_heapsize","","Size of heap - for 16-bit apps",129,null],[12,"e32_res3","","Reserved words",129,null],[12,"e32_winresoff","","",129,null],[12,"e32_winreslen","","",129,null],[12,"e32_devid","","Device ID for VxD",129,null],[12,"e32_ddkver","","DDK version for VxD",129,null],[3,"ImageFileHeader","","",null,null],[12,"machine","","",130,null],[12,"number_of_sections","","",130,null],[12,"time_date_stamp","","",130,null],[12,"pointer_to_symbol_table","","",130,null],[12,"number_of_symbols","","",130,null],[12,"size_of_optional_header","","",130,null],[12,"characteristics","","",130,null],[17,"IMAGE_SIZEOF_FILE_HEADER","","",null,null],[17,"IMAGE_FILE_RELOCS_STRIPPED","","Relocation info stripped from file.",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","File is executable  (i.e. no unresolved external …",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","Line nunbers stripped from file.",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","Local symbols stripped from file.",null,null],[17,"IMAGE_FILE_AGGRESIVE_WS_TRIM","","Aggressively trim working set",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","App can handle >2gb addresses",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","32 bit word machine.",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","Debugging info stripped from file in .DBG file",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","If Image is on removable media, copy and run from the …",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","If Image is on Net, copy and run from the swap file.",null,null],[17,"IMAGE_FILE_SYSTEM","","System File.",null,null],[17,"IMAGE_FILE_DLL","","File is a DLL.",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","File should only be run on a UP machine",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_MACHINE_UNKNOWN","","",null,null],[17,"IMAGE_FILE_MACHINE_TARGET_HOST","","Useful for indicating we want to interact with the host …",null,null],[17,"IMAGE_FILE_MACHINE_I386","","Intel 386.",null,null],[17,"IMAGE_FILE_MACHINE_R3000","","MIPS little-endian, 0x160 big-endian",null,null],[17,"IMAGE_FILE_MACHINE_R4000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_R10000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_WCEMIPSV2","","MIPS little-endian WCE v2",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA","","Alpha_AXP",null,null],[17,"IMAGE_FILE_MACHINE_SH3","","SH3 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH3DSP","","",null,null],[17,"IMAGE_FILE_MACHINE_SH3E","","SH3E little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH4","","SH4 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH5","","SH5",null,null],[17,"IMAGE_FILE_MACHINE_ARM","","ARM Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_THUMB","","ARM Thumb/Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_ARMNT","","ARM Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_AM33","","",null,null],[17,"IMAGE_FILE_MACHINE_POWERPC","","IBM PowerPC Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_POWERPCFP","","",null,null],[17,"IMAGE_FILE_MACHINE_IA64","","Intel 64",null,null],[17,"IMAGE_FILE_MACHINE_MIPS16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA64","","ALPHA64",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_AXP64","","",null,null],[17,"IMAGE_FILE_MACHINE_TRICORE","","Infineon",null,null],[17,"IMAGE_FILE_MACHINE_CEF","","",null,null],[17,"IMAGE_FILE_MACHINE_EBC","","EFI Byte Code",null,null],[17,"IMAGE_FILE_MACHINE_AMD64","","AMD64 (K8)",null,null],[17,"IMAGE_FILE_MACHINE_M32R","","M32R little-endian",null,null],[17,"IMAGE_FILE_MACHINE_ARM64","","ARM64 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_CEE","","",null,null],[3,"ImageDataDirectory","","",null,null],[12,"virtual_address","","",131,null],[12,"size","","",131,null],[17,"IMAGE_NUMBEROF_DIRECTORY_ENTRIES","","",null,null],[3,"ImageOptionalHeader32","","",null,null],[12,"magic","","",132,null],[12,"major_linker_version","","",132,null],[12,"minor_linker_version","","",132,null],[12,"size_of_code","","",132,null],[12,"size_of_initialized_data","","",132,null],[12,"size_of_uninitialized_data","","",132,null],[12,"address_of_entry_point","","",132,null],[12,"base_of_code","","",132,null],[12,"base_of_data","","",132,null],[12,"image_base","","",132,null],[12,"section_alignment","","",132,null],[12,"file_alignment","","",132,null],[12,"major_operating_system_version","","",132,null],[12,"minor_operating_system_version","","",132,null],[12,"major_image_version","","",132,null],[12,"minor_image_version","","",132,null],[12,"major_subsystem_version","","",132,null],[12,"minor_subsystem_version","","",132,null],[12,"win32_version_value","","",132,null],[12,"size_of_image","","",132,null],[12,"size_of_headers","","",132,null],[12,"check_sum","","",132,null],[12,"subsystem","","",132,null],[12,"dll_characteristics","","",132,null],[12,"size_of_stack_reserve","","",132,null],[12,"size_of_stack_commit","","",132,null],[12,"size_of_heap_reserve","","",132,null],[12,"size_of_heap_commit","","",132,null],[12,"loader_flags","","",132,null],[12,"number_of_rva_and_sizes","","",132,null],[3,"ImageRomOptionalHeader","","",null,null],[12,"magic","","",133,null],[12,"major_linker_version","","",133,null],[12,"minor_linker_version","","",133,null],[12,"size_of_code","","",133,null],[12,"size_of_initialized_data","","",133,null],[12,"size_of_uninitialized_data","","",133,null],[12,"address_of_entry_point","","",133,null],[12,"base_of_code","","",133,null],[12,"base_of_data","","",133,null],[12,"base_of_bss","","",133,null],[12,"gpr_mask","","",133,null],[12,"cpr_mask","","",133,null],[12,"gp_value","","",133,null],[3,"ImageOptionalHeader64","","",null,null],[12,"magic","","",134,null],[12,"major_linker_version","","",134,null],[12,"minor_linker_version","","",134,null],[12,"size_of_code","","",134,null],[12,"size_of_initialized_data","","",134,null],[12,"size_of_uninitialized_data","","",134,null],[12,"address_of_entry_point","","",134,null],[12,"base_of_code","","",134,null],[12,"image_base","","",134,null],[12,"section_alignment","","",134,null],[12,"file_alignment","","",134,null],[12,"major_operating_system_version","","",134,null],[12,"minor_operating_system_version","","",134,null],[12,"major_image_version","","",134,null],[12,"minor_image_version","","",134,null],[12,"major_subsystem_version","","",134,null],[12,"minor_subsystem_version","","",134,null],[12,"win32_version_value","","",134,null],[12,"size_of_image","","",134,null],[12,"size_of_headers","","",134,null],[12,"check_sum","","",134,null],[12,"subsystem","","",134,null],[12,"dll_characteristics","","",134,null],[12,"size_of_stack_reserve","","",134,null],[12,"size_of_stack_commit","","",134,null],[12,"size_of_heap_reserve","","",134,null],[12,"size_of_heap_commit","","",134,null],[12,"loader_flags","","",134,null],[12,"number_of_rva_and_sizes","","",134,null],[17,"IMAGE_NT_OPTIONAL_HDR32_MAGIC","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR64_MAGIC","","",null,null],[17,"IMAGE_ROM_OPTIONAL_HDR_MAGIC","","",null,null],[3,"ImageNtHeaders64","","",null,null],[12,"signature","","",135,null],[12,"file_header","","",135,null],[12,"optional_header","","",135,null],[3,"ImageNtHeaders32","","",null,null],[12,"signature","","",136,null],[12,"file_header","","",136,null],[12,"optional_header","","",136,null],[3,"ImageRomHeaders","","",null,null],[12,"file_header","","",137,null],[12,"optional_header","","",137,null],[17,"IMAGE_SUBSYSTEM_UNKNOWN","","Unknown subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE","","Image doesn\'t require a subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_GUI","","Image runs in the Windows GUI subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CUI","","Image runs in the Windows character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_OS2_CUI","","image runs in the OS/2 character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_POSIX_CUI","","image runs in the Posix character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE_WINDOWS","","image is a native Win9x driver.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","","Image runs in the Windows CE subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_EFI_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_ROM","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX","","",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","","",null,null],[17,"IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","","Image can handle a high entropy 64-bit virtual address …",null,null],[17,"IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","","DLL can move.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","","Code Integrity Image",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NX_COMPAT","","Image is NX compatible",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","","Image understands isolation and doesn\'t want it",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_SEH","","Image does not use SEH.  No SE handler may reside in this …",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_BIND","","Do not bind this image.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_APPCONTAINER","","Image should execute in an AppContainer",null,null],[17,"IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","","Driver uses WDM model",null,null],[17,"IMAGE_DLLCHARACTERISTICS_GUARD_CF","","Image supports Control Flow Guard.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","","",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXPORT","","Export Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IMPORT","","Import Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_RESOURCE","","Resource Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXCEPTION","","Exception Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_SECURITY","","Security Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BASERELOC","","Base Relocation Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DEBUG","","Debug Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","","Architecture Specific Data",null,null],[17,"IMAGE_DIRECTORY_ENTRY_GLOBALPTR","","RVA of GP",null,null],[17,"IMAGE_DIRECTORY_ENTRY_TLS","","TLS Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","","Load Configuration Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","","Bound Import Directory in headers",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IAT","","Import Address Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","","Delay Load Import Descriptors",null,null],[17,"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","","COM Runtime descriptor",null,null],[3,"Guid","","",null,null],[12,"data1","","",138,null],[12,"data2","","",138,null],[12,"data3","","",138,null],[12,"data4","","",138,null],[6,"ClsId","","",null,null],[3,"AnonObjectHeader","","Non-COFF Object file header",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",139,null],[12,"sig2","","Must be 0xffff",139,null],[12,"version","","= 1 (implies the ClsId field is present)",139,null],[12,"machine","","",139,null],[12,"time_date_stamp","","",139,null],[12,"class_id","","Used to invoke CoCreateInstance",139,null],[12,"size_of_data","","Size of data that follows the header",139,null],[3,"AnonObjectHeaderV2","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",140,null],[12,"sig2","","Must be 0xffff",140,null],[12,"version","","= 2 (implies the Flags field is present - otherwise V1)",140,null],[12,"machine","","",140,null],[12,"time_date_stamp","","",140,null],[12,"class_id","","Used to invoke CoCreateInstance",140,null],[12,"size_of_data","","Size of data that follows the header",140,null],[12,"flags","","0x1 -> contains metadata",140,null],[12,"meta_data_size","","Size of CLR metadata",140,null],[12,"meta_data_offset","","Offset of CLR metadata",140,null],[3,"AnonObjectHeaderBigobj","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",141,null],[12,"sig2","","Must be 0xffff",141,null],[12,"version","","= 2 (implies the Flags field is present)",141,null],[12,"machine","","Actual machine - IMAGE_FILE_MACHINE_xxx",141,null],[12,"time_date_stamp","","",141,null],[12,"class_id","","{D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}",141,null],[12,"size_of_data","","Size of data that follows the header",141,null],[12,"flags","","0x1 -> contains metadata",141,null],[12,"meta_data_size","","Size of CLR metadata",141,null],[12,"meta_data_offset","","Offset of CLR metadata",141,null],[12,"number_of_sections","","extended from WORD",141,null],[12,"pointer_to_symbol_table","","",141,null],[12,"number_of_symbols","","",141,null],[17,"IMAGE_SIZEOF_SHORT_NAME","","",null,null],[3,"ImageSectionHeader","","",null,null],[12,"name","","",142,null],[12,"virtual_size","","",142,null],[12,"virtual_address","","",142,null],[12,"size_of_raw_data","","",142,null],[12,"pointer_to_raw_data","","",142,null],[12,"pointer_to_relocations","","",142,null],[12,"pointer_to_linenumbers","","",142,null],[12,"number_of_relocations","","",142,null],[12,"number_of_linenumbers","","",142,null],[12,"characteristics","","",142,null],[17,"IMAGE_SIZEOF_SECTION_HEADER","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","Reserved.",null,null],[17,"IMAGE_SCN_CNT_CODE","","Section contains code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","Section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","Section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","Reserved.",null,null],[17,"IMAGE_SCN_LNK_INFO","","Section contains comments or some other type of …",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","Section contents will not become part of image.",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","Section contents comdat.",null,null],[17,"IMAGE_SCN_NO_DEFER_SPEC_EXC","","Reset speculative exceptions handling bits in the TLB …",null,null],[17,"IMAGE_SCN_GPREL","","Section content can be accessed relative to GP",null,null],[17,"IMAGE_SCN_MEM_FARDATA","","",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","Default alignment if no others are specified.",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","Section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","Section can be discarded.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","Section is not cachable.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","Section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","Section is shareable.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","Section is executable.",null,null],[17,"IMAGE_SCN_MEM_READ","","Section is readable.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","Section is writeable.",null,null],[17,"IMAGE_SCN_SCALE_INDEX","","Tls index is scaled",null,null],[3,"ImageSymbol","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset …",143,null],[12,"value","","",143,null],[12,"section_number","","",143,null],[12,"typ","","",143,null],[12,"storage_class","","",143,null],[12,"number_of_aux_symbols","","",143,null],[17,"IMAGE_SIZEOF_SYMBOL","","",null,null],[3,"ImageSymbolBytes","","",null,null],[12,"0","","",144,null],[3,"ImageSymbolEx","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset …",145,null],[12,"value","","",145,null],[12,"section_number","","",145,null],[12,"typ","","",145,null],[12,"storage_class","","",145,null],[12,"number_of_aux_symbols","","",145,null],[17,"IMAGE_SIZEOF_SYMBOL_EX","","",null,null],[3,"ImageSymbolExBytes","","",null,null],[12,"0","","",146,null],[17,"IMAGE_SYM_UNDEFINED","","Symbol is undefined or is common.",null,null],[17,"IMAGE_SYM_ABSOLUTE","","Symbol is an absolute value.",null,null],[17,"IMAGE_SYM_DEBUG","","Symbol is a special debug item.",null,null],[17,"IMAGE_SYM_SECTION_MAX","","Values 0xFF00-0xFFFF are special",null,null],[17,"IMAGE_SYM_SECTION_MAX_EX","","",null,null],[17,"IMAGE_SYM_TYPE_NULL","","no type.",null,null],[17,"IMAGE_SYM_TYPE_VOID","","",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","type character.",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","type short integer.",null,null],[17,"IMAGE_SYM_TYPE_INT","","",null,null],[17,"IMAGE_SYM_TYPE_LONG","","",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","",null,null],[17,"IMAGE_SYM_TYPE_UNION","","",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","enumeration.",null,null],[17,"IMAGE_SYM_TYPE_MOE","","member of enumeration.",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","",null,null],[17,"IMAGE_SYM_TYPE_WORD","","",null,null],[17,"IMAGE_SYM_TYPE_UINT","","",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","",null,null],[17,"IMAGE_SYM_TYPE_PCODE","","",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","no derived type.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","pointer.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","function.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","array.",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_NULL","","",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","",null,null],[17,"IMAGE_SYM_CLASS_FAR_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_FILE","","",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","",null,null],[17,"N_BTMASK","","",null,null],[17,"N_TMASK","","",null,null],[17,"N_TMASK1","","",null,null],[17,"N_TMASK2","","",null,null],[17,"N_BTSHFT","","",null,null],[17,"N_TSHIFT","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[11,"base_type","","",143,[[],["u16",15]]],[11,"derived_type","","",143,[[],["u16",15]]],[11,"base_type","","",145,[[],["u16",15]]],[11,"derived_type","","",145,[[],["u16",15]]],[3,"ImageAuxSymbolTokenDef","","",null,null],[12,"aux_type","","IMAGE_AUX_SYMBOL_TYPE",147,null],[12,"reserved1","","Must be 0",147,null],[12,"symbol_table_index","","",147,null],[12,"reserved2","","Must be 0",147,null],[17,"IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","","",null,null],[3,"ImageAuxSymbolFunction","","Auxiliary symbol format 1: function definitions.",null,null],[12,"tag_index","","",148,null],[12,"total_size","","",148,null],[12,"pointer_to_linenumber","","",148,null],[12,"pointer_to_next_function","","",148,null],[12,"unused","","",148,null],[3,"ImageAuxSymbolFunctionBeginEnd","","Auxiliary symbol format 2: .bf and .ef symbols.",null,null],[12,"unused1","","",149,null],[12,"linenumber","","declaration line number",149,null],[12,"unused2","","",149,null],[12,"pointer_to_next_function","","",149,null],[12,"unused3","","",149,null],[3,"ImageAuxSymbolWeak","","Auxiliary symbol format 3: weak externals.",null,null],[12,"weak_default_sym_index","","the weak extern default symbol index",150,null],[12,"weak_search_type","","",150,null],[3,"ImageAuxSymbolSection","","Auxiliary symbol format 5: sections.",null,null],[12,"length","","section length",151,null],[12,"number_of_relocations","","number of relocation entries",151,null],[12,"number_of_linenumbers","","number of line numbers",151,null],[12,"check_sum","","checksum for communal",151,null],[12,"number","","section number to associate with",151,null],[12,"selection","","communal selection type",151,null],[12,"reserved","","",151,null],[12,"high_number","","high bits of the section number",151,null],[3,"ImageAuxSymbolCrc","","",null,null],[12,"crc","","",152,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","",null,null],[17,"IMAGE_COMDAT_SELECT_NEWEST","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","",null,null],[17,"IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY","","",null,null],[3,"ImageRelocation","","",null,null],[12,"virtual_address","","Also <code>RelocCount</code> when IMAGE_SCN_LNK_NRELOC_OVFL is set",153,null],[12,"symbol_table_index","","",153,null],[12,"typ","","",153,null],[17,"IMAGE_REL_I386_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_I386_DIR16","","Direct 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_REL16","","PC-relative 16-bit reference to the symbols virtual …",null,null],[17,"IMAGE_REL_I386_DIR32","","Direct 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32NB","","Direct 32-bit reference to the symbols virtual address, …",null,null],[17,"IMAGE_REL_I386_SEG12","","Direct 16-bit reference to the segment-selector bits of a …",null,null],[17,"IMAGE_REL_I386_SECTION","","",null,null],[17,"IMAGE_REL_I386_SECREL","","",null,null],[17,"IMAGE_REL_I386_TOKEN","","clr token",null,null],[17,"IMAGE_REL_I386_SECREL7","","7 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_I386_REL32","","PC-relative 32-bit reference to the symbols virtual …",null,null],[17,"IMAGE_REL_MIPS_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_MIPS_REFHALF","","",null,null],[17,"IMAGE_REL_MIPS_REFWORD","","",null,null],[17,"IMAGE_REL_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_MIPS_REFHI","","",null,null],[17,"IMAGE_REL_MIPS_REFLO","","",null,null],[17,"IMAGE_REL_MIPS_GPREL","","",null,null],[17,"IMAGE_REL_MIPS_LITERAL","","",null,null],[17,"IMAGE_REL_MIPS_SECTION","","",null,null],[17,"IMAGE_REL_MIPS_SECREL","","",null,null],[17,"IMAGE_REL_MIPS_SECRELLO","","Low 16-bit section relative referemce (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_TOKEN","","clr token",null,null],[17,"IMAGE_REL_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_MIPS_REFWORDNB","","",null,null],[17,"IMAGE_REL_MIPS_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_ABSOLUTE","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFQUAD","","",null,null],[17,"IMAGE_REL_ALPHA_GPREL32","","",null,null],[17,"IMAGE_REL_ALPHA_LITERAL","","",null,null],[17,"IMAGE_REL_ALPHA_LITUSE","","",null,null],[17,"IMAGE_REL_ALPHA_GPDISP","","",null,null],[17,"IMAGE_REL_ALPHA_BRADDR","","",null,null],[17,"IMAGE_REL_ALPHA_HINT","","",null,null],[17,"IMAGE_REL_ALPHA_INLINE_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFHI","","",null,null],[17,"IMAGE_REL_ALPHA_REFLO","","",null,null],[17,"IMAGE_REL_ALPHA_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_MATCH","","",null,null],[17,"IMAGE_REL_ALPHA_SECTION","","",null,null],[17,"IMAGE_REL_ALPHA_SECREL","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONGNB","","",null,null],[17,"IMAGE_REL_ALPHA_SECRELLO","","Low 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_SECRELHI","","High 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ3","","High 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ2","","Middle 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ1","","Low 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELLO","","Low 16-bit GP relative reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELHI","","High 16-bit GP relative reference",null,null],[17,"IMAGE_REL_PPC_ABSOLUTE","","NOP",null,null],[17,"IMAGE_REL_PPC_ADDR64","","64-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR32","","32-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR24","","26-bit address, shifted left 2 (branch absolute)",null,null],[17,"IMAGE_REL_PPC_ADDR16","","16-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR14","","16-bit address, shifted left 2 (load doubleword)",null,null],[17,"IMAGE_REL_PPC_REL24","","26-bit PC-relative offset, shifted left 2 (branch …",null,null],[17,"IMAGE_REL_PPC_REL14","","16-bit PC-relative offset, shifted left 2 (br cond …",null,null],[17,"IMAGE_REL_PPC_TOCREL16","","16-bit offset from TOC base",null,null],[17,"IMAGE_REL_PPC_TOCREL14","","16-bit offset from TOC base, shifted left 2 (load …",null,null],[17,"IMAGE_REL_PPC_ADDR32NB","","32-bit addr w/o image base",null,null],[17,"IMAGE_REL_PPC_SECREL","","va of containing section (as in an image sectionhdr)",null,null],[17,"IMAGE_REL_PPC_SECTION","","sectionheader number",null,null],[17,"IMAGE_REL_PPC_IFGLUE","","substitute TOC restore instruction iff symbol is glue code",null,null],[17,"IMAGE_REL_PPC_IMGLUE","","symbol is glue code; virtual address is TOC restore …",null,null],[17,"IMAGE_REL_PPC_SECREL16","","va of containing section (limited to 16 bits)",null,null],[17,"IMAGE_REL_PPC_REFHI","","",null,null],[17,"IMAGE_REL_PPC_REFLO","","",null,null],[17,"IMAGE_REL_PPC_PAIR","","",null,null],[17,"IMAGE_REL_PPC_SECRELLO","","Low 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_GPREL","","",null,null],[17,"IMAGE_REL_PPC_TOKEN","","clr token",null,null],[17,"IMAGE_REL_PPC_TYPEMASK","","mask to isolate above values in IMAGE_RELOCATION.Type",null,null],[17,"IMAGE_REL_PPC_NEG","","subtract reloc value rather than adding it",null,null],[17,"IMAGE_REL_PPC_BRTAKEN","","fix branch prediction bit to predict branch taken",null,null],[17,"IMAGE_REL_PPC_BRNTAKEN","","fix branch prediction bit to predict branch not taken",null,null],[17,"IMAGE_REL_PPC_TOCDEFN","","toc slot defined in file (or, data in toc)",null,null],[17,"IMAGE_REL_SH3_ABSOLUTE","","No relocation",null,null],[17,"IMAGE_REL_SH3_DIRECT16","","16 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT32","","32 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT8","","8 bit direct, -128..255",null,null],[17,"IMAGE_REL_SH3_DIRECT8_WORD","","8 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT8_LONG","","8 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4","","4 bit direct (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_WORD","","4 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_LONG","","4 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_PCREL8_WORD","","8 bit PC relative .W",null,null],[17,"IMAGE_REL_SH3_PCREL8_LONG","","8 bit PC relative .L",null,null],[17,"IMAGE_REL_SH3_PCREL12_WORD","","12 LSB PC relative .W",null,null],[17,"IMAGE_REL_SH3_STARTOF_SECTION","","Start of EXE section",null,null],[17,"IMAGE_REL_SH3_SIZEOF_SECTION","","Size of EXE section",null,null],[17,"IMAGE_REL_SH3_SECTION","","Section table index",null,null],[17,"IMAGE_REL_SH3_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_SH3_DIRECT32_NB","","32 bit direct not based",null,null],[17,"IMAGE_REL_SH3_GPREL4_LONG","","GP-relative addressing",null,null],[17,"IMAGE_REL_SH3_TOKEN","","clr token",null,null],[17,"IMAGE_REL_SHM_PCRELPT","","Offset from current instruction in longwords if not …",null,null],[17,"IMAGE_REL_SHM_REFLO","","Low bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_REFHALF","","High bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_RELLO","","Low bits of relative reference",null,null],[17,"IMAGE_REL_SHM_RELHALF","","High bits of relative reference",null,null],[17,"IMAGE_REL_SHM_PAIR","","offset operand for relocation",null,null],[17,"IMAGE_REL_SH_NOMODE","","relocation ignores section mode",null,null],[17,"IMAGE_REL_ARM_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_ARM_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_ARM_BRANCH24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_ARM_BRANCH11","","Thumb: 2 11 bit offsets",null,null],[17,"IMAGE_REL_ARM_TOKEN","","clr token",null,null],[17,"IMAGE_REL_ARM_GPREL12","","GP-relative addressing (ARM)",null,null],[17,"IMAGE_REL_ARM_GPREL7","","GP-relative addressing (Thumb)",null,null],[17,"IMAGE_REL_ARM_BLX24","","",null,null],[17,"IMAGE_REL_ARM_BLX11","","",null,null],[17,"IMAGE_REL_ARM_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM_MOV32A","","ARM: MOVW/MOVT",null,null],[17,"IMAGE_REL_ARM_MOV32","","ARM: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_MOV32T","","Thumb: MOVW/MOVT",null,null],[17,"IMAGE_REL_THUMB_MOV32","","Thumb: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH20T","","Thumb: 32-bit conditional B",null,null],[17,"IMAGE_REL_THUMB_BRANCH20","","Thumb: 32-bit conditional B (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH24T","","Thumb: 32-bit B or BL",null,null],[17,"IMAGE_REL_THUMB_BRANCH24","","Thumb: 32-bit B or BL (deprecated)",null,null],[17,"IMAGE_REL_ARM_BLX23T","","Thumb: BLX immediate",null,null],[17,"IMAGE_REL_THUMB_BLX23","","Thumb: BLX immediate (deprecated)",null,null],[17,"IMAGE_REL_AM_ABSOLUTE","","",null,null],[17,"IMAGE_REL_AM_ADDR32","","",null,null],[17,"IMAGE_REL_AM_ADDR32NB","","",null,null],[17,"IMAGE_REL_AM_CALL32","","",null,null],[17,"IMAGE_REL_AM_FUNCINFO","","",null,null],[17,"IMAGE_REL_AM_REL32_1","","",null,null],[17,"IMAGE_REL_AM_REL32_2","","",null,null],[17,"IMAGE_REL_AM_SECREL","","",null,null],[17,"IMAGE_REL_AM_SECTION","","",null,null],[17,"IMAGE_REL_AM_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM64_ADDR32","","32 bit address. Review! do we need it?",null,null],[17,"IMAGE_REL_ARM64_ADDR32NB","","32 bit address w/o image base (RVA: for Data/PData/XData)",null,null],[17,"IMAGE_REL_ARM64_BRANCH26","","26 bit offset << 2 & sign ext. for B & BL",null,null],[17,"IMAGE_REL_ARM64_PAGEBASE_REL21","","ADRP",null,null],[17,"IMAGE_REL_ARM64_REL21","","ADR",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12A","","ADD/ADDS (immediate) with zero shift, for page offset",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12L","","LDR (indexed, unsigned immediate), for page offset",null,null],[17,"IMAGE_REL_ARM64_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12A","","ADD/ADDS (immediate) with zero shift, for bit 0:11 of …",null,null],[17,"IMAGE_REL_ARM64_SECREL_HIGH12A","","ADD/ADDS (immediate) with zero shift, for bit 12:23 of …",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12L","","LDR (indexed, unsigned immediate), for bit 0:11 of …",null,null],[17,"IMAGE_REL_ARM64_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM64_ADDR64","","64 bit address",null,null],[17,"IMAGE_REL_ARM64_BRANCH19","","19 bit offset << 2 & sign ext. for conditional B",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","32-bit relative address from byte distance 1 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","32-bit relative address from byte distance 2 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","32-bit relative address from byte distance 3 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","32-bit relative address from byte distance 4 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","32-bit relative address from byte distance 5 from reloc",null,null],[17,"IMAGE_REL_AMD64_SECTION","","Section index",null,null],[17,"IMAGE_REL_AMD64_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","7 bit unsigned offset from base of section containing …",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_AMD64_SREL32","","32 bit signed span-dependent value emitted into object",null,null],[17,"IMAGE_REL_AMD64_PAIR","","",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","32 bit signed span-dependent value applied at link time",null,null],[17,"IMAGE_REL_AMD64_EHANDLER","","",null,null],[17,"IMAGE_REL_AMD64_IMPORT_BR","","Indirect branch to an import",null,null],[17,"IMAGE_REL_AMD64_IMPORT_CALL","","Indirect call to an import",null,null],[17,"IMAGE_REL_AMD64_CFG_BR","","Indirect branch to a CFG check",null,null],[17,"IMAGE_REL_AMD64_CFG_BR_REX","","Indirect branch to a CFG check, with REX.W prefix",null,null],[17,"IMAGE_REL_AMD64_CFG_CALL","","Indirect call to a CFG check",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR","","Indirect branch to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_REX","","Indirect branch to a target in RAX, with REX.W prefix (no …",null,null],[17,"IMAGE_REL_AMD64_INDIR_CALL","","Indirect call to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST","","Indirect branch for a switch table using Reg 0 (RAX)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST","","Indirect branch for a switch table using Reg 15 (R15)",null,null],[17,"IMAGE_REL_IA64_ABSOLUTE","","",null,null],[17,"IMAGE_REL_IA64_IMM14","","",null,null],[17,"IMAGE_REL_IA64_IMM22","","",null,null],[17,"IMAGE_REL_IA64_IMM64","","",null,null],[17,"IMAGE_REL_IA64_DIR32","","",null,null],[17,"IMAGE_REL_IA64_DIR64","","",null,null],[17,"IMAGE_REL_IA64_PCREL21B","","",null,null],[17,"IMAGE_REL_IA64_PCREL21M","","",null,null],[17,"IMAGE_REL_IA64_PCREL21F","","",null,null],[17,"IMAGE_REL_IA64_GPREL22","","",null,null],[17,"IMAGE_REL_IA64_LTOFF22","","",null,null],[17,"IMAGE_REL_IA64_SECTION","","",null,null],[17,"IMAGE_REL_IA64_SECREL22","","",null,null],[17,"IMAGE_REL_IA64_SECREL64I","","",null,null],[17,"IMAGE_REL_IA64_SECREL32","","",null,null],[17,"IMAGE_REL_IA64_DIR32NB","","",null,null],[17,"IMAGE_REL_IA64_SREL14","","",null,null],[17,"IMAGE_REL_IA64_SREL22","","",null,null],[17,"IMAGE_REL_IA64_SREL32","","",null,null],[17,"IMAGE_REL_IA64_UREL32","","",null,null],[17,"IMAGE_REL_IA64_PCREL60X","","This is always a BRL and never converted",null,null],[17,"IMAGE_REL_IA64_PCREL60B","","If possible, convert to MBB bundle with NOP.B in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60F","","If possible, convert to MFB bundle with NOP.F in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60I","","If possible, convert to MIB bundle with NOP.I in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60M","","If possible, convert to MMB bundle with NOP.M in slot 1",null,null],[17,"IMAGE_REL_IA64_IMMGPREL64","","",null,null],[17,"IMAGE_REL_IA64_TOKEN","","clr token",null,null],[17,"IMAGE_REL_IA64_GPREL32","","",null,null],[17,"IMAGE_REL_IA64_ADDEND","","",null,null],[17,"IMAGE_REL_CEF_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEF_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEF_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEF_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEF_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_CEE_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEE_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEE_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEE_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEE_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_M32R_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_M32R_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_M32R_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_M32R_ADDR24","","24 bit address",null,null],[17,"IMAGE_REL_M32R_GPREL16","","GP relative addressing",null,null],[17,"IMAGE_REL_M32R_PCREL24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL16","","16 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL8","","8 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_REFHALF","","16 MSBs",null,null],[17,"IMAGE_REL_M32R_REFHI","","16 MSBs; adj for LSB sign ext.",null,null],[17,"IMAGE_REL_M32R_REFLO","","16 LSBs",null,null],[17,"IMAGE_REL_M32R_PAIR","","Link HI and LO",null,null],[17,"IMAGE_REL_M32R_SECTION","","Section table index",null,null],[17,"IMAGE_REL_M32R_SECREL32","","32 bit section relative reference",null,null],[17,"IMAGE_REL_M32R_TOKEN","","clr token",null,null],[17,"IMAGE_REL_EBC_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_EBC_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_EBC_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_EBC_SECTION","","Section table index",null,null],[17,"IMAGE_REL_EBC_SECREL","","Offset within section",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[3,"ImageLinenumber","","",null,null],[12,"symbol_table_index_or_virtual_address","","Symbol table index of function name if Linenumber is 0. …",154,null],[12,"linenumber","","Line number.",154,null],[3,"ImageBaseRelocation","","",null,null],[12,"virtual_address","","",155,null],[12,"size_of_block","","",155,null],[17,"IMAGE_REL_BASED_ABSOLUTE","","",null,null],[17,"IMAGE_REL_BASED_HIGH","","",null,null],[17,"IMAGE_REL_BASED_LOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHLOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHADJ","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_5","","",null,null],[17,"IMAGE_REL_BASED_RESERVED","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_7","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_8","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_9","","",null,null],[17,"IMAGE_REL_BASED_DIR64","","",null,null],[17,"IMAGE_REL_BASED_IA64_IMM64","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_BASED_ARM_MOV32","","",null,null],[17,"IMAGE_REL_BASED_THUMB_MOV32","","",null,null],[17,"IMAGE_ARCHIVE_START_SIZE","","",null,null],[17,"IMAGE_ARCHIVE_START","","",null,null],[17,"IMAGE_ARCHIVE_END","","",null,null],[17,"IMAGE_ARCHIVE_PAD","","",null,null],[17,"IMAGE_ARCHIVE_LINKER_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_LONGNAMES_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","","",null,null],[3,"ImageArchiveMemberHeader","","",null,null],[12,"name","","File member name - `/\' terminated.",156,null],[12,"date","","File member date - decimal.",156,null],[12,"user_id","","File member user id - decimal.",156,null],[12,"group_id","","File member group id - decimal.",156,null],[12,"mode","","File member mode - octal.",156,null],[12,"size","","File member size - decimal.",156,null],[12,"end_header","","String to end header.",156,null],[17,"IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","","",null,null],[3,"ImageExportDirectory","","",null,null],[12,"characteristics","","",157,null],[12,"time_date_stamp","","",157,null],[12,"major_version","","",157,null],[12,"minor_version","","",157,null],[12,"name","","",157,null],[12,"base","","",157,null],[12,"number_of_functions","","",157,null],[12,"number_of_names","","",157,null],[12,"address_of_functions","","RVA from base of image",157,null],[12,"address_of_names","","RVA from base of image",157,null],[12,"address_of_name_ordinals","","RVA from base of image",157,null],[3,"ImageImportByName","","",null,null],[12,"hint","","",158,null],[17,"IMAGE_ORDINAL_FLAG64","","",null,null],[17,"IMAGE_ORDINAL_FLAG32","","",null,null],[3,"ImageTlsDirectory64","","",null,null],[12,"start_address_of_raw_data","","",159,null],[12,"end_address_of_raw_data","","",159,null],[12,"address_of_index","","PDWORD",159,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *;",159,null],[12,"size_of_zero_fill","","",159,null],[12,"characteristics","","",159,null],[3,"ImageTlsDirectory32","","",null,null],[12,"start_address_of_raw_data","","",160,null],[12,"end_address_of_raw_data","","",160,null],[12,"address_of_index","","PDWORD",160,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *",160,null],[12,"size_of_zero_fill","","",160,null],[12,"characteristics","","",160,null],[3,"ImageImportDescriptor","","",null,null],[12,"original_first_thunk","","RVA to original unbound IAT (<code>ImageThunkData32</code>/…",161,null],[12,"time_date_stamp","","0 if not bound, -1 if bound, and real date\\\\time stamp in …",161,null],[12,"forwarder_chain","","-1 if no forwarders",161,null],[12,"name","","",161,null],[12,"first_thunk","","RVA to IAT (if bound this IAT has actual addresses)",161,null],[3,"ImageBoundImportDescriptor","","",null,null],[12,"time_date_stamp","","",162,null],[12,"offset_module_name","","",162,null],[12,"number_of_module_forwarder_refs","","",162,null],[3,"ImageBoundForwarderRef","","",null,null],[12,"time_date_stamp","","",163,null],[12,"offset_module_name","","",163,null],[12,"reserved","","",163,null],[3,"ImageDelayloadDescriptor","","",null,null],[12,"attributes","","",164,null],[12,"dll_name_rva","","RVA to the name of the target library (NULL-terminate …",164,null],[12,"module_handle_rva","","RVA to the HMODULE caching location (PHMODULE)",164,null],[12,"import_address_table_rva","","RVA to the start of the IAT (PIMAGE_THUNK_DATA)",164,null],[12,"import_name_table_rva","","RVA to the start of the name table …",164,null],[12,"bound_import_address_table_rva","","RVA to an optional bound IAT",164,null],[12,"unload_information_table_rva","","RVA to an optional unload info table",164,null],[12,"time_date_stamp","","0 if not bound, otherwise, date/time of the target DLL",164,null],[17,"IMAGE_DELAYLOAD_RVA_BASED","","Delay load version 2 flag for …",null,null],[3,"ImageResourceDirectory","","",null,null],[12,"characteristics","","",165,null],[12,"time_date_stamp","","",165,null],[12,"major_version","","",165,null],[12,"minor_version","","",165,null],[12,"number_of_named_entries","","",165,null],[12,"number_of_id_entries","","",165,null],[17,"IMAGE_RESOURCE_NAME_IS_STRING","","",null,null],[17,"IMAGE_RESOURCE_DATA_IS_DIRECTORY","","",null,null],[3,"ImageResourceDirectoryEntry","","",null,null],[12,"name_or_id","","",166,null],[12,"offset_to_data_or_directory","","",166,null],[3,"ImageResourceDirectoryString","","",null,null],[12,"length","","",167,null],[3,"ImageResourceDirStringU","","",null,null],[12,"length","","",168,null],[3,"ImageResourceDataEntry","","",null,null],[12,"offset_to_data","","",169,null],[12,"size","","",169,null],[12,"code_page","","",169,null],[12,"reserved","","",169,null],[3,"ImageLoadConfigCodeIntegrity","","",null,null],[12,"flags","","Flags to indicate if CI information is available, etc.",170,null],[12,"catalog","","0xFFFF means not available",170,null],[12,"catalog_offset","","",170,null],[12,"reserved","","Additional bitmask to be defined later",170,null],[3,"ImageDynamicRelocationTable","","",null,null],[12,"version","","",171,null],[12,"size","","",171,null],[3,"ImageDynamicRelocation32","","",null,null],[12,"symbol","","",172,null],[12,"base_reloc_size","","",172,null],[3,"ImageDynamicRelocation64","","",null,null],[12,"symbol","","",173,null],[12,"base_reloc_size","","",173,null],[3,"ImageDynamicRelocation32V2","","",null,null],[12,"header_size","","",174,null],[12,"fixup_info_size","","",174,null],[12,"symbol","","",174,null],[12,"symbol_group","","",174,null],[12,"flags","","",174,null],[3,"ImageDynamicRelocation64V2","","",null,null],[12,"header_size","","",175,null],[12,"fixup_info_size","","",175,null],[12,"symbol","","",175,null],[12,"symbol_group","","",175,null],[12,"flags","","",175,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH","","",null,null],[3,"ImagePrologueDynamicRelocationHeader","","",null,null],[12,"prologue_byte_count","","",176,null],[3,"ImageEpilogueDynamicRelocationHeader","","",null,null],[12,"epilogue_count","","",177,null],[12,"epilogue_byte_count","","",177,null],[12,"branch_descriptor_element_size","","",177,null],[12,"branch_descriptor_count","","",177,null],[3,"ImageLoadConfigDirectory32","","",null,null],[12,"size","","",178,null],[12,"time_date_stamp","","",178,null],[12,"major_version","","",178,null],[12,"minor_version","","",178,null],[12,"global_flags_clear","","",178,null],[12,"global_flags_set","","",178,null],[12,"critical_section_default_timeout","","",178,null],[12,"de_commit_free_block_threshold","","",178,null],[12,"de_commit_total_free_threshold","","",178,null],[12,"lock_prefix_table","","VA",178,null],[12,"maximum_allocation_size","","",178,null],[12,"virtual_memory_threshold","","",178,null],[12,"process_heap_flags","","",178,null],[12,"process_affinity_mask","","",178,null],[12,"csd_version","","",178,null],[12,"dependent_load_flags","","",178,null],[12,"edit_list","","VA",178,null],[12,"security_cookie","","VA",178,null],[12,"sehandler_table","","VA",178,null],[12,"sehandler_count","","",178,null],[12,"guard_cf_check_function_pointer","","VA",178,null],[12,"guard_cf_dispatch_function_pointer","","VA",178,null],[12,"guard_cf_function_table","","VA",178,null],[12,"guard_cf_function_count","","",178,null],[12,"guard_flags","","",178,null],[12,"code_integrity","","",178,null],[12,"guard_address_taken_iat_entry_table","","VA",178,null],[12,"guard_address_taken_iat_entry_count","","",178,null],[12,"guard_long_jump_target_table","","VA",178,null],[12,"guard_long_jump_target_count","","",178,null],[12,"dynamic_value_reloc_table","","VA",178,null],[12,"chpe_metadata_pointer","","",178,null],[12,"guard_rf_failure_routine","","VA",178,null],[12,"guard_rf_failure_routine_function_pointer","","VA",178,null],[12,"dynamic_value_reloc_table_offset","","",178,null],[12,"dynamic_value_reloc_table_section","","",178,null],[12,"reserved2","","",178,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",178,null],[12,"hot_patch_table_offset","","",178,null],[12,"reserved3","","",178,null],[12,"enclave_configuration_pointer","","VA",178,null],[12,"volatile_metadata_pointer","","VA",178,null],[3,"ImageLoadConfigDirectory64","","",null,null],[12,"size","","",179,null],[12,"time_date_stamp","","",179,null],[12,"major_version","","",179,null],[12,"minor_version","","",179,null],[12,"global_flags_clear","","",179,null],[12,"global_flags_set","","",179,null],[12,"critical_section_default_timeout","","",179,null],[12,"de_commit_free_block_threshold","","",179,null],[12,"de_commit_total_free_threshold","","",179,null],[12,"lock_prefix_table","","VA",179,null],[12,"maximum_allocation_size","","",179,null],[12,"virtual_memory_threshold","","",179,null],[12,"process_affinity_mask","","",179,null],[12,"process_heap_flags","","",179,null],[12,"csd_version","","",179,null],[12,"dependent_load_flags","","",179,null],[12,"edit_list","","VA",179,null],[12,"security_cookie","","VA",179,null],[12,"sehandler_table","","VA",179,null],[12,"sehandler_count","","",179,null],[12,"guard_cf_check_function_pointer","","VA",179,null],[12,"guard_cf_dispatch_function_pointer","","VA",179,null],[12,"guard_cf_function_table","","VA",179,null],[12,"guard_cf_function_count","","",179,null],[12,"guard_flags","","",179,null],[12,"code_integrity","","",179,null],[12,"guard_address_taken_iat_entry_table","","VA",179,null],[12,"guard_address_taken_iat_entry_count","","",179,null],[12,"guard_long_jump_target_table","","VA",179,null],[12,"guard_long_jump_target_count","","",179,null],[12,"dynamic_value_reloc_table","","VA",179,null],[12,"chpe_metadata_pointer","","VA",179,null],[12,"guard_rf_failure_routine","","VA",179,null],[12,"guard_rf_failure_routine_function_pointer","","VA",179,null],[12,"dynamic_value_reloc_table_offset","","",179,null],[12,"dynamic_value_reloc_table_section","","",179,null],[12,"reserved2","","",179,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",179,null],[12,"hot_patch_table_offset","","",179,null],[12,"reserved3","","",179,null],[12,"enclave_configuration_pointer","","VA",179,null],[12,"volatile_metadata_pointer","","VA",179,null],[3,"ImageHotPatchInfo","","",null,null],[12,"version","","",180,null],[12,"size","","",180,null],[12,"sequence_number","","",180,null],[12,"base_image_list","","",180,null],[12,"base_image_count","","",180,null],[12,"buffer_offset","","Version 2 and later",180,null],[12,"extra_patch_size","","Version 3 and later",180,null],[3,"ImageHotPatchBase","","",null,null],[12,"sequence_number","","",181,null],[12,"flags","","",181,null],[12,"original_time_date_stamp","","",181,null],[12,"original_check_sum","","",181,null],[12,"code_integrity_info","","",181,null],[12,"code_integrity_size","","",181,null],[12,"patch_table","","",181,null],[12,"buffer_offset","","Version 2 and later",181,null],[3,"ImageHotPatchHashes","","",null,null],[12,"sha256","","",182,null],[12,"sha1","","",182,null],[17,"IMAGE_HOT_PATCH_BASE_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_INVERSE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_RESERVED","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TYPE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SIZE","","",null,null],[17,"IMAGE_HOT_PATCH_NONE","","",null,null],[17,"IMAGE_HOT_PATCH_FUNCTION","","",null,null],[17,"IMAGE_HOT_PATCH_ABSOLUTE","","",null,null],[17,"IMAGE_HOT_PATCH_REL32","","",null,null],[17,"IMAGE_HOT_PATCH_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_INDIRECT","","",null,null],[17,"IMAGE_HOT_PATCH_NO_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_DYNAMIC_VALUE","","",null,null],[17,"IMAGE_GUARD_CF_INSTRUMENTED","","Module performs control flow integrity checks using …",null,null],[17,"IMAGE_GUARD_CFW_INSTRUMENTED","","Module performs control flow and write integrity checks",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","","Module contains valid control flow target metadata",null,null],[17,"IMAGE_GUARD_SECURITY_COOKIE_UNUSED","","Module does not make use of the /GS security cookie",null,null],[17,"IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","","Module supports read only delay load IAT",null,null],[17,"IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","","Delayload import table in its own .didat section (with …",null,null],[17,"IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","","Module contains suppressed export information.",null,null],[17,"IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","","Module enables suppression of exports",null,null],[17,"IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","","Module contains longjmp target information",null,null],[17,"IMAGE_GUARD_RF_INSTRUMENTED","","Module contains return flow instrumentation and metadata",null,null],[17,"IMAGE_GUARD_RF_ENABLE","","Module requests that the OS enable return flow protection",null,null],[17,"IMAGE_GUARD_RF_STRICT","","Module requests that the OS enable return flow protection …",null,null],[17,"IMAGE_GUARD_RETPOLINE_PRESENT","","Module was built with retpoline support",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","","Stride of Guard CF function table encoded in these bits …",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","","Shift to right-justify Guard CF function table stride",null,null],[17,"IMAGE_GUARD_FLAG_FID_SUPPRESSED","","The containing GFID entry is suppressed",null,null],[17,"IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","","The containing GFID entry is export suppressed",null,null],[3,"ImageArmRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",183,null],[12,"unwind_data","","",183,null],[3,"ImageArm64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",184,null],[12,"unwind_data","","",184,null],[3,"ImageAlpha64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",185,null],[12,"end_address","","",185,null],[12,"exception_handler","","",185,null],[12,"handler_data","","",185,null],[12,"prolog_end_address","","",185,null],[3,"ImageAlphaRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",186,null],[12,"end_address","","",186,null],[12,"exception_handler","","",186,null],[12,"handler_data","","",186,null],[12,"prolog_end_address","","",186,null],[3,"ImageRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",187,null],[12,"end_address","","",187,null],[12,"unwind_info_address_or_data","","",187,null],[17,"IMAGE_ENCLAVE_LONG_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_SHORT_ID_LENGTH","","",null,null],[3,"ImageEnclaveConfig32","","",null,null],[12,"size","","",188,null],[12,"minimum_required_config_size","","",188,null],[12,"policy_flags","","",188,null],[12,"number_of_imports","","",188,null],[12,"import_list","","",188,null],[12,"import_entry_size","","",188,null],[12,"family_id","","",188,null],[12,"image_id","","",188,null],[12,"image_version","","",188,null],[12,"security_version","","",188,null],[12,"enclave_size","","",188,null],[12,"number_of_threads","","",188,null],[12,"enclave_flags","","",188,null],[3,"ImageEnclaveConfig64","","",null,null],[12,"size","","",189,null],[12,"minimum_required_config_size","","",189,null],[12,"policy_flags","","",189,null],[12,"number_of_imports","","",189,null],[12,"import_list","","",189,null],[12,"import_entry_size","","",189,null],[12,"family_id","","",189,null],[12,"image_id","","",189,null],[12,"image_version","","",189,null],[12,"security_version","","",189,null],[12,"enclave_size","","",189,null],[12,"number_of_threads","","",189,null],[12,"enclave_flags","","",189,null],[17,"IMAGE_ENCLAVE_POLICY_DEBUGGABLE","","",null,null],[17,"IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE","","",null,null],[3,"ImageEnclaveImport","","",null,null],[12,"match_type","","",190,null],[12,"minimum_security_version","","",190,null],[12,"unique_or_author_id","","",190,null],[12,"family_id","","",190,null],[12,"image_id","","",190,null],[12,"import_name","","",190,null],[12,"reserved","","",190,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_NONE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID","","",null,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",191,null],[12,"time_date_stamp","","",191,null],[12,"major_version","","",191,null],[12,"minor_version","","",191,null],[12,"typ","","",191,null],[12,"size_of_data","","",191,null],[12,"address_of_raw_data","","",191,null],[12,"pointer_to_raw_data","","",191,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_TO_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"IMAGE_DEBUG_TYPE_RESERVED10","","",null,null],[17,"IMAGE_DEBUG_TYPE_CLSID","","",null,null],[17,"IMAGE_DEBUG_TYPE_VC_FEATURE","","",null,null],[17,"IMAGE_DEBUG_TYPE_POGO","","",null,null],[17,"IMAGE_DEBUG_TYPE_ILTCG","","",null,null],[17,"IMAGE_DEBUG_TYPE_MPX","","",null,null],[17,"IMAGE_DEBUG_TYPE_REPRO","","",null,null],[3,"ImageCoffSymbolsHeader","","",null,null],[12,"number_of_symbols","","",192,null],[12,"lva_to_first_symbol","","",192,null],[12,"number_of_linenumbers","","",192,null],[12,"lva_to_first_linenumber","","",192,null],[12,"rva_to_first_byte_of_code","","",192,null],[12,"rva_to_last_byte_of_code","","",192,null],[12,"rva_to_first_byte_of_data","","",192,null],[12,"rva_to_last_byte_of_data","","",192,null],[17,"FRAME_FPO","","",null,null],[17,"FRAME_TRAP","","",null,null],[17,"FRAME_TSS","","",null,null],[17,"FRAME_NONFPO","","",null,null],[17,"IMAGE_DEBUG_MISC_EXENAME","","",null,null],[3,"ImageDebugMisc","","",null,null],[12,"data_type","","type of misc data, see defines",193,null],[12,"length","","total length of record, rounded to four byte multiple.",193,null],[12,"unicode","","TRUE if data is unicode string",193,null],[12,"reserved","","",193,null],[3,"ImageFunctionEntry","","",null,null],[12,"starting_address","","",194,null],[12,"ending_address","","",194,null],[12,"end_of_prologue","","",194,null],[3,"ImageFunctionEntry64","","",null,null],[12,"starting_address","","",195,null],[12,"ending_address","","",195,null],[12,"end_of_prologue_or_unwind_info_address","","",195,null],[3,"ImageSeparateDebugHeader","","",null,null],[12,"signature","","",196,null],[12,"flags","","",196,null],[12,"machine","","",196,null],[12,"characteristics","","",196,null],[12,"time_date_stamp","","",196,null],[12,"check_sum","","",196,null],[12,"image_base","","",196,null],[12,"size_of_image","","",196,null],[12,"number_of_sections","","",196,null],[12,"exported_names_size","","",196,null],[12,"debug_directory_size","","",196,null],[12,"section_alignment","","",196,null],[12,"reserved","","",196,null],[3,"NonPagedDebugInfo","","",null,null],[12,"signature","","",197,null],[12,"flags","","",197,null],[12,"size","","",197,null],[12,"machine","","",197,null],[12,"characteristics","","",197,null],[12,"time_date_stamp","","",197,null],[12,"check_sum","","",197,null],[12,"size_of_image","","",197,null],[12,"image_base","","",197,null],[17,"IMAGE_SEPARATE_DEBUG_SIGNATURE","","",null,null],[17,"NON_PAGED_DEBUG_SIGNATURE","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_FLAGS_MASK","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_MISMATCH","","when DBG was updated, the old checksum didn\'t match.",null,null],[3,"ImageArchitectureEntry","","",null,null],[12,"fixup_inst_rva","","RVA of instruction to fixup",198,null],[12,"new_inst","","fixup instruction (see alphaops.h)",198,null],[17,"IMPORT_OBJECT_HDR_SIG2","","",null,null],[3,"ImportObjectHeader","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",199,null],[12,"sig2","","Must be IMPORT_OBJECT_HDR_SIG2.",199,null],[12,"version","","",199,null],[12,"machine","","",199,null],[12,"time_date_stamp","","Time/date stamp",199,null],[12,"size_of_data","","particularly useful for incremental links",199,null],[12,"ordinal_or_hint","","if grf & IMPORT_OBJECT_ORDINAL",199,null],[12,"name_type","","",199,null],[17,"IMPORT_OBJECT_CODE","","",null,null],[17,"IMPORT_OBJECT_DATA","","",null,null],[17,"IMPORT_OBJECT_CONST","","",null,null],[17,"IMPORT_OBJECT_ORDINAL","","Import by ordinal",null,null],[17,"IMPORT_OBJECT_NAME","","Import name == public symbol name.",null,null],[17,"IMPORT_OBJECT_NAME_NO_PREFIX","","Import name == public symbol name skipping leading ?, @, …",null,null],[17,"IMPORT_OBJECT_NAME_UNDECORATE","","Import name == public symbol name skipping leading ?, @, …",null,null],[17,"IMPORT_OBJECT_NAME_EXPORTAS","","Import name == a name is explicitly provided after the …",null,null],[17,"COMIMAGE_FLAGS_ILONLY","","",null,null],[17,"COMIMAGE_FLAGS_32BITREQUIRED","","",null,null],[17,"COMIMAGE_FLAGS_IL_LIBRARY","","",null,null],[17,"COMIMAGE_FLAGS_STRONGNAMESIGNED","","",null,null],[17,"COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","","",null,null],[17,"COMIMAGE_FLAGS_TRACKDEBUGDATA","","",null,null],[17,"COMIMAGE_FLAGS_32BITPREFERRED","","",null,null],[17,"COR_VERSION_MAJOR_V2","","",null,null],[17,"COR_VERSION_MAJOR","","",null,null],[17,"COR_VERSION_MINOR","","",null,null],[17,"COR_DELETED_NAME_LENGTH","","",null,null],[17,"COR_VTABLEGAP_NAME_LENGTH","","",null,null],[17,"NATIVE_TYPE_MAX_CB","","",null,null],[17,"COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","","",null,null],[17,"IMAGE_COR_MIH_METHODRVA","","",null,null],[17,"IMAGE_COR_MIH_EHRVA","","",null,null],[17,"IMAGE_COR_MIH_BASICBLOCK","","",null,null],[17,"COR_VTABLE_32BIT","","V-table slots are 32-bits in size.",null,null],[17,"COR_VTABLE_64BIT","","V-table slots are 64-bits in size.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED","","If set, transition from unmanaged.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","","If set, transition from unmanaged with keeping the …",null,null],[17,"COR_VTABLE_CALL_MOST_DERIVED","","Call most derived method described by",null,null],[17,"IMAGE_COR_EATJ_THUNK_SIZE","","Size of a jump thunk reserved range.",null,null],[17,"MAX_CLASS_NAME","","",null,null],[17,"MAX_PACKAGE_NAME","","",null,null],[3,"ImageCor20Header","","",null,null],[12,"cb","","",200,null],[12,"major_runtime_version","","",200,null],[12,"minor_runtime_version","","",200,null],[12,"meta_data","","",200,null],[12,"flags","","",200,null],[12,"entry_point_token_or_rva","","",200,null],[12,"resources","","",200,null],[12,"strong_name_signature","","",200,null],[12,"code_manager_table","","",200,null],[12,"vtable_fixups","","",200,null],[12,"export_address_table_jumps","","",200,null],[12,"managed_native_header","","",200,null],[4,"Architecture","object","A CPU architecture.",null,null],[13,"Unknown","","",201,null],[13,"Aarch64","","",201,null],[13,"Arm","","",201,null],[13,"I386","","",201,null],[13,"Mips","","",201,null],[13,"S390x","","",201,null],[13,"Wasm32","","",201,null],[13,"X86_64","","",201,null],[4,"AddressSize","","The size of an address value for an architecture.",null,null],[13,"U32","","",202,null],[13,"U64","","",202,null],[4,"BinaryFormat","","A binary file format.",null,null],[13,"Coff","","",203,null],[13,"Elf","","",203,null],[13,"MachO","","",203,null],[13,"Pe","","",203,null],[13,"Wasm","","",203,null],[4,"SectionKind","","The kind of a section.",null,null],[13,"Unknown","","The section kind is unknown.",204,null],[13,"Text","","An executable code section.",204,null],[13,"Data","","A data section.",204,null],[13,"ReadOnlyData","","A read only data section.",204,null],[13,"ReadOnlyString","","A loadable string section.",204,null],[13,"UninitializedData","","An uninitialized data section.",204,null],[13,"Common","","An uninitialized common data section.",204,null],[13,"Tls","","A TLS data section.",204,null],[13,"UninitializedTls","","An uninitialized TLS data section.",204,null],[13,"TlsVariables","","A TLS variables section.",204,null],[13,"OtherString","","A non-loadable string section.",204,null],[13,"Other","","Some other non-loadable section.",204,null],[13,"Debug","","Debug information.",204,null],[13,"Linker","","Information for the linker.",204,null],[13,"Note","","ELF note section.",204,null],[13,"Metadata","","Metadata such as symbols or relocations.",204,null],[13,"Elf","","Some other ELF section type.",204,null],[4,"ComdatKind","","The selection kind for a COMDAT section group.",null,null],[13,"Unknown","","The selection kind is unknown.",205,null],[13,"Any","","Multiple definitions are allowed.",205,null],[13,"NoDuplicates","","Multiple definitions are not allowed.",205,null],[13,"SameSize","","Multiple definitions must have the same size.",205,null],[13,"ExactMatch","","Multiple definitions must match exactly.",205,null],[13,"Largest","","Multiple definitions are allowed, and the largest is …",205,null],[13,"Newest","","Multiple definitions are allowed, and the newest is …",205,null],[4,"SymbolKind","","The kind of a symbol.",null,null],[13,"Unknown","","The symbol kind is unknown.",206,null],[13,"Null","","The symbol is a null placeholder.",206,null],[13,"Text","","The symbol is for executable code.",206,null],[13,"Data","","The symbol is for a data object.",206,null],[13,"Section","","The symbol is for a section.",206,null],[13,"File","","The symbol is the name of a file. It precedes symbols …",206,null],[13,"Label","","The symbol is for a code label.",206,null],[13,"Tls","","The symbol is for a thread local storage entity.",206,null],[4,"SymbolScope","","A symbol scope.",null,null],[13,"Unknown","","Unknown scope.",207,null],[13,"Compilation","","Symbol is visible to the compilation unit.",207,null],[13,"Linkage","","Symbol is visible to the static linkage unit.",207,null],[13,"Dynamic","","Symbol is visible to dynamically linked objects.",207,null],[4,"RelocationKind","","The operation used to calculate the result of the …",null,null],[13,"Absolute","","S + A",208,null],[13,"Relative","","S + A - P",208,null],[13,"Got","","G + A - GotBase",208,null],[13,"GotRelative","","G + A - P",208,null],[13,"GotBaseRelative","","GotBase + A - P",208,null],[13,"GotBaseOffset","","S + A - GotBase",208,null],[13,"PltRelative","","L + A - P",208,null],[13,"ImageOffset","","S + A - Image",208,null],[13,"SectionOffset","","S + A - Section",208,null],[13,"SectionIndex","","The index of the section containing the symbol.",208,null],[13,"Elf","","Some other ELF relocation. The value is dependent on the …",208,null],[13,"MachO","","Some other Mach-O relocation. The value is dependent on …",208,null],[12,"value","object::RelocationKind","The relocation type.",209,null],[12,"relative","","Whether the relocation is relative to the place.",209,null],[13,"Coff","object","Some other COFF relocation. The value is dependent on the …",208,null],[4,"RelocationEncoding","","Information about how the result of the relocation …",null,null],[13,"Generic","","Generic encoding.",210,null],[13,"X86Signed","","x86 sign extension at runtime.",210,null],[13,"X86RipRelative","","x86 rip-relative addressing.",210,null],[13,"X86RipRelativeMovq","","x86 rip-relative addressing in movq instruction.",210,null],[13,"X86Branch","","x86 branch instruction.",210,null],[13,"S390xDbl","","s390x PC-relative offset shifted right by one bit.",210,null],[4,"FileFlags","","File flags that are specific to each file format.",null,null],[13,"None","","No file flags.",211,null],[13,"Elf","","ELF file flags.",211,null],[12,"e_flags","object::FileFlags","<code>e_flags</code> field in the ELF file header.",212,null],[13,"MachO","object","Mach-O file flags.",211,null],[12,"flags","object::FileFlags","<code>flags</code> field in the Mach-O file header.",213,null],[13,"Coff","object","COFF file flags.",211,null],[12,"characteristics","object::FileFlags","<code>Characteristics</code> field in the COFF file header.",214,null],[4,"SectionFlags","object","Section flags that are specific to each file format.",null,null],[13,"None","","No section flags.",215,null],[13,"Elf","","ELF section flags.",215,null],[12,"sh_flags","object::SectionFlags","<code>sh_flags</code> field in the section header.",216,null],[13,"MachO","object","Mach-O section flags.",215,null],[12,"flags","object::SectionFlags","<code>flags</code> field in the section header.",217,null],[13,"Coff","object","COFF section flags.",215,null],[12,"characteristics","object::SectionFlags","<code>Characteristics</code> field in the section header.",218,null],[4,"SymbolFlags","object","Symbol flags that are specific to each file format.",null,null],[13,"None","","No symbol flags.",219,null],[13,"Elf","","ELF symbol flags.",219,null],[12,"st_info","object::SymbolFlags","<code>st_info</code> field in the ELF symbol.",220,null],[12,"st_other","","<code>st_other</code> field in the ELF symbol.",220,null],[13,"MachO","object","Mach-O symbol flags.",219,null],[12,"n_desc","object::SymbolFlags","<code>n_desc</code> field in the Mach-O symbol.",221,null],[13,"CoffSection","object","COFF flags for a section symbol.",219,null],[12,"selection","object::SymbolFlags","<code>Selection</code> field in the auxiliary symbol for the section.",222,null],[12,"associative_section","","<code>Number</code> field in the auxiliary symbol for the section.",222,null],[11,"from","object","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"from","object::endian","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","object::pod","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","object::read","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"into_iter","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"into_iter","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"into_iter","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"into_iter","","",233,[[]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"into_iter","","",235,[[]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"into_iter","","",237,[[]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"into_iter","","",238,[[]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","object::read::archive","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"into_iter","","",239,[[]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","object::read::coff","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"from","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"into_iter","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"into_iter","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"from","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"into_iter","","",248,[[]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"from","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"into_iter","","",250,[[]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"into_iter","","",251,[[]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"into_iter","","",253,[[]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","object::read::elf","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"into_iter","","",255,[[]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"from","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"into_iter","","",258,[[]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"from","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"into_iter","","",262,[[]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"from","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"into_iter","","",265,[[]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"into_iter","","",266,[[]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"into_iter","","",267,[[]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"into_iter","","",269,[[]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","object::read::macho","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"into_iter","","",273,[[]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"into_iter","","",275,[[]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"into_iter","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"into_iter","","",278,[[]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"from","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"into_iter","","",282,[[]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"from","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"into_iter","","",284,[[]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","object::read::pe","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"into_iter","","",286,[[]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"into_iter","","",288,[[]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"into_iter","","",289,[[]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"into_iter","","",291,[[]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"into_iter","","",293,[[]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","object::read","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"into_iter","","",294,[[]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"to_string","","",295,[[],["string",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"from","object::archive","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"from","object::elf","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"from","object::macho","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"from","object::pe","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"from_big_endian","object::endian","",1,[[["bool",15]],["option",4]]],[11,"is_big_endian","","",1,[[],["bool",15]]],[11,"from_big_endian","","",223,[[["bool",15]],["option",4]]],[11,"is_big_endian","","",223,[[],["bool",15]]],[11,"from_big_endian","","",224,[[["bool",15]],["option",4]]],[11,"is_big_endian","","",224,[[],["bool",15]]],[11,"is_type_64","object::elf","",51,[[],["bool",15]]],[11,"e_ident","","",51,[[],["ident",3]]],[11,"e_type","","",51,[[],["u16",15]]],[11,"e_machine","","",51,[[],["u16",15]]],[11,"e_version","","",51,[[],["u32",15]]],[11,"e_entry","","",51,[[]]],[11,"e_phoff","","",51,[[]]],[11,"e_shoff","","",51,[[]]],[11,"e_flags","","",51,[[],["u32",15]]],[11,"e_ehsize","","",51,[[],["u16",15]]],[11,"e_phentsize","","",51,[[],["u16",15]]],[11,"e_phnum","","",51,[[],["u16",15]]],[11,"e_shentsize","","",51,[[],["u16",15]]],[11,"e_shnum","","",51,[[],["u16",15]]],[11,"e_shstrndx","","",51,[[],["u16",15]]],[11,"is_type_64","","",52,[[],["bool",15]]],[11,"e_ident","","",52,[[],["ident",3]]],[11,"e_type","","",52,[[],["u16",15]]],[11,"e_machine","","",52,[[],["u16",15]]],[11,"e_version","","",52,[[],["u32",15]]],[11,"e_entry","","",52,[[]]],[11,"e_phoff","","",52,[[]]],[11,"e_shoff","","",52,[[]]],[11,"e_flags","","",52,[[],["u32",15]]],[11,"e_ehsize","","",52,[[],["u16",15]]],[11,"e_phentsize","","",52,[[],["u16",15]]],[11,"e_phnum","","",52,[[],["u16",15]]],[11,"e_shentsize","","",52,[[],["u16",15]]],[11,"e_shnum","","",52,[[],["u16",15]]],[11,"e_shstrndx","","",52,[[],["u16",15]]],[11,"p_type","","",66,[[],["u32",15]]],[11,"p_flags","","",66,[[],["u32",15]]],[11,"p_offset","","",66,[[]]],[11,"p_vaddr","","",66,[[]]],[11,"p_paddr","","",66,[[]]],[11,"p_filesz","","",66,[[]]],[11,"p_memsz","","",66,[[]]],[11,"p_align","","",66,[[]]],[11,"p_type","","",67,[[],["u32",15]]],[11,"p_flags","","",67,[[],["u32",15]]],[11,"p_offset","","",67,[[]]],[11,"p_vaddr","","",67,[[]]],[11,"p_paddr","","",67,[[]]],[11,"p_filesz","","",67,[[]]],[11,"p_memsz","","",67,[[]]],[11,"p_align","","",67,[[]]],[11,"sh_name","","",54,[[],["u32",15]]],[11,"sh_type","","",54,[[],["u32",15]]],[11,"sh_flags","","",54,[[]]],[11,"sh_addr","","",54,[[]]],[11,"sh_offset","","",54,[[]]],[11,"sh_size","","",54,[[]]],[11,"sh_link","","",54,[[],["u32",15]]],[11,"sh_info","","",54,[[],["u32",15]]],[11,"sh_addralign","","",54,[[]]],[11,"sh_entsize","","",54,[[]]],[11,"sh_name","","",55,[[],["u32",15]]],[11,"sh_type","","",55,[[],["u32",15]]],[11,"sh_flags","","",55,[[]]],[11,"sh_addr","","",55,[[]]],[11,"sh_offset","","",55,[[]]],[11,"sh_size","","",55,[[]]],[11,"sh_link","","",55,[[],["u32",15]]],[11,"sh_info","","",55,[[],["u32",15]]],[11,"sh_addralign","","",55,[[]]],[11,"sh_entsize","","",55,[[]]],[11,"st_name","","",58,[[],["u32",15]]],[11,"st_info","","",58,[[],["u8",15]]],[11,"st_bind","","",58,[[],["u8",15]]],[11,"st_type","","",58,[[],["u8",15]]],[11,"st_other","","",58,[[],["u8",15]]],[11,"st_visibility","","",58,[[],["u8",15]]],[11,"st_shndx","","",58,[[],["u16",15]]],[11,"st_value","","",58,[[]]],[11,"st_size","","",58,[[]]],[11,"st_name","","",59,[[],["u32",15]]],[11,"st_info","","",59,[[],["u8",15]]],[11,"st_bind","","",59,[[],["u8",15]]],[11,"st_type","","",59,[[],["u8",15]]],[11,"st_other","","",59,[[],["u8",15]]],[11,"st_visibility","","",59,[[],["u8",15]]],[11,"st_shndx","","",59,[[],["u16",15]]],[11,"st_value","","",59,[[]]],[11,"st_size","","",59,[[]]],[11,"r_offset","","",62,[[]]],[11,"r_info","","",62,[[]]],[11,"r_sym","","",62,[[],["u32",15]]],[11,"r_type","","",62,[[],["u32",15]]],[11,"r_offset","","",64,[[]]],[11,"r_info","","",64,[[]]],[11,"r_sym","","",64,[[],["u32",15]]],[11,"r_type","","",64,[[],["u32",15]]],[11,"r_offset","","",63,[[]]],[11,"r_info","","",63,[[]]],[11,"r_addend","","",63,[[]]],[11,"r_sym","","",63,[[],["u32",15]]],[11,"r_type","","",63,[[],["u32",15]]],[11,"r_offset","","",65,[[]]],[11,"r_info","","",65,[[]]],[11,"r_addend","","",65,[[]]],[11,"r_sym","","",65,[[],["u32",15]]],[11,"r_type","","",65,[[],["u32",15]]],[11,"d_tag","","",68,[[]]],[11,"d_val","","",68,[[]]],[11,"d_tag","","",69,[[]]],[11,"d_val","","",69,[[]]],[11,"ch_type","","",56,[[],["u32",15]]],[11,"ch_size","","",56,[[]]],[11,"ch_addralign","","",56,[[]]],[11,"ch_type","","",57,[[],["u32",15]]],[11,"ch_size","","",57,[[]]],[11,"ch_addralign","","",57,[[]]],[11,"n_namesz","","",70,[[],["u32",15]]],[11,"n_descsz","","",70,[[],["u32",15]]],[11,"n_type","","",70,[[],["u32",15]]],[11,"n_namesz","","",71,[[],["u32",15]]],[11,"n_descsz","","",71,[[],["u32",15]]],[11,"n_type","","",71,[[],["u32",15]]],[11,"cputype","object::macho","",73,[[],["u32",15]]],[11,"cpusubtype","","",73,[[],["u32",15]]],[11,"offset","","",73,[[]]],[11,"size","","",73,[[]]],[11,"align","","",73,[[],["u32",15]]],[11,"cputype","","",74,[[],["u32",15]]],[11,"cpusubtype","","",74,[[],["u32",15]]],[11,"offset","","",74,[[]]],[11,"size","","",74,[[]]],[11,"align","","",74,[[],["u32",15]]],[11,"is_type_64","","",75,[[],["bool",15]]],[11,"is_big_endian","","",75,[[],["bool",15]]],[11,"is_little_endian","","",75,[[],["bool",15]]],[11,"magic","","",75,[[],["u32",15]]],[11,"cputype","","",75,[[],["u32",15]]],[11,"cpusubtype","","",75,[[],["u32",15]]],[11,"filetype","","",75,[[],["u32",15]]],[11,"ncmds","","",75,[[],["u32",15]]],[11,"sizeofcmds","","",75,[[],["u32",15]]],[11,"flags","","",75,[[],["u32",15]]],[11,"is_type_64","","",76,[[],["bool",15]]],[11,"is_big_endian","","",76,[[],["bool",15]]],[11,"is_little_endian","","",76,[[],["bool",15]]],[11,"magic","","",76,[[],["u32",15]]],[11,"cputype","","",76,[[],["u32",15]]],[11,"cpusubtype","","",76,[[],["u32",15]]],[11,"filetype","","",76,[[],["u32",15]]],[11,"ncmds","","",76,[[],["u32",15]]],[11,"sizeofcmds","","",76,[[],["u32",15]]],[11,"flags","","",76,[[],["u32",15]]],[11,"from_command","","",79,[[["macholoadcommand",3]],[["result",6],["option",4]]]],[11,"cmd","","",79,[[],["u32",15]]],[11,"cmdsize","","",79,[[],["u32",15]]],[11,"segname","","",79,[[]]],[11,"vmaddr","","",79,[[]]],[11,"vmsize","","",79,[[]]],[11,"fileoff","","",79,[[]]],[11,"filesize","","",79,[[]]],[11,"maxprot","","",79,[[],["u32",15]]],[11,"initprot","","",79,[[],["u32",15]]],[11,"nsects","","",79,[[],["u32",15]]],[11,"flags","","",79,[[],["u32",15]]],[11,"from_command","","",80,[[["macholoadcommand",3]],[["result",6],["option",4]]]],[11,"cmd","","",80,[[],["u32",15]]],[11,"cmdsize","","",80,[[],["u32",15]]],[11,"segname","","",80,[[]]],[11,"vmaddr","","",80,[[]]],[11,"vmsize","","",80,[[]]],[11,"fileoff","","",80,[[]]],[11,"filesize","","",80,[[]]],[11,"maxprot","","",80,[[],["u32",15]]],[11,"initprot","","",80,[[],["u32",15]]],[11,"nsects","","",80,[[],["u32",15]]],[11,"flags","","",80,[[],["u32",15]]],[11,"sectname","","",81,[[]]],[11,"segname","","",81,[[]]],[11,"addr","","",81,[[]]],[11,"size","","",81,[[]]],[11,"offset","","",81,[[],["u32",15]]],[11,"align","","",81,[[],["u32",15]]],[11,"reloff","","",81,[[],["u32",15]]],[11,"nreloc","","",81,[[],["u32",15]]],[11,"flags","","",81,[[],["u32",15]]],[11,"sectname","","",82,[[]]],[11,"segname","","",82,[[]]],[11,"addr","","",82,[[]]],[11,"size","","",82,[[]]],[11,"offset","","",82,[[],["u32",15]]],[11,"align","","",82,[[],["u32",15]]],[11,"reloff","","",82,[[],["u32",15]]],[11,"nreloc","","",82,[[],["u32",15]]],[11,"flags","","",82,[[],["u32",15]]],[11,"n_strx","","",122,[[],["u32",15]]],[11,"n_type","","",122,[[],["u8",15]]],[11,"n_sect","","",122,[[],["u8",15]]],[11,"n_desc","","",122,[[],["u16",15]]],[11,"n_value","","",122,[[]]],[11,"n_strx","","",123,[[],["u32",15]]],[11,"n_type","","",123,[[],["u8",15]]],[11,"n_sect","","",123,[[],["u8",15]]],[11,"n_desc","","",123,[[],["u16",15]]],[11,"n_value","","",123,[[]]],[11,"is_type_64","object::pe","",136,[[],["bool",15]]],[11,"is_valid_optional_magic","","",136,[[],["bool",15]]],[11,"signature","","",136,[[],["u32",15]]],[11,"file_header","","",136,[[],["imagefileheader",3]]],[11,"optional_header","","",136,[[]]],[11,"is_type_64","","",135,[[],["bool",15]]],[11,"is_valid_optional_magic","","",135,[[],["bool",15]]],[11,"signature","","",135,[[],["u32",15]]],[11,"file_header","","",135,[[],["imagefileheader",3]]],[11,"optional_header","","",135,[[]]],[11,"magic","","",132,[[],["u16",15]]],[11,"major_linker_version","","",132,[[],["u8",15]]],[11,"minor_linker_version","","",132,[[],["u8",15]]],[11,"size_of_code","","",132,[[],["u32",15]]],[11,"size_of_initialized_data","","",132,[[],["u32",15]]],[11,"size_of_uninitialized_data","","",132,[[],["u32",15]]],[11,"address_of_entry_point","","",132,[[],["u32",15]]],[11,"base_of_code","","",132,[[],["u32",15]]],[11,"image_base","","",132,[[],["u64",15]]],[11,"section_alignment","","",132,[[],["u32",15]]],[11,"file_alignment","","",132,[[],["u32",15]]],[11,"major_operating_system_version","","",132,[[],["u16",15]]],[11,"minor_operating_system_version","","",132,[[],["u16",15]]],[11,"major_image_version","","",132,[[],["u16",15]]],[11,"minor_image_version","","",132,[[],["u16",15]]],[11,"major_subsystem_version","","",132,[[],["u16",15]]],[11,"minor_subsystem_version","","",132,[[],["u16",15]]],[11,"win32_version_value","","",132,[[],["u32",15]]],[11,"size_of_image","","",132,[[],["u32",15]]],[11,"size_of_headers","","",132,[[],["u32",15]]],[11,"check_sum","","",132,[[],["u32",15]]],[11,"subsystem","","",132,[[],["u16",15]]],[11,"dll_characteristics","","",132,[[],["u16",15]]],[11,"size_of_stack_reserve","","",132,[[],["u64",15]]],[11,"size_of_stack_commit","","",132,[[],["u64",15]]],[11,"size_of_heap_reserve","","",132,[[],["u64",15]]],[11,"size_of_heap_commit","","",132,[[],["u64",15]]],[11,"loader_flags","","",132,[[],["u32",15]]],[11,"number_of_rva_and_sizes","","",132,[[],["u32",15]]],[11,"magic","","",134,[[],["u16",15]]],[11,"major_linker_version","","",134,[[],["u8",15]]],[11,"minor_linker_version","","",134,[[],["u8",15]]],[11,"size_of_code","","",134,[[],["u32",15]]],[11,"size_of_initialized_data","","",134,[[],["u32",15]]],[11,"size_of_uninitialized_data","","",134,[[],["u32",15]]],[11,"address_of_entry_point","","",134,[[],["u32",15]]],[11,"base_of_code","","",134,[[],["u32",15]]],[11,"image_base","","",134,[[],["u64",15]]],[11,"section_alignment","","",134,[[],["u32",15]]],[11,"file_alignment","","",134,[[],["u32",15]]],[11,"major_operating_system_version","","",134,[[],["u16",15]]],[11,"minor_operating_system_version","","",134,[[],["u16",15]]],[11,"major_image_version","","",134,[[],["u16",15]]],[11,"minor_image_version","","",134,[[],["u16",15]]],[11,"major_subsystem_version","","",134,[[],["u16",15]]],[11,"minor_subsystem_version","","",134,[[],["u16",15]]],[11,"win32_version_value","","",134,[[],["u32",15]]],[11,"size_of_image","","",134,[[],["u32",15]]],[11,"size_of_headers","","",134,[[],["u32",15]]],[11,"check_sum","","",134,[[],["u32",15]]],[11,"subsystem","","",134,[[],["u16",15]]],[11,"dll_characteristics","","",134,[[],["u16",15]]],[11,"size_of_stack_reserve","","",134,[[],["u64",15]]],[11,"size_of_stack_commit","","",134,[[],["u64",15]]],[11,"size_of_heap_reserve","","",134,[[],["u64",15]]],[11,"size_of_heap_commit","","",134,[[],["u64",15]]],[11,"loader_flags","","",134,[[],["u32",15]]],[11,"number_of_rva_and_sizes","","",134,[[],["u32",15]]],[11,"architecture","object::read","",226,[[],["architecture",4]]],[11,"is_little_endian","","",226,[[],["bool",15]]],[11,"is_64","","",226,[[],["bool",15]]],[11,"segments","","",226,[[],["segmentiterator",3]]],[11,"section_by_name","","",226,[[["str",15]],[["section",3],["option",4]]]],[11,"section_by_index","","",226,[[["sectionindex",3]],[["section",3],["result",6]]]],[11,"sections","","",226,[[],["sectioniterator",3]]],[11,"comdats","","",226,[[],["comdatiterator",3]]],[11,"symbol_by_index","","",226,[[["symbolindex",3]],[["symbol",3],["result",6]]]],[11,"symbols","","",226,[[],["symboliterator",3]]],[11,"symbol_table","","",226,[[],[["symboltable",3],["option",4]]]],[11,"dynamic_symbols","","",226,[[],["symboliterator",3]]],[11,"dynamic_symbol_table","","",226,[[],[["symboltable",3],["option",4]]]],[11,"dynamic_relocations","","",226,[[],[["dynamicrelocationiterator",3],["option",4]]]],[11,"symbol_map","","",226,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","",226,[[],["objectmap",3]]],[11,"imports","","",226,[[],[["result",6],["vec",3]]]],[11,"exports","","",226,[[],[["vec",3],["result",6]]]],[11,"has_debug_symbols","","",226,[[],["bool",15]]],[11,"mach_uuid","","",226,[[],[["option",4],["result",6]]]],[11,"build_id","","",226,[[],[["result",6],["option",4]]]],[11,"gnu_debuglink","","",226,[[],[["option",4],["result",6]]]],[11,"entry","","",226,[[],["u64",15]]],[11,"flags","","",226,[[],["fileflags",4]]],[11,"architecture","object::read::coff","",240,[[],["architecture",4]]],[11,"is_little_endian","","",240,[[],["bool",15]]],[11,"is_64","","",240,[[],["bool",15]]],[11,"segments","","",240,[[],["coffsegmentiterator",3]]],[11,"section_by_name","","",240,[[["str",15]],[["option",4],["coffsection",3]]]],[11,"section_by_index","","",240,[[["sectionindex",3]],[["result",6],["coffsection",3]]]],[11,"sections","","",240,[[],["coffsectioniterator",3]]],[11,"comdats","","",240,[[],["coffcomdatiterator",3]]],[11,"symbol_by_index","","",240,[[["symbolindex",3]],[["coffsymbol",3],["result",6]]]],[11,"symbols","","",240,[[],["coffsymboliterator",3]]],[11,"symbol_table","","",240,[[],[["option",4],["coffsymboltable",3]]]],[11,"dynamic_symbols","","",240,[[],["coffsymboliterator",3]]],[11,"dynamic_symbol_table","","",240,[[],[["option",4],["coffsymboltable",3]]]],[11,"dynamic_relocations","","",240,[[],[["nodynamicrelocationiterator",3],["option",4]]]],[11,"imports","","",240,[[],[["result",6],["vec",3]]]],[11,"exports","","",240,[[],[["vec",3],["result",6]]]],[11,"has_debug_symbols","","",240,[[],["bool",15]]],[11,"entry","","",240,[[],["u64",15]]],[11,"flags","","",240,[[],["fileflags",4]]],[11,"architecture","object::read::elf","",254,[[],["architecture",4]]],[11,"is_little_endian","","",254,[[],["bool",15]]],[11,"is_64","","",254,[[],["bool",15]]],[11,"segments","","",254,[[],["elfsegmentiterator",3]]],[11,"section_by_name","","",254,[[["str",15]],[["option",4],["elfsection",3]]]],[11,"section_by_index","","",254,[[["sectionindex",3]],[["elfsection",3],["result",6]]]],[11,"sections","","",254,[[],["elfsectioniterator",3]]],[11,"comdats","","",254,[[],["elfcomdatiterator",3]]],[11,"symbol_by_index","","",254,[[["symbolindex",3]],[["result",6],["elfsymbol",3]]]],[11,"symbols","","",254,[[],["elfsymboliterator",3]]],[11,"symbol_table","","",254,[[],[["option",4],["elfsymboltable",3]]]],[11,"dynamic_symbols","","",254,[[],["elfsymboliterator",3]]],[11,"dynamic_symbol_table","","",254,[[],[["option",4],["elfsymboltable",3]]]],[11,"dynamic_relocations","","",254,[[],[["option",4],["elfdynamicrelocationiterator",3]]]],[11,"imports","","Get the imported symbols.",254,[[],[["result",6],["vec",3]]]],[11,"exports","","Get the exported symbols.",254,[[],[["result",6],["vec",3]]]],[11,"has_debug_symbols","","",254,[[],["bool",15]]],[11,"build_id","","",254,[[],[["result",6],["option",4]]]],[11,"gnu_debuglink","","",254,[[],[["option",4],["result",6]]]],[11,"entry","","",254,[[],["u64",15]]],[11,"flags","","",254,[[],["fileflags",4]]],[11,"architecture","object::read::macho","",272,[[],["architecture",4]]],[11,"is_little_endian","","",272,[[],["bool",15]]],[11,"is_64","","",272,[[],["bool",15]]],[11,"segments","","",272,[[],["machosegmentiterator",3]]],[11,"section_by_name","","",272,[[["str",15]],[["option",4],["machosection",3]]]],[11,"section_by_index","","",272,[[["sectionindex",3]],[["machosection",3],["result",6]]]],[11,"sections","","",272,[[],["machosectioniterator",3]]],[11,"comdats","","",272,[[],["machocomdatiterator",3]]],[11,"symbol_by_index","","",272,[[["symbolindex",3]],[["machosymbol",3],["result",6]]]],[11,"symbols","","",272,[[],["machosymboliterator",3]]],[11,"symbol_table","","",272,[[],[["machosymboltable",3],["option",4]]]],[11,"dynamic_symbols","","",272,[[],["machosymboliterator",3]]],[11,"dynamic_symbol_table","","",272,[[],[["machosymboltable",3],["option",4]]]],[11,"object_map","","",272,[[],["objectmap",3]]],[11,"imports","","",272,[[],[["result",6],["vec",3]]]],[11,"exports","","",272,[[],[["vec",3],["result",6]]]],[11,"dynamic_relocations","","",272,[[],[["nodynamicrelocationiterator",3],["option",4]]]],[11,"has_debug_symbols","","",272,[[],["bool",15]]],[11,"mach_uuid","","",272,[[],[["option",4],["result",6]]]],[11,"entry","","",272,[[],["u64",15]]],[11,"flags","","",272,[[],["fileflags",4]]],[11,"architecture","object::read::pe","",285,[[],["architecture",4]]],[11,"is_little_endian","","",285,[[],["bool",15]]],[11,"is_64","","",285,[[],["bool",15]]],[11,"segments","","",285,[[],["pesegmentiterator",3]]],[11,"section_by_name","","",285,[[["str",15]],[["option",4],["pesection",3]]]],[11,"section_by_index","","",285,[[["sectionindex",3]],[["pesection",3],["result",6]]]],[11,"sections","","",285,[[],["pesectioniterator",3]]],[11,"comdats","","",285,[[],["pecomdatiterator",3]]],[11,"symbol_by_index","","",285,[[["symbolindex",3]],[["coffsymbol",3],["result",6]]]],[11,"symbols","","",285,[[],["coffsymboliterator",3]]],[11,"symbol_table","","",285,[[],[["option",4],["coffsymboltable",3]]]],[11,"dynamic_symbols","","",285,[[],["coffsymboliterator",3]]],[11,"dynamic_symbol_table","","",285,[[],[["option",4],["coffsymboltable",3]]]],[11,"dynamic_relocations","","",285,[[],[["nodynamicrelocationiterator",3],["option",4]]]],[11,"imports","","",285,[[],[["result",6],["vec",3]]]],[11,"exports","","",285,[[],[["vec",3],["result",6]]]],[11,"has_debug_symbols","","",285,[[],["bool",15]]],[11,"entry","","",285,[[],["u64",15]]],[11,"flags","","",285,[[],["fileflags",4]]],[11,"address","object::read","",228,[[],["u64",15]]],[11,"size","","",228,[[],["u64",15]]],[11,"align","","",228,[[],["u64",15]]],[11,"file_range","","",228,[[]]],[11,"data","","",228,[[],["result",6]]],[11,"data_range","","",228,[[["u64",15]],[["result",6],["option",4]]]],[11,"name","","",228,[[],[["result",6],["option",4]]]],[11,"address","object::read::coff","",243,[[],["u64",15]]],[11,"size","","",243,[[],["u64",15]]],[11,"align","","",243,[[],["u64",15]]],[11,"file_range","","",243,[[]]],[11,"data","","",243,[[],["result",6]]],[11,"data_range","","",243,[[["u64",15]],[["result",6],["option",4]]]],[11,"name","","",243,[[],[["result",6],["option",4]]]],[11,"address","object::read::elf","",256,[[],["u64",15]]],[11,"size","","",256,[[],["u64",15]]],[11,"align","","",256,[[],["u64",15]]],[11,"file_range","","",256,[[]]],[11,"data","","",256,[[],["result",6]]],[11,"data_range","","",256,[[["u64",15]],[["result",6],["option",4]]]],[11,"name","","",256,[[],[["result",6],["option",4]]]],[11,"address","object::read::macho","",277,[[],["u64",15]]],[11,"size","","",277,[[],["u64",15]]],[11,"align","","",277,[[],["u64",15]]],[11,"file_range","","",277,[[]]],[11,"data","","",277,[[],["result",6]]],[11,"data_range","","",277,[[["u64",15]],[["result",6],["option",4]]]],[11,"name","","",277,[[],[["result",6],["option",4]]]],[11,"address","object::read::pe","",290,[[],["u64",15]]],[11,"size","","",290,[[],["u64",15]]],[11,"align","","",290,[[],["u64",15]]],[11,"file_range","","",290,[[]]],[11,"data","","",290,[[],["result",6]]],[11,"data_range","","",290,[[["u64",15]],[["result",6],["option",4]]]],[11,"name","","",290,[[],[["result",6],["option",4]]]],[11,"index","object::read","",230,[[],["sectionindex",3]]],[11,"address","","",230,[[],["u64",15]]],[11,"size","","",230,[[],["u64",15]]],[11,"align","","",230,[[],["u64",15]]],[11,"file_range","","",230,[[],["option",4]]],[11,"data","","",230,[[],["result",6]]],[11,"data_range","","",230,[[["u64",15]],[["result",6],["option",4]]]],[11,"compressed_data","","",230,[[],[["result",6],["compresseddata",3]]]],[11,"name","","",230,[[],[["result",6],["str",15]]]],[11,"segment_name","","",230,[[],[["result",6],["option",4]]]],[11,"kind","","",230,[[],["sectionkind",4]]],[11,"relocations","","",230,[[],["sectionrelocationiterator",3]]],[11,"flags","","",230,[[],["sectionflags",4]]],[11,"index","object::read::coff","",245,[[],["sectionindex",3]]],[11,"address","","",245,[[],["u64",15]]],[11,"size","","",245,[[],["u64",15]]],[11,"align","","",245,[[],["u64",15]]],[11,"file_range","","",245,[[],["option",4]]],[11,"data","","",245,[[],["result",6]]],[11,"data_range","","",245,[[["u64",15]],[["result",6],["option",4]]]],[11,"compressed_data","","",245,[[],[["result",6],["compresseddata",3]]]],[11,"name","","",245,[[],[["result",6],["str",15]]]],[11,"segment_name","","",245,[[],[["result",6],["option",4]]]],[11,"kind","","",245,[[],["sectionkind",4]]],[11,"relocations","","",245,[[],["coffrelocationiterator",3]]],[11,"flags","","",245,[[],["sectionflags",4]]],[11,"index","object::read::elf","",259,[[],["sectionindex",3]]],[11,"address","","",259,[[],["u64",15]]],[11,"size","","",259,[[],["u64",15]]],[11,"align","","",259,[[],["u64",15]]],[11,"file_range","","",259,[[],["option",4]]],[11,"data","","",259,[[],["result",6]]],[11,"data_range","","",259,[[["u64",15]],[["result",6],["option",4]]]],[11,"compressed_data","","",259,[[],[["result",6],["compresseddata",3]]]],[11,"name","","",259,[[],[["result",6],["str",15]]]],[11,"segment_name","","",259,[[],[["result",6],["option",4]]]],[11,"kind","","",259,[[],["sectionkind",4]]],[11,"relocations","","",259,[[],["elfsectionrelocationiterator",3]]],[11,"flags","","",259,[[],["sectionflags",4]]],[11,"index","object::read::macho","",279,[[],["sectionindex",3]]],[11,"address","","",279,[[],["u64",15]]],[11,"size","","",279,[[],["u64",15]]],[11,"align","","",279,[[],["u64",15]]],[11,"file_range","","",279,[[],["option",4]]],[11,"data","","",279,[[],["result",6]]],[11,"data_range","","",279,[[["u64",15]],[["result",6],["option",4]]]],[11,"compressed_data","","",279,[[],[["result",6],["compresseddata",3]]]],[11,"name","","",279,[[],[["result",6],["str",15]]]],[11,"segment_name","","",279,[[],[["result",6],["option",4]]]],[11,"kind","","",279,[[],["sectionkind",4]]],[11,"relocations","","",279,[[],["machorelocationiterator",3]]],[11,"flags","","",279,[[],["sectionflags",4]]],[11,"index","object::read::pe","",292,[[],["sectionindex",3]]],[11,"address","","",292,[[],["u64",15]]],[11,"size","","",292,[[],["u64",15]]],[11,"align","","",292,[[],["u64",15]]],[11,"file_range","","",292,[[],["option",4]]],[11,"data","","",292,[[],["result",6]]],[11,"data_range","","",292,[[["u64",15]],[["result",6],["option",4]]]],[11,"compressed_data","","",292,[[],[["result",6],["compresseddata",3]]]],[11,"name","","",292,[[],[["result",6],["str",15]]]],[11,"segment_name","","",292,[[],[["result",6],["option",4]]]],[11,"kind","","",292,[[],["sectionkind",4]]],[11,"relocations","","",292,[[],["perelocationiterator",3]]],[11,"flags","","",292,[[],["sectionflags",4]]],[11,"kind","object::read","",232,[[],["comdatkind",4]]],[11,"symbol","","",232,[[],["symbolindex",3]]],[11,"name","","",232,[[],[["result",6],["str",15]]]],[11,"sections","","",232,[[],["comdatsectioniterator",3]]],[11,"kind","object::read::coff","",252,[[],["comdatkind",4]]],[11,"symbol","","",252,[[],["symbolindex",3]]],[11,"name","","",252,[[],[["result",6],["str",15]]]],[11,"sections","","",252,[[]]],[11,"kind","object::read::elf","",268,[[],["comdatkind",4]]],[11,"symbol","","",268,[[],["symbolindex",3]]],[11,"name","","",268,[[],[["result",6],["str",15]]]],[11,"sections","","",268,[[]]],[11,"kind","object::read::macho","",274,[[],["comdatkind",4]]],[11,"symbol","","",274,[[],["symbolindex",3]]],[11,"name","","",274,[[],[["result",6],["str",15]]]],[11,"sections","","",274,[[]]],[11,"kind","object::read::pe","",287,[[],["comdatkind",4]]],[11,"symbol","","",287,[[],["symbolindex",3]]],[11,"name","","",287,[[],[["result",6],["str",15]]]],[11,"sections","","",287,[[]]],[11,"symbols","object::read","",234,[[]]],[11,"symbol_by_index","","",234,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::coff","",247,[[]]],[11,"symbol_by_index","","",247,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::elf","",261,[[]]],[11,"symbol_by_index","","",261,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::macho","",281,[[]]],[11,"symbol_by_index","","",281,[[["symbolindex",3]],["result",6]]],[11,"index","object::read","",236,[[],["symbolindex",3]]],[11,"name","","",236,[[],[["result",6],["str",15]]]],[11,"address","","",236,[[],["u64",15]]],[11,"size","","",236,[[],["u64",15]]],[11,"kind","","",236,[[],["symbolkind",4]]],[11,"section","","",236,[[],["symbolsection",4]]],[11,"is_undefined","","",236,[[],["bool",15]]],[11,"is_definition","","",236,[[],["bool",15]]],[11,"is_common","","",236,[[],["bool",15]]],[11,"is_weak","","",236,[[],["bool",15]]],[11,"scope","","",236,[[],["symbolscope",4]]],[11,"is_global","","",236,[[],["bool",15]]],[11,"is_local","","",236,[[],["bool",15]]],[11,"flags","","",236,[[],[["sectionindex",3],["symbolflags",4]]]],[11,"index","object::read::coff","",249,[[],["symbolindex",3]]],[11,"name","","",249,[[],[["str",15],["result",6]]]],[11,"address","","",249,[[],["u64",15]]],[11,"size","","",249,[[],["u64",15]]],[11,"kind","","",249,[[],["symbolkind",4]]],[11,"section","","",249,[[],["symbolsection",4]]],[11,"is_undefined","","",249,[[],["bool",15]]],[11,"is_definition","","",249,[[],["bool",15]]],[11,"is_common","","",249,[[],["bool",15]]],[11,"is_weak","","",249,[[],["bool",15]]],[11,"scope","","",249,[[],["symbolscope",4]]],[11,"is_global","","",249,[[],["bool",15]]],[11,"is_local","","",249,[[],["bool",15]]],[11,"flags","","",249,[[],[["sectionindex",3],["symbolflags",4]]]],[11,"index","object::read::elf","",263,[[],["symbolindex",3]]],[11,"name","","",263,[[],[["str",15],["result",6]]]],[11,"address","","",263,[[],["u64",15]]],[11,"size","","",263,[[],["u64",15]]],[11,"kind","","",263,[[],["symbolkind",4]]],[11,"section","","",263,[[],["symbolsection",4]]],[11,"is_undefined","","",263,[[],["bool",15]]],[11,"is_definition","","",263,[[],["bool",15]]],[11,"is_common","","",263,[[],["bool",15]]],[11,"is_weak","","",263,[[],["bool",15]]],[11,"scope","","",263,[[],["symbolscope",4]]],[11,"is_global","","",263,[[],["bool",15]]],[11,"is_local","","",263,[[],["bool",15]]],[11,"flags","","",263,[[],[["sectionindex",3],["symbolflags",4]]]],[11,"index","object::read::macho","",283,[[],["symbolindex",3]]],[11,"name","","",283,[[],[["result",6],["str",15]]]],[11,"address","","",283,[[],["u64",15]]],[11,"size","","",283,[[],["u64",15]]],[11,"kind","","",283,[[],["symbolkind",4]]],[11,"section","","",283,[[],["symbolsection",4]]],[11,"is_undefined","","",283,[[],["bool",15]]],[11,"is_definition","","",283,[[],["bool",15]]],[11,"is_common","","",283,[[],["bool",15]]],[11,"is_weak","","",283,[[],["bool",15]]],[11,"scope","","",283,[[],["symbolscope",4]]],[11,"is_global","","",283,[[],["bool",15]]],[11,"is_local","","",283,[[],["bool",15]]],[11,"flags","","",283,[[],[["sectionindex",3],["symbolflags",4]]]],[11,"address","object::read","",41,[[],["u64",15]]],[11,"address","","",43,[[],["u64",15]]],[11,"from","object::elf","",63,[[["rel32",3]]]],[11,"from","","",65,[[["rel64",3]]]],[11,"fmt","object","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","object::endian","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","object::pod","",8,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::archive","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::coff","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::elf","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::macho","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::pe","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","object::archive","",50,[[["formatter",3]],["result",6]]],[11,"fmt","object::elf","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","object::macho","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","object::pe","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",295,[[["formatter",3]],["result",6]]],[11,"eq","object","",201,[[["architecture",4]],["bool",15]]],[11,"eq","","",202,[[["addresssize",4]],["bool",15]]],[11,"eq","","",203,[[["binaryformat",4]],["bool",15]]],[11,"eq","","",204,[[["sectionkind",4]],["bool",15]]],[11,"ne","","",204,[[["sectionkind",4]],["bool",15]]],[11,"eq","","",205,[[["comdatkind",4]],["bool",15]]],[11,"eq","","",206,[[["symbolkind",4]],["bool",15]]],[11,"eq","","",207,[[["symbolscope",4]],["bool",15]]],[11,"eq","","",208,[[["relocationkind",4]],["bool",15]]],[11,"ne","","",208,[[["relocationkind",4]],["bool",15]]],[11,"eq","","",210,[[["relocationencoding",4]],["bool",15]]],[11,"eq","","",211,[[["fileflags",4]],["bool",15]]],[11,"ne","","",211,[[["fileflags",4]],["bool",15]]],[11,"eq","","",215,[[["sectionflags",4]],["bool",15]]],[11,"ne","","",215,[[["sectionflags",4]],["bool",15]]],[11,"eq","","",219,[[["symbolflags",4]],["bool",15]]],[11,"ne","","",219,[[["symbolflags",4]],["bool",15]]],[11,"eq","object::endian","",1,[[["endianness",4]],["bool",15]]],[11,"eq","","",223,[[["littleendian",3]],["bool",15]]],[11,"eq","","",224,[[["bigendian",3]],["bool",15]]],[11,"eq","","",2,[[["u16bytes",3]],["bool",15]]],[11,"ne","","",2,[[["u16bytes",3]],["bool",15]]],[11,"eq","","",3,[[["u32bytes",3]],["bool",15]]],[11,"ne","","",3,[[["u32bytes",3]],["bool",15]]],[11,"eq","","",4,[[["u64bytes",3]],["bool",15]]],[11,"ne","","",4,[[["u64bytes",3]],["bool",15]]],[11,"eq","","",5,[[["i16bytes",3]],["bool",15]]],[11,"ne","","",5,[[["i16bytes",3]],["bool",15]]],[11,"eq","","",6,[[["i32bytes",3]],["bool",15]]],[11,"ne","","",6,[[["i32bytes",3]],["bool",15]]],[11,"eq","","",7,[[["i64bytes",3]],["bool",15]]],[11,"ne","","",7,[[["i64bytes",3]],["bool",15]]],[11,"eq","object::pod","",8,[[["bytes",3]],["bool",15]]],[11,"ne","","",8,[[["bytes",3]],["bool",15]]],[11,"eq","object::read::archive","",10,[[["archivekind",4]],["bool",15]]],[11,"eq","object::read","",295,[[["error",3]],["bool",15]]],[11,"ne","","",295,[[["error",3]],["bool",15]]],[11,"eq","","",36,[[["sectionindex",3]],["bool",15]]],[11,"ne","","",36,[[["sectionindex",3]],["bool",15]]],[11,"eq","","",37,[[["symbolindex",3]],["bool",15]]],[11,"ne","","",37,[[["symbolindex",3]],["bool",15]]],[11,"eq","","",38,[[["symbolsection",4]],["bool",15]]],[11,"ne","","",38,[[["symbolsection",4]],["bool",15]]],[11,"eq","","",41,[[["symbolmapname",3]],["bool",15]]],[11,"ne","","",41,[[["symbolmapname",3]],["bool",15]]],[11,"eq","","",43,[[["objectmapentry",3]],["bool",15]]],[11,"ne","","",43,[[["objectmapentry",3]],["bool",15]]],[11,"eq","","",44,[[["import",3]],["bool",15]]],[11,"ne","","",44,[[["import",3]],["bool",15]]],[11,"eq","","",45,[[["export",3]],["bool",15]]],[11,"ne","","",45,[[["export",3]],["bool",15]]],[11,"eq","","",46,[[["relocationtarget",4]],["bool",15]]],[11,"ne","","",46,[[["relocationtarget",4]],["bool",15]]],[11,"eq","","",48,[[["compresseddata",3]],["bool",15]]],[11,"ne","","",48,[[["compresseddata",3]],["bool",15]]],[11,"eq","","",49,[[["compressionformat",4]],["bool",15]]],[11,"cmp","object::endian","",2,[[["u16bytes",3]],["ordering",4]]],[11,"cmp","","",3,[[["u32bytes",3]],["ordering",4]]],[11,"cmp","","",4,[[["u64bytes",3]],["ordering",4]]],[11,"cmp","","",5,[[["i16bytes",3]],["ordering",4]]],[11,"cmp","","",6,[[["i32bytes",3]],["ordering",4]]],[11,"cmp","","",7,[[["i64bytes",3]],["ordering",4]]],[11,"partial_cmp","","",2,[[["u16bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["u16bytes",3]],["bool",15]]],[11,"le","","",2,[[["u16bytes",3]],["bool",15]]],[11,"gt","","",2,[[["u16bytes",3]],["bool",15]]],[11,"ge","","",2,[[["u16bytes",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["u32bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["u32bytes",3]],["bool",15]]],[11,"le","","",3,[[["u32bytes",3]],["bool",15]]],[11,"gt","","",3,[[["u32bytes",3]],["bool",15]]],[11,"ge","","",3,[[["u32bytes",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["u64bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["u64bytes",3]],["bool",15]]],[11,"le","","",4,[[["u64bytes",3]],["bool",15]]],[11,"gt","","",4,[[["u64bytes",3]],["bool",15]]],[11,"ge","","",4,[[["u64bytes",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["i16bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["i16bytes",3]],["bool",15]]],[11,"le","","",5,[[["i16bytes",3]],["bool",15]]],[11,"gt","","",5,[[["i16bytes",3]],["bool",15]]],[11,"ge","","",5,[[["i16bytes",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["i32bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["i32bytes",3]],["bool",15]]],[11,"le","","",6,[[["i32bytes",3]],["bool",15]]],[11,"gt","","",6,[[["i32bytes",3]],["bool",15]]],[11,"ge","","",6,[[["i32bytes",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["i64bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["i64bytes",3]],["bool",15]]],[11,"le","","",7,[[["i64bytes",3]],["bool",15]]],[11,"gt","","",7,[[["i64bytes",3]],["bool",15]]],[11,"ge","","",7,[[["i64bytes",3]],["bool",15]]],[11,"hash","object","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","","",203,[[]]],[11,"hash","object::endian","",1,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","object::read::archive","",10,[[]]],[11,"hash","object::read","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"next","","",227,[[],["option",4]]],[11,"next","","",229,[[],["option",4]]],[11,"next","","",231,[[],["option",4]]],[11,"next","","",233,[[],["option",4]]],[11,"next","","",235,[[],["option",4]]],[11,"next","","",237,[[],["option",4]]],[11,"next","","",238,[[],["option",4]]],[11,"next","object::read::archive","",239,[[],["option",4]]],[11,"next","object::read::coff","",242,[[],["option",4]]],[11,"next","","",244,[[],["option",4]]],[11,"next","","",248,[[],["option",4]]],[11,"next","","",250,[[],["option",4]]],[11,"next","","",251,[[],["option",4]]],[11,"next","","",253,[[],["option",4]]],[11,"next","object::read::elf","",255,[[],["option",4]]],[11,"next","","",258,[[],["option",4]]],[11,"next","","",262,[[],["option",4]]],[11,"next","","",265,[[],["option",4]]],[11,"next","","",266,[[],["option",4]]],[11,"next","","",267,[[],["option",4]]],[11,"next","","",269,[[],["option",4]]],[11,"next","object::read::macho","",273,[[],["option",4]]],[11,"next","","",275,[[],["option",4]]],[11,"next","","",276,[[],["option",4]]],[11,"next","","",278,[[],["option",4]]],[11,"next","","",282,[[],["option",4]]],[11,"next","","",284,[[],["option",4]]],[11,"next","object::read::pe","",286,[[],["option",4]]],[11,"next","","",288,[[],["option",4]]],[11,"next","","",289,[[],["option",4]]],[11,"next","","",291,[[],["option",4]]],[11,"next","","",293,[[],["option",4]]],[11,"next","object::read","",294,[[],["option",4]]],[11,"clone","object","",201,[[],["architecture",4]]],[11,"clone","","",202,[[],["addresssize",4]]],[11,"clone","","",203,[[],["binaryformat",4]]],[11,"clone","","",204,[[],["sectionkind",4]]],[11,"clone","","",205,[[],["comdatkind",4]]],[11,"clone","","",206,[[],["symbolkind",4]]],[11,"clone","","",207,[[],["symbolscope",4]]],[11,"clone","","",208,[[],["relocationkind",4]]],[11,"clone","","",210,[[],["relocationencoding",4]]],[11,"clone","","",211,[[],["fileflags",4]]],[11,"clone","","",215,[[],["sectionflags",4]]],[11,"clone","","",219,[[],["symbolflags",4]]],[11,"clone","object::endian","",1,[[],["endianness",4]]],[11,"clone","","",223,[[],["littleendian",3]]],[11,"clone","","",224,[[],["bigendian",3]]],[11,"clone","","",2,[[],["u16bytes",3]]],[11,"clone","","",3,[[],["u32bytes",3]]],[11,"clone","","",4,[[],["u64bytes",3]]],[11,"clone","","",5,[[],["i16bytes",3]]],[11,"clone","","",6,[[],["i32bytes",3]]],[11,"clone","","",7,[[],["i64bytes",3]]],[11,"clone","object::pod","",8,[[],["bytes",3]]],[11,"clone","object::read","",225,[[],["stringtable",3]]],[11,"clone","object::read::archive","",10,[[],["archivekind",4]]],[11,"clone","object::read::coff","",241,[[],["sectiontable",3]]],[11,"clone","","",247,[[],["coffsymboltable",3]]],[11,"clone","","",249,[[],["coffsymbol",3]]],[11,"clone","object::read::elf","",257,[[],["sectiontable",3]]],[11,"clone","","",260,[[],["symboltable",3]]],[11,"clone","","",261,[[],["elfsymboltable",3]]],[11,"clone","","",263,[[],["elfsymbol",3]]],[11,"clone","object::read::macho","",280,[[],["symboltable",3]]],[11,"clone","","",281,[[],["machosymboltable",3]]],[11,"clone","","",283,[[],["machosymbol",3]]],[11,"clone","object::read","",295,[[],["error",3]]],[11,"clone","","",36,[[],["sectionindex",3]]],[11,"clone","","",37,[[],["symbolindex",3]]],[11,"clone","","",38,[[],["symbolsection",4]]],[11,"clone","","",40,[[],["symbolmap",3]]],[11,"clone","","",41,[[],["symbolmapname",3]]],[11,"clone","","",42,[[],["objectmap",3]]],[11,"clone","","",43,[[],["objectmapentry",3]]],[11,"clone","","",44,[[],["import",3]]],[11,"clone","","",45,[[],["export",3]]],[11,"clone","","",46,[[],["relocationtarget",4]]],[11,"clone","","",48,[[],["compresseddata",3]]],[11,"clone","","",49,[[],["compressionformat",4]]],[11,"clone","object::archive","",50,[[],["header",3]]],[11,"clone","object::elf","",51,[[],["fileheader32",3]]],[11,"clone","","",52,[[],["fileheader64",3]]],[11,"clone","","",53,[[],["ident",3]]],[11,"clone","","",54,[[],["sectionheader32",3]]],[11,"clone","","",55,[[],["sectionheader64",3]]],[11,"clone","","",56,[[],["compressionheader32",3]]],[11,"clone","","",57,[[],["compressionheader64",3]]],[11,"clone","","",58,[[],["sym32",3]]],[11,"clone","","",59,[[],["sym64",3]]],[11,"clone","","",60,[[],["syminfo32",3]]],[11,"clone","","",61,[[],["syminfo64",3]]],[11,"clone","","",62,[[],["rel32",3]]],[11,"clone","","",63,[[],["rela32",3]]],[11,"clone","","",64,[[],["rel64",3]]],[11,"clone","","",65,[[],["rela64",3]]],[11,"clone","","",66,[[],["programheader32",3]]],[11,"clone","","",67,[[],["programheader64",3]]],[11,"clone","","",68,[[],["dyn32",3]]],[11,"clone","","",69,[[],["dyn64",3]]],[11,"clone","","",70,[[],["noteheader32",3]]],[11,"clone","","",71,[[],["noteheader64",3]]],[11,"clone","object::macho","",72,[[],["fatheader",3]]],[11,"clone","","",73,[[],["fatarch32",3]]],[11,"clone","","",74,[[],["fatarch64",3]]],[11,"clone","","",75,[[],["machheader32",3]]],[11,"clone","","",76,[[],["machheader64",3]]],[11,"clone","","",77,[[],["loadcommand",3]]],[11,"clone","","",78,[[],["lcstr",3]]],[11,"clone","","",79,[[],["segmentcommand32",3]]],[11,"clone","","",80,[[],["segmentcommand64",3]]],[11,"clone","","",81,[[],["section32",3]]],[11,"clone","","",82,[[],["section64",3]]],[11,"clone","","",83,[[],["fvmlib",3]]],[11,"clone","","",84,[[],["fvmlibcommand",3]]],[11,"clone","","",85,[[],["dylib",3]]],[11,"clone","","",86,[[],["dylibcommand",3]]],[11,"clone","","",87,[[],["subframeworkcommand",3]]],[11,"clone","","",88,[[],["subclientcommand",3]]],[11,"clone","","",89,[[],["subumbrellacommand",3]]],[11,"clone","","",90,[[],["sublibrarycommand",3]]],[11,"clone","","",91,[[],["prebounddylibcommand",3]]],[11,"clone","","",92,[[],["dylinkercommand",3]]],[11,"clone","","",93,[[],["threadcommand",3]]],[11,"clone","","",94,[[],["routinescommand",3]]],[11,"clone","","",95,[[],["routinescommand_64",3]]],[11,"clone","","",96,[[],["symtabcommand",3]]],[11,"clone","","",97,[[],["dysymtabcommand",3]]],[11,"clone","","",98,[[],["dylibtableofcontents",3]]],[11,"clone","","",99,[[],["dylibmodule32",3]]],[11,"clone","","",100,[[],["dylibmodule64",3]]],[11,"clone","","",101,[[],["dylibreference",3]]],[11,"clone","","",102,[[],["twolevelhintscommand",3]]],[11,"clone","","",103,[[],["twolevelhint",3]]],[11,"clone","","",104,[[],["prebindcksumcommand",3]]],[11,"clone","","",105,[[],["uuidcommand",3]]],[11,"clone","","",106,[[],["rpathcommand",3]]],[11,"clone","","",107,[[],["linkeditdatacommand",3]]],[11,"clone","","",108,[[],["encryptioninfocommand",3]]],[11,"clone","","",109,[[],["encryptioninfocommand64",3]]],[11,"clone","","",110,[[],["versionmincommand",3]]],[11,"clone","","",111,[[],["buildversioncommand",3]]],[11,"clone","","",112,[[],["buildtoolversion",3]]],[11,"clone","","",113,[[],["dyldinfocommand",3]]],[11,"clone","","",114,[[],["linkeroptioncommand",3]]],[11,"clone","","",115,[[],["symsegcommand",3]]],[11,"clone","","",116,[[],["identcommand",3]]],[11,"clone","","",117,[[],["fvmfilecommand",3]]],[11,"clone","","",118,[[],["entrypointcommand",3]]],[11,"clone","","",119,[[],["sourceversioncommand",3]]],[11,"clone","","",120,[[],["dataincodeentry",3]]],[11,"clone","","",121,[[],["notecommand",3]]],[11,"clone","","",122,[[],["nlist32",3]]],[11,"clone","","",123,[[],["nlist64",3]]],[11,"clone","","",124,[[],["relocation",3]]],[11,"clone","","",125,[[],["relocationinfo",3]]],[11,"clone","","",126,[[],["scatteredrelocationinfo",3]]],[11,"clone","object::pe","",127,[[],["imagedosheader",3]]],[11,"clone","","",128,[[],["imageos2header",3]]],[11,"clone","","",129,[[],["imagevxdheader",3]]],[11,"clone","","",130,[[],["imagefileheader",3]]],[11,"clone","","",131,[[],["imagedatadirectory",3]]],[11,"clone","","",132,[[],["imageoptionalheader32",3]]],[11,"clone","","",133,[[],["imageromoptionalheader",3]]],[11,"clone","","",134,[[],["imageoptionalheader64",3]]],[11,"clone","","",135,[[],["imagentheaders64",3]]],[11,"clone","","",136,[[],["imagentheaders32",3]]],[11,"clone","","",137,[[],["imageromheaders",3]]],[11,"clone","","",138,[[],["guid",3]]],[11,"clone","","",139,[[],["anonobjectheader",3]]],[11,"clone","","",140,[[],["anonobjectheaderv2",3]]],[11,"clone","","",141,[[],["anonobjectheaderbigobj",3]]],[11,"clone","","",142,[[],["imagesectionheader",3]]],[11,"clone","","",143,[[],["imagesymbol",3]]],[11,"clone","","",144,[[],["imagesymbolbytes",3]]],[11,"clone","","",145,[[],["imagesymbolex",3]]],[11,"clone","","",146,[[],["imagesymbolexbytes",3]]],[11,"clone","","",147,[[],["imageauxsymboltokendef",3]]],[11,"clone","","",148,[[],["imageauxsymbolfunction",3]]],[11,"clone","","",149,[[],["imageauxsymbolfunctionbeginend",3]]],[11,"clone","","",150,[[],["imageauxsymbolweak",3]]],[11,"clone","","",151,[[],["imageauxsymbolsection",3]]],[11,"clone","","",152,[[],["imageauxsymbolcrc",3]]],[11,"clone","","",153,[[],["imagerelocation",3]]],[11,"clone","","",154,[[],["imagelinenumber",3]]],[11,"clone","","",155,[[],["imagebaserelocation",3]]],[11,"clone","","",156,[[],["imagearchivememberheader",3]]],[11,"clone","","",157,[[],["imageexportdirectory",3]]],[11,"clone","","",158,[[],["imageimportbyname",3]]],[11,"clone","","",159,[[],["imagetlsdirectory64",3]]],[11,"clone","","",160,[[],["imagetlsdirectory32",3]]],[11,"clone","","",161,[[],["imageimportdescriptor",3]]],[11,"clone","","",162,[[],["imageboundimportdescriptor",3]]],[11,"clone","","",163,[[],["imageboundforwarderref",3]]],[11,"clone","","",164,[[],["imagedelayloaddescriptor",3]]],[11,"clone","","",165,[[],["imageresourcedirectory",3]]],[11,"clone","","",166,[[],["imageresourcedirectoryentry",3]]],[11,"clone","","",167,[[],["imageresourcedirectorystring",3]]],[11,"clone","","",168,[[],["imageresourcedirstringu",3]]],[11,"clone","","",169,[[],["imageresourcedataentry",3]]],[11,"clone","","",170,[[],["imageloadconfigcodeintegrity",3]]],[11,"clone","","",171,[[],["imagedynamicrelocationtable",3]]],[11,"clone","","",172,[[],["imagedynamicrelocation32",3]]],[11,"clone","","",173,[[],["imagedynamicrelocation64",3]]],[11,"clone","","",174,[[],["imagedynamicrelocation32v2",3]]],[11,"clone","","",175,[[],["imagedynamicrelocation64v2",3]]],[11,"clone","","",176,[[],["imageprologuedynamicrelocationheader",3]]],[11,"clone","","",177,[[],["imageepiloguedynamicrelocationheader",3]]],[11,"clone","","",178,[[],["imageloadconfigdirectory32",3]]],[11,"clone","","",179,[[],["imageloadconfigdirectory64",3]]],[11,"clone","","",180,[[],["imagehotpatchinfo",3]]],[11,"clone","","",181,[[],["imagehotpatchbase",3]]],[11,"clone","","",182,[[],["imagehotpatchhashes",3]]],[11,"clone","","",183,[[],["imagearmruntimefunctionentry",3]]],[11,"clone","","",184,[[],["imagearm64runtimefunctionentry",3]]],[11,"clone","","",185,[[],["imagealpha64runtimefunctionentry",3]]],[11,"clone","","",186,[[],["imagealpharuntimefunctionentry",3]]],[11,"clone","","",187,[[],["imageruntimefunctionentry",3]]],[11,"clone","","",188,[[],["imageenclaveconfig32",3]]],[11,"clone","","",189,[[],["imageenclaveconfig64",3]]],[11,"clone","","",190,[[],["imageenclaveimport",3]]],[11,"clone","","",191,[[],["imagedebugdirectory",3]]],[11,"clone","","",192,[[],["imagecoffsymbolsheader",3]]],[11,"clone","","",193,[[],["imagedebugmisc",3]]],[11,"clone","","",194,[[],["imagefunctionentry",3]]],[11,"clone","","",195,[[],["imagefunctionentry64",3]]],[11,"clone","","",196,[[],["imageseparatedebugheader",3]]],[11,"clone","","",197,[[],["nonpageddebuginfo",3]]],[11,"clone","","",198,[[],["imagearchitectureentry",3]]],[11,"clone","","",199,[[],["importobjectheader",3]]],[11,"clone","","",200,[[],["imagecor20header",3]]],[11,"default","object::endian","",1,[[],["endianness",4]]],[11,"default","","",223,[[],["littleendian",3]]],[11,"default","","",224,[[],["bigendian",3]]],[11,"default","","",2,[[],["u16bytes",3]]],[11,"default","","",3,[[],["u32bytes",3]]],[11,"default","","",4,[[],["u64bytes",3]]],[11,"default","","",5,[[],["i16bytes",3]]],[11,"default","","",6,[[],["i32bytes",3]]],[11,"default","","",7,[[],["i64bytes",3]]],[11,"default","object::pod","",8,[[],["bytes",3]]],[11,"default","object::read","",225,[[],["stringtable",3]]],[11,"default","object::read::coff","",241,[[],["sectiontable",3]]],[11,"default","object::read::elf","",257,[[],["sectiontable",3]]],[11,"default","","",260,[[]]],[11,"default","object::read::macho","",280,[[]]],[11,"default","object::read::pe","",293,[[],["perelocationiterator",3]]],[11,"default","object::read","",40,[[],["symbolmap",3]]],[11,"default","","",42,[[],["objectmap",3]]],[11,"default","","",43,[[],["objectmapentry",3]]],[11,"default","object::elf","",56,[[],["compressionheader32",3]]],[11,"default","","",57,[[],["compressionheader64",3]]],[11,"address_size","object","The size of an address value for this architecture.",201,[[],[["option",4],["addresssize",4]]]],[11,"bytes","","The size in bytes of an address value.",202,[[],["u8",15]]],[11,"is_bss","","Return true if this section contains zerofill data.",204,[[],["bool",15]]],[11,"new","object::read","Interpret the given data as a string table.",225,[[["bytes",3]]]],[11,"get","","Return the string at the given offset.",225,[[["u32",15]],["result",4]]],[11,"parse","","Parse the raw file data.",226,[[],["result",6]]],[11,"format","","Return the file format.",226,[[],["binaryformat",4]]],[11,"parse","object::read::coff","Parse the raw COFF file data.",240,[[],["result",6]]],[11,"parse","object::pe","Read the DOS header.",130,[[["bytes",3]],["result",6]]],[11,"parse","object::read::coff","Parse the section table.",241,[[["imagefileheader",3],["bytes",3]],["result",6]]],[11,"iter","","Iterate over the section headers.",241,[[],[["iter",3],["imagesectionheader",3]]]],[11,"is_empty","","Return true if the section table is empty.",241,[[],["bool",15]]],[11,"len","","The number of section headers.",241,[[],["usize",15]]],[11,"section","","Return the section header at the given index.",241,[[["usize",15]],[["result",6],["imagesectionheader",3]]]],[11,"section_by_name","","Return the section header with the given name.",241,[[["stringtable",3]],["option",4]]],[11,"parse","","Read the symbol table.",246,[[["imagefileheader",3],["bytes",3]],["result",6]]],[11,"strings","","Return the string table used for the symbol names.",246,[[],["stringtable",3]]],[11,"is_empty","","Return true if the symbol table is empty.",246,[[],["bool",15]]],[11,"len","","The number of symbols.",246,[[],["usize",15]]],[11,"symbol","","Return the symbol table entry at the given index.",246,[[["usize",15]],[["result",6],["imagesymbol",3]]]],[11,"get","","Return the symbol table entry or auxiliary record at the …",246,[[["usize",15]],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map …",246,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[11,"name","object::pe","Parse a COFF symbol name.",143,[[["stringtable",3]],["result",6]]],[11,"address","","Return the symbol address.",143,[[["sectiontable",3],["u64",15]],[["result",6],["u64",15]]]],[11,"is_definition","","Return true if the symbol is a definition of a function …",143,[[],["bool",15]]],[11,"parse","object::read::elf","Parse the raw ELF file data.",254,[[],["result",6]]],[11,"parse","","Read the file header.",13,[[["bytes",3]],["result",6]]],[11,"is_supported","","Check that the ident field in the file header is a …",13,[[],["bool",15]]],[11,"is_class_32","","",13,[[],["bool",15]]],[11,"is_class_64","","",13,[[],["bool",15]]],[11,"is_little_endian","","",13,[[],["bool",15]]],[11,"is_big_endian","","",13,[[],["bool",15]]],[11,"endian","","",13,[[],["result",6]]],[11,"section_0","","Return the first section header, if present.",13,[[["bytes",3]],[["option",4],["result",6]]]],[11,"phnum","","Return the <code>e_phnum</code> field of the header. Handles extended …",13,[[["bytes",3]],[["usize",15],["result",6]]]],[11,"shnum","","Return the <code>e_shnum</code> field of the header. Handles extended …",13,[[["bytes",3]],[["usize",15],["result",6]]]],[11,"shstrndx","","Return the <code>e_shstrndx</code> field of the header. Handles …",13,[[["bytes",3]],[["result",6],["u32",15]]]],[11,"program_headers","","Return the slice of program headers.",13,[[["bytes",3]],["result",6]]],[11,"section_headers","","Return the slice of section headers.",13,[[["bytes",3]],["result",6]]],[11,"section_strings","","Return the string table for the section headers.",13,[[["bytes",3]],[["result",6],["stringtable",3]]]],[11,"sections","","Return the section table.",13,[[["bytes",3]],[["sectiontable",3],["result",6]]]],[11,"file_range","","Return the offset and size of the segment in the file.",14,[[]]],[11,"data","","Return the segment data.",14,[[["bytes",3]],[["result",4],["bytes",3]]]],[11,"data_as_array","","Return the segment data as a slice of the given type.",14,[[["bytes",3]],["result",4]]],[11,"data_range","","Return the segment data in the given virtual address range",14,[[["bytes",3],["u64",15]],[["result",4],["option",4]]]],[11,"dynamic","","Return entries in a dynamic segment.",14,[[["bytes",3]],[["result",6],["option",4]]]],[11,"notes","","Return a note iterator for the segment data.",14,[[["bytes",3]],[["option",4],["result",6]]]],[11,"new","","Create a new section table.",257,[[["stringtable",3]]]],[11,"iter","","Iterate over the section headers.",257,[[],["iter",3]]],[11,"is_empty","","Return true if the section table is empty.",257,[[],["bool",15]]],[11,"len","","The number of section headers.",257,[[],["usize",15]]],[11,"section","","Return the section header at the given index.",257,[[["usize",15]],["result",6]]],[11,"section_by_name","","Return the section header with the given name.",257,[[],["option",4]]],[11,"section_name","","Return the section name for the given section header.",257,[[],["result",6]]],[11,"symbols","","Return the symbol table of the given section type.",257,[[["u32",15],["bytes",3]],[["result",6],["symboltable",3]]]],[11,"symbol_table_by_index","","Return the symbol table at the given section index.",257,[[["usize",15],["bytes",3]],[["result",6],["symboltable",3]]]],[11,"relocation_sections","","Create a mapping from section index to associated …",257,[[["usize",15]],[["result",6],["relocationsections",3]]]],[11,"name","","Parse the section name from the string table.",15,[[["stringtable",3]],["result",6]]],[11,"file_range","","Return the offset and size of the section in the file.",15,[[],["option",4]]],[11,"data","","Return the section data.",15,[[["bytes",3]],[["result",4],["bytes",3]]]],[11,"data_as_array","","Return the section data as a slice of the given type.",15,[[["bytes",3]],["result",4]]],[11,"symbols","","Return the symbols in the section.",15,[[["usize",15],["bytes",3],["sectiontable",3]],[["option",4],["result",6]]]],[11,"rel","","Return the <code>Elf::Rel</code> entries in the section.",15,[[["bytes",3]],[["option",4],["result",6]]]],[11,"rela","","Return the <code>Elf::Rela</code> entries in the section.",15,[[["bytes",3]],[["result",6],["option",4]]]],[11,"relocation_symbols","","Return the symbol table for a relocation section.",15,[[["bytes",3],["sectiontable",3]],[["symboltable",3],["result",6]]]],[11,"notes","","Return a note iterator for the section data.",15,[[["bytes",3]],[["result",6],["option",4]]]],[11,"group","","Return the contents of a group section.",15,[[["bytes",3]],[["result",6],["option",4]]]],[11,"parse","","Parse the given symbol table section.",260,[[["usize",15],["bytes",3],["sectiontable",3]],[["result",6],["symboltable",3]]]],[11,"section","","Return the section index of this symbol table.",260,[[],["usize",15]]],[11,"strings","","Return the string table used for the symbol names.",260,[[],["stringtable",3]]],[11,"iter","","Iterate over the symbols.",260,[[],["iter",3]]],[11,"is_empty","","Return true if the symbol table is empty.",260,[[],["bool",15]]],[11,"len","","The number of symbols.",260,[[],["usize",15]]],[11,"symbol","","Return the symbol at the given index.",260,[[["usize",15]],["result",6]]],[11,"shndx","","Return the extended section index for the given symbol if …",260,[[["usize",15]],[["option",4],["u32",15]]]],[11,"symbol_name","","Return the symbol name for the given symbol.",260,[[],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map …",260,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[11,"name","","Parse the symbol name from the string table.",16,[[["stringtable",3]],["result",6]]],[11,"is_undefined","","Return true if the symbol is undefined.",16,[[],["bool",15]]],[11,"is_definition","","Return true if the symbol is a definition of a function …",16,[[],["bool",15]]],[11,"parse","","Create a new mapping using the section table.",264,[[["usize",15],["sectiontable",3]],["result",6]]],[11,"get","","Given a section index, return the section index of the …",264,[[["usize",15]],[["option",4],["usize",15]]]],[11,"next","","Returns the next note.",270,[[],[["option",4],["result",6]]]],[11,"n_type","","Return the <code>n_type</code> field of the <code>NoteHeader</code>.",271,[[],["u32",15]]],[11,"n_namesz","","Return the <code>n_namesz</code> field of the <code>NoteHeader</code>.",271,[[],["u32",15]]],[11,"n_descsz","","Return the <code>n_descsz</code> field of the <code>NoteHeader</code>.",271,[[],["u32",15]]],[11,"name","","Return the bytes for the name field following the …",271,[[]]],[11,"desc","","Return the bytes for the desc field following the …",271,[[]]],[11,"parse_arch32","object::macho","Attempt to parse a 32-bit fat header.",72,[[],["result",6]]],[11,"parse_arch64","","Attempt to parse a 64-bit fat header.",72,[[],["result",6]]],[11,"architecture","object::read::macho","",22,[[],["architecture",4]]],[11,"data","","",22,[[],["result",6]]],[11,"parse","","Parse the raw Mach-O file data.",272,[[],["result",6]]],[11,"parse","","Read the file header.",23,[[["bytes",3]],["result",6]]],[11,"is_supported","","",23,[[],["bool",15]]],[11,"endian","","",23,[[],["result",6]]],[11,"load_commands","","",23,[[["bytes",3]],[["macholoadcommanditerator",3],["result",6]]]],[11,"uuid","","Return the UUID from the <code>LC_UUID</code> load command, if one is …",23,[[["bytes",3]],[["option",4],["result",6]]]],[11,"symbols","object::macho","Return the symbol table that this command references.",96,[[["bytes",3]],[["symboltable",3],["result",6]]]],[11,"name","object::read::macho","Return the <code>segname</code> bytes up until the null terminator.",24,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",24,[[]]],[11,"data","","Get the segment data from the file data.",24,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"sections","","Get the array of sections from the data following the …",24,[[["bytes",3]],["result",6]]],[11,"name","","Return the <code>sectname</code> bytes up until the null terminator.",25,[[]]],[11,"segment_name","","Return the <code>segname</code> bytes up until the null terminator.",25,[[]]],[11,"file_range","","Return the offset and size of the section in the file.",25,[[],["option",4]]],[11,"data","","Return the section data.",25,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"relocations","","Return the relocation array.",25,[[["bytes",3]],["result",6]]],[11,"strings","","Return the string table used for the symbol names.",280,[[],["stringtable",3]]],[11,"iter","","Iterate over the symbols.",280,[[],["iter",3]]],[11,"is_empty","","Return true if the symbol table is empty.",280,[[],["bool",15]]],[11,"len","","The number of symbols.",280,[[],["usize",15]]],[11,"symbol","","Return the symbol at the given index.",280,[[["usize",15]],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map …",280,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object …",280,[[],["objectmap",3]]],[11,"name","","",26,[[["stringtable",3]],["result",6]]],[11,"is_definition","","Return true if the symbol is a definition of a function …",26,[[],["bool",15]]],[11,"library_ordinal","","Return the library ordinal.",26,[[],["u8",15]]],[11,"optional_header_magic","object::read::pe","Find the optional header and read the …",285,[[],[["result",6],["u16",15]]]],[11,"parse","","Parse the raw PE file data.",285,[[],["result",6]]],[11,"parse","object::pe","Read the DOS header.",127,[[["bytes",3]],["result",6]]],[11,"nt_headers","","Read the NT headers, including the data directories.",127,[[["bytes",3]],["result",6]]],[11,"parse","object::read::pe","Read the NT headers, including the data directories.",27,[[["imagedosheader",3],["bytes",3]],["result",6]]],[11,"sections","","Read the section table.",27,[[["bytes",3]],[["sectiontable",3],["result",6]]]],[11,"symbols","","Read the symbol table and string table.",27,[[["bytes",3]],[["symboltable",3],["result",6]]]],[11,"pe_data","object::pe","Return the data for a PE section.",142,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"pe_data_at","","Return the data at the given virtual address if this …",142,[[["u32",15],["bytes",3]],[["option",4],["bytes",3]]]],[11,"endianness","object::read","Get the endianness of the file.",29,[[],["endianness",4]]],[11,"symbol_map","","Construct a map from addresses to symbol names.",29,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object …",29,[[],["objectmap",3]]],[11,"mach_uuid","","The UUID from a Mach-O <code>LC_UUID</code> load command.",29,[[],[["option",4],["result",6]]]],[11,"build_id","","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.",29,[[],[["result",6],["option",4]]]],[11,"gnu_debuglink","","The filename and CRC from a <code>.gnu_debuglink</code> section.",29,[[],[["option",4],["result",6]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",31,[[],[["result",6],["cow",4]]]],[11,"section_index","","Returns the section index for the section containing this …",34,[[],[["option",4],["sectionindex",3]]]]],"p":[[8,"Endian"],[4,"Endianness"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"I16Bytes"],[3,"I32Bytes"],[3,"I64Bytes"],[3,"Bytes"],[8,"WritableBuffer"],[4,"ArchiveKind"],[3,"ArchiveFile"],[3,"ArchiveMember"],[8,"FileHeader"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rel"],[8,"Rela"],[8,"Dyn"],[8,"CompressionHeader"],[8,"NoteHeader"],[8,"FatArch"],[8,"MachHeader"],[8,"Segment"],[8,"Section"],[8,"Nlist"],[8,"ImageNtHeaders"],[8,"ImageOptionalHeader"],[8,"Object"],[8,"ObjectSegment"],[8,"ObjectSection"],[8,"ObjectComdat"],[8,"ObjectSymbolTable"],[8,"ObjectSymbol"],[4,"FileKind"],[3,"SectionIndex"],[3,"SymbolIndex"],[4,"SymbolSection"],[8,"SymbolMapEntry"],[3,"SymbolMap"],[3,"SymbolMapName"],[3,"ObjectMap"],[3,"ObjectMapEntry"],[3,"Import"],[3,"Export"],[4,"RelocationTarget"],[3,"Relocation"],[3,"CompressedData"],[4,"CompressionFormat"],[3,"Header"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Dyn32"],[3,"Dyn64"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"FatHeader"],[3,"FatArch32"],[3,"FatArch64"],[3,"MachHeader32"],[3,"MachHeader64"],[3,"LoadCommand"],[3,"LcStr"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Section32"],[3,"Section64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand"],[3,"RoutinesCommand_64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule32"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"BuildVersionCommand"],[3,"BuildToolVersion"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymSegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"NoteCommand"],[3,"Nlist32"],[3,"Nlist64"],[3,"Relocation"],[3,"RelocationInfo"],[3,"ScatteredRelocationInfo"],[3,"ImageDosHeader"],[3,"ImageOs2Header"],[3,"ImageVxdHeader"],[3,"ImageFileHeader"],[3,"ImageDataDirectory"],[3,"ImageOptionalHeader32"],[3,"ImageRomOptionalHeader"],[3,"ImageOptionalHeader64"],[3,"ImageNtHeaders64"],[3,"ImageNtHeaders32"],[3,"ImageRomHeaders"],[3,"Guid"],[3,"AnonObjectHeader"],[3,"AnonObjectHeaderV2"],[3,"AnonObjectHeaderBigobj"],[3,"ImageSectionHeader"],[3,"ImageSymbol"],[3,"ImageSymbolBytes"],[3,"ImageSymbolEx"],[3,"ImageSymbolExBytes"],[3,"ImageAuxSymbolTokenDef"],[3,"ImageAuxSymbolFunction"],[3,"ImageAuxSymbolFunctionBeginEnd"],[3,"ImageAuxSymbolWeak"],[3,"ImageAuxSymbolSection"],[3,"ImageAuxSymbolCrc"],[3,"ImageRelocation"],[3,"ImageLinenumber"],[3,"ImageBaseRelocation"],[3,"ImageArchiveMemberHeader"],[3,"ImageExportDirectory"],[3,"ImageImportByName"],[3,"ImageTlsDirectory64"],[3,"ImageTlsDirectory32"],[3,"ImageImportDescriptor"],[3,"ImageBoundImportDescriptor"],[3,"ImageBoundForwarderRef"],[3,"ImageDelayloadDescriptor"],[3,"ImageResourceDirectory"],[3,"ImageResourceDirectoryEntry"],[3,"ImageResourceDirectoryString"],[3,"ImageResourceDirStringU"],[3,"ImageResourceDataEntry"],[3,"ImageLoadConfigCodeIntegrity"],[3,"ImageDynamicRelocationTable"],[3,"ImageDynamicRelocation32"],[3,"ImageDynamicRelocation64"],[3,"ImageDynamicRelocation32V2"],[3,"ImageDynamicRelocation64V2"],[3,"ImagePrologueDynamicRelocationHeader"],[3,"ImageEpilogueDynamicRelocationHeader"],[3,"ImageLoadConfigDirectory32"],[3,"ImageLoadConfigDirectory64"],[3,"ImageHotPatchInfo"],[3,"ImageHotPatchBase"],[3,"ImageHotPatchHashes"],[3,"ImageArmRuntimeFunctionEntry"],[3,"ImageArm64RuntimeFunctionEntry"],[3,"ImageAlpha64RuntimeFunctionEntry"],[3,"ImageAlphaRuntimeFunctionEntry"],[3,"ImageRuntimeFunctionEntry"],[3,"ImageEnclaveConfig32"],[3,"ImageEnclaveConfig64"],[3,"ImageEnclaveImport"],[3,"ImageDebugDirectory"],[3,"ImageCoffSymbolsHeader"],[3,"ImageDebugMisc"],[3,"ImageFunctionEntry"],[3,"ImageFunctionEntry64"],[3,"ImageSeparateDebugHeader"],[3,"NonPagedDebugInfo"],[3,"ImageArchitectureEntry"],[3,"ImportObjectHeader"],[3,"ImageCor20Header"],[4,"Architecture"],[4,"AddressSize"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"ComdatKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[13,"MachO"],[4,"RelocationEncoding"],[4,"FileFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SectionFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SymbolFlags"],[13,"Elf"],[13,"MachO"],[13,"CoffSection"],[3,"LittleEndian"],[3,"BigEndian"],[3,"StringTable"],[3,"File"],[3,"SegmentIterator"],[3,"Segment"],[3,"SectionIterator"],[3,"Section"],[3,"ComdatIterator"],[3,"Comdat"],[3,"ComdatSectionIterator"],[3,"SymbolTable"],[3,"SymbolIterator"],[3,"Symbol"],[3,"DynamicRelocationIterator"],[3,"SectionRelocationIterator"],[3,"ArchiveMemberIterator"],[3,"CoffFile"],[3,"SectionTable"],[3,"CoffSegmentIterator"],[3,"CoffSegment"],[3,"CoffSectionIterator"],[3,"CoffSection"],[3,"SymbolTable"],[3,"CoffSymbolTable"],[3,"CoffSymbolIterator"],[3,"CoffSymbol"],[3,"CoffRelocationIterator"],[3,"CoffComdatIterator"],[3,"CoffComdat"],[3,"CoffComdatSectionIterator"],[3,"ElfFile"],[3,"ElfSegmentIterator"],[3,"ElfSegment"],[3,"SectionTable"],[3,"ElfSectionIterator"],[3,"ElfSection"],[3,"SymbolTable"],[3,"ElfSymbolTable"],[3,"ElfSymbolIterator"],[3,"ElfSymbol"],[3,"RelocationSections"],[3,"ElfDynamicRelocationIterator"],[3,"ElfSectionRelocationIterator"],[3,"ElfComdatIterator"],[3,"ElfComdat"],[3,"ElfComdatSectionIterator"],[3,"NoteIterator"],[3,"Note"],[3,"MachOFile"],[3,"MachOComdatIterator"],[3,"MachOComdat"],[3,"MachOComdatSectionIterator"],[3,"MachOSegmentIterator"],[3,"MachOSegment"],[3,"MachOSectionIterator"],[3,"MachOSection"],[3,"SymbolTable"],[3,"MachOSymbolTable"],[3,"MachOSymbolIterator"],[3,"MachOSymbol"],[3,"MachORelocationIterator"],[3,"PeFile"],[3,"PeComdatIterator"],[3,"PeComdat"],[3,"PeComdatSectionIterator"],[3,"PeSegmentIterator"],[3,"PeSegment"],[3,"PeSectionIterator"],[3,"PeSection"],[3,"PeRelocationIterator"],[3,"NoDynamicRelocationIterator"],[3,"Error"]]},\
"ogg":{"doc":"Ogg container decoder and encoder","i":[[0,"reading","ogg","Reading logic",null,null],[4,"OggReadError","ogg::reading","Error that can be raised when decoding an Ogg transport.",null,null],[13,"NoCapturePatternFound","","The capture pattern for a new page was not found where …",0,null],[13,"InvalidStreamStructVer","","Invalid stream structure version, with the given one …",0,null],[13,"HashMismatch","","Mismatch of the hash value with (expected, calculated) …",0,null],[13,"ReadError","","I/O error occured.",0,null],[13,"InvalidData","","Some constraint required by the spec was not met.",0,null],[3,"OggPage","","Contains a fully parsed OGG page.",null,null],[3,"PageParser","","Helper struct for parsing pages",null,null],[11,"new","","Creates a new Page parser",1,[[],[["result",4],["oggreaderror",4]]]],[11,"parse_segments","","Parses the segments buffer, and returns the requested size…",1,[[["vec",3],["u8",15]],["usize",15]]],[11,"parse_packet_data","","Parses the packets data and verifies the checksum.",1,[[["vec",3],["u8",15]],[["oggreaderror",4],["result",4],["oggpage",3]]]],[3,"BasePacketReader","","Low level struct for reading from an Ogg stream.",null,null],[11,"new","","Constructs a new blank <code>BasePacketReader</code>.",2,[[]]],[11,"read_packet","","Extracts a packet from the cache, if the cache contains …",2,[[],[["option",4],["packet",3]]]],[11,"push_page","","Pushes a given Ogg page, updating the internal structures …",2,[[["oggpage",3]],[["result",4],["oggreaderror",4]]]],[11,"update_after_seek","","Reset the internal state after a seek",2,[[]]],[3,"PacketReader","","Reader for packets from an Ogg stream.",null,null],[11,"new","","Constructs a new <code>PacketReader</code> with a given <code>Read</code>.",3,[[],["packetreader",3]]],[11,"into_inner","","Returns the wrapped reader, consuming the <code>PacketReader</code>.",3,[[]]],[11,"read_packet","","Reads a packet, and returns it on success.",3,[[],[["result",4],["option",4],["oggreaderror",4]]]],[11,"read_packet_expected","","Reads a packet, and returns it on success.",3,[[],[["result",4],["packet",3],["oggreaderror",4]]]],[11,"seek_bytes","","Seeks the underlying reader",3,[[["seekfrom",4]],[["error",3],["result",4],["u64",15]]]],[11,"seek_absgp","","Seeks to absolute granule pos",3,[[["u32",15],["option",4],["u64",15]],[["bool",15],["result",4],["oggreaderror",4]]]],[11,"delete_unread_packets","","Resets the internal state by deleting all unread packets.",3,[[]]],[0,"writing","ogg","Writing logic",null,null],[3,"PacketWriter","ogg::writing","Writer for packets into an Ogg stream.",null,null],[4,"PacketWriteEndInfo","","Specifies whether to end something with the write of the …",null,null],[13,"NormalPacket","","No ends here, just a normal packet",4,null],[13,"EndPage","","Force-end the current page",4,null],[13,"EndStream","","End the whole logical stream.",4,null],[11,"new","","",5,[[]]],[11,"into_inner","","",5,[[]]],[11,"inner","","Access the interior writer",5,[[]]],[11,"inner_mut","","Access the interior writer mutably",5,[[]]],[11,"write_packet","","Write a packet",5,[[["u32",15],["u64",15],["box",3],["packetwriteendinfo",4]],[["result",4],["error",3]]]],[11,"get_current_offs","","",5,[[],[["error",3],["result",4],["u64",15]]]],[3,"Packet","ogg","Ogg packet representation.",null,null],[12,"data","","The data the <code>Packet</code> contains",6,null],[11,"first_in_page","","Returns whether the packet is the first one starting in …",6,[[],["bool",15]]],[11,"first_in_stream","","Returns whether the packet is the first one of the entire …",6,[[],["bool",15]]],[11,"last_in_page","","Returns whether the packet is the last one starting in …",6,[[],["bool",15]]],[11,"last_in_stream","","Returns whether the packet is the last one of the entire …",6,[[],["bool",15]]],[11,"absgp_page","","Returns the absolute granule position of the page the …",6,[[],["u64",15]]],[11,"stream_serial","","Returns the serial number that uniquely identifies the …",6,[[],["u32",15]]],[11,"from","ogg::reading","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","ogg::writing","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","ogg","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","ogg::reading","",0,[[["error",3]],["oggreaderror",4]]],[11,"clone","ogg::writing","",4,[[],["packetwriteendinfo",4]]],[11,"eq","","",4,[[["packetwriteendinfo",4]],["bool",15]]],[11,"fmt","ogg::reading","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["fmterror",3],["result",4]]]],[11,"description","","",0,[[],["str",15]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"OggReadError"],[3,"PageParser"],[3,"BasePacketReader"],[3,"PacketReader"],[4,"PacketWriteEndInfo"],[3,"PacketWriter"],[3,"Packet"],[3,"OggPage"]]},\
"once_cell":{"doc":"Overview<code>once_cell</code> provides two new cell-like types, …","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not …",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",0,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value.",0,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",1,[[],["lazy",3]]],[11,"into_value","","Consumes this <code>Lazy</code> returning the stored value.",1,[[["lazy",3]],["result",4]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",1,[[["lazy",3]]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without …",2,[[]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",2,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value. …",2,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",3,[[],["lazy",3]]],[11,"into_value","","Consumes this <code>Lazy</code> returning the stored value.",3,[[["lazy",3]],["result",4]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",3,[[["lazy",3]]]],[0,"race","once_cell","\\\"First one wins\\\" flavor of <code>OnceCell</code>.",null,null],[3,"OnceNonZeroUsize","once_cell::race","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",4,[[],["oncenonzerousize",3]]],[11,"get","","Gets the underlying value.",4,[[],[["option",4],["nonzerousize",3]]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",4,[[["nonzerousize",3]],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",4,[[],["nonzerousize",3]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",4,[[],[["nonzerousize",3],["result",4]]]],[3,"OnceBool","","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",5,[[],["oncebool",3]]],[11,"get","","Gets the underlying value.",5,[[],[["bool",15],["option",4]]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",5,[[["bool",15]],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",5,[[],["bool",15]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",5,[[],[["bool",15],["result",4]]]],[3,"OnceBox","","A thread-safe cell which can be written to only once.",null,null],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::race","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",6,[[]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",3,[[],["lazy",3]]],[11,"default","once_cell::race","",4,[[],["oncenonzerousize",3]]],[11,"default","","",5,[[],["oncebool",3]]],[11,"default","","",6,[[]]],[11,"eq","once_cell::unsync","",0,[[],["bool",15]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]],["bool",15]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::race","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty cell.",6,[[],["oncebox",3]]],[11,"get","","Gets a reference to the underlying value.",6,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",6,[[["box",3]],[["box",3],["result",4]]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",6,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",6,[[],["result",4]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceBox"]]},\
"os_str_bytes":{"doc":"This crate allows interacting with the data stored …","i":[[0,"raw","os_str_bytes","Functions that cannot be implemented outside of this …",null,null],[5,"ends_with","os_str_bytes::raw","Returns <code>true</code> if and only if the encoded bytes end with …",null,[[],["bool",15]]],[5,"starts_with","","Returns <code>true</code> if and only if the encoded bytes start with …",null,[[],["bool",15]]],[3,"EncodingError","os_str_bytes","The error that occurs when a byte sequence is not …",null,null],[8,"OsStrBytes","","A platform agnostic variant of <code>OsStrExt</code>.",null,null],[10,"from_bytes","","Converts a byte slice into an equivalent platform-native …",0,[[],[["result",4],["cow",4],["encodingerror",3]]]],[10,"to_bytes","","Converts a platform-native string into an equivalent byte …",0,[[],["cow",4]]],[8,"OsStringBytes","","A platform agnostic variant of <code>OsStringExt</code>.",null,null],[10,"from_bytes","","Copies a byte slice into an equivalent platform-native …",1,[[],[["encodingerror",3],["result",4]]]],[11,"from_cow","","A convenience method to call either <code>from_bytes</code> or <code>from_vec</code>…",1,[[["cow",4]],[["encodingerror",3],["result",4]]]],[10,"from_vec","","Converts a byte vector into an equivalent platform-native …",1,[[["vec",3],["u8",15]],[["encodingerror",3],["result",4]]]],[10,"into_vec","","Converts a platform-native string into an equivalent byte …",1,[[],[["vec",3],["u8",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"eq","","",2,[[["encodingerror",3]],["bool",15]]],[11,"ne","","",2,[[["encodingerror",3]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[8,"OsStrBytes"],[8,"OsStringBytes"],[3,"EncodingError"]]},\
"owo_colors":{"doc":"This crate provides <code>OwoColorize</code>, an extension trait for …","i":[[0,"colors","owo_colors","Color types for used for being generic over the color",null,null],[0,"xterm","owo_colors::colors","XTerm 256-bit colors. Not as widely supported as standard …",null,null],[3,"UserBlack","owo_colors::colors::xterm","",null,null],[3,"UserRed","","",null,null],[3,"UserGreen","","",null,null],[3,"UserYellow","","",null,null],[3,"UserBlue","","",null,null],[3,"UserMagenta","","",null,null],[3,"UserCyan","","",null,null],[3,"UserWhite","","",null,null],[3,"UserBrightBlack","","",null,null],[3,"UserBrightRed","","",null,null],[3,"UserBrightGreen","","",null,null],[3,"UserBrightYellow","","",null,null],[3,"UserBrightBlue","","",null,null],[3,"UserBrightMagenta","","",null,null],[3,"UserBrightCyan","","",null,null],[3,"UserBrightWhite","","",null,null],[3,"Black","","",null,null],[3,"StratosBlue","","",null,null],[3,"NavyBlue","","",null,null],[3,"MidnightBlue","","",null,null],[3,"DarkBlue","","",null,null],[3,"Blue","","",null,null],[3,"CamaroneGreen","","",null,null],[3,"BlueStone","","",null,null],[3,"OrientBlue","","",null,null],[3,"EndeavourBlue","","",null,null],[3,"ScienceBlue","","",null,null],[3,"BlueRibbon","","",null,null],[3,"JapaneseLaurel","","",null,null],[3,"DeepSeaGreen","","",null,null],[3,"Teal","","",null,null],[3,"DeepCerulean","","",null,null],[3,"LochmaraBlue","","",null,null],[3,"AzureRadiance","","",null,null],[3,"LightJapaneseLaurel","","",null,null],[3,"Jade","","",null,null],[3,"PersianGreen","","",null,null],[3,"BondiBlue","","",null,null],[3,"Cerulean","","",null,null],[3,"LightAzureRadiance","","",null,null],[3,"DarkGreen","","",null,null],[3,"Malachite","","",null,null],[3,"CaribbeanGreen","","",null,null],[3,"LightCaribbeanGreen","","",null,null],[3,"RobinEggBlue","","",null,null],[3,"Aqua","","",null,null],[3,"Green","","",null,null],[3,"DarkSpringGreen","","",null,null],[3,"SpringGreen","","",null,null],[3,"LightSpringGreen","","",null,null],[3,"BrightTurquoise","","",null,null],[3,"Cyan","","",null,null],[3,"Rosewood","","",null,null],[3,"PompadourMagenta","","",null,null],[3,"PigmentIndigo","","",null,null],[3,"DarkPurple","","",null,null],[3,"ElectricIndigo","","",null,null],[3,"ElectricPurple","","",null,null],[3,"VerdunGreen","","",null,null],[3,"ScorpionOlive","","",null,null],[3,"Lilac","","",null,null],[3,"ScampiIndigo","","",null,null],[3,"Indigo","","",null,null],[3,"DarkCornflowerBlue","","",null,null],[3,"DarkLimeade","","",null,null],[3,"GladeGreen","","",null,null],[3,"JuniperGreen","","",null,null],[3,"HippieBlue","","",null,null],[3,"HavelockBlue","","",null,null],[3,"CornflowerBlue","","",null,null],[3,"Limeade","","",null,null],[3,"FernGreen","","",null,null],[3,"SilverTree","","",null,null],[3,"Tradewind","","",null,null],[3,"ShakespeareBlue","","",null,null],[3,"DarkMalibuBlue","","",null,null],[3,"DarkBrightGreen","","",null,null],[3,"DarkPastelGreen","","",null,null],[3,"PastelGreen","","",null,null],[3,"DownyTeal","","",null,null],[3,"Viking","","",null,null],[3,"MalibuBlue","","",null,null],[3,"BrightGreen","","",null,null],[3,"DarkScreaminGreen","","",null,null],[3,"ScreaminGreen","","",null,null],[3,"DarkAquamarine","","",null,null],[3,"Aquamarine","","",null,null],[3,"LightAquamarine","","",null,null],[3,"Maroon","","",null,null],[3,"DarkFreshEggplant","","",null,null],[3,"LightFreshEggplant","","",null,null],[3,"Purple","","",null,null],[3,"ElectricViolet","","",null,null],[3,"LightElectricViolet","","",null,null],[3,"Brown","","",null,null],[3,"CopperRose","","",null,null],[3,"StrikemasterPurple","","",null,null],[3,"DelugePurple","","",null,null],[3,"DarkMediumPurple","","",null,null],[3,"DarkHeliotropePurple","","",null,null],[3,"Olive","","",null,null],[3,"ClayCreekOlive","","",null,null],[3,"DarkGray","","",null,null],[3,"WildBlueYonder","","",null,null],[3,"ChetwodeBlue","","",null,null],[3,"SlateBlue","","",null,null],[3,"LightLimeade","","",null,null],[3,"ChelseaCucumber","","",null,null],[3,"BayLeaf","","",null,null],[3,"GulfStream","","",null,null],[3,"PoloBlue","","",null,null],[3,"LightMalibuBlue","","",null,null],[3,"Pistachio","","",null,null],[3,"LightPastelGreen","","",null,null],[3,"DarkFeijoaGreen","","",null,null],[3,"VistaBlue","","",null,null],[3,"Bermuda","","",null,null],[3,"DarkAnakiwaBlue","","",null,null],[3,"ChartreuseGreen","","",null,null],[3,"LightScreaminGreen","","",null,null],[3,"DarkMintGreen","","",null,null],[3,"MintGreen","","",null,null],[3,"LighterAquamarine","","",null,null],[3,"AnakiwaBlue","","",null,null],[3,"BrightRed","","",null,null],[3,"DarkFlirt","","",null,null],[3,"Flirt","","",null,null],[3,"LightFlirt","","",null,null],[3,"DarkViolet","","",null,null],[3,"BrightElectricViolet","","",null,null],[3,"RoseofSharonOrange","","",null,null],[3,"MatrixPink","","",null,null],[3,"TapestryPink","","",null,null],[3,"FuchsiaPink","","",null,null],[3,"MediumPurple","","",null,null],[3,"Heliotrope","","",null,null],[3,"PirateGold","","",null,null],[3,"MuesliOrange","","",null,null],[3,"PharlapPink","","",null,null],[3,"Bouquet","","",null,null],[3,"Lavender","","",null,null],[3,"LightHeliotrope","","",null,null],[3,"BuddhaGold","","",null,null],[3,"OliveGreen","","",null,null],[3,"HillaryOlive","","",null,null],[3,"SilverChalice","","",null,null],[3,"WistfulLilac","","",null,null],[3,"MelroseLilac","","",null,null],[3,"RioGrandeGreen","","",null,null],[3,"ConiferGreen","","",null,null],[3,"Feijoa","","",null,null],[3,"PixieGreen","","",null,null],[3,"JungleMist","","",null,null],[3,"LightAnakiwaBlue","","",null,null],[3,"Lime","","",null,null],[3,"GreenYellow","","",null,null],[3,"LightMintGreen","","",null,null],[3,"Celadon","","",null,null],[3,"AeroBlue","","",null,null],[3,"FrenchPassLightBlue","","",null,null],[3,"GuardsmanRed","","",null,null],[3,"RazzmatazzCerise","","",null,null],[3,"MediumVioletRed","","",null,null],[3,"HollywoodCerise","","",null,null],[3,"DarkPurplePizzazz","","",null,null],[3,"BrighterElectricViolet","","",null,null],[3,"TennOrange","","",null,null],[3,"RomanOrange","","",null,null],[3,"CranberryPink","","",null,null],[3,"HopbushPink","","",null,null],[3,"Orchid","","",null,null],[3,"LighterHeliotrope","","",null,null],[3,"MangoTango","","",null,null],[3,"Copperfield","","",null,null],[3,"SeaPink","","",null,null],[3,"CanCanPink","","",null,null],[3,"LightOrchid","","",null,null],[3,"BrightHeliotrope","","",null,null],[3,"DarkCorn","","",null,null],[3,"DarkTachaOrange","","",null,null],[3,"TanBeige","","",null,null],[3,"ClamShell","","",null,null],[3,"ThistlePink","","",null,null],[3,"Mauve","","",null,null],[3,"Corn","","",null,null],[3,"TachaOrange","","",null,null],[3,"DecoOrange","","",null,null],[3,"PaleGoldenrod","","",null,null],[3,"AltoBeige","","",null,null],[3,"FogPink","","",null,null],[3,"ChartreuseYellow","","",null,null],[3,"Canary","","",null,null],[3,"Honeysuckle","","",null,null],[3,"ReefPaleYellow","","",null,null],[3,"SnowyMint","","",null,null],[3,"OysterBay","","",null,null],[3,"Red","","",null,null],[3,"DarkRose","","",null,null],[3,"Rose","","",null,null],[3,"LightHollywoodCerise","","",null,null],[3,"PurplePizzazz","","",null,null],[3,"Fuchsia","","",null,null],[3,"BlazeOrange","","",null,null],[3,"BittersweetOrange","","",null,null],[3,"WildWatermelon","","",null,null],[3,"DarkHotPink","","",null,null],[3,"HotPink","","",null,null],[3,"PinkFlamingo","","",null,null],[3,"FlushOrange","","",null,null],[3,"Salmon","","",null,null],[3,"VividTangerine","","",null,null],[3,"PinkSalmon","","",null,null],[3,"DarkLavenderRose","","",null,null],[3,"BlushPink","","",null,null],[3,"YellowSea","","",null,null],[3,"TexasRose","","",null,null],[3,"Tacao","","",null,null],[3,"Sundown","","",null,null],[3,"CottonCandy","","",null,null],[3,"LavenderRose","","",null,null],[3,"Gold","","",null,null],[3,"Dandelion","","",null,null],[3,"GrandisCaramel","","",null,null],[3,"Caramel","","",null,null],[3,"CosmosSalmon","","",null,null],[3,"PinkLace","","",null,null],[3,"Yellow","","",null,null],[3,"LaserLemon","","",null,null],[3,"DollyYellow","","",null,null],[3,"PortafinoYellow","","",null,null],[3,"Cumulus","","",null,null],[3,"White","","",null,null],[3,"DarkCodGray","","",null,null],[3,"CodGray","","",null,null],[3,"LightCodGray","","",null,null],[3,"DarkMineShaft","","",null,null],[3,"MineShaft","","",null,null],[3,"LightMineShaft","","",null,null],[3,"DarkTundora","","",null,null],[3,"Tundora","","",null,null],[3,"ScorpionGray","","",null,null],[3,"DarkDoveGray","","",null,null],[3,"DoveGray","","",null,null],[3,"Boulder","","",null,null],[3,"Gray","","",null,null],[3,"LightGray","","",null,null],[3,"DustyGray","","",null,null],[3,"NobelGray","","",null,null],[3,"DarkSilverChalice","","",null,null],[3,"LightSilverChalice","","",null,null],[3,"DarkSilver","","",null,null],[3,"Silver","","",null,null],[3,"DarkAlto","","",null,null],[3,"Alto","","",null,null],[3,"Mercury","","",null,null],[3,"GalleryGray","","",null,null],[3,"Black","owo_colors::colors","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Red","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Green","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Yellow","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Blue","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Magenta","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"Cyan","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"White","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightBlack","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightRed","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightGreen","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightYellow","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightBlue","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightMagenta","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightCyan","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[3,"BrightWhite","","A color for use with <code>OwoColorize</code>\'s <code>fg</code> and <code>bg</code> methods.",null,null],[0,"styles","owo_colors","Different display styles (strikethrough, bold, etc.)",null,null],[3,"BoldDisplay","owo_colors::styles","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",0,null],[3,"DimDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",1,null],[3,"ItalicDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",2,null],[3,"UnderlineDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",3,null],[3,"BlinkDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",4,null],[3,"BlinkFastDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",5,null],[3,"ReversedDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",6,null],[3,"HiddenDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",7,null],[3,"StrikeThroughDisplay","","Transparent wrapper around a type which implements all …",null,null],[12,"0","","",8,null],[0,"colored","owo_colors","Module for drop-in <code>colored</code> support to aid in porting code …",null,null],[4,"Color","owo_colors::colored","Available standard ANSI colors for use with …",null,null],[13,"Black","","",9,null],[13,"Red","","",9,null],[13,"Green","","",9,null],[13,"Yellow","","",9,null],[13,"Blue","","",9,null],[13,"Magenta","","",9,null],[13,"Cyan","","",9,null],[13,"White","","",9,null],[13,"BrightBlack","","",9,null],[13,"BrightRed","","",9,null],[13,"BrightGreen","","",9,null],[13,"BrightYellow","","",9,null],[13,"BrightBlue","","",9,null],[13,"BrightMagenta","","",9,null],[13,"BrightCyan","","",9,null],[13,"BrightWhite","","",9,null],[8,"Color","owo_colors","A trait for describing a type which can be used with …",null,null],[18,"ANSI_FG","","",10,null],[18,"ANSI_BG","","",10,null],[8,"DynColor","","A trait describing a runtime-configurable color which can …",null,null],[10,"fmt_ansi_fg","","",11,[[["formatter",3]],["result",6]]],[10,"fmt_ansi_bg","","",11,[[["formatter",3]],["result",6]]],[3,"FgColorDisplay","","Transparent wrapper around a type which implements all …",null,null],[3,"BgColorDisplay","","Transparent wrapper around a type which implements all …",null,null],[3,"FgDynColorDisplay","","Wrapper around a type which implements all the formatters …",null,null],[3,"BgDynColorDisplay","","Wrapper around a type which implements all the formatters …",null,null],[8,"OwoColorize","","Extension trait for colorizing a type which implements …",null,null],[11,"fg","","Set the foreground color generically",12,[[],[["color",8],["fgcolordisplay",3]]]],[11,"bg","","Set the background color generically.",12,[[],[["color",8],["bgcolordisplay",3]]]],[11,"black","","Change the foreground color to black",12,[[],[["black",3],["fgcolordisplay",3]]]],[11,"on_black","","Change the foreground color to black",12,[[],[["bgcolordisplay",3],["black",3]]]],[11,"red","","Change the foreground color to red",12,[[],[["red",3],["fgcolordisplay",3]]]],[11,"on_red","","Change the foreground color to red",12,[[],[["bgcolordisplay",3],["red",3]]]],[11,"green","","Change the foreground color to green",12,[[],[["fgcolordisplay",3],["green",3]]]],[11,"on_green","","Change the foreground color to green",12,[[],[["green",3],["bgcolordisplay",3]]]],[11,"yellow","","Change the foreground color to yellow",12,[[],[["fgcolordisplay",3],["yellow",3]]]],[11,"on_yellow","","Change the foreground color to yellow",12,[[],[["yellow",3],["bgcolordisplay",3]]]],[11,"blue","","Change the foreground color to blue",12,[[],[["fgcolordisplay",3],["blue",3]]]],[11,"on_blue","","Change the foreground color to blue",12,[[],[["bgcolordisplay",3],["blue",3]]]],[11,"magenta","","Change the foreground color to magenta",12,[[],[["magenta",3],["fgcolordisplay",3]]]],[11,"on_magenta","","Change the foreground color to magenta",12,[[],[["bgcolordisplay",3],["magenta",3]]]],[11,"purple","","Change the foreground color to purple",12,[[],[["magenta",3],["fgcolordisplay",3]]]],[11,"on_purple","","Change the foreground color to purple",12,[[],[["bgcolordisplay",3],["magenta",3]]]],[11,"cyan","","Change the foreground color to cyan",12,[[],[["cyan",3],["fgcolordisplay",3]]]],[11,"on_cyan","","Change the foreground color to cyan",12,[[],[["bgcolordisplay",3],["cyan",3]]]],[11,"white","","Change the foreground color to white",12,[[],[["fgcolordisplay",3],["white",3]]]],[11,"on_white","","Change the foreground color to white",12,[[],[["bgcolordisplay",3],["white",3]]]],[11,"bright_black","","Change the foreground color to bright black",12,[[],[["fgcolordisplay",3],["brightblack",3]]]],[11,"on_bright_black","","Change the foreground color to bright black",12,[[],[["brightblack",3],["bgcolordisplay",3]]]],[11,"bright_red","","Change the foreground color to bright red",12,[[],[["fgcolordisplay",3],["brightred",3]]]],[11,"on_bright_red","","Change the foreground color to bright red",12,[[],[["brightred",3],["bgcolordisplay",3]]]],[11,"bright_green","","Change the foreground color to bright green",12,[[],[["fgcolordisplay",3],["brightgreen",3]]]],[11,"on_bright_green","","Change the foreground color to bright green",12,[[],[["bgcolordisplay",3],["brightgreen",3]]]],[11,"bright_yellow","","Change the foreground color to bright yellow",12,[[],[["brightyellow",3],["fgcolordisplay",3]]]],[11,"on_bright_yellow","","Change the foreground color to bright yellow",12,[[],[["bgcolordisplay",3],["brightyellow",3]]]],[11,"bright_blue","","Change the foreground color to bright blue",12,[[],[["brightblue",3],["fgcolordisplay",3]]]],[11,"on_bright_blue","","Change the foreground color to bright blue",12,[[],[["bgcolordisplay",3],["brightblue",3]]]],[11,"bright_magenta","","Change the foreground color to bright magenta",12,[[],[["brightmagenta",3],["fgcolordisplay",3]]]],[11,"on_bright_magenta","","Change the foreground color to bright magenta",12,[[],[["bgcolordisplay",3],["brightmagenta",3]]]],[11,"bright_purple","","Change the foreground color to bright purple",12,[[],[["brightmagenta",3],["fgcolordisplay",3]]]],[11,"on_bright_purple","","Change the foreground color to bright purple",12,[[],[["bgcolordisplay",3],["brightmagenta",3]]]],[11,"bright_cyan","","Change the foreground color to bright cyan",12,[[],[["brightcyan",3],["fgcolordisplay",3]]]],[11,"on_bright_cyan","","Change the foreground color to bright cyan",12,[[],[["brightcyan",3],["bgcolordisplay",3]]]],[11,"bright_white","","Change the foreground color to bright white",12,[[],[["fgcolordisplay",3],["brightwhite",3]]]],[11,"on_bright_white","","Change the foreground color to bright white",12,[[],[["bgcolordisplay",3],["brightwhite",3]]]],[11,"bold","","Make the text bold",12,[[],["bolddisplay",3]]],[11,"dimmed","","Make the text dim",12,[[],["dimdisplay",3]]],[11,"italic","","Make the text italicized",12,[[],["italicdisplay",3]]],[11,"underline","","Make the text italicized",12,[[],["underlinedisplay",3]]],[11,"blink","","Make the text blink",12,[[],["blinkdisplay",3]]],[11,"blink_fast","","Make the text blink (but fast!)",12,[[],["blinkfastdisplay",3]]],[11,"reversed","","Swap the foreground and background colors",12,[[],["reverseddisplay",3]]],[11,"hidden","","Hide the text",12,[[],["hiddendisplay",3]]],[11,"strikethrough","","Cross out the text",12,[[],["strikethroughdisplay",3]]],[11,"color","","Set the foreground color at runtime. Only use if you do …",12,[[["dyncolor",8]],[["dyncolor",8],["fgdyncolordisplay",3]]]],[11,"on_color","","Set the background color at runtime. Only use if you do …",12,[[["dyncolor",8]],[["bgdyncolordisplay",3],["dyncolor",8]]]],[11,"truecolor","","Sets the foreground color to an RGB value.",12,[[["u8",15]],[["fgdyncolordisplay",3],["rgb",3]]]],[11,"on_truecolor","","Sets the background color to an RGB value.",12,[[["u8",15]],[["bgdyncolordisplay",3],["rgb",3]]]],[11,"style","","Apply a runtime-determined style",12,[[["style",3]],["styled",3]]],[4,"AnsiColors","","Available standard ANSI colors for use with …",null,null],[13,"Black","","",9,null],[13,"Red","","",9,null],[13,"Green","","",9,null],[13,"Yellow","","",9,null],[13,"Blue","","",9,null],[13,"Magenta","","",9,null],[13,"Cyan","","",9,null],[13,"White","","",9,null],[13,"BrightBlack","","",9,null],[13,"BrightRed","","",9,null],[13,"BrightGreen","","",9,null],[13,"BrightYellow","","",9,null],[13,"BrightBlue","","",9,null],[13,"BrightMagenta","","",9,null],[13,"BrightCyan","","",9,null],[13,"BrightWhite","","",9,null],[3,"Rgb","","Available RGB colors for use with <code>OwoColorize::color</code> or …",null,null],[12,"0","","",13,null],[12,"1","","",13,null],[12,"2","","",13,null],[4,"XtermColors","","Available Xterm colors for use with <code>OwoColorize::color</code> or …",null,null],[13,"UserBlack","","",14,null],[13,"UserRed","","",14,null],[13,"UserGreen","","",14,null],[13,"UserYellow","","",14,null],[13,"UserBlue","","",14,null],[13,"UserMagenta","","",14,null],[13,"UserCyan","","",14,null],[13,"UserWhite","","",14,null],[13,"UserBrightBlack","","",14,null],[13,"UserBrightRed","","",14,null],[13,"UserBrightGreen","","",14,null],[13,"UserBrightYellow","","",14,null],[13,"UserBrightBlue","","",14,null],[13,"UserBrightMagenta","","",14,null],[13,"UserBrightCyan","","",14,null],[13,"UserBrightWhite","","",14,null],[13,"Black","","",14,null],[13,"StratosBlue","","",14,null],[13,"NavyBlue","","",14,null],[13,"MidnightBlue","","",14,null],[13,"DarkBlue","","",14,null],[13,"Blue","","",14,null],[13,"CamaroneGreen","","",14,null],[13,"BlueStone","","",14,null],[13,"OrientBlue","","",14,null],[13,"EndeavourBlue","","",14,null],[13,"ScienceBlue","","",14,null],[13,"BlueRibbon","","",14,null],[13,"JapaneseLaurel","","",14,null],[13,"DeepSeaGreen","","",14,null],[13,"Teal","","",14,null],[13,"DeepCerulean","","",14,null],[13,"LochmaraBlue","","",14,null],[13,"AzureRadiance","","",14,null],[13,"LightJapaneseLaurel","","",14,null],[13,"Jade","","",14,null],[13,"PersianGreen","","",14,null],[13,"BondiBlue","","",14,null],[13,"Cerulean","","",14,null],[13,"LightAzureRadiance","","",14,null],[13,"DarkGreen","","",14,null],[13,"Malachite","","",14,null],[13,"CaribbeanGreen","","",14,null],[13,"LightCaribbeanGreen","","",14,null],[13,"RobinEggBlue","","",14,null],[13,"Aqua","","",14,null],[13,"Green","","",14,null],[13,"DarkSpringGreen","","",14,null],[13,"SpringGreen","","",14,null],[13,"LightSpringGreen","","",14,null],[13,"BrightTurquoise","","",14,null],[13,"Cyan","","",14,null],[13,"Rosewood","","",14,null],[13,"PompadourMagenta","","",14,null],[13,"PigmentIndigo","","",14,null],[13,"DarkPurple","","",14,null],[13,"ElectricIndigo","","",14,null],[13,"ElectricPurple","","",14,null],[13,"VerdunGreen","","",14,null],[13,"ScorpionOlive","","",14,null],[13,"Lilac","","",14,null],[13,"ScampiIndigo","","",14,null],[13,"Indigo","","",14,null],[13,"DarkCornflowerBlue","","",14,null],[13,"DarkLimeade","","",14,null],[13,"GladeGreen","","",14,null],[13,"JuniperGreen","","",14,null],[13,"HippieBlue","","",14,null],[13,"HavelockBlue","","",14,null],[13,"CornflowerBlue","","",14,null],[13,"Limeade","","",14,null],[13,"FernGreen","","",14,null],[13,"SilverTree","","",14,null],[13,"Tradewind","","",14,null],[13,"ShakespeareBlue","","",14,null],[13,"DarkMalibuBlue","","",14,null],[13,"DarkBrightGreen","","",14,null],[13,"DarkPastelGreen","","",14,null],[13,"PastelGreen","","",14,null],[13,"DownyTeal","","",14,null],[13,"Viking","","",14,null],[13,"MalibuBlue","","",14,null],[13,"BrightGreen","","",14,null],[13,"DarkScreaminGreen","","",14,null],[13,"ScreaminGreen","","",14,null],[13,"DarkAquamarine","","",14,null],[13,"Aquamarine","","",14,null],[13,"LightAquamarine","","",14,null],[13,"Maroon","","",14,null],[13,"DarkFreshEggplant","","",14,null],[13,"LightFreshEggplant","","",14,null],[13,"Purple","","",14,null],[13,"ElectricViolet","","",14,null],[13,"LightElectricViolet","","",14,null],[13,"Brown","","",14,null],[13,"CopperRose","","",14,null],[13,"StrikemasterPurple","","",14,null],[13,"DelugePurple","","",14,null],[13,"DarkMediumPurple","","",14,null],[13,"DarkHeliotropePurple","","",14,null],[13,"Olive","","",14,null],[13,"ClayCreekOlive","","",14,null],[13,"DarkGray","","",14,null],[13,"WildBlueYonder","","",14,null],[13,"ChetwodeBlue","","",14,null],[13,"SlateBlue","","",14,null],[13,"LightLimeade","","",14,null],[13,"ChelseaCucumber","","",14,null],[13,"BayLeaf","","",14,null],[13,"GulfStream","","",14,null],[13,"PoloBlue","","",14,null],[13,"LightMalibuBlue","","",14,null],[13,"Pistachio","","",14,null],[13,"LightPastelGreen","","",14,null],[13,"DarkFeijoaGreen","","",14,null],[13,"VistaBlue","","",14,null],[13,"Bermuda","","",14,null],[13,"DarkAnakiwaBlue","","",14,null],[13,"ChartreuseGreen","","",14,null],[13,"LightScreaminGreen","","",14,null],[13,"DarkMintGreen","","",14,null],[13,"MintGreen","","",14,null],[13,"LighterAquamarine","","",14,null],[13,"AnakiwaBlue","","",14,null],[13,"BrightRed","","",14,null],[13,"DarkFlirt","","",14,null],[13,"Flirt","","",14,null],[13,"LightFlirt","","",14,null],[13,"DarkViolet","","",14,null],[13,"BrightElectricViolet","","",14,null],[13,"RoseofSharonOrange","","",14,null],[13,"MatrixPink","","",14,null],[13,"TapestryPink","","",14,null],[13,"FuchsiaPink","","",14,null],[13,"MediumPurple","","",14,null],[13,"Heliotrope","","",14,null],[13,"PirateGold","","",14,null],[13,"MuesliOrange","","",14,null],[13,"PharlapPink","","",14,null],[13,"Bouquet","","",14,null],[13,"Lavender","","",14,null],[13,"LightHeliotrope","","",14,null],[13,"BuddhaGold","","",14,null],[13,"OliveGreen","","",14,null],[13,"HillaryOlive","","",14,null],[13,"SilverChalice","","",14,null],[13,"WistfulLilac","","",14,null],[13,"MelroseLilac","","",14,null],[13,"RioGrandeGreen","","",14,null],[13,"ConiferGreen","","",14,null],[13,"Feijoa","","",14,null],[13,"PixieGreen","","",14,null],[13,"JungleMist","","",14,null],[13,"LightAnakiwaBlue","","",14,null],[13,"Lime","","",14,null],[13,"GreenYellow","","",14,null],[13,"LightMintGreen","","",14,null],[13,"Celadon","","",14,null],[13,"AeroBlue","","",14,null],[13,"FrenchPassLightBlue","","",14,null],[13,"GuardsmanRed","","",14,null],[13,"RazzmatazzCerise","","",14,null],[13,"MediumVioletRed","","",14,null],[13,"HollywoodCerise","","",14,null],[13,"DarkPurplePizzazz","","",14,null],[13,"BrighterElectricViolet","","",14,null],[13,"TennOrange","","",14,null],[13,"RomanOrange","","",14,null],[13,"CranberryPink","","",14,null],[13,"HopbushPink","","",14,null],[13,"Orchid","","",14,null],[13,"LighterHeliotrope","","",14,null],[13,"MangoTango","","",14,null],[13,"Copperfield","","",14,null],[13,"SeaPink","","",14,null],[13,"CanCanPink","","",14,null],[13,"LightOrchid","","",14,null],[13,"BrightHeliotrope","","",14,null],[13,"DarkCorn","","",14,null],[13,"DarkTachaOrange","","",14,null],[13,"TanBeige","","",14,null],[13,"ClamShell","","",14,null],[13,"ThistlePink","","",14,null],[13,"Mauve","","",14,null],[13,"Corn","","",14,null],[13,"TachaOrange","","",14,null],[13,"DecoOrange","","",14,null],[13,"PaleGoldenrod","","",14,null],[13,"AltoBeige","","",14,null],[13,"FogPink","","",14,null],[13,"ChartreuseYellow","","",14,null],[13,"Canary","","",14,null],[13,"Honeysuckle","","",14,null],[13,"ReefPaleYellow","","",14,null],[13,"SnowyMint","","",14,null],[13,"OysterBay","","",14,null],[13,"Red","","",14,null],[13,"DarkRose","","",14,null],[13,"Rose","","",14,null],[13,"LightHollywoodCerise","","",14,null],[13,"PurplePizzazz","","",14,null],[13,"Fuchsia","","",14,null],[13,"BlazeOrange","","",14,null],[13,"BittersweetOrange","","",14,null],[13,"WildWatermelon","","",14,null],[13,"DarkHotPink","","",14,null],[13,"HotPink","","",14,null],[13,"PinkFlamingo","","",14,null],[13,"FlushOrange","","",14,null],[13,"Salmon","","",14,null],[13,"VividTangerine","","",14,null],[13,"PinkSalmon","","",14,null],[13,"DarkLavenderRose","","",14,null],[13,"BlushPink","","",14,null],[13,"YellowSea","","",14,null],[13,"TexasRose","","",14,null],[13,"Tacao","","",14,null],[13,"Sundown","","",14,null],[13,"CottonCandy","","",14,null],[13,"LavenderRose","","",14,null],[13,"Gold","","",14,null],[13,"Dandelion","","",14,null],[13,"GrandisCaramel","","",14,null],[13,"Caramel","","",14,null],[13,"CosmosSalmon","","",14,null],[13,"PinkLace","","",14,null],[13,"Yellow","","",14,null],[13,"LaserLemon","","",14,null],[13,"DollyYellow","","",14,null],[13,"PortafinoYellow","","",14,null],[13,"Cumulus","","",14,null],[13,"White","","",14,null],[13,"DarkCodGray","","",14,null],[13,"CodGray","","",14,null],[13,"LightCodGray","","",14,null],[13,"DarkMineShaft","","",14,null],[13,"MineShaft","","",14,null],[13,"LightMineShaft","","",14,null],[13,"DarkTundora","","",14,null],[13,"Tundora","","",14,null],[13,"ScorpionGray","","",14,null],[13,"DarkDoveGray","","",14,null],[13,"DoveGray","","",14,null],[13,"Boulder","","",14,null],[13,"Gray","","",14,null],[13,"LightGray","","",14,null],[13,"DustyGray","","",14,null],[13,"NobelGray","","",14,null],[13,"DarkSilverChalice","","",14,null],[13,"LightSilverChalice","","",14,null],[13,"DarkSilver","","",14,null],[13,"Silver","","",14,null],[13,"DarkAlto","","",14,null],[13,"Alto","","",14,null],[13,"Mercury","","",14,null],[13,"GalleryGray","","",14,null],[4,"DynColors","","An enum describing runtime-configurable colors which can …",null,null],[13,"Ansi","","",15,null],[13,"Xterm","","",15,null],[13,"Rgb","","",15,null],[3,"ParseColorError","","",null,null],[4,"Effect","","",null,null],[13,"Bold","","",16,null],[13,"Dimmed","","",16,null],[13,"Italic","","",16,null],[13,"Underline","","",16,null],[13,"Blink","","",16,null],[13,"BlinkFast","","",16,null],[13,"Reversed","","",16,null],[13,"Hidden","","",16,null],[13,"Strikethrough","","",16,null],[3,"Styled","","",null,null],[3,"Style","","",null,null],[5,"style","","Helper to create [<code>Style</code>]s more ergonomically",null,[[],["style",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","owo_colors::colored","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","owo_colors","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","owo_colors::colors::xterm","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"from","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"from","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"from","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"from","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"from","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"from","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"from","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"from","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"from","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"from","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"from","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","owo_colors","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","owo_colors::colors","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"from","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"from","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"from","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"from","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","owo_colors::styles","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","owo_colors","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"fmt_ansi_fg","","",15,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_bg","","",15,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_fg","owo_colors::colored","",9,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_bg","","",9,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_fg","owo_colors","",14,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_bg","","",14,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_fg","","",13,[[["formatter",3]],["result",6]]],[11,"fmt_ansi_bg","","",13,[[["formatter",3]],["result",6]]],[11,"from","owo_colors::colored","",9,[[["str",15]]]],[11,"fmt","owo_colors","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::colored","",9,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","owo_colors","",15,[[["dyncolors",4]],["bool",15]]],[11,"ne","","",15,[[["dyncolors",4]],["bool",15]]],[11,"eq","owo_colors::colored","",9,[[["ansicolors",4]],["bool",15]]],[11,"eq","owo_colors","",14,[[["xtermcolors",4]],["bool",15]]],[11,"eq","","",13,[[["rgb",3]],["bool",15]]],[11,"ne","","",13,[[["rgb",3]],["bool",15]]],[11,"from_str","","",15,[[["str",15]],["result",4]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","owo_colors::styles","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"clone","owo_colors","",15,[[],["dyncolors",4]]],[11,"clone","","",16,[[],["effect",4]]],[11,"clone","","",19,[[],["style",3]]],[11,"clone","owo_colors::colored","",9,[[],["ansicolors",4]]],[11,"clone","owo_colors","",14,[[],["xtermcolors",4]]],[11,"clone","","",13,[[],["rgb",3]]],[11,"default","","",19,[[],["style",3]]],[11,"new","","",19,[[]]],[11,"style","","",19,[[],["styled",3]]],[11,"fg","","Set the foreground color generically",19,[[]]],[11,"bg","","Set the background color generically.",19,[[]]],[11,"black","","Change the foreground color to black",19,[[]]],[11,"on_black","","Change the foreground color to black",19,[[]]],[11,"red","","Change the foreground color to red",19,[[]]],[11,"on_red","","Change the foreground color to red",19,[[]]],[11,"green","","Change the foreground color to green",19,[[]]],[11,"on_green","","Change the foreground color to green",19,[[]]],[11,"yellow","","Change the foreground color to yellow",19,[[]]],[11,"on_yellow","","Change the foreground color to yellow",19,[[]]],[11,"blue","","Change the foreground color to blue",19,[[]]],[11,"on_blue","","Change the foreground color to blue",19,[[]]],[11,"magenta","","Change the foreground color to magenta",19,[[]]],[11,"on_magenta","","Change the foreground color to magenta",19,[[]]],[11,"purple","","Change the foreground color to purple",19,[[]]],[11,"on_purple","","Change the foreground color to purple",19,[[]]],[11,"cyan","","Change the foreground color to cyan",19,[[]]],[11,"on_cyan","","Change the foreground color to cyan",19,[[]]],[11,"white","","Change the foreground color to white",19,[[]]],[11,"on_white","","Change the foreground color to white",19,[[]]],[11,"bright_black","","Change the foreground color to bright black",19,[[]]],[11,"on_bright_black","","Change the foreground color to bright black",19,[[]]],[11,"bright_red","","Change the foreground color to bright red",19,[[]]],[11,"on_bright_red","","Change the foreground color to bright red",19,[[]]],[11,"bright_green","","Change the foreground color to bright green",19,[[]]],[11,"on_bright_green","","Change the foreground color to bright green",19,[[]]],[11,"bright_yellow","","Change the foreground color to bright yellow",19,[[]]],[11,"on_bright_yellow","","Change the foreground color to bright yellow",19,[[]]],[11,"bright_blue","","Change the foreground color to bright blue",19,[[]]],[11,"on_bright_blue","","Change the foreground color to bright blue",19,[[]]],[11,"bright_magenta","","Change the foreground color to bright magenta",19,[[]]],[11,"on_bright_magenta","","Change the foreground color to bright magenta",19,[[]]],[11,"bright_purple","","Change the foreground color to bright purple",19,[[]]],[11,"on_bright_purple","","Change the foreground color to bright purple",19,[[]]],[11,"bright_cyan","","Change the foreground color to bright cyan",19,[[]]],[11,"on_bright_cyan","","Change the foreground color to bright cyan",19,[[]]],[11,"bright_white","","Change the foreground color to bright white",19,[[]]],[11,"on_bright_white","","Change the foreground color to bright white",19,[[]]],[11,"bold","","Make the text bold",19,[[]]],[11,"dimmed","","Make the text dim",19,[[]]],[11,"italic","","Make the text italicized",19,[[]]],[11,"underline","","Make the text italicized",19,[[]]],[11,"blink","","Make the text blink",19,[[]]],[11,"blink_fast","","Make the text blink (but fast!)",19,[[]]],[11,"reversed","","Swap the foreground and background colors",19,[[]]],[11,"hidden","","Hide the text",19,[[]]],[11,"strikethrough","","Cross out the text",19,[[]]],[11,"effect","","",19,[[["effect",4]]]],[11,"remove_effect","","",19,[[["effect",4]]]],[11,"effects","","",19,[[]]],[11,"remove_effects","","",19,[[]]],[11,"remove_all_effects","","",19,[[]]],[11,"color","","Set the foreground color at runtime. Only use if you do …",19,[[["dyncolor",8]]]],[11,"on_color","","Set the background color at runtime. Only use if you do …",19,[[["dyncolor",8]]]],[11,"truecolor","","Sets the foreground color to an RGB value.",19,[[["u8",15]]]],[11,"on_truecolor","","Sets the background color to an RGB value.",19,[[["u8",15]]]]],"p":[[3,"BoldDisplay"],[3,"DimDisplay"],[3,"ItalicDisplay"],[3,"UnderlineDisplay"],[3,"BlinkDisplay"],[3,"BlinkFastDisplay"],[3,"ReversedDisplay"],[3,"HiddenDisplay"],[3,"StrikeThroughDisplay"],[4,"Color"],[8,"Color"],[8,"DynColor"],[8,"OwoColorize"],[3,"Rgb"],[4,"XtermColors"],[4,"DynColors"],[4,"Effect"],[3,"ParseColorError"],[3,"Styled"],[3,"Style"],[3,"UserBlack"],[3,"UserRed"],[3,"UserGreen"],[3,"UserYellow"],[3,"UserBlue"],[3,"UserMagenta"],[3,"UserCyan"],[3,"UserWhite"],[3,"UserBrightBlack"],[3,"UserBrightRed"],[3,"UserBrightGreen"],[3,"UserBrightYellow"],[3,"UserBrightBlue"],[3,"UserBrightMagenta"],[3,"UserBrightCyan"],[3,"UserBrightWhite"],[3,"Black"],[3,"StratosBlue"],[3,"NavyBlue"],[3,"MidnightBlue"],[3,"DarkBlue"],[3,"Blue"],[3,"CamaroneGreen"],[3,"BlueStone"],[3,"OrientBlue"],[3,"EndeavourBlue"],[3,"ScienceBlue"],[3,"BlueRibbon"],[3,"JapaneseLaurel"],[3,"DeepSeaGreen"],[3,"Teal"],[3,"DeepCerulean"],[3,"LochmaraBlue"],[3,"AzureRadiance"],[3,"LightJapaneseLaurel"],[3,"Jade"],[3,"PersianGreen"],[3,"BondiBlue"],[3,"Cerulean"],[3,"LightAzureRadiance"],[3,"DarkGreen"],[3,"Malachite"],[3,"CaribbeanGreen"],[3,"LightCaribbeanGreen"],[3,"RobinEggBlue"],[3,"Aqua"],[3,"Green"],[3,"DarkSpringGreen"],[3,"SpringGreen"],[3,"LightSpringGreen"],[3,"BrightTurquoise"],[3,"Cyan"],[3,"Rosewood"],[3,"PompadourMagenta"],[3,"PigmentIndigo"],[3,"DarkPurple"],[3,"ElectricIndigo"],[3,"ElectricPurple"],[3,"VerdunGreen"],[3,"ScorpionOlive"],[3,"Lilac"],[3,"ScampiIndigo"],[3,"Indigo"],[3,"DarkCornflowerBlue"],[3,"DarkLimeade"],[3,"GladeGreen"],[3,"JuniperGreen"],[3,"HippieBlue"],[3,"HavelockBlue"],[3,"CornflowerBlue"],[3,"Limeade"],[3,"FernGreen"],[3,"SilverTree"],[3,"Tradewind"],[3,"ShakespeareBlue"],[3,"DarkMalibuBlue"],[3,"DarkBrightGreen"],[3,"DarkPastelGreen"],[3,"PastelGreen"],[3,"DownyTeal"],[3,"Viking"],[3,"MalibuBlue"],[3,"BrightGreen"],[3,"DarkScreaminGreen"],[3,"ScreaminGreen"],[3,"DarkAquamarine"],[3,"Aquamarine"],[3,"LightAquamarine"],[3,"Maroon"],[3,"DarkFreshEggplant"],[3,"LightFreshEggplant"],[3,"Purple"],[3,"ElectricViolet"],[3,"LightElectricViolet"],[3,"Brown"],[3,"CopperRose"],[3,"StrikemasterPurple"],[3,"DelugePurple"],[3,"DarkMediumPurple"],[3,"DarkHeliotropePurple"],[3,"Olive"],[3,"ClayCreekOlive"],[3,"DarkGray"],[3,"WildBlueYonder"],[3,"ChetwodeBlue"],[3,"SlateBlue"],[3,"LightLimeade"],[3,"ChelseaCucumber"],[3,"BayLeaf"],[3,"GulfStream"],[3,"PoloBlue"],[3,"LightMalibuBlue"],[3,"Pistachio"],[3,"LightPastelGreen"],[3,"DarkFeijoaGreen"],[3,"VistaBlue"],[3,"Bermuda"],[3,"DarkAnakiwaBlue"],[3,"ChartreuseGreen"],[3,"LightScreaminGreen"],[3,"DarkMintGreen"],[3,"MintGreen"],[3,"LighterAquamarine"],[3,"AnakiwaBlue"],[3,"BrightRed"],[3,"DarkFlirt"],[3,"Flirt"],[3,"LightFlirt"],[3,"DarkViolet"],[3,"BrightElectricViolet"],[3,"RoseofSharonOrange"],[3,"MatrixPink"],[3,"TapestryPink"],[3,"FuchsiaPink"],[3,"MediumPurple"],[3,"Heliotrope"],[3,"PirateGold"],[3,"MuesliOrange"],[3,"PharlapPink"],[3,"Bouquet"],[3,"Lavender"],[3,"LightHeliotrope"],[3,"BuddhaGold"],[3,"OliveGreen"],[3,"HillaryOlive"],[3,"SilverChalice"],[3,"WistfulLilac"],[3,"MelroseLilac"],[3,"RioGrandeGreen"],[3,"ConiferGreen"],[3,"Feijoa"],[3,"PixieGreen"],[3,"JungleMist"],[3,"LightAnakiwaBlue"],[3,"Lime"],[3,"GreenYellow"],[3,"LightMintGreen"],[3,"Celadon"],[3,"AeroBlue"],[3,"FrenchPassLightBlue"],[3,"GuardsmanRed"],[3,"RazzmatazzCerise"],[3,"MediumVioletRed"],[3,"HollywoodCerise"],[3,"DarkPurplePizzazz"],[3,"BrighterElectricViolet"],[3,"TennOrange"],[3,"RomanOrange"],[3,"CranberryPink"],[3,"HopbushPink"],[3,"Orchid"],[3,"LighterHeliotrope"],[3,"MangoTango"],[3,"Copperfield"],[3,"SeaPink"],[3,"CanCanPink"],[3,"LightOrchid"],[3,"BrightHeliotrope"],[3,"DarkCorn"],[3,"DarkTachaOrange"],[3,"TanBeige"],[3,"ClamShell"],[3,"ThistlePink"],[3,"Mauve"],[3,"Corn"],[3,"TachaOrange"],[3,"DecoOrange"],[3,"PaleGoldenrod"],[3,"AltoBeige"],[3,"FogPink"],[3,"ChartreuseYellow"],[3,"Canary"],[3,"Honeysuckle"],[3,"ReefPaleYellow"],[3,"SnowyMint"],[3,"OysterBay"],[3,"Red"],[3,"DarkRose"],[3,"Rose"],[3,"LightHollywoodCerise"],[3,"PurplePizzazz"],[3,"Fuchsia"],[3,"BlazeOrange"],[3,"BittersweetOrange"],[3,"WildWatermelon"],[3,"DarkHotPink"],[3,"HotPink"],[3,"PinkFlamingo"],[3,"FlushOrange"],[3,"Salmon"],[3,"VividTangerine"],[3,"PinkSalmon"],[3,"DarkLavenderRose"],[3,"BlushPink"],[3,"YellowSea"],[3,"TexasRose"],[3,"Tacao"],[3,"Sundown"],[3,"CottonCandy"],[3,"LavenderRose"],[3,"Gold"],[3,"Dandelion"],[3,"GrandisCaramel"],[3,"Caramel"],[3,"CosmosSalmon"],[3,"PinkLace"],[3,"Yellow"],[3,"LaserLemon"],[3,"DollyYellow"],[3,"PortafinoYellow"],[3,"Cumulus"],[3,"White"],[3,"DarkCodGray"],[3,"CodGray"],[3,"LightCodGray"],[3,"DarkMineShaft"],[3,"MineShaft"],[3,"LightMineShaft"],[3,"DarkTundora"],[3,"Tundora"],[3,"ScorpionGray"],[3,"DarkDoveGray"],[3,"DoveGray"],[3,"Boulder"],[3,"Gray"],[3,"LightGray"],[3,"DustyGray"],[3,"NobelGray"],[3,"DarkSilverChalice"],[3,"LightSilverChalice"],[3,"DarkSilver"],[3,"Silver"],[3,"DarkAlto"],[3,"Alto"],[3,"Mercury"],[3,"GalleryGray"],[3,"Black"],[3,"Red"],[3,"Green"],[3,"Yellow"],[3,"Blue"],[3,"Magenta"],[3,"Cyan"],[3,"White"],[3,"BrightBlack"],[3,"BrightRed"],[3,"BrightGreen"],[3,"BrightYellow"],[3,"BrightBlue"],[3,"BrightMagenta"],[3,"BrightCyan"],[3,"BrightWhite"],[3,"FgColorDisplay"],[3,"BgColorDisplay"],[3,"FgDynColorDisplay"],[3,"BgDynColorDisplay"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","i":[[3,"Condvar","parking_lot","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition …",null,null],[5,"const_fair_mutex","","Creates a new fair mutex in an unlocked state ready for …",null,[[],["fairmutex",6]]],[6,"FairMutex","","A mutual exclusive primitive that is always fair, useful …",null,null],[6,"FairMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[6,"MappedFairMutexGuard","","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, …",null,null],[5,"const_mutex","","Creates a new mutex in an unlocked state ready for use.",null,[[],["mutex",6]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …",null,null],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared …",null,null],[6,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[3,"Once","","A synchronization primitive which can be used to run a …",null,null],[4,"OnceState","","Current state of a <code>Once</code>.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed successfully.",0,null],[3,"RawFairMutex","","Raw fair mutex type backed by the parking lot.",null,null],[3,"RawMutex","","Raw mutex type backed by the parking lot.",null,null],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",null,null],[5,"const_reentrant_mutex","","Creates a new reentrant mutex in an unlocked state ready …",null,[[],["reentrantmutex",6]]],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …",null,null],[3,"RawThreadId","","Implementation of the <code>GetThreadId</code> trait for …",null,null],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single …",null,null],[6,"ReentrantMutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a reentrant …",null,null],[5,"const_rwlock","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",null,[[],["rwlock",6]]],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …",null,null],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…",null,null],[6,"RwLock","","A reader-writer lock",null,null],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access …",null,null],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",1,[[],["waittimeoutresult",3]]],[11,"clone","","",0,[[],["oncestate",4]]],[11,"default","","",2,[[],["condvar",3]]],[11,"default","","",3,[[],["once",3]]],[11,"eq","","",1,[[["waittimeoutresult",3]],["bool",15]]],[11,"ne","","",1,[[["waittimeoutresult",3]],["bool",15]]],[11,"eq","","",0,[[["oncestate",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"lock","","",4,[[]]],[11,"try_lock","","",4,[[],["bool",15]]],[11,"unlock","","",4,[[]]],[11,"is_locked","","",4,[[],["bool",15]]],[11,"lock","","",5,[[]]],[11,"try_lock","","",5,[[],["bool",15]]],[11,"unlock","","",5,[[]]],[11,"is_locked","","",5,[[],["bool",15]]],[11,"unlock_fair","","",4,[[]]],[11,"bump","","",4,[[]]],[11,"unlock_fair","","",5,[[]]],[11,"bump","","",5,[[]]],[11,"try_lock_until","","",4,[[],["bool",15]]],[11,"try_lock_for","","",4,[[],["bool",15]]],[11,"try_lock_until","","",5,[[["instant",6]],["bool",15]]],[11,"try_lock_for","","",5,[[["duration",3]],["bool",15]]],[11,"nonzero_thread_id","","",7,[[],["nonzerousize",3]]],[11,"lock_exclusive","","",6,[[]]],[11,"try_lock_exclusive","","",6,[[],["bool",15]]],[11,"unlock_exclusive","","",6,[[]]],[11,"lock_shared","","",6,[[]]],[11,"try_lock_shared","","",6,[[],["bool",15]]],[11,"unlock_shared","","",6,[[]]],[11,"is_locked","","",6,[[],["bool",15]]],[11,"unlock_shared_fair","","",6,[[]]],[11,"unlock_exclusive_fair","","",6,[[]]],[11,"bump_shared","","",6,[[]]],[11,"bump_exclusive","","",6,[[]]],[11,"downgrade","","",6,[[]]],[11,"try_lock_shared_for","","",6,[[],["bool",15]]],[11,"try_lock_shared_until","","",6,[[],["bool",15]]],[11,"try_lock_exclusive_for","","",6,[[["duration",3]],["bool",15]]],[11,"try_lock_exclusive_until","","",6,[[["instant",6]],["bool",15]]],[11,"lock_shared_recursive","","",6,[[]]],[11,"try_lock_shared_recursive","","",6,[[],["bool",15]]],[11,"try_lock_shared_recursive_for","","",6,[[],["bool",15]]],[11,"try_lock_shared_recursive_until","","",6,[[],["bool",15]]],[11,"lock_upgradable","","",6,[[]]],[11,"try_lock_upgradable","","",6,[[],["bool",15]]],[11,"unlock_upgradable","","",6,[[]]],[11,"upgrade","","",6,[[]]],[11,"try_upgrade","","",6,[[],["bool",15]]],[11,"unlock_upgradable_fair","","",6,[[]]],[11,"bump_upgradable","","",6,[[]]],[11,"downgrade_upgradable","","",6,[[]]],[11,"downgrade_to_upgradable","","",6,[[]]],[11,"try_lock_upgradable_until","","",6,[[["instant",6]],["bool",15]]],[11,"try_lock_upgradable_for","","",6,[[["duration",3]],["bool",15]]],[11,"try_upgrade_until","","",6,[[["instant",6]],["bool",15]]],[11,"try_upgrade_for","","",6,[[["duration",3]],["bool",15]]],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[],["bool",15]]],[11,"new","","Creates a new condition variable which is ready to be …",2,[[],["condvar",3]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[],["bool",15]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[],["usize",15]]],[11,"wait","","Blocks the current thread until this condition variable …",2,[[["mutexguard",6]]]],[11,"wait_until","","Waits on this condition variable for a notification, …",2,[[["instant",6],["mutexguard",6]],["waittimeoutresult",3]]],[11,"wait_for","","Waits on this condition variable for a notification, …",2,[[["duration",3],["mutexguard",6]],["waittimeoutresult",3]]],[11,"poisoned","","Returns whether the associated <code>Once</code> has been poisoned.",0,[[],["bool",15]]],[11,"done","","Returns whether the associated <code>Once</code> has successfully …",0,[[],["bool",15]]],[11,"new","","Creates a new <code>Once</code> value.",3,[[],["once",3]]],[11,"state","","Returns the current state of this <code>Once</code>.",3,[[],["oncestate",4]]],[11,"call_once","","Performs an initialization routine once and only once. …",3,[[]]],[11,"call_once_force","","Performs the same function as <code>call_once</code> except ignores …",3,[[]]]],"p":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your …","i":[[0,"deadlock","parking_lot_core","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock …",null,[[["usize",15]]]],[5,"release_resource","","Release a resource identified by key in the deadlock …",null,[[["usize",15]]]],[5,"park","parking_lot_core","Parks the current thread in the queue associated with the …",null,[[["usize",15],["instant",6],["option",4],["parktoken",3]],["parkresult",4]]],[5,"unpark_all","","Unparks all threads in the queue associated with the …",null,[[["usize",15],["unparktoken",3]],["usize",15]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue …",null,[[["usize",15]],["unparkresult",3]]],[5,"unpark_one","","Unparks one thread from the queue associated with the …",null,[[["usize",15]],["unparkresult",3]]],[5,"unpark_requeue","","Removes all threads from the queue associated with …",null,[[["usize",15]],["unparkresult",3]]],[4,"FilterOp","","Operation that <code>unpark_filter</code> should perform for each …",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of …",0,null],[13,"Skip","","Don\'t unpark the thread and continue scanning the list of …",0,null],[13,"Stop","","Don\'t unpark the thread and stop scanning the list of …",0,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",1,null],[13,"Invalid","","The validation callback returned false.",1,null],[13,"TimedOut","","The timeout expired.",1,null],[3,"ParkToken","","A value associated with a parked thread which can be used …",null,null],[12,"0","","",2,null],[4,"RequeueOp","","Operation that <code>unpark_requeue</code> should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",3,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target …",3,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",3,null],[13,"UnparkOne","","Unpark one thread and leave the rest parked. No requeuing …",3,null],[13,"RequeueOne","","Requeue one thread and leave the rest parked on the …",3,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",4,null],[12,"requeued_threads","","The number of threads that were requeued.",4,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. …",4,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any …",4,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked …",null,null],[12,"0","","",5,null],[17,"DEFAULT_PARK_TOKEN","","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin …",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone","","",1,[[],["parkresult",4]]],[11,"clone","","",4,[[],["unparkresult",3]]],[11,"clone","","",3,[[],["requeueop",4]]],[11,"clone","","",0,[[],["filterop",4]]],[11,"clone","","",5,[[],["unparktoken",3]]],[11,"clone","","",2,[[],["parktoken",3]]],[11,"default","","",4,[[],["unparkresult",3]]],[11,"default","","",6,[[],["spinwait",3]]],[11,"eq","","",1,[[["parkresult",4]],["bool",15]]],[11,"ne","","",1,[[["parkresult",4]],["bool",15]]],[11,"eq","","",4,[[["unparkresult",3]],["bool",15]]],[11,"ne","","",4,[[["unparkresult",3]],["bool",15]]],[11,"eq","","",3,[[["requeueop",4]],["bool",15]]],[11,"eq","","",0,[[["filterop",4]],["bool",15]]],[11,"eq","","",5,[[["unparktoken",3]],["bool",15]]],[11,"ne","","",5,[[["unparktoken",3]],["bool",15]]],[11,"eq","","",2,[[["parktoken",3]],["bool",15]]],[11,"ne","","",2,[[["parktoken",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",1,[[],["bool",15]]],[11,"new","","Creates a new <code>SpinWait</code>.",6,[[]]],[11,"reset","","Resets a <code>SpinWait</code> to its initial state.",6,[[]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[],["bool",15]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[]]]],"p":[[4,"FilterOp"],[4,"ParkResult"],[3,"ParkToken"],[4,"RequeueOp"],[3,"UnparkResult"],[3,"UnparkToken"],[3,"SpinWait"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection type covering all the …",null,null]],"p":[]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[],["bool",15]]],[11,"span","","",1,[[],["span",3]]],[3,"LineColumn","","A line-column pair representing the start or end of a <code>Span</code>…",null,null],[12,"line","","The 1-indexed line in the source file on which the span …",2,null],[12,"column","","The 0-indexed column (in UTF-8 characters) in the source …",2,null],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",3,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",3,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",3,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",3,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",3,[[],["span",3]]],[11,"start","","Get the starting line/column in the source file for this …",3,[[],["linecolumn",3]]],[11,"end","","Get the ending line/column in the source file for this …",3,[[],["linecolumn",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",3,[[["span",3]],[["option",4],["span",3]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",4,null],[13,"Ident","","An identifier.",4,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",4,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",4,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",4,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",4,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",5,null],[13,"Brace","","<code>{ ... }</code>",5,null],[13,"Bracket","","<code>[ ... ]</code>",5,null],[13,"None","","<code>Ø ... Ø</code>",5,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",6,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",6,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",6,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",6,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",6,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",6,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",6,[[["span",3]]]],[3,"Punct","","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.",null,null],[4,"Spacing","","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",7,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",7,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",8,[[["char",15],["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",8,[[],["char",15]]],[11,"spacing","","Returns the spacing of this punctuation character, …",8,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",8,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",9,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",9,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",9,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["u8",15]],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["u16",15]],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["u32",15]],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["u64",15]],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["u128",15]],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["usize",15]],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["i8",15]],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["i16",15]],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["i32",15]],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["i64",15]],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["i128",15]],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",10,[[["isize",15]],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["u8",15]],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["u16",15]],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["u32",15]],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["u64",15]],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["u128",15]],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["usize",15]],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["i8",15]],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["i16",15]],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["i32",15]],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["i64",15]],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["i128",15]],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",10,[[["isize",15]],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[["f64",15]],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",10,[[["f64",15]],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[["f32",15]],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",10,[[["f32",15]],["literal",3]]],[11,"string","","String literal.",10,[[["str",15]],["literal",3]]],[11,"character","","Character literal.",10,[[["char",15]],["literal",3]]],[11,"byte_string","","Byte string literal.",10,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",10,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",10,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",10,[[["usize",15],["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","proc_macro2::token_stream","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",3,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",4,[[["group",3]],["tokentree",4]]],[11,"from","","",4,[[["ident",3]],["tokentree",4]]],[11,"from","","",4,[[["punct",3]],["tokentree",4]]],[11,"from","","",4,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",11,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",2,[[],["linecolumn",3]]],[11,"clone","","",3,[[],["span",3]]],[11,"clone","","",4,[[],["tokentree",4]]],[11,"clone","","",6,[[],["group",3]]],[11,"clone","","",5,[[],["delimiter",4]]],[11,"clone","","",8,[[],["punct",3]]],[11,"clone","","",7,[[],["spacing",4]]],[11,"clone","","",9,[[],["ident",3]]],[11,"clone","","",10,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",11,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",2,[[],["ordering",4]]],[11,"cmp","","",9,[[["ident",3]],["ordering",4]]],[11,"eq","","",2,[[["linecolumn",3]],["bool",15]]],[11,"ne","","",2,[[["linecolumn",3]],["bool",15]]],[11,"eq","","",5,[[["delimiter",4]],["bool",15]]],[11,"eq","","",7,[[["spacing",4]],["bool",15]]],[11,"eq","","",9,[[["ident",3]],["bool",15]]],[11,"eq","","",9,[[],["bool",15]]],[11,"partial_cmp","","",2,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",11,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"from_str","","",0,[[["str",15]],[["tokenstream",3],["result",4],["lexerror",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"LexError"],[3,"LineColumn"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"proc_macro_error":{"doc":"proc-macro-errorThis crate aims to make error reporting …","i":[[0,"dummy","proc_macro_error","Facility to emit dummy implementations (or whatever) in …",null,null],[5,"set_dummy","proc_macro_error::dummy","Sets dummy token stream which will be appended to …",null,[[["tokenstream",3]],[["tokenstream",3],["option",4]]]],[5,"append_dummy","","Same as [<code>set_dummy</code>] but, instead of resetting, appends …",null,[[["tokenstream",3]]]],[3,"Diagnostic","proc_macro_error","Represents a single diagnostic message",null,null],[8,"DiagnosticExt","","A collection of methods that do not exist in …",null,null],[10,"spanned_range","","Create a new diagnostic message that points to the …",0,[[["spanrange",3],["level",4],["string",3]]]],[10,"span_range_error","","Add another error message to self such that it will be …",0,[[["spanrange",3],["string",3]]]],[10,"span_range_help","","Attach a \\\"help\\\" note to your main message, the note will …",0,[[["spanrange",3],["string",3]]]],[10,"span_range_note","","Attach a note to your main message, the note will have …",0,[[["spanrange",3],["string",3]]]],[4,"Level","","Represents a diagnostic level",null,null],[13,"Error","","",1,null],[13,"Warning","","",1,null],[23,"proc_macro_error","","",null,null],[3,"SpanRange","","",null,null],[12,"first","","",2,null],[12,"last","","",2,null],[11,"single_span","","Create a range with the <code>first</code> and <code>last</code> spans being the …",2,[[["span",3]]]],[11,"call_site","","Create a <code>SpanRange</code> resolving at call site.",2,[[]]],[11,"from_tokens","","Construct span range from a <code>TokenStream</code>. This method …",2,[[["totokens",8]]]],[11,"join_range","","Join two span ranges. The resulting range will start at …",2,[[["spanrange",3]]]],[11,"collapse","","Collapse the range into single span, preserving as much …",2,[[],["span",3]]],[8,"ResultExt","","This traits expands <code>Result<T, Into<Diagnostic>></code> with some …",null,null],[16,"Ok","","",3,null],[10,"unwrap_or_abort","","Behaves like <code>Result::unwrap</code>: if self is <code>Ok</code> yield the …",3,[[]]],[10,"expect_or_abort","","Behaves like <code>Result::expect</code>: if self is <code>Ok</code> yield the …",3,[[["str",15]]]],[8,"OptionExt","","This traits expands <code>Option</code> with some handy shortcuts.",null,null],[16,"Some","","",4,null],[10,"expect_or_abort","","Behaves like <code>Option::expect</code>: if self is <code>Some</code> yield the …",4,[[["str",15]]]],[5,"abort_if_dirty","","Abort macro execution and display all the emitted errors, …",null,[[]]],[14,"diagnostic","","Build <code>Diagnostic</code> instance from provided arguments.",null,null],[14,"abort","","Abort proc-macro execution right now and display the …",null,null],[14,"abort_call_site","","Shortcut for <code>abort!(Span::call_site(), msg...)</code>. This macro…",null,null],[14,"emit_error","","Emit an error while not aborting the proc-macro right …",null,null],[14,"emit_call_site_error","","Shortcut for <code>emit_error!(Span::call_site(), ...)</code>. This …",null,null],[14,"emit_warning","","Emit a warning. Warnings are not errors and compilation …",null,null],[14,"emit_call_site_warning","","Shortcut for <code>emit_warning!(Span::call_site(), ...)</code>.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"spanned_range","","",5,[[["spanrange",3],["level",4],["string",3]]]],[11,"span_range_error","","",5,[[["spanrange",3],["string",3]]]],[11,"span_range_help","","",5,[[["spanrange",3],["string",3]]]],[11,"span_range_note","","",5,[[["spanrange",3],["string",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"clone","","",2,[[],["spanrange",3]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"new","","Create a new diagnostic message that points to …",5,[[["level",4],["string",3]]]],[11,"spanned","","Create a new diagnostic message that points to the <code>span</code>",5,[[["span",3],["level",4],["string",3]]]],[11,"span_error","","Add another error message to self such that it will be …",5,[[["span",3],["string",3]]]],[11,"span_help","","Attach a \\\"help\\\" note to your main message, the note will …",5,[[["span",3],["string",3]]]],[11,"help","","Attach a \\\"help\\\" note to your main message.",5,[[["string",3]]]],[11,"span_note","","Attach a note to your main message, the note will have …",5,[[["span",3],["string",3]]]],[11,"note","","Attach a note to your main message",5,[[["string",3]]]],[11,"message","","The message of main warning/error (no notes attached)",5,[[],["str",15]]],[11,"abort","","Abort the proc-macro\'s execution and display the …",5,[[]]],[11,"emit","","Display the diagnostic while not aborting macro execution.",5,[[]]]],"p":[[8,"DiagnosticExt"],[4,"Level"],[3,"SpanRange"],[8,"ResultExt"],[8,"OptionExt"],[3,"Diagnostic"]]},\
"proc_macro_error_attr":{"doc":"This is <code>#[proc_macro_error]</code> attribute to be used with …","i":[[23,"proc_macro_error","proc_macro_error_attr","",null,null]],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rodio":{"doc":"Audio playback library.","i":[[0,"buffer","rodio","A simple source of samples coming from a buffer.",null,null],[3,"SamplesBuffer","rodio::buffer","A buffer of samples treated as a source.",null,null],[11,"new","","Builds a new <code>SamplesBuffer</code>.",0,[[["u32",15],["u16",15]],["samplesbuffer",3]]],[0,"decoder","rodio","Decodes samples from an audio file.",null,null],[3,"Decoder","rodio::decoder","Source of audio samples from decoding a file.",null,null],[3,"LoopedDecoder","","",null,null],[11,"new","","Builds a new decoder.",1,[[],[["result",4],["decoder",3],["decodererror",4]]]],[11,"new_looped","","",1,[[],[["result",4],["loopeddecoder",3],["decodererror",4]]]],[11,"new_wav","","Builds a new decoder from wav data.",1,[[],[["result",4],["decoder",3],["decodererror",4]]]],[11,"new_flac","","Builds a new decoder from flac data.",1,[[],[["result",4],["decoder",3],["decodererror",4]]]],[11,"new_vorbis","","Builds a new decoder from vorbis data.",1,[[],[["result",4],["decoder",3],["decodererror",4]]]],[11,"new_mp3","","Builds a new decoder from mp3 data.",1,[[],[["result",4],["decoder",3],["decodererror",4]]]],[4,"DecoderError","","Error that can happen when creating a decoder.",null,null],[13,"UnrecognizedFormat","","The format of the data has not been recognized.",2,null],[0,"dynamic_mixer","rodio","Mixer that plays multiple sounds at the same time.",null,null],[5,"mixer","rodio::dynamic_mixer","Builds a new mixer.",null,[[["u32",15],["u16",15]]]],[3,"DynamicMixerController","","The input of the mixer.",null,null],[11,"add","","Adds a new source to mix to the existing ones.",3,[[]]],[3,"DynamicMixer","","The output of the mixer. Implements <code>Source</code>.",null,null],[0,"queue","rodio","Queue that plays sounds one after the other.",null,null],[5,"queue","rodio::queue","Builds a new queue. It consists of an input and an output.",null,[[["bool",15]]]],[3,"SourcesQueueInput","","The input of the queue.",null,null],[11,"append","","Adds a new source to the end of the queue.",4,[[]]],[11,"append_with_signal","","Adds a new source to the end of the queue.",4,[[],["receiver",3]]],[11,"set_keep_alive_if_empty","","Sets whether the queue stays alive if there\'s no more …",4,[[["bool",15]]]],[3,"SourcesQueueOutput","","The output of the queue. Implements <code>Source</code>.",null,null],[0,"source","rodio","Sources of sound and various filters.",null,null],[3,"Amplify","rodio::source","Filter that modifies each sample by a given value.",null,null],[3,"BltFilter","","",null,null],[3,"Buffered","","Iterator that at the same time extracts data from the …",null,null],[3,"ChannelVolume","","Combines channels in input into a single mono source, …",null,null],[6,"Crossfade","","",null,null],[3,"Delay","","A source that delays the given source by a certain amount.",null,null],[3,"Done","","When the inner source is empty this decrements an …",null,null],[3,"Empty","","An empty source.",null,null],[3,"FadeIn","","Filter that modifies raises the volume from silence over …",null,null],[5,"from_factory","","Builds a source that chains sources built from a factory.",null,[[],[["fromiter",3],["fromfactoryiter",3]]]],[3,"FromFactoryIter","","Internal type used by <code>from_factory</code>.",null,null],[5,"from_iter","","Builds a source that chains sources provided by an …",null,[[],["fromiter",3]]],[3,"FromIter","","A source that chains sources provided by an iterator.",null,null],[3,"Mix","","Filter that modifies each sample by a given value.",null,null],[3,"Pausable","","",null,null],[3,"PeriodicAccess","","Calls a function on a source every time a period elapsed.",null,null],[3,"Repeat","","A source that repeats the given source.",null,null],[3,"SamplesConverter","","An iterator that reads from a <code>Source</code> and converts the …",null,null],[3,"SineWave","","An infinite source that produces a sine.",null,null],[3,"SkipDuration","","A source that skips specified duration of the given …",null,null],[3,"Spatial","","Combines channels in input into a single mono source, …",null,null],[3,"Speed","","Filter that modifies each sample by a given value.",null,null],[3,"Stoppable","","",null,null],[3,"TakeDuration","","A source that truncates the given source to a certain …",null,null],[3,"UniformSourceIterator","","An iterator that reads from a <code>Source</code> and converts the …",null,null],[3,"Zero","","An infinite source that produces zero.",null,null],[8,"Source","","A source of samples.",null,null],[10,"current_frame_len","","Returns the number of samples before the current frame …",5,[[],[["usize",15],["option",4]]]],[10,"channels","","Returns the number of channels. Channels are always …",5,[[],["u16",15]]],[10,"sample_rate","","Returns the rate at which the source should be played. In …",5,[[],["u32",15]]],[10,"total_duration","","Returns the total duration of this source, if known.",5,[[],[["duration",3],["option",4]]]],[11,"buffered","","Stores the source in a buffer in addition to returning …",5,[[],["buffered",3]]],[11,"mix","","Mixes this source with another one.",5,[[],["mix",3]]],[11,"repeat_infinite","","Repeats this source forever.",5,[[],["repeat",3]]],[11,"take_duration","","Takes a certain duration of this source and then stops.",5,[[["duration",3]],["takeduration",3]]],[11,"delay","","Delays the sound by a certain duration.",5,[[["duration",3]],["delay",3]]],[11,"skip_duration","","Immediately skips a certain duration of this source.",5,[[["duration",3]],["skipduration",3]]],[11,"amplify","","Amplifies the sound by the given value.",5,[[["f32",15]],["amplify",3]]],[11,"take_crossfade_with","","Mixes this sound fading out with another sound fading in …",5,[[["duration",3],["source",8]],[["source",8],["crossfade",6]]]],[11,"fade_in","","Fades in the sound.",5,[[["duration",3]],["fadein",3]]],[11,"periodic_access","","Calls the <code>access</code> closure on <code>Self</code> the first time the …",5,[[["duration",3]],["periodicaccess",3]]],[11,"speed","","Changes the play speed of the sound. Does not adjust the …",5,[[["f32",15]],["speed",3]]],[11,"reverb","","Adds a basic reverb effect.",5,[[["duration",3],["f32",15]],[["mix",3],["delay",3]]]],[11,"convert_samples","","Converts the samples of this source to another type.",5,[[],["samplesconverter",3]]],[11,"pausable","","Makes the sound pausable.",5,[[["bool",15]],["pausable",3]]],[11,"stoppable","","Makes the sound stoppable.",5,[[],["stoppable",3]]],[11,"low_pass","","Applies a low-pass filter to the source. <strong>Warning</strong>: …",5,[[["u32",15]],["bltfilter",3]]],[0,"static_buffer","rodio","A simple source of samples coming from a static buffer.",null,null],[3,"StaticSamplesBuffer","rodio::static_buffer","A buffer of samples treated as a source.",null,null],[11,"new","","Builds a new <code>StaticSamplesBuffer</code>.",6,[[["u32",15],["u16",15]],["staticsamplesbuffer",3]]],[8,"DeviceTrait","rodio","A device that is capable of audio input and/or output.",null,null],[16,"SupportedInputConfigs","","The iterator type yielding supported input stream formats.",7,null],[16,"SupportedOutputConfigs","","The iterator type yielding supported output stream …",7,null],[16,"Stream","","The stream type created by <code>build_input_stream_raw</code> and …",7,null],[10,"name","","The human-readable name of the device.",7,[[],[["result",4],["devicenameerror",4],["string",3]]]],[10,"supported_input_configs","","An iterator yielding formats that are supported by the …",7,[[],[["result",4],["supportedstreamconfigserror",4]]]],[10,"supported_output_configs","","An iterator yielding output stream formats that are …",7,[[],[["result",4],["supportedstreamconfigserror",4]]]],[10,"default_input_config","","The default input stream format for the device.",7,[[],[["defaultstreamconfigerror",4],["supportedstreamconfig",3],["result",4]]]],[10,"default_output_config","","The default output stream format for the device.",7,[[],[["defaultstreamconfigerror",4],["supportedstreamconfig",3],["result",4]]]],[11,"build_input_stream","","Create an input stream.",7,[[["streamconfig",3]],[["buildstreamerror",4],["result",4]]]],[11,"build_output_stream","","Create an output stream.",7,[[["streamconfig",3]],[["buildstreamerror",4],["result",4]]]],[10,"build_input_stream_raw","","Create a dynamically typed input stream.",7,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[10,"build_output_stream_raw","","Create a dynamically typed output stream.",7,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[3,"Device","","The <strong>Device</strong> implementation associated with the platform\'s …",null,null],[3,"Devices","","The <strong>Devices</strong> iterator associated with the platform\'s …",null,null],[4,"DevicesError","","An error that might occur while attempting to enumerate …",null,null],[13,"BackendSpecific","","See the <code>BackendSpecificError</code> docs for more information …",8,null],[12,"err","rodio::DevicesError","",9,null],[6,"InputDevices","rodio","A host\'s device iterator yielding only <em>input</em> devices.",null,null],[6,"OutputDevices","","A host\'s device iterator yielding only <em>output</em> devices.",null,null],[3,"SupportedStreamConfig","","Describes a single supported stream configuration, …",null,null],[8,"Sample","","Represents a value of a single sample.",null,null],[10,"lerp","","Linear interpolation between two samples.",10,[[["u32",15]]]],[10,"amplify","","Multiplies the value of this sample by the given amount.",10,[[["f32",15]]]],[10,"saturating_add","","Calls <code>saturating_add</code> on the sample.",10,[[]]],[10,"zero_value","","Returns the value corresponding to the absence of sound.",10,[[]]],[3,"Sink","","Handle to an device that outputs sounds.",null,null],[3,"SpatialSink","","",null,null],[3,"OutputStream","","<code>cpal::Stream</code> container. Also see the more useful …",null,null],[3,"OutputStreamHandle","","More flexible handle to a <code>OutputStream</code> that provides …",null,null],[4,"PlayError","","An error occurred while attemping to play a sound.",null,null],[13,"DecoderError","","Attempting to decode the audio failed.",11,null],[13,"NoDevice","","The output device was lost.",11,null],[4,"StreamError","","",null,null],[13,"PlayStreamError","","",12,null],[13,"NoDevice","","",12,null],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","rodio::buffer","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rodio::decoder","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","rodio::dynamic_mixer","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","rodio::queue","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","rodio::source","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","rodio::static_buffer","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rodio","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"name","","",43,[[],[["result",4],["devicenameerror",4],["string",3]]]],[11,"supported_input_configs","","",43,[[],[["result",4],["supportedstreamconfigserror",4]]]],[11,"supported_output_configs","","",43,[[],[["result",4],["supportedstreamconfigserror",4]]]],[11,"default_input_config","","",43,[[],[["defaultstreamconfigerror",4],["supportedstreamconfig",3],["result",4]]]],[11,"default_output_config","","",43,[[],[["defaultstreamconfigerror",4],["supportedstreamconfig",3],["result",4]]]],[11,"build_input_stream_raw","","",43,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[11,"build_output_stream_raw","","",43,[[["streamconfig",3],["sampleformat",4]],[["buildstreamerror",4],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",43,[[["device",3]],["device",3]]],[11,"from","","",43,[[["deviceinner",4]],["device",3]]],[11,"from","","",8,[[["error",3]],["deviceserror",4]]],[11,"from","","",8,[[["backendspecificerror",3]],["deviceserror",4]]],[11,"from","","",44,[[["devicesinner",4]],["devices",3]]],[11,"from","","",44,[[["devices",3]],["devices",3]]],[11,"source","","",8,[[],[["option",4],["error",8]]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"clone","","",45,[[],["supportedstreamconfig",3]]],[11,"eq","","",45,[[["supportedstreamconfig",3]],["bool",15]]],[11,"ne","","",45,[[["supportedstreamconfig",3]],["bool",15]]],[11,"current_frame_len","rodio::buffer","",0,[[],[["usize",15],["option",4]]]],[11,"channels","","",0,[[],["u16",15]]],[11,"sample_rate","","",0,[[],["u32",15]]],[11,"total_duration","","",0,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","rodio::decoder","",1,[[],[["usize",15],["option",4]]]],[11,"channels","","",1,[[],["u16",15]]],[11,"sample_rate","","",1,[[],["u32",15]]],[11,"total_duration","","",1,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",17,[[],[["usize",15],["option",4]]]],[11,"channels","","",17,[[],["u16",15]]],[11,"sample_rate","","",17,[[],["u32",15]]],[11,"total_duration","","",17,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","rodio::dynamic_mixer","",18,[[],[["usize",15],["option",4]]]],[11,"channels","","",18,[[],["u16",15]]],[11,"sample_rate","","",18,[[],["u32",15]]],[11,"total_duration","","",18,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","rodio::queue","",19,[[],[["usize",15],["option",4]]]],[11,"channels","","",19,[[],["u16",15]]],[11,"sample_rate","","",19,[[],["u32",15]]],[11,"total_duration","","",19,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","rodio::source","",20,[[],[["usize",15],["option",4]]]],[11,"channels","","",20,[[],["u16",15]]],[11,"sample_rate","","",20,[[],["u32",15]]],[11,"total_duration","","",20,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",21,[[],[["usize",15],["option",4]]]],[11,"channels","","",21,[[],["u16",15]]],[11,"sample_rate","","",21,[[],["u32",15]]],[11,"total_duration","","",21,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",22,[[],[["usize",15],["option",4]]]],[11,"channels","","",22,[[],["u16",15]]],[11,"sample_rate","","",22,[[],["u32",15]]],[11,"total_duration","","",22,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",23,[[],[["usize",15],["option",4]]]],[11,"channels","","",23,[[],["u16",15]]],[11,"sample_rate","","",23,[[],["u32",15]]],[11,"total_duration","","",23,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",24,[[],[["usize",15],["option",4]]]],[11,"channels","","",24,[[],["u16",15]]],[11,"sample_rate","","",24,[[],["u32",15]]],[11,"total_duration","","",24,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",25,[[],[["usize",15],["option",4]]]],[11,"channels","","",25,[[],["u16",15]]],[11,"sample_rate","","",25,[[],["u32",15]]],[11,"total_duration","","",25,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",26,[[],[["usize",15],["option",4]]]],[11,"channels","","",26,[[],["u16",15]]],[11,"sample_rate","","",26,[[],["u32",15]]],[11,"total_duration","","",26,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",27,[[],[["usize",15],["option",4]]]],[11,"channels","","",27,[[],["u16",15]]],[11,"sample_rate","","",27,[[],["u32",15]]],[11,"total_duration","","",27,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",29,[[],[["usize",15],["option",4]]]],[11,"channels","","",29,[[],["u16",15]]],[11,"sample_rate","","",29,[[],["u32",15]]],[11,"total_duration","","",29,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",30,[[],[["usize",15],["option",4]]]],[11,"channels","","",30,[[],["u16",15]]],[11,"sample_rate","","",30,[[],["u32",15]]],[11,"total_duration","","",30,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",31,[[],[["usize",15],["option",4]]]],[11,"channels","","",31,[[],["u16",15]]],[11,"sample_rate","","",31,[[],["u32",15]]],[11,"total_duration","","",31,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",32,[[],[["usize",15],["option",4]]]],[11,"channels","","",32,[[],["u16",15]]],[11,"sample_rate","","",32,[[],["u32",15]]],[11,"total_duration","","",32,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",33,[[],[["usize",15],["option",4]]]],[11,"channels","","",33,[[],["u16",15]]],[11,"sample_rate","","",33,[[],["u32",15]]],[11,"total_duration","","",33,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",34,[[],[["usize",15],["option",4]]]],[11,"channels","","",34,[[],["u16",15]]],[11,"sample_rate","","",34,[[],["u32",15]]],[11,"total_duration","","",34,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",35,[[],[["usize",15],["option",4]]]],[11,"channels","","",35,[[],["u16",15]]],[11,"sample_rate","","",35,[[],["u32",15]]],[11,"total_duration","","",35,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",36,[[],[["usize",15],["option",4]]]],[11,"channels","","",36,[[],["u16",15]]],[11,"sample_rate","","",36,[[],["u32",15]]],[11,"total_duration","","",36,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",37,[[],[["usize",15],["option",4]]]],[11,"channels","","",37,[[],["u16",15]]],[11,"sample_rate","","",37,[[],["u32",15]]],[11,"total_duration","","",37,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",38,[[],[["usize",15],["option",4]]]],[11,"channels","","",38,[[],["u16",15]]],[11,"sample_rate","","",38,[[],["u32",15]]],[11,"total_duration","","",38,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",39,[[],[["usize",15],["option",4]]]],[11,"channels","","",39,[[],["u16",15]]],[11,"sample_rate","","",39,[[],["u32",15]]],[11,"total_duration","","",39,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",40,[[],[["usize",15],["option",4]]]],[11,"channels","","",40,[[],["u16",15]]],[11,"sample_rate","","",40,[[],["u32",15]]],[11,"total_duration","","",40,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",41,[[],[["usize",15],["option",4]]]],[11,"channels","","",41,[[],["u16",15]]],[11,"sample_rate","","",41,[[],["u32",15]]],[11,"total_duration","","",41,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","","",42,[[],[["usize",15],["option",4]]]],[11,"channels","","",42,[[],["u16",15]]],[11,"sample_rate","","",42,[[],["u32",15]]],[11,"total_duration","","",42,[[],[["duration",3],["option",4]]]],[11,"current_frame_len","rodio::static_buffer","",6,[[],[["usize",15],["option",4]]]],[11,"channels","","",6,[[],["u16",15]]],[11,"sample_rate","","",6,[[],["u32",15]]],[11,"total_duration","","",6,[[],[["duration",3],["option",4]]]],[11,"drop","rodio","",13,[[]]],[11,"from","","",11,[[["decodererror",4]]]],[11,"from","","",12,[[["playstreamerror",4]]]],[11,"next","rodio::buffer","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","rodio::decoder","",1,[[],[["option",4],["i16",15]]]],[11,"size_hint","","",1,[[]]],[11,"next","","",17,[[],[["option",4],["i16",15]]]],[11,"size_hint","","",17,[[]]],[11,"next","rodio::dynamic_mixer","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","rodio::queue","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","rodio::source","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],[["option",4],["f32",15]]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"next","","",35,[[],[["option",4],["f32",15]]]],[11,"next","","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"next","","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"next","","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"next","","",39,[[],["option",4]]],[11,"size_hint","","",39,[[]]],[11,"next","","",40,[[],["option",4]]],[11,"next","","",41,[[],["option",4]]],[11,"size_hint","","",41,[[]]],[11,"next","","",42,[[],["option",4]]],[11,"next","rodio::static_buffer","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"clone","rodio","",16,[[],["outputstreamhandle",3]]],[11,"clone","rodio::decoder","",2,[[],["decodererror",4]]],[11,"clone","rodio::source","",20,[[],["amplify",3]]],[11,"clone","","",21,[[],["bltfilter",3]]],[11,"clone","","",22,[[],["buffered",3]]],[11,"clone","","",23,[[],["channelvolume",3]]],[11,"clone","","",24,[[],["delay",3]]],[11,"clone","","",25,[[],["done",3]]],[11,"clone","","",26,[[],["empty",3]]],[11,"clone","","",27,[[],["fadein",3]]],[11,"clone","","",29,[[],["fromiter",3]]],[11,"clone","","",30,[[],["mix",3]]],[11,"clone","","",31,[[],["pausable",3]]],[11,"clone","","",32,[[],["periodicaccess",3]]],[11,"clone","","",33,[[],["repeat",3]]],[11,"clone","","",34,[[],["samplesconverter",3]]],[11,"clone","","",35,[[],["sinewave",3]]],[11,"clone","","",36,[[],["skipduration",3]]],[11,"clone","","",37,[[],["spatial",3]]],[11,"clone","","",38,[[],["speed",3]]],[11,"clone","","",39,[[],["stoppable",3]]],[11,"clone","","",40,[[],["takeduration",3]]],[11,"clone","","",41,[[],["uniformsourceiterator",3]]],[11,"clone","","",42,[[],["zero",3]]],[11,"clone","rodio::static_buffer","",6,[[],["staticsamplesbuffer",3]]],[11,"default","rodio::source","",26,[[]]],[11,"fmt","rodio","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rodio::decoder","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rodio::source","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","rodio","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rodio::decoder","",2,[[["formatter",3]],["result",6]]],[11,"source","rodio","",11,[[],[["option",4],["error",8]]]],[11,"source","","",12,[[],[["option",4],["error",8]]]],[11,"description","rodio::decoder","",2,[[],["str",15]]],[11,"try_new","rodio","Builds a new <code>Sink</code>, beginning playback on a stream.",13,[[["outputstreamhandle",3]],[["sink",3],["playerror",4],["result",4]]]],[11,"new_idle","","Builds a new <code>Sink</code>.",13,[[]]],[11,"append","","Appends a sound to the queue of sounds to play.",13,[[]]],[11,"volume","","Gets the volume of the sound.",13,[[],["f32",15]]],[11,"set_volume","","Changes the volume of the sound.",13,[[["f32",15]]]],[11,"play","","Resumes playback of a paused sink.",13,[[]]],[11,"pause","","Pauses playback of this sink.",13,[[]]],[11,"is_paused","","Gets if a sink is paused",13,[[],["bool",15]]],[11,"stop","","Stops the sink by emptying the queue.",13,[[]]],[11,"detach","","Destroys the sink without stopping the sounds that are …",13,[[]]],[11,"sleep_until_end","","Sleeps the current thread until the sound ends.",13,[[]]],[11,"empty","","Returns true if this sink has no more sounds to play.",13,[[],["bool",15]]],[11,"len","","Returns the number of sounds currently in the queue.",13,[[],["usize",15]]],[11,"try_new","","Builds a new <code>SpatialSink</code>.",14,[[["outputstreamhandle",3]],[["spatialsink",3],["playerror",4],["result",4]]]],[11,"set_emitter_position","","Sets the position of the sound emitter in 3 dimensional …",14,[[]]],[11,"set_left_ear_position","","Sets the position of the left ear in 3 dimensional space.",14,[[]]],[11,"set_right_ear_position","","Sets the position of the right ear in 3 dimensional space.",14,[[]]],[11,"append","","Appends a sound to the queue of sounds to play.",14,[[]]],[11,"volume","","The value <code>1.0</code> is the \\\"normal\\\" volume (unfiltered input). …",14,[[],["f32",15]]],[11,"set_volume","","Changes the volume of the sound.",14,[[["f32",15]]]],[11,"play","","Resumes playback of a paused sound.",14,[[]]],[11,"pause","","Pauses playback of this sink.",14,[[]]],[11,"is_paused","","Gets if a sound is paused",14,[[],["bool",15]]],[11,"stop","","Stops the sink by emptying the queue.",14,[[]]],[11,"detach","","Destroys the sink without stopping the sounds that are …",14,[[]]],[11,"sleep_until_end","","Sleeps the current thread until the sound ends.",14,[[]]],[11,"empty","","Returns true if this sink has no more sounds to play.",14,[[],["bool",15]]],[11,"try_from_device","","Returns a new stream & handle using the given output …",15,[[["device",3]],[["result",4],["streamerror",4]]]],[11,"try_default","","Return a new stream & handle using the default output …",15,[[],[["result",4],["streamerror",4]]]],[11,"play_raw","","Plays a source with a device until it ends.",16,[[],[["result",4],["playerror",4]]]],[11,"play_once","","Plays a sound once. Returns a <code>Sink</code> that can be used to …",16,[[],[["sink",3],["playerror",4],["result",4]]]],[11,"set_factor","rodio::source","Modifies the amplification factor.",20,[[["f32",15]]]],[11,"inner","","Returns a reference to the inner source.",20,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",20,[[]]],[11,"into_inner","","Returns the inner source.",20,[[]]],[11,"to_low_pass","","Modifies this filter so that it becomes a low-pass filter.",21,[[["u32",15]]]],[11,"inner","","Returns a reference to the inner source.",21,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",21,[[]]],[11,"into_inner","","Returns the inner source.",21,[[]]],[11,"new","","",23,[[["vec",3],["f32",15]],["channelvolume",3]]],[11,"set_volume","","Sets the volume for a given channel number.  Will panic …",23,[[["usize",15],["f32",15]]]],[11,"inner","","Returns a reference to the inner source.",23,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",23,[[]]],[11,"into_inner","","Returns the inner source.",23,[[]]],[11,"inner","","Returns a reference to the inner source.",24,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",24,[[]]],[11,"into_inner","","Returns the inner source.",24,[[]]],[11,"new","","",25,[[["atomicusize",3],["arc",3]],["done",3]]],[11,"inner","","Returns a reference to the inner source.",25,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",25,[[]]],[11,"into_inner","","Returns the inner source.",25,[[]]],[11,"new","","",26,[[],["empty",3]]],[11,"inner","","Returns a reference to the inner source.",27,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",27,[[]]],[11,"into_inner","","Returns the inner source.",27,[[]]],[11,"set_paused","","Sets whether the filter applies.",31,[[["bool",15]]]],[11,"inner","","Returns a reference to the inner source.",31,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",31,[[]]],[11,"into_inner","","Returns the inner source.",31,[[]]],[11,"inner","","Returns a reference to the inner source.",32,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",32,[[]]],[11,"into_inner","","Returns the inner source.",32,[[]]],[11,"new","","",34,[[],["samplesconverter",3]]],[11,"inner","","Returns a reference to the inner source.",34,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",34,[[]]],[11,"into_inner","","Returns the inner source.",34,[[]]],[11,"new","","The frequency of the sine.",35,[[["u32",15]],["sinewave",3]]],[11,"inner","","Returns a reference to the inner source.",36,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",36,[[]]],[11,"into_inner","","Returns the inner source.",36,[[]]],[11,"new","","",37,[[],["spatial",3]]],[11,"set_positions","","Sets the position of the emitter and ears in the 3D world.",37,[[]]],[11,"inner","","Returns a reference to the inner source.",38,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",38,[[]]],[11,"into_inner","","Returns the inner source.",38,[[]]],[11,"stop","","Stops the sound.",39,[[]]],[11,"inner","","Returns a reference to the inner source.",39,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",39,[[]]],[11,"into_inner","","Returns the inner source.",39,[[]]],[11,"inner","","Returns a reference to the inner source.",40,[[]]],[11,"inner_mut","","Returns a mutable reference to the inner source.",40,[[]]],[11,"into_inner","","Returns the inner source.",40,[[]]],[11,"set_filter_fadeout","","",40,[[]]],[11,"clear_filter","","",40,[[]]],[11,"new","","",41,[[["u32",15],["u16",15]],["uniformsourceiterator",3]]],[11,"new","","",42,[[["u32",15],["u16",15]],["zero",3]]],[11,"channels","rodio","",45,[[],["u16",15]]],[11,"sample_rate","","",45,[[],["samplerate",3]]],[11,"buffer_size","","",45,[[],["supportedbuffersize",4]]],[11,"sample_format","","",45,[[],["sampleformat",4]]],[11,"config","","",45,[[],["streamconfig",3]]]],"p":[[3,"SamplesBuffer"],[3,"Decoder"],[4,"DecoderError"],[3,"DynamicMixerController"],[3,"SourcesQueueInput"],[8,"Source"],[3,"StaticSamplesBuffer"],[8,"DeviceTrait"],[4,"DevicesError"],[13,"BackendSpecific"],[8,"Sample"],[4,"PlayError"],[4,"StreamError"],[3,"Sink"],[3,"SpatialSink"],[3,"OutputStream"],[3,"OutputStreamHandle"],[3,"LoopedDecoder"],[3,"DynamicMixer"],[3,"SourcesQueueOutput"],[3,"Amplify"],[3,"BltFilter"],[3,"Buffered"],[3,"ChannelVolume"],[3,"Delay"],[3,"Done"],[3,"Empty"],[3,"FadeIn"],[3,"FromFactoryIter"],[3,"FromIter"],[3,"Mix"],[3,"Pausable"],[3,"PeriodicAccess"],[3,"Repeat"],[3,"SamplesConverter"],[3,"SineWave"],[3,"SkipDuration"],[3,"Spatial"],[3,"Speed"],[3,"Stoppable"],[3,"TakeDuration"],[3,"UniformSourceIterator"],[3,"Zero"],[3,"Device"],[3,"Devices"],[3,"SupportedStreamConfig"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str",15]],["demangle",3]]],[3,"TryDemangleError","","Error returned from the <code>try_demangle</code> function below when …",null,null],[5,"try_demangle","","The same as <code>demangle</code>, except return an <code>Err</code> if the string …",null,[[["str",15]],[["result",4],["demangle",3],["trydemangleerror",3]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[],["str",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"sampitor":{"doc":"","i":[[0,"app","sampitor","",null,null],[3,"App","sampitor::app","Main runner for Sampitor application.",null,null],[11,"try_new","","Attempt to generate a new App.",0,[[["pathbuf",3]],["result",6]]],[11,"run","","Loop and wait for user keyboard input.",0,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"App"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","i":[[8,"Strategy","scopeguard","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return <code>true</code> if the guard’s associated code should run …",0,[[],["bool",15]]],[4,"Always","","Always run on scope exit.",null,null],[3,"ScopeGuard","","<code>ScopeGuard</code> is a scope guard that may own a protected …",null,null],[11,"with_strategy","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without …",1,[[]]],[5,"guard","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …",null,[[],[["scopeguard",3],["always",4]]]],[14,"defer","","Macro to create a <code>ScopeGuard</code> (always run).",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"should_run","","",2,[[],["bool",15]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[["str",15]],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BytesDeserializer","","A deserializer holding a <code>&[u8]</code>. Always calls […",null,null],[11,"new","","Create a new deserializer from the given bytes.",1,[[]]],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given …",2,[[]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",3,[[]]],[11,"end","","Check for remaining elements after passing a …",3,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",4,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",5,[[]]],[11,"end","","Check for remaining elements after passing a …",5,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",6,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",7,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",7,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",7,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",7,[[["usize",15],["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",7,[[["str",15]]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",7,[[["str",15]]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",7,[[["str",15]]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",7,[[["str",15]]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",8,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",8,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",8,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",8,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",8,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",8,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",8,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",8,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",8,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",8,null],[13,"Seq","","The input contained a sequence that was not expected.",8,null],[13,"Map","","The input contained a map that was not expected.",8,null],[13,"Enum","","The input contained an enum that was not expected.",8,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",8,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",8,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",8,null],[13,"StructVariant","","The input contained a struct variant that was not …",8,null],[13,"Other","","A message stating what uncategorized thing the input …",8,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",11,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects …",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[["bool",15]],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",13,[[["i8",15]],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",13,[[["i16",15]],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",13,[[["i32",15]],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",13,[[["i64",15]],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",13,[[["i128",15]],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",13,[[["u8",15]],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",13,[[["u16",15]],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",13,[[["u32",15]],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",13,[[["u64",15]],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",13,[[["u128",15]],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",13,[[["f32",15]],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",13,[[["f64",15]],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",13,[[["char",15]],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",13,[[["str",15]],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",13,[[["str",15]],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",13,[[["vec",3],["u8",15]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",14,[[],[["usize",15],["option",4]]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["option",4],["result",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",15,[[],[["usize",15],["option",4]]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",16,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[["usize",15]],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",19,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",28,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"fmt","serde::de","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",50,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",30,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",31,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",32,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",33,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",34,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",35,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",36,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",37,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",38,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",39,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",40,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",41,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",42,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",43,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",44,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",45,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[["str",15]],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",1,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",2,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",3,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",4,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[["usize",15]],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",5,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",50,[[["bool",15]],["result",4]]],[11,"visit_i64","","",50,[[["i64",15]],["result",4]]],[11,"visit_i128","","",50,[[["i128",15]],["result",4]]],[11,"visit_u64","","",50,[[["u64",15]],["result",4]]],[11,"visit_u128","","",50,[[["u128",15]],["result",4]]],[11,"visit_f64","","",50,[[["f64",15]],["result",4]]],[11,"visit_str","","",50,[[["str",15]],["result",4]]],[11,"visit_none","","",50,[[],["result",4]]],[11,"visit_some","","",50,[[],["result",4]]],[11,"visit_newtype_struct","","",50,[[],["result",4]]],[11,"visit_unit","","",50,[[],["result",4]]],[11,"visit_seq","","",50,[[],["result",4]]],[11,"visit_map","","",50,[[],["result",4]]],[11,"visit_bytes","","",50,[[],["result",4]]],[11,"visit_enum","","",50,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["result",4],["option",4]]]],[11,"size_hint","","",3,[[],[["usize",15],["option",4]]]],[11,"next_element_seed","","",5,[[],[["option",4],["result",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"next_key_seed","","",5,[[],[["option",4],["result",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["option",4],["result",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",50,[[],["ignoredany",3]]],[11,"clone","","",8,[[],["unexpected",4]]],[11,"default","","",50,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]],["bool",15]]],[11,"ne","","",29,[[["error",3]],["bool",15]]],[11,"eq","serde::de","",8,[[["unexpected",4]],["bool",15]]],[11,"ne","","",8,[[["unexpected",4]],["bool",15]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[],["str",15]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"sharded_slab":{"doc":"A lock-free concurrent slab.","i":[[0,"implementation","sharded_slab","Notes on <code>sharded-slab</code>\'s implementation and design.",null,null],[0,"pool","","A lock-free concurrent object pool.",null,null],[3,"Pool","sharded_slab::pool","A lock-free concurrent object pool.",null,null],[3,"Ref","","A guard that allows access to an object in a pool.",null,null],[3,"RefMut","","A guard that allows exclusive mutable access to an object …",null,null],[3,"OwnedRef","","An owned guard that allows shared immutable access to an …",null,null],[3,"OwnedRefMut","","An owned guard that allows exclusive, mutable access to …",null,null],[11,"new","","Returns a new <code>Pool</code> with the default configuration …",0,[[]]],[11,"new_with_config","","Returns a new <code>Pool</code> with the provided configuration …",0,[[],[["config",8],["pool",3]]]],[18,"USED_BITS","","The number of bits in each index which are used by the …",0,null],[11,"create","","Creates a new object in the pool, returning an <code>RefMut</code> …",0,[[],[["option",4],["refmut",3]]]],[11,"create_owned","","Creates a new object in the pool, returning an <code>OwnedRefMut</code>…",0,[[["arc",3]],[["option",4],["ownedrefmut",3]]]],[11,"create_with","","Creates a new object in the pool with the provided …",0,[[],[["usize",15],["option",4]]]],[11,"get","","Return a borrowed reference to the value associated with …",0,[[["usize",15]],[["option",4],["ref",3]]]],[11,"get_owned","","Return an owned reference to the value associated with …",0,[[["usize",15],["arc",3]],[["ownedref",3],["option",4]]]],[11,"clear","","Remove the value using the storage associated with the …",0,[[["usize",15]],["bool",15]]],[11,"key","","Returns the key used to access this guard",1,[[],["usize",15]]],[11,"key","","Returns the key used to access the guard.",2,[[],["usize",15]]],[11,"downgrade","","Downgrades the mutable guard to an immutable guard, …",2,[[],["ref",3]]],[11,"key","","Returns the key used to access this guard",3,[[],["usize",15]]],[11,"key","","Returns the key used to access this guard",4,[[],["usize",15]]],[11,"downgrade","","Downgrades the owned mutable guard to an owned immutable …",4,[[],["ownedref",3]]],[8,"Config","sharded_slab","Configuration parameters which can be overridden to tune …",null,null],[18,"MAX_THREADS","","The maximum number of threads which can access the slab.",5,null],[18,"MAX_PAGES","","The maximum number of pages in each shard in the slab.",5,null],[18,"INITIAL_PAGE_SIZE","","The size of the first page in each shard.",5,null],[18,"RESERVED_BITS","","Sets a number of high-order bits in each index which are …",5,null],[3,"DefaultConfig","","Default slab configuration values.",null,null],[8,"Clear","","Trait implemented by types which can be cleared in place, …",null,null],[10,"clear","","Clear all data in <code>self</code>, retaining the allocated capacithy.",6,[[]]],[3,"Pool","","A lock-free concurrent object pool.",null,null],[3,"Slab","","A sharded slab.",null,null],[3,"Entry","","A handle that allows access to an object in a slab.",null,null],[3,"VacantEntry","","A handle to a vacant entry in a <code>Slab</code>.",null,null],[3,"OwnedEntry","","An owned guard that allows access to an object in a <code>S.ab</code>.",null,null],[11,"new","","Returns a new slab with the default configuration …",7,[[]]],[11,"new_with_config","","Returns a new slab with the provided configuration …",7,[[],[["config",8],["slab",3]]]],[18,"USED_BITS","","The number of bits in each index which are used by the …",7,null],[11,"insert","","Inserts a value into the slab, returning a key that can …",7,[[],[["usize",15],["option",4]]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further …",7,[[],[["vacantentry",3],["option",4]]]],[11,"remove","","Remove the value associated with the given key from the …",7,[[["usize",15]],["bool",15]]],[11,"take","","Removes the value associated with the given key from the …",7,[[["usize",15]],["option",4]]],[11,"get","","Return a reference to the value associated with the given …",7,[[["usize",15]],[["option",4],["entry",3]]]],[11,"get_owned","","Return an owned reference to the value associated with …",7,[[["usize",15],["arc",3]],[["option",4],["ownedentry",3]]]],[11,"contains","","Returns <code>true</code> if the slab contains a value for the given …",7,[[["usize",15]],["bool",15]]],[11,"unique_iter","","Returns an iterator over all the items in the slab.",7,[[],["uniqueiter",3]]],[11,"key","","Returns the key used to access the guard.",8,[[],["usize",15]]],[11,"insert","","Insert a value in the entry.",9,[[]]],[11,"key","","Return the key associated with this entry.",9,[[],["usize",15]]],[11,"key","","Returns the key used to access this guard",10,[[],["usize",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","sharded_slab::pool","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","sharded_slab","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","sharded_slab::pool","",1,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"drop","sharded_slab","",8,[[]]],[11,"drop","","",10,[[]]],[11,"clone","","",11,[[],["defaultconfig",3]]],[11,"default","","",0,[[]]],[11,"default","","",7,[[]]],[11,"eq","sharded_slab::pool","",1,[[],["bool",15]]],[11,"eq","","",2,[[],["bool",15]]],[11,"eq","","",3,[[],["bool",15]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","sharded_slab","",8,[[],["bool",15]]],[11,"eq","","",10,[[],["bool",15]]],[11,"deref","sharded_slab::pool","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"deref","sharded_slab","",8,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","sharded_slab::pool","",2,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","sharded_slab","",0,[[["formatter",3]],["result",6]]],[11,"fmt","sharded_slab::pool","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sharded_slab","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[18,"MAX_THREADS","","The maximum number of threads which can access the slab.",5,null],[18,"MAX_PAGES","","The maximum number of pages in each shard in the slab.",5,null],[18,"INITIAL_PAGE_SIZE","","The size of the first page in each shard.",5,null],[18,"RESERVED_BITS","","Sets a number of high-order bits in each index which are …",5,null]],"p":[[3,"Pool"],[3,"Ref"],[3,"RefMut"],[3,"OwnedRef"],[3,"OwnedRefMut"],[8,"Config"],[8,"Clear"],[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"OwnedEntry"],[3,"DefaultConfig"]]},\
"signal_hook":{"doc":"Library for easier and safe Unix signal handling","i":[[0,"cleanup","signal_hook","Cleaning up signals.",null,null],[5,"cleanup_raw","signal_hook::cleanup","Resets the signal handler to the default one.",null,[[["c_int",6]],["sighandler_t",6]]],[5,"cleanup_signal","","Resets the signal handler to the default one and removes …",null,[[["c_int",6]],[["result",4],["error",3]]]],[5,"register","","Register a cleanup after receiving a signal.",null,[[["vec",3],["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[0,"flag","signal_hook","Module for actions setting flags.",null,null],[5,"register","signal_hook::flag","Registers an action to set the flag to <code>true</code> whenever the …",null,[[["atomicbool",3],["arc",3],["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"register_usize","","Registers an action to set the flag to the given value …",null,[[["usize",15],["arc",3],["atomicusize",3],["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[0,"iterator","signal_hook","An iterator over incoming signals.",null,null],[3,"Signals","signal_hook::iterator","The main structure of the module, representing interest …",null,null],[11,"new","","Creates the <code>Signals</code> structure.",0,[[],[["result",4],["error",3]]]],[11,"add_signal","","Registers another signal to the set watched by this […",0,[[["c_int",6]],[["result",4],["error",3]]]],[11,"pending","","Returns an iterator of already received signals.",0,[[],["pending",3]]],[11,"wait","","Waits for some signals to be available and returns an …",0,[[],["pending",3]]],[11,"forever","","Returns an infinite iterator over arriving signals.",0,[[],["forever",3]]],[11,"is_closed","","Is it closed?",0,[[],["bool",15]]],[11,"close","","Closes the instance.",0,[[]]],[3,"Pending","","The iterator of one batch of signals.",null,null],[3,"Forever","","The infinite iterator of signals.",null,null],[0,"pipe","signal_hook","Module with the self-pipe pattern.",null,null],[5,"register_raw","signal_hook::pipe","Registers a write to a self-pipe whenever there\'s the …",null,[[["rawfd",6],["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"register","","Registers a write to a self-pipe whenever there\'s the …",null,[[["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[17,"SIGABRT","signal_hook","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTERM","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGWINCH","","",null,null],[5,"register","","Registers an arbitrary action for the given signal.",null,[[["i32",15]],[["result",4],["sigid",3],["error",3]]]],[5,"unregister","","Removes a previously installed action.",null,[[["sigid",3]],["bool",15]]],[3,"SigId","","An ID of registered action.",null,null],[17,"FORBIDDEN","","List of forbidden signals.",null,null],[11,"from","signal_hook::iterator","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","signal_hook","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",3,[[]]],[11,"clone","","",3,[[],["sigid",3]]],[11,"cmp","","",3,[[["sigid",3]],["ordering",4]]],[11,"partial_cmp","","",3,[[["sigid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["sigid",3]],["bool",15]]],[11,"le","","",3,[[["sigid",3]],["bool",15]]],[11,"gt","","",3,[[["sigid",3]],["bool",15]]],[11,"ge","","",3,[[["sigid",3]],["bool",15]]],[11,"eq","","",3,[[["sigid",3]],["bool",15]]],[11,"ne","","",3,[[["sigid",3]],["bool",15]]],[11,"next","signal_hook::iterator","",1,[[],[["c_int",6],["option",4]]]],[11,"next","","",2,[[],[["c_int",6],["option",4]]]],[11,"clone","","",0,[[],["signals",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"register","","",0,[[["registry",3],["token",3],["interest",3]],[["result",4],["error",3]]]],[11,"reregister","","",0,[[["registry",3],["token",3],["interest",3]],[["result",4],["error",3]]]],[11,"deregister","","",0,[[["registry",3]],[["result",4],["error",3]]]]],"p":[[3,"Signals"],[3,"Pending"],[3,"Forever"],[3,"SigId"]]},\
"signal_hook_registry":{"doc":"Backend of the signal-hook crate.","i":[[3,"SigId","signal_hook_registry","An ID of registered action.",null,null],[17,"FORBIDDEN","","List of forbidden signals.",null,null],[5,"register","","Registers an arbitrary action for the given signal.",null,[[["c_int",6]],[["error",3],["result",4],["sigid",3]]]],[5,"register_sigaction","","Register a signal action.",null,[[["c_int",6]],[["error",3],["result",4],["sigid",3]]]],[5,"register_signal_unchecked","","Register a signal action without checking for forbidden …",null,[[["c_int",6]],[["error",3],["result",4],["sigid",3]]]],[5,"register_unchecked","","Register a signal action without checking for forbidden …",null,[[["c_int",6]],[["error",3],["result",4],["sigid",3]]]],[5,"unregister","","Removes a previously installed action.",null,[[["sigid",3]],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["sigid",3]]],[11,"cmp","","",0,[[["sigid",3]],["ordering",4]]],[11,"eq","","",0,[[["sigid",3]],["bool",15]]],[11,"ne","","",0,[[["sigid",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["sigid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["sigid",3]],["bool",15]]],[11,"le","","",0,[[["sigid",3]],["bool",15]]],[11,"gt","","",0,[[["sigid",3]],["bool",15]]],[11,"ge","","",0,[[["sigid",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[3,"SigId"]]},\
"slice_deque":{"doc":"A double-ended queue that <code>Deref</code>s into a slice.","i":[[4,"AllocError","slice_deque","Allocation error.",null,null],[13,"Oom","","The system is Out-of-memory.",0,null],[13,"Other","","Other allocation errors (not out-of-memory).",0,null],[3,"Buffer","","Mirrored memory buffer of length <code>len</code>.",null,null],[3,"SliceDeque","","A double-ended queue that derefs into a slice.",null,null],[11,"new","","Creates a new empty deque.",1,[[]]],[11,"from_raw_parts","","Creates a SliceDeque from its raw components.",1,[[["usize",15]]]],[11,"with_capacity","","Create an empty deque with capacity to hold <code>n</code> elements.",1,[[["usize",15]]]],[11,"capacity","","Returns the number of elements that the deque can hold …",1,[[],["usize",15]]],[11,"len","","Number of elements in the ring buffer.",1,[[],["usize",15]]],[11,"is_full","","Is the ring buffer full ?",1,[[],["bool",15]]],[11,"as_slice","","Extracts a slice containing the entire deque.",1,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire deque.",1,[[]]],[11,"as_slices","","Returns a pair of slices, where the first slice contains …",1,[[]]],[11,"as_mut_slices","","Returns a pair of slices, where the first slice contains …",1,[[]]],[11,"tail_head_slice","","Returns the slice of uninitialized memory between the <code>tail</code>…",1,[[]]],[11,"try_reserve","","Attempts to reserve capacity for inserting at least …",1,[[["usize",15]],[["allocerror",4],["result",4]]]],[11,"reserve","","Reserves capacity for inserting at least <code>additional</code> …",1,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",1,[[["usize",15]]]],[11,"move_head_unchecked","","Moves the deque head by <code>x</code>.",1,[[["isize",15]]]],[11,"move_head","","Moves the deque head by <code>x</code>.",1,[[["isize",15]]]],[11,"move_tail_unchecked","","Moves the deque tail by <code>x</code>.",1,[[["isize",15]]]],[11,"move_tail","","Moves the deque tail by <code>x</code>.",1,[[["isize",15]]]],[11,"steal_from_slice","","Steal the elements from the slice <code>s</code>. You should …",1,[[]]],[11,"append","","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …",1,[[]]],[11,"front","","Provides a reference to the first element, or <code>None</code> if the …",1,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the first element, or <code>None</code>…",1,[[],["option",4]]],[11,"back","","Provides a reference to the last element, or <code>None</code> if the …",1,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the last element, or <code>None</code> …",1,[[],["option",4]]],[11,"try_push_front","","Attempts to prepend <code>value</code> to the deque.",1,[[],["result",4]]],[11,"push_front","","Prepends <code>value</code> to the deque.",1,[[]]],[11,"try_push_back","","Attempts to appends <code>value</code> to the deque.",1,[[],["result",4]]],[11,"push_back","","Appends <code>value</code> to the deque.",1,[[]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",1,[[],["option",4]]],[11,"pop_back","","Removes the last element from the deque and returns it, …",1,[[],["option",4]]],[11,"shrink_to_fit","","Shrinks the capacity of the deque as much as possible.",1,[[]]],[11,"truncate_back","","Shortens the deque by removing excess elements from the …",1,[[["usize",15]]]],[11,"truncate","","Shortens the deque by removing excess elements from the …",1,[[["usize",15]]]],[11,"truncate_front","","Shortens the deque by removing excess elements from the …",1,[[["usize",15]]]],[11,"drain","","Creates a draining iterator that removes the specified …",1,[[],["drain",3]]],[11,"clear","","Removes all values from the deque.",1,[[]]],[11,"swap_remove_back","","Removes the element at <code>index</code> and return it in <code>O(1)</code> by …",1,[[["usize",15]],["option",4]]],[11,"swap_remove_front","","Removes the element at <code>index</code> and returns it in <code>O(1)</code> by …",1,[[["usize",15]],["option",4]]],[11,"insert","","Inserts an <code>element</code> at <code>index</code> within the deque, shifting …",1,[[["usize",15]]]],[11,"remove","","Removes and returns the element at position <code>index</code> within …",1,[[["usize",15]]]],[11,"split_off","","Splits the collection into two at the given index.",1,[[["usize",15]]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the …",1,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the …",1,[[]]],[11,"splice","","Creates a splicing iterator that replaces the specified …",1,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",1,[[],["drainfilter",3]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the …",1,[[]]],[11,"resize","","Modifies the <code>SliceDeque</code> in-place so that <code>len()</code> is equal to…",1,[[["usize",15]]]],[11,"resize_default","","Resizes the <code>SliceDeque</code> in-place so that <code>len</code> is equal to …",1,[[["usize",15]]]],[11,"dedup","","Removes consecutive repeated elements in the deque.",1,[[]]],[11,"remove_item","","Removes the first instance of <code>item</code> from the deque if the …",1,[[],["option",4]]],[3,"Drain","","A draining iterator for <code>SliceDeque<T></code>.",null,null],[3,"IntoIter","","An iterator that moves out of a deque.",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",2,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable …",2,[[]]],[3,"Splice","","A splicing iterator for <code>SliceDeque</code>.",null,null],[3,"DrainFilter","","An iterator produced by calling <code>drain_filter</code> on <code>SliceDeque</code>…",null,null],[14,"sdeq","","Creates a <code>SliceDeque</code> containing the arguments.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"drop","","",1,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",5,[[]]],[11,"drop","","",6,[[]]],[11,"as_mut","","",1,[[]]],[11,"as_ref","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"count","","",2,[[],["usize",15]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",1,[[]]],[11,"eq","","",1,[[["slicedeque",3]],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[["vec",3]],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"partial_cmp","","",1,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[],[["ordering",4],["option",4]]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]],[11,"len","","Number of elements in the buffer.",3,[[],["usize",15]]],[11,"is_empty","","Is the buffer empty?",3,[[],["bool",15]]],[11,"ptr","","Pointer to the first element in the buffer.",3,[[]]],[11,"as_slice","","Interprets contents as a slice.",3,[[]]],[11,"as_mut_slice","","Interprets contents as a mut slice.",3,[[]]],[11,"get","","Interprets content as a slice and access the <code>i</code>-th element.",3,[[["usize",15]]]],[11,"get_mut","","Interprets content as a mut slice and access the <code>i</code>-th …",3,[[["usize",15]]]],[11,"new","","Creates a new empty <code>Buffer</code>.",3,[[]]],[11,"from_raw_parts","","Creates a new empty <code>Buffer</code> from a <code>ptr</code> and a <code>len</code>.",3,[[["usize",15]]]],[11,"size_in_bytes","","Total number of bytes in the buffer.",3,[[["usize",15]],["usize",15]]],[11,"uninitialized","","Create a mirrored buffer containing <code>len</code> <code>T</code>s where the …",3,[[["usize",15]],[["allocerror",4],["result",4]]]]],"p":[[4,"AllocError"],[3,"SliceDeque"],[3,"IntoIter"],[3,"Buffer"],[3,"Drain"],[3,"Splice"],[3,"DrainFilter"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","i":[[4,"CollectionAllocErr","smallvec","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow <code>usize::MAX</code> or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[3,"Drain","smallvec","An iterator that removes the items from a <code>SmallVec</code> and …",null,null],[3,"SmallVec","","A <code>Vec</code>-like container that can store a small number of …",null,null],[11,"new","","Construct an empty vector",2,[[],["smallvec",3]]],[11,"with_capacity","","Construct an empty vector with enough capacity …",2,[[["usize",15]]]],[11,"from_vec","","Construct a new <code>SmallVec</code> from a <code>Vec<A::Item></code>.",2,[[["vec",3]],["smallvec",3]]],[11,"from_buf","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[],["smallvec",3]]],[11,"from_buf_and_len","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[["usize",15]],["smallvec",3]]],[11,"from_buf_and_len_unchecked","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …",2,[[["usize",15],["maybeuninit",19]],["smallvec",3]]],[11,"set_len","","Sets the length of a vector.",2,[[["usize",15]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",2,[[],["usize",15]]],[11,"len","","The number of elements stored in the vector",2,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the vector is empty",2,[[],["bool",15]]],[11,"capacity","","The number of items the vector can hold without …",2,[[],["usize",15]]],[11,"spilled","","Returns <code>true</code> if the data has spilled into a separate …",2,[[],["bool",15]]],[11,"drain","","Creates a draining iterator that removes the specified …",2,[[],["drain",3]]],[11,"push","","Append an item to the vector.",2,[[]]],[11,"pop","","Remove an item from the end of the vector and return it, …",2,[[],["option",4]]],[11,"append","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …",2,[[["smallvec",3]]]],[11,"grow","","Re-allocate to set the capacity to …",2,[[["usize",15]]]],[11,"try_grow","","Re-allocate to set the capacity to …",2,[[["usize",15]],[["result",4],["collectionallocerr",4]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more elements to be …",2,[[["usize",15]]]],[11,"try_reserve","","Reserve capacity for <code>additional</code> more elements to be …",2,[[["usize",15]],[["result",4],["collectionallocerr",4]]]],[11,"reserve_exact","","Reserve the minimum capacity for <code>additional</code> more elements …",2,[[["usize",15]]]],[11,"try_reserve_exact","","Reserve the minimum capacity for <code>additional</code> more elements …",2,[[["usize",15]],[["result",4],["collectionallocerr",4]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",2,[[]]],[11,"truncate","","Shorten the vector, keeping the first <code>len</code> elements and …",2,[[["usize",15]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",2,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",2,[[]]],[11,"swap_remove","","Remove the element at position <code>index</code>, replacing it with …",2,[[["usize",15]]]],[11,"clear","","Remove all elements from the vector.",2,[[]]],[11,"remove","","Remove and return the element at position <code>index</code>, shifting …",2,[[["usize",15]]]],[11,"insert","","Insert an element at position <code>index</code>, shifting all …",2,[[["usize",15]]]],[11,"insert_many","","Insert multiple elements at position <code>index</code>, shifting all …",2,[[["usize",15],["intoiterator",8]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the …",2,[[],["vec",3]]],[11,"into_boxed_slice","","Converts a <code>SmallVec</code> into a <code>Box<[T]></code> without reallocating …",2,[[],["box",3]]],[11,"into_inner","","Convert the SmallVec into an <code>A</code> if possible. Otherwise …",2,[[],["result",4]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["fnmut",8]]]],[11,"dedup","","Removes consecutive duplicate elements.",2,[[]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given …",2,[[]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",2,[[]]],[11,"resize_with","","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …",2,[[["usize",15]]]],[11,"from_raw_parts","","Creates a <code>SmallVec</code> directly from the raw components of …",2,[[["usize",15]],["smallvec",3]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",2,[[]]],[11,"as_mut_ptr","","Returns a raw mutable pointer to the vector\'s buffer.",2,[[]]],[11,"from_slice","","Copy the elements from a slice into a new <code>SmallVec</code>.",2,[[]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position …",2,[[["usize",15]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",2,[[]]],[11,"resize","","Resizes the vector so that its length is equal to <code>len</code>.",2,[[["usize",15]]]],[11,"from_elem","","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.",2,[[["usize",15]]]],[3,"IntoIter","","An iterator that consumes a <code>SmallVec</code> and yields its items …",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable …",3,[[]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array\'s elements.",4,null],[10,"size","","Returns the number of items the array can hold.",4,[[],["usize",15]]],[8,"ToSmallVec","","Convenience trait for constructing a <code>SmallVec</code>",null,null],[10,"to_smallvec","","Construct a new <code>SmallVec</code> from a slice.",5,[[],["smallvec",3]]],[14,"smallvec","","Creates a [<code>SmallVec</code>] containing the arguments.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"from","","",0,[[["layouterr",6]]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"from","","",2,[[["vec",3]],["smallvec",3]]],[11,"from","","",2,[[],["smallvec",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["smallvec",3]],["bool",15]]],[11,"cmp","","",2,[[["smallvec",3]],["ordering",4]]],[11,"partial_cmp","","",2,[[["smallvec",3]],[["option",4],["ordering",4]]]],[11,"drop","","",6,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"index","","",2,[[]]],[11,"index_mut","","",2,[[]]],[11,"hash","","",2,[[]]],[11,"len","","",6,[[],["usize",15]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"from_iter","","",2,[[["intoiterator",8]],["smallvec",3]]],[11,"as_ref","","",2,[[]]],[11,"as_mut","","",2,[[]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"into_iter","","",2,[[]]],[11,"extend","","",2,[[["intoiterator",8]]]],[11,"clone","","",2,[[],["smallvec",3]]],[11,"clone","","",3,[[],["intoiter",3]]],[11,"default","","",2,[[],["smallvec",3]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[3,"SmallVec"],[3,"IntoIter"],[8,"Array"],[8,"ToSmallVec"],[3,"Drain"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[6,"HammingResult","","",null,null],[5,"generic_hamming","","Calculates the number of positions in the two sequences …",null,[[],["hammingresult",6]]],[5,"hamming","","Calculates the number of positions in the two strings …",null,[[["str",15]],["hammingresult",6]]],[5,"generic_jaro","","Calculates the Jaro similarity between two sequences. The …",null,[[],["f64",15]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The …",null,[[["str",15]],["f64",15]]],[5,"generic_jaro_winkler","","Like Jaro but gives a boost to sequences that have a …",null,[[],["f64",15]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common …",null,[[["str",15]],["f64",15]]],[5,"generic_levenshtein","","Calculates the minimum number of insertions, deletions, …",null,[[],["usize",15]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions, …",null,[[["str",15]],["usize",15]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein …",null,[[["str",15]],["f64",15]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions. …",null,[[["str",15]],["usize",15]]],[5,"generic_damerau_levenshtein","","Like optimal string alignment, but substrings can be …",null,[[],["usize",15]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be …",null,[[["str",15]],["usize",15]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the …",null,[[["str",15]],["f64",15]]],[5,"sorensen_dice","","Calculates a Sørensen-Dice similarity distance using …",null,[[["str",15]],["f64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["strsimerror",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]]],"p":[[4,"StrSimError"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[0,"token","syn","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[],["bool",15]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[],["bool",15]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[],["usize",15]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["pair",4],["option",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[],["bool",15]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[],["bool",15]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[["usize",15]]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[11,"visit_abi_mut","","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",111,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",112,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",114,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",114,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",114,[[["peek",8]],["bool",15]]],[11,"peek2","","Looks at the second-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"peek3","","Looks at the third-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",114,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",114,[[],["bool",15]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",114,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",114,[[]]],[11,"error","","Triggers an error at the current position of the parse …",114,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",114,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",114,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",114,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",115,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",115,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",115,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",115,[[["str",15]],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",116,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",116,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",116,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",116,[[["error",3]]]],[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",117,null],[13,"Inner","","",117,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",118,null],[12,"style","","",118,null],[12,"bracket_token","","",118,null],[12,"path","","",118,null],[12,"tokens","","",118,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",119,null],[13,"List","","A structured list within an attribute, like …",119,null],[13,"NameValue","","A name-value pair within an attribute, like …",119,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",120,null],[12,"paren_token","","",120,null],[12,"nested","","",120,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",121,null],[12,"eq_token","","",121,null],[12,"lit","","",121,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",122,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",122,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",123,null],[12,"vis","","Visibility of the field.",123,null],[12,"ident","","Name of the field, if any.",123,null],[12,"colon_token","","",123,null],[12,"ty","","Type of the field.",123,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",124,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",124,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",124,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",125,null],[12,"named","","",125,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",126,null],[12,"unnamed","","",126,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",127,null],[12,"ident","","Name of the variant.",127,null],[12,"fields","","Content stored in the variant.",127,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",127,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",128,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",129,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",130,null],[12,"paren_token","","",130,null],[12,"in_token","","",130,null],[12,"path","","",130,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",131,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",131,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",131,null],[13,"Inherited","","An inherited visibility, which usually means private.",131,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",132,null],[12,"pat","","",132,null],[12,"guard","","",132,null],[12,"fat_arrow_token","","",132,null],[12,"body","","",132,null],[12,"comma","","",132,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",133,null],[12,"member","","Name or index of the field.",133,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",133,null],[12,"expr","","Value of the field.",133,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",134,null],[13,"Const","","A const expression. Must be inside of a block.",134,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",135,null],[12,"colon_token","","",135,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",136,null],[12,"lt_token","","",136,null],[12,"args","","",136,null],[12,"gt_token","","",136,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",137,null],[13,"Closed","","Inclusive at the beginning and end.",137,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",138,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",138,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",138,null],[13,"Async","","An async block: <code>async { ... }</code>.",138,null],[13,"Await","","An await expression: <code>fut.await</code>.",138,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",138,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",138,null],[13,"Box","","A box expression: <code>box f</code>.",138,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",138,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",138,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",138,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",138,null],[13,"Continue","","A <code>continue</code>, with an optional label.",138,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",138,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",138,null],[13,"Group","","An expression contained within invisible delimiters.",138,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",138,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",138,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",138,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",138,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",138,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",138,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",138,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",138,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",138,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",138,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",138,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",138,null],[13,"Repeat","","An array literal constructed from one repeated element: …",138,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",138,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",138,null],[13,"Try","","A try-expression: <code>expr?</code>.",138,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",138,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",138,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",138,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",138,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",138,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",138,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",138,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",138,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",139,null],[12,"bracket_token","","",139,null],[12,"elems","","",139,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"eq_token","","",140,null],[12,"right","","",140,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",141,null],[12,"left","","",141,null],[12,"op","","",141,null],[12,"right","","",141,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",142,null],[12,"async_token","","",142,null],[12,"capture","","",142,null],[12,"block","","",142,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",143,null],[12,"base","","",143,null],[12,"dot_token","","",143,null],[12,"await_token","","",143,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",144,null],[12,"left","","",144,null],[12,"op","","",144,null],[12,"right","","",144,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",145,null],[12,"label","","",145,null],[12,"block","","",145,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",146,null],[12,"box_token","","",146,null],[12,"expr","","",146,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",147,null],[12,"break_token","","",147,null],[12,"label","","",147,null],[12,"expr","","",147,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",148,null],[12,"func","","",148,null],[12,"paren_token","","",148,null],[12,"args","","",148,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",149,null],[12,"expr","","",149,null],[12,"as_token","","",149,null],[12,"ty","","",149,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",150,null],[12,"asyncness","","",150,null],[12,"movability","","",150,null],[12,"capture","","",150,null],[12,"or1_token","","",150,null],[12,"inputs","","",150,null],[12,"or2_token","","",150,null],[12,"output","","",150,null],[12,"body","","",150,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",151,null],[12,"continue_token","","",151,null],[12,"label","","",151,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",152,null],[12,"base","","",152,null],[12,"dot_token","","",152,null],[12,"member","","",152,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",153,null],[12,"label","","",153,null],[12,"for_token","","",153,null],[12,"pat","","",153,null],[12,"in_token","","",153,null],[12,"expr","","",153,null],[12,"body","","",153,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",154,null],[12,"group_token","","",154,null],[12,"expr","","",154,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",155,null],[12,"if_token","","",155,null],[12,"cond","","",155,null],[12,"then_branch","","",155,null],[12,"else_branch","","",155,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",156,null],[12,"expr","","",156,null],[12,"bracket_token","","",156,null],[12,"index","","",156,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",157,null],[12,"let_token","","",157,null],[12,"pat","","",157,null],[12,"eq_token","","",157,null],[12,"expr","","",157,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",158,null],[12,"lit","","",158,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",159,null],[12,"label","","",159,null],[12,"loop_token","","",159,null],[12,"body","","",159,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",160,null],[12,"mac","","",160,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",161,null],[12,"match_token","","",161,null],[12,"expr","","",161,null],[12,"brace_token","","",161,null],[12,"arms","","",161,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",162,null],[12,"receiver","","",162,null],[12,"dot_token","","",162,null],[12,"method","","",162,null],[12,"turbofish","","",162,null],[12,"paren_token","","",162,null],[12,"args","","",162,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",163,null],[12,"paren_token","","",163,null],[12,"expr","","",163,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",164,null],[12,"qself","","",164,null],[12,"path","","",164,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",165,null],[12,"from","","",165,null],[12,"limits","","",165,null],[12,"to","","",165,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",166,null],[12,"and_token","","",166,null],[12,"raw","","",166,null],[12,"mutability","","",166,null],[12,"expr","","",166,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",167,null],[12,"bracket_token","","",167,null],[12,"expr","","",167,null],[12,"semi_token","","",167,null],[12,"len","","",167,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",168,null],[12,"return_token","","",168,null],[12,"expr","","",168,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",169,null],[12,"path","","",169,null],[12,"brace_token","","",169,null],[12,"fields","","",169,null],[12,"dot2_token","","",169,null],[12,"rest","","",169,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",170,null],[12,"expr","","",170,null],[12,"question_token","","",170,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",171,null],[12,"try_token","","",171,null],[12,"block","","",171,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",172,null],[12,"paren_token","","",172,null],[12,"elems","","",172,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",173,null],[12,"expr","","",173,null],[12,"colon_token","","",173,null],[12,"ty","","",173,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",174,null],[12,"op","","",174,null],[12,"expr","","",174,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"unsafe_token","","",175,null],[12,"block","","",175,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",176,null],[12,"label","","",176,null],[12,"while_token","","",176,null],[12,"cond","","",176,null],[12,"body","","",176,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",177,null],[12,"yield_token","","",177,null],[12,"expr","","",177,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",178,null],[12,"span","","",178,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",179,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",179,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",180,null],[12,"lt_token","","",180,null],[12,"lifetimes","","",180,null],[12,"gt_token","","",180,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",181,null],[12,"const_token","","",181,null],[12,"ident","","",181,null],[12,"colon_token","","",181,null],[12,"ty","","",181,null],[12,"eq_token","","",181,null],[12,"default","","",181,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",182,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",182,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",182,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",183,null],[12,"params","","",183,null],[12,"gt_token","","",183,null],[12,"where_clause","","",183,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",184,null],[12,"lifetime","","",184,null],[12,"colon_token","","",184,null],[12,"bounds","","",184,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",185,null],[12,"eq_token","","",185,null],[12,"rhs_ty","","",185,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",186,null],[12,"colon_token","","",186,null],[12,"bounds","","",186,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",187,null],[12,"bounded_ty","","The type being bounded",187,null],[12,"colon_token","","",187,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",187,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",188,null],[12,"modifier","","",188,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",189,null],[13,"Maybe","","",189,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",190,null],[12,"ident","","",190,null],[12,"colon_token","","",190,null],[12,"bounds","","",190,null],[12,"eq_token","","",190,null],[12,"default","","",190,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",191,null],[13,"Lifetime","","",191,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",192,null],[12,"predicates","","",192,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",193,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",193,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",193,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",194,null],[13,"Typed","","A function argument accepted by pattern and type.",194,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",195,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",195,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",195,null],[13,"Macro","","A macro invocation within an extern block.",195,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",195,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",196,null],[12,"vis","","",196,null],[12,"sig","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",197,null],[12,"mac","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"static_token","","",198,null],[12,"mutability","","",198,null],[12,"ident","","",198,null],[12,"colon_token","","",198,null],[12,"ty","","",198,null],[12,"semi_token","","",198,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",199,null],[12,"vis","","",199,null],[12,"type_token","","",199,null],[12,"ident","","",199,null],[12,"semi_token","","",199,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",200,null],[13,"Method","","A method within an impl block.",200,null],[13,"Type","","An associated type within an impl block.",200,null],[13,"Macro","","A macro invocation within an impl block.",200,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",200,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",201,null],[12,"vis","","",201,null],[12,"defaultness","","",201,null],[12,"const_token","","",201,null],[12,"ident","","",201,null],[12,"colon_token","","",201,null],[12,"ty","","",201,null],[12,"eq_token","","",201,null],[12,"expr","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",202,null],[12,"mac","","",202,null],[12,"semi_token","","",202,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"sig","","",203,null],[12,"block","","",203,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",204,null],[12,"vis","","",204,null],[12,"defaultness","","",204,null],[12,"type_token","","",204,null],[12,"ident","","",204,null],[12,"generics","","",204,null],[12,"eq_token","","",204,null],[12,"ty","","",204,null],[12,"semi_token","","",204,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",205,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",205,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",205,null],[13,"Fn","","A free-standing function: …",205,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",205,null],[13,"Impl","","An impl block providing trait or associated items: …",205,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",205,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",205,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",205,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",205,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",205,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",205,null],[13,"TraitAlias","","A trait alias: …",205,null],[13,"Type","","A type alias: …",205,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",205,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",205,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",205,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"const_token","","",206,null],[12,"ident","","",206,null],[12,"colon_token","","",206,null],[12,"ty","","",206,null],[12,"eq_token","","",206,null],[12,"expr","","",206,null],[12,"semi_token","","",206,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"enum_token","","",207,null],[12,"ident","","",207,null],[12,"generics","","",207,null],[12,"brace_token","","",207,null],[12,"variants","","",207,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"extern_token","","",208,null],[12,"crate_token","","",208,null],[12,"ident","","",208,null],[12,"rename","","",208,null],[12,"semi_token","","",208,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",209,null],[12,"vis","","",209,null],[12,"sig","","",209,null],[12,"block","","",209,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",210,null],[12,"abi","","",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",211,null],[12,"defaultness","","",211,null],[12,"unsafety","","",211,null],[12,"impl_token","","",211,null],[12,"generics","","",211,null],[12,"trait_","","Trait this impl implements.",211,null],[12,"self_ty","","The Self type of the impl.",211,null],[12,"brace_token","","",211,null],[12,"items","","",211,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",212,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",212,null],[12,"mac","","",212,null],[12,"semi_token","","",212,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"macro_token","","",213,null],[12,"ident","","",213,null],[12,"rules","","",213,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"mod_token","","",214,null],[12,"ident","","",214,null],[12,"content","","",214,null],[12,"semi","","",214,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"static_token","","",215,null],[12,"mutability","","",215,null],[12,"ident","","",215,null],[12,"colon_token","","",215,null],[12,"ty","","",215,null],[12,"eq_token","","",215,null],[12,"expr","","",215,null],[12,"semi_token","","",215,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"struct_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"fields","","",216,null],[12,"semi_token","","",216,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"unsafety","","",217,null],[12,"auto_token","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"colon_token","","",217,null],[12,"supertraits","","",217,null],[12,"brace_token","","",217,null],[12,"items","","",217,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"trait_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"bounds","","",218,null],[12,"semi_token","","",218,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"type_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"eq_token","","",219,null],[12,"ty","","",219,null],[12,"semi_token","","",219,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"union_token","","",220,null],[12,"ident","","",220,null],[12,"generics","","",220,null],[12,"fields","","",220,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",221,null],[12,"vis","","",221,null],[12,"use_token","","",221,null],[12,"leading_colon","","",221,null],[12,"tree","","",221,null],[12,"semi_token","","",221,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",222,null],[12,"reference","","",222,null],[12,"mutability","","",222,null],[12,"self_token","","",222,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",223,null],[12,"asyncness","","",223,null],[12,"unsafety","","",223,null],[12,"abi","","",223,null],[12,"fn_token","","",223,null],[12,"ident","","",223,null],[12,"generics","","",223,null],[12,"paren_token","","",223,null],[12,"inputs","","",223,null],[12,"variadic","","",223,null],[12,"output","","",223,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",224,null],[13,"Method","","A trait method within the definition of a trait.",224,null],[13,"Type","","An associated type within the definition of a trait.",224,null],[13,"Macro","","A macro invocation within the definition of a trait.",224,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",224,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"const_token","","",225,null],[12,"ident","","",225,null],[12,"colon_token","","",225,null],[12,"ty","","",225,null],[12,"default","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"mac","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"sig","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",228,null],[12,"type_token","","",228,null],[12,"ident","","",228,null],[12,"generics","","",228,null],[12,"colon_token","","",228,null],[12,"bounds","","",228,null],[12,"default","","",228,null],[12,"semi_token","","",228,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",229,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",230,null],[12,"items","","",230,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",231,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",232,null],[12,"colon2_token","","",232,null],[12,"tree","","",232,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",233,null],[12,"as_token","","",233,null],[12,"rename","","",233,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",234,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",234,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",234,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",234,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",234,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",235,null],[12,"attrs","","",235,null],[12,"items","","",235,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",236,null],[12,"ident","","",236,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",237,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",237,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",237,null],[13,"Char","","A character literal: <code>\'a\'</code>.",237,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",237,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",237,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",237,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",237,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",238,null],[12,"span","","",238,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",239,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",239,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",240,null],[12,"bang_token","","",240,null],[12,"delimiter","","",240,null],[12,"tokens","","",240,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",241,null],[13,"Brace","","",241,null],[13,"Bracket","","",241,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",242,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",243,null],[12,"brace_token","","",243,null],[12,"variants","","",243,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",244,null],[12,"fields","","",244,null],[12,"semi_token","","",244,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",245,null],[12,"fields","","",245,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",246,null],[12,"vis","","Visibility of the struct or enum.",246,null],[12,"ident","","Name of the struct or enum.",246,null],[12,"generics","","Generics required to complete the definition.",246,null],[12,"data","","Data within the struct or enum.",246,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",247,null],[13,"Sub","","The <code>-</code> operator (subtraction)",247,null],[13,"Mul","","The <code>*</code> operator (multiplication)",247,null],[13,"Div","","The <code>/</code> operator (division)",247,null],[13,"Rem","","The <code>%</code> operator (modulus)",247,null],[13,"And","","The <code>&&</code> operator (logical and)",247,null],[13,"Or","","The <code>||</code> operator (logical or)",247,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",247,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",247,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",247,null],[13,"Shl","","The <code><<</code> operator (shift left)",247,null],[13,"Shr","","The <code>>></code> operator (shift right)",247,null],[13,"Eq","","The <code>==</code> operator (equality)",247,null],[13,"Lt","","The <code><</code> operator (less than)",247,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",247,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",247,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",247,null],[13,"Gt","","The <code>></code> operator (greater than)",247,null],[13,"AddEq","","The <code>+=</code> operator",247,null],[13,"SubEq","","The <code>-=</code> operator",247,null],[13,"MulEq","","The <code>*=</code> operator",247,null],[13,"DivEq","","The <code>/=</code> operator",247,null],[13,"RemEq","","The <code>%=</code> operator",247,null],[13,"BitXorEq","","The <code>^=</code> operator",247,null],[13,"BitAndEq","","The <code>&=</code> operator",247,null],[13,"BitOrEq","","The <code>|=</code> operator",247,null],[13,"ShlEq","","The <code><<=</code> operator",247,null],[13,"ShrEq","","The <code>>>=</code> operator",247,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",248,null],[13,"Not","","The <code>!</code> operator for logical inversion",248,null],[13,"Neg","","The <code>-</code> operator for negation",248,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",249,null],[12,"stmts","","Statements in a block",249,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",250,null],[12,"let_token","","",250,null],[12,"pat","","",250,null],[12,"init","","",250,null],[12,"semi_token","","",250,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",251,null],[13,"Item","","An item definition.",251,null],[13,"Expr","","Expr without trailing semicolon.",251,null],[13,"Semi","","Expression with trailing semicolon.",251,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",252,null],[12,"name","","",252,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",253,null],[12,"name","","",253,null],[12,"ty","","",253,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",254,null],[13,"Type","","A particular type is returned.",254,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",255,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",255,null],[13,"Group","","A type contained within invisible delimiters.",255,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",255,null],[13,"Infer","","Indication that a type should be inferred by the …",255,null],[13,"Macro","","A macro in the type position.",255,null],[13,"Never","","The never type: <code>!</code>.",255,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",255,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",255,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",255,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",255,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",255,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",255,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",255,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",255,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",256,null],[12,"elem","","",256,null],[12,"semi_token","","",256,null],[12,"len","","",256,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",257,null],[12,"unsafety","","",257,null],[12,"abi","","",257,null],[12,"fn_token","","",257,null],[12,"paren_token","","",257,null],[12,"inputs","","",257,null],[12,"variadic","","",257,null],[12,"output","","",257,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",258,null],[12,"elem","","",258,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",259,null],[12,"bounds","","",259,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",260,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",261,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",262,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",263,null],[12,"elem","","",263,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",264,null],[12,"path","","",264,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",265,null],[12,"const_token","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",266,null],[12,"lifetime","","",266,null],[12,"mutability","","",266,null],[12,"elem","","",266,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",267,null],[12,"elem","","",267,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",268,null],[12,"bounds","","",268,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",269,null],[12,"elems","","",269,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",270,null],[12,"dots","","",270,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",271,null],[12,"member","","",271,null],[12,"colon_token","","",271,null],[12,"pat","","",271,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",272,null],[13,"Ident","","A pattern that binds a new variable: …",272,null],[13,"Lit","","A literal pattern: <code>0</code>.",272,null],[13,"Macro","","A macro in pattern position.",272,null],[13,"Or","","A pattern that matches any one of a set of cases.",272,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",272,null],[13,"Range","","A range pattern: <code>1..=2</code>.",272,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",272,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",272,null],[13,"Slice","","A dynamically sized slice pattern: …",272,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",272,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",272,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",272,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",272,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",272,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",272,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",273,null],[12,"box_token","","",273,null],[12,"pat","","",273,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",274,null],[12,"by_ref","","",274,null],[12,"mutability","","",274,null],[12,"ident","","",274,null],[12,"subpat","","",274,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",275,null],[12,"expr","","",275,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",276,null],[12,"mac","","",276,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",277,null],[12,"leading_vert","","",277,null],[12,"cases","","",277,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",278,null],[12,"qself","","",278,null],[12,"path","","",278,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",279,null],[12,"lo","","",279,null],[12,"limits","","",279,null],[12,"hi","","",279,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",280,null],[12,"and_token","","",280,null],[12,"mutability","","",280,null],[12,"pat","","",280,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",281,null],[12,"dot2_token","","",281,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",282,null],[12,"bracket_token","","",282,null],[12,"elems","","",282,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",283,null],[12,"path","","",283,null],[12,"brace_token","","",283,null],[12,"fields","","",283,null],[12,"dot2_token","","",283,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",284,null],[12,"paren_token","","",284,null],[12,"elems","","",284,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",285,null],[12,"path","","",285,null],[12,"pat","","",285,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",286,null],[12,"pat","","",286,null],[12,"colon_token","","",286,null],[12,"ty","","",286,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",287,null],[12,"underscore_token","","",287,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",288,null],[12,"lt_token","","",288,null],[12,"args","","",288,null],[12,"gt_token","","",288,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",289,null],[12,"eq_token","","",289,null],[12,"ty","","",289,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",290,null],[12,"colon_token","","",290,null],[12,"bounds","","",290,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",291,null],[13,"Type","","A type argument.",291,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",291,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",291,null],[13,"Const","","A const expression. Must be inside of a block.",291,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",292,null],[12,"inputs","","<code>(A, B)</code>",292,null],[12,"output","","<code>C</code>",292,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",293,null],[12,"segments","","",293,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",294,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",294,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",294,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",295,null],[12,"arguments","","",295,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",296,null],[12,"ty","","",296,null],[12,"position","","",296,null],[12,"as_token","","",296,null],[12,"gt_token","","",296,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[["str",15]],[["parse",8],["result",6]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str",15]],[["result",6],["file",3]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"to_string","","",297,[[],["string",3]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",306,[[],["span",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"to_string","","",306,[[],["string",3]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",295,[[],["span",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"to_owned","","",311,[[]]],[11,"clone_into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"into_iter","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"fmt","syn","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",297,[[]]],[11,"partial_cmp","","",297,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",297,[[],["ident",3]]],[11,"cmp","","",297,[[["ident",3]],["ordering",4]]],[11,"eq","","",297,[[],["bool",15]]],[11,"eq","","",297,[[["ident",3]],["bool",15]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"span","","",297,[[],[["option",4],["span",3]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"peek","","",236,[[["cursor",3]],["bool",15]]],[11,"display","","",236,[[],["str",15]]],[11,"peek","","",237,[[["cursor",3]],["bool",15]]],[11,"display","","",237,[[],["str",15]]],[11,"peek","","",301,[[["cursor",3]],["bool",15]]],[11,"display","","",301,[[],["str",15]]],[11,"peek","","",302,[[["cursor",3]],["bool",15]]],[11,"display","","",302,[[],["str",15]]],[11,"peek","","",303,[[["cursor",3]],["bool",15]]],[11,"display","","",303,[[],["str",15]]],[11,"peek","","",304,[[["cursor",3]],["bool",15]]],[11,"display","","",304,[[],["str",15]]],[11,"peek","","",305,[[["cursor",3]],["bool",15]]],[11,"display","","",305,[[],["str",15]]],[11,"peek","","",306,[[["cursor",3]],["bool",15]]],[11,"display","","",306,[[],["str",15]]],[11,"peek","","",238,[[["cursor",3]],["bool",15]]],[11,"display","","",238,[[],["str",15]]],[11,"peek","syn::token","",0,[[["cursor",3]],["bool",15]]],[11,"display","","",0,[[],["str",15]]],[11,"peek","","",101,[[["cursor",3]],["bool",15]]],[11,"display","","",101,[[],["str",15]]],[11,"peek","","",99,[[["cursor",3]],["bool",15]]],[11,"display","","",99,[[],["str",15]]],[11,"peek","","",100,[[["cursor",3]],["bool",15]]],[11,"display","","",100,[[],["str",15]]],[11,"peek","","",102,[[["cursor",3]],["bool",15]]],[11,"display","","",102,[[],["str",15]]],[11,"peek","","",1,[[["cursor",3]],["bool",15]]],[11,"display","","",1,[[],["str",15]]],[11,"peek","","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]],[11,"peek","","",13,[[["cursor",3]],["bool",15]]],[11,"display","","",13,[[],["str",15]]],[11,"peek","","",14,[[["cursor",3]],["bool",15]]],[11,"display","","",14,[[],["str",15]]],[11,"peek","","",15,[[["cursor",3]],["bool",15]]],[11,"display","","",15,[[],["str",15]]],[11,"peek","","",16,[[["cursor",3]],["bool",15]]],[11,"display","","",16,[[],["str",15]]],[11,"peek","","",17,[[["cursor",3]],["bool",15]]],[11,"display","","",17,[[],["str",15]]],[11,"peek","","",18,[[["cursor",3]],["bool",15]]],[11,"display","","",18,[[],["str",15]]],[11,"peek","","",19,[[["cursor",3]],["bool",15]]],[11,"display","","",19,[[],["str",15]]],[11,"peek","","",20,[[["cursor",3]],["bool",15]]],[11,"display","","",20,[[],["str",15]]],[11,"peek","","",21,[[["cursor",3]],["bool",15]]],[11,"display","","",21,[[],["str",15]]],[11,"peek","","",22,[[["cursor",3]],["bool",15]]],[11,"display","","",22,[[],["str",15]]],[11,"peek","","",23,[[["cursor",3]],["bool",15]]],[11,"display","","",23,[[],["str",15]]],[11,"peek","","",24,[[["cursor",3]],["bool",15]]],[11,"display","","",24,[[],["str",15]]],[11,"peek","","",25,[[["cursor",3]],["bool",15]]],[11,"display","","",25,[[],["str",15]]],[11,"peek","","",26,[[["cursor",3]],["bool",15]]],[11,"display","","",26,[[],["str",15]]],[11,"peek","","",27,[[["cursor",3]],["bool",15]]],[11,"display","","",27,[[],["str",15]]],[11,"peek","","",28,[[["cursor",3]],["bool",15]]],[11,"display","","",28,[[],["str",15]]],[11,"peek","","",29,[[["cursor",3]],["bool",15]]],[11,"display","","",29,[[],["str",15]]],[11,"peek","","",30,[[["cursor",3]],["bool",15]]],[11,"display","","",30,[[],["str",15]]],[11,"peek","","",31,[[["cursor",3]],["bool",15]]],[11,"display","","",31,[[],["str",15]]],[11,"peek","","",32,[[["cursor",3]],["bool",15]]],[11,"display","","",32,[[],["str",15]]],[11,"peek","","",33,[[["cursor",3]],["bool",15]]],[11,"display","","",33,[[],["str",15]]],[11,"peek","","",34,[[["cursor",3]],["bool",15]]],[11,"display","","",34,[[],["str",15]]],[11,"peek","","",35,[[["cursor",3]],["bool",15]]],[11,"display","","",35,[[],["str",15]]],[11,"peek","","",36,[[["cursor",3]],["bool",15]]],[11,"display","","",36,[[],["str",15]]],[11,"peek","","",37,[[["cursor",3]],["bool",15]]],[11,"display","","",37,[[],["str",15]]],[11,"peek","","",38,[[["cursor",3]],["bool",15]]],[11,"display","","",38,[[],["str",15]]],[11,"peek","","",39,[[["cursor",3]],["bool",15]]],[11,"display","","",39,[[],["str",15]]],[11,"peek","","",40,[[["cursor",3]],["bool",15]]],[11,"display","","",40,[[],["str",15]]],[11,"peek","","",41,[[["cursor",3]],["bool",15]]],[11,"display","","",41,[[],["str",15]]],[11,"peek","","",42,[[["cursor",3]],["bool",15]]],[11,"display","","",42,[[],["str",15]]],[11,"peek","","",43,[[["cursor",3]],["bool",15]]],[11,"display","","",43,[[],["str",15]]],[11,"peek","","",44,[[["cursor",3]],["bool",15]]],[11,"display","","",44,[[],["str",15]]],[11,"peek","","",45,[[["cursor",3]],["bool",15]]],[11,"display","","",45,[[],["str",15]]],[11,"peek","","",46,[[["cursor",3]],["bool",15]]],[11,"display","","",46,[[],["str",15]]],[11,"peek","","",47,[[["cursor",3]],["bool",15]]],[11,"display","","",47,[[],["str",15]]],[11,"peek","","",48,[[["cursor",3]],["bool",15]]],[11,"display","","",48,[[],["str",15]]],[11,"peek","","",49,[[["cursor",3]],["bool",15]]],[11,"display","","",49,[[],["str",15]]],[11,"peek","","",50,[[["cursor",3]],["bool",15]]],[11,"display","","",50,[[],["str",15]]],[11,"peek","","",51,[[["cursor",3]],["bool",15]]],[11,"display","","",51,[[],["str",15]]],[11,"peek","","",52,[[["cursor",3]],["bool",15]]],[11,"display","","",52,[[],["str",15]]],[11,"peek","","",53,[[["cursor",3]],["bool",15]]],[11,"display","","",53,[[],["str",15]]],[11,"peek","","",54,[[["cursor",3]],["bool",15]]],[11,"display","","",54,[[],["str",15]]],[11,"peek","","",55,[[["cursor",3]],["bool",15]]],[11,"display","","",55,[[],["str",15]]],[11,"peek","","",56,[[["cursor",3]],["bool",15]]],[11,"display","","",56,[[],["str",15]]],[11,"peek","","",57,[[["cursor",3]],["bool",15]]],[11,"display","","",57,[[],["str",15]]],[11,"peek","","",58,[[["cursor",3]],["bool",15]]],[11,"display","","",58,[[],["str",15]]],[11,"peek","","",59,[[["cursor",3]],["bool",15]]],[11,"display","","",59,[[],["str",15]]],[11,"peek","","",60,[[["cursor",3]],["bool",15]]],[11,"display","","",60,[[],["str",15]]],[11,"peek","","",61,[[["cursor",3]],["bool",15]]],[11,"display","","",61,[[],["str",15]]],[11,"peek","","",62,[[["cursor",3]],["bool",15]]],[11,"display","","",62,[[],["str",15]]],[11,"peek","","",63,[[["cursor",3]],["bool",15]]],[11,"display","","",63,[[],["str",15]]],[11,"peek","","",64,[[["cursor",3]],["bool",15]]],[11,"display","","",64,[[],["str",15]]],[11,"peek","","",65,[[["cursor",3]],["bool",15]]],[11,"display","","",65,[[],["str",15]]],[11,"peek","","",66,[[["cursor",3]],["bool",15]]],[11,"display","","",66,[[],["str",15]]],[11,"peek","","",67,[[["cursor",3]],["bool",15]]],[11,"display","","",67,[[],["str",15]]],[11,"peek","","",68,[[["cursor",3]],["bool",15]]],[11,"display","","",68,[[],["str",15]]],[11,"peek","","",69,[[["cursor",3]],["bool",15]]],[11,"display","","",69,[[],["str",15]]],[11,"peek","","",70,[[["cursor",3]],["bool",15]]],[11,"display","","",70,[[],["str",15]]],[11,"peek","","",71,[[["cursor",3]],["bool",15]]],[11,"display","","",71,[[],["str",15]]],[11,"peek","","",72,[[["cursor",3]],["bool",15]]],[11,"display","","",72,[[],["str",15]]],[11,"peek","","",73,[[["cursor",3]],["bool",15]]],[11,"display","","",73,[[],["str",15]]],[11,"peek","","",74,[[["cursor",3]],["bool",15]]],[11,"display","","",74,[[],["str",15]]],[11,"peek","","",75,[[["cursor",3]],["bool",15]]],[11,"display","","",75,[[],["str",15]]],[11,"peek","","",76,[[["cursor",3]],["bool",15]]],[11,"display","","",76,[[],["str",15]]],[11,"peek","","",77,[[["cursor",3]],["bool",15]]],[11,"display","","",77,[[],["str",15]]],[11,"peek","","",78,[[["cursor",3]],["bool",15]]],[11,"display","","",78,[[],["str",15]]],[11,"peek","","",79,[[["cursor",3]],["bool",15]]],[11,"display","","",79,[[],["str",15]]],[11,"peek","","",80,[[["cursor",3]],["bool",15]]],[11,"display","","",80,[[],["str",15]]],[11,"peek","","",81,[[["cursor",3]],["bool",15]]],[11,"display","","",81,[[],["str",15]]],[11,"peek","","",82,[[["cursor",3]],["bool",15]]],[11,"display","","",82,[[],["str",15]]],[11,"peek","","",83,[[["cursor",3]],["bool",15]]],[11,"display","","",83,[[],["str",15]]],[11,"peek","","",84,[[["cursor",3]],["bool",15]]],[11,"display","","",84,[[],["str",15]]],[11,"peek","","",85,[[["cursor",3]],["bool",15]]],[11,"display","","",85,[[],["str",15]]],[11,"peek","","",86,[[["cursor",3]],["bool",15]]],[11,"display","","",86,[[],["str",15]]],[11,"peek","","",87,[[["cursor",3]],["bool",15]]],[11,"display","","",87,[[],["str",15]]],[11,"peek","","",88,[[["cursor",3]],["bool",15]]],[11,"display","","",88,[[],["str",15]]],[11,"peek","","",89,[[["cursor",3]],["bool",15]]],[11,"display","","",89,[[],["str",15]]],[11,"peek","","",90,[[["cursor",3]],["bool",15]]],[11,"display","","",90,[[],["str",15]]],[11,"peek","","",91,[[["cursor",3]],["bool",15]]],[11,"display","","",91,[[],["str",15]]],[11,"peek","","",92,[[["cursor",3]],["bool",15]]],[11,"display","","",92,[[],["str",15]]],[11,"peek","","",93,[[["cursor",3]],["bool",15]]],[11,"display","","",93,[[],["str",15]]],[11,"peek","","",94,[[["cursor",3]],["bool",15]]],[11,"display","","",94,[[],["str",15]]],[11,"peek","","",95,[[["cursor",3]],["bool",15]]],[11,"display","","",95,[[],["str",15]]],[11,"peek","","",96,[[["cursor",3]],["bool",15]]],[11,"display","","",96,[[],["str",15]]],[11,"peek","","",97,[[["cursor",3]],["bool",15]]],[11,"display","","",97,[[],["str",15]]],[11,"peek","","",98,[[["cursor",3]],["bool",15]]],[11,"display","","",98,[[],["str",15]]],[11,"peek","syn","",297,[[["cursor",3]],["bool",15]]],[11,"display","","",297,[[],["str",15]]],[11,"parse_any","","",297,[[["parsestream",6]],["result",6]]],[11,"unraw","","",297,[[],["ident",3]]],[11,"advance_to","syn::parse","",114,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",297,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",127,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",306,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",293,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",295,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",314,[[["parsestream",6]],["result",6]]],[11,"drop","","",114,[[]]],[11,"from","syn","",297,[[["selfvalue",3]],["ident",3]]],[11,"from","","",297,[[["selftype",3]],["ident",3]]],[11,"from","","",297,[[["super",3]],["ident",3]]],[11,"from","","",297,[[["crate",3]],["ident",3]]],[11,"from","","",297,[[["extern",3]],["ident",3]]],[11,"from","","",297,[[["underscore",3]],["ident",3]]],[11,"from","","",119,[[["path",3]],["meta",4]]],[11,"from","","",119,[[["metalist",3]],["meta",4]]],[11,"from","","",119,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",122,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",122,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",124,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",124,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",131,[[["vispublic",3]],["visibility",4]]],[11,"from","","",131,[[["viscrate",3]],["visibility",4]]],[11,"from","","",131,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",138,[[["exprarray",3]],["expr",4]]],[11,"from","","",138,[[["exprassign",3]],["expr",4]]],[11,"from","","",138,[[["exprassignop",3]],["expr",4]]],[11,"from","","",138,[[["exprasync",3]],["expr",4]]],[11,"from","","",138,[[["exprawait",3]],["expr",4]]],[11,"from","","",138,[[["exprbinary",3]],["expr",4]]],[11,"from","","",138,[[["exprblock",3]],["expr",4]]],[11,"from","","",138,[[["exprbox",3]],["expr",4]]],[11,"from","","",138,[[["exprbreak",3]],["expr",4]]],[11,"from","","",138,[[["exprcall",3]],["expr",4]]],[11,"from","","",138,[[["exprcast",3]],["expr",4]]],[11,"from","","",138,[[["exprclosure",3]],["expr",4]]],[11,"from","","",138,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",138,[[["exprfield",3]],["expr",4]]],[11,"from","","",138,[[["exprforloop",3]],["expr",4]]],[11,"from","","",138,[[["exprgroup",3]],["expr",4]]],[11,"from","","",138,[[["exprif",3]],["expr",4]]],[11,"from","","",138,[[["exprindex",3]],["expr",4]]],[11,"from","","",138,[[["exprlet",3]],["expr",4]]],[11,"from","","",138,[[["exprlit",3]],["expr",4]]],[11,"from","","",138,[[["exprloop",3]],["expr",4]]],[11,"from","","",138,[[["exprmacro",3]],["expr",4]]],[11,"from","","",138,[[["exprmatch",3]],["expr",4]]],[11,"from","","",138,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",138,[[["exprparen",3]],["expr",4]]],[11,"from","","",138,[[["exprpath",3]],["expr",4]]],[11,"from","","",138,[[["exprrange",3]],["expr",4]]],[11,"from","","",138,[[["exprreference",3]],["expr",4]]],[11,"from","","",138,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",138,[[["exprreturn",3]],["expr",4]]],[11,"from","","",138,[[["exprstruct",3]],["expr",4]]],[11,"from","","",138,[[["exprtry",3]],["expr",4]]],[11,"from","","",138,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",138,[[["exprtuple",3]],["expr",4]]],[11,"from","","",138,[[["exprtype",3]],["expr",4]]],[11,"from","","",138,[[["exprunary",3]],["expr",4]]],[11,"from","","",138,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",138,[[["exprwhile",3]],["expr",4]]],[11,"from","","",138,[[["expryield",3]],["expr",4]]],[11,"from","","",178,[[["usize",15]],["index",3]]],[11,"from","","",182,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",182,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",182,[[["constparam",3]],["genericparam",4]]],[11,"from","","",190,[[["ident",3]]]],[11,"from","","",191,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",191,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",193,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",205,[[["itemconst",3]],["item",4]]],[11,"from","","",205,[[["itemenum",3]],["item",4]]],[11,"from","","",205,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",205,[[["itemfn",3]],["item",4]]],[11,"from","","",205,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",205,[[["itemimpl",3]],["item",4]]],[11,"from","","",205,[[["itemmacro",3]],["item",4]]],[11,"from","","",205,[[["itemmacro2",3]],["item",4]]],[11,"from","","",205,[[["itemmod",3]],["item",4]]],[11,"from","","",205,[[["itemstatic",3]],["item",4]]],[11,"from","","",205,[[["itemstruct",3]],["item",4]]],[11,"from","","",205,[[["itemtrait",3]],["item",4]]],[11,"from","","",205,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",205,[[["itemtype",3]],["item",4]]],[11,"from","","",205,[[["itemunion",3]],["item",4]]],[11,"from","","",205,[[["itemuse",3]],["item",4]]],[11,"from","","",205,[[["deriveinput",3]],["item",4]]],[11,"from","","",246,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",234,[[["usepath",3]],["usetree",4]]],[11,"from","","",234,[[["usename",3]],["usetree",4]]],[11,"from","","",234,[[["userename",3]],["usetree",4]]],[11,"from","","",234,[[["useglob",3]],["usetree",4]]],[11,"from","","",234,[[["usegroup",3]],["usetree",4]]],[11,"from","","",195,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",224,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",224,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",200,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",200,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",194,[[["receiver",3]],["fnarg",4]]],[11,"from","","",194,[[["pattype",3]],["fnarg",4]]],[11,"from","","",237,[[["litstr",3]],["lit",4]]],[11,"from","","",237,[[["litbytestr",3]],["lit",4]]],[11,"from","","",237,[[["litbyte",3]],["lit",4]]],[11,"from","","",237,[[["litchar",3]],["lit",4]]],[11,"from","","",237,[[["litint",3]],["lit",4]]],[11,"from","","",237,[[["litfloat",3]],["lit",4]]],[11,"from","","",237,[[["litbool",3]],["lit",4]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",306,[[["literal",3]]]],[11,"from","","",242,[[["datastruct",3]],["data",4]]],[11,"from","","",242,[[["dataenum",3]],["data",4]]],[11,"from","","",242,[[["dataunion",3]],["data",4]]],[11,"from","","",255,[[["typearray",3]],["type",4]]],[11,"from","","",255,[[["typebarefn",3]],["type",4]]],[11,"from","","",255,[[["typegroup",3]],["type",4]]],[11,"from","","",255,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",255,[[["typeinfer",3]],["type",4]]],[11,"from","","",255,[[["typemacro",3]],["type",4]]],[11,"from","","",255,[[["typenever",3]],["type",4]]],[11,"from","","",255,[[["typeparen",3]],["type",4]]],[11,"from","","",255,[[["typepath",3]],["type",4]]],[11,"from","","",255,[[["typeptr",3]],["type",4]]],[11,"from","","",255,[[["typereference",3]],["type",4]]],[11,"from","","",255,[[["typeslice",3]],["type",4]]],[11,"from","","",255,[[["typetraitobject",3]],["type",4]]],[11,"from","","",255,[[["typetuple",3]],["type",4]]],[11,"from","","",272,[[["patbox",3]],["pat",4]]],[11,"from","","",272,[[["patident",3]],["pat",4]]],[11,"from","","",272,[[["patlit",3]],["pat",4]]],[11,"from","","",272,[[["patmacro",3]],["pat",4]]],[11,"from","","",272,[[["pator",3]],["pat",4]]],[11,"from","","",272,[[["patpath",3]],["pat",4]]],[11,"from","","",272,[[["patrange",3]],["pat",4]]],[11,"from","","",272,[[["patreference",3]],["pat",4]]],[11,"from","","",272,[[["patrest",3]],["pat",4]]],[11,"from","","",272,[[["patslice",3]],["pat",4]]],[11,"from","","",272,[[["patstruct",3]],["pat",4]]],[11,"from","","",272,[[["pattuple",3]],["pat",4]]],[11,"from","","",272,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",272,[[["pattype",3]],["pat",4]]],[11,"from","","",272,[[["patwild",3]],["pat",4]]],[11,"from","","",293,[[]]],[11,"from","","",295,[[]]],[11,"from","syn::parse","",116,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"next_back","","",312,[[],["option",4]]],[11,"len","","",307,[[],["usize",15]]],[11,"len","","",308,[[],["usize",15]]],[11,"len","","",309,[[],["usize",15]]],[11,"len","","",310,[[],["usize",15]]],[11,"len","","",311,[[],["usize",15]]],[11,"len","","",312,[[],["usize",15]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",116,[[["intoiterator",8]]]],[11,"into_iter","syn","",124,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",116,[[]]],[11,"next","syn::punctuated","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"next","","",312,[[],["option",4]]],[11,"size_hint","","",312,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",306,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",307,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",311,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",252,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",296,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","syn::parse","",113,[[]]],[11,"clone","","",116,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",183,[[]]],[11,"default","","",180,[[]]],[11,"default","","",294,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",236,[[["lifetime",3]],["ordering",4]]],[11,"eq","syn::token","",0,[[["underscore",3]],["bool",15]]],[11,"eq","","",1,[[["abstract",3]],["bool",15]]],[11,"eq","","",2,[[["as",3]],["bool",15]]],[11,"eq","","",3,[[["async",3]],["bool",15]]],[11,"eq","","",4,[[["auto",3]],["bool",15]]],[11,"eq","","",5,[[["await",3]],["bool",15]]],[11,"eq","","",6,[[["become",3]],["bool",15]]],[11,"eq","","",7,[[["box",3]],["bool",15]]],[11,"eq","","",8,[[["break",3]],["bool",15]]],[11,"eq","","",9,[[["const",3]],["bool",15]]],[11,"eq","","",10,[[["continue",3]],["bool",15]]],[11,"eq","","",11,[[["crate",3]],["bool",15]]],[11,"eq","","",12,[[["default",3]],["bool",15]]],[11,"eq","","",13,[[["do",3]],["bool",15]]],[11,"eq","","",14,[[["dyn",3]],["bool",15]]],[11,"eq","","",15,[[["else",3]],["bool",15]]],[11,"eq","","",16,[[["enum",3]],["bool",15]]],[11,"eq","","",17,[[["extern",3]],["bool",15]]],[11,"eq","","",18,[[["final",3]],["bool",15]]],[11,"eq","","",19,[[["fn",3]],["bool",15]]],[11,"eq","","",20,[[["for",3]],["bool",15]]],[11,"eq","","",21,[[["if",3]],["bool",15]]],[11,"eq","","",22,[[["impl",3]],["bool",15]]],[11,"eq","","",23,[[["in",3]],["bool",15]]],[11,"eq","","",24,[[["let",3]],["bool",15]]],[11,"eq","","",25,[[["loop",3]],["bool",15]]],[11,"eq","","",26,[[["macro",3]],["bool",15]]],[11,"eq","","",27,[[["match",3]],["bool",15]]],[11,"eq","","",28,[[["mod",3]],["bool",15]]],[11,"eq","","",29,[[["move",3]],["bool",15]]],[11,"eq","","",30,[[["mut",3]],["bool",15]]],[11,"eq","","",31,[[["override",3]],["bool",15]]],[11,"eq","","",32,[[["priv",3]],["bool",15]]],[11,"eq","","",33,[[["pub",3]],["bool",15]]],[11,"eq","","",34,[[["ref",3]],["bool",15]]],[11,"eq","","",35,[[["return",3]],["bool",15]]],[11,"eq","","",36,[[["selftype",3]],["bool",15]]],[11,"eq","","",37,[[["selfvalue",3]],["bool",15]]],[11,"eq","","",38,[[["static",3]],["bool",15]]],[11,"eq","","",39,[[["struct",3]],["bool",15]]],[11,"eq","","",40,[[["super",3]],["bool",15]]],[11,"eq","","",41,[[["trait",3]],["bool",15]]],[11,"eq","","",42,[[["try",3]],["bool",15]]],[11,"eq","","",43,[[["type",3]],["bool",15]]],[11,"eq","","",44,[[["typeof",3]],["bool",15]]],[11,"eq","","",45,[[["union",3]],["bool",15]]],[11,"eq","","",46,[[["unsafe",3]],["bool",15]]],[11,"eq","","",47,[[["unsized",3]],["bool",15]]],[11,"eq","","",48,[[["use",3]],["bool",15]]],[11,"eq","","",49,[[["virtual",3]],["bool",15]]],[11,"eq","","",50,[[["where",3]],["bool",15]]],[11,"eq","","",51,[[["while",3]],["bool",15]]],[11,"eq","","",52,[[["yield",3]],["bool",15]]],[11,"eq","","",53,[[["add",3]],["bool",15]]],[11,"eq","","",54,[[["addeq",3]],["bool",15]]],[11,"eq","","",55,[[["and",3]],["bool",15]]],[11,"eq","","",56,[[["andand",3]],["bool",15]]],[11,"eq","","",57,[[["andeq",3]],["bool",15]]],[11,"eq","","",58,[[["at",3]],["bool",15]]],[11,"eq","","",59,[[["bang",3]],["bool",15]]],[11,"eq","","",60,[[["caret",3]],["bool",15]]],[11,"eq","","",61,[[["careteq",3]],["bool",15]]],[11,"eq","","",62,[[["colon",3]],["bool",15]]],[11,"eq","","",63,[[["colon2",3]],["bool",15]]],[11,"eq","","",64,[[["comma",3]],["bool",15]]],[11,"eq","","",65,[[["div",3]],["bool",15]]],[11,"eq","","",66,[[["diveq",3]],["bool",15]]],[11,"eq","","",67,[[["dollar",3]],["bool",15]]],[11,"eq","","",68,[[["dot",3]],["bool",15]]],[11,"eq","","",69,[[["dot2",3]],["bool",15]]],[11,"eq","","",70,[[["dot3",3]],["bool",15]]],[11,"eq","","",71,[[["dotdoteq",3]],["bool",15]]],[11,"eq","","",72,[[["eq",3]],["bool",15]]],[11,"eq","","",73,[[["eqeq",3]],["bool",15]]],[11,"eq","","",74,[[["ge",3]],["bool",15]]],[11,"eq","","",75,[[["gt",3]],["bool",15]]],[11,"eq","","",76,[[["le",3]],["bool",15]]],[11,"eq","","",77,[[["lt",3]],["bool",15]]],[11,"eq","","",78,[[["muleq",3]],["bool",15]]],[11,"eq","","",79,[[["ne",3]],["bool",15]]],[11,"eq","","",80,[[["or",3]],["bool",15]]],[11,"eq","","",81,[[["oreq",3]],["bool",15]]],[11,"eq","","",82,[[["oror",3]],["bool",15]]],[11,"eq","","",83,[[["pound",3]],["bool",15]]],[11,"eq","","",84,[[["question",3]],["bool",15]]],[11,"eq","","",85,[[["rarrow",3]],["bool",15]]],[11,"eq","","",86,[[["larrow",3]],["bool",15]]],[11,"eq","","",87,[[["rem",3]],["bool",15]]],[11,"eq","","",88,[[["remeq",3]],["bool",15]]],[11,"eq","","",89,[[["fatarrow",3]],["bool",15]]],[11,"eq","","",90,[[["semi",3]],["bool",15]]],[11,"eq","","",91,[[["shl",3]],["bool",15]]],[11,"eq","","",92,[[["shleq",3]],["bool",15]]],[11,"eq","","",93,[[["shr",3]],["bool",15]]],[11,"eq","","",94,[[["shreq",3]],["bool",15]]],[11,"eq","","",95,[[["star",3]],["bool",15]]],[11,"eq","","",96,[[["sub",3]],["bool",15]]],[11,"eq","","",97,[[["subeq",3]],["bool",15]]],[11,"eq","","",98,[[["tilde",3]],["bool",15]]],[11,"eq","","",99,[[["brace",3]],["bool",15]]],[11,"eq","","",100,[[["bracket",3]],["bool",15]]],[11,"eq","","",101,[[["paren",3]],["bool",15]]],[11,"eq","","",102,[[["group",3]],["bool",15]]],[11,"eq","syn","",179,[[],["bool",15]]],[11,"eq","","",178,[[],["bool",15]]],[11,"eq","","",298,[[],["bool",15]]],[11,"eq","","",299,[[],["bool",15]]],[11,"eq","","",300,[[],["bool",15]]],[11,"eq","","",236,[[["lifetime",3]],["bool",15]]],[11,"eq","","",301,[[],["bool",15]]],[11,"eq","","",302,[[],["bool",15]]],[11,"eq","","",303,[[],["bool",15]]],[11,"eq","","",304,[[],["bool",15]]],[11,"eq","","",305,[[],["bool",15]]],[11,"eq","","",306,[[],["bool",15]]],[11,"eq","syn::buffer","",104,[[],["bool",15]]],[11,"eq","syn::punctuated","",106,[[],["bool",15]]],[11,"eq","syn","",252,[[],["bool",15]]],[11,"eq","","",288,[[],["bool",15]]],[11,"eq","","",132,[[],["bool",15]]],[11,"eq","","",117,[[],["bool",15]]],[11,"eq","","",118,[[],["bool",15]]],[11,"eq","","",253,[[],["bool",15]]],[11,"eq","","",247,[[],["bool",15]]],[11,"eq","","",289,[[],["bool",15]]],[11,"eq","","",249,[[],["bool",15]]],[11,"eq","","",180,[[],["bool",15]]],[11,"eq","","",181,[[],["bool",15]]],[11,"eq","","",290,[[],["bool",15]]],[11,"eq","","",242,[[],["bool",15]]],[11,"eq","","",243,[[],["bool",15]]],[11,"eq","","",244,[[],["bool",15]]],[11,"eq","","",245,[[],["bool",15]]],[11,"eq","","",246,[[],["bool",15]]],[11,"eq","","",138,[[],["bool",15]]],[11,"eq","","",139,[[],["bool",15]]],[11,"eq","","",140,[[],["bool",15]]],[11,"eq","","",141,[[],["bool",15]]],[11,"eq","","",142,[[],["bool",15]]],[11,"eq","","",143,[[],["bool",15]]],[11,"eq","","",144,[[],["bool",15]]],[11,"eq","","",145,[[],["bool",15]]],[11,"eq","","",146,[[],["bool",15]]],[11,"eq","","",147,[[],["bool",15]]],[11,"eq","","",148,[[],["bool",15]]],[11,"eq","","",149,[[],["bool",15]]],[11,"eq","","",150,[[],["bool",15]]],[11,"eq","","",151,[[],["bool",15]]],[11,"eq","","",152,[[],["bool",15]]],[11,"eq","","",153,[[],["bool",15]]],[11,"eq","","",154,[[],["bool",15]]],[11,"eq","","",155,[[],["bool",15]]],[11,"eq","","",156,[[],["bool",15]]],[11,"eq","","",157,[[],["bool",15]]],[11,"eq","","",158,[[],["bool",15]]],[11,"eq","","",159,[[],["bool",15]]],[11,"eq","","",160,[[],["bool",15]]],[11,"eq","","",161,[[],["bool",15]]],[11,"eq","","",162,[[],["bool",15]]],[11,"eq","","",163,[[],["bool",15]]],[11,"eq","","",164,[[],["bool",15]]],[11,"eq","","",165,[[],["bool",15]]],[11,"eq","","",166,[[],["bool",15]]],[11,"eq","","",167,[[],["bool",15]]],[11,"eq","","",168,[[],["bool",15]]],[11,"eq","","",169,[[],["bool",15]]],[11,"eq","","",170,[[],["bool",15]]],[11,"eq","","",171,[[],["bool",15]]],[11,"eq","","",172,[[],["bool",15]]],[11,"eq","","",173,[[],["bool",15]]],[11,"eq","","",174,[[],["bool",15]]],[11,"eq","","",175,[[],["bool",15]]],[11,"eq","","",176,[[],["bool",15]]],[11,"eq","","",177,[[],["bool",15]]],[11,"eq","","",123,[[],["bool",15]]],[11,"eq","","",271,[[],["bool",15]]],[11,"eq","","",133,[[],["bool",15]]],[11,"eq","","",124,[[],["bool",15]]],[11,"eq","","",125,[[],["bool",15]]],[11,"eq","","",126,[[],["bool",15]]],[11,"eq","","",235,[[],["bool",15]]],[11,"eq","","",194,[[],["bool",15]]],[11,"eq","","",195,[[],["bool",15]]],[11,"eq","","",196,[[],["bool",15]]],[11,"eq","","",197,[[],["bool",15]]],[11,"eq","","",198,[[],["bool",15]]],[11,"eq","","",199,[[],["bool",15]]],[11,"eq","","",291,[[],["bool",15]]],[11,"eq","","",134,[[],["bool",15]]],[11,"eq","","",182,[[],["bool",15]]],[11,"eq","","",183,[[],["bool",15]]],[11,"eq","","",200,[[],["bool",15]]],[11,"eq","","",201,[[],["bool",15]]],[11,"eq","","",202,[[],["bool",15]]],[11,"eq","","",203,[[],["bool",15]]],[11,"eq","","",204,[[],["bool",15]]],[11,"eq","","",205,[[],["bool",15]]],[11,"eq","","",206,[[],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"eq","","",208,[[],["bool",15]]],[11,"eq","","",209,[[],["bool",15]]],[11,"eq","","",210,[[],["bool",15]]],[11,"eq","","",211,[[],["bool",15]]],[11,"eq","","",212,[[],["bool",15]]],[11,"eq","","",213,[[],["bool",15]]],[11,"eq","","",214,[[],["bool",15]]],[11,"eq","","",215,[[],["bool",15]]],[11,"eq","","",216,[[],["bool",15]]],[11,"eq","","",217,[[],["bool",15]]],[11,"eq","","",218,[[],["bool",15]]],[11,"eq","","",219,[[],["bool",15]]],[11,"eq","","",220,[[],["bool",15]]],[11,"eq","","",221,[[],["bool",15]]],[11,"eq","","",135,[[],["bool",15]]],[11,"eq","","",184,[[],["bool",15]]],[11,"eq","","",237,[[],["bool",15]]],[11,"eq","","",238,[[],["bool",15]]],[11,"eq","","",250,[[],["bool",15]]],[11,"eq","","",240,[[],["bool",15]]],[11,"eq","","",241,[[],["bool",15]]],[11,"eq","","",119,[[],["bool",15]]],[11,"eq","","",120,[[],["bool",15]]],[11,"eq","","",121,[[],["bool",15]]],[11,"eq","","",136,[[],["bool",15]]],[11,"eq","","",122,[[],["bool",15]]],[11,"eq","","",292,[[],["bool",15]]],[11,"eq","","",272,[[],["bool",15]]],[11,"eq","","",273,[[],["bool",15]]],[11,"eq","","",274,[[],["bool",15]]],[11,"eq","","",275,[[],["bool",15]]],[11,"eq","","",276,[[],["bool",15]]],[11,"eq","","",277,[[],["bool",15]]],[11,"eq","","",278,[[],["bool",15]]],[11,"eq","","",279,[[],["bool",15]]],[11,"eq","","",280,[[],["bool",15]]],[11,"eq","","",281,[[],["bool",15]]],[11,"eq","","",282,[[],["bool",15]]],[11,"eq","","",283,[[],["bool",15]]],[11,"eq","","",284,[[],["bool",15]]],[11,"eq","","",285,[[],["bool",15]]],[11,"eq","","",286,[[],["bool",15]]],[11,"eq","","",287,[[],["bool",15]]],[11,"eq","","",293,[[],["bool",15]]],[11,"eq","","",294,[[],["bool",15]]],[11,"eq","","",295,[[],["bool",15]]],[11,"eq","","",185,[[],["bool",15]]],[11,"eq","","",186,[[],["bool",15]]],[11,"eq","","",187,[[],["bool",15]]],[11,"eq","","",296,[[],["bool",15]]],[11,"eq","","",137,[[],["bool",15]]],[11,"eq","","",222,[[],["bool",15]]],[11,"eq","","",254,[[],["bool",15]]],[11,"eq","","",223,[[],["bool",15]]],[11,"eq","","",251,[[],["bool",15]]],[11,"eq","","",188,[[],["bool",15]]],[11,"eq","","",189,[[],["bool",15]]],[11,"eq","","",224,[[],["bool",15]]],[11,"eq","","",225,[[],["bool",15]]],[11,"eq","","",226,[[],["bool",15]]],[11,"eq","","",227,[[],["bool",15]]],[11,"eq","","",228,[[],["bool",15]]],[11,"eq","","",255,[[],["bool",15]]],[11,"eq","","",256,[[],["bool",15]]],[11,"eq","","",257,[[],["bool",15]]],[11,"eq","","",258,[[],["bool",15]]],[11,"eq","","",259,[[],["bool",15]]],[11,"eq","","",260,[[],["bool",15]]],[11,"eq","","",261,[[],["bool",15]]],[11,"eq","","",262,[[],["bool",15]]],[11,"eq","","",190,[[],["bool",15]]],[11,"eq","","",191,[[],["bool",15]]],[11,"eq","","",263,[[],["bool",15]]],[11,"eq","","",264,[[],["bool",15]]],[11,"eq","","",265,[[],["bool",15]]],[11,"eq","","",266,[[],["bool",15]]],[11,"eq","","",267,[[],["bool",15]]],[11,"eq","","",268,[[],["bool",15]]],[11,"eq","","",269,[[],["bool",15]]],[11,"eq","","",248,[[],["bool",15]]],[11,"eq","","",229,[[],["bool",15]]],[11,"eq","","",230,[[],["bool",15]]],[11,"eq","","",231,[[],["bool",15]]],[11,"eq","","",232,[[],["bool",15]]],[11,"eq","","",233,[[],["bool",15]]],[11,"eq","","",234,[[],["bool",15]]],[11,"eq","","",270,[[],["bool",15]]],[11,"eq","","",127,[[],["bool",15]]],[11,"eq","","",128,[[],["bool",15]]],[11,"eq","","",129,[[],["bool",15]]],[11,"eq","","",130,[[],["bool",15]]],[11,"eq","","",131,[[],["bool",15]]],[11,"eq","","",192,[[],["bool",15]]],[11,"eq","","",193,[[],["bool",15]]],[11,"partial_cmp","","",236,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",113,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",298,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",303,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","syn::punctuated","",106,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",296,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[["usize",15]]]],[11,"index_mut","","",106,[[["usize",15]]]],[11,"hash","syn::token","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","syn","",179,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",298,[[]]],[11,"hash","","",299,[[]]],[11,"hash","","",300,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",301,[[]]],[11,"hash","","",302,[[]]],[11,"hash","","",303,[[]]],[11,"hash","","",304,[[]]],[11,"hash","","",305,[[]]],[11,"hash","","",306,[[]]],[11,"hash","syn::punctuated","",106,[[]]],[11,"hash","syn","",252,[[]]],[11,"hash","","",288,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",253,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",289,[[]]],[11,"hash","","",249,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",290,[[]]],[11,"hash","","",242,[[]]],[11,"hash","","",243,[[]]],[11,"hash","","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",246,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",271,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","","",198,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",291,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",201,[[]]],[11,"hash","","",202,[[]]],[11,"hash","","",203,[[]]],[11,"hash","","",204,[[]]],[11,"hash","","",205,[[]]],[11,"hash","","",206,[[]]],[11,"hash","","",207,[[]]],[11,"hash","","",208,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",210,[[]]],[11,"hash","","",211,[[]]],[11,"hash","","",212,[[]]],[11,"hash","","",213,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",215,[[]]],[11,"hash","","",216,[[]]],[11,"hash","","",217,[[]]],[11,"hash","","",218,[[]]],[11,"hash","","",219,[[]]],[11,"hash","","",220,[[]]],[11,"hash","","",221,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",237,[[]]],[11,"hash","","",238,[[]]],[11,"hash","","",250,[[]]],[11,"hash","","",240,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",292,[[]]],[11,"hash","","",272,[[]]],[11,"hash","","",273,[[]]],[11,"hash","","",274,[[]]],[11,"hash","","",275,[[]]],[11,"hash","","",276,[[]]],[11,"hash","","",277,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",280,[[]]],[11,"hash","","",281,[[]]],[11,"hash","","",282,[[]]],[11,"hash","","",283,[[]]],[11,"hash","","",284,[[]]],[11,"hash","","",285,[[]]],[11,"hash","","",286,[[]]],[11,"hash","","",287,[[]]],[11,"hash","","",293,[[]]],[11,"hash","","",294,[[]]],[11,"hash","","",295,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",296,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",254,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",251,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",255,[[]]],[11,"hash","","",256,[[]]],[11,"hash","","",257,[[]]],[11,"hash","","",258,[[]]],[11,"hash","","",259,[[]]],[11,"hash","","",260,[[]]],[11,"hash","","",261,[[]]],[11,"hash","","",262,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",263,[[]]],[11,"hash","","",264,[[]]],[11,"hash","","",265,[[]]],[11,"hash","","",266,[[]]],[11,"hash","","",267,[[]]],[11,"hash","","",268,[[]]],[11,"hash","","",269,[[]]],[11,"hash","","",248,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",234,[[]]],[11,"hash","","",270,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",306,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",295,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",179,[[["formatter",3]],["result",6]]],[11,"span","","",179,[[],[["option",4],["span",3]]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",297,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",297,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",297,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",118,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",118,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",118,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta …",119,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",124,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",124,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",124,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",124,[[],["bool",15]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",138,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",183,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",183,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",183,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",183,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",183,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",183,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",183,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",183,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",299,[[],["turbofish",3]]],[11,"new","","",184,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",223,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",222,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",236,[[["span",3],["str",15]]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",237,[[["literal",3]]]],[11,"suffix","","",237,[[],["str",15]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"new","","",301,[[["span",3],["str",15]]]],[11,"value","","",301,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",301,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",301,[[["parser",8]],["result",6]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[],["str",15]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[],[["vec",3],["u8",15]]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[],["str",15]]],[11,"new","","",303,[[["span",3],["u8",15]]]],[11,"value","","",303,[[],["u8",15]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[],["str",15]]],[11,"new","","",304,[[["char",15],["span",3]]]],[11,"value","","",304,[[],["char",15]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"suffix","","",304,[[],["str",15]]],[11,"new","","",305,[[["span",3],["str",15]]]],[11,"base10_digits","","",305,[[],["str",15]]],[11,"base10_parse","","Parses the literal into a selected number type.",305,[[],["result",6]]],[11,"suffix","","",305,[[],["str",15]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",306,[[["span",3],["str",15]]]],[11,"base10_digits","","",306,[[],["str",15]]],[11,"base10_parse","","",306,[[],["result",6]]],[11,"suffix","","",306,[[],["str",15]]],[11,"span","","",306,[[],["span",3]]],[11,"set_span","","",306,[[["span",3]]]],[11,"new","","",238,[[["bool",15],["span",3]]]],[11,"value","","",238,[[],["bool",15]]],[11,"span","","",238,[[],["span",3]]],[11,"set_span","","",238,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",240,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",240,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",249,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",255,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",268,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",293,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",293,[[],["bool",15]]],[11,"get_ident","","If this path consists of a single ident, returns the …",293,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",294,[[],["bool",15]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"visit_abi_mut","syn::visit_mut","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",313,[[["peek",8]],["bool",15]]],[11,"error","","Triggers an error at the current position of the parse …",313,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for …","i":[[8,"WriteColor","termcolor","This trait describes the behavior of writers that support …",null,null],[10,"supports_color","","Returns true if and only if the underlying writer …",0,[[],["bool",15]]],[10,"set_color","","Set the color settings of the writer.",0,[[["colorspec",3]],["result",6]]],[10,"reset","","Reset the current color settings to their original …",0,[[],["result",6]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must …",0,[[],["bool",15]]],[4,"ColorChoice","","ColorChoice represents the color preferences of an end …",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI …",1,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use …",1,null],[13,"Auto","","Try to use colors, but don\'t force the issue. If the …",1,null],[13,"Never","","Never emit colors.",1,null],[3,"StandardStream","","Satisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional …",null,null],[3,"StandardStreamLock","","<code>StandardStreamLock</code> is a locked reference to a …",null,null],[3,"BufferedStandardStream","","Like <code>StandardStream</code>, but does buffered writing.",null,null],[11,"stdout","","Create a new <code>StandardStream</code> with the given color …",2,[[["colorchoice",4]],["standardstream",3]]],[11,"stderr","","Create a new <code>StandardStream</code> with the given color …",2,[[["colorchoice",4]],["standardstream",3]]],[11,"lock","","Lock the underlying writer.",2,[[],["standardstreamlock",3]]],[11,"stdout","","Create a new <code>BufferedStandardStream</code> with the given color …",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[11,"stderr","","Create a new <code>BufferedStandardStream</code> with the given color …",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[11,"stdout","","Create a new <code>BufferWriter</code> that writes to stdout with the …",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"stderr","","Create a new <code>BufferWriter</code> that writes to stderr with the …",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"separator","","If set, the separator given is printed between buffers. …",4,[[["option",4],["vec",3]]]],[11,"buffer","","Creates a new <code>Buffer</code> with the current color preferences.",4,[[],["buffer",3]]],[11,"print","","Prints the contents of the given buffer.",4,[[["buffer",3]],["result",6]]],[3,"Buffer","","Write colored text to memory.",null,null],[11,"no_color","","Create a buffer that drops all color information.",5,[[],["buffer",3]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",5,[[],["buffer",3]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",5,[[],["bool",15]]],[11,"len","","Returns the length of this buffer in bytes.",5,[[],["usize",15]]],[11,"clear","","Clears this buffer.",5,[[]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",5,[[],[["vec",3],["u8",15]]]],[11,"as_slice","","Return the underlying data of the buffer.",5,[[]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable …",5,[[]]],[3,"NoColor","","Satisfies <code>WriteColor</code> but ignores all color options.",null,null],[11,"new","","Create a new writer that satisfies <code>WriteColor</code> but drops …",6,[[],["nocolor",3]]],[11,"into_inner","","Consume this <code>NoColor</code> value and return the inner writer.",6,[[]]],[11,"get_ref","","Return a reference to the inner writer.",6,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",6,[[]]],[3,"Ansi","","Satisfies <code>WriteColor</code> using standard ANSI escape sequences.",null,null],[11,"new","","Create a new writer that satisfies <code>WriteColor</code> using …",7,[[],["ansi",3]]],[11,"into_inner","","Consume this <code>Ansi</code> value and return the inner writer.",7,[[]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[]]],[3,"ColorSpec","","A color specification.",null,null],[11,"new","","Create a new color specification that has no colors or …",8,[[],["colorspec",3]]],[11,"fg","","Get the foreground color.",8,[[],[["option",4],["color",4]]]],[11,"set_fg","","Set the foreground color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bg","","Get the background color.",8,[[],[["option",4],["color",4]]]],[11,"set_bg","","Set the background color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bold","","Get whether this is bold or not.",8,[[],["bool",15]]],[11,"set_bold","","Set whether the text is bolded or not.",8,[[["bool",15]],["colorspec",3]]],[11,"dimmed","","Get whether this is dimmed or not.",8,[[],["bool",15]]],[11,"set_dimmed","","Set whether the text is dimmed or not.",8,[[["bool",15]],["colorspec",3]]],[11,"italic","","Get whether this is italic or not.",8,[[],["bool",15]]],[11,"set_italic","","Set whether the text is italicized or not.",8,[[["bool",15]],["colorspec",3]]],[11,"underline","","Get whether this is underline or not.",8,[[],["bool",15]]],[11,"set_underline","","Set whether the text is underlined or not.",8,[[["bool",15]],["colorspec",3]]],[11,"reset","","Get whether reset is enabled or not.",8,[[],["bool",15]]],[11,"set_reset","","Set whether to reset the terminal whenever color settings …",8,[[["bool",15]],["colorspec",3]]],[11,"intense","","Get whether this is intense or not.",8,[[],["bool",15]]],[11,"set_intense","","Set whether the text is intense or not.",8,[[["bool",15]],["colorspec",3]]],[11,"is_none","","Returns true if this color specification has no colors or …",8,[[],["bool",15]]],[11,"clear","","Clears this color specification so that it has no …",8,[[]]],[4,"Color","","The set of available colors for the terminal …",null,null],[13,"Black","","",9,null],[13,"Blue","","",9,null],[13,"Green","","",9,null],[13,"Red","","",9,null],[13,"Cyan","","",9,null],[13,"Magenta","","",9,null],[13,"Yellow","","",9,null],[13,"White","","",9,null],[13,"Ansi256","","",9,null],[13,"Rgb","","",9,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[11,"invalid","","Return the string that couldn\'t be parsed as a valid …",10,[[],["str",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"supports_color","","",2,[[],["bool",15]]],[11,"set_color","","",2,[[["colorspec",3]],["result",6]]],[11,"reset","","",2,[[],["result",6]]],[11,"is_synchronous","","",2,[[],["bool",15]]],[11,"supports_color","","",11,[[],["bool",15]]],[11,"set_color","","",11,[[["colorspec",3]],["result",6]]],[11,"reset","","",11,[[],["result",6]]],[11,"is_synchronous","","",11,[[],["bool",15]]],[11,"supports_color","","",3,[[],["bool",15]]],[11,"set_color","","",3,[[["colorspec",3]],["result",6]]],[11,"reset","","",3,[[],["result",6]]],[11,"is_synchronous","","",3,[[],["bool",15]]],[11,"supports_color","","",5,[[],["bool",15]]],[11,"set_color","","",5,[[["colorspec",3]],["result",6]]],[11,"reset","","",5,[[],["result",6]]],[11,"is_synchronous","","",5,[[],["bool",15]]],[11,"supports_color","","",6,[[],["bool",15]]],[11,"set_color","","",6,[[["colorspec",3]],["result",6]]],[11,"reset","","",6,[[],["result",6]]],[11,"is_synchronous","","",6,[[],["bool",15]]],[11,"supports_color","","",7,[[],["bool",15]]],[11,"set_color","","",7,[[["colorspec",3]],["result",6]]],[11,"reset","","",7,[[],["result",6]]],[11,"is_synchronous","","",7,[[],["bool",15]]],[11,"clone","","",1,[[],["colorchoice",4]]],[11,"clone","","",8,[[],["colorspec",3]]],[11,"clone","","",9,[[],["color",4]]],[11,"clone","","",10,[[],["parsecolorerror",3]]],[11,"default","","",8,[[],["colorspec",3]]],[11,"eq","","",1,[[["colorchoice",4]],["bool",15]]],[11,"eq","","",8,[[["colorspec",3]],["bool",15]]],[11,"ne","","",8,[[["colorspec",3]],["bool",15]]],[11,"eq","","",9,[[["color",4]],["bool",15]]],[11,"ne","","",9,[[["color",4]],["bool",15]]],[11,"eq","","",10,[[["parsecolorerror",3]],["bool",15]]],[11,"ne","","",10,[[["parsecolorerror",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"from_str","","",9,[[["str",15]],[["color",4],["parsecolorerror",3],["result",4]]]],[11,"description","","",10,[[],["str",15]]],[11,"write","","",2,[[],[["usize",15],["result",6]]]],[11,"flush","","",2,[[],["result",6]]],[11,"write","","",11,[[],[["usize",15],["result",6]]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","","",3,[[],[["usize",15],["result",6]]]],[11,"flush","","",3,[[],["result",6]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","","",7,[[],[["usize",15],["result",6]]]],[11,"flush","","",7,[[],["result",6]]]],"p":[[8,"WriteColor"],[4,"ColorChoice"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[4,"Color"],[3,"ParseColorError"],[3,"StandardStreamLock"]]},\
"textwrap":{"doc":"<code>textwrap</code> provides functions for word wrapping and filling …","i":[[5,"dedent","textwrap","Removes common leading whitespace from each line.",null,[[["str",15]],["string",3]]],[5,"indent","","Add prefix to each non-empty line.",null,[[["str",15]],["string",3]]],[3,"HyphenSplitter","","Simple and default way to split words: splitting on …",null,null],[3,"NoHyphenation","","Use this as a <code>Wrapper.splitter</code> to avoid any kind of …",null,null],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",0,[[["str",15]],["vec",3]]],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text. …",null,null],[12,"width","","The width in columns at which the text will be wrapped.",1,null],[12,"initial_indent","","Indentation used for the first line of output.",1,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",1,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a …",1,null],[12,"splitter","","The method for splitting words. If the <code>hyphenation</code> feature…",1,null],[11,"new","","Create a new Wrapper for wrapping at the specified width. …",1,[[["usize",15]],[["wrapper",3],["hyphensplitter",3]]]],[11,"with_splitter","","Use the given <code>WordSplitter</code> to create a new Wrapper for …",1,[[["usize",15]],["wrapper",3]]],[11,"initial_indent","","Change <code>self.initial_indent</code>. The initial indentation is …",1,[[["str",15]],["wrapper",3]]],[11,"subsequent_indent","","Change <code>self.subsequent_indent</code>. The subsequent indentation …",1,[[["str",15]],["wrapper",3]]],[11,"break_words","","Change <code>self.break_words</code>. This controls if words longer …",1,[[["bool",15]],["wrapper",3]]],[11,"fill","","Fill a line of text at <code>self.width</code> characters.",1,[[["str",15]],["string",3]]],[11,"wrap","","Wrap a line of text at <code>self.width</code> characters.",1,[[["str",15]],[["vec",3],["cow",4]]]],[11,"wrap_iter","","Lazily wrap a line of text at <code>self.width</code> characters.",1,[[["str",15]],["wrapiter",3]]],[11,"into_wrap_iter","","Lazily wrap a line of text at <code>self.width</code> characters.",1,[[["str",15]],["intowrapiter",3]]],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns …",null,null],[3,"WrapIter","","An iterator over the lines of the input string which …",null,null],[5,"fill","","Fill a line of text at <code>width</code> characters.",null,[[["usize",15],["str",15]],["string",3]]],[5,"wrap","","Wrap a line of text at <code>width</code> characters.",null,[[["usize",15],["str",15]],[["vec",3],["cow",4]]]],[5,"wrap_iter","","Lazily wrap a line of text at <code>width</code> characters.",null,[[["usize",15],["str",15]],[["hyphensplitter",3],["intowrapiter",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"split","","",2,[[["str",15]],["vec",3]]],[11,"split","","",3,[[["str",15]],["vec",3]]],[11,"next","","",4,[[],[["option",4],["cow",4]]]],[11,"next","","",5,[[],[["option",4],["cow",4]]]],[11,"clone","","",2,[[],["nohyphenation",3]]],[11,"clone","","",3,[[],["hyphensplitter",3]]],[11,"clone","","",1,[[],["wrapper",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[8,"WordSplitter"],[3,"Wrapper"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"thiserror":{"doc":"github crates-io docs-rs","i":[[24,"Error","thiserror","",null,null]],"p":[]},\
"thiserror_impl":{"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedThreadLocal","","Wrapper around [<code>ThreadLocal</code>].",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[11,"new","","Creates a new empty <code>ThreadLocal</code>.",0,[[],["threadlocal",3]]],[11,"with_capacity","","Creates a new <code>ThreadLocal</code> with an initial capacity. If …",0,[[["usize",15]],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",0,[[],["result",4]]],[11,"iter","","Returns an iterator over the local values of all threads …",0,[[],["iter",3]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",0,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",0,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",0,[[]]],[3,"Iter","","Iterator over the contents of a <code>ThreadLocal</code>.",null,null],[3,"IterMut","","Mutable iterator over the contents of a <code>ThreadLocal</code>.",null,null],[3,"IntoIter","","An iterator that moves out of a <code>ThreadLocal</code>.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"into_iter","","",1,[[],["cachedintoiter",3]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"default","","",1,[[],["cachedthreadlocal",3]]],[11,"default","","",0,[[],["threadlocal",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty <code>CachedThreadLocal</code>.",1,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",1,[[],["cacheditermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",1,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",1,[[]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"]]},\
"tinyvec":{"doc":"<code>tinyvec</code> provides 100% safe vec-like data structures.","i":[[8,"Array","tinyvec","A trait for types that are an array.",null,null],[16,"Item","","The type of the items in the thing.",0,null],[18,"CAPACITY","","The number of slots in the thing.",0,null],[10,"as_slice","","Gives a shared slice over the whole thing.",0,[[]]],[10,"as_slice_mut","","Gives a unique slice over the whole thing.",0,[[]]],[10,"default","","Create a default-initialized instance of ourself, similar …",0,[[]]],[3,"ArrayVec","","An array-backed, vector-like data structure.",null,null],[3,"ArrayVecSplice","","Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>",null,null],[3,"ArrayVecIterator","","Iterator for consuming an <code>ArrayVec</code> and returning owned …",null,null],[3,"ArrayVecDrain","","Draining iterator for [<code>ArrayVec</code>]",null,null],[3,"SliceVec","","A slice-backed vector-like data structure.",null,null],[3,"SliceVecDrain","","Draining iterator for [<code>SliceVec</code>]",null,null],[4,"TinyVec","","A vector that starts inline, but can automatically move …",null,null],[13,"Inline","","",1,null],[13,"Heap","","",1,null],[4,"TinyVecDrain","","Draining iterator for <code>TinyVecDrain</code>",null,null],[13,"Inline","","",2,null],[13,"Heap","","",2,null],[3,"TinyVecSplice","","Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>",null,null],[4,"TinyVecIterator","","Iterator for consuming an <code>TinyVec</code> and returning owned …",null,null],[13,"Inline","","",3,null],[13,"Heap","","",3,null],[14,"array_vec","","Helper to make an <code>ArrayVec</code>.",null,null],[14,"tiny_vec","","Helper to make a <code>TinyVec</code>.",null,null],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","","",8,[[]]],[11,"deref_mut","","",1,[[]]],[11,"from","","The output has a length equal to the full array.",4,[[]]],[11,"from","","Uses the full slice as the initial length.",8,[[]]],[11,"from","","Calls <code>AsRef::as_mut</code> then uses the full slice as the …",8,[[]]],[11,"from","","",1,[[["arrayvec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",8,[[],["bool",15]]],[11,"eq","","",8,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"cmp","","",8,[[],["ordering",4]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",8,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"drop","","",5,[[]]],[11,"drop","","",9,[[]]],[11,"drop","","",10,[[]]],[11,"index","","",4,[[]]],[11,"index","","",8,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",8,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",1,[[]]],[11,"len","","",5,[[],["usize",15]]],[11,"len","","",10,[[],["usize",15]]],[11,"borrow","","",4,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_iter","","",1,[[["intoiterator",8]]]],[11,"as_ref","","",4,[[]]],[11,"as_ref","","",8,[[]]],[11,"as_ref","","",1,[[]]],[11,"as_mut","","",4,[[]]],[11,"as_mut","","",8,[[]]],[11,"as_mut","","",1,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"count","","",6,[[],["usize",15]]],[11,"last","","",6,[[],["option",4]]],[11,"nth","","",6,[[["usize",15]],["option",4]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"for_each","","",7,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"next","","",2,[[],["option",4]]],[11,"nth","","",2,[[["usize",15]],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"last","","",2,[[],["option",4]]],[11,"count","","",2,[[],["usize",15]]],[11,"for_each","","",2,[[["fnmut",8]]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[],["usize",15]]],[11,"last","","",3,[[],["option",4]]],[11,"nth","","",3,[[["usize",15]],["option",4]]],[11,"into_iter","","",4,[[]]],[11,"into_iter","","",8,[[]]],[11,"into_iter","","",1,[[]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"clone","","",4,[[],["arrayvec",3]]],[11,"clone","","",1,[[],["tinyvec",4]]],[11,"default","","",4,[[]]],[11,"default","","",8,[[]]],[11,"default","","",1,[[]]],[18,"CAPACITY","","The number of slots in the thing.",0,null],[11,"append","","Move all values from <code>other</code> into this vec.",4,[[]]],[11,"try_append","","Move all values from <code>other</code> into this vec. If appending …",4,[[],["option",4]]],[11,"as_mut_ptr","","A <code>*mut</code> pointer to the backing array.",4,[[]]],[11,"as_mut_slice","","Performs a <code>deref_mut</code>, into unique slice form.",4,[[]]],[11,"as_ptr","","A <code>*const</code> pointer to the backing array.",4,[[]]],[11,"as_slice","","Performs a <code>deref</code>, into shared slice form.",4,[[]]],[11,"capacity","","The capacity of the <code>ArrayVec</code>.",4,[[],["usize",15]]],[11,"clear","","Truncates the <code>ArrayVec</code> down to length 0.",4,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",4,[[],["arrayvecdrain",3]]],[11,"into_inner","","Returns the inner array of the <code>ArrayVec</code>.",4,[[]]],[11,"extend_from_slice","","Clone each element of the slice into this <code>ArrayVec</code>.",4,[[]]],[11,"fill","","Fill the vector until its capacity has been reached.",4,[[["intoiterator",8]]]],[11,"from_array_len","","Wraps up an array and uses the given length as the …",4,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",4,[[["usize",15]]]],[11,"try_insert","","Tries to insert an item at the position given, moving all …",4,[[["usize",15]],["option",4]]],[11,"is_empty","","Checks if the length is 0.",4,[[],["bool",15]]],[11,"len","","The length of the <code>ArrayVec</code> (in elements).",4,[[],["usize",15]]],[11,"new","","Makes a new, empty <code>ArrayVec</code>.",4,[[]]],[11,"pop","","Remove and return the last element of the vec, if there …",4,[[],["option",4]]],[11,"push","","Place an element onto the end of the vec.",4,[[]]],[11,"try_push","","Tries to place an element onto the end of the vec. …",4,[[],["option",4]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",4,[[["usize",15]]]],[11,"resize","","As <code>resize_with</code> and it clones the value as the closure.",4,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",4,[[["usize",15],["fnmut",8]]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",4,[[["fnmut",8]]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",4,[[["usize",15]]]],[11,"split_off","","Splits the collection at the point given.",4,[[["usize",15]]]],[11,"splice","","Creates a splicing iterator that removes the specified …",4,[[],[["fuse",3],["arrayvecsplice",3]]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",4,[[["usize",15]]]],[11,"truncate","","Reduces the vec\'s length to the given value.",4,[[["usize",15]]]],[11,"try_from_array_len","","Wraps an array, using the given length as the starting …",4,[[["usize",15]],["result",4]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",6,[[]]],[11,"drain_to_vec_and_reserve","","Drains all elements to a Vec, but reserves additional …",4,[[["usize",15]],["vec",3]]],[11,"drain_to_vec","","Drains all elements to a Vec",4,[[],["vec",3]]],[11,"append","","",8,[[]]],[11,"as_mut_ptr","","A <code>*mut</code> pointer to the backing slice.",8,[[]]],[11,"as_mut_slice","","Performs a <code>deref_mut</code>, into unique slice form.",8,[[]]],[11,"as_ptr","","A <code>*const</code> pointer to the backing slice.",8,[[]]],[11,"as_slice","","Performs a <code>deref</code>, into shared slice form.",8,[[]]],[11,"capacity","","The capacity of the <code>SliceVec</code>.",8,[[],["usize",15]]],[11,"clear","","Truncates the <code>SliceVec</code> down to length 0.",8,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",8,[[["rangebounds",8],["usize",15]],["slicevecdrain",3]]],[11,"extend_from_slice","","",8,[[]]],[11,"fill","","Fill the vector until its capacity has been reached.",8,[[["intoiterator",8]]]],[11,"from_slice_len","","Wraps up a slice and uses the given length as the initial …",8,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",8,[[["usize",15]]]],[11,"is_empty","","Checks if the length is 0.",8,[[],["bool",15]]],[11,"len","","The length of the <code>SliceVec</code> (in elements).",8,[[],["usize",15]]],[11,"pop","","Remove and return the last element of the vec, if there …",8,[[],["option",4]]],[11,"push","","Place an element onto the end of the vec.",8,[[]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",8,[[["usize",15]]]],[11,"resize","","As <code>resize_with</code> and it clones the value as the closure.",8,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",8,[[["usize",15],["fnmut",8]]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",8,[[["fnmut",8]]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",8,[[["usize",15]]]],[11,"split_off","","Splits the collection at the point given.",8,[[["usize",15]],["slicevec",3]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",8,[[["usize",15]]]],[11,"truncate","","Reduces the vec\'s length to the given value.",8,[[["usize",15]]]],[11,"try_from_slice_len","","Wraps a slice, using the given length as the starting …",8,[[["usize",15]],["option",4]]],[11,"is_heap","","Returns whether elements are on heap",1,[[],["bool",15]]],[11,"is_inline","","Returns whether elements are on stack",1,[[],["bool",15]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible. …",1,[[]]],[11,"move_to_the_heap","","Moves the content of the TinyVec to the heap, if it\'s …",1,[[]]],[11,"move_to_the_heap_and_reserve","","If TinyVec is inline, moves the content of it to the heap.…",1,[[["usize",15]]]],[11,"reserve","","Reserves additional space. Moves to the heap if array …",1,[[["usize",15]]]],[11,"reserve_exact","","Reserves additional space. Moves to the heap if array …",1,[[["usize",15]]]],[11,"with_capacity","","Makes a new TinyVec with <em>at least</em> the given capacity.",1,[[["usize",15]]]],[11,"append","","Move all values from <code>other</code> into this vec.",1,[[]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",1,[[["usize",15]]]],[11,"pop","","Remove and return the last element of the vec, if there …",1,[[],["option",4]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",1,[[["usize",15]]]],[11,"len","","The length of the vec (in elements).",1,[[],["usize",15]]],[11,"capacity","","The capacity of the <code>TinyVec</code>.",1,[[],["usize",15]]],[11,"truncate","","Reduces the vec\'s length to the given value.",1,[[["usize",15]]]],[11,"as_mut_ptr","","A mutable pointer to the backing array.",1,[[]]],[11,"as_ptr","","A const pointer to the backing array.",1,[[]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",1,[[["fnmut",8]]]],[11,"as_mut_slice","","Helper for getting the mut slice.",1,[[]]],[11,"as_slice","","Helper for getting the shared slice.",1,[[]]],[11,"clear","","Removes all elements from the vec.",1,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",1,[[["rangebounds",8],["usize",15]],["tinyvecdrain",4]]],[11,"extend_from_slice","","Clone each element of the slice into this vec.",1,[[]]],[11,"from_array_len","","Wraps up an array and uses the given length as the …",1,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",1,[[["usize",15]]]],[11,"is_empty","","If the vec is empty.",1,[[],["bool",15]]],[11,"new","","Makes a new, empty vec.",1,[[]]],[11,"push","","Place an element onto the end of the vec.",1,[[]]],[11,"resize","","Resize the vec to the new length.",1,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",1,[[["usize",15],["fnmut",8]]]],[11,"split_off","","Splits the collection at the point given.",1,[[["usize",15]]]],[11,"splice","","Creates a splicing iterator that removes the specified …",1,[[],[["tinyvecsplice",3],["fuse",3]]]],[11,"try_from_array_len","","Wraps an array, using the given length as the starting …",1,[[["usize",15]],["result",4]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[]]]],"p":[[8,"Array"],[4,"TinyVec"],[4,"TinyVecDrain"],[4,"TinyVecIterator"],[3,"ArrayVec"],[3,"ArrayVecSplice"],[3,"ArrayVecIterator"],[3,"ArrayVecDrain"],[3,"SliceVec"],[3,"SliceVecDrain"],[3,"TinyVecSplice"]]},\
"tinyvec_macros":{"doc":"","i":[[14,"impl_mirrored","tinyvec_macros","",null,null]],"p":[]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","i":[[0,"dispatcher","tracing","Dispatches trace events to <code>Subscriber</code>s.",null,null],[5,"set_default","tracing::dispatcher","Sets the dispatch as the default dispatch for the …",null,[[["dispatch",3]],["defaultguard",3]]],[5,"with_default","","Sets this dispatch as the default for the duration of a …",null,[[["dispatch",3]]]],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"get_default","","Executes a closure with a reference to this thread\'s …",null,[[]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration …",null,[[["dispatch",3]],[["setglobaldefaulterror",3],["result",4]]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[0,"field","tracing","Structured data associated with <code>Span</code>s and <code>Event</code>s.",null,null],[3,"Field","tracing::field","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",0,[[["i64",15],["field",3]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",0,[[["u64",15],["field",3]]]],[11,"record_bool","","Visit a boolean value.",0,[[["bool",15],["field",3]]]],[11,"record_str","","Visit a string value.",0,[[["str",15],["field",3]]]],[11,"record_error","","Records a type implementing <code>Error</code>.",0,[[["error",8],["field",3]]]],[10,"record_debug","","Visit a value implementing <code>fmt::Debug</code>.",0,[[["debug",8],["field",3]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",1,[[["visit",8],["field",3]]]],[3,"DisplayValue","","A <code>Value</code> which serializes using <code>fmt::Display</code>.",null,null],[3,"DebugValue","","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.",null,null],[5,"display","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …",null,[[],["displayvalue",3]]],[5,"debug","","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …",null,[[],["debugvalue",3]]],[8,"AsField","","Trait implemented to allow a type to be used as a field …",null,null],[10,"as_field","","Attempts to convert <code>&self</code> into a <code>Field</code> with the specified …",2,[[["metadata",3]],[["option",4],["field",3]]]],[0,"instrument","tracing","Attach a span to a <code>std::future::Future</code>.",null,null],[8,"Instrument","tracing::instrument","Attaches spans to a <code>std::future::Future</code>.",null,null],[11,"instrument","","Instruments this type with the provided <code>Span</code>, returning an…",3,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current <code>Span</code>, returning an …",3,[[],["instrumented",3]]],[8,"WithSubscriber","","Extension trait allowing futures to be instrumented with …",null,null],[11,"with_subscriber","","Attaches the provided <code>Subscriber</code> to this type, returning a…",4,[[],["withdispatch",3]]],[11,"with_current_subscriber","","Attaches the current default <code>Subscriber</code> to this type, …",4,[[],["withdispatch",3]]],[3,"WithDispatch","","A future that has been instrumented with a <code>tracing</code> …",null,null],[3,"Instrumented","","A future that has been instrumented with a <code>tracing</code> span.",null,null],[11,"span","","Borrows the <code>Span</code> that this type is instrumented by.",5,[[],["span",3]]],[11,"span_mut","","Mutably borrows the <code>Span</code> that this type is instrumented …",5,[[],["span",3]]],[11,"inner","","Borrows the wrapped type.",5,[[]]],[11,"inner_mut","","Mutably borrows the wrapped type.",5,[[]]],[11,"inner_pin_ref","","Get a pinned reference to the wrapped type.",5,[[["pin",3]],["pin",3]]],[11,"inner_pin_mut","","Get a pinned mutable reference to the wrapped type.",5,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>Instrumented</code>, returning the wrapped type.",5,[[]]],[0,"level_filters","tracing","Trace verbosity level filtering.",null,null],[3,"ParseLevelFilterError","tracing::level_filters","Indicates that a string could not be parsed to a valid …",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[17,"STATIC_MAX_LEVEL","","The statically configured maximum trace level.",null,null],[0,"span","tracing","Spans represent periods of time in which a program was …",null,null],[3,"Attributes","tracing::span","Attributes provided to a <code>Subscriber</code> describing a new span …",null,null],[3,"Id","","Identifies a span within the context of a subscriber.",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[8,"AsId","","Trait implemented by types which have a span <code>Id</code>.",null,null],[10,"as_id","","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …",6,[[],[["option",4],["id",3]]]],[3,"Span","","A handle representing a span, with the capability to …",null,null],[3,"Entered","","A guard representing a span which has been entered and is …",null,null],[3,"EnteredSpan","","An owned version of [<code>Entered</code>], a guard representing a …",null,null],[11,"new","","Constructs a new <code>Span</code> with the given metadata and set of …",7,[[["metadata",3],["valueset",3]],["span",3]]],[11,"new_root","","Constructs a new <code>Span</code> as the root of its own trace tree, …",7,[[["metadata",3],["valueset",3]],["span",3]]],[11,"child_of","","Constructs a new <code>Span</code> as child of the given parent span, …",7,[[["metadata",3],["valueset",3]],["span",3]]],[11,"new_disabled","","Constructs a new disabled span with the given <code>Metadata</code>.",7,[[["metadata",3]],["span",3]]],[11,"none","","Constructs a new span that is <em>completely disabled</em>.",7,[[],["span",3]]],[11,"current","","Returns a handle to the span considered by the <code>Subscriber</code> …",7,[[],["span",3]]],[11,"enter","","Enters this span, returning a guard that will exit the …",7,[[],["entered",3]]],[11,"entered","","Enters this span, consuming it and returning a [guard][…",7,[[],["enteredspan",3]]],[11,"in_scope","","Executes the given function in the context of this span.",7,[[["fnonce",8]]]],[11,"field","","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …",7,[[],[["field",3],["option",4]]]],[11,"has_field","","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …",7,[[],["bool",15]]],[11,"record","","Records that the field described by <code>field</code> has the value …",7,[[]]],[11,"record_all","","Records all the fields in the provided <code>ValueSet</code>.",7,[[["valueset",3]]]],[11,"is_disabled","","Returns <code>true</code> if this span was disabled by the subscriber …",7,[[],["bool",15]]],[11,"is_none","","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …",7,[[],["bool",15]]],[11,"follows_from","","Indicates that the span with the given ID has an indirect …",7,[[]]],[11,"id","","Returns this span\'s <code>Id</code>, if it is enabled.",7,[[],[["option",4],["id",3]]]],[11,"metadata","","Returns this span\'s <code>Metadata</code>, if it is enabled.",7,[[],[["metadata",3],["option",4]]]],[11,"with_subscriber","","Invokes a function with a reference to this span\'s ID and …",7,[[],["option",4]]],[11,"exit","","Exits this span, returning the underlying [<code>Span</code>].",8,[[],["span",3]]],[0,"subscriber","tracing","Collects and records trace data.",null,null],[8,"Subscriber","tracing::subscriber","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",9,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",9,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",9,[[],[["levelfilter",3],["option",4]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",9,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",9,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",9,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",9,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",9,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",9,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",9,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",9,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",9,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",9,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",9,[[["typeid",3]],["option",4]]],[3,"Interest","","Indicates a <code>Subscriber</code>\'s interest in a particular …",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"with_default","","Sets this subscriber as the default for the duration of a …",null,[[]]],[5,"set_global_default","","Sets this subscriber as the global default for the …",null,[[],[["result",4],["setglobaldefaulterror",3]]]],[5,"set_default","","Sets the subscriber as the default for the duration of …",null,[[],["defaultguard",3]]],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[8,"Instrument","tracing","Attaches spans to a <code>std::future::Future</code>.",null,null],[11,"instrument","","Instruments this type with the provided <code>Span</code>, returning an…",3,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current <code>Span</code>, returning an …",3,[[],["instrumented",3]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"Event","","<code>Event</code>s represent single points in time where something …",null,null],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",1,[[["visit",8],["field",3]]]],[8,"Subscriber","","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",9,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",9,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",9,[[],[["levelfilter",3],["option",4]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",9,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",9,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",9,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",9,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",9,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",9,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",9,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",9,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",9,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",9,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",9,[[["typeid",3]],["option",4]]],[0,"event","","Events represent single points in time during the …",null,null],[3,"Event","tracing::event","<code>Event</code>s represent single points in time where something …",null,null],[3,"Level","tracing","Describes the level of verbosity of a span or event.",null,null],[3,"Metadata","","Metadata describing a span or event.",null,null],[3,"Span","","A handle representing a span, with the capability to …",null,null],[23,"instrument","","Instruments a function to create and enter a <code>tracing</code> span …",null,null],[14,"span","","Constructs a new span.",null,null],[14,"trace_span","","Constructs a span at the trace level.",null,null],[14,"debug_span","","Constructs a span at the debug level.",null,null],[14,"info_span","","Constructs a span at the info level.",null,null],[14,"warn_span","","Constructs a span at the warn level.",null,null],[14,"error_span","","Constructs a span at the error level.",null,null],[14,"event","","Constructs a new <code>Event</code>.",null,null],[14,"trace","","Constructs an event at the trace level.",null,null],[14,"debug","","Constructs an event at the debug level.",null,null],[14,"info","","Constructs an event at the info level.",null,null],[14,"warn","","Constructs an event at the warn level.",null,null],[14,"error","","Constructs an event at the error level.",null,null],[11,"from","tracing::subscriber","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tracing","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tracing::subscriber","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","tracing::field","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tracing::instrument","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","tracing::level_filters","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","tracing::span","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","tracing","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tracing::span","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tracing::subscriber","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","tracing::event","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","tracing","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"fmt","tracing::subscriber","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::event","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","tracing::field","",13,[[]]],[11,"hash","tracing::span","",24,[[]]],[11,"partial_cmp","tracing::level_filters","",22,[[["levelfilter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["levelfilter",3]],["bool",15]]],[11,"le","","",22,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",22,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",22,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",22,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["level",3]],["bool",15]]],[11,"le","","",22,[[["level",3]],["bool",15]]],[11,"gt","","",22,[[["level",3]],["bool",15]]],[11,"ge","","",22,[[["level",3]],["bool",15]]],[11,"partial_cmp","tracing","",29,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["level",3]],["bool",15]]],[11,"le","","",29,[[["level",3]],["bool",15]]],[11,"gt","","",29,[[["level",3]],["bool",15]]],[11,"ge","","",29,[[["level",3]],["bool",15]]],[11,"partial_cmp","","",29,[[["levelfilter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["levelfilter",3]],["bool",15]]],[11,"le","","",29,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",29,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",29,[[["levelfilter",3]],["bool",15]]],[11,"from","tracing::level_filters","",22,[[["level",3],["option",4]],["levelfilter",3]]],[11,"from","","",22,[[["level",3]],["levelfilter",3]]],[11,"from","tracing","",11,[[],["dispatch",3]]],[11,"as_ref","tracing::field","",13,[[],["str",15]]],[11,"next","","",17,[[],[["field",3],["option",4]]]],[11,"default","tracing","Returns the current default dispatcher",11,[[],["dispatch",3]]],[11,"into","tracing::level_filters","",22,[[],[["level",3],["option",4]]]],[11,"clone","tracing::span","",24,[[],["id",3]]],[11,"clone","tracing::field","",13,[[],["field",3]]],[11,"clone","tracing::level_filters","",21,[[],["parselevelfiltererror",3]]],[11,"clone","","",22,[[],["levelfilter",3]]],[11,"clone","tracing","",29,[[],["level",3]]],[11,"clone","tracing::field","",19,[[],["debugvalue",3]]],[11,"clone","tracing::subscriber","",27,[[],["interest",3]]],[11,"clone","tracing","",11,[[],["dispatch",3]]],[11,"clone","tracing::field","",18,[[],["displayvalue",3]]],[11,"drop","tracing::subscriber","",10,[[]]],[11,"cmp","tracing","",29,[[["level",3]],["ordering",4]]],[11,"cmp","tracing::level_filters","",22,[[["levelfilter",3]],["ordering",4]]],[11,"record","tracing::field","",18,[[["visit",8],["field",3]]]],[11,"record","","",14,[[["visit",8],["field",3]]]],[11,"record","","",19,[[["visit",8],["field",3]]]],[11,"eq","","",13,[[["field",3]],["bool",15]]],[11,"eq","tracing::span","",24,[[["id",3]],["bool",15]]],[11,"ne","","",24,[[["id",3]],["bool",15]]],[11,"eq","tracing::field","",14,[[["empty",3]],["bool",15]]],[11,"eq","tracing","",29,[[["levelfilter",3]],["bool",15]]],[11,"eq","tracing::level_filters","",22,[[["levelfilter",3]],["bool",15]]],[11,"ne","","",22,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",22,[[["level",3]],["bool",15]]],[11,"eq","tracing","",29,[[["level",3]],["bool",15]]],[11,"ne","","",29,[[["level",3]],["bool",15]]],[11,"from_str","","",29,[[["str",15]],[["level",3],["parselevelerror",3],["result",4]]]],[11,"from_str","tracing::level_filters","",22,[[["str",15]],[["levelfilter",3],["result",4]]]],[11,"as_field","tracing::field","",13,[[["metadata",3]],[["option",4],["field",3]]]],[11,"drop","tracing","",7,[[]]],[11,"drop","tracing::span","",26,[[]]],[11,"drop","","",8,[[]]],[11,"into","tracing","",7,[[],[["option",4],["id",3]]]],[11,"clone","tracing::instrument","",20,[[],["withdispatch",3]]],[11,"clone","","",5,[[],["instrumented",3]]],[11,"clone","tracing","",7,[[],["span",3]]],[11,"eq","","",7,[[],["bool",15]]],[11,"deref","tracing::span","",8,[[],["span",3]]],[11,"fmt","tracing::instrument","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing::span","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tracing","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"poll","tracing::instrument","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"none","tracing","Returns a new <code>Dispatch</code> that discards events and spans.",11,[[],["dispatch",3]]],[11,"new","","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.",11,[[],["dispatch",3]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",11,[[["metadata",3]],["interest",3]]],[11,"new_span","","Record the construction of a new span, returning a new ID …",11,[[["attributes",3]],["id",3]]],[11,"record","","Record a set of values on a span.",11,[[["id",3],["record",3]]]],[11,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",11,[[["id",3]]]],[11,"enabled","","Returns true if a span with the specified metadata would …",11,[[["metadata",3]],["bool",15]]],[11,"event","","Records that an <code>Event</code> has occurred.",11,[[["event",3]]]],[11,"enter","","Records that a span has been can_enter.",11,[[["id",3]]]],[11,"exit","","Records that a span has been exited.",11,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",11,[[["id",3]],["id",3]]],[11,"drop_span","","Notifies the subscriber that a span ID has been dropped.",11,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a span ID has been dropped, …",11,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",11,[[],["current",3]]],[11,"is","","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …",11,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …",11,[[],["option",4]]],[11,"callsite","tracing::field","Returns an <code>Identifier</code> that uniquely identifies the …",13,[[],["identifier",3]]],[11,"name","","Returns a string representing the name of the field.",13,[[],["str",15]]],[11,"new","","Constructs a new <code>FieldSet</code> with the given array of field …",15,[[["identifier",3]],["fieldset",3]]],[11,"field","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …",15,[[],[["field",3],["option",4]]]],[11,"contains","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.",15,[[["field",3]],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.",15,[[],["iter",3]]],[11,"len","","Returns the number of fields in this <code>FieldSet</code>.",15,[[],["usize",15]]],[11,"is_empty","","Returns whether or not this <code>FieldSet</code> has fields.",15,[[],["bool",15]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",16,[[],["identifier",3]]],[18,"OFF","tracing::level_filters","The \\\"off\\\" level.",22,null],[18,"ERROR","","The \\\"error\\\" level.",22,null],[18,"WARN","","The \\\"warn\\\" level.",22,null],[18,"INFO","","The \\\"info\\\" level.",22,null],[18,"DEBUG","","The \\\"debug\\\" level.",22,null],[18,"TRACE","","The \\\"trace\\\" level.",22,null],[11,"from_level","","Returns a <code>LevelFilter</code> that enables spans and events with …",22,[[["level",3]],["levelfilter",3]]],[11,"into_level","","Returns the most verbose <code>Level</code> that this filter accepts, …",22,[[],[["level",3],["option",4]]]],[11,"current","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …",22,[[],["levelfilter",3]]],[11,"new","tracing::span","Returns <code>Attributes</code> describing a new child span of the …",23,[[["metadata",3],["valueset",3]],["attributes",3]]],[11,"new_root","","Returns <code>Attributes</code> describing a new span at the root of …",23,[[["metadata",3],["valueset",3]],["attributes",3]]],[11,"child_of","","Returns <code>Attributes</code> describing a new child span of the …",23,[[["metadata",3],["valueset",3],["id",3]],["attributes",3]]],[11,"metadata","","Returns a reference to the new span\'s metadata.",23,[[],["metadata",3]]],[11,"values","","Returns a reference to a <code>ValueSet</code> containing any values …",23,[[],["valueset",3]]],[11,"is_root","","Returns true if the new span should be a root.",23,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new span\'s parent should be …",23,[[],["bool",15]]],[11,"parent","","Returns the new span\'s explicitly-specified parent, if …",23,[[],[["option",4],["id",3]]]],[11,"record","","Records all the fields in this set of <code>Attributes</code> with the …",23,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …",23,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.",23,[[],["bool",15]]],[11,"from_u64","","Constructs a new span ID from the given <code>u64</code>.",24,[[["u64",15]],["id",3]]],[11,"from_non_zero_u64","","Constructs a new span ID from the given <code>NonZeroU64</code>.",24,[[["nonzerou64",3]],["id",3]]],[11,"into_u64","","Returns the span\'s ID as a <code>u64</code>.",24,[[],["u64",15]]],[11,"into_non_zero_u64","","Returns the span\'s ID as a <code>NonZeroU64</code>.",24,[[],["nonzerou64",3]]],[11,"new","","Constructs a new <code>Record</code> from a <code>ValueSet</code>.",25,[[["valueset",3]],["record",3]]],[11,"record","","Records all the fields in this <code>Record</code> with the provided …",25,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this <code>Record</code> contains a value for the …",25,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this <code>Record</code> contains <em>no</em> values.",25,[[],["bool",15]]],[11,"is","tracing","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.",9,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to this <code>Subscriber</code> value if it is …",9,[[],["option",4]]],[11,"never","tracing::subscriber","Returns an <code>Interest</code> indicating that the subscriber is …",27,[[],["interest",3]]],[11,"sometimes","","Returns an <code>Interest</code> indicating the subscriber is …",27,[[],["interest",3]]],[11,"always","","Returns an <code>Interest</code> indicating the subscriber is always …",27,[[],["interest",3]]],[11,"is_never","","Returns <code>true</code> if the subscriber is never interested in …",27,[[],["bool",15]]],[11,"is_sometimes","","Returns <code>true</code> if the subscriber is sometimes interested in …",27,[[],["bool",15]]],[11,"is_always","","Returns <code>true</code> if the subscriber is always interested in …",27,[[],["bool",15]]],[11,"dispatch","tracing::event","Constructs a new <code>Event</code> with the specified metadata and …",28,[[["metadata",3],["valueset",3]]]],[11,"new","","Returns a new <code>Event</code> in the current span, with the …",28,[[["metadata",3],["valueset",3]],["event",3]]],[11,"new_child_of","","Returns a new <code>Event</code> as a child of the specified span, …",28,[[["metadata",3],["valueset",3]],["event",3]]],[11,"child_of","","Constructs a new <code>Event</code> with the specified metadata and …",28,[[["metadata",3],["valueset",3]]]],[11,"record","","Visits all the fields on this <code>Event</code> with the specified …",28,[[["visit",8]]]],[11,"fields","","Returns an iterator over the set of values on this <code>Event</code>.",28,[[],["iter",3]]],[11,"metadata","","Returns metadata describing this <code>Event</code>.",28,[[],["metadata",3]]],[11,"is_root","","Returns true if the new event should be a root.",28,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new event\'s parent should be …",28,[[],["bool",15]]],[11,"parent","","Returns the new event\'s explicitly-specified parent, if …",28,[[],[["option",4],["id",3]]]],[18,"ERROR","tracing","The \\\"error\\\" level.",29,null],[18,"WARN","","The \\\"warn\\\" level.",29,null],[18,"INFO","","The \\\"info\\\" level.",29,null],[18,"DEBUG","","The \\\"debug\\\" level.",29,null],[18,"TRACE","","The \\\"trace\\\" level.",29,null],[11,"new","","Construct new metadata for a span or event, with a name, …",30,[[["u32",15],["option",4],["fieldset",3],["str",15],["str",15],["option",4],["level",3],["kind",3]],["metadata",3]]],[11,"fields","","Returns the names of the fields on the described span or …",30,[[],["fieldset",3]]],[11,"level","","Returns the level of verbosity of the described span or …",30,[[],["level",3]]],[11,"name","","Returns the name of the span.",30,[[],["str",15]]],[11,"target","","Returns a string describing the part of the system where …",30,[[],["str",15]]],[11,"module_path","","Returns the path to the Rust module where the span …",30,[[],[["str",15],["option",4]]]],[11,"file","","Returns the name of the source code file where the span …",30,[[],[["str",15],["option",4]]]],[11,"line","","Returns the line number in the source code file where the …",30,[[],[["u32",15],["option",4]]]],[11,"callsite","","Returns an opaque <code>Identifier</code> that uniquely identifies the …",30,[[],["identifier",3]]],[11,"is_event","","Returns true if the callsite kind is <code>Event</code>.",30,[[],["bool",15]]],[11,"is_span","","Return true if the callsite kind is <code>Span</code>.",30,[[],["bool",15]]]],"p":[[8,"Visit"],[8,"Value"],[8,"AsField"],[8,"Instrument"],[8,"WithSubscriber"],[3,"Instrumented"],[8,"AsId"],[3,"Span"],[3,"EnteredSpan"],[8,"Subscriber"],[3,"DefaultGuard"],[3,"Dispatch"],[3,"SetGlobalDefaultError"],[3,"Field"],[3,"Empty"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"WithDispatch"],[3,"ParseLevelFilterError"],[3,"LevelFilter"],[3,"Attributes"],[3,"Id"],[3,"Record"],[3,"Entered"],[3,"Interest"],[3,"Event"],[3,"Level"],[3,"Metadata"]]},\
"tracing_attributes":{"doc":"A procedural macro attribute for instrumenting functions …","i":[[23,"instrument","tracing_attributes","Instruments a function to create and enter a <code>tracing</code> span …",null,null]],"p":[]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","i":[[0,"callsite","tracing_core","Callsites represent the source locations from which spans …",null,null],[8,"Callsite","tracing_core::callsite","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the <code>Interest</code> for this callsite.",0,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",0,[[],["metadata",3]]],[3,"Identifier","","Uniquely identifies a <code>Callsite</code>",null,null],[5,"rebuild_interest_cache","","Clear and reregister interest on every <code>Callsite</code>",null,[[]]],[5,"register","","Register a new <code>Callsite</code> with the global registry.",null,[[["callsite",8]]]],[0,"dispatcher","tracing_core","Dispatches trace events to <code>Subscriber</code>s.",null,null],[3,"Dispatch","tracing_core::dispatcher","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"with_default","","Sets this dispatch as the default for the duration of a …",null,[[["dispatch",3]]]],[5,"set_default","","Sets the dispatch as the default dispatch for the …",null,[[["dispatch",3]],["defaultguard",3]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration …",null,[[["dispatch",3]],[["result",4],["setglobaldefaulterror",3]]]],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[5,"get_default","","Executes a closure with a reference to this thread\'s …",null,[[]]],[11,"none","","Returns a new <code>Dispatch</code> that discards events and spans.",1,[[]]],[11,"new","","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.",1,[[]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",1,[[["metadata",3]],["interest",3]]],[11,"new_span","","Record the construction of a new span, returning a new ID …",1,[[["attributes",3]],["id",3]]],[11,"record","","Record a set of values on a span.",1,[[["id",3],["record",3]]]],[11,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",1,[[["id",3]]]],[11,"enabled","","Returns true if a span with the specified metadata would …",1,[[["metadata",3]],["bool",15]]],[11,"event","","Records that an <code>Event</code> has occurred.",1,[[["event",3]]]],[11,"enter","","Records that a span has been can_enter.",1,[[["id",3]]]],[11,"exit","","Records that a span has been exited.",1,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",1,[[["id",3]],["id",3]]],[11,"drop_span","","Notifies the subscriber that a span ID has been dropped.",1,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a span ID has been dropped, …",1,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",1,[[],["current",3]]],[11,"is","","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …",1,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …",1,[[],["option",4]]],[0,"event","tracing_core","Events represent single points in time during the …",null,null],[3,"Event","tracing_core::event","<code>Event</code>s represent single points in time where something …",null,null],[11,"dispatch","","Constructs a new <code>Event</code> with the specified metadata and …",2,[[["valueset",3],["metadata",3]]]],[11,"new","","Returns a new <code>Event</code> in the current span, with the …",2,[[["valueset",3],["metadata",3]]]],[11,"new_child_of","","Returns a new <code>Event</code> as a child of the specified span, …",2,[[["valueset",3],["metadata",3]]]],[11,"child_of","","Constructs a new <code>Event</code> with the specified metadata and …",2,[[["valueset",3],["metadata",3]]]],[11,"record","","Visits all the fields on this <code>Event</code> with the specified …",2,[[["visit",8]]]],[11,"fields","","Returns an iterator over the set of values on this <code>Event</code>.",2,[[],["iter",3]]],[11,"metadata","","Returns metadata describing this <code>Event</code>.",2,[[],["metadata",3]]],[11,"is_root","","Returns true if the new event should be a root.",2,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new event\'s parent should be …",2,[[],["bool",15]]],[11,"parent","","Returns the new event\'s explicitly-specified parent, if …",2,[[],[["option",4],["id",3]]]],[0,"field","tracing_core","Span and <code>Event</code> key-value data.",null,null],[3,"Field","tracing_core::field","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",3,[[["field",3],["i64",15]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",3,[[["field",3],["u64",15]]]],[11,"record_bool","","Visit a boolean value.",3,[[["field",3],["bool",15]]]],[11,"record_str","","Visit a string value.",3,[[["field",3],["str",15]]]],[11,"record_error","","Records a type implementing <code>Error</code>.",3,[[["field",3],["error",8]]]],[10,"record_debug","","Visit a value implementing <code>fmt::Debug</code>.",3,[[["field",3],["debug",8]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",4,[[["field",3],["visit",8]]]],[3,"DisplayValue","","A <code>Value</code> which serializes using <code>fmt::Display</code>.",null,null],[3,"DebugValue","","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.",null,null],[5,"display","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …",null,[[],["displayvalue",3]]],[5,"debug","","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …",null,[[],["debugvalue",3]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",5,[[],["identifier",3]]],[11,"name","","Returns a string representing the name of the field.",5,[[],["str",15]]],[11,"new","","Constructs a new <code>FieldSet</code> with the given array of field …",6,[[["identifier",3]]]],[11,"field","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …",6,[[],[["field",3],["option",4]]]],[11,"contains","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.",6,[[["field",3]],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.",6,[[],["iter",3]]],[11,"len","","Returns the number of fields in this <code>FieldSet</code>.",6,[[],["usize",15]]],[11,"is_empty","","Returns whether or not this <code>FieldSet</code> has fields.",6,[[],["bool",15]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",7,[[],["identifier",3]]],[0,"metadata","tracing_core","Metadata describing trace data.",null,null],[3,"Metadata","tracing_core::metadata","Metadata describing a span or event.",null,null],[3,"Kind","","Indicates whether the callsite is a span or event.",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[3,"ParseLevelFilterError","","Indicates that a string could not be parsed to a valid …",null,null],[11,"new","","Construct new metadata for a span or event, with a name, …",8,[[["u32",15],["level",3],["option",4],["str",15],["fieldset",3],["str",15],["kind",3],["option",4]]]],[11,"fields","","Returns the names of the fields on the described span or …",8,[[],["fieldset",3]]],[11,"level","","Returns the level of verbosity of the described span or …",8,[[],["level",3]]],[11,"name","","Returns the name of the span.",8,[[],["str",15]]],[11,"target","","Returns a string describing the part of the system where …",8,[[],["str",15]]],[11,"module_path","","Returns the path to the Rust module where the span …",8,[[],[["option",4],["str",15]]]],[11,"file","","Returns the name of the source code file where the span …",8,[[],[["option",4],["str",15]]]],[11,"line","","Returns the line number in the source code file where the …",8,[[],[["u32",15],["option",4]]]],[11,"callsite","","Returns an opaque <code>Identifier</code> that uniquely identifies the …",8,[[],["identifier",3]]],[11,"is_event","","Returns true if the callsite kind is <code>Event</code>.",8,[[],["bool",15]]],[11,"is_span","","Return true if the callsite kind is <code>Span</code>.",8,[[],["bool",15]]],[18,"EVENT","","<code>Event</code> callsite",9,null],[18,"SPAN","","<code>Span</code> callsite",9,null],[11,"is_span","","Return true if the callsite kind is <code>Span</code>",9,[[],["bool",15]]],[11,"is_event","","Return true if the callsite kind is <code>Event</code>",9,[[],["bool",15]]],[18,"ERROR","","The \\\"error\\\" level.",10,null],[18,"WARN","","The \\\"warn\\\" level.",10,null],[18,"INFO","","The \\\"info\\\" level.",10,null],[18,"DEBUG","","The \\\"debug\\\" level.",10,null],[18,"TRACE","","The \\\"trace\\\" level.",10,null],[18,"OFF","","The \\\"off\\\" level.",11,null],[18,"ERROR","","The \\\"error\\\" level.",11,null],[18,"WARN","","The \\\"warn\\\" level.",11,null],[18,"INFO","","The \\\"info\\\" level.",11,null],[18,"DEBUG","","The \\\"debug\\\" level.",11,null],[18,"TRACE","","The \\\"trace\\\" level.",11,null],[11,"from_level","","Returns a <code>LevelFilter</code> that enables spans and events with …",11,[[["level",3]]]],[11,"into_level","","Returns the most verbose <code>Level</code> that this filter accepts, …",11,[[],[["option",4],["level",3]]]],[11,"current","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …",11,[[]]],[3,"ParseLevelError","","Returned if parsing a <code>Level</code> fails.",null,null],[0,"span","tracing_core","Spans represent periods of time in the execution of a …",null,null],[3,"Id","tracing_core::span","Identifies a span within the context of a subscriber.",null,null],[3,"Attributes","","Attributes provided to a <code>Subscriber</code> describing a new span …",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[3,"Current","","Indicates what the <code>Subscriber</code> considers the \\\"current\\\" …",null,null],[11,"from_u64","","Constructs a new span ID from the given <code>u64</code>.",12,[[["u64",15]]]],[11,"from_non_zero_u64","","Constructs a new span ID from the given <code>NonZeroU64</code>.",12,[[["nonzerou64",3]]]],[11,"into_u64","","Returns the span\'s ID as a <code>u64</code>.",12,[[],["u64",15]]],[11,"into_non_zero_u64","","Returns the span\'s ID as a <code>NonZeroU64</code>.",12,[[],["nonzerou64",3]]],[11,"new","","Returns <code>Attributes</code> describing a new child span of the …",13,[[["valueset",3],["metadata",3]]]],[11,"new_root","","Returns <code>Attributes</code> describing a new span at the root of …",13,[[["valueset",3],["metadata",3]]]],[11,"child_of","","Returns <code>Attributes</code> describing a new child span of the …",13,[[["valueset",3],["metadata",3],["id",3]]]],[11,"metadata","","Returns a reference to the new span\'s metadata.",13,[[],["metadata",3]]],[11,"values","","Returns a reference to a <code>ValueSet</code> containing any values …",13,[[],["valueset",3]]],[11,"is_root","","Returns true if the new span should be a root.",13,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new span\'s parent should be …",13,[[],["bool",15]]],[11,"parent","","Returns the new span\'s explicitly-specified parent, if …",13,[[],[["option",4],["id",3]]]],[11,"record","","Records all the fields in this set of <code>Attributes</code> with the …",13,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …",13,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.",13,[[],["bool",15]]],[11,"new","","Constructs a new <code>Record</code> from a <code>ValueSet</code>.",14,[[["valueset",3]]]],[11,"record","","Records all the fields in this <code>Record</code> with the provided …",14,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this <code>Record</code> contains a value for the …",14,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this <code>Record</code> contains <em>no</em> values.",14,[[],["bool",15]]],[11,"new","","Constructs a new <code>Current</code> that indicates the current …",15,[[["metadata",3],["id",3]]]],[11,"none","","Constructs a new <code>Current</code> that indicates the current …",15,[[]]],[11,"is_known","","Returns <code>true</code> if the <code>Subscriber</code> that constructed this …",15,[[],["bool",15]]],[11,"into_inner","","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …",15,[[],["option",4]]],[11,"id","","Borrows the <code>Id</code> of the current span, if one exists and is …",15,[[],[["option",4],["id",3]]]],[11,"metadata","","Borrows the <code>Metadata</code> of the current span, if one exists …",15,[[],[["option",4],["metadata",3]]]],[0,"subscriber","tracing_core","Subscribers collect and record trace data.",null,null],[8,"Subscriber","tracing_core::subscriber","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",16,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",16,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",16,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",16,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",16,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",16,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",16,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",16,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",16,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",16,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",16,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",16,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",16,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",16,[[["typeid",3]],["option",4]]],[11,"is","","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.",16,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to this <code>Subscriber</code> value if it is …",16,[[],["option",4]]],[3,"Interest","","Indicates a <code>Subscriber</code>\'s interest in a particular …",null,null],[11,"never","","Returns an <code>Interest</code> indicating that the subscriber is …",17,[[]]],[11,"sometimes","","Returns an <code>Interest</code> indicating the subscriber is …",17,[[]]],[11,"always","","Returns an <code>Interest</code> indicating the subscriber is always …",17,[[]]],[11,"is_never","","Returns <code>true</code> if the subscriber is never interested in …",17,[[],["bool",15]]],[11,"is_sometimes","","Returns <code>true</code> if the subscriber is sometimes interested in …",17,[[],["bool",15]]],[11,"is_always","","Returns <code>true</code> if the subscriber is always interested in …",17,[[],["bool",15]]],[3,"Once","tracing_core","A synchronization primitive which can be used to run a …",null,null],[8,"Callsite","","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the <code>Interest</code> for this callsite.",0,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",0,[[],["metadata",3]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"Event","","<code>Event</code>s represent single points in time where something …",null,null],[3,"Field","","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[3,"Metadata","","Metadata describing a span or event.",null,null],[8,"Subscriber","","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",16,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",16,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",16,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",16,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",16,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",16,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",16,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",16,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",16,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",16,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",16,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",16,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",16,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",16,[[["typeid",3]],["option",4]]],[14,"identify_callsite","","Statically constructs an <code>Identifier</code> for the provided …",null,null],[14,"metadata","","Statically constructs new span metadata.",null,null],[11,"from","tracing_core::callsite","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tracing_core","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tracing_core::dispatcher","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tracing_core","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","tracing_core::field","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tracing_core","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tracing_core::metadata","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tracing_core","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tracing_core::metadata","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","tracing_core::span","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tracing_core::subscriber","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","tracing_core","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"record","tracing_core::field","",23,[[["field",3],["visit",8]]]],[11,"record","","",24,[[["field",3],["visit",8]]]],[11,"record","","",21,[[["field",3],["visit",8]]]],[11,"drop","tracing_core::dispatcher","",19,[[]]],[11,"as_ref","tracing_core","",5,[[],["str",15]]],[11,"from","","",1,[[]]],[11,"from","","",11,[[["level",3]]]],[11,"from","","",11,[[["option",4],["level",3]]]],[11,"into","","",11,[[],[["option",4],["level",3]]]],[11,"into","tracing_core::span","",15,[[],[["option",4],["id",3]]]],[11,"next","tracing_core::field","",22,[[],[["field",3],["option",4]]]],[11,"clone","tracing_core::callsite","",18,[[],["identifier",3]]],[11,"clone","tracing_core","",1,[[],["dispatch",3]]],[11,"clone","tracing_core::field","",23,[[],["displayvalue",3]]],[11,"clone","","",24,[[],["debugvalue",3]]],[11,"clone","tracing_core","",5,[[]]],[11,"clone","tracing_core::metadata","",9,[[],["kind",3]]],[11,"clone","tracing_core","",10,[[],["level",3]]],[11,"clone","","",11,[[],["levelfilter",3]]],[11,"clone","tracing_core::metadata","",25,[[],["parselevelfiltererror",3]]],[11,"clone","tracing_core::span","",12,[[],["id",3]]],[11,"clone","tracing_core::subscriber","",17,[[],["interest",3]]],[11,"default","tracing_core","Returns the current default dispatcher",1,[[]]],[11,"cmp","","",10,[[],["ordering",4]]],[11,"cmp","","",11,[[],["ordering",4]]],[11,"eq","tracing_core::callsite","",18,[[["identifier",3]],["bool",15]]],[11,"eq","tracing_core::field","",21,[[["empty",3]],["bool",15]]],[11,"eq","tracing_core","",5,[[],["bool",15]]],[11,"eq","tracing_core::metadata","",9,[[["kind",3]],["bool",15]]],[11,"ne","","",9,[[["kind",3]],["bool",15]]],[11,"eq","tracing_core","",10,[[["level",3]],["bool",15]]],[11,"ne","","",10,[[["level",3]],["bool",15]]],[11,"eq","","",11,[[["levelfilter",3]],["bool",15]]],[11,"ne","","",11,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",10,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",11,[[["level",3]],["bool",15]]],[11,"eq","tracing_core::span","",12,[[["id",3]],["bool",15]]],[11,"ne","","",12,[[["id",3]],["bool",15]]],[11,"partial_cmp","tracing_core","",10,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["level",3]],["bool",15]]],[11,"le","","",10,[[["level",3]],["bool",15]]],[11,"gt","","",10,[[["level",3]],["bool",15]]],[11,"ge","","",10,[[["level",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["levelfilter",3]],["bool",15]]],[11,"le","","",10,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",10,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",10,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["levelfilter",3]],["bool",15]]],[11,"le","","",11,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",11,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",11,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["level",3]],["bool",15]]],[11,"le","","",11,[[["level",3]],["bool",15]]],[11,"gt","","",11,[[["level",3]],["bool",15]]],[11,"ge","","",11,[[["level",3]],["bool",15]]],[11,"fmt","tracing_core::callsite","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::dispatcher","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",26,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::span","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::subscriber","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::dispatcher","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"hash","tracing_core::callsite","",18,[[]]],[11,"hash","tracing_core","",5,[[]]],[11,"hash","tracing_core::span","",12,[[]]],[11,"from_str","tracing_core","",10,[[["str",15]],[["result",4],["parselevelerror",3]]]],[11,"from_str","","",11,[[["str",15]],["result",4]]],[11,"new","","Creates a new <code>Once</code> value.",27,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. …",27,[[]]],[11,"call_once_force","","Performs the same function as <code>call_once()</code> except ignores …",27,[[]]],[11,"is_completed","","Returns <code>true</code> if some <code>call_once()</code> call has completed …",27,[[],["bool",15]]]],"p":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[3,"Attributes"],[3,"Record"],[3,"Current"],[8,"Subscriber"],[3,"Interest"],[3,"Identifier"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Empty"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"ParseLevelFilterError"],[3,"ParseLevelError"],[3,"Once"]]},\
"tracing_error":{"doc":"Utilities for enriching error handling with <code>tracing</code> …","i":[[0,"prelude","tracing_error","The <code>tracing-error</code> prelude.",null,null],[8,"_","tracing_error::prelude","A trait for extracting SpanTraces created by …",null,null],[10,"span_trace","","Attempts to downcast to a <code>TracedError</code> and return a …",0,[[],[["option",4],["spantrace",3]]]],[8,"_","","Extension trait for instrumenting errors with <code>SpanTrace</code>s",null,null],[16,"Instrumented","","The type of the wrapped error after instrumentation",1,null],[10,"in_current_span","","Instrument an Error by bundling it with a SpanTrace",1,[[]]],[8,"_","","Extension trait for instrumenting errors in <code>Result</code>s with …",null,null],[16,"Instrumented","","The type of the wrapped error after instrumentation",2,null],[10,"in_current_span","","Instrument an Error by bundling it with a SpanTrace",2,[[],["result",4]]],[3,"SpanTrace","tracing_error","A captured trace of <code>tracing</code> spans.",null,null],[3,"SpanTraceStatus","","The current status of a SpanTrace, indicating whether it …",null,null],[8,"ExtractSpanTrace","","A trait for extracting SpanTraces created by …",null,null],[10,"span_trace","","Attempts to downcast to a <code>TracedError</code> and return a …",0,[[],[["option",4],["spantrace",3]]]],[8,"InstrumentError","","Extension trait for instrumenting errors with <code>SpanTrace</code>s",null,null],[16,"Instrumented","","The type of the wrapped error after instrumentation",1,null],[10,"in_current_span","","Instrument an Error by bundling it with a SpanTrace",1,[[]]],[8,"InstrumentResult","","Extension trait for instrumenting errors in <code>Result</code>s with …",null,null],[16,"Instrumented","","The type of the wrapped error after instrumentation",2,null],[10,"in_current_span","","Instrument an Error by bundling it with a SpanTrace",2,[[],["result",4]]],[3,"TracedError","","A wrapper type for <code>Error</code>s that bundles a <code>SpanTrace</code> with …",null,null],[3,"ErrorLayer","","A subscriber <code>Layer</code> that enables capturing <code>SpanTrace</code>s.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"clone","","",3,[[],["spantrace",3]]],[11,"default","","",6,[[]]],[11,"eq","","",4,[[["spantracestatus",3]],["bool",15]]],[11,"ne","","",4,[[["spantracestatus",3]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["error",8],["option",4]]]],[11,"new_span","","Notifies this layer that a new span was constructed with …",6,[[["id",3],["attributes",3],["context",3]]]],[11,"downcast_raw","","",6,[[["typeid",3]],["option",4]]],[11,"capture","","Capture the current span trace.",3,[[]]],[11,"with_spans","","Apply a function to all captured spans in the trace until …",3,[[]]],[11,"status","","Returns the status of this <code>SpanTrace</code>.",3,[[],["spantracestatus",3]]],[18,"UNSUPPORTED","","Formatting a SpanTrace is not supported, likely because …",4,null],[18,"EMPTY","","The SpanTrace is empty, likely because it was captured …",4,null],[18,"CAPTURED","","A span trace has been captured and the <code>SpanTrace</code> should …",4,null],[11,"new","","Returns a new <code>ErrorLayer</code> with the provided field formatter…",6,[[]]]],"p":[[8,"_"],[8,"_"],[8,"_"],[3,"SpanTrace"],[3,"SpanTraceStatus"],[3,"TracedError"],[3,"ErrorLayer"]]},\
"tracing_subscriber":{"doc":"Utilities for implementing and composing <code>tracing</code> …","i":[[0,"field","tracing_subscriber","Utilities for working with fields and field visitors.",null,null],[0,"debug","tracing_subscriber::field","<code>MakeVisitor</code> wrappers for working with <code>fmt::Debug</code> fields.",null,null],[3,"Alt","tracing_subscriber::field::debug","A visitor wrapper that ensures any <code>fmt::Debug</code> fields are …",null,null],[11,"new","","Wraps the provided visitor so that any <code>fmt::Debug</code> fields …",0,[[]]],[0,"delimited","tracing_subscriber::field","A <code>MakeVisitor</code> wrapper that separates formatted fields …",null,null],[3,"Delimited","tracing_subscriber::field::delimited","A <code>MakeVisitor</code> wrapper that wraps a visitor that writes …",null,null],[3,"VisitDelimited","","A visitor wrapper that inserts a delimiter after the …",null,null],[11,"new","","Returns a new <code>MakeVisitor</code> implementation that wraps <code>inner</code> …",1,[[]]],[11,"new","","Returns a new <code>Visit</code> implementation that wraps <code>inner</code> so …",2,[[]]],[0,"display","tracing_subscriber::field","<code>MakeVisitor</code> wrappers for working with <code>fmt::Display</code> fields.",null,null],[3,"Messages","tracing_subscriber::field::display","A visitor wrapper that ensures any strings named …",null,null],[11,"new","","Returns a new <code>MakeVisitor</code> implementation that will wrap …",3,[[]]],[8,"Visit","tracing_subscriber::field","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",4,[[["i64",15],["field",3]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",4,[[["u64",15],["field",3]]]],[11,"record_bool","","Visit a boolean value.",4,[[["bool",15],["field",3]]]],[11,"record_str","","Visit a string value.",4,[[["str",15],["field",3]]]],[11,"record_error","","Records a type implementing <code>Error</code>.",4,[[["error",8],["field",3]]]],[10,"record_debug","","Visit a value implementing <code>fmt::Debug</code>.",4,[[["debug",8],["field",3]]]],[8,"MakeVisitor","","Creates new visitors.",null,null],[16,"Visitor","","The visitor type produced by this <code>MakeVisitor</code>.",5,null],[10,"make_visitor","","Make a new visitor for the provided <code>target</code>.",5,[[]]],[8,"VisitOutput","","A visitor that produces output once it has visited a set …",null,null],[10,"finish","","Completes the visitor, returning any output.",6,[[]]],[11,"visit","","Visit a set of fields, and return the output of finishing …",6,[[]]],[8,"RecordFields","","Extension trait implemented by types which can be …",null,null],[10,"record","","Record all the fields in <code>self</code> with the provided <code>visitor</code>.",7,[[["visit",8]]]],[8,"MakeOutput","","Extension trait implemented for all <code>MakeVisitor</code> …",null,null],[11,"visit_with","","Visits all fields in <code>fields</code> with a new visitor …",8,[[]]],[8,"VisitWrite","","Extension trait implemented by visitors to indicate that …",null,null],[10,"writer","","Returns the writer that this visitor writes to.",9,[[],["write",8]]],[8,"VisitFmt","","Extension trait implemented by visitors to indicate that …",null,null],[10,"writer","","Returns the formatter that this visitor writes to.",10,[[],["write",8]]],[8,"MakeExt","","Extension trait providing <code>MakeVisitor</code> combinators.",null,null],[11,"debug_alt","","Wraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …",11,[[],["alt",3]]],[11,"display_messages","","Wraps <code>self</code> so that any string fields named \\\"message\\\" are …",11,[[],["messages",3]]],[11,"delimited","","Wraps <code>self</code> so that when fields are formatted to a writer, …",11,[[],["delimited",3]]],[0,"filter","tracing_subscriber","<code>Layer</code>s that control which spans and events are enabled by …",null,null],[3,"LevelFilter","tracing_subscriber::filter","A filter comparable to a verbosity <code>Level</code>.",null,null],[3,"LevelParseError","","Indicates that a string could not be parsed to a valid …",null,null],[0,"fmt","tracing_subscriber","A <code>Subscriber</code> for formatting and logging <code>tracing</code> data.",null,null],[0,"format","tracing_subscriber::fmt","Formatters for logging <code>tracing</code> events.",null,null],[8,"FormatEvent","tracing_subscriber::fmt::format","A type that can format a tracing <code>Event</code> for a <code>fmt::Write</code>.",null,null],[10,"format_event","","Write a log message for <code>Event</code> in <code>Context</code> to the given …",12,[[["fmtcontext",3],["write",8],["event",3]],["result",6]]],[8,"FormatFields","","A type that can format a set of fields to a <code>fmt::Write</code>.",null,null],[10,"format_fields","","Format the provided <code>fields</code> to the provided <code>writer</code>, …",13,[[["write",8],["recordfields",8]],["result",6]]],[11,"add_fields","","Record additional field(s) on an existing span.",13,[[["string",3],["record",3]],["result",6]]],[5,"format","","Returns the default configuration for an [event formatter]…",null,[[],["format",3]]],[5,"debug_fn","","Returns a <code>FormatFields</code> implementation that formats fields …",null,[[],["fieldfn",3]]],[3,"FieldFn","","A <code>FormatFields</code> implementation that formats fields by …",null,null],[3,"FieldFnVisitor","","The visitor produced by <code>FieldFn</code>\'s <code>MakeVisitor</code> …",null,null],[3,"Compact","","Marker for <code>Format</code> that indicates that the compact log …",null,null],[3,"Full","","Marker for <code>Format</code> that indicates that the verbose log …",null,null],[3,"Format","","A pre-configured event formatter.",null,null],[11,"compact","","Use a less verbose output format.",14,[[],[["format",3],["compact",3]]]],[11,"with_timer","","Use the given <code>timer</code> for log message timestamps.",14,[[],["format",3]]],[11,"without_time","","Do not emit timestamps with log messages.",14,[[],["format",3]]],[11,"with_ansi","","Enable ANSI terminal colors for formatted output.",14,[[["bool",15]],["format",3]]],[11,"with_target","","Sets whether or not an event\'s target is displayed.",14,[[["bool",15]],["format",3]]],[11,"with_level","","Sets whether or not an event\'s level is displayed.",14,[[["bool",15]],["format",3]]],[11,"with_thread_ids","","Sets whether or not the thread ID of the current thread …",14,[[["bool",15]],["format",3]]],[11,"with_thread_names","","Sets whether or not the name of the current thread is …",14,[[["bool",15]],["format",3]]],[3,"DefaultFields","","The default <code>FormatFields</code> implementation.",null,null],[3,"DefaultVisitor","","The visitor produced by <code>DefaultFields</code>\'s <code>MakeVisitor</code> …",null,null],[11,"new","","Returns a new default <code>FormatFields</code> implementation.",15,[[]]],[11,"new","","Returns a new default visitor that formats to the …",16,[[["bool",15],["write",8]]]],[3,"FmtSpan","","Configures what points in the span lifecycle are logged …",null,null],[18,"NEW","","one event when span is created",17,null],[18,"ENTER","","one event per enter of a span",17,null],[18,"EXIT","","one event per exit of a span",17,null],[18,"CLOSE","","one event when the span is dropped",17,null],[18,"NONE","","spans are ignored (this is the default)",17,null],[18,"ACTIVE","","one event per enter/exit of a span",17,null],[18,"FULL","","events at all points (new, enter, exit, drop)",17,null],[0,"time","tracing_subscriber::fmt","Formatters for event timestamps.",null,null],[8,"FormatTime","tracing_subscriber::fmt::time","A type that can measure and format the current time.",null,null],[10,"format_time","","Measure and write out the current time.",18,[[["write",8]],["result",6]]],[5,"time","","Returns a new <code>SystemTime</code> timestamp provider.",null,[[],["systemtime",3]]],[5,"uptime","","Returns a new <code>Uptime</code> timestamp provider.",null,[[],["uptime",3]]],[3,"SystemTime","","Retrieve and print the current wall-clock time.",null,null],[3,"Uptime","","Retrieve and print the relative elapsed wall-clock time …",null,null],[0,"writer","tracing_subscriber::fmt","Abstractions for creating <code>io::Write</code> instances.",null,null],[8,"MakeWriter","tracing_subscriber::fmt::writer","A type that can create <code>io::Write</code> instances.",null,null],[16,"Writer","","The concrete <code>io::Write</code> implementation returned by …",19,null],[10,"make_writer","","Returns an instance of <code>Writer</code>.",19,[[]]],[3,"TestWriter","","A writer intended to support <code>libtest</code>\'s output capturing …",null,null],[11,"new","","Returns a new <code>TestWriter</code> with the default configuration.",20,[[]]],[3,"BoxMakeWriter","","A writer that erases the specific <code>io::Write</code> and <code>Makewriter</code>…",null,null],[11,"new","","Constructs a <code>BoxMakeWriter</code> wrapping a type implementing …",21,[[]]],[6,"LayerBuilder","tracing_subscriber::fmt","A builder for <code>Layer</code> that logs formatted representations …",null,null],[3,"FmtContext","","Provides the current span context to a formatter.",null,null],[3,"FormattedFields","","A formatted representation of a span\'s fields stored in …",null,null],[12,"fields","","The formatted fields of a span.",22,null],[3,"Layer","","A <code>Layer</code> that logs formatted representations of <code>tracing</code> …",null,null],[5,"format","","Returns the default configuration for an [event formatter]…",null,[[],["format",3]]],[8,"FormatEvent","","A type that can format a tracing <code>Event</code> for a <code>fmt::Write</code>.",null,null],[10,"format_event","","Write a log message for <code>Event</code> in <code>Context</code> to the given …",12,[[["fmtcontext",3],["write",8],["event",3]],["result",6]]],[8,"FormatFields","","A type that can format a set of fields to a <code>fmt::Write</code>.",null,null],[10,"format_fields","","Format the provided <code>fields</code> to the provided <code>writer</code>, …",13,[[["write",8],["recordfields",8]],["result",6]]],[11,"add_fields","","Record additional field(s) on an existing span.",13,[[["string",3],["record",3]],["result",6]]],[5,"time","","Returns a new <code>SystemTime</code> timestamp provider.",null,[[],["systemtime",3]]],[8,"MakeWriter","","A type that can create <code>io::Write</code> instances.",null,null],[16,"Writer","","The concrete <code>io::Write</code> implementation returned by …",19,null],[10,"make_writer","","Returns an instance of <code>Writer</code>.",19,[[]]],[3,"TestWriter","","A writer intended to support <code>libtest</code>\'s output capturing …",null,null],[3,"Subscriber","","A <code>Subscriber</code> that logs formatted representations of …",null,null],[6,"Formatter","","A <code>Subscriber</code> that logs formatted representations of …",null,null],[3,"SubscriberBuilder","","Configures and constructs <code>Subscriber</code>s.",null,null],[5,"fmt","","Returns a new <code>SubscriberBuilder</code> for configuring a …",null,[[],["subscriberbuilder",3]]],[5,"layer","","Returns a new formatting layer that can be composed with …",null,[[],["layer",3]]],[18,"DEFAULT_MAX_LEVEL","","The maximum verbosity level that is enabled by a …",23,null],[11,"builder","","Returns a new <code>SubscriberBuilder</code> for configuring a format …",23,[[],["subscriberbuilder",3]]],[11,"new","","Returns a new format subscriber with the default …",23,[[]]],[11,"finish","","Finish the builder, returning a new <code>FmtSubscriber</code>.",24,[[],["subscriber",3]]],[11,"try_init","","Install this Subscriber as the global default if one is …",24,[[],[["result",4],["box",3]]]],[11,"init","","Install this Subscriber as the global default.",24,[[]]],[11,"with_timer","","Use the given <code>timer</code> for log message timestamps.",24,[[],[["subscriberbuilder",3],["format",3]]]],[11,"without_time","","Do not emit timestamps with log messages.",24,[[],[["format",3],["subscriberbuilder",3]]]],[11,"with_span_events","","Configures how synthesized events are emitted at points …",24,[[["fmtspan",3]]]],[11,"with_target","","Sets whether or not an event\'s target is displayed.",24,[[["bool",15]],[["format",3],["subscriberbuilder",3]]]],[11,"with_level","","Sets whether or not an event\'s level is displayed.",24,[[["bool",15]],[["format",3],["subscriberbuilder",3]]]],[11,"with_thread_names","","Sets whether or not the name of the current thread is …",24,[[["bool",15]],[["format",3],["subscriberbuilder",3]]]],[11,"with_thread_ids","","Sets whether or not the thread ID of the current thread …",24,[[["bool",15]],[["format",3],["subscriberbuilder",3]]]],[11,"compact","","Sets the subscriber being built to use a less verbose …",24,[[],[["format",3],["subscriberbuilder",3]]]],[11,"fmt_fields","","Sets the Visitor that the subscriber being built will use …",24,[[],["subscriberbuilder",3]]],[11,"with_max_level","","Sets the maximum verbosity level that will be enabled by …",24,[[],[["levelfilter",3],["subscriberbuilder",3]]]],[11,"event_format","","Sets the function that the subscriber being built should …",24,[[],["subscriberbuilder",3]]],[11,"inherit_fields","","Sets whether or not spans inherit their parents\' field …",24,[[["bool",15]]]],[11,"on_event","","Sets the function that the subscriber being built should …",24,[[],["subscriberbuilder",3]]],[11,"with_writer","","Sets the <code>MakeWriter</code> that the subscriber being built will …",24,[[],["subscriberbuilder",3]]],[11,"with_test_writer","","Configures the subscriber to support <code>libtest</code>\'s output …",24,[[],[["subscriberbuilder",3],["testwriter",3]]]],[5,"try_init","","Install a global tracing subscriber that listens for …",null,[[],[["result",4],["box",3]]]],[5,"init","","Install a global tracing subscriber that listens for …",null,[[]]],[0,"layer","tracing_subscriber","A composable abstraction for building <code>Subscriber</code>s.",null,null],[8,"Layer","tracing_subscriber::layer","A composable handler for <code>tracing</code> events.",null,null],[11,"register_callsite","","Registers a new callsite with this layer, returning …",25,[[["metadata",3]],["interest",3]]],[11,"enabled","","Returns <code>true</code> if this layer is interested in a span or …",25,[[["metadata",3],["context",3]],["bool",15]]],[11,"new_span","","Notifies this layer that a new span was constructed with …",25,[[["context",3],["id",3],["attributes",3]]]],[11,"on_record","","Notifies this layer that a span with the given <code>Id</code> …",25,[[["record",3],["id",3],["context",3]]]],[11,"on_follows_from","","Notifies this layer that a span with the ID <code>span</code> recorded …",25,[[["id",3],["context",3]]]],[11,"on_event","","Notifies this layer that an event has occurred.",25,[[["context",3],["event",3]]]],[11,"on_enter","","Notifies this layer that a span with the given ID was …",25,[[["id",3],["context",3]]]],[11,"on_exit","","Notifies this layer that the span with the given ID was …",25,[[["id",3],["context",3]]]],[11,"on_close","","Notifies this layer that the span with the given ID has …",25,[[["id",3],["context",3]]]],[11,"on_id_change","","Notifies this layer that a span ID has been cloned, and …",25,[[["id",3],["context",3]]]],[11,"and_then","","Composes this layer around the given <code>Layer</code>, returning a …",25,[[],["layered",3]]],[11,"with_subscriber","","Composes this <code>Layer</code> with the given <code>Subscriber</code>, returning a…",25,[[],["layered",3]]],[8,"SubscriberExt","","Extension trait adding a <code>with(Layer)</code> combinator to …",null,null],[11,"with","","Wraps <code>self</code> with the provided <code>layer</code>.",26,[[],["layered",3]]],[3,"Context","","Represents information about the current context provided …",null,null],[3,"Layered","","A <code>Subscriber</code> composed of a <code>Subscriber</code> wrapped by one or …",null,null],[3,"Identity","","A layer that does nothing.",null,null],[3,"Scope","","An iterator over the stored data for all the spans in the …",null,null],[11,"current_span","","Returns the wrapped subscriber\'s view of the current span.",27,[[],["current",3]]],[11,"enabled","","Returns whether the wrapped subscriber would enable the …",27,[[["metadata",3]],["bool",15]]],[11,"event","","Records the provided <code>event</code> with the wrapped subscriber.",27,[[["event",3]]]],[11,"metadata","","Returns metadata for the span with the given <code>id</code>, if it …",27,[[["id",3]],[["metadata",3],["option",4]]]],[11,"span","","Returns stored data for the span with the given <code>id</code>, if it …",27,[[["id",3]],[["option",4],["spanref",3]]]],[11,"exists","","Returns <code>true</code> if an active span exists for the given <code>Id</code>.",27,[[["id",3]],["bool",15]]],[11,"lookup_current","","Returns stored data for the span that the wrapped …",27,[[],[["option",4],["spanref",3]]]],[11,"scope","","Returns an iterator over the stored data for all the …",27,[[],["scope",3]]],[11,"new","","Returns a new <code>Identity</code> layer.",28,[[]]],[0,"prelude","tracing_subscriber","The <code>tracing-subscriber</code> prelude.",null,null],[0,"registry","","Storage for span data shared by multiple <code>Layer</code>s.",null,null],[3,"Extensions","tracing_subscriber::registry","An immutable, read-only reference to a Span\'s extensions.",null,null],[3,"ExtensionsMut","","An mutable reference to a Span\'s extensions.",null,null],[3,"Data","","Span data stored in a <code>Registry</code>.",null,null],[3,"Registry","","A shared, reusable store for spans.",null,null],[8,"LookupSpan","","Provides access to stored span data.",null,null],[16,"Data","","The type of span data stored in this registry.",29,null],[10,"span_data","","Returns the <code>SpanData</code> for a given <code>Id</code>, if it exists.",29,[[["id",3]],["option",4]]],[11,"span","","Returns a <code>SpanRef</code> for the span with the given <code>Id</code>, if it …",29,[[["id",3]],[["option",4],["spanref",3]]]],[8,"SpanData","","A stored representation of data associated with a span.",null,null],[10,"id","","Returns this span\'s ID.",30,[[],["id",3]]],[10,"metadata","","Returns a reference to the span\'s <code>Metadata</code>.",30,[[],["metadata",3]]],[10,"parent","","Returns a reference to the ID",30,[[],[["id",3],["option",4]]]],[10,"extensions","","Returns a reference to this span\'s <code>Extensions</code>.",30,[[],["extensions",3]]],[10,"extensions_mut","","Returns a mutable reference to this span\'s <code>Extensions</code>.",30,[[],["extensionsmut",3]]],[3,"SpanRef","","A reference to span data and the associated registry.",null,null],[3,"Parents","","An iterator over the parents of a span.",null,null],[3,"FromRoot","","An iterator over a span\'s parents, starting with the root …",null,null],[11,"id","","Returns this span\'s ID.",31,[[],["id",3]]],[11,"metadata","","Returns a static reference to the span\'s metadata.",31,[[],["metadata",3]]],[11,"name","","Returns the span\'s name,",31,[[],["str",15]]],[11,"fields","","Returns a list of fields defined by the span.",31,[[],["fieldset",3]]],[11,"parent_id","","Returns the ID of this span\'s parent, or <code>None</code> if this …",31,[[],[["id",3],["option",4]]]],[11,"parent","","Returns a <code>SpanRef</code> describing this span\'s parent, or <code>None</code> …",31,[[],["option",4]]],[11,"parents","","Returns an iterator over all parents of this span, …",31,[[],["parents",3]]],[11,"from_root","","Returns an iterator over all parents of this span, …",31,[[],["fromroot",3]]],[11,"extensions","","Returns a reference to this span\'s <code>Extensions</code>.",31,[[],["extensions",3]]],[11,"extensions_mut","","Returns a mutable reference to this span\'s <code>Extensions</code>.",31,[[],["extensionsmut",3]]],[0,"reload","tracing_subscriber","Wrapper for a <code>Layer</code> to allow it to be dynamically …",null,null],[3,"Layer","tracing_subscriber::reload","Wraps a <code>Layer</code>, allowing it to be reloaded dynamically at …",null,null],[3,"Handle","","Allows reloading the state of an associated <code>Layer</code>.",null,null],[3,"Error","","Indicates that an error occurred when reloading a layer.",null,null],[11,"new","","Wraps the given <code>Layer</code>, returning a <code>Layer</code> and a <code>Handle</code> …",32,[[]]],[11,"handle","","Returns a <code>Handle</code> that can be used to reload the wrapped …",32,[[],["handle",3]]],[11,"reload","","Replace the current layer with the provided <code>new_layer</code>.",33,[[],[["result",4],["error",3]]]],[11,"modify","","Invokes a closure with a mutable reference to the current …",33,[[],[["result",4],["error",3]]]],[11,"clone_current","","Returns a clone of the layer\'s current value if it still …",33,[[],["option",4]]],[11,"with_current","","Invokes a closure with a borrowed reference to the …",33,[[],[["result",4],["error",3]]]],[11,"is_poisoned","","Returns <code>true</code> if this error occurred because the layer was …",34,[[],["bool",15]]],[11,"is_dropped","","Returns <code>true</code> if this error occurred because the <code>Subscriber</code>…",34,[[],["bool",15]]],[0,"util","tracing_subscriber","Extension traits and other utilities to make working with …",null,null],[8,"SubscriberInitExt","tracing_subscriber::util","Extension trait adding utility methods for subscriber …",null,null],[11,"set_default","","Sets <code>self</code> as the default subscriber in the current scope, …",35,[[],["defaultguard",3]]],[11,"try_init","","Attempts to set <code>self</code> as the global default subscriber in …",35,[[],[["result",4],["tryiniterror",3]]]],[11,"init","","Attempts to set <code>self</code> as the global default subscriber in …",35,[[]]],[3,"TryInitError","","Error returned by <code>try_init</code> if a global default subscriber …",null,null],[3,"Registry","tracing_subscriber","A shared, reusable store for spans.",null,null],[5,"registry","","",null,[[],["registry",3]]],[3,"CurrentSpan","","Tracks the currently executing span on a per-thread basis.",null,null],[11,"new","","Returns a new <code>CurrentSpan</code>.",36,[[]]],[11,"id","","Returns the <code>Id</code> of the span in which the current thread is …",36,[[],[["option",4],["id",3]]]],[11,"enter","","Records that the current thread has entered the span with …",36,[[["id",3]]]],[11,"exit","","Records that the current thread has exited a span.",36,[[]]],[11,"from","tracing_subscriber::field::debug","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tracing_subscriber::field::delimited","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","tracing_subscriber::field::display","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tracing_subscriber::filter","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt::format","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt::time","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt::writer","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","tracing_subscriber::fmt","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tracing_subscriber::layer","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","tracing_subscriber::registry","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","tracing_subscriber::reload","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","tracing_subscriber::util","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","tracing_subscriber","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"fmt","tracing_subscriber::filter","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",37,[[["levelfilter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["levelfilter",3]],["bool",15]]],[11,"le","","",37,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",37,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",37,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",37,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["level",3]],["bool",15]]],[11,"le","","",37,[[["level",3]],["bool",15]]],[11,"gt","","",37,[[["level",3]],["bool",15]]],[11,"ge","","",37,[[["level",3]],["bool",15]]],[11,"from","","",37,[[["level",3],["option",4]],["levelfilter",3]]],[11,"from","","",37,[[["level",3]],["levelfilter",3]]],[11,"into","","",37,[[],[["level",3],["option",4]]]],[11,"clone","","",38,[[],["parselevelfiltererror",3]]],[11,"clone","","",37,[[],["levelfilter",3]]],[11,"cmp","","",37,[[["levelfilter",3]],["ordering",4]]],[11,"eq","","",37,[[["levelfilter",3]],["bool",15]]],[11,"ne","","",37,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",37,[[["level",3]],["bool",15]]],[11,"from_str","","",37,[[["str",15]],[["levelfilter",3],["result",4]]]],[11,"make_visitor","tracing_subscriber::field::debug","",0,[[]]],[11,"make_visitor","tracing_subscriber::field::delimited","",1,[[]]],[11,"make_visitor","tracing_subscriber::field::display","",3,[[]]],[11,"make_visitor","tracing_subscriber::fmt::format","",15,[[["write",8]]]],[11,"make_visitor","","",41,[[["write",8]]]],[11,"finish","tracing_subscriber::field::debug","",0,[[]]],[11,"finish","tracing_subscriber::field::delimited","",2,[[],["result",6]]],[11,"finish","tracing_subscriber::field::display","",3,[[]]],[11,"finish","tracing_subscriber::fmt::format","",16,[[],["result",6]]],[11,"finish","","",42,[[],["result",6]]],[11,"writer","tracing_subscriber::field::debug","",0,[[],["write",8]]],[11,"writer","tracing_subscriber::field::display","",3,[[],["write",8]]],[11,"writer","tracing_subscriber::field::debug","",0,[[],["write",8]]],[11,"writer","tracing_subscriber::field::delimited","",2,[[],["write",8]]],[11,"writer","tracing_subscriber::field::display","",3,[[],["write",8]]],[11,"writer","tracing_subscriber::fmt::format","",16,[[],["write",8]]],[11,"writer","","",42,[[],["write",8]]],[11,"format_event","","",14,[[["fmtcontext",3],["write",8],["event",3]],["result",6]]],[11,"format_event","","",14,[[["fmtcontext",3],["write",8],["event",3]],["result",6]]],[11,"format_fields","tracing_subscriber::fmt","",40,[[["write",8],["recordfields",8]],["result",6]]],[11,"format_time","tracing_subscriber::fmt::time","",45,[[["write",8]],["result",6]]],[11,"format_time","","",46,[[["write",8]],["result",6]]],[11,"make_writer","tracing_subscriber::fmt","",20,[[]]],[11,"make_writer","tracing_subscriber::fmt::writer","",21,[[]]],[11,"register_callsite","tracing_subscriber::filter","",37,[[["metadata",3]],["interest",3]]],[11,"enabled","","",37,[[["metadata",3],["context",3]],["bool",15]]],[11,"max_level_hint","","",37,[[],[["option",4],["levelfilter",3]]]],[11,"new_span","tracing_subscriber::fmt","",39,[[["attributes",3],["context",3],["id",3]]]],[11,"on_record","","",39,[[["context",3],["record",3],["id",3]]]],[11,"on_enter","","",39,[[["context",3],["id",3]]]],[11,"on_exit","","",39,[[["context",3],["id",3]]]],[11,"on_close","","",39,[[["context",3],["id",3]]]],[11,"on_event","","",39,[[["context",3],["event",3]]]],[11,"downcast_raw","","",39,[[["typeid",3]],["option",4]]],[11,"register_callsite","tracing_subscriber::layer","",47,[[["metadata",3]],["interest",3]]],[11,"enabled","","",47,[[["metadata",3],["context",3]],["bool",15]]],[11,"new_span","","",47,[[["context",3],["id",3],["attributes",3]]]],[11,"on_record","","",47,[[["record",3],["id",3],["context",3]]]],[11,"on_follows_from","","",47,[[["id",3],["context",3]]]],[11,"on_event","","",47,[[["context",3],["event",3]]]],[11,"on_enter","","",47,[[["id",3],["context",3]]]],[11,"on_exit","","",47,[[["id",3],["context",3]]]],[11,"on_close","","",47,[[["id",3],["context",3]]]],[11,"on_id_change","","",47,[[["id",3],["context",3]]]],[11,"register_callsite","tracing_subscriber::reload","",32,[[["metadata",3]],["interest",3]]],[11,"enabled","","",32,[[["metadata",3],["context",3]],["bool",15]]],[11,"new_span","","",32,[[["context",3],["id",3],["attributes",3]]]],[11,"on_record","","",32,[[["context",3],["record",3],["id",3]]]],[11,"on_follows_from","","",32,[[["context",3],["id",3]]]],[11,"on_event","","",32,[[["context",3],["event",3]]]],[11,"on_enter","","",32,[[["context",3],["id",3]]]],[11,"on_exit","","",32,[[["context",3],["id",3]]]],[11,"on_close","","",32,[[["id",3],["context",3]]]],[11,"on_id_change","","",32,[[["context",3],["id",3]]]],[11,"span_data","tracing_subscriber::fmt","",23,[[["id",3]],["option",4]]],[11,"span_data","tracing_subscriber::layer","",47,[[["id",3]],["option",4]]],[11,"span_data","tracing_subscriber::registry","",51,[[["id",3]],["option",4]]],[11,"id","","",52,[[],["id",3]]],[11,"metadata","","",52,[[],["metadata",3]]],[11,"parent","","",52,[[],[["id",3],["option",4]]]],[11,"extensions","","",52,[[],["extensions",3]]],[11,"extensions_mut","","",52,[[],["extensionsmut",3]]],[11,"from","tracing_subscriber::fmt::time","",46,[[["instant",3]]]],[11,"into","tracing_subscriber::fmt","",24,[[],["dispatch",3]]],[11,"next","tracing_subscriber::layer","",48,[[],["option",4]]],[11,"next","tracing_subscriber::registry","",53,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"clone","tracing_subscriber::field::debug","",0,[[],["alt",3]]],[11,"clone","tracing_subscriber::field::delimited","",1,[[],["delimited",3]]],[11,"clone","tracing_subscriber::field::display","",3,[[],["messages",3]]],[11,"clone","tracing_subscriber::fmt::format","",41,[[],["fieldfn",3]]],[11,"clone","","",43,[[],["compact",3]]],[11,"clone","","",44,[[],["full",3]]],[11,"clone","","",14,[[],["format",3]]],[11,"clone","","",17,[[],["fmtspan",3]]],[11,"clone","tracing_subscriber::fmt::time","",45,[[],["systemtime",3]]],[11,"clone","","",46,[[],["uptime",3]]],[11,"clone","tracing_subscriber::layer","",47,[[],["layered",3]]],[11,"clone","","",28,[[],["identity",3]]],[11,"clone","","",27,[[]]],[11,"clone","tracing_subscriber::reload","",33,[[]]],[11,"default","tracing_subscriber::fmt","",39,[[]]],[11,"default","","",22,[[],["formattedfields",3]]],[11,"default","tracing_subscriber::fmt::format","",43,[[],["compact",3]]],[11,"default","","",44,[[],["full",3]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","tracing_subscriber::fmt::time","",45,[[],["systemtime",3]]],[11,"default","","",46,[[]]],[11,"default","tracing_subscriber::fmt","",20,[[],["testwriter",3]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","tracing_subscriber::layer","",28,[[],["identity",3]]],[11,"default","tracing_subscriber::registry","",51,[[]]],[11,"default","tracing_subscriber","",36,[[]]],[11,"cmp","tracing_subscriber::fmt::format","",17,[[["fmtspan",3]],["ordering",4]]],[11,"eq","","",43,[[["compact",3]],["bool",15]]],[11,"eq","","",44,[[["full",3]],["bool",15]]],[11,"eq","","",17,[[["fmtspan",3]],["bool",15]]],[11,"ne","","",17,[[["fmtspan",3]],["bool",15]]],[11,"eq","tracing_subscriber::fmt::time","",45,[[["systemtime",3]],["bool",15]]],[11,"eq","","",46,[[["uptime",3]],["bool",15]]],[11,"ne","","",46,[[["uptime",3]],["bool",15]]],[11,"partial_cmp","tracing_subscriber::fmt::format","",17,[[["fmtspan",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["fmtspan",3]],["bool",15]]],[11,"le","","",17,[[["fmtspan",3]],["bool",15]]],[11,"gt","","",17,[[["fmtspan",3]],["bool",15]]],[11,"ge","","",17,[[["fmtspan",3]],["bool",15]]],[11,"deref","tracing_subscriber::fmt","",22,[[]]],[11,"fmt","tracing_subscriber::field::debug","",0,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::field::delimited","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::field::display","",3,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt::format","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt::time","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt::writer","",21,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::layer","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::registry","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::reload","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::util","",55,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber","",36,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::fmt","",22,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::reload","",34,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_subscriber::util","",55,[[["formatter",3]],["result",6]]],[11,"bitand","tracing_subscriber::fmt::format","",17,[[]]],[11,"bitor","","",17,[[]]],[11,"bitxor","","",17,[[]]],[11,"bitand_assign","","",17,[[]]],[11,"bitor_assign","","",17,[[]]],[11,"bitxor_assign","","",17,[[]]],[11,"source","tracing_subscriber::util","",55,[[],[["option",4],["error",8]]]],[11,"write","tracing_subscriber::fmt","",20,[[],[["usize",15],["result",6]]]],[11,"flush","","",20,[[],["result",6]]],[11,"record_i64","tracing_subscriber::field::debug","",0,[[["i64",15],["field",3]]]],[11,"record_u64","","",0,[[["field",3],["u64",15]]]],[11,"record_bool","","",0,[[["bool",15],["field",3]]]],[11,"record_str","","Visit a string value.",0,[[["field",3],["str",15]]]],[11,"record_debug","","",0,[[["field",3],["debug",8]]]],[11,"record_i64","tracing_subscriber::field::delimited","",2,[[["i64",15],["field",3]]]],[11,"record_u64","","",2,[[["field",3],["u64",15]]]],[11,"record_bool","","",2,[[["bool",15],["field",3]]]],[11,"record_str","","",2,[[["field",3],["str",15]]]],[11,"record_debug","","",2,[[["field",3],["debug",8]]]],[11,"record_i64","tracing_subscriber::field::display","",3,[[["i64",15],["field",3]]]],[11,"record_u64","","",3,[[["field",3],["u64",15]]]],[11,"record_bool","","",3,[[["bool",15],["field",3]]]],[11,"record_str","","Visit a string value.",3,[[["field",3],["str",15]]]],[11,"record_debug","","",3,[[["field",3],["debug",8]]]],[11,"record_str","tracing_subscriber::fmt::format","",16,[[["field",3],["str",15]]]],[11,"record_error","","",16,[[["error",8],["field",3]]]],[11,"record_debug","","",16,[[["field",3],["debug",8]]]],[11,"record_debug","","",42,[[["field",3],["debug",8]]]],[11,"register_callsite","tracing_subscriber::fmt","",23,[[["metadata",3]],["interest",3]]],[11,"enabled","","",23,[[["metadata",3]],["bool",15]]],[11,"new_span","","",23,[[["attributes",3]],["id",3]]],[11,"record","","",23,[[["record",3],["id",3]]]],[11,"record_follows_from","","",23,[[["id",3]]]],[11,"event","","",23,[[["event",3]]]],[11,"enter","","",23,[[["id",3]]]],[11,"exit","","",23,[[["id",3]]]],[11,"current_span","","",23,[[],["current",3]]],[11,"clone_span","","",23,[[["id",3]],["id",3]]],[11,"try_close","","",23,[[["id",3]],["bool",15]]],[11,"max_level_hint","","",23,[[],[["option",4],["levelfilter",3]]]],[11,"downcast_raw","","",23,[[["typeid",3]],["option",4]]],[11,"register_callsite","tracing_subscriber::layer","",47,[[["metadata",3]],["interest",3]]],[11,"enabled","","",47,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","",47,[[],[["option",4],["levelfilter",3]]]],[11,"new_span","","",47,[[["attributes",3]],["id",3]]],[11,"record","","",47,[[["record",3],["id",3]]]],[11,"record_follows_from","","",47,[[["id",3]]]],[11,"event","","",47,[[["event",3]]]],[11,"enter","","",47,[[["id",3]]]],[11,"exit","","",47,[[["id",3]]]],[11,"clone_span","","",47,[[["id",3]],["id",3]]],[11,"drop_span","","",47,[[["id",3]]]],[11,"try_close","","",47,[[["id",3]],["bool",15]]],[11,"current_span","","",47,[[],["current",3]]],[11,"register_callsite","tracing_subscriber::registry","",51,[[["metadata",3]],["interest",3]]],[11,"enabled","","",51,[[["metadata",3]],["bool",15]]],[11,"new_span","","",51,[[["attributes",3]],["id",3]]],[11,"record","","This is intentionally not implemented, as recording fields…",51,[[["record",3],["id",3]]]],[11,"record_follows_from","","",51,[[["id",3]]]],[11,"event","","This is intentionally not implemented, as recording events…",51,[[["event",3]]]],[11,"enter","","",51,[[["id",3]]]],[11,"exit","","",51,[[["id",3]]]],[11,"clone_span","","",51,[[["id",3]],["id",3]]],[11,"current_span","","",51,[[],["current",3]]],[11,"try_close","","Decrements the reference count of the span with the given …",51,[[["id",3]],["bool",15]]],[18,"OFF","tracing_subscriber::filter","The \\\"off\\\" level.",37,null],[18,"ERROR","","The \\\"error\\\" level.",37,null],[18,"WARN","","The \\\"warn\\\" level.",37,null],[18,"INFO","","The \\\"info\\\" level.",37,null],[18,"DEBUG","","The \\\"debug\\\" level.",37,null],[18,"TRACE","","The \\\"trace\\\" level.",37,null],[11,"from_level","","Returns a <code>LevelFilter</code> that enables spans and events with …",37,[[["level",3]],["levelfilter",3]]],[11,"into_level","","Returns the most verbose <code>Level</code> that this filter accepts, …",37,[[],[["level",3],["option",4]]]],[11,"current","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …",37,[[],["levelfilter",3]]],[11,"builder","tracing_subscriber::fmt","Returns a new <code>LayerBuilder</code> for configuring a <code>Layer</code>.",39,[[],["layerbuilder",6]]],[11,"new","","Returns a new <code>Layer</code> with the default configuration.",39,[[]]],[11,"event_format","","Sets the event formatter that the layer will use to …",39,[[],["layer",3]]],[11,"with_writer","","Sets the <code>MakeWriter</code> that the <code>Layer</code> being built will use …",39,[[],["layer",3]]],[11,"with_test_writer","","Configures the subscriber to support <code>libtest</code>\'s output …",39,[[],[["layer",3],["testwriter",3]]]],[11,"with_timer","","Use the given <code>timer</code> for span and event timestamps.",39,[[],[["layer",3],["format",3]]]],[11,"without_time","","Do not emit timestamps with spans and event.",39,[[],[["layer",3],["format",3]]]],[11,"with_span_events","","Configures how synthesized events are emitted at points …",39,[[["fmtspan",3]]]],[11,"with_target","","Sets whether or not an event\'s target is displayed.",39,[[["bool",15]],[["format",3],["layer",3]]]],[11,"with_level","","Sets whether or not an event\'s level is displayed.",39,[[["bool",15]],[["format",3],["layer",3]]]],[11,"with_thread_ids","","Sets whether or not the thread ID of the current thread …",39,[[["bool",15]],[["format",3],["layer",3]]]],[11,"with_thread_names","","Sets whether or not the name of the current thread is …",39,[[["bool",15]],[["format",3],["layer",3]]]],[11,"compact","","Sets the layer being built to use a less verbose formatter…",39,[[],[["format",3],["layer",3]]]],[11,"fmt_fields","","Sets the field formatter that the layer being built will …",39,[[],["layer",3]]],[11,"finish","","Builds a <code>Layer</code> with the provided configuration.",39,[[],["layer",3]]],[11,"finish","","Builds a <code>Layer</code> with the provided configuration.",56,[[],["layer",3]]],[11,"new","","Returns a new <code>FormattedFields</code>.",22,[[["string",3]]]],[11,"visit_spans","","Visits every span in the current context with a closure.",40,[[],["result",4]]],[11,"metadata","","Returns metadata for the span with the given <code>id</code>, if it …",40,[[["id",3]],[["metadata",3],["option",4]]]],[11,"span","","Returns stored data for the span with the given <code>id</code>, if it …",40,[[["id",3]],[["option",4],["spanref",3]]]],[11,"exists","","Returns <code>true</code> if an active span exists for the given <code>Id</code>.",40,[[["id",3]],["bool",15]]],[11,"lookup_current","","Returns stored data for the span that the wrapped …",40,[[],[["option",4],["spanref",3]]]],[11,"scope","","Returns an iterator over the stored data for all the …",40,[[],["scope",3]]],[11,"current_span","","Returns the current span for this formatter.",40,[[],["current",3]]],[11,"field_format","","Returns the field formatter configured by the subscriber …",40,[[]]],[11,"get","tracing_subscriber::registry","Immutably borrows a type previously inserted into this …",49,[[],["option",4]]],[11,"insert","","Insert a type into this <code>Extensions</code>.",50,[[["send",8],["sync",8]]]],[11,"replace","","Replaces an existing <code>T</code> into this extensions.",50,[[["send",8],["sync",8]],[["sync",8],["send",8],["option",4]]]],[11,"get_mut","","Get a mutable reference to a type previously inserted on …",50,[[],["option",4]]],[11,"remove","","Remove a type from this <code>Extensions</code>.",50,[[],[["sync",8],["send",8],["option",4]]]]],"p":[[3,"Alt"],[3,"Delimited"],[3,"VisitDelimited"],[3,"Messages"],[8,"Visit"],[8,"MakeVisitor"],[8,"VisitOutput"],[8,"RecordFields"],[8,"MakeOutput"],[8,"VisitWrite"],[8,"VisitFmt"],[8,"MakeExt"],[8,"FormatEvent"],[8,"FormatFields"],[3,"Format"],[3,"DefaultFields"],[3,"DefaultVisitor"],[3,"FmtSpan"],[8,"FormatTime"],[8,"MakeWriter"],[3,"TestWriter"],[3,"BoxMakeWriter"],[3,"FormattedFields"],[3,"Subscriber"],[3,"SubscriberBuilder"],[8,"Layer"],[8,"SubscriberExt"],[3,"Context"],[3,"Identity"],[8,"LookupSpan"],[8,"SpanData"],[3,"SpanRef"],[3,"Layer"],[3,"Handle"],[3,"Error"],[8,"SubscriberInitExt"],[3,"CurrentSpan"],[3,"LevelFilter"],[3,"LevelParseError"],[3,"Layer"],[3,"FmtContext"],[3,"FieldFn"],[3,"FieldFnVisitor"],[3,"Compact"],[3,"Full"],[3,"SystemTime"],[3,"Uptime"],[3,"Layered"],[3,"Scope"],[3,"Extensions"],[3,"ExtensionsMut"],[3,"Registry"],[3,"Data"],[3,"Parents"],[3,"FromRoot"],[3,"TryInitError"],[6,"LayerBuilder"]]},\
"tui":{"doc":"tui is a library used to build rich terminal users …","i":[[0,"backend","tui","",null,null],[3,"CrosstermBackend","tui::backend","",null,null],[3,"TestBackend","","A backend used for the integration tests.",null,null],[8,"Backend","","",null,null],[10,"draw","","",0,[[],[["result",4],["error",3]]]],[10,"hide_cursor","","",0,[[],[["result",4],["error",3]]]],[10,"show_cursor","","",0,[[],[["result",4],["error",3]]]],[10,"get_cursor","","",0,[[],[["result",4],["error",3]]]],[10,"set_cursor","","",0,[[["u16",15]],[["result",4],["error",3]]]],[10,"clear","","",0,[[],[["result",4],["error",3]]]],[10,"size","","",0,[[],[["result",4],["error",3],["rect",3]]]],[10,"flush","","",0,[[],[["result",4],["error",3]]]],[0,"buffer","tui","",null,null],[3,"Cell","tui::buffer","A buffer cell",null,null],[12,"symbol","","",1,null],[12,"fg","","",1,null],[12,"bg","","",1,null],[12,"modifier","","",1,null],[11,"set_symbol","","",1,[[["str",15]],["cell",3]]],[11,"set_char","","",1,[[["char",15]],["cell",3]]],[11,"set_fg","","",1,[[["color",4]],["cell",3]]],[11,"set_bg","","",1,[[["color",4]],["cell",3]]],[11,"set_style","","",1,[[["style",3]],["cell",3]]],[11,"style","","",1,[[],["style",3]]],[11,"reset","","",1,[[]]],[3,"Buffer","","A buffer that maps to the desired content of the terminal …",null,null],[12,"area","","The area represented by this buffer",2,null],[12,"content","","The content of the buffer. The length of this Vec should …",2,null],[11,"empty","","Returns a Buffer with all cells set to the default one",2,[[["rect",3]],["buffer",3]]],[11,"filled","","Returns a Buffer with all cells initialized with the …",2,[[["cell",3],["rect",3]],["buffer",3]]],[11,"with_lines","","Returns a Buffer containing the given lines",2,[[["vec",3]],["buffer",3]]],[11,"content","","Returns the content of the buffer as a slice",2,[[]]],[11,"area","","Returns the area covered by this buffer",2,[[],["rect",3]]],[11,"get","","Returns a reference to Cell at the given coordinates",2,[[["u16",15]],["cell",3]]],[11,"get_mut","","Returns a mutable reference to Cell at the given …",2,[[["u16",15]],["cell",3]]],[11,"index_of","","Returns the index in the Vec for the given global (x, y) …",2,[[["u16",15]],["usize",15]]],[11,"pos_of","","Returns the (global) coordinates of a cell given its index",2,[[["usize",15]]]],[11,"set_string","","Print a string, starting at the position (x, y)",2,[[["style",3],["u16",15]]]],[11,"set_stringn","","Print at most the first n characters of a string if …",2,[[["usize",15],["style",3],["u16",15]]]],[11,"set_spans","","",2,[[["u16",15],["spans",3]]]],[11,"set_span","","",2,[[["span",3],["u16",15]]]],[11,"set_background","","",2,[[["color",4],["rect",3]]]],[11,"set_style","","",2,[[["style",3],["rect",3]]]],[11,"resize","","Resize the buffer so that the mapped area matches the …",2,[[["rect",3]]]],[11,"reset","","Reset all cells in the buffer",2,[[]]],[11,"merge","","Merge an other buffer into this one",2,[[["buffer",3]]]],[11,"diff","","Builds a minimal sequence of coordinates and Cells …",2,[[["buffer",3]],["vec",3]]],[0,"layout","tui","",null,null],[4,"Corner","tui::layout","",null,null],[13,"TopLeft","","",3,null],[13,"TopRight","","",3,null],[13,"BottomRight","","",3,null],[13,"BottomLeft","","",3,null],[4,"Direction","","",null,null],[13,"Horizontal","","",4,null],[13,"Vertical","","",4,null],[4,"Constraint","","",null,null],[13,"Percentage","","",5,null],[13,"Ratio","","",5,null],[13,"Length","","",5,null],[13,"Max","","",5,null],[13,"Min","","",5,null],[11,"apply","","",5,[[["u16",15]],["u16",15]]],[3,"Margin","","",null,null],[12,"vertical","","",6,null],[12,"horizontal","","",6,null],[4,"Alignment","","",null,null],[13,"Left","","",7,null],[13,"Center","","",7,null],[13,"Right","","",7,null],[3,"Layout","","",null,null],[11,"constraints","","",8,[[],["layout",3]]],[11,"margin","","",8,[[["u16",15]],["layout",3]]],[11,"horizontal_margin","","",8,[[["u16",15]],["layout",3]]],[11,"vertical_margin","","",8,[[["u16",15]],["layout",3]]],[11,"direction","","",8,[[["direction",4]],["layout",3]]],[11,"split","","Wrapper function around the cassowary-rs solver to be …",8,[[["rect",3]],[["rect",3],["vec",3]]]],[3,"Rect","","A simple rectangle used in the computation of the layout …",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"width","","",9,null],[12,"height","","",9,null],[11,"new","","Creates a new rect, with width and height limited to keep …",9,[[["u16",15]],["rect",3]]],[11,"area","","",9,[[],["u16",15]]],[11,"left","","",9,[[],["u16",15]]],[11,"right","","",9,[[],["u16",15]]],[11,"top","","",9,[[],["u16",15]]],[11,"bottom","","",9,[[],["u16",15]]],[11,"inner","","",9,[[["margin",3]],["rect",3]]],[11,"union","","",9,[[["rect",3]],["rect",3]]],[11,"intersection","","",9,[[["rect",3]],["rect",3]]],[11,"intersects","","",9,[[["rect",3]],["bool",15]]],[0,"style","tui","<code>style</code> contains the primitives used to control how your …",null,null],[4,"Color","tui::style","",null,null],[13,"Reset","","",10,null],[13,"Black","","",10,null],[13,"Red","","",10,null],[13,"Green","","",10,null],[13,"Yellow","","",10,null],[13,"Blue","","",10,null],[13,"Magenta","","",10,null],[13,"Cyan","","",10,null],[13,"Gray","","",10,null],[13,"DarkGray","","",10,null],[13,"LightRed","","",10,null],[13,"LightGreen","","",10,null],[13,"LightYellow","","",10,null],[13,"LightBlue","","",10,null],[13,"LightMagenta","","",10,null],[13,"LightCyan","","",10,null],[13,"White","","",10,null],[13,"Rgb","","",10,null],[13,"Indexed","","",10,null],[3,"Modifier","","Modifier changes the way a piece of text is displayed.",null,null],[18,"BOLD","","",11,null],[18,"DIM","","",11,null],[18,"ITALIC","","",11,null],[18,"UNDERLINED","","",11,null],[18,"SLOW_BLINK","","",11,null],[18,"RAPID_BLINK","","",11,null],[18,"REVERSED","","",11,null],[18,"HIDDEN","","",11,null],[18,"CROSSED_OUT","","",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["modifier",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["modifier",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[],["u16",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",11,[[["u16",15]],[["modifier",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",11,[[["u16",15]],["modifier",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[["u16",15]],["modifier",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",11,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",11,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",11,[[["modifier",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",11,[[["modifier",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["modifier",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["modifier",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["modifier",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",11,[[["bool",15],["modifier",3]]]],[3,"Style","","Style let you control the main characteristics of the …",null,null],[12,"fg","","",12,null],[12,"bg","","",12,null],[12,"add_modifier","","",12,null],[12,"sub_modifier","","",12,null],[11,"reset","","Returns a <code>Style</code> resetting all properties.",12,[[],["style",3]]],[11,"fg","","Changes the foreground color.",12,[[["color",4]],["style",3]]],[11,"bg","","Changes the background color.",12,[[["color",4]],["style",3]]],[11,"add_modifier","","Changes the text emphasis.",12,[[["modifier",3]],["style",3]]],[11,"remove_modifier","","Changes the text emphasis.",12,[[["modifier",3]],["style",3]]],[11,"patch","","Results in a combined style that is equivalent to …",12,[[["style",3]],["style",3]]],[0,"symbols","tui","",null,null],[0,"block","tui::symbols","",null,null],[17,"FULL","tui::symbols::block","",null,null],[17,"SEVEN_EIGHTHS","","",null,null],[17,"THREE_QUARTERS","","",null,null],[17,"FIVE_EIGHTHS","","",null,null],[17,"HALF","","",null,null],[17,"THREE_EIGHTHS","","",null,null],[17,"ONE_QUARTER","","",null,null],[17,"ONE_EIGHTH","","",null,null],[3,"Set","","",null,null],[12,"full","","",13,null],[12,"seven_eighths","","",13,null],[12,"three_quarters","","",13,null],[12,"five_eighths","","",13,null],[12,"half","","",13,null],[12,"three_eighths","","",13,null],[12,"one_quarter","","",13,null],[12,"one_eighth","","",13,null],[12,"empty","","",13,null],[17,"THREE_LEVELS","","",null,null],[17,"NINE_LEVELS","","",null,null],[0,"bar","tui::symbols","",null,null],[17,"FULL","tui::symbols::bar","",null,null],[17,"SEVEN_EIGHTHS","","",null,null],[17,"THREE_QUARTERS","","",null,null],[17,"FIVE_EIGHTHS","","",null,null],[17,"HALF","","",null,null],[17,"THREE_EIGHTHS","","",null,null],[17,"ONE_QUARTER","","",null,null],[17,"ONE_EIGHTH","","",null,null],[3,"Set","","",null,null],[12,"full","","",14,null],[12,"seven_eighths","","",14,null],[12,"three_quarters","","",14,null],[12,"five_eighths","","",14,null],[12,"half","","",14,null],[12,"three_eighths","","",14,null],[12,"one_quarter","","",14,null],[12,"one_eighth","","",14,null],[12,"empty","","",14,null],[17,"THREE_LEVELS","","",null,null],[17,"NINE_LEVELS","","",null,null],[0,"line","tui::symbols","",null,null],[17,"VERTICAL","tui::symbols::line","",null,null],[17,"DOUBLE_VERTICAL","","",null,null],[17,"THICK_VERTICAL","","",null,null],[17,"HORIZONTAL","","",null,null],[17,"DOUBLE_HORIZONTAL","","",null,null],[17,"THICK_HORIZONTAL","","",null,null],[17,"TOP_RIGHT","","",null,null],[17,"ROUNDED_TOP_RIGHT","","",null,null],[17,"DOUBLE_TOP_RIGHT","","",null,null],[17,"THICK_TOP_RIGHT","","",null,null],[17,"TOP_LEFT","","",null,null],[17,"ROUNDED_TOP_LEFT","","",null,null],[17,"DOUBLE_TOP_LEFT","","",null,null],[17,"THICK_TOP_LEFT","","",null,null],[17,"BOTTOM_RIGHT","","",null,null],[17,"ROUNDED_BOTTOM_RIGHT","","",null,null],[17,"DOUBLE_BOTTOM_RIGHT","","",null,null],[17,"THICK_BOTTOM_RIGHT","","",null,null],[17,"BOTTOM_LEFT","","",null,null],[17,"ROUNDED_BOTTOM_LEFT","","",null,null],[17,"DOUBLE_BOTTOM_LEFT","","",null,null],[17,"THICK_BOTTOM_LEFT","","",null,null],[17,"VERTICAL_LEFT","","",null,null],[17,"DOUBLE_VERTICAL_LEFT","","",null,null],[17,"THICK_VERTICAL_LEFT","","",null,null],[17,"VERTICAL_RIGHT","","",null,null],[17,"DOUBLE_VERTICAL_RIGHT","","",null,null],[17,"THICK_VERTICAL_RIGHT","","",null,null],[17,"HORIZONTAL_DOWN","","",null,null],[17,"DOUBLE_HORIZONTAL_DOWN","","",null,null],[17,"THICK_HORIZONTAL_DOWN","","",null,null],[17,"HORIZONTAL_UP","","",null,null],[17,"DOUBLE_HORIZONTAL_UP","","",null,null],[17,"THICK_HORIZONTAL_UP","","",null,null],[17,"CROSS","","",null,null],[17,"DOUBLE_CROSS","","",null,null],[17,"THICK_CROSS","","",null,null],[3,"Set","","",null,null],[12,"vertical","","",15,null],[12,"horizontal","","",15,null],[12,"top_right","","",15,null],[12,"top_left","","",15,null],[12,"bottom_right","","",15,null],[12,"bottom_left","","",15,null],[12,"vertical_left","","",15,null],[12,"vertical_right","","",15,null],[12,"horizontal_down","","",15,null],[12,"horizontal_up","","",15,null],[12,"cross","","",15,null],[17,"NORMAL","","",null,null],[17,"ROUNDED","","",null,null],[17,"DOUBLE","","",null,null],[17,"THICK","","",null,null],[0,"braille","tui::symbols","",null,null],[17,"BLANK","tui::symbols::braille","",null,null],[17,"DOTS","","",null,null],[17,"DOT","tui::symbols","",null,null],[4,"Marker","","Marker to use when plotting data points",null,null],[13,"Dot","","One point per cell in shape of dot",16,null],[13,"Block","","One point per cell in shape of a block",16,null],[13,"Braille","","Up to 8 points per cell",16,null],[0,"terminal","tui","",null,null],[3,"Viewport","tui::terminal","UNSTABLE",null,null],[11,"fixed","","UNSTABLE",17,[[["rect",3]],["viewport",3]]],[3,"TerminalOptions","","Options to pass to [<code>Terminal::with_options</code>]",null,null],[12,"viewport","","Viewport used to draw to the terminal",18,null],[3,"Terminal","","Interface to the terminal backed by Termion",null,null],[3,"Frame","","Represents a consistent terminal interface for rendering.",null,null],[11,"size","","Terminal size, guaranteed not to change when rendering.",19,[[],["rect",3]]],[11,"render_widget","","Render a [<code>Widget</code>] to the current buffer using […",19,[[["rect",3]]]],[11,"render_stateful_widget","","Render a [<code>StatefulWidget</code>] to the current buffer using […",19,[[["rect",3]]]],[11,"set_cursor","","After drawing this frame, make the cursor visible and put …",19,[[["u16",15]]]],[11,"new","","Wrapper around Terminal initialization. Each buffer is …",20,[[],[["result",6],["terminal",3]]]],[11,"with_options","","UNSTABLE",20,[[["terminaloptions",3]],[["result",6],["terminal",3]]]],[11,"get_frame","","Get a Frame object which provides a consistent view into …",20,[[],["frame",3]]],[11,"current_buffer_mut","","",20,[[],["buffer",3]]],[11,"backend","","",20,[[]]],[11,"backend_mut","","",20,[[]]],[11,"flush","","Obtains a difference between the previous and the current …",20,[[],["result",6]]],[11,"resize","","Updates the Terminal so that internal buffers match the …",20,[[["rect",3]],["result",6]]],[11,"autoresize","","Queries the backend for size and resizes if it doesn\'t …",20,[[],["result",6]]],[11,"draw","","Synchronizes terminal size, calls the rendering closure, …",20,[[],["result",6]]],[11,"hide_cursor","","",20,[[],["result",6]]],[11,"show_cursor","","",20,[[],["result",6]]],[11,"get_cursor","","",20,[[],["result",6]]],[11,"set_cursor","","",20,[[["u16",15]],["result",6]]],[11,"clear","","Clear the terminal and force a full redraw on the next …",20,[[],["result",6]]],[11,"size","","Queries the real size of the backend.",20,[[],[["result",6],["rect",3]]]],[0,"text","tui","Primitives for styled text.",null,null],[3,"StyledGrapheme","tui::text","A grapheme associated to a style.",null,null],[12,"symbol","","",21,null],[12,"style","","",21,null],[3,"Span","","A string where all graphemes have the same style.",null,null],[12,"content","","",22,null],[12,"style","","",22,null],[11,"raw","","Create a span with no style.",22,[[],["span",3]]],[11,"styled","","Create a span with a style.",22,[[["style",3]],["span",3]]],[11,"width","","Returns the width of the content held by this span.",22,[[],["usize",15]]],[11,"styled_graphemes","","Returns an iterator over the graphemes held by this span.",22,[[["style",3]]]],[3,"Spans","","A string composed of clusters of graphemes, each with …",null,null],[12,"0","","",23,null],[11,"width","","Returns the width of the underlying string.",23,[[],["usize",15]]],[3,"Text","","A string split over multiple lines where each line is …",null,null],[12,"lines","","",24,null],[11,"raw","","Create some text (potentially multiple lines) with no …",24,[[],["text",3]]],[11,"styled","","Create some text (potentially multiple lines) with a …",24,[[["style",3]],["text",3]]],[11,"width","","Returns the max width of all the lines.",24,[[],["usize",15]]],[11,"height","","Returns the height.",24,[[],["usize",15]]],[11,"patch_style","","Apply a new style to existing text.",24,[[["style",3]]]],[0,"widgets","tui","<code>widgets</code> is a collection of types that implement [<code>Widget</code>] …",null,null],[0,"canvas","tui::widgets","",null,null],[3,"Line","tui::widgets::canvas","Shape to draw a line from (x1, y1) to (x2, y2) with the …",null,null],[12,"x1","","",25,null],[12,"y1","","",25,null],[12,"x2","","",25,null],[12,"y2","","",25,null],[12,"color","","",25,null],[3,"Map","","Shape to draw a world map with the given resolution and …",null,null],[12,"resolution","","",26,null],[12,"color","","",26,null],[4,"MapResolution","","",null,null],[13,"Low","","",27,null],[13,"High","","",27,null],[3,"Points","","A shape to draw a group of points with the given color",null,null],[12,"coords","","",28,null],[12,"color","","",28,null],[3,"Rectangle","","Shape to draw a rectangle from a <code>Rect</code> with the given color",null,null],[12,"x","","",29,null],[12,"y","","",29,null],[12,"width","","",29,null],[12,"height","","",29,null],[12,"color","","",29,null],[8,"Shape","","Interface for all shapes that may be drawn on a Canvas …",null,null],[10,"draw","","",30,[[["painter",3]]]],[3,"Label","","Label to draw some text on the canvas",null,null],[12,"x","","",31,null],[12,"y","","",31,null],[12,"text","","",31,null],[12,"color","","",31,null],[3,"Painter","","",null,null],[11,"get_point","","Convert the (x, y) coordinates to location of a point on …",32,[[["f64",15]],["option",4]]],[11,"paint","","Paint a point of the grid",32,[[["usize",15],["color",4]]]],[3,"Context","","Holds the state of the Canvas when painting to it.",null,null],[11,"new","","",33,[[["marker",4],["u16",15]],["context",3]]],[11,"draw","","Draw any object that may implement the Shape trait",33,[[]]],[11,"layer","","Go one layer above in the canvas.",33,[[]]],[11,"print","","Print a string on the canvas at the given position",33,[[["f64",15],["str",15],["color",4]]]],[3,"Canvas","","The Canvas widget may be used to draw more detailed …",null,null],[11,"block","","",34,[[["block",3]],["canvas",3]]],[11,"x_bounds","","",34,[[],["canvas",3]]],[11,"y_bounds","","",34,[[],["canvas",3]]],[11,"paint","","Store the closure that will be used to draw to the Canvas",34,[[],["canvas",3]]],[11,"background_color","","",34,[[["color",4]],["canvas",3]]],[11,"marker","","Change the type of points used to draw the shapes. By …",34,[[["marker",4]],["canvas",3]]],[3,"BarChart","tui::widgets","Display multiple bars in a single widgets",null,null],[3,"Block","","Base widget to be used with all upper level ones. It may …",null,null],[4,"BorderType","","",null,null],[13,"Plain","","",35,null],[13,"Rounded","","",35,null],[13,"Double","","",35,null],[13,"Thick","","",35,null],[3,"Axis","","An X or Y axis for the chart widget",null,null],[3,"Chart","","A widget to plot one or more dataset in a cartesian …",null,null],[3,"Dataset","","A group of data points",null,null],[4,"GraphType","","Used to determine which style of graphing to use",null,null],[13,"Scatter","","Draw each point",36,null],[13,"Line","","Draw each point and lines between each point using the …",36,null],[3,"Clear","","A widget to to clear/reset a certain area to allow …",null,null],[3,"Gauge","","A widget to display a task progress.",null,null],[3,"LineGauge","","A compact widget to display a task progress over a single …",null,null],[3,"List","","A widget to display several items among which one can be …",null,null],[3,"ListItem","","",null,null],[3,"ListState","","",null,null],[3,"Paragraph","","A widget to display some text.",null,null],[3,"Wrap","","Describes how to wrap text across lines.",null,null],[12,"trim","","Should leading whitespace be trimmed",37,null],[3,"Sparkline","","Widget to render a sparkline over one or more lines.",null,null],[3,"Cell","","A [<code>Cell</code>] contains the [<code>Text</code>] to be displayed in a [<code>Row</code>] …",null,null],[3,"Row","","Holds data to be displayed in a [<code>Table</code>] widget.",null,null],[3,"Table","","A widget to display data in formatted columns.",null,null],[3,"TableState","","",null,null],[3,"Tabs","","A widget to display available tabs in a multiple panels …",null,null],[3,"Borders","","Bitflags that can be composed to set the visible borders …",null,null],[18,"NONE","","Show no border (default)",38,null],[18,"TOP","","Show the top border",38,null],[18,"RIGHT","","Show the right border",38,null],[18,"BOTTOM","","Show the bottom border",38,null],[18,"LEFT","","Show the left border",38,null],[18,"ALL","","Show all borders",38,null],[11,"empty","","Returns an empty set of flags",38,[[],["borders",3]]],[11,"all","","Returns the set containing all flags.",38,[[],["borders",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",38,[[["u32",15]],[["borders",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",38,[[["u32",15]],["borders",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",38,[[["u32",15]],["borders",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",38,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",38,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",38,[[["borders",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",38,[[["borders",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["borders",3]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["borders",3]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["borders",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",38,[[["borders",3],["bool",15]]]],[8,"Widget","","Base requirements for a Widget",null,null],[10,"render","","Draws the current state of the widget in the given …",39,[[["buffer",3],["rect",3]]]],[8,"StatefulWidget","","A <code>StatefulWidget</code> is a widget that can take advantage of …",null,null],[16,"State","","",40,null],[10,"render","","",40,[[["buffer",3],["rect",3]]]],[11,"from","tui::backend","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"queue","","Queues the given command for further execution.",41,[[],[["errorkind",4],["result",4]]]],[11,"execute","","Executes the given command directly.",41,[[],[["errorkind",4],["result",4]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","tui::buffer","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","tui::layout","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tui::style","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","tui::symbols::block","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tui::symbols::bar","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","tui::symbols::line","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tui::symbols","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","tui::terminal","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tui::text","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tui::widgets","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","tui::widgets::canvas","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","tui::widgets","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"draw","tui::backend","",41,[[],["result",6]]],[11,"hide_cursor","","",41,[[],["result",6]]],[11,"show_cursor","","",41,[[],["result",6]]],[11,"get_cursor","","",41,[[],["result",6]]],[11,"set_cursor","","",41,[[["u16",15]],["result",6]]],[11,"clear","","",41,[[],["result",6]]],[11,"size","","",41,[[],[["result",6],["rect",3]]]],[11,"flush","","",41,[[],["result",6]]],[11,"draw","","",42,[[],[["result",4],["error",3]]]],[11,"hide_cursor","","",42,[[],[["result",4],["error",3]]]],[11,"show_cursor","","",42,[[],[["result",4],["error",3]]]],[11,"get_cursor","","",42,[[],[["result",4],["error",3]]]],[11,"set_cursor","","",42,[[["u16",15]],[["result",4],["error",3]]]],[11,"clear","","",42,[[],[["result",4],["error",3]]]],[11,"size","","",42,[[],[["result",4],["error",3],["rect",3]]]],[11,"flush","","",42,[[],[["result",4],["error",3]]]],[11,"draw","tui::widgets::canvas","",25,[[["painter",3]]]],[11,"draw","","",26,[[["painter",3]]]],[11,"draw","","",28,[[["painter",3]]]],[11,"draw","","",29,[[["painter",3]]]],[11,"render","tui::widgets","",43,[[["buffer",3],["rect",3]]]],[11,"render","","",44,[[["buffer",3],["rect",3]]]],[11,"render","tui::widgets::canvas","",34,[[["buffer",3],["rect",3]]]],[11,"render","tui::widgets","",47,[[["buffer",3],["rect",3]]]],[11,"render","","",48,[[["buffer",3],["rect",3]]]],[11,"render","","",49,[[["buffer",3],["rect",3]]]],[11,"render","","",50,[[["buffer",3],["rect",3]]]],[11,"render","","",53,[[["buffer",3],["rect",3]]]],[11,"render","","",54,[[["buffer",3],["rect",3]]]],[11,"render","","",55,[[["buffer",3],["rect",3]]]],[11,"render","","",58,[[["buffer",3],["rect",3]]]],[11,"render","","",60,[[["buffer",3],["rect",3]]]],[11,"render","","",53,[[["buffer",3],["rect",3]]]],[11,"render","","",58,[[["buffer",3],["rect",3]]]],[11,"drop","tui::terminal","",20,[[]]],[11,"from","tui::text","",22,[[["string",3]],["span",3]]],[11,"from","","",22,[[["str",15]],["span",3]]],[11,"from","","",23,[[["string",3]],["spans",3]]],[11,"from","","",23,[[["str",15]],["spans",3]]],[11,"from","","",23,[[["vec",3],["span",3]],["spans",3]]],[11,"from","","",23,[[["span",3]],["spans",3]]],[11,"from","","",24,[[["string",3]],["text",3]]],[11,"from","","",24,[[["str",15]],["text",3]]],[11,"from","","",24,[[["span",3]],["text",3]]],[11,"from","","",24,[[["spans",3]],["text",3]]],[11,"from","","",24,[[["vec",3],["spans",3]],["text",3]]],[11,"from","tui::widgets::canvas","",32,[[["context",3]],["painter",3]]],[11,"from","tui::widgets","",56,[[],["cell",3]]],[11,"extend","tui::style","",11,[[["intoiterator",8]]]],[11,"extend","tui::text","",24,[[["intoiterator",8]]]],[11,"extend","tui::widgets","",38,[[["intoiterator",8]]]],[11,"into_iter","tui::text","",24,[[]]],[11,"clone","tui::buffer","",1,[[],["cell",3]]],[11,"clone","","",2,[[],["buffer",3]]],[11,"clone","tui::layout","",3,[[],["corner",4]]],[11,"clone","","",4,[[],["direction",4]]],[11,"clone","","",5,[[],["constraint",4]]],[11,"clone","","",6,[[],["margin",3]]],[11,"clone","","",7,[[],["alignment",4]]],[11,"clone","","",8,[[],["layout",3]]],[11,"clone","","",9,[[],["rect",3]]],[11,"clone","tui::style","",10,[[],["color",4]]],[11,"clone","","",11,[[],["modifier",3]]],[11,"clone","","",12,[[],["style",3]]],[11,"clone","tui::symbols::block","",13,[[],["set",3]]],[11,"clone","tui::symbols::bar","",14,[[],["set",3]]],[11,"clone","tui::symbols::line","",15,[[],["set",3]]],[11,"clone","tui::symbols","",16,[[],["marker",4]]],[11,"clone","tui::terminal","",17,[[],["viewport",3]]],[11,"clone","","",18,[[],["terminaloptions",3]]],[11,"clone","tui::text","",21,[[],["styledgrapheme",3]]],[11,"clone","","",22,[[],["span",3]]],[11,"clone","","",23,[[],["spans",3]]],[11,"clone","","",24,[[],["text",3]]],[11,"clone","tui::widgets","",43,[[],["barchart",3]]],[11,"clone","","",35,[[],["bordertype",4]]],[11,"clone","","",44,[[],["block",3]]],[11,"clone","tui::widgets::canvas","",25,[[],["line",3]]],[11,"clone","","",27,[[],["mapresolution",4]]],[11,"clone","","",26,[[],["map",3]]],[11,"clone","","",28,[[],["points",3]]],[11,"clone","","",29,[[],["rectangle",3]]],[11,"clone","","",31,[[],["label",3]]],[11,"clone","tui::widgets","",45,[[],["axis",3]]],[11,"clone","","",36,[[],["graphtype",4]]],[11,"clone","","",46,[[],["dataset",3]]],[11,"clone","","",47,[[],["chart",3]]],[11,"clone","","",48,[[],["clear",3]]],[11,"clone","","",49,[[],["gauge",3]]],[11,"clone","","",51,[[],["liststate",3]]],[11,"clone","","",52,[[],["listitem",3]]],[11,"clone","","",53,[[],["list",3]]],[11,"clone","","",54,[[],["paragraph",3]]],[11,"clone","","",37,[[],["wrap",3]]],[11,"clone","","",55,[[],["sparkline",3]]],[11,"clone","","",56,[[],["cell",3]]],[11,"clone","","",57,[[],["row",3]]],[11,"clone","","",58,[[],["table",3]]],[11,"clone","","",59,[[],["tablestate",3]]],[11,"clone","","",60,[[],["tabs",3]]],[11,"clone","","",38,[[],["borders",3]]],[11,"default","tui::buffer","",1,[[],["cell",3]]],[11,"default","","",2,[[],["buffer",3]]],[11,"default","tui::layout","",8,[[],["layout",3]]],[11,"default","","",9,[[],["rect",3]]],[11,"default","tui::style","",12,[[],["style",3]]],[11,"default","tui::text","",23,[[],["spans",3]]],[11,"default","","",24,[[],["text",3]]],[11,"default","tui::widgets","",43,[[],["barchart",3]]],[11,"default","","",44,[[],["block",3]]],[11,"default","tui::widgets::canvas","",26,[[],["map",3]]],[11,"default","","",28,[[],["points",3]]],[11,"default","","",34,[[],["canvas",3]]],[11,"default","tui::widgets","",45,[[],["axis",3]]],[11,"default","","",46,[[],["dataset",3]]],[11,"default","","",49,[[],["gauge",3]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[],["liststate",3]]],[11,"default","","",55,[[],["sparkline",3]]],[11,"default","","",56,[[],["cell",3]]],[11,"default","","",57,[[],["row",3]]],[11,"default","","",59,[[],["tablestate",3]]],[11,"cmp","tui::style","",11,[[["modifier",3]],["ordering",4]]],[11,"cmp","tui::widgets","",38,[[["borders",3]],["ordering",4]]],[11,"eq","tui::buffer","",1,[[["cell",3]],["bool",15]]],[11,"ne","","",1,[[["cell",3]],["bool",15]]],[11,"eq","","",2,[[["buffer",3]],["bool",15]]],[11,"ne","","",2,[[["buffer",3]],["bool",15]]],[11,"eq","tui::layout","",3,[[["corner",4]],["bool",15]]],[11,"eq","","",4,[[["direction",4]],["bool",15]]],[11,"eq","","",5,[[["constraint",4]],["bool",15]]],[11,"ne","","",5,[[["constraint",4]],["bool",15]]],[11,"eq","","",6,[[["margin",3]],["bool",15]]],[11,"ne","","",6,[[["margin",3]],["bool",15]]],[11,"eq","","",7,[[["alignment",4]],["bool",15]]],[11,"eq","","",8,[[["layout",3]],["bool",15]]],[11,"ne","","",8,[[["layout",3]],["bool",15]]],[11,"eq","","",9,[[["rect",3]],["bool",15]]],[11,"ne","","",9,[[["rect",3]],["bool",15]]],[11,"eq","tui::style","",10,[[["color",4]],["bool",15]]],[11,"ne","","",10,[[["color",4]],["bool",15]]],[11,"eq","","",11,[[["modifier",3]],["bool",15]]],[11,"ne","","",11,[[["modifier",3]],["bool",15]]],[11,"eq","","",12,[[["style",3]],["bool",15]]],[11,"ne","","",12,[[["style",3]],["bool",15]]],[11,"eq","tui::terminal","",17,[[["viewport",3]],["bool",15]]],[11,"ne","","",17,[[["viewport",3]],["bool",15]]],[11,"eq","","",18,[[["terminaloptions",3]],["bool",15]]],[11,"ne","","",18,[[["terminaloptions",3]],["bool",15]]],[11,"eq","tui::text","",21,[[["styledgrapheme",3]],["bool",15]]],[11,"ne","","",21,[[["styledgrapheme",3]],["bool",15]]],[11,"eq","","",22,[[["span",3]],["bool",15]]],[11,"ne","","",22,[[["span",3]],["bool",15]]],[11,"eq","","",23,[[["spans",3]],["bool",15]]],[11,"ne","","",23,[[["spans",3]],["bool",15]]],[11,"eq","","",24,[[["text",3]],["bool",15]]],[11,"ne","","",24,[[["text",3]],["bool",15]]],[11,"eq","tui::widgets","",35,[[["bordertype",4]],["bool",15]]],[11,"eq","","",44,[[["block",3]],["bool",15]]],[11,"ne","","",44,[[["block",3]],["bool",15]]],[11,"eq","","",52,[[["listitem",3]],["bool",15]]],[11,"ne","","",52,[[["listitem",3]],["bool",15]]],[11,"eq","","",56,[[["cell",3]],["bool",15]]],[11,"ne","","",56,[[["cell",3]],["bool",15]]],[11,"eq","","",57,[[["row",3]],["bool",15]]],[11,"ne","","",57,[[["row",3]],["bool",15]]],[11,"eq","","",58,[[["table",3]],["bool",15]]],[11,"ne","","",58,[[["table",3]],["bool",15]]],[11,"eq","","",38,[[["borders",3]],["bool",15]]],[11,"ne","","",38,[[["borders",3]],["bool",15]]],[11,"partial_cmp","tui::style","",11,[[["modifier",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["modifier",3]],["bool",15]]],[11,"le","","",11,[[["modifier",3]],["bool",15]]],[11,"gt","","",11,[[["modifier",3]],["bool",15]]],[11,"ge","","",11,[[["modifier",3]],["bool",15]]],[11,"partial_cmp","tui::widgets","",38,[[["borders",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["borders",3]],["bool",15]]],[11,"le","","",38,[[["borders",3]],["bool",15]]],[11,"gt","","",38,[[["borders",3]],["bool",15]]],[11,"ge","","",38,[[["borders",3]],["bool",15]]],[11,"fmt","tui::backend","",42,[[["formatter",3]],["result",6]]],[11,"fmt","tui::buffer","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tui::layout","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tui::style","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tui::symbols::block","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tui::symbols::bar","",14,[[["formatter",3]],["result",6]]],[11,"fmt","tui::symbols::line","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tui::symbols","",16,[[["formatter",3]],["result",6]]],[11,"fmt","tui::terminal","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tui::text","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets::canvas","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"sub","tui::style","Returns the set difference of the two sets of flags.",11,[[["modifier",3]],["modifier",3]]],[11,"sub","tui::widgets","Returns the set difference of the two sets of flags.",38,[[["borders",3]],["borders",3]]],[11,"sub_assign","tui::style","Disables all flags enabled in the set.",11,[[["modifier",3]]]],[11,"sub_assign","tui::widgets","Disables all flags enabled in the set.",38,[[["borders",3]]]],[11,"not","tui::style","Returns the complement of this set of flags.",11,[[],["modifier",3]]],[11,"not","tui::widgets","Returns the complement of this set of flags.",38,[[],["borders",3]]],[11,"bitand","tui::style","Returns the intersection between the two sets of flags.",11,[[["modifier",3]],["modifier",3]]],[11,"bitand","tui::widgets","Returns the intersection between the two sets of flags.",38,[[["borders",3]],["borders",3]]],[11,"bitor","tui::style","Returns the union of the two sets of flags.",11,[[["modifier",3]],["modifier",3]]],[11,"bitor","tui::widgets","Returns the union of the two sets of flags.",38,[[["borders",3]],["borders",3]]],[11,"bitxor","tui::style","Returns the left flags, but with all the right flags …",11,[[["modifier",3]],["modifier",3]]],[11,"bitxor","tui::widgets","Returns the left flags, but with all the right flags …",38,[[["borders",3]],["borders",3]]],[11,"bitand_assign","tui::style","Disables all flags disabled in the set.",11,[[["modifier",3]]]],[11,"bitand_assign","tui::widgets","Disables all flags disabled in the set.",38,[[["borders",3]]]],[11,"bitor_assign","tui::style","Adds the set of flags.",11,[[["modifier",3]]]],[11,"bitor_assign","tui::widgets","Adds the set of flags.",38,[[["borders",3]]]],[11,"bitxor_assign","tui::style","Toggles the set of flags.",11,[[["modifier",3]]]],[11,"bitxor_assign","tui::widgets","Toggles the set of flags.",38,[[["borders",3]]]],[11,"hash","tui::layout","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","tui::style","",11,[[]]],[11,"hash","tui::widgets","",38,[[]]],[11,"from_iter","tui::style","",11,[[["intoiterator",8]],["modifier",3]]],[11,"from_iter","tui::widgets","",38,[[["intoiterator",8]],["borders",3]]],[11,"fmt","tui::style","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",38,[[["formatter",3]],["result",6]]],[11,"fmt","tui::style","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",38,[[["formatter",3]],["result",6]]],[11,"fmt","tui::style","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",38,[[["formatter",3]],["result",6]]],[11,"fmt","tui::style","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tui::widgets","",38,[[["formatter",3]],["result",6]]],[11,"write","tui::backend","",41,[[],[["result",6],["usize",15]]]],[11,"flush","","",41,[[],["result",6]]],[11,"new","","",41,[[],["crosstermbackend",3]]],[11,"new","","",42,[[["u16",15]],["testbackend",3]]],[11,"buffer","","",42,[[],["buffer",3]]],[11,"assert_buffer","","",42,[[["buffer",3]]]],[11,"data","tui::widgets","",43,[[],["barchart",3]]],[11,"block","","",43,[[["block",3]],["barchart",3]]],[11,"max","","",43,[[["u64",15]],["barchart",3]]],[11,"bar_style","","",43,[[["style",3]],["barchart",3]]],[11,"bar_width","","",43,[[["u16",15]],["barchart",3]]],[11,"bar_gap","","",43,[[["u16",15]],["barchart",3]]],[11,"bar_set","","",43,[[["set",3]],["barchart",3]]],[11,"value_style","","",43,[[["style",3]],["barchart",3]]],[11,"label_style","","",43,[[["style",3]],["barchart",3]]],[11,"style","","",43,[[["style",3]],["barchart",3]]],[11,"line_symbols","","",35,[[["bordertype",4]],["set",3]]],[11,"title","","",44,[[],["block",3]]],[11,"title_style","","",44,[[["style",3]],["block",3]]],[11,"border_style","","",44,[[["style",3]],["block",3]]],[11,"style","","",44,[[["style",3]],["block",3]]],[11,"borders","","",44,[[["borders",3]],["block",3]]],[11,"border_type","","",44,[[["bordertype",4]],["block",3]]],[11,"inner","","Compute the inner area of a block based on its border …",44,[[["rect",3]],["rect",3]]],[11,"title","","",45,[[],["axis",3]]],[11,"title_style","","",45,[[["style",3]],["axis",3]]],[11,"bounds","","",45,[[],["axis",3]]],[11,"labels","","",45,[[["vec",3],["span",3]],["axis",3]]],[11,"style","","",45,[[["style",3]],["axis",3]]],[11,"name","","",46,[[],["dataset",3]]],[11,"data","","",46,[[],["dataset",3]]],[11,"marker","","",46,[[["marker",4]],["dataset",3]]],[11,"graph_type","","",46,[[["graphtype",4]],["dataset",3]]],[11,"style","","",46,[[["style",3]],["dataset",3]]],[11,"new","","",47,[[["vec",3],["dataset",3]],["chart",3]]],[11,"block","","",47,[[["block",3]],["chart",3]]],[11,"style","","",47,[[["style",3]],["chart",3]]],[11,"x_axis","","",47,[[["axis",3]],["chart",3]]],[11,"y_axis","","",47,[[["axis",3]],["chart",3]]],[11,"hidden_legend_constraints","","Set the constraints used to determine whether the legend …",47,[[],["chart",3]]],[11,"block","","",49,[[["block",3]],["gauge",3]]],[11,"percent","","",49,[[["u16",15]],["gauge",3]]],[11,"ratio","","Sets ratio ([0.0, 1.0]) directly.",49,[[["f64",15]],["gauge",3]]],[11,"label","","",49,[[],["gauge",3]]],[11,"style","","",49,[[["style",3]],["gauge",3]]],[11,"gauge_style","","",49,[[["style",3]],["gauge",3]]],[11,"use_unicode","","",49,[[["bool",15]],["gauge",3]]],[11,"block","","",50,[[["block",3]]]],[11,"ratio","","",50,[[["f64",15]]]],[11,"line_set","","",50,[[["set",3]]]],[11,"label","","",50,[[]]],[11,"style","","",50,[[["style",3]]]],[11,"gauge_style","","",50,[[["style",3]]]],[11,"selected","","",51,[[],[["usize",15],["option",4]]]],[11,"select","","",51,[[["usize",15],["option",4]]]],[11,"new","","",52,[[],["listitem",3]]],[11,"style","","",52,[[["style",3]],["listitem",3]]],[11,"height","","",52,[[],["usize",15]]],[11,"new","","",53,[[],["list",3]]],[11,"block","","",53,[[["block",3]],["list",3]]],[11,"style","","",53,[[["style",3]],["list",3]]],[11,"highlight_symbol","","",53,[[["str",15]],["list",3]]],[11,"highlight_style","","",53,[[["style",3]],["list",3]]],[11,"start_corner","","",53,[[["corner",4]],["list",3]]],[11,"new","","",54,[[],["paragraph",3]]],[11,"block","","",54,[[["block",3]],["paragraph",3]]],[11,"style","","",54,[[["style",3]],["paragraph",3]]],[11,"wrap","","",54,[[["wrap",3]],["paragraph",3]]],[11,"scroll","","",54,[[],["paragraph",3]]],[11,"alignment","","",54,[[["alignment",4]],["paragraph",3]]],[11,"block","","",55,[[["block",3]],["sparkline",3]]],[11,"style","","",55,[[["style",3]],["sparkline",3]]],[11,"data","","",55,[[],["sparkline",3]]],[11,"max","","",55,[[["u64",15]],["sparkline",3]]],[11,"bar_set","","",55,[[["set",3]],["sparkline",3]]],[11,"style","","Set the <code>Style</code> of this cell.",56,[[["style",3]]]],[11,"new","","Creates a new [<code>Row</code>] from an iterator where items can be …",57,[[]]],[11,"height","","Set the fixed height of the [<code>Row</code>]. Any [<code>Cell</code>] whose …",57,[[["u16",15]]]],[11,"style","","Set the [<code>Style</code>] of the entire row. This [<code>Style</code>] can be …",57,[[["style",3]]]],[11,"bottom_margin","","Set the bottom margin. By default, the bottom margin is <code>0</code>.",57,[[["u16",15]]]],[11,"new","","",58,[[]]],[11,"block","","",58,[[["block",3]]]],[11,"header","","",58,[[["row",3]]]],[11,"widths","","",58,[[]]],[11,"style","","",58,[[["style",3]]]],[11,"highlight_symbol","","",58,[[["str",15]]]],[11,"highlight_style","","",58,[[["style",3]]]],[11,"column_spacing","","",58,[[["u16",15]]]],[11,"selected","","",59,[[],[["usize",15],["option",4]]]],[11,"select","","",59,[[["usize",15],["option",4]]]],[11,"new","","",60,[[["vec",3],["spans",3]],["tabs",3]]],[11,"block","","",60,[[["block",3]],["tabs",3]]],[11,"select","","",60,[[["usize",15]],["tabs",3]]],[11,"style","","",60,[[["style",3]],["tabs",3]]],[11,"highlight_style","","",60,[[["style",3]],["tabs",3]]],[11,"divider","","",60,[[],["tabs",3]]]],"p":[[8,"Backend"],[3,"Cell"],[3,"Buffer"],[4,"Corner"],[4,"Direction"],[4,"Constraint"],[3,"Margin"],[4,"Alignment"],[3,"Layout"],[3,"Rect"],[4,"Color"],[3,"Modifier"],[3,"Style"],[3,"Set"],[3,"Set"],[3,"Set"],[4,"Marker"],[3,"Viewport"],[3,"TerminalOptions"],[3,"Frame"],[3,"Terminal"],[3,"StyledGrapheme"],[3,"Span"],[3,"Spans"],[3,"Text"],[3,"Line"],[3,"Map"],[4,"MapResolution"],[3,"Points"],[3,"Rectangle"],[8,"Shape"],[3,"Label"],[3,"Painter"],[3,"Context"],[3,"Canvas"],[4,"BorderType"],[4,"GraphType"],[3,"Wrap"],[3,"Borders"],[8,"Widget"],[8,"StatefulWidget"],[3,"CrosstermBackend"],[3,"TestBackend"],[3,"BarChart"],[3,"Block"],[3,"Axis"],[3,"Dataset"],[3,"Chart"],[3,"Clear"],[3,"Gauge"],[3,"LineGauge"],[3,"ListState"],[3,"ListItem"],[3,"List"],[3,"Paragraph"],[3,"Sparkline"],[3,"Cell"],[3,"Row"],[3,"Table"],[3,"TableState"],[3,"Tabs"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word …","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string\'s grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was …",null,null],[13,"PreContext","","More pre-context is needed. The caller should call …",0,null],[13,"PrevChunk","","When requesting <code>prev_boundary</code>, the cursor is moving past …",0,null],[13,"NextChunk","","When requesting <code>next_boundary</code>, the cursor is moving past …",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain …",0,null],[17,"UNICODE_VERSION","","The version of Unicode that this version of …",null,null],[3,"UWordBounds","","External iterator for a string\'s word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after …",null,null],[3,"USentenceBounds","","External iterator for a string\'s sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte …",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after …",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode …",null,null],[10,"graphemes","","Returns an iterator over the grapheme clusters of <code>self</code>.",1,[[["bool",15]],["graphemes",3]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of <code>self</code> …",1,[[["bool",15]],["graphemeindices",3]]],[10,"unicode_words","","Returns an iterator over the words of <code>self</code>, separated on …",1,[[],["unicodewords",3]]],[10,"split_word_bounds","","Returns an iterator over substrings of <code>self</code> separated on …",1,[[],["uwordbounds",3]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of <code>self</code>, split on …",1,[[],["uwordboundindices",3]]],[10,"unicode_sentences","","Returns an iterator over substrings of <code>self</code> separated on …",1,[[],["unicodesentences",3]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of <code>self</code> separated on …",1,[[],["usentencebounds",3]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of <code>self</code>, split on …",1,[[],["usentenceboundindices",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["graphemeincomplete",4]],["bool",15]]],[11,"ne","","",0,[[["graphemeincomplete",4]],["bool",15]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",3,[[],[["option",4],["str",15]]]],[11,"next_back","","",5,[[],[["option",4],["str",15]]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",6,[[],[["option",4],["str",15]]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"size_hint","","",3,[[]]],[11,"next","","",3,[[],[["option",4],["str",15]]]],[11,"next","","",5,[[],[["option",4],["str",15]]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"size_hint","","",6,[[]]],[11,"next","","",6,[[],[["option",4],["str",15]]]],[11,"next","","",8,[[],[["option",4],["str",15]]]],[11,"size_hint","","",9,[[]]],[11,"next","","",9,[[],[["option",4],["str",15]]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"clone","","",2,[[],["graphemeindices",3]]],[11,"clone","","",3,[[],["graphemes",3]]],[11,"clone","","",4,[[],["graphemecursor",3]]],[11,"clone","","",6,[[],["uwordbounds",3]]],[11,"clone","","",7,[[],["uwordboundindices",3]]],[11,"clone","","",8,[[],["unicodesentences",3]]],[11,"clone","","",9,[[],["usentencebounds",3]]],[11,"clone","","",10,[[],["usentenceboundindices",3]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as …",2,[[],["str",15]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as …",3,[[],["str",15]]],[11,"new","","Create a new cursor. The string and initial offset are …",4,[[["usize",15],["bool",15]],["graphemecursor",3]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",4,[[["usize",15]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value …",4,[[],["usize",15]]],[11,"provide_context","","Provide additional pre-context when it is needed to …",4,[[["usize",15],["str",15]]]],[11,"is_boundary","","Determine whether the current cursor location is a …",4,[[["usize",15],["str",15]],[["bool",15],["graphemeincomplete",4],["result",4]]]],[11,"next_boundary","","Find the next boundary after the current cursor position. …",4,[[["usize",15],["str",15]],[["result",4],["option",4],["graphemeincomplete",4]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor …",4,[[["usize",15],["str",15]],[["result",4],["option",4],["graphemeincomplete",4]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as …",7,[[],["str",15]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as …",6,[[],["str",15]]]],"p":[[4,"GraphemeIncomplete"],[8,"UnicodeSegmentation"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width …",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the character\'s displayed width in columns, or …",0,[[],[["option",4],["usize",15]]]],[10,"width_cjk","","Returns the character\'s displayed width in columns, or …",0,[[],[["option",4],["usize",15]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode …",null,null],[10,"width","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]],[10,"width_cjk","","Returns the string\'s displayed width in columns.",1,[[],["usize",15]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[],["bool",15]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[],["bool",15]]]],"p":[[8,"UnicodeXID"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[11,"new","","Creates an empty <code>VecMap</code>.",1,[[]]],[11,"with_capacity","","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …",1,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the <code>VecMap</code> can hold without…",1,[[],["usize",15]]],[11,"reserve_len","","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …",1,[[["usize",15]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given <code>VecMap</code> to …",1,[[["usize",15]]]],[11,"shrink_to_fit","","Trims the <code>VecMap</code> of any excess capacity.",1,[[]]],[11,"keys","","Returns an iterator visiting all keys in ascending order …",1,[[],["keys",3]]],[11,"values","","Returns an iterator visiting all values in ascending …",1,[[],["values",3]]],[11,"values_mut","","Returns an iterator visiting all values in ascending …",1,[[],["valuesmut",3]]],[11,"iter","","Returns an iterator visiting all key-value pairs in …",1,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in …",1,[[],["itermut",3]]],[11,"append","","Moves all elements from <code>other</code> into the map while …",1,[[]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["usize",15]]]],[11,"drain","","Returns an iterator visiting all key-value pairs in …",1,[[],["drain",3]]],[11,"len","","Returns the number of elements in the map.",1,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[],["bool",15]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["usize",15]],["option",4]]],[11,"contains_key","","Returns true if the map contains a value for the …",1,[[["usize",15]],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",1,[[["usize",15]],["option",4]]],[11,"insert","","Inserts a key-value pair into the map. If the key already …",1,[[["usize",15]],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",1,[[["usize",15]],["option",4]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",1,[[["usize",15]],["entry",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[["fnonce",8]]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",2,[[]]],[11,"get","","Gets a reference to the value in the entry.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key, …",3,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",3,[[]]],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the …",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",6,[[],[["usize",15],["option",4]]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in …",1,[[],["intoiter",3]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",6,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",4,[[],["iter",3]]],[11,"clone","","",6,[[],["keys",3]]],[11,"clone","","",7,[[],["values",3]]],[11,"default","","",1,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",1,[[],["bool",15]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"index","","",1,[[["usize",15]]]],[11,"index","","",1,[[["usize",15]]]],[11,"index_mut","","",1,[[["usize",15]]]],[11,"index_mut","","",1,[[["usize",15]]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",1,[[["intoiterator",8]]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);