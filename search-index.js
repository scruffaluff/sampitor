var searchIndex = JSON.parse('{\
"addr2line":{"doc":"This crate provides a cross-platform library and binary …","t":[3,11,11,11,11,11,11,11,3,3,11,3,12,12,12,3,12,12,11,11,5,5,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Context","from_sections","from_dwarf","dwarf","find_dwarf_unit","find_location","find_location_range","find_frames","LocationRangeIter","FrameIter","next","Frame","dw_die_offset","function","location","FunctionName","name","language","raw_name","demangle","demangle","demangle_auto","Location","file","line","column","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","next"],"q":["addr2line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The state necessary to perform address to line …","Construct a new <code>Context</code> from DWARF sections.","Construct a new <code>Context</code> from an existing [<code>gimli::Dwarf</code>] …","The dwarf sections associated with this <code>Context</code>.","Find the DWARF unit corresponding to the given virtual …","Find the source file and line corresponding to the given …","Return source file and lines for a range of addresses. …","Return an iterator for the function frames corresponding …","Iterator over <code>Location</code>s in a range of addresses, returned …","An iterator over function frames.","Advances the iterator and returns the next frame.","A function frame.","The DWARF unit offset corresponding to the DIE of the …","The name of the function.","The source location corresponding to this frame.","A function name.","The name of the function.","The language of the compilation unit containing this …","The raw name of this function before demangling.","The name of this function after demangling (if …","Demangle a symbol name using the demangling scheme for …","Apply ‘best effort’ demangling of a symbol name.","A source location.","The file name.","The line number.","The column number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,0,2,0,3,3,3,0,4,4,4,4,0,0,0,5,5,5,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6],"f":[null,[[["debugline",3],["debugabbrev",3],["debuglinestr",3],["debugranges",3],["debugstr",3],["debugstroffsets",3],["debugaddr",3],["debuginfo",3],["debugrnglists",3]],[["result",4],["error",4]]],[[["dwarf",3]],[["result",4],["error",4]]],[[],["dwarf",3]],[[["u64",15]],[["unit",3],["option",4]]],[[["u64",15]],[["result",4],["option",4],["error",4]]],[[["u64",15]],[["locationrangeiter",3],["error",4],["result",4]]],[[["u64",15]],[["frameiter",3],["error",4],["result",4]]],null,null,[[],[["option",4],["error",4],["result",4]]],null,null,null,null,null,null,null,[[],[["cow",4],["error",4],["result",4]]],[[],[["cow",4],["error",4],["result",4]]],[[["dwlang",3],["str",15]],[["string",3],["option",4]]],[[["dwlang",3],["cow",4],["str",15],["option",4]],[["cow",4],["str",15]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]]],"p":[[3,"Context"],[3,"FrameIter"],[3,"Frame"],[3,"FunctionName"],[3,"Location"],[3,"LocationRangeIter"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","t":[3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Adler32","new","from_checksum","checksum","write_slice","adler32_slice","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","finish","write","clone","default"],"q":["adler","","","","","","","","","","","","","","","","",""],"d":["Adler-32 checksum calculator.","Creates a new Adler-32 instance with default state.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Returns the calculated checksum at this point in time.","Adds <code>bytes</code> to the checksum calculation.","Calculates the Adler-32 checksum of a byte slice.","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[["u32",15]]],[[],["u32",15]],[[]],[[],["u32",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[],["u64",15]],[[]],[[],["adler32",3]],[[]]],"p":[[3,"Adler32"]]},\
"alsa":{"doc":"Thin but safe wrappers for ALSA.","t":[0,3,3,11,11,11,11,11,11,0,3,3,4,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,3,3,0,3,11,11,11,11,11,11,3,3,11,11,11,11,0,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,3,6,3,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,4,13,13,13,13,13,13,13,13,13,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,8,18,4,13,13,13,13,13,11,4,13,13,13,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,4,13,13,13,13,13,13,11,0,3,3,11,11,11,11,11,11,3,11,11,11,11,11,11,11,3,0,3,11,11,3,12,12,12,0,3,12,12,12,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,11,5,5,0,3,11,11,11,11,11,11,11,11,3,12,11,11,3,3,3,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,13,13,13,13,13,13,13,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,3,11,11,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,3,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,3,12,12,12,12,12,3,12,12,12,3,12,12,3,12,12,3,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,0,0,3,11,11,11,11,3,11,11,11,11,11,11,3,11,11,11,11,11,11,8,18,10,3,3,6,6,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,0,4,13,13,13,13,0,5,8,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,5,4,13,13,11,11,4,13,13,13,4,13,13,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["card","Card","Iter","new","new","from_str","get_name","get_longname","get_index","ctl","Ctl","CardInfo","ElemIface","Card","Hwdep","Mixer","PCM","Rawmidi","Timer","Sequencer","ElemId","ElemType","None","Boolean","Integer","Enumerated","Bytes","IEC958","Integer64","ElemValue","ElemInfo","hctl","HCtl","new","open","load","elem_iter","find_elem","wait","ElemIter","Elem","get_id","info","read","write","pcm","Chmap","ChmapPosition","Unknown","NA","Mono","FL","FR","RL","SR","RC","FLC","FRC","RLC","RRC","FLW","FRW","FLH","FCH","FRH","TC","TFL","TFR","TFC","TRL","TRR","TRC","TFLC","TFRC","TSL","TSR","LLFE","RLFE","BC","BLC","BRC","ChmapType","None","Fixed","Var","Paired","ChmapsQuery","Frames","Info","new","get_card","get_device","get_subdevice","get_id","get_name","get_subdevice_name","get_stream","PCM","new","open","start","drop","pause","resume","drain","prepare","reset","recover","try_recover","wait","state","bytes_to_frames","frames_to_bytes","avail_update","avail","avail_delay","delay","status","io_i8","io_u8","io_i16","io_u16","io_i32","io_u32","io_f32","io_f64","io_checked","io","io_bytes","direct_mmap_capture","direct_mmap_playback","hw_params","hw_params_current","sw_params","sw_params_current","get_params","info","dump","dump_hw_setup","dump_sw_setup","query_chmaps","set_chmap","get_chmap","link","unlink","IO","writei","readi","mmap","State","Open","Setup","Prepared","Running","XRun","Draining","Paused","Suspended","Disconnected","all","Format","Unknown","S8","U8","S16LE","S16BE","U16LE","U16BE","S24LE","S24BE","U24LE","U24BE","S32LE","S32BE","U32LE","U32BE","FloatLE","FloatBE","Float64LE","Float64BE","IEC958SubframeLE","IEC958SubframeBE","MuLaw","ALaw","ImaAdPCM","MPEG","GSM","Special","S243LE","S243BE","U243LE","U243BE","S203LE","S203BE","U203LE","U203BE","S183LE","S183BE","U183LE","U183BE","G72324","G723241B","G72340","G723401B","DSDU8","DSDU16LE","DSDU32LE","DSDU16BE","DSDU32BE","all","s16","u16","s32","u32","float","float64","s24","u24","iec958_subframe","IoFormat","FORMAT","Access","MMapInterleaved","MMapNonInterleaved","MMapComplex","RWInterleaved","RWNonInterleaved","all","TstampType","Gettimeofday","Monotonic","MonotonicRaw","all","HwParams","any","get_rate_resample","set_rate_resample","set_channels_near","set_channels","get_channels","get_channels_max","get_channels_min","test_channels","set_rate_near","set_rate","get_rate","get_rate_max","get_rate_min","test_rate","set_format","get_format","test_format","set_access","get_access","set_period_size_near","set_period_size","set_period_time_near","get_period_size","get_period_size_min","get_period_size_max","set_periods","get_periods","set_buffer_size_near","set_buffer_size_max","set_buffer_size_min","set_buffer_size","set_buffer_time_near","get_buffer_size","get_buffer_size_min","get_buffer_size_max","get_buffer_time_max","can_pause","can_resume","supports_audio_ts_type","dump","copy_from","SwParams","set_avail_min","get_avail_min","get_boundary","set_start_threshold","get_start_threshold","set_stop_threshold","get_stop_threshold","set_tstamp_mode","get_tstamp_mode","set_tstamp_type","get_tstamp_type","dump","Status","get_htstamp","get_trigger_htstamp","get_audio_htstamp","get_state","get_avail","get_delay","get_avail_max","get_overrange","dump","StatusBuilder","new","audio_htstamp_config","build","AudioTstampType","Compat","Default","Link","LinkAbsolute","LinkEstimated","LinkSynchronized","all","rawmidi","Iter","Info","get_device","get_subdevice","get_stream","get_subdevice_name","get_id","new","Rawmidi","new","open","info","drop","drain","name","io","IO","device_name","HintIter","new","new_str","Hint","name","desc","direction","poll","pollfd","fd","events","revents","Flags","IN","PRI","OUT","ERR","HUP","NVAL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Descriptors","count","fill","revents","get","poll","poll_all","mixer","Mixer","new","find_selem","open","attach","load","iter","handle_events","wait","MilliBel","0","to_db","from_db","Elem","Iter","SelemId","new","empty","get_name","get_index","set_name","set_index","Selem","new","register","get_id","has_capture_volume","has_capture_switch","has_playback_volume","has_playback_switch","can_capture","can_playback","has_volume","get_capture_volume_range","get_capture_db_range","get_playback_volume_range","get_playback_db_range","is_playback_mono","has_capture_channel","has_playback_channel","channel_name","get_playback_volume","get_playback_vol_db","ask_playback_vol_db","get_capture_volume","get_capture_vol_db","ask_capture_vol_db","set_playback_volume","set_playback_volume_all","set_playback_db","set_capture_db","set_playback_db_all","set_capture_db_all","set_capture_volume","set_playback_switch","set_playback_switch_all","set_capture_switch","set_capture_switch_all","get_playback_switch","get_capture_switch","is_enumerated","is_enum_playback","is_enum_capture","get_enum_items","get_enum_item_name","iter_enum","get_enum_item","set_enum_item","IterEnum","SelemChannelId","Unknown","FrontLeft","FrontRight","RearLeft","RearRight","FrontCenter","Woofer","SideLeft","SideRight","RearCenter","Last","all","mono","seq","Seq","open","set_client_name","set_client_event_filter","set_client_pool_output","set_client_pool_input","set_client_pool_output_room","client_id","drain_output","get_any_client_info","get_any_port_info","create_port","create_simple_port","set_port_info","delete_port","subscribe_port","unsubscribe_port","control_queue","event_output","event_output_buffer","event_output_direct","get_queue_tempo","set_queue_tempo","get_queue_status","free_queue","alloc_queue","alloc_named_queue","sync_output_queue","drop_output","input","remove_events","Input","event_input","event_input_pending","set_input_buffer_size","drop_input","ClientInfo","get_client","get_name","ClientIter","new","PortInfo","empty","get_client","get_port","get_name","set_name","get_capability","get_type","set_capability","set_type","addr","get_midi_channels","get_midi_voices","get_synth_voices","get_read_use","get_write_use","get_port_specified","get_timestamping","get_timestamp_real","get_timestamp_queue","set_midi_channels","set_midi_voices","set_synth_voices","set_port_specified","set_timestamping","set_timestamp_real","set_timestamp_queue","PortIter","new","PortCap","READ","WRITE","SYNC_READ","SYNC_WRITE","DUPLEX","SUBS_READ","SUBS_WRITE","NO_EXPORT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","PortType","SPECIFIC","MIDI_GENERIC","MIDI_GM","MIDI_GS","MIDI_XG","MIDI_MT32","MIDI_GM2","SYNTH","DIRECT_SAMPLE","SAMPLE","HARDWARE","SOFTWARE","SYNTHESIZER","PORT","APPLICATION","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Remove","INPUT","OUTPUT","DEST","DEST_CHANNEL","TIME_BEFORE","TIME_AFTER","TIME_TICK","EVENT_TYPE","IGNORE_OFF","TAG_MATCH","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Addr","client","port","system_timer","system_announce","broadcast","PortSubscribe","empty","get_sender","get_dest","get_queue","get_exclusive","get_time_update","get_time_real","set_sender","set_dest","set_queue","set_exclusive","set_time_update","set_time_real","QuerySubsType","READ","WRITE","PortSubscribeIter","new","Event","new","new_ext","into_owned","get_type","get_data","get_ext","set_subs","set_source","set_dest","set_tag","set_queue","get_source","get_dest","get_tag","get_queue","schedule_real","schedule_tick","set_direct","get_relative","get_time","get_tick","get_priority","set_priority","EventData","has_data","set_data","get_data","EvNote","channel","note","velocity","off_velocity","duration","EvCtrl","channel","param","value","Connect","sender","dest","EvQueueControl","queue","value","EvResult","event","result","EventType","Bounce","Chanpress","ClientChange","ClientExit","ClientStart","Clock","Continue","Control14","Controller","Echo","Keypress","Keysign","None","Nonregparam","Note","Noteoff","Noteon","Oss","Pgmchange","Pitchbend","PortChange","PortExit","PortStart","PortSubscribed","PortUnsubscribed","Qframe","QueueSkew","Regparam","Reset","Result","Sensing","SetposTick","SetposTime","Songpos","Songsel","Start","Stop","SyncPos","Sysex","System","Tempo","Tick","Timesign","TuneRequest","Usr0","Usr1","Usr2","Usr3","Usr4","Usr5","Usr6","Usr7","Usr8","Usr9","UsrVar0","UsrVar1","UsrVar2","UsrVar3","UsrVar4","all","QueueTempo","empty","get_queue","get_tempo","get_ppq","get_skew","get_skew_base","set_tempo","set_ppq","set_skew","set_skew_base","QueueStatus","empty","get_queue","get_events","get_tick_time","get_real_time","get_status","RemoveEvents","new","get_condition","get_queue","get_time","get_dest","get_channel","get_event_type","get_tag","set_condition","set_queue","set_time","set_dest","set_channel","set_event_type","set_tag","MidiEvent","new","resize_buffer","enable_running_status","init","reset_encode","reset_decode","decode","encode","all","all","direct","pcm","SyncPtrStatus","sync_ptr","hw_ptr","state","htstamp","Status","new","from_fd","state","hw_ptr","htstamp","audio_htstamp","Control","new","from_fd","appl_ptr","set_appl_ptr","avail_min","set_avail_min","MmapDir","DIR","avail","Playback","Capture","MmapPlayback","MmapCapture","MmapIO","RawSamples","ptr","frames","channels","samples","write_samples","status","appl_ptr","hw_ptr","boundary","buffer_size","channels","commit","avail","data_ptr","write","write","iter","iter","CaptureIter","nix","Error","Sys","InvalidPath","InvalidUtf8","UnsupportedOperation","errno","errno","ErrnoSentinel","sentinel","Errno","UnknownErrno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EDEADLK","ENAMETOOLONG","ENOLCK","ENOSYS","ENOTEMPTY","ELOOP","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","EOVERFLOW","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","EILSEQ","ERESTART","ESTRPIPE","EUSERS","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EALREADY","EINPROGRESS","ESTALE","EUCLEAN","ENOTNAM","ENAVAIL","EISNAM","EREMOTEIO","EDQUOT","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","ENOKEY","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","ERFKILL","EHWPOISON","EWOULDBLOCK","EDEADLOCK","ENOTSUP","from_i32","Direction","Playback","Capture","input","output","ValueOr","Less","Nearest","Greater","Round","Floor","Ceil","Error","Result","Ctl","Output","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","eq","ne","fmt","hash","clone","fmt","fmt","clone","clone","fmt","fmt","from","from","eq","eq","ne","count","fill","revents","count","fill","revents","count","fill","revents","count","fill","revents","count","fill","revents","count","fill","revents","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","has_data","get_data","set_data","avail","avail","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","extend","extend","extend","extend","next","next","next","next","next","next","next","next","next","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub","sub","sub","add","add_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","not","not","not","not","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_str","from_iter","from_iter","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description","source","read","read","write","flush","write","flush","new","unsupported","func","errno","nix_error","new","open","from_card","card_info","wait","get_db_range","convert_to_db","convert_from_db","subscribe_events","read","get_id","get_driver","get_components","get_longname","get_name","get_mixername","get_card","all","all","get_boolean","set_boolean","get_integer","set_integer","get_integer64","set_integer64","get_enumerated","set_enumerated","get_byte","set_byte","get_bytes","set_bytes","new","get_type","get_count","get_name","get_device","get_subdevice","get_numid","get_index","get_interface","set_device","set_subdevice","set_numid","set_index","set_interface","set_name","new","buffer_open","buffer_string","as_errno","from_errno","last","invalid_argument","last","desc","from_i32","clear","result"],"q":["alsa","alsa::card","","","","","","","","alsa","alsa::ctl","","","","","","","","","","","","","","","","","","","","","alsa","alsa::hctl","","","","","","","","","","","","","alsa","alsa::pcmalsa","alsa::rawmidi","","","","","","","","","","","","","","","","","alsa","alsa::device_name","","","","","","","alsa","alsa::poll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa","alsa::mixer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa","alsa::seqalsa::pcm","","alsa","alsa::direct","alsa::direct::pcm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa","alsa::nix","","","","","","alsa::nix::errno","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::card","","","","","","","","","","","","","","","","","alsa::ctl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::hctl","","","","","","","","","","","","","","","","","","","","","","alsa::pcm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::rawmidi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::device_name","","","","","","","","","","","","","","","","","alsa::poll","","","","","","","","","","","","","","","","","","alsa::mixer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::seqalsa","","","","","","","","alsa::direct::pcm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::nix","","","","","","","","","","alsa::nix::errno","","","","","","","","","","alsa","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::poll","","","","","alsa::nix::errno","alsa::nix","","alsa::nix::errno","alsa::nix","alsa::nix::errno","alsa::nix","","alsa::nix::errno","alsa::nix","","alsa::ctl","","","alsa::hctl","","","alsa::pcm","","","alsa::rawmidi","","","alsa::poll","","","alsa::mixer","","","alsa::seq","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa::direct::pcm","","alsa::ctl","","","","alsa::hctl","alsa::pcm","","","","","alsa::rawmidi","","alsa::device_name","alsa::mixer","alsa::seq","","","","","","","","","alsa","alsa::pcm","","alsa::direct::pcm","alsa::pcm","alsa::poll","alsa::seq","","","alsa::card","alsa::hctl","alsa::rawmidi","alsa::device_name","alsa::mixer","","alsa::seq","","","alsa::pcm","alsa::direct::pcm","alsa","","","","alsa::card","alsa::ctl","","","alsa::pcm","","","","","","alsa::device_name","alsa::poll","alsa::mixer","","","","alsa::seq","","","","","","","","","","","","","","","alsa::pcm","","alsa::direct::pcm","","","alsa::seq","","","","","","alsa","","","alsa::card","alsa::ctl","","alsa::pcm","","","","","alsa::poll","alsa::mixer","","alsa::seq","","","","","","","","","","alsa::pcm","","alsa","","","","","alsa::card","","alsa::ctl","","","alsa::pcm","","","","","alsa::poll","","alsa::mixer","","","alsa::seq","","","","","","","","","","","","","","","","","","","alsa::pcm","","alsa","","","alsa::card","alsa::ctl","","alsa::pcm","","","","","alsa::poll","alsa::mixer","","alsa::seq","","","","","","","","","","alsa::pcm","","alsa::mixer","","alsa","","","","alsa::card","alsa::ctl","","","","alsa::pcm","","","","","","","alsa::device_name","alsa::poll","alsa::mixer","","","","alsa::seq","","","","","","","","","","","","","alsa","alsa::pcm","","alsa::direct::pcm","","","","","","alsa","alsa::mixer","alsa","alsa::pcm","","alsa::poll","alsa::mixer","alsa::seq","","","alsa::mixer","","alsa::poll","alsa::mixer","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::ctl","","alsa::pcm","","","","","alsa::poll","alsa::mixer","","alsa::seq","","","","","","","","","","alsa::pcm","","alsa::seq","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa::poll","alsa::seq","","","alsa","","alsa::pcm","alsa::rawmidi","alsa::pcm","","alsa::rawmidi","","alsa","","","","","alsa::ctl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alsa","","alsa::nix","","","","alsa::nix::errno","","","",""],"d":["Sound card enumeration","An ALSA sound card, uniquely identified by its index.","Iterate over existing sound cards.","","","","","","","Control device API","snd_ctl_t wrapper","snd_ctl_card_info_t wrapper","SND_CTL_ELEM_IFACE_xxx constants","","","","","","","","snd_ctl_elem_id_t wrapper","SND_CTL_ELEM_TYPE_xxx constants","","","","","","","","snd_ctl_elem_value_t wrapper","snd_ctl_elem_info_t wrapper","HCtl API - for mixer control and jack detection","snd_hctl_t wrapper","Wrapper around open that takes a &str instead of a &CStr","Open does not support async mode (it’s not very Rustic …","","","","","Iterates over elements for a <code>HCtl</code>","snd_hctl_elem_t wrapper","","","","","Audio playback and capture","snd_pcm_chmap_t wrapper","SND_CHMAP_xxx constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SND_CHMAP_TYPE_xxx constants","","","","","Iterator over available channel maps - see …","snd_pcm_sframes_t","","","","","","","","","","snd_pcm_t wrapper - start here for audio playback and …","Wrapper around open that takes a &str instead of a &CStr","","","","","","","","","","Wrapper around snd_pcm_recover.","","","","","","","","","","","","","","","","","","","","","Read buffers by talking to the kernel directly, bypassing …","Write buffers by talking to the kernel directly, …","Sets hw parameters. Note: No IO object can exist for this …","Retreive current PCM hardware configuration.","","","Wraps <code>snd_pcm_get_params</code>, returns …","","","","","","","","","","Sample format dependent struct for reading from and …","On success, returns number of <em>frames</em> written. (Multiply …","On success, returns number of <em>frames</em> read. (Multiply with …","Wrapper around snd_pcm_mmap_begin and snd_pcm_mmap_commit.","SND_PCM_STATE_xxx constants","","","","","","","","","","Returns a slice of all possible values; useful for …","SND_PCM_FORMAT_xxx constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a slice of all possible values; useful for …","","","","","","","","","","","","SND_PCM_ACCESS_xxx constants","","","","","","Returns a slice of all possible values; useful for …","SND_PCM_TSTAMP_TYPE_xxx constants","","","","Returns a slice of all possible values; useful for …","snd_pcm_hw_params_t wrapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the alsa stream can be paused, false if …","Returns true if the alsa stream can be resumed, false if …","Returns true if the alsa stream supports the provided …","","","snd_pcm_sw_params_t wrapper","","","","","","","","","","","","","snd_pcm_status_t wrapper","","","","","","","","","","Builder for [<code>Status</code>].","","","","SND_PCM_AUDIO_TSTAMP_TYPE_xxx constants","","","","","","","Returns a slice of all possible values; useful for …","MIDI devices I/O and enumeration","Iterator over Rawmidi devices and subdevices","snd_rawmidi_info_t wrapper","","","","","","","snd_rawmidi_t wrapper","Wrapper around open that takes a &str instead of a &CStr","","","","","","","Implements <code>std::io::Read</code> and <code>std::io::Write</code> for <code>Rawmidi</code>","Enumerate devices in the alsa library configuration","snd_device_name_hint wrapper","typical interfaces are: “pcm”, “ctl”, “rawmidi…","A constructor variant that takes the interface as a Rust …","snd_device_name_get_hint wrapper","","","","Tiny poll ffi","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","Wrapper around count and fill - returns an array of …","Wrapper around the libc poll call.","Builds a pollfd array, polls it, and returns the poll …","Mixer API - Simple Mixer API for mixer control","wraps snd_mixer_t","Opens a mixer and attaches it to a card identified by its …","Creates a Selem by looking for a specific selem by name …","","","","","","","Wrapper for a mB (millibel) value.","","","","Wraps snd_mixer_elem_t","Iterator for all elements of mixer","Wrapper for snd_mixer_selem_id_t No allocation (uses …","","Returns an empty (zeroed) SelemId. This id is not a …","","","","","Wraps an Elem as a Selem","Creates a Selem by wrapping <code>elem</code>.","TODO: This function might change to support regopt and to …","","","","","","","","","returns range for capture volume as (min, max) values","returns (min, max) values.","returns (min, max) values.","returns (min, max) values.","","","","Gets name from snd_mixer_selem_channel_name","","returns volume in millibels.","Asks alsa to convert playback volume to millibels.","","returns volume in millibels.","Asks alsa to convert capture volume to millibels","","","","","","","","","","","","","","","","","","","Enumerates over valid Enum values","","","","Wrapper for SND_MIXER_SCHN_* constants","","","","","","","","","","","","Returns a slice of all possible values; useful for …","","MIDI sequencer I/O and enumeration","snd_seq_t wrapper","Opens the sequencer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call this function to obtain an instance of <code>Input</code> to …","","Struct for receiving input events from a sequencer. The …","","","","","snd_seq_client_info_t wrapper","","","Iterates over clients connected to the seq API (both …","","snd_seq_port_info_t wrapper","Creates a new PortInfo with all fields set to zero.","","","","","","","","","Returns an Addr containing this PortInfo’s client and …","","","","","","","","","","","","","","","","","Iterates over clients connected to the seq API (both …","","SND_SEQ_PORT_CAP_xxx constants","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","SND_SEQ_PORT_TYPE_xxx constants","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","SND_SEQ_REMOVE_xxx constants","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","snd_seq_addr_t wrapper","","","","","","snd_seq_port_subscribe_t wrapper","Creates a new PortSubscribe with all fields set to zero.","","","","","","","","","","","","","snd_seq_query_subs_type_t wrapper","","","Iterates over port subscriptions for a givent …","","snd_seq_event_t wrapper","Creates a new event. For events that carry …","Creates a new event carrying variable-length data. This …","Consumes this event and returns an (otherwise unchanged) …","","Extract the event data from an event. Use <code>get_ext</code> instead …","Extract the variable-length data carried by events of …","","","","","","","","","","","","","","","","Returns true if the message is high priority.","","Low level methods to set/get data on an Event. Don’t …","","","","","","","","","","","","","","snd_seq_connect_t wrapper","","","snd_seq_ev_queue_control_t wrapper","","","snd_seq_result_t wrapper","","","SND_SEQ_EVENT_xxx constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a slice of all possible values; useful for …","snd_seq_queue_tempo_t wrapper","Creates a new QueueTempo with all fields set to zero.","","","","","","","","","","snd_seq_queue_status_t wrapper","Creates a new QueueStatus with all fields set to zero.","","","","","","snd_seq_remove_events_t wrapper","","","","","","","","","","","","","","","","snd_midi_event_t Wrapper","","","Note: this corresponds to snd_midi_event_no_status, but …","Resets both encoder and decoder","","","","In case of success, returns a tuple of (bytes consumed …","Returns a slice of all possible values; useful for …","Returns a slice of all possible values; useful for …","Functions that bypass alsa-lib and talk directly to the …","This module bypasses alsa-lib and directly read and write …","Read PCM status via a simple kernel syscall, bypassing …","Executes sync_ptr syscall.","","","","Read PCM status directly from memory, bypassing alsa-lib.","","","Current PCM state.","Number of frames hardware has read or written","Timestamp - fast version of alsa-lib’s …","Audio timestamp - fast version of alsa-lib’s …","Write PCM appl ptr directly, bypassing alsa-lib.","","","Read number of frames application has read or written","Set number of frames application has read or written","Read minimum number of frames in buffer in order to …","Write minimum number of frames in buffer in order to …","Dummy trait for better generics","","","Dummy struct for better generics","Dummy struct for better generics","","","Struct containing direct I/O functions shared between …","A raw pointer to samples, and the amount of samples …","","","","Returns <code>frames</code> * <code>channels</code>, i e the amount of samples (of …","Writes samples from an iterator.","Read current status","Read current number of frames committed by application","Read current number of frames read / written by hardware","The number at which hw_ptr and appl_ptr wraps.","Total number of frames in hardware buffer","Number of channels in stream","Notifies the kernel that frames have now been read / …","Number of frames available to read / write.","Returns raw pointers to data to read / write.","Write samples to the kernel ringbuffer.","Write samples to the kernel ringbuffer.","Read samples from the kernel ringbuffer.","Read samples from the kernel ringbuffer.","Iterator over captured samples","Re-exports from the nix crate.","Nix Error Type","","","The operation involved a conversion to Rust’s native …","The operation is not supported by Nix, in this instance …","","Returns the platform-specific value of errno","The sentinel value indicates that a function failed and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replaces constants ending with PLAYBACK/CAPTURE as well as…","","","","","Used to restrict hw parameters. In case the submitted …","The value set is the submitted value, or less","The value set is the submitted value, or the nearest","The value set is the submitted value, or greater","Rounding mode (used in some mixer related calls)","Round down (towards negative infinity)","Round up (towards positive infinity)","ALSA error","","snd_ctl_t wrapper","snd_output_t wrapperreturns the elem of this selem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Disables all flags enabled in the set.","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The function which failed.","The errno, if any.","Underlying error","Wrapper around open that takes a &str instead of a &CStr","Open does not support async mode (it’s not very Rustic …","","","","","","","Note: According to alsa-lib documentation, you’re also …","","","","","","","","","Returns a slice of all possible values; useful for …","Returns a slice of all possible values; useful for …","","","","","","","","","","","","","Creates a new ElemValue.","","","","","","","","","","","","","","","Creates a new ElemId.","","","Convert this <code>Error</code> to an <code>Errno</code>.","Create a nix Error from a given errno","Get the current errno and convert it to a nix Error","Create a new invalid argument error (<code>EINVAL</code>)","","","","","Returns <code>Ok(value)</code> if it does not contain the sentinel …"],"i":[0,0,0,1,2,2,2,2,2,0,0,0,0,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,0,0,0,0,5,5,5,5,5,5,0,0,6,6,6,6,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,0,0,0,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,0,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,0,15,15,15,15,15,15,0,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,0,20,20,20,0,21,21,21,21,21,21,21,0,0,0,22,22,22,22,22,23,0,24,24,24,24,24,24,24,0,0,0,25,25,0,26,26,26,0,0,27,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,0,0,0,0,30,30,30,30,30,30,30,30,0,31,31,31,0,0,0,32,32,32,32,32,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,0,37,37,0,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,0,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,0,50,50,50,50,50,0,51,51,51,0,52,52,0,53,53,0,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,8,7,0,0,0,60,60,60,60,0,61,61,61,61,61,61,0,62,62,62,62,62,62,0,63,63,0,0,0,0,0,0,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,65,67,0,0,0,68,68,68,68,0,0,0,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,71,71,71,71,0,72,72,72,0,73,73,0,0,0,0,74,74,74,74,74,74,74,74,74,74,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,75,75,75,75,75,75,75,76,76,76,76,76,76,76,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,77,77,77,77,77,77,77,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,5,5,5,5,5,5,5,80,80,80,80,80,80,80,80,6,6,6,6,6,6,6,81,81,81,81,81,81,81,81,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,82,82,82,82,82,82,82,82,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,22,22,22,22,22,22,22,24,24,24,24,24,24,24,83,83,83,83,83,83,83,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,32,32,32,32,32,32,32,33,33,33,33,33,33,33,86,86,86,86,86,86,86,86,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,57,57,57,57,57,57,57,58,58,58,58,58,58,58,59,59,59,59,59,59,59,87,87,87,87,87,87,87,87,60,60,60,60,60,60,60,61,61,61,61,61,61,61,62,62,62,62,62,62,62,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,65,65,65,65,65,65,65,64,64,64,64,64,64,64,64,64,90,90,90,90,90,90,90,90,68,68,68,68,68,68,68,68,68,68,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,27,27,27,27,27,70,68,68,70,68,70,68,68,70,68,68,75,75,75,5,5,5,10,10,10,24,24,24,27,27,27,30,30,30,50,50,50,51,51,51,44,44,44,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,88,89,75,76,77,78,5,9,10,11,17,18,22,24,25,30,35,36,37,39,45,56,57,58,59,87,81,82,90,81,28,41,42,43,1,80,23,25,85,86,38,40,47,82,90,71,72,73,74,2,3,4,79,12,13,15,16,17,21,26,28,31,84,85,34,38,40,41,42,43,44,46,47,48,50,51,52,53,54,55,8,7,88,89,64,44,50,51,52,53,54,71,72,73,2,3,4,12,13,15,16,21,28,31,34,41,42,43,44,50,51,52,53,54,55,8,7,71,72,73,74,74,2,2,3,4,79,12,13,15,16,21,28,28,31,31,34,41,41,42,42,43,43,44,44,50,50,51,51,52,52,53,53,54,54,55,8,7,71,72,73,2,3,4,12,13,15,16,21,28,31,34,41,42,43,44,50,51,52,53,54,55,8,7,31,33,71,72,73,74,2,3,4,77,79,12,13,15,16,17,18,21,26,28,30,31,84,34,37,39,41,42,43,44,48,50,51,52,53,54,55,87,8,7,61,62,88,89,65,64,74,34,87,7,81,28,31,41,42,43,31,31,28,31,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,3,4,12,13,15,16,21,28,31,34,41,42,43,44,50,51,52,53,54,55,8,7,44,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,28,41,42,43,74,74,11,83,11,11,83,83,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,3,4,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,87,87,68,68,68,68,70,70,70,70,70],"f":[null,null,null,[[],["iter",3]],[[["c_int",6]],["card",3]],[[["cstr",3]],[["result",6],["card",3]]],[[],[["string",3],["result",6]]],[[],[["string",3],["result",6]]],[[],["c_int",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["str",15]],[["hctl",3],["result",6]]],[[["bool",15],["cstr",3]],[["hctl",3],["result",6]]],[[],["result",6]],[[],["elemiter",3]],[[["elemid",3]],[["option",4],["elem",3]]],[[["u32",15],["option",4]],[["bool",15],["result",6]]],null,null,[[],[["elemid",3],["result",6]]],[[],[["result",6],["eleminfo",3]]],[[],[["result",6],["elemvalue",3]]],[[["elemvalue",3]],[["bool",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6],["info",3]]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],["direction",4]],null,[[["direction",4],["bool",15],["str",15]],[["pcm",3],["result",6]]],[[["direction",4],["bool",15],["cstr",3]],[["pcm",3],["result",6]]],[[],["result",6]],[[],["result",6]],[[["bool",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["bool",15],["c_int",6]],["result",6]],[[["bool",15],["error",3]],["result",6]],[[["u32",15],["option",4]],[["bool",15],["result",6]]],[[],["state",4]],[[["isize",15]],["frames",6]],[[["frames",6]],["isize",15]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[],["result",6]],[[],[["frames",6],["result",6]]],[[],[["status",3],["result",6]]],[[],[["result",6],["io",3]]],[[],[["result",6],["io",3]]],[[],[["io",3],["result",6]]],[[],[["result",6],["io",3]]],[[],[["result",6],["io",3]]],[[],[["io",3],["result",6]]],[[],[["io",3],["result",6]]],[[],[["result",6],["io",3]]],[[],[["result",6],["io",3]]],[[],[["io",3],["u8",15]]],[[],[["io",3],["u8",15]]],[[],[["result",6],["mmapcapture",6]]],[[],[["mmapplayback",6],["result",6]]],[[["hwparams",3]],["result",6]],[[],[["hwparams",3],["result",6]]],[[["swparams",3]],["result",6]],[[],[["swparams",3],["result",6]]],[[],["result",6]],[[],[["result",6],["info",3]]],[[["output",3]],["result",6]],[[["output",3]],["result",6]],[[["output",3]],["result",6]],[[],["chmapsquery",3]],[[["chmap",3]],["result",6]],[[],[["result",6],["chmap",3]]],[[["pcm",3]],["result",6]],[[],["result",6]],null,[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[["usize",15],["fnonce",8]],[["usize",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],[[],["format",4]],null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],null,[[["pcm",3]],[["hwparams",3],["result",6]]],[[],[["bool",15],["result",6]]],[[["bool",15]],["result",6]],[[["u32",15]],[["u32",15],["result",6]]],[[["u32",15]],["result",6]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],[[["u32",15]],["result",6]],[[["u32",15],["valueor",4]],[["u32",15],["result",6]]],[[["u32",15],["valueor",4]],["result",6]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],[[["u32",15]],["result",6]],[[["format",4]],["result",6]],[[],[["format",4],["result",6]]],[[["format",4]],["result",6]],[[["access",4]],["result",6]],[[],[["access",4],["result",6]]],[[["frames",6],["valueor",4]],[["frames",6],["result",6]]],[[["frames",6],["valueor",4]],["result",6]],[[["u32",15],["valueor",4]],[["u32",15],["result",6]]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[["u32",15],["valueor",4]],["result",6]],[[],[["u32",15],["result",6]]],[[["frames",6]],[["frames",6],["result",6]]],[[["frames",6]],[["frames",6],["result",6]]],[[["frames",6]],[["frames",6],["result",6]]],[[["frames",6]],["result",6]],[[["u32",15],["valueor",4]],[["u32",15],["result",6]]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[],[["u32",15],["result",6]]],[[],["bool",15]],[[],["bool",15]],[[["audiotstamptype",4]],["bool",15]],[[["output",3]],["result",6]],[[["hwparams",3]]],null,[[["frames",6]],["result",6]],[[],[["frames",6],["result",6]]],[[],[["frames",6],["result",6]]],[[["frames",6]],["result",6]],[[],[["frames",6],["result",6]]],[[["frames",6]],["result",6]],[[],[["frames",6],["result",6]]],[[["bool",15]],["result",6]],[[],[["bool",15],["result",6]]],[[["tstamptype",4]],["result",6]],[[],[["result",6],["tstamptype",4]]],[[["output",3]],["result",6]],null,[[],["timespec",3]],[[],["timespec",3]],[[],["timespec",3]],[[],["state",4]],[[],["frames",6]],[[],["frames",6]],[[],["frames",6]],[[],["frames",6]],[[["output",3]],["result",6]],null,[[]],[[["bool",15],["audiotstamptype",4]]],[[["pcm",3]],[["status",3],["result",6]]],null,null,null,null,null,null,null,[[]],null,null,null,[[],["i32",15]],[[],["i32",15]],[[],["direction",4]],[[],[["string",3],["result",6]]],[[],[["string",3],["result",6]]],[[["ctl",3]],["iter",3]],null,[[["direction",4],["bool",15],["str",15]],["result",6]],[[["direction",4],["bool",15],["cstr",3]],[["result",6],["rawmidi",3]]],[[],[["info",3],["result",6]]],[[],["result",6]],[[],["result",6]],[[],[["string",3],["result",6]]],[[],["io",3]],null,null,null,[[["cstr",3],["card",3],["option",4]],[["hintiter",3],["result",6]]],[[["str",15],["card",3],["option",4]],[["hintiter",3],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["flags",3]],[[],["flags",3]],[[],["c_short",6]],[[["c_short",6]],[["option",4],["flags",3]]],[[["c_short",6]],["flags",3]],[[["c_short",6]],["flags",3]],[[],["bool",15]],[[],["bool",15]],[[["flags",3]],["bool",15]],[[["flags",3]],["bool",15]],[[["flags",3]]],[[["flags",3]]],[[["flags",3]]],[[["bool",15],["flags",3]]],null,[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["result",6],["flags",3]]],[[],[["vec",3],["result",6]]],[[["i32",15]],[["usize",15],["result",6]]],[[["i32",15]],[["vec",3],["result",6]]],null,null,[[["bool",15],["str",15]],[["result",6],["mixer",3]]],[[["selemid",3]],[["option",4],["selem",3]]],[[["bool",15]],[["result",6],["mixer",3]]],[[["cstr",3]],["result",6]],[[],["result",6]],[[],["iter",3]],[[],[["u32",15],["result",6]]],[[["u32",15],["option",4]],[["bool",15],["result",6]]],null,null,[[],["f32",15]],[[["f32",15]]],null,null,null,[[["u32",15],["str",15]],["selemid",3]],[[],["selemid",3]],[[],[["result",6],["str",15]]],[[],["u32",15]],[[["cstr",3]]],[[["u32",15]]],null,[[["elem",3]],[["selem",3],["option",4]]],[[["mixer",3]],["result",6]],[[],["selemid",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["selemchannelid",4]],["bool",15]],[[["selemchannelid",4]],["bool",15]],[[["selemchannelid",4]],[["str",15],["result",6]]],[[["selemchannelid",4]],[["i64",15],["result",6]]],[[["selemchannelid",4]],[["result",6],["millibel",3]]],[[["i64",15]],[["result",6],["millibel",3]]],[[["selemchannelid",4]],[["i64",15],["result",6]]],[[["selemchannelid",4]],[["result",6],["millibel",3]]],[[["i64",15]],[["result",6],["millibel",3]]],[[["i64",15],["selemchannelid",4]],["result",6]],[[["i64",15]],["result",6]],[[["selemchannelid",4],["millibel",3],["round",4]],["result",6]],[[["selemchannelid",4],["millibel",3],["round",4]],["result",6]],[[["round",4],["millibel",3]],["result",6]],[[["round",4],["millibel",3]],["result",6]],[[["i64",15],["selemchannelid",4]],["result",6]],[[["selemchannelid",4],["i32",15]],["result",6]],[[["i32",15]],["result",6]],[[["selemchannelid",4],["i32",15]],["result",6]],[[["i32",15]],["result",6]],[[["selemchannelid",4]],[["result",6],["i32",15]]],[[["selemchannelid",4]],[["result",6],["i32",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["u32",15],["result",6]]],[[["u32",15]],[["string",3],["result",6]]],[[],[["iterenum",3],["result",6]]],[[["selemchannelid",4]],[["u32",15],["result",6]]],[[["u32",15],["selemchannelid",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["selemchannelid",4]],null,null,[[["direction",4],["option",4],["option",4],["cstr",3],["bool",15]],[["result",6],["seq",3]]],[[["cstr",3]],["result",6]],[[["i32",15]],["result",6]],[[["u32",15]],["result",6]],[[["u32",15]],["result",6]],[[["u32",15]],["result",6]],[[],[["result",6],["i32",15]]],[[],[["result",6],["i32",15]]],[[["i32",15]],[["result",6],["clientinfo",3]]],[[["addr",3]],[["result",6],["portinfo",3]]],[[["portinfo",3]],["result",6]],[[["porttype",3],["cstr",3],["portcap",3]],[["result",6],["i32",15]]],[[["portinfo",3],["i32",15]],["result",6]],[[["i32",15]],["result",6]],[[["portsubscribe",3]],["result",6]],[[["addr",3]],["result",6]],[[["eventtype",4],["event",3],["i32",15],["option",4]],["result",6]],[[["event",3]],[["u32",15],["result",6]]],[[["event",3]],[["u32",15],["result",6]]],[[["event",3]],[["u32",15],["result",6]]],[[["i32",15]],[["result",6],["queuetempo",3]]],[[["queuetempo",3],["i32",15]],["result",6]],[[["i32",15]],[["queuestatus",3],["result",6]]],[[["i32",15]],["result",6]],[[],[["result",6],["i32",15]]],[[["cstr",3]],[["result",6],["i32",15]]],[[],["result",6]],[[],["result",6]],[[],["input",3]],[[["removeevents",3]],["result",6]],null,[[],[["result",6],["event",3]]],[[["bool",15]],[["u32",15],["result",6]]],[[["u32",15]],["result",6]],[[],["result",6]],null,[[],["i32",15]],[[],[["result",6],["str",15]]],null,[[["seq",3]]],null,[[],["result",6]],[[],["i32",15]],[[],["i32",15]],[[],[["result",6],["str",15]]],[[["cstr",3]]],[[],["portcap",3]],[[],["porttype",3]],[[["portcap",3]]],[[["porttype",3]]],[[],["addr",3]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["i32",15]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["i32",15]]],null,[[["i32",15],["seq",3]]],null,null,null,null,null,null,null,null,null,[[],["portcap",3]],[[],["portcap",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["portcap",3]]],[[["u32",15]],["portcap",3]],[[["u32",15]],["portcap",3]],[[],["bool",15]],[[],["bool",15]],[[["portcap",3]],["bool",15]],[[["portcap",3]],["bool",15]],[[["portcap",3]]],[[["portcap",3]]],[[["portcap",3]]],[[["bool",15],["portcap",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["porttype",3]],[[],["porttype",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["porttype",3]]],[[["u32",15]],["porttype",3]],[[["u32",15]],["porttype",3]],[[],["bool",15]],[[],["bool",15]],[[["porttype",3]],["bool",15]],[[["porttype",3]],["bool",15]],[[["porttype",3]]],[[["porttype",3]]],[[["porttype",3]]],[[["bool",15],["porttype",3]]],null,null,null,null,null,null,null,null,null,null,null,[[],["remove",3]],[[],["remove",3]],[[],["u32",15]],[[["u32",15]],[["remove",3],["option",4]]],[[["u32",15]],["remove",3]],[[["u32",15]],["remove",3]],[[],["bool",15]],[[],["bool",15]],[[["remove",3]],["bool",15]],[[["remove",3]],["bool",15]],[[["remove",3]]],[[["remove",3]]],[[["remove",3]]],[[["remove",3],["bool",15]]],null,null,null,[[],["addr",3]],[[],["addr",3]],[[],["addr",3]],null,[[],["result",6]],[[],["addr",3]],[[],["addr",3]],[[],["i32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["addr",3]]],[[["addr",3]]],[[["i32",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],null,null,null,null,[[["addr",3],["querysubstype",4],["seq",3]]],null,[[["eventtype",4]],["event",3]],[[["eventtype",4],["into",8],["cow",4]],["event",3]],[[],["event",3]],[[],["eventtype",4]],[[],[["eventdata",8],["option",4]]],[[],["option",4]],[[]],[[["i32",15]]],[[["addr",3]]],[[["u8",15]]],[[["i32",15]]],[[],["addr",3]],[[],["addr",3]],[[],["u8",15]],[[],["i32",15]],[[["bool",15],["duration",3],["i32",15]]],[[["bool",15],["u32",15],["i32",15]]],[[]],[[],["bool",15]],[[],[["duration",3],["option",4]]],[[],[["u32",15],["option",4]]],[[],["bool",15]],[[["bool",15]]],null,[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["result",6]],[[],["i32",15]],[[],["u32",15]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["i32",15]]],[[["u32",15]]],[[["u32",15]]],null,[[],["result",6]],[[],["i32",15]],[[],["i32",15]],[[],["u32",15]],[[],["duration",3]],[[],["u32",15]],null,[[],["result",6]],[[],["remove",3]],[[],["i32",15]],[[],["duration",3]],[[],["addr",3]],[[],["i32",15]],[[],[["result",6],["eventtype",4]]],[[],["u8",15]],[[["remove",3]]],[[["i32",15]]],[[["duration",3]]],[[["addr",3]]],[[["i32",15]]],[[["eventtype",4]]],[[["u8",15]]],null,[[["u32",15]],[["midievent",3],["result",6]]],[[["u32",15]],["result",6]],[[["bool",15]]],[[]],[[]],[[]],[[["event",3]],[["usize",15],["result",6]]],[[],["result",6]],[[]],[[]],null,null,null,[[["option",4],["bool",15],["frames",6],["rawfd",6]],["result",6]],[[],["frames",6]],[[],["state",4]],[[],["timespec",3]],null,[[["pcm",3]],["result",6]],[[["rawfd",6]],["result",6]],[[],["state",4]],[[],["frames",6]],[[],["timespec",3]],[[],["timespec",3]],null,[[["pcm",3]],["result",6]],[[["rawfd",6]],["result",6]],[[],["frames",6]],[[["frames",6]]],[[],["frames",6]],[[["frames",6]]],null,null,[[["frames",6]],["frames",6]],null,null,null,null,null,null,null,null,null,[[],["isize",15]],[[]],[[],["status",3]],[[],["frames",6]],[[],["frames",6]],[[],["frames",6]],[[],["frames",6]],[[],["u32",15]],[[["frames",6]]],[[],["frames",6]],[[]],[[],["frames",6]],[[],["frames",6]],[[],["captureiter",3]],[[],["captureiter",3]],null,null,null,null,null,null,null,null,[[],["i32",15]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],["errno",4]],null,null,null,[[],["direction",4]],[[],["direction",4]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["pollfd",3]],["bool",15]],[[["pollfd",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["pollfd",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["error",4]],[[],["errno",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["errno",4]],["error",4]],[[["fromutf8error",3]],["error",4]],[[["errno",4]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["flags",3],["result",6]]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["flags",3],["result",6]]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["flags",3],["result",6]]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["flags",3],["result",6]]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["result",6],["flags",3]]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[],[["flags",3],["result",6]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["eventtype",4]],["bool",15]],[[["event",3]]],[[["event",3]]],[[["frames",6]],["frames",6]],[[["frames",6]],["frames",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["chmap",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],[["result",6],["option",4]]],[[],[["option",4],["elem",3]]],[[],[["option",4],["result",6]]],[[],[["hint",3],["option",4]]],[[],[["option",4],["elem",3]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["direction",4]],[[],["valueor",4]],[[],["round",4]],[[],["error",3]],[[],["card",3]],[[],["elemiface",4]],[[],["elemtype",4]],[[]],[[],["state",4]],[[],["format",4]],[[],["access",4]],[[],["tstamptype",4]],[[],["hwparams",3]],[[],["audiotstamptype",4]],[[],["hint",3]],[[],["flags",3]],[[],["millibel",3]],[[],["elem",3]],[[],["iter",3]],[[],["selemchannelid",4]],[[],["clientiter",3]],[[],["portiter",3]],[[],["portcap",3]],[[],["porttype",3]],[[],["remove",3]],[[],["addr",3]],[[],["querysubstype",4]],[[],["portsubscribeiter",3]],[[]],[[],["evnote",3]],[[],["evctrl",3]],[[],["connect",3]],[[],["evqueuecontrol",3]],[[],["evresult",3]],[[],["eventtype",4]],[[],["chmaptype",4]],[[],["chmapposition",4]],[[],["playback",3]],[[],["capture",3]],[[],["rawsamples",3]],[[],["addr",3]],[[],["evnote",3]],[[],["evctrl",3]],[[],["connect",3]],[[],["evqueuecontrol",3]],[[],["evresult",3]],[[["direction",4]],["ordering",4]],[[["valueor",4]],["ordering",4]],[[["round",4]],["ordering",4]],[[["card",3]],["ordering",4]],[[["elemiface",4]],["ordering",4]],[[["elemtype",4]],["ordering",4]],[[["state",4]],["ordering",4]],[[["format",4]],["ordering",4]],[[["access",4]],["ordering",4]],[[["tstamptype",4]],["ordering",4]],[[["audiotstamptype",4]],["ordering",4]],[[["flags",3]],["ordering",4]],[[["millibel",3]],["ordering",4]],[[["selemchannelid",4]],["ordering",4]],[[["portcap",3]],["ordering",4]],[[["porttype",3]],["ordering",4]],[[["remove",3]],["ordering",4]],[[["addr",3]],["ordering",4]],[[["evnote",3]],["ordering",4]],[[["evctrl",3]],["ordering",4]],[[["connect",3]],["ordering",4]],[[["evqueuecontrol",3]],["ordering",4]],[[["evresult",3]],["ordering",4]],[[["eventtype",4]],["ordering",4]],[[["chmaptype",4]],["ordering",4]],[[["chmapposition",4]],["ordering",4]],[[["direction",4]],["bool",15]],[[["valueor",4]],["bool",15]],[[["round",4]],["bool",15]],[[["error",3]],["bool",15]],[[["error",3]],["bool",15]],[[["card",3]],["bool",15]],[[["card",3]],["bool",15]],[[["elemiface",4]],["bool",15]],[[["elemtype",4]],["bool",15]],[[["elemid",3]],["bool",15]],[[["state",4]],["bool",15]],[[["format",4]],["bool",15]],[[["access",4]],["bool",15]],[[["tstamptype",4]],["bool",15]],[[["audiotstamptype",4]],["bool",15]],[[["flags",3]],["bool",15]],[[["flags",3]],["bool",15]],[[["millibel",3]],["bool",15]],[[["millibel",3]],["bool",15]],[[["selemchannelid",4]],["bool",15]],[[["portcap",3]],["bool",15]],[[["portcap",3]],["bool",15]],[[["porttype",3]],["bool",15]],[[["porttype",3]],["bool",15]],[[["remove",3]],["bool",15]],[[["remove",3]],["bool",15]],[[["addr",3]],["bool",15]],[[["addr",3]],["bool",15]],[[["evnote",3]],["bool",15]],[[["evnote",3]],["bool",15]],[[["evctrl",3]],["bool",15]],[[["evctrl",3]],["bool",15]],[[["connect",3]],["bool",15]],[[["connect",3]],["bool",15]],[[["evqueuecontrol",3]],["bool",15]],[[["evqueuecontrol",3]],["bool",15]],[[["evresult",3]],["bool",15]],[[["evresult",3]],["bool",15]],[[["eventtype",4]],["bool",15]],[[["chmaptype",4]],["bool",15]],[[["chmapposition",4]],["bool",15]],[[["direction",4]],[["ordering",4],["option",4]]],[[["valueor",4]],[["ordering",4],["option",4]]],[[["round",4]],[["ordering",4],["option",4]]],[[["card",3]],[["ordering",4],["option",4]]],[[["elemiface",4]],[["ordering",4],["option",4]]],[[["elemtype",4]],[["ordering",4],["option",4]]],[[["state",4]],[["ordering",4],["option",4]]],[[["format",4]],[["ordering",4],["option",4]]],[[["access",4]],[["ordering",4],["option",4]]],[[["tstamptype",4]],[["ordering",4],["option",4]]],[[["audiotstamptype",4]],[["ordering",4],["option",4]]],[[["flags",3]],[["ordering",4],["option",4]]],[[["millibel",3]],[["ordering",4],["option",4]]],[[["selemchannelid",4]],[["ordering",4],["option",4]]],[[["portcap",3]],[["ordering",4],["option",4]]],[[["porttype",3]],[["ordering",4],["option",4]]],[[["remove",3]],[["ordering",4],["option",4]]],[[["addr",3]],[["ordering",4],["option",4]]],[[["evnote",3]],[["ordering",4],["option",4]]],[[["evctrl",3]],[["ordering",4],["option",4]]],[[["connect",3]],[["ordering",4],["option",4]]],[[["evqueuecontrol",3]],[["ordering",4],["option",4]]],[[["evresult",3]],[["ordering",4],["option",4]]],[[["eventtype",4]],[["ordering",4],["option",4]]],[[["chmaptype",4]],[["ordering",4],["option",4]]],[[["chmapposition",4]],[["ordering",4],["option",4]]],[[],["i64",15]],[[],["elem",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["flags",3]],["flags",3]],[[]],[[["portcap",3]],["portcap",3]],[[["porttype",3]],["porttype",3]],[[["remove",3]],["remove",3]],[[]],[[]],[[["flags",3]]],[[]],[[["portcap",3]]],[[["porttype",3]]],[[["remove",3]]],[[],["flags",3]],[[],["portcap",3]],[[],["porttype",3]],[[],["remove",3]],[[["flags",3]],["flags",3]],[[["portcap",3]],["portcap",3]],[[["porttype",3]],["porttype",3]],[[["remove",3]],["remove",3]],[[["flags",3]],["flags",3]],[[["portcap",3]],["portcap",3]],[[["porttype",3]],["porttype",3]],[[["remove",3]],["remove",3]],[[["flags",3]],["flags",3]],[[["portcap",3]],["portcap",3]],[[["porttype",3]],["porttype",3]],[[["remove",3]],["remove",3]],[[["flags",3]]],[[["portcap",3]]],[[["porttype",3]]],[[["remove",3]]],[[["flags",3]]],[[["portcap",3]]],[[["porttype",3]]],[[["remove",3]]],[[["flags",3]]],[[["portcap",3]]],[[["porttype",3]]],[[["remove",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["intoiterator",8]],["flags",3]],[[["intoiterator",8]],["portcap",3]],[[["intoiterator",8]],["porttype",3]],[[["intoiterator",8]],["remove",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],[["stderror",8],["option",4]]],[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[["str",15],["c_int",6]],["error",3]],[[["str",15]],["error",3]],[[],["str",15]],[[],[["errno",4],["option",4]]],[[],["error",4]],[[["bool",15],["str",15]],["result",6]],[[["bool",15],["cstr",3]],[["result",6],["ctl",3]]],[[["bool",15],["card",3]],[["result",6],["ctl",3]]],[[],[["cardinfo",3],["result",6]]],[[["u32",15],["option",4]],[["bool",15],["result",6]]],[[["elemid",3]],["result",6]],[[["i64",15],["elemid",3]],[["result",6],["millibel",3]]],[[["round",4],["millibel",3],["elemid",3]],[["i64",15],["result",6]]],[[["bool",15]],["result",6]],[[],[["result",6],["option",4]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],[["result",6],["str",15]]],[[],["card",3]],[[]],[[]],[[["u32",15]],[["bool",15],["option",4]]],[[["u32",15],["bool",15]],["option",4]],[[["u32",15]],[["option",4],["i32",15]]],[[["u32",15],["i32",15]],["option",4]],[[["u32",15]],[["i64",15],["option",4]]],[[["u32",15],["i64",15]],["option",4]],[[["u32",15]],[["u32",15],["option",4]]],[[["u32",15]],["option",4]],[[["u32",15]],[["u8",15],["option",4]]],[[["u32",15],["u8",15]],["option",4]],[[],["option",4]],[[],["option",4]],[[["elemtype",4]],[["elemvalue",3],["result",6]]],[[],["elemtype",4]],[[],["u32",15]],[[],[["result",6],["str",15]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["elemiface",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["elemiface",4]]],[[["cstr",3]]],[[["elemiface",4]]],[[],[["result",6],["output",3]]],[[["fnonce",8]]],[[],[["option",4],["errno",4]]],[[["errno",4]],["error",4]],[[],["error",4]],[[],["error",4]],[[],["errno",4]],[[],["str",15]],[[["i32",15]],["errno",4]],[[]],[[],[["error",4],["result",4]]]],"p":[[3,"Iter"],[3,"Card"],[4,"ElemIface"],[4,"ElemType"],[3,"HCtl"],[3,"Elem"],[4,"ChmapPosition"],[4,"ChmapType"],[3,"Info"],[3,"PCM"],[3,"IO"],[4,"State"],[4,"Format"],[8,"IoFormat"],[4,"Access"],[4,"TstampType"],[3,"HwParams"],[3,"SwParams"],[3,"Status"],[3,"StatusBuilder"],[4,"AudioTstampType"],[3,"Info"],[3,"Iter"],[3,"Rawmidi"],[3,"HintIter"],[3,"Hint"],[3,"pollfd"],[3,"Flags"],[8,"Descriptors"],[3,"Mixer"],[3,"MilliBel"],[3,"SelemId"],[3,"Selem"],[4,"SelemChannelId"],[3,"Seq"],[3,"Input"],[3,"ClientInfo"],[3,"ClientIter"],[3,"PortInfo"],[3,"PortIter"],[3,"PortCap"],[3,"PortType"],[3,"Remove"],[3,"Addr"],[3,"PortSubscribe"],[4,"QuerySubsType"],[3,"PortSubscribeIter"],[3,"Event"],[8,"EventData"],[3,"EvNote"],[3,"EvCtrl"],[3,"Connect"],[3,"EvQueueControl"],[3,"EvResult"],[4,"EventType"],[3,"QueueTempo"],[3,"QueueStatus"],[3,"RemoveEvents"],[3,"MidiEvent"],[3,"SyncPtrStatus"],[3,"Status"],[3,"Control"],[8,"MmapDir"],[3,"RawSamples"],[3,"MmapIO"],[6,"MmapPlayback"],[6,"MmapCapture"],[4,"Error"],[8,"ErrnoSentinel"],[4,"Errno"],[4,"Direction"],[4,"ValueOr"],[4,"Round"],[3,"Error"],[3,"Ctl"],[3,"CardInfo"],[3,"ElemValue"],[3,"ElemInfo"],[3,"ElemId"],[3,"ElemIter"],[3,"Chmap"],[3,"ChmapsQuery"],[3,"IO"],[3,"Elem"],[3,"Iter"],[3,"IterEnum"],[3,"Output"],[3,"Playback"],[3,"Capture"],[3,"CaptureIter"]]},\
"alsa_sys":{"doc":"","tn":["snd_asoundlib_version","snd_dlpath","snd_dlopen","snd_dlsym","snd_dlclose","snd_async_add_handler","snd_async_del_handler","snd_async_handler_get_fd","snd_async_handler_get_signo","snd_async_handler_get_callback_private","snd_shm_area_create","snd_shm_area_share","snd_shm_area_destroy","snd_user_file","snd_input_stdio_open","snd_input_stdio_attach","snd_input_buffer_open","snd_input_close","snd_input_scanf","snd_input_gets","snd_input_getc","snd_input_ungetc","snd_output_stdio_open","snd_output_stdio_attach","snd_output_buffer_open","snd_output_buffer_string","snd_output_close","snd_output_printf","snd_output_vprintf","snd_output_puts","snd_output_putc","snd_output_flush","snd_strerror","snd_lib_error_set_handler","snd_lib_error_set_local","snd_config_topdir","snd_config_top","snd_config_load","snd_config_load_override","snd_config_save","snd_config_update","snd_config_update_r","snd_config_update_free","snd_config_update_free_global","snd_config_update_ref","snd_config_ref","snd_config_unref","snd_config_search","snd_config_searchv","snd_config_search_definition","snd_config_expand","snd_config_evaluate","snd_config_add","snd_config_add_before","snd_config_add_after","snd_config_remove","snd_config_delete","snd_config_delete_compound_members","snd_config_copy","snd_config_make","snd_config_make_integer","snd_config_make_integer64","snd_config_make_real","snd_config_make_string","snd_config_make_pointer","snd_config_make_compound","snd_config_imake_integer","snd_config_imake_integer64","snd_config_imake_real","snd_config_imake_string","snd_config_imake_safe_string","snd_config_imake_pointer","snd_config_get_type","snd_config_is_array","snd_config_set_id","snd_config_set_integer","snd_config_set_integer64","snd_config_set_real","snd_config_set_string","snd_config_set_ascii","snd_config_set_pointer","snd_config_get_id","snd_config_get_integer","snd_config_get_integer64","snd_config_get_real","snd_config_get_ireal","snd_config_get_string","snd_config_get_ascii","snd_config_get_pointer","snd_config_test_id","snd_config_iterator_first","snd_config_iterator_next","snd_config_iterator_end","snd_config_iterator_entry","snd_config_get_bool_ascii","snd_config_get_bool","snd_config_get_ctl_iface_ascii","snd_config_get_ctl_iface","snd_names_list","snd_names_list_free","snd_pcm_open","snd_pcm_open_lconf","snd_pcm_open_fallback","snd_pcm_close","snd_pcm_name","snd_pcm_type","snd_pcm_stream","snd_pcm_poll_descriptors_count","snd_pcm_poll_descriptors","snd_pcm_poll_descriptors_revents","snd_pcm_nonblock","snd_async_add_pcm_handler","snd_async_handler_get_pcm","snd_pcm_info","snd_pcm_hw_params_current","snd_pcm_hw_params","snd_pcm_hw_free","snd_pcm_sw_params_current","snd_pcm_sw_params","snd_pcm_prepare","snd_pcm_reset","snd_pcm_status","snd_pcm_start","snd_pcm_drop","snd_pcm_drain","snd_pcm_pause","snd_pcm_state","snd_pcm_hwsync","snd_pcm_delay","snd_pcm_resume","snd_pcm_htimestamp","snd_pcm_avail","snd_pcm_avail_update","snd_pcm_avail_delay","snd_pcm_rewindable","snd_pcm_rewind","snd_pcm_forwardable","snd_pcm_forward","snd_pcm_writei","snd_pcm_readi","snd_pcm_writen","snd_pcm_readn","snd_pcm_wait","snd_pcm_link","snd_pcm_unlink","snd_pcm_query_chmaps","snd_pcm_query_chmaps_from_hw","snd_pcm_free_chmaps","snd_pcm_get_chmap","snd_pcm_set_chmap","snd_pcm_chmap_type_name","snd_pcm_chmap_name","snd_pcm_chmap_long_name","snd_pcm_chmap_print","snd_pcm_chmap_from_string","snd_pcm_chmap_parse_string","snd_pcm_recover","snd_pcm_set_params","snd_pcm_get_params","snd_pcm_info_sizeof","snd_pcm_info_malloc","snd_pcm_info_free","snd_pcm_info_copy","snd_pcm_info_get_device","snd_pcm_info_get_subdevice","snd_pcm_info_get_stream","snd_pcm_info_get_card","snd_pcm_info_get_id","snd_pcm_info_get_name","snd_pcm_info_get_subdevice_name","snd_pcm_info_get_class","snd_pcm_info_get_subclass","snd_pcm_info_get_subdevices_count","snd_pcm_info_get_subdevices_avail","snd_pcm_info_get_sync","snd_pcm_info_set_device","snd_pcm_info_set_subdevice","snd_pcm_info_set_stream","snd_pcm_hw_params_any","snd_pcm_hw_params_can_mmap_sample_resolution","snd_pcm_hw_params_is_double","snd_pcm_hw_params_is_batch","snd_pcm_hw_params_is_block_transfer","snd_pcm_hw_params_is_monotonic","snd_pcm_hw_params_can_overrange","snd_pcm_hw_params_can_pause","snd_pcm_hw_params_can_resume","snd_pcm_hw_params_is_half_duplex","snd_pcm_hw_params_is_joint_duplex","snd_pcm_hw_params_can_sync_start","snd_pcm_hw_params_can_disable_period_wakeup","snd_pcm_hw_params_supports_audio_wallclock_ts","snd_pcm_hw_params_supports_audio_ts_type","snd_pcm_hw_params_get_rate_numden","snd_pcm_hw_params_get_sbits","snd_pcm_hw_params_get_fifo_size","snd_pcm_hw_params_sizeof","snd_pcm_hw_params_malloc","snd_pcm_hw_params_free","snd_pcm_hw_params_copy","snd_pcm_hw_params_get_access","snd_pcm_hw_params_test_access","snd_pcm_hw_params_set_access","snd_pcm_hw_params_set_access_first","snd_pcm_hw_params_set_access_last","snd_pcm_hw_params_set_access_mask","snd_pcm_hw_params_get_access_mask","snd_pcm_hw_params_get_format","snd_pcm_hw_params_test_format","snd_pcm_hw_params_set_format","snd_pcm_hw_params_set_format_first","snd_pcm_hw_params_set_format_last","snd_pcm_hw_params_set_format_mask","snd_pcm_hw_params_get_format_mask","snd_pcm_hw_params_get_subformat","snd_pcm_hw_params_test_subformat","snd_pcm_hw_params_set_subformat","snd_pcm_hw_params_set_subformat_first","snd_pcm_hw_params_set_subformat_last","snd_pcm_hw_params_set_subformat_mask","snd_pcm_hw_params_get_subformat_mask","snd_pcm_hw_params_get_channels","snd_pcm_hw_params_get_channels_min","snd_pcm_hw_params_get_channels_max","snd_pcm_hw_params_test_channels","snd_pcm_hw_params_set_channels","snd_pcm_hw_params_set_channels_min","snd_pcm_hw_params_set_channels_max","snd_pcm_hw_params_set_channels_minmax","snd_pcm_hw_params_set_channels_near","snd_pcm_hw_params_set_channels_first","snd_pcm_hw_params_set_channels_last","snd_pcm_hw_params_get_rate","snd_pcm_hw_params_get_rate_min","snd_pcm_hw_params_get_rate_max","snd_pcm_hw_params_test_rate","snd_pcm_hw_params_set_rate","snd_pcm_hw_params_set_rate_min","snd_pcm_hw_params_set_rate_max","snd_pcm_hw_params_set_rate_minmax","snd_pcm_hw_params_set_rate_near","snd_pcm_hw_params_set_rate_first","snd_pcm_hw_params_set_rate_last","snd_pcm_hw_params_set_rate_resample","snd_pcm_hw_params_get_rate_resample","snd_pcm_hw_params_set_export_buffer","snd_pcm_hw_params_get_export_buffer","snd_pcm_hw_params_set_period_wakeup","snd_pcm_hw_params_get_period_wakeup","snd_pcm_hw_params_get_period_time","snd_pcm_hw_params_get_period_time_min","snd_pcm_hw_params_get_period_time_max","snd_pcm_hw_params_test_period_time","snd_pcm_hw_params_set_period_time","snd_pcm_hw_params_set_period_time_min","snd_pcm_hw_params_set_period_time_max","snd_pcm_hw_params_set_period_time_minmax","snd_pcm_hw_params_set_period_time_near","snd_pcm_hw_params_set_period_time_first","snd_pcm_hw_params_set_period_time_last","snd_pcm_hw_params_get_period_size","snd_pcm_hw_params_get_period_size_min","snd_pcm_hw_params_get_period_size_max","snd_pcm_hw_params_test_period_size","snd_pcm_hw_params_set_period_size","snd_pcm_hw_params_set_period_size_min","snd_pcm_hw_params_set_period_size_max","snd_pcm_hw_params_set_period_size_minmax","snd_pcm_hw_params_set_period_size_near","snd_pcm_hw_params_set_period_size_first","snd_pcm_hw_params_set_period_size_last","snd_pcm_hw_params_set_period_size_integer","snd_pcm_hw_params_get_periods","snd_pcm_hw_params_get_periods_min","snd_pcm_hw_params_get_periods_max","snd_pcm_hw_params_test_periods","snd_pcm_hw_params_set_periods","snd_pcm_hw_params_set_periods_min","snd_pcm_hw_params_set_periods_max","snd_pcm_hw_params_set_periods_minmax","snd_pcm_hw_params_set_periods_near","snd_pcm_hw_params_set_periods_first","snd_pcm_hw_params_set_periods_last","snd_pcm_hw_params_set_periods_integer","snd_pcm_hw_params_get_buffer_time","snd_pcm_hw_params_get_buffer_time_min","snd_pcm_hw_params_get_buffer_time_max","snd_pcm_hw_params_test_buffer_time","snd_pcm_hw_params_set_buffer_time","snd_pcm_hw_params_set_buffer_time_min","snd_pcm_hw_params_set_buffer_time_max","snd_pcm_hw_params_set_buffer_time_minmax","snd_pcm_hw_params_set_buffer_time_near","snd_pcm_hw_params_set_buffer_time_first","snd_pcm_hw_params_set_buffer_time_last","snd_pcm_hw_params_get_buffer_size","snd_pcm_hw_params_get_buffer_size_min","snd_pcm_hw_params_get_buffer_size_max","snd_pcm_hw_params_test_buffer_size","snd_pcm_hw_params_set_buffer_size","snd_pcm_hw_params_set_buffer_size_min","snd_pcm_hw_params_set_buffer_size_max","snd_pcm_hw_params_set_buffer_size_minmax","snd_pcm_hw_params_set_buffer_size_near","snd_pcm_hw_params_set_buffer_size_first","snd_pcm_hw_params_set_buffer_size_last","snd_pcm_hw_params_get_min_align","snd_pcm_sw_params_sizeof","snd_pcm_sw_params_malloc","snd_pcm_sw_params_free","snd_pcm_sw_params_copy","snd_pcm_sw_params_get_boundary","snd_pcm_sw_params_set_tstamp_mode","snd_pcm_sw_params_get_tstamp_mode","snd_pcm_sw_params_set_tstamp_type","snd_pcm_sw_params_get_tstamp_type","snd_pcm_sw_params_set_avail_min","snd_pcm_sw_params_get_avail_min","snd_pcm_sw_params_set_period_event","snd_pcm_sw_params_get_period_event","snd_pcm_sw_params_set_start_threshold","snd_pcm_sw_params_get_start_threshold","snd_pcm_sw_params_set_stop_threshold","snd_pcm_sw_params_get_stop_threshold","snd_pcm_sw_params_set_silence_threshold","snd_pcm_sw_params_get_silence_threshold","snd_pcm_sw_params_set_silence_size","snd_pcm_sw_params_get_silence_size","snd_pcm_access_mask_sizeof","snd_pcm_access_mask_malloc","snd_pcm_access_mask_free","snd_pcm_access_mask_copy","snd_pcm_access_mask_none","snd_pcm_access_mask_any","snd_pcm_access_mask_test","snd_pcm_access_mask_empty","snd_pcm_access_mask_set","snd_pcm_access_mask_reset","snd_pcm_format_mask_sizeof","snd_pcm_format_mask_malloc","snd_pcm_format_mask_free","snd_pcm_format_mask_copy","snd_pcm_format_mask_none","snd_pcm_format_mask_any","snd_pcm_format_mask_test","snd_pcm_format_mask_empty","snd_pcm_format_mask_set","snd_pcm_format_mask_reset","snd_pcm_subformat_mask_sizeof","snd_pcm_subformat_mask_malloc","snd_pcm_subformat_mask_free","snd_pcm_subformat_mask_copy","snd_pcm_subformat_mask_none","snd_pcm_subformat_mask_any","snd_pcm_subformat_mask_test","snd_pcm_subformat_mask_empty","snd_pcm_subformat_mask_set","snd_pcm_subformat_mask_reset","snd_pcm_status_sizeof","snd_pcm_status_malloc","snd_pcm_status_free","snd_pcm_status_copy","snd_pcm_status_get_state","snd_pcm_status_get_trigger_tstamp","snd_pcm_status_get_trigger_htstamp","snd_pcm_status_get_tstamp","snd_pcm_status_get_htstamp","snd_pcm_status_get_audio_htstamp","snd_pcm_status_get_driver_htstamp","snd_pcm_status_get_audio_htstamp_report","snd_pcm_status_set_audio_htstamp_config","snd_pcm_status_get_delay","snd_pcm_status_get_avail","snd_pcm_status_get_avail_max","snd_pcm_status_get_overrange","snd_pcm_type_name","snd_pcm_stream_name","snd_pcm_access_name","snd_pcm_format_name","snd_pcm_format_description","snd_pcm_subformat_name","snd_pcm_subformat_description","snd_pcm_format_value","snd_pcm_tstamp_mode_name","snd_pcm_state_name","snd_pcm_dump","snd_pcm_dump_hw_setup","snd_pcm_dump_sw_setup","snd_pcm_dump_setup","snd_pcm_hw_params_dump","snd_pcm_sw_params_dump","snd_pcm_status_dump","snd_pcm_mmap_begin","snd_pcm_mmap_commit","snd_pcm_mmap_writei","snd_pcm_mmap_readi","snd_pcm_mmap_writen","snd_pcm_mmap_readn","snd_pcm_format_signed","snd_pcm_format_unsigned","snd_pcm_format_linear","snd_pcm_format_float","snd_pcm_format_little_endian","snd_pcm_format_big_endian","snd_pcm_format_cpu_endian","snd_pcm_format_width","snd_pcm_format_physical_width","snd_pcm_build_linear_format","snd_pcm_format_size","snd_pcm_format_silence","snd_pcm_format_silence_16","snd_pcm_format_silence_32","snd_pcm_format_silence_64","snd_pcm_format_set_silence","snd_pcm_bytes_to_frames","snd_pcm_frames_to_bytes","snd_pcm_bytes_to_samples","snd_pcm_samples_to_bytes","snd_pcm_area_silence","snd_pcm_areas_silence","snd_pcm_area_copy","snd_pcm_areas_copy","snd_pcm_areas_copy_wrap","snd_pcm_hook_get_pcm","snd_pcm_hook_get_private","snd_pcm_hook_set_private","snd_pcm_hook_add","snd_pcm_hook_remove","snd_pcm_meter_get_bufsize","snd_pcm_meter_get_channels","snd_pcm_meter_get_rate","snd_pcm_meter_get_now","snd_pcm_meter_get_boundary","snd_pcm_meter_add_scope","snd_pcm_meter_search_scope","snd_pcm_scope_malloc","snd_pcm_scope_set_ops","snd_pcm_scope_set_name","snd_pcm_scope_get_name","snd_pcm_scope_get_callback_private","snd_pcm_scope_set_callback_private","snd_pcm_scope_s16_open","snd_pcm_scope_s16_get_channel_buffer","snd_spcm_init","snd_spcm_init_duplex","snd_spcm_init_get_params","snd_pcm_start_mode_name","snd_pcm_xrun_mode_name","snd_pcm_sw_params_set_start_mode","snd_pcm_sw_params_get_start_mode","snd_pcm_sw_params_set_xrun_mode","snd_pcm_sw_params_get_xrun_mode","snd_pcm_sw_params_set_xfer_align","snd_pcm_sw_params_get_xfer_align","snd_pcm_sw_params_set_sleep_min","snd_pcm_sw_params_get_sleep_min","snd_pcm_hw_params_get_tick_time","snd_pcm_hw_params_get_tick_time_min","snd_pcm_hw_params_get_tick_time_max","snd_pcm_hw_params_test_tick_time","snd_pcm_hw_params_set_tick_time","snd_pcm_hw_params_set_tick_time_min","snd_pcm_hw_params_set_tick_time_max","snd_pcm_hw_params_set_tick_time_minmax","snd_pcm_hw_params_set_tick_time_near","snd_pcm_hw_params_set_tick_time_first","snd_pcm_hw_params_set_tick_time_last","snd_rawmidi_open","snd_rawmidi_open_lconf","snd_rawmidi_close","snd_rawmidi_poll_descriptors_count","snd_rawmidi_poll_descriptors","snd_rawmidi_poll_descriptors_revents","snd_rawmidi_nonblock","snd_rawmidi_info_sizeof","snd_rawmidi_info_malloc","snd_rawmidi_info_free","snd_rawmidi_info_copy","snd_rawmidi_info_get_device","snd_rawmidi_info_get_subdevice","snd_rawmidi_info_get_stream","snd_rawmidi_info_get_card","snd_rawmidi_info_get_flags","snd_rawmidi_info_get_id","snd_rawmidi_info_get_name","snd_rawmidi_info_get_subdevice_name","snd_rawmidi_info_get_subdevices_count","snd_rawmidi_info_get_subdevices_avail","snd_rawmidi_info_set_device","snd_rawmidi_info_set_subdevice","snd_rawmidi_info_set_stream","snd_rawmidi_info","snd_rawmidi_params_sizeof","snd_rawmidi_params_malloc","snd_rawmidi_params_free","snd_rawmidi_params_copy","snd_rawmidi_params_set_buffer_size","snd_rawmidi_params_get_buffer_size","snd_rawmidi_params_set_avail_min","snd_rawmidi_params_get_avail_min","snd_rawmidi_params_set_no_active_sensing","snd_rawmidi_params_get_no_active_sensing","snd_rawmidi_params","snd_rawmidi_params_current","snd_rawmidi_status_sizeof","snd_rawmidi_status_malloc","snd_rawmidi_status_free","snd_rawmidi_status_copy","snd_rawmidi_status_get_tstamp","snd_rawmidi_status_get_avail","snd_rawmidi_status_get_xruns","snd_rawmidi_status","snd_rawmidi_drain","snd_rawmidi_drop","snd_rawmidi_write","snd_rawmidi_read","snd_rawmidi_name","snd_rawmidi_type","snd_rawmidi_stream","snd_timer_query_open","snd_timer_query_open_lconf","snd_timer_query_close","snd_timer_query_next_device","snd_timer_query_info","snd_timer_query_params","snd_timer_query_status","snd_timer_open","snd_timer_open_lconf","snd_timer_close","snd_async_add_timer_handler","snd_async_handler_get_timer","snd_timer_poll_descriptors_count","snd_timer_poll_descriptors","snd_timer_poll_descriptors_revents","snd_timer_info","snd_timer_params","snd_timer_status","snd_timer_start","snd_timer_stop","snd_timer_continue","snd_timer_read","snd_timer_id_sizeof","snd_timer_id_malloc","snd_timer_id_free","snd_timer_id_copy","snd_timer_id_set_class","snd_timer_id_get_class","snd_timer_id_set_sclass","snd_timer_id_get_sclass","snd_timer_id_set_card","snd_timer_id_get_card","snd_timer_id_set_device","snd_timer_id_get_device","snd_timer_id_set_subdevice","snd_timer_id_get_subdevice","snd_timer_ginfo_sizeof","snd_timer_ginfo_malloc","snd_timer_ginfo_free","snd_timer_ginfo_copy","snd_timer_ginfo_set_tid","snd_timer_ginfo_get_tid","snd_timer_ginfo_get_flags","snd_timer_ginfo_get_card","snd_timer_ginfo_get_id","snd_timer_ginfo_get_name","snd_timer_ginfo_get_resolution","snd_timer_ginfo_get_resolution_min","snd_timer_ginfo_get_resolution_max","snd_timer_ginfo_get_clients","snd_timer_info_sizeof","snd_timer_info_malloc","snd_timer_info_free","snd_timer_info_copy","snd_timer_info_is_slave","snd_timer_info_get_card","snd_timer_info_get_id","snd_timer_info_get_name","snd_timer_info_get_resolution","snd_timer_params_sizeof","snd_timer_params_malloc","snd_timer_params_free","snd_timer_params_copy","snd_timer_params_set_auto_start","snd_timer_params_get_auto_start","snd_timer_params_set_exclusive","snd_timer_params_get_exclusive","snd_timer_params_set_early_event","snd_timer_params_get_early_event","snd_timer_params_set_ticks","snd_timer_params_get_ticks","snd_timer_params_set_queue_size","snd_timer_params_get_queue_size","snd_timer_params_set_filter","snd_timer_params_get_filter","snd_timer_status_sizeof","snd_timer_status_malloc","snd_timer_status_free","snd_timer_status_copy","snd_timer_status_get_timestamp","snd_timer_status_get_resolution","snd_timer_status_get_lost","snd_timer_status_get_overrun","snd_timer_status_get_queue","snd_timer_info_get_ticks","snd_hwdep_open","snd_hwdep_close","snd_hwdep_poll_descriptors","snd_hwdep_poll_descriptors_count","snd_hwdep_poll_descriptors_revents","snd_hwdep_nonblock","snd_hwdep_info","snd_hwdep_dsp_status","snd_hwdep_dsp_load","snd_hwdep_ioctl","snd_hwdep_write","snd_hwdep_read","snd_hwdep_info_sizeof","snd_hwdep_info_malloc","snd_hwdep_info_free","snd_hwdep_info_copy","snd_hwdep_info_get_device","snd_hwdep_info_get_card","snd_hwdep_info_get_id","snd_hwdep_info_get_name","snd_hwdep_info_get_iface","snd_hwdep_info_set_device","snd_hwdep_dsp_status_sizeof","snd_hwdep_dsp_status_malloc","snd_hwdep_dsp_status_free","snd_hwdep_dsp_status_copy","snd_hwdep_dsp_status_get_version","snd_hwdep_dsp_status_get_id","snd_hwdep_dsp_status_get_num_dsps","snd_hwdep_dsp_status_get_dsp_loaded","snd_hwdep_dsp_status_get_chip_ready","snd_hwdep_dsp_image_sizeof","snd_hwdep_dsp_image_malloc","snd_hwdep_dsp_image_free","snd_hwdep_dsp_image_copy","snd_hwdep_dsp_image_get_index","snd_hwdep_dsp_image_get_name","snd_hwdep_dsp_image_get_image","snd_hwdep_dsp_image_get_length","snd_hwdep_dsp_image_set_index","snd_hwdep_dsp_image_set_name","snd_hwdep_dsp_image_set_image","snd_hwdep_dsp_image_set_length","snd_card_load","snd_card_next","snd_card_get_index","snd_card_get_name","snd_card_get_longname","snd_device_name_hint","snd_device_name_free_hint","snd_device_name_get_hint","snd_ctl_open","snd_ctl_open_lconf","snd_ctl_open_fallback","snd_ctl_close","snd_ctl_nonblock","snd_async_add_ctl_handler","snd_async_handler_get_ctl","snd_ctl_poll_descriptors_count","snd_ctl_poll_descriptors","snd_ctl_poll_descriptors_revents","snd_ctl_subscribe_events","snd_ctl_card_info","snd_ctl_elem_list","snd_ctl_elem_info","snd_ctl_elem_read","snd_ctl_elem_write","snd_ctl_elem_lock","snd_ctl_elem_unlock","snd_ctl_elem_tlv_read","snd_ctl_elem_tlv_write","snd_ctl_elem_tlv_command","snd_ctl_hwdep_next_device","snd_ctl_hwdep_info","snd_ctl_pcm_next_device","snd_ctl_pcm_info","snd_ctl_pcm_prefer_subdevice","snd_ctl_rawmidi_next_device","snd_ctl_rawmidi_info","snd_ctl_rawmidi_prefer_subdevice","snd_ctl_set_power_state","snd_ctl_get_power_state","snd_ctl_read","snd_ctl_wait","snd_ctl_name","snd_ctl_type","snd_ctl_elem_type_name","snd_ctl_elem_iface_name","snd_ctl_event_type_name","snd_ctl_event_elem_get_mask","snd_ctl_event_elem_get_numid","snd_ctl_event_elem_get_id","snd_ctl_event_elem_get_interface","snd_ctl_event_elem_get_device","snd_ctl_event_elem_get_subdevice","snd_ctl_event_elem_get_name","snd_ctl_event_elem_get_index","snd_ctl_elem_list_alloc_space","snd_ctl_elem_list_free_space","snd_ctl_ascii_elem_id_get","snd_ctl_ascii_elem_id_parse","snd_ctl_ascii_value_parse","snd_ctl_elem_id_sizeof","snd_ctl_elem_id_malloc","snd_ctl_elem_id_free","snd_ctl_elem_id_clear","snd_ctl_elem_id_copy","snd_ctl_elem_id_get_numid","snd_ctl_elem_id_get_interface","snd_ctl_elem_id_get_device","snd_ctl_elem_id_get_subdevice","snd_ctl_elem_id_get_name","snd_ctl_elem_id_get_index","snd_ctl_elem_id_set_numid","snd_ctl_elem_id_set_interface","snd_ctl_elem_id_set_device","snd_ctl_elem_id_set_subdevice","snd_ctl_elem_id_set_name","snd_ctl_elem_id_set_index","snd_ctl_card_info_sizeof","snd_ctl_card_info_malloc","snd_ctl_card_info_free","snd_ctl_card_info_clear","snd_ctl_card_info_copy","snd_ctl_card_info_get_card","snd_ctl_card_info_get_id","snd_ctl_card_info_get_driver","snd_ctl_card_info_get_name","snd_ctl_card_info_get_longname","snd_ctl_card_info_get_mixername","snd_ctl_card_info_get_components","snd_ctl_event_sizeof","snd_ctl_event_malloc","snd_ctl_event_free","snd_ctl_event_clear","snd_ctl_event_copy","snd_ctl_event_get_type","snd_ctl_elem_list_sizeof","snd_ctl_elem_list_malloc","snd_ctl_elem_list_free","snd_ctl_elem_list_clear","snd_ctl_elem_list_copy","snd_ctl_elem_list_set_offset","snd_ctl_elem_list_get_used","snd_ctl_elem_list_get_count","snd_ctl_elem_list_get_id","snd_ctl_elem_list_get_numid","snd_ctl_elem_list_get_interface","snd_ctl_elem_list_get_device","snd_ctl_elem_list_get_subdevice","snd_ctl_elem_list_get_name","snd_ctl_elem_list_get_index","snd_ctl_elem_info_sizeof","snd_ctl_elem_info_malloc","snd_ctl_elem_info_free","snd_ctl_elem_info_clear","snd_ctl_elem_info_copy","snd_ctl_elem_info_get_type","snd_ctl_elem_info_is_readable","snd_ctl_elem_info_is_writable","snd_ctl_elem_info_is_volatile","snd_ctl_elem_info_is_inactive","snd_ctl_elem_info_is_locked","snd_ctl_elem_info_is_tlv_readable","snd_ctl_elem_info_is_tlv_writable","snd_ctl_elem_info_is_tlv_commandable","snd_ctl_elem_info_is_owner","snd_ctl_elem_info_is_user","snd_ctl_elem_info_get_owner","snd_ctl_elem_info_get_count","snd_ctl_elem_info_get_min","snd_ctl_elem_info_get_max","snd_ctl_elem_info_get_step","snd_ctl_elem_info_get_min64","snd_ctl_elem_info_get_max64","snd_ctl_elem_info_get_step64","snd_ctl_elem_info_get_items","snd_ctl_elem_info_set_item","snd_ctl_elem_info_get_item_name","snd_ctl_elem_info_get_dimensions","snd_ctl_elem_info_get_dimension","snd_ctl_elem_info_set_dimension","snd_ctl_elem_info_get_id","snd_ctl_elem_info_get_numid","snd_ctl_elem_info_get_interface","snd_ctl_elem_info_get_device","snd_ctl_elem_info_get_subdevice","snd_ctl_elem_info_get_name","snd_ctl_elem_info_get_index","snd_ctl_elem_info_set_id","snd_ctl_elem_info_set_numid","snd_ctl_elem_info_set_interface","snd_ctl_elem_info_set_device","snd_ctl_elem_info_set_subdevice","snd_ctl_elem_info_set_name","snd_ctl_elem_info_set_index","snd_ctl_add_integer_elem_set","snd_ctl_add_integer64_elem_set","snd_ctl_add_boolean_elem_set","snd_ctl_add_enumerated_elem_set","snd_ctl_add_bytes_elem_set","snd_ctl_elem_add_integer","snd_ctl_elem_add_integer64","snd_ctl_elem_add_boolean","snd_ctl_elem_add_enumerated","snd_ctl_elem_add_iec958","snd_ctl_elem_remove","snd_ctl_elem_value_sizeof","snd_ctl_elem_value_malloc","snd_ctl_elem_value_free","snd_ctl_elem_value_clear","snd_ctl_elem_value_copy","snd_ctl_elem_value_compare","snd_ctl_elem_value_get_id","snd_ctl_elem_value_get_numid","snd_ctl_elem_value_get_interface","snd_ctl_elem_value_get_device","snd_ctl_elem_value_get_subdevice","snd_ctl_elem_value_get_name","snd_ctl_elem_value_get_index","snd_ctl_elem_value_set_id","snd_ctl_elem_value_set_numid","snd_ctl_elem_value_set_interface","snd_ctl_elem_value_set_device","snd_ctl_elem_value_set_subdevice","snd_ctl_elem_value_set_name","snd_ctl_elem_value_set_index","snd_ctl_elem_value_get_boolean","snd_ctl_elem_value_get_integer","snd_ctl_elem_value_get_integer64","snd_ctl_elem_value_get_enumerated","snd_ctl_elem_value_get_byte","snd_ctl_elem_value_set_boolean","snd_ctl_elem_value_set_integer","snd_ctl_elem_value_set_integer64","snd_ctl_elem_value_set_enumerated","snd_ctl_elem_value_set_byte","snd_ctl_elem_set_bytes","snd_ctl_elem_value_get_bytes","snd_ctl_elem_value_get_iec958","snd_ctl_elem_value_set_iec958","snd_tlv_parse_dB_info","snd_tlv_get_dB_range","snd_tlv_convert_to_dB","snd_tlv_convert_from_dB","snd_ctl_get_dB_range","snd_ctl_convert_to_dB","snd_ctl_convert_from_dB","snd_hctl_compare_fast","snd_hctl_open","snd_hctl_open_ctl","snd_hctl_close","snd_hctl_nonblock","snd_hctl_poll_descriptors_count","snd_hctl_poll_descriptors","snd_hctl_poll_descriptors_revents","snd_hctl_get_count","snd_hctl_set_compare","snd_hctl_first_elem","snd_hctl_last_elem","snd_hctl_find_elem","snd_hctl_set_callback","snd_hctl_set_callback_private","snd_hctl_get_callback_private","snd_hctl_load","snd_hctl_free","snd_hctl_handle_events","snd_hctl_name","snd_hctl_wait","snd_hctl_ctl","snd_hctl_elem_next","snd_hctl_elem_prev","snd_hctl_elem_info","snd_hctl_elem_read","snd_hctl_elem_write","snd_hctl_elem_tlv_read","snd_hctl_elem_tlv_write","snd_hctl_elem_tlv_command","snd_hctl_elem_get_hctl","snd_hctl_elem_get_id","snd_hctl_elem_get_numid","snd_hctl_elem_get_interface","snd_hctl_elem_get_device","snd_hctl_elem_get_subdevice","snd_hctl_elem_get_name","snd_hctl_elem_get_index","snd_hctl_elem_set_callback","snd_hctl_elem_get_callback_private","snd_hctl_elem_set_callback_private","snd_sctl_build","snd_sctl_free","snd_sctl_install","snd_sctl_remove","snd_mixer_open","snd_mixer_close","snd_mixer_first_elem","snd_mixer_last_elem","snd_mixer_handle_events","snd_mixer_attach","snd_mixer_attach_hctl","snd_mixer_detach","snd_mixer_detach_hctl","snd_mixer_get_hctl","snd_mixer_poll_descriptors_count","snd_mixer_poll_descriptors","snd_mixer_poll_descriptors_revents","snd_mixer_load","snd_mixer_free","snd_mixer_wait","snd_mixer_set_compare","snd_mixer_set_callback","snd_mixer_get_callback_private","snd_mixer_set_callback_private","snd_mixer_get_count","snd_mixer_class_unregister","snd_mixer_elem_next","snd_mixer_elem_prev","snd_mixer_elem_set_callback","snd_mixer_elem_get_callback_private","snd_mixer_elem_set_callback_private","snd_mixer_elem_get_type","snd_mixer_class_register","snd_mixer_elem_new","snd_mixer_elem_add","snd_mixer_elem_remove","snd_mixer_elem_free","snd_mixer_elem_info","snd_mixer_elem_value","snd_mixer_elem_attach","snd_mixer_elem_detach","snd_mixer_elem_empty","snd_mixer_elem_get_private","snd_mixer_class_sizeof","snd_mixer_class_malloc","snd_mixer_class_free","snd_mixer_class_copy","snd_mixer_class_get_mixer","snd_mixer_class_get_event","snd_mixer_class_get_private","snd_mixer_class_get_compare","snd_mixer_class_set_event","snd_mixer_class_set_private","snd_mixer_class_set_private_free","snd_mixer_class_set_compare","snd_mixer_selem_channel_name","snd_mixer_selem_register","snd_mixer_selem_get_id","snd_mixer_selem_get_name","snd_mixer_selem_get_index","snd_mixer_find_selem","snd_mixer_selem_is_active","snd_mixer_selem_is_playback_mono","snd_mixer_selem_has_playback_channel","snd_mixer_selem_is_capture_mono","snd_mixer_selem_has_capture_channel","snd_mixer_selem_get_capture_group","snd_mixer_selem_has_common_volume","snd_mixer_selem_has_playback_volume","snd_mixer_selem_has_playback_volume_joined","snd_mixer_selem_has_capture_volume","snd_mixer_selem_has_capture_volume_joined","snd_mixer_selem_has_common_switch","snd_mixer_selem_has_playback_switch","snd_mixer_selem_has_playback_switch_joined","snd_mixer_selem_has_capture_switch","snd_mixer_selem_has_capture_switch_joined","snd_mixer_selem_has_capture_switch_exclusive","snd_mixer_selem_ask_playback_vol_dB","snd_mixer_selem_ask_capture_vol_dB","snd_mixer_selem_ask_playback_dB_vol","snd_mixer_selem_ask_capture_dB_vol","snd_mixer_selem_get_playback_volume","snd_mixer_selem_get_capture_volume","snd_mixer_selem_get_playback_dB","snd_mixer_selem_get_capture_dB","snd_mixer_selem_get_playback_switch","snd_mixer_selem_get_capture_switch","snd_mixer_selem_set_playback_volume","snd_mixer_selem_set_capture_volume","snd_mixer_selem_set_playback_dB","snd_mixer_selem_set_capture_dB","snd_mixer_selem_set_playback_volume_all","snd_mixer_selem_set_capture_volume_all","snd_mixer_selem_set_playback_dB_all","snd_mixer_selem_set_capture_dB_all","snd_mixer_selem_set_playback_switch","snd_mixer_selem_set_capture_switch","snd_mixer_selem_set_playback_switch_all","snd_mixer_selem_set_capture_switch_all","snd_mixer_selem_get_playback_volume_range","snd_mixer_selem_get_playback_dB_range","snd_mixer_selem_set_playback_volume_range","snd_mixer_selem_get_capture_volume_range","snd_mixer_selem_get_capture_dB_range","snd_mixer_selem_set_capture_volume_range","snd_mixer_selem_is_enumerated","snd_mixer_selem_is_enum_playback","snd_mixer_selem_is_enum_capture","snd_mixer_selem_get_enum_items","snd_mixer_selem_get_enum_item_name","snd_mixer_selem_get_enum_item","snd_mixer_selem_set_enum_item","snd_mixer_selem_id_sizeof","snd_mixer_selem_id_malloc","snd_mixer_selem_id_free","snd_mixer_selem_id_copy","snd_mixer_selem_id_get_name","snd_mixer_selem_id_get_index","snd_mixer_selem_id_set_name","snd_mixer_selem_id_set_index","snd_mixer_selem_id_parse","snd_seq_open","snd_seq_open_lconf","snd_seq_name","snd_seq_type","snd_seq_close","snd_seq_poll_descriptors_count","snd_seq_poll_descriptors","snd_seq_poll_descriptors_revents","snd_seq_nonblock","snd_seq_client_id","snd_seq_get_output_buffer_size","snd_seq_get_input_buffer_size","snd_seq_set_output_buffer_size","snd_seq_set_input_buffer_size","snd_seq_system_info_sizeof","snd_seq_system_info_malloc","snd_seq_system_info_free","snd_seq_system_info_copy","snd_seq_system_info_get_queues","snd_seq_system_info_get_clients","snd_seq_system_info_get_ports","snd_seq_system_info_get_channels","snd_seq_system_info_get_cur_clients","snd_seq_system_info_get_cur_queues","snd_seq_system_info","snd_seq_client_info_sizeof","snd_seq_client_info_malloc","snd_seq_client_info_free","snd_seq_client_info_copy","snd_seq_client_info_get_client","snd_seq_client_info_get_type","snd_seq_client_info_get_name","snd_seq_client_info_get_broadcast_filter","snd_seq_client_info_get_error_bounce","snd_seq_client_info_get_card","snd_seq_client_info_get_pid","snd_seq_client_info_get_event_filter","snd_seq_client_info_get_num_ports","snd_seq_client_info_get_event_lost","snd_seq_client_info_set_client","snd_seq_client_info_set_name","snd_seq_client_info_set_broadcast_filter","snd_seq_client_info_set_error_bounce","snd_seq_client_info_set_event_filter","snd_seq_client_info_event_filter_clear","snd_seq_client_info_event_filter_add","snd_seq_client_info_event_filter_del","snd_seq_client_info_event_filter_check","snd_seq_get_client_info","snd_seq_get_any_client_info","snd_seq_set_client_info","snd_seq_query_next_client","snd_seq_client_pool_sizeof","snd_seq_client_pool_malloc","snd_seq_client_pool_free","snd_seq_client_pool_copy","snd_seq_client_pool_get_client","snd_seq_client_pool_get_output_pool","snd_seq_client_pool_get_input_pool","snd_seq_client_pool_get_output_room","snd_seq_client_pool_get_output_free","snd_seq_client_pool_get_input_free","snd_seq_client_pool_set_output_pool","snd_seq_client_pool_set_input_pool","snd_seq_client_pool_set_output_room","snd_seq_get_client_pool","snd_seq_set_client_pool","snd_seq_port_info_sizeof","snd_seq_port_info_malloc","snd_seq_port_info_free","snd_seq_port_info_copy","snd_seq_port_info_get_client","snd_seq_port_info_get_port","snd_seq_port_info_get_addr","snd_seq_port_info_get_name","snd_seq_port_info_get_capability","snd_seq_port_info_get_type","snd_seq_port_info_get_midi_channels","snd_seq_port_info_get_midi_voices","snd_seq_port_info_get_synth_voices","snd_seq_port_info_get_read_use","snd_seq_port_info_get_write_use","snd_seq_port_info_get_port_specified","snd_seq_port_info_get_timestamping","snd_seq_port_info_get_timestamp_real","snd_seq_port_info_get_timestamp_queue","snd_seq_port_info_set_client","snd_seq_port_info_set_port","snd_seq_port_info_set_addr","snd_seq_port_info_set_name","snd_seq_port_info_set_capability","snd_seq_port_info_set_type","snd_seq_port_info_set_midi_channels","snd_seq_port_info_set_midi_voices","snd_seq_port_info_set_synth_voices","snd_seq_port_info_set_port_specified","snd_seq_port_info_set_timestamping","snd_seq_port_info_set_timestamp_real","snd_seq_port_info_set_timestamp_queue","snd_seq_create_port","snd_seq_delete_port","snd_seq_get_port_info","snd_seq_get_any_port_info","snd_seq_set_port_info","snd_seq_query_next_port","snd_seq_port_subscribe_sizeof","snd_seq_port_subscribe_malloc","snd_seq_port_subscribe_free","snd_seq_port_subscribe_copy","snd_seq_port_subscribe_get_sender","snd_seq_port_subscribe_get_dest","snd_seq_port_subscribe_get_queue","snd_seq_port_subscribe_get_exclusive","snd_seq_port_subscribe_get_time_update","snd_seq_port_subscribe_get_time_real","snd_seq_port_subscribe_set_sender","snd_seq_port_subscribe_set_dest","snd_seq_port_subscribe_set_queue","snd_seq_port_subscribe_set_exclusive","snd_seq_port_subscribe_set_time_update","snd_seq_port_subscribe_set_time_real","snd_seq_get_port_subscription","snd_seq_subscribe_port","snd_seq_unsubscribe_port","snd_seq_query_subscribe_sizeof","snd_seq_query_subscribe_malloc","snd_seq_query_subscribe_free","snd_seq_query_subscribe_copy","snd_seq_query_subscribe_get_client","snd_seq_query_subscribe_get_port","snd_seq_query_subscribe_get_root","snd_seq_query_subscribe_get_type","snd_seq_query_subscribe_get_index","snd_seq_query_subscribe_get_num_subs","snd_seq_query_subscribe_get_addr","snd_seq_query_subscribe_get_queue","snd_seq_query_subscribe_get_exclusive","snd_seq_query_subscribe_get_time_update","snd_seq_query_subscribe_get_time_real","snd_seq_query_subscribe_set_client","snd_seq_query_subscribe_set_port","snd_seq_query_subscribe_set_root","snd_seq_query_subscribe_set_type","snd_seq_query_subscribe_set_index","snd_seq_query_port_subscribers","snd_seq_queue_info_sizeof","snd_seq_queue_info_malloc","snd_seq_queue_info_free","snd_seq_queue_info_copy","snd_seq_queue_info_get_queue","snd_seq_queue_info_get_name","snd_seq_queue_info_get_owner","snd_seq_queue_info_get_locked","snd_seq_queue_info_get_flags","snd_seq_queue_info_set_name","snd_seq_queue_info_set_owner","snd_seq_queue_info_set_locked","snd_seq_queue_info_set_flags","snd_seq_create_queue","snd_seq_alloc_named_queue","snd_seq_alloc_queue","snd_seq_free_queue","snd_seq_get_queue_info","snd_seq_set_queue_info","snd_seq_query_named_queue","snd_seq_get_queue_usage","snd_seq_set_queue_usage","snd_seq_queue_status_sizeof","snd_seq_queue_status_malloc","snd_seq_queue_status_free","snd_seq_queue_status_copy","snd_seq_queue_status_get_queue","snd_seq_queue_status_get_events","snd_seq_queue_status_get_tick_time","snd_seq_queue_status_get_real_time","snd_seq_queue_status_get_status","snd_seq_get_queue_status","snd_seq_queue_tempo_sizeof","snd_seq_queue_tempo_malloc","snd_seq_queue_tempo_free","snd_seq_queue_tempo_copy","snd_seq_queue_tempo_get_queue","snd_seq_queue_tempo_get_tempo","snd_seq_queue_tempo_get_ppq","snd_seq_queue_tempo_get_skew","snd_seq_queue_tempo_get_skew_base","snd_seq_queue_tempo_set_tempo","snd_seq_queue_tempo_set_ppq","snd_seq_queue_tempo_set_skew","snd_seq_queue_tempo_set_skew_base","snd_seq_get_queue_tempo","snd_seq_set_queue_tempo","snd_seq_queue_timer_sizeof","snd_seq_queue_timer_malloc","snd_seq_queue_timer_free","snd_seq_queue_timer_copy","snd_seq_queue_timer_get_queue","snd_seq_queue_timer_get_type","snd_seq_queue_timer_get_id","snd_seq_queue_timer_get_resolution","snd_seq_queue_timer_set_type","snd_seq_queue_timer_set_id","snd_seq_queue_timer_set_resolution","snd_seq_get_queue_timer","snd_seq_set_queue_timer","snd_seq_free_event","snd_seq_event_length","snd_seq_event_output","snd_seq_event_output_buffer","snd_seq_event_output_direct","snd_seq_event_input","snd_seq_event_input_pending","snd_seq_drain_output","snd_seq_event_output_pending","snd_seq_extract_output","snd_seq_drop_output","snd_seq_drop_output_buffer","snd_seq_drop_input","snd_seq_drop_input_buffer","snd_seq_remove_events_sizeof","snd_seq_remove_events_malloc","snd_seq_remove_events_free","snd_seq_remove_events_copy","snd_seq_remove_events_get_condition","snd_seq_remove_events_get_queue","snd_seq_remove_events_get_time","snd_seq_remove_events_get_dest","snd_seq_remove_events_get_channel","snd_seq_remove_events_get_event_type","snd_seq_remove_events_get_tag","snd_seq_remove_events_set_condition","snd_seq_remove_events_set_queue","snd_seq_remove_events_set_time","snd_seq_remove_events_set_dest","snd_seq_remove_events_set_channel","snd_seq_remove_events_set_event_type","snd_seq_remove_events_set_tag","snd_seq_remove_events","snd_seq_set_bit","snd_seq_unset_bit","snd_seq_change_bit","snd_seq_get_bit","snd_seq_control_queue","snd_seq_create_simple_port","snd_seq_delete_simple_port","snd_seq_connect_from","snd_seq_connect_to","snd_seq_disconnect_from","snd_seq_disconnect_to","snd_seq_set_client_name","snd_seq_set_client_event_filter","snd_seq_set_client_pool_output","snd_seq_set_client_pool_output_room","snd_seq_set_client_pool_input","snd_seq_sync_output_queue","snd_seq_parse_address","snd_seq_reset_pool_output","snd_seq_reset_pool_input","snd_midi_event_new","snd_midi_event_resize_buffer","snd_midi_event_free","snd_midi_event_init","snd_midi_event_reset_encode","snd_midi_event_reset_decode","snd_midi_event_no_status","snd_midi_event_encode","snd_midi_event_encode_byte","snd_midi_event_decode","SND_PCM_NONBLOCK","SND_PCM_ASYNC","SND_SEQ_OPEN_OUTPUT","SND_SEQ_OPEN_INPUT","SND_SEQ_OPEN_DUPLEX","SND_SEQ_NONBLOCK","SND_SEQ_ADDRESS_BROADCAST","SND_SEQ_ADDRESS_SUBSCRIBERS","SND_SEQ_ADDRESS_UNKNOWN","SND_SEQ_QUEUE_DIRECT","SND_SEQ_TIME_MODE_MASK","SND_SEQ_TIME_STAMP_MASK","SND_SEQ_TIME_MODE_REL","SND_SEQ_TIME_STAMP_REAL","SND_SEQ_TIME_STAMP_TICK","SND_SEQ_TIME_MODE_ABS","SND_SEQ_CLIENT_SYSTEM","SND_SEQ_PORT_SYSTEM_TIMER","SND_SEQ_PORT_SYSTEM_ANNOUNCE","SND_SEQ_PRIORITY_HIGH","SND_SEQ_EVENT_LENGTH_FIXED","SND_SEQ_EVENT_LENGTH_MASK","SND_SEQ_EVENT_LENGTH_VARIABLE","SND_SEQ_EVENT_LENGTH_VARUSR","__va_list_tag","gp_offset","fp_offset","overflow_arg_area","reg_save_area","__BindgenBitfieldUnit","new","get_bit","set_bit","get","set","__IncompleteArrayField","new","as_ptr","as_mut_ptr","as_slice","as_mut_slice","snd_dlsym_link","next","dlsym_name","dlsym_ptr","_snd_async_handler","snd_async_handler_t","snd_async_callback_t","snd_shm_area","snd_timestamp_t","snd_htimestamp_t","_snd_input","snd_input_t","SND_INPUT_STDIO","SND_INPUT_BUFFER","_snd_input_type","_snd_output","snd_output_t","SND_OUTPUT_STDIO","SND_OUTPUT_BUFFER","_snd_output_type","snd_lib_error_handler_t","snd_local_error_handler_t","SND_CONFIG_TYPE_INTEGER","SND_CONFIG_TYPE_INTEGER64","SND_CONFIG_TYPE_REAL","SND_CONFIG_TYPE_STRING","SND_CONFIG_TYPE_POINTER","SND_CONFIG_TYPE_COMPOUND","_snd_config_type","_snd_config","snd_config_t","_snd_config_iterator","snd_config_iterator_t","_snd_config_update","snd_config_update_t","snd_devname_t","snd_devname","name","comment","next","_snd_pcm_info","snd_pcm_info_t","_snd_pcm_hw_params","snd_pcm_hw_params_t","_snd_pcm_sw_params","snd_pcm_sw_params_t","_snd_pcm_status","snd_pcm_status_t","_snd_pcm_access_mask","snd_pcm_access_mask_t","_snd_pcm_format_mask","snd_pcm_format_mask_t","_snd_pcm_subformat_mask","snd_pcm_subformat_mask_t","SND_PCM_CLASS_GENERIC","SND_PCM_CLASS_MULTI","SND_PCM_CLASS_MODEM","SND_PCM_CLASS_DIGITIZER","SND_PCM_CLASS_LAST","_snd_pcm_class","SND_PCM_SUBCLASS_GENERIC_MIX","SND_PCM_SUBCLASS_MULTI_MIX","SND_PCM_SUBCLASS_LAST","_snd_pcm_subclass","SND_PCM_STREAM_PLAYBACK","SND_PCM_STREAM_CAPTURE","SND_PCM_STREAM_LAST","_snd_pcm_stream","SND_PCM_ACCESS_MMAP_INTERLEAVED","SND_PCM_ACCESS_MMAP_NONINTERLEAVED","SND_PCM_ACCESS_MMAP_COMPLEX","SND_PCM_ACCESS_RW_INTERLEAVED","SND_PCM_ACCESS_RW_NONINTERLEAVED","SND_PCM_ACCESS_LAST","_snd_pcm_access","SND_PCM_FORMAT_UNKNOWN","SND_PCM_FORMAT_S8","SND_PCM_FORMAT_U8","SND_PCM_FORMAT_S16_LE","SND_PCM_FORMAT_S16_BE","SND_PCM_FORMAT_U16_LE","SND_PCM_FORMAT_U16_BE","SND_PCM_FORMAT_S24_LE","SND_PCM_FORMAT_S24_BE","SND_PCM_FORMAT_U24_LE","SND_PCM_FORMAT_U24_BE","SND_PCM_FORMAT_S32_LE","SND_PCM_FORMAT_S32_BE","SND_PCM_FORMAT_U32_LE","SND_PCM_FORMAT_U32_BE","SND_PCM_FORMAT_FLOAT_LE","SND_PCM_FORMAT_FLOAT_BE","SND_PCM_FORMAT_FLOAT64_LE","SND_PCM_FORMAT_FLOAT64_BE","SND_PCM_FORMAT_IEC958_SUBFRAME_LE","SND_PCM_FORMAT_IEC958_SUBFRAME_BE","SND_PCM_FORMAT_MU_LAW","SND_PCM_FORMAT_A_LAW","SND_PCM_FORMAT_IMA_ADPCM","SND_PCM_FORMAT_MPEG","SND_PCM_FORMAT_GSM","SND_PCM_FORMAT_S20_LE","SND_PCM_FORMAT_S20_BE","SND_PCM_FORMAT_U20_LE","SND_PCM_FORMAT_U20_BE","SND_PCM_FORMAT_SPECIAL","SND_PCM_FORMAT_S24_3LE","SND_PCM_FORMAT_S24_3BE","SND_PCM_FORMAT_U24_3LE","SND_PCM_FORMAT_U24_3BE","SND_PCM_FORMAT_S20_3LE","SND_PCM_FORMAT_S20_3BE","SND_PCM_FORMAT_U20_3LE","SND_PCM_FORMAT_U20_3BE","SND_PCM_FORMAT_S18_3LE","SND_PCM_FORMAT_S18_3BE","SND_PCM_FORMAT_U18_3LE","SND_PCM_FORMAT_U18_3BE","SND_PCM_FORMAT_G723_24","SND_PCM_FORMAT_G723_24_1B","SND_PCM_FORMAT_G723_40","SND_PCM_FORMAT_G723_40_1B","SND_PCM_FORMAT_DSD_U8","SND_PCM_FORMAT_DSD_U16_LE","SND_PCM_FORMAT_DSD_U32_LE","SND_PCM_FORMAT_DSD_U16_BE","SND_PCM_FORMAT_DSD_U32_BE","SND_PCM_FORMAT_LAST","SND_PCM_FORMAT_S16","SND_PCM_FORMAT_U16","SND_PCM_FORMAT_S24","SND_PCM_FORMAT_U24","SND_PCM_FORMAT_S32","SND_PCM_FORMAT_U32","SND_PCM_FORMAT_FLOAT","SND_PCM_FORMAT_FLOAT64","SND_PCM_FORMAT_IEC958_SUBFRAME","SND_PCM_FORMAT_S20","SND_PCM_FORMAT_U20","_snd_pcm_format","SND_PCM_SUBFORMAT_STD","SND_PCM_SUBFORMAT_LAST","_snd_pcm_subformat","SND_PCM_STATE_OPEN","SND_PCM_STATE_SETUP","SND_PCM_STATE_PREPARED","SND_PCM_STATE_RUNNING","SND_PCM_STATE_XRUN","SND_PCM_STATE_DRAINING","SND_PCM_STATE_PAUSED","SND_PCM_STATE_SUSPENDED","SND_PCM_STATE_DISCONNECTED","SND_PCM_STATE_LAST","SND_PCM_STATE_PRIVATE1","_snd_pcm_state","SND_PCM_START_DATA","SND_PCM_START_EXPLICIT","SND_PCM_START_LAST","_snd_pcm_start","SND_PCM_XRUN_NONE","SND_PCM_XRUN_STOP","SND_PCM_XRUN_LAST","_snd_pcm_xrun","SND_PCM_TSTAMP_NONE","SND_PCM_TSTAMP_ENABLE","SND_PCM_TSTAMP_MMAP","SND_PCM_TSTAMP_LAST","_snd_pcm_tstamp","SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY","SND_PCM_TSTAMP_TYPE_MONOTONIC","SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW","SND_PCM_TSTAMP_TYPE_LAST","_snd_pcm_tstamp_type","SND_PCM_AUDIO_TSTAMP_TYPE_COMPAT","SND_PCM_AUDIO_TSTAMP_TYPE_DEFAULT","SND_PCM_AUDIO_TSTAMP_TYPE_LINK","SND_PCM_AUDIO_TSTAMP_TYPE_LINK_ABSOLUTE","SND_PCM_AUDIO_TSTAMP_TYPE_LINK_ESTIMATED","SND_PCM_AUDIO_TSTAMP_TYPE_LINK_SYNCHRONIZED","SND_PCM_AUDIO_TSTAMP_TYPE_LAST","_snd_pcm_audio_tstamp_type","_snd_pcm_audio_tstamp_config","_bitfield_1","__bindgen_padding_0","type_requested","set_type_requested","report_delay","set_report_delay","new_bitfield_1","snd_pcm_audio_tstamp_config_t","_snd_pcm_audio_tstamp_report","_bitfield_1","accuracy","valid","set_valid","actual_type","set_actual_type","accuracy_report","set_accuracy_report","new_bitfield_1","snd_pcm_audio_tstamp_report_t","snd_pcm_uframes_t","snd_pcm_sframes_t","_snd_pcm","snd_pcm_t","SND_PCM_TYPE_HW","SND_PCM_TYPE_HOOKS","SND_PCM_TYPE_MULTI","SND_PCM_TYPE_FILE","SND_PCM_TYPE_NULL","SND_PCM_TYPE_SHM","SND_PCM_TYPE_INET","SND_PCM_TYPE_COPY","SND_PCM_TYPE_LINEAR","SND_PCM_TYPE_ALAW","SND_PCM_TYPE_MULAW","SND_PCM_TYPE_ADPCM","SND_PCM_TYPE_RATE","SND_PCM_TYPE_ROUTE","SND_PCM_TYPE_PLUG","SND_PCM_TYPE_SHARE","SND_PCM_TYPE_METER","SND_PCM_TYPE_MIX","SND_PCM_TYPE_DROUTE","SND_PCM_TYPE_LBSERVER","SND_PCM_TYPE_LINEAR_FLOAT","SND_PCM_TYPE_LADSPA","SND_PCM_TYPE_DMIX","SND_PCM_TYPE_JACK","SND_PCM_TYPE_DSNOOP","SND_PCM_TYPE_DSHARE","SND_PCM_TYPE_IEC958","SND_PCM_TYPE_SOFTVOL","SND_PCM_TYPE_IOPLUG","SND_PCM_TYPE_EXTPLUG","SND_PCM_TYPE_MMAP_EMUL","SND_PCM_TYPE_LAST","_snd_pcm_type","_snd_pcm_channel_area","addr","first","step","snd_pcm_channel_area_t","_snd_pcm_sync_id","id","id16","id32","snd_pcm_sync_id_t","_snd_pcm_scope","snd_pcm_scope_t","SND_CHMAP_TYPE_NONE","SND_CHMAP_TYPE_FIXED","SND_CHMAP_TYPE_VAR","SND_CHMAP_TYPE_PAIRED","SND_CHMAP_TYPE_LAST","snd_pcm_chmap_type","SND_CHMAP_UNKNOWN","SND_CHMAP_NA","SND_CHMAP_MONO","SND_CHMAP_FL","SND_CHMAP_FR","SND_CHMAP_RL","SND_CHMAP_RR","SND_CHMAP_FC","SND_CHMAP_LFE","SND_CHMAP_SL","SND_CHMAP_SR","SND_CHMAP_RC","SND_CHMAP_FLC","SND_CHMAP_FRC","SND_CHMAP_RLC","SND_CHMAP_RRC","SND_CHMAP_FLW","SND_CHMAP_FRW","SND_CHMAP_FLH","SND_CHMAP_FCH","SND_CHMAP_FRH","SND_CHMAP_TC","SND_CHMAP_TFL","SND_CHMAP_TFR","SND_CHMAP_TFC","SND_CHMAP_TRL","SND_CHMAP_TRR","SND_CHMAP_TRC","SND_CHMAP_TFLC","SND_CHMAP_TFRC","SND_CHMAP_TSL","SND_CHMAP_TSR","SND_CHMAP_LLFE","SND_CHMAP_RLFE","SND_CHMAP_BC","SND_CHMAP_BLC","SND_CHMAP_BRC","SND_CHMAP_LAST","snd_pcm_chmap_position","snd_pcm_chmap","channels","pos","snd_pcm_chmap_t","snd_pcm_chmap_query","type_","map","snd_pcm_chmap_query_t","SND_PCM_HOOK_TYPE_HW_PARAMS","SND_PCM_HOOK_TYPE_HW_FREE","SND_PCM_HOOK_TYPE_CLOSE","SND_PCM_HOOK_TYPE_LAST","_snd_pcm_hook_type","_snd_pcm_hook","snd_pcm_hook_t","snd_pcm_hook_func_t","_snd_pcm_scope_ops","enable","disable","start","stop","update","reset","close","snd_pcm_scope_ops_t","SND_SPCM_LATENCY_STANDARD","SND_SPCM_LATENCY_MEDIUM","SND_SPCM_LATENCY_REALTIME","_snd_spcm_latency","SND_SPCM_XRUN_IGNORE","SND_SPCM_XRUN_STOP","_snd_spcm_xrun_type","SND_SPCM_DUPLEX_LIBERAL","SND_SPCM_DUPLEX_PEDANTIC","_snd_spcm_duplex_type","_snd_rawmidi_info","snd_rawmidi_info_t","_snd_rawmidi_params","snd_rawmidi_params_t","_snd_rawmidi_status","snd_rawmidi_status_t","SND_RAWMIDI_STREAM_OUTPUT","SND_RAWMIDI_STREAM_INPUT","SND_RAWMIDI_STREAM_LAST","_snd_rawmidi_stream","_snd_rawmidi","snd_rawmidi_t","SND_RAWMIDI_TYPE_HW","SND_RAWMIDI_TYPE_SHM","SND_RAWMIDI_TYPE_INET","SND_RAWMIDI_TYPE_VIRTUAL","_snd_rawmidi_type","_snd_timer_id","snd_timer_id_t","_snd_timer_ginfo","snd_timer_ginfo_t","_snd_timer_gparams","snd_timer_gparams_t","_snd_timer_gstatus","snd_timer_gstatus_t","_snd_timer_info","snd_timer_info_t","_snd_timer_params","snd_timer_params_t","_snd_timer_status","snd_timer_status_t","SND_TIMER_CLASS_NONE","SND_TIMER_CLASS_SLAVE","SND_TIMER_CLASS_GLOBAL","SND_TIMER_CLASS_CARD","SND_TIMER_CLASS_PCM","SND_TIMER_CLASS_LAST","_snd_timer_class","SND_TIMER_SCLASS_NONE","SND_TIMER_SCLASS_APPLICATION","SND_TIMER_SCLASS_SEQUENCER","SND_TIMER_SCLASS_OSS_SEQUENCER","SND_TIMER_SCLASS_LAST","_snd_timer_slave_class","SND_TIMER_EVENT_RESOLUTION","SND_TIMER_EVENT_TICK","SND_TIMER_EVENT_START","SND_TIMER_EVENT_STOP","SND_TIMER_EVENT_CONTINUE","SND_TIMER_EVENT_PAUSE","SND_TIMER_EVENT_EARLY","SND_TIMER_EVENT_SUSPEND","SND_TIMER_EVENT_RESUME","SND_TIMER_EVENT_MSTART","SND_TIMER_EVENT_MSTOP","SND_TIMER_EVENT_MCONTINUE","SND_TIMER_EVENT_MPAUSE","SND_TIMER_EVENT_MSUSPEND","SND_TIMER_EVENT_MRESUME","_snd_timer_event","_snd_timer_read","resolution","ticks","snd_timer_read_t","_snd_timer_tread","event","tstamp","val","snd_timer_tread_t","SND_TIMER_TYPE_HW","SND_TIMER_TYPE_SHM","SND_TIMER_TYPE_INET","_snd_timer_type","_snd_timer_query","snd_timer_query_t","_snd_timer","snd_timer_t","_snd_hwdep_info","snd_hwdep_info_t","_snd_hwdep_dsp_status","snd_hwdep_dsp_status_t","_snd_hwdep_dsp_image","snd_hwdep_dsp_image_t","SND_HWDEP_IFACE_OPL2","SND_HWDEP_IFACE_OPL3","SND_HWDEP_IFACE_OPL4","SND_HWDEP_IFACE_SB16CSP","SND_HWDEP_IFACE_EMU10K1","SND_HWDEP_IFACE_YSS225","SND_HWDEP_IFACE_ICS2115","SND_HWDEP_IFACE_SSCAPE","SND_HWDEP_IFACE_VX","SND_HWDEP_IFACE_MIXART","SND_HWDEP_IFACE_USX2Y","SND_HWDEP_IFACE_EMUX_WAVETABLE","SND_HWDEP_IFACE_BLUETOOTH","SND_HWDEP_IFACE_USX2Y_PCM","SND_HWDEP_IFACE_PCXHR","SND_HWDEP_IFACE_SB_RC","SND_HWDEP_IFACE_HDA","SND_HWDEP_IFACE_USB_STREAM","SND_HWDEP_IFACE_FW_DICE","SND_HWDEP_IFACE_FW_FIREWORKS","SND_HWDEP_IFACE_FW_BEBOB","SND_HWDEP_IFACE_FW_OXFW","SND_HWDEP_IFACE_FW_DIGI00X","SND_HWDEP_IFACE_FW_TASCAM","SND_HWDEP_IFACE_LINE6","SND_HWDEP_IFACE_FW_MOTU","SND_HWDEP_IFACE_FW_FIREFACE","SND_HWDEP_IFACE_LAST","_snd_hwdep_iface","SND_HWDEP_TYPE_HW","SND_HWDEP_TYPE_SHM","SND_HWDEP_TYPE_INET","_snd_hwdep_type","_snd_hwdep","snd_hwdep_t","snd_aes_iec958","status","subcode","pad","dig_subframe","snd_aes_iec958_t","_snd_ctl_card_info","snd_ctl_card_info_t","_snd_ctl_elem_id","snd_ctl_elem_id_t","_snd_ctl_elem_list","snd_ctl_elem_list_t","_snd_ctl_elem_info","snd_ctl_elem_info_t","_snd_ctl_elem_value","snd_ctl_elem_value_t","_snd_ctl_event","snd_ctl_event_t","SND_CTL_ELEM_TYPE_NONE","SND_CTL_ELEM_TYPE_BOOLEAN","SND_CTL_ELEM_TYPE_INTEGER","SND_CTL_ELEM_TYPE_ENUMERATED","SND_CTL_ELEM_TYPE_BYTES","SND_CTL_ELEM_TYPE_IEC958","SND_CTL_ELEM_TYPE_INTEGER64","SND_CTL_ELEM_TYPE_LAST","_snd_ctl_elem_type","SND_CTL_ELEM_IFACE_CARD","SND_CTL_ELEM_IFACE_HWDEP","SND_CTL_ELEM_IFACE_MIXER","SND_CTL_ELEM_IFACE_PCM","SND_CTL_ELEM_IFACE_RAWMIDI","SND_CTL_ELEM_IFACE_TIMER","SND_CTL_ELEM_IFACE_SEQUENCER","SND_CTL_ELEM_IFACE_LAST","_snd_ctl_elem_iface","SND_CTL_EVENT_ELEM","SND_CTL_EVENT_LAST","_snd_ctl_event_type","SND_CTL_TYPE_HW","SND_CTL_TYPE_SHM","SND_CTL_TYPE_INET","SND_CTL_TYPE_EXT","_snd_ctl_type","_snd_ctl","snd_ctl_t","_snd_sctl","snd_sctl_t","_snd_hctl_elem","snd_hctl_elem_t","_snd_hctl","snd_hctl_t","snd_hctl_compare_t","snd_hctl_callback_t","snd_hctl_elem_callback_t","_snd_mixer","snd_mixer_t","_snd_mixer_class","snd_mixer_class_t","_snd_mixer_elem","snd_mixer_elem_t","snd_mixer_callback_t","snd_mixer_elem_callback_t","snd_mixer_compare_t","snd_mixer_event_t","SND_MIXER_ELEM_SIMPLE","SND_MIXER_ELEM_LAST","_snd_mixer_elem_type","SND_MIXER_SCHN_UNKNOWN","SND_MIXER_SCHN_FRONT_LEFT","SND_MIXER_SCHN_FRONT_RIGHT","SND_MIXER_SCHN_REAR_LEFT","SND_MIXER_SCHN_REAR_RIGHT","SND_MIXER_SCHN_FRONT_CENTER","SND_MIXER_SCHN_WOOFER","SND_MIXER_SCHN_SIDE_LEFT","SND_MIXER_SCHN_SIDE_RIGHT","SND_MIXER_SCHN_REAR_CENTER","SND_MIXER_SCHN_LAST","SND_MIXER_SCHN_MONO","_snd_mixer_selem_channel_id","SND_MIXER_SABSTRACT_NONE","SND_MIXER_SABSTRACT_BASIC","snd_mixer_selem_regopt_abstract","snd_mixer_selem_regopt","ver","abstract_","device","playback_pcm","capture_pcm","_snd_mixer_selem_id","snd_mixer_selem_id_t","snd_seq_event_type_t","SND_SEQ_EVENT_SYSTEM","SND_SEQ_EVENT_RESULT","SND_SEQ_EVENT_NOTE","SND_SEQ_EVENT_NOTEON","SND_SEQ_EVENT_NOTEOFF","SND_SEQ_EVENT_KEYPRESS","SND_SEQ_EVENT_CONTROLLER","SND_SEQ_EVENT_PGMCHANGE","SND_SEQ_EVENT_CHANPRESS","SND_SEQ_EVENT_PITCHBEND","SND_SEQ_EVENT_CONTROL14","SND_SEQ_EVENT_NONREGPARAM","SND_SEQ_EVENT_REGPARAM","SND_SEQ_EVENT_SONGPOS","SND_SEQ_EVENT_SONGSEL","SND_SEQ_EVENT_QFRAME","SND_SEQ_EVENT_TIMESIGN","SND_SEQ_EVENT_KEYSIGN","SND_SEQ_EVENT_START","SND_SEQ_EVENT_CONTINUE","SND_SEQ_EVENT_STOP","SND_SEQ_EVENT_SETPOS_TICK","SND_SEQ_EVENT_SETPOS_TIME","SND_SEQ_EVENT_TEMPO","SND_SEQ_EVENT_CLOCK","SND_SEQ_EVENT_TICK","SND_SEQ_EVENT_QUEUE_SKEW","SND_SEQ_EVENT_SYNC_POS","SND_SEQ_EVENT_TUNE_REQUEST","SND_SEQ_EVENT_RESET","SND_SEQ_EVENT_SENSING","SND_SEQ_EVENT_ECHO","SND_SEQ_EVENT_OSS","SND_SEQ_EVENT_CLIENT_START","SND_SEQ_EVENT_CLIENT_EXIT","SND_SEQ_EVENT_CLIENT_CHANGE","SND_SEQ_EVENT_PORT_START","SND_SEQ_EVENT_PORT_EXIT","SND_SEQ_EVENT_PORT_CHANGE","SND_SEQ_EVENT_PORT_SUBSCRIBED","SND_SEQ_EVENT_PORT_UNSUBSCRIBED","SND_SEQ_EVENT_USR0","SND_SEQ_EVENT_USR1","SND_SEQ_EVENT_USR2","SND_SEQ_EVENT_USR3","SND_SEQ_EVENT_USR4","SND_SEQ_EVENT_USR5","SND_SEQ_EVENT_USR6","SND_SEQ_EVENT_USR7","SND_SEQ_EVENT_USR8","SND_SEQ_EVENT_USR9","SND_SEQ_EVENT_SYSEX","SND_SEQ_EVENT_BOUNCE","SND_SEQ_EVENT_USR_VAR0","SND_SEQ_EVENT_USR_VAR1","SND_SEQ_EVENT_USR_VAR2","SND_SEQ_EVENT_USR_VAR3","SND_SEQ_EVENT_USR_VAR4","SND_SEQ_EVENT_NONE","snd_seq_event_type","snd_seq_addr","client","port","snd_seq_addr_t","snd_seq_connect","sender","dest","snd_seq_connect_t","snd_seq_real_time","tv_sec","tv_nsec","snd_seq_real_time_t","snd_seq_tick_time_t","snd_seq_timestamp","tick","time","snd_seq_timestamp_t","snd_seq_ev_note","channel","note","velocity","off_velocity","duration","snd_seq_ev_note_t","snd_seq_ev_ctrl","channel","unused","param","value","snd_seq_ev_ctrl_t","snd_seq_ev_raw8","d","snd_seq_ev_raw8_t","snd_seq_ev_raw32","d","snd_seq_ev_raw32_t","snd_seq_ev_ext","len","ptr","snd_seq_ev_ext_t","snd_seq_result","event","result","snd_seq_result_t","snd_seq_queue_skew","value","base","snd_seq_queue_skew_t","snd_seq_ev_queue_control","queue","unused","param","snd_seq_ev_queue_control__bindgen_ty_1","value","time","position","skew","d32","d8","snd_seq_ev_queue_control_t","snd_seq_event","type_","flags","tag","queue","time","source","dest","data","snd_seq_event__bindgen_ty_1","note","control","raw8","raw32","ext","queue","time","addr","connect","result","snd_seq_event_t","_snd_seq","snd_seq_t","SND_SEQ_TYPE_HW","SND_SEQ_TYPE_SHM","SND_SEQ_TYPE_INET","_snd_seq_type","_snd_seq_system_info","snd_seq_system_info_t","_snd_seq_client_info","snd_seq_client_info_t","SND_SEQ_USER_CLIENT","SND_SEQ_KERNEL_CLIENT","snd_seq_client_type","_snd_seq_client_pool","snd_seq_client_pool_t","_snd_seq_port_info","snd_seq_port_info_t","_snd_seq_port_subscribe","snd_seq_port_subscribe_t","_snd_seq_query_subscribe","snd_seq_query_subscribe_t","SND_SEQ_QUERY_SUBS_READ","SND_SEQ_QUERY_SUBS_WRITE","snd_seq_query_subs_type_t","_snd_seq_queue_info","snd_seq_queue_info_t","_snd_seq_queue_status","snd_seq_queue_status_t","_snd_seq_queue_tempo","snd_seq_queue_tempo_t","_snd_seq_queue_timer","snd_seq_queue_timer_t","SND_SEQ_TIMER_ALSA","SND_SEQ_TIMER_MIDI_CLOCK","SND_SEQ_TIMER_MIDI_TICK","snd_seq_queue_timer_type_t","_snd_seq_remove_events","snd_seq_remove_events_t","snd_midi_event","snd_midi_event_t","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","cmp","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash"],"q":["alsa_sysd":["\\\\defgroup Global Global defines and functions Global …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\defgroup PCM_Info Stream Information \\\\ingroup PCM See …","","","","","","","","","","","","","","","","","","","\\\\defgroup PCM_HW_Params Hardware Parameters \\\\ingroup PCM …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\defgroup PCM_SW_Params Software Parameters \\\\ingroup PCM …","","","","","","","","","","","","","","","","","","","","","\\\\defgroup PCM_Access Access Mask Functions \\\\ingroup PCM …","","","","","","","","","","\\\\defgroup PCM_Format Format Mask Functions \\\\ingroup PCM …","","","","","","","","","","\\\\defgroup PCM_SubFormat Subformat Mask Functions \\\\ingroup …","","","","","","","","","","\\\\defgroup PCM_Status Status Functions \\\\ingroup PCM See …","","","","","","","","","","","","","","","","","\\\\defgroup PCM_Description Description Functions \\\\ingroup …","","","","","","","","","","\\\\defgroup PCM_Dump Debug Functions \\\\ingroup PCM See the …","","","","","","","\\\\defgroup PCM_Direct Direct Access (MMAP) Functions …","","","","","","\\\\defgroup PCM_Helpers Helper Functions \\\\ingroup PCM See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\defgroup PCM_Deprecated Deprecated Functions \\\\ingroup PCM…defgroup SControl Setup Control Interface \\\\ingroup …defgroup SeqEvent Sequencer Event API Sequencer Event API…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\defgroup SeqMisc Sequencer Miscellaneous Sequencer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Internal structure for an async notification …","\\\\brief Async notification callback.","","Timestamp","Hi-res timestamp","","\\\\brief Internal structure for an input object.","Input from a stdio stream.","Input from a memory buffer.","Input type.","","\\\\brief Internal structure for an output object.","Output to a stdio stream.","Output to a memory buffer.","Output type.","\\\\brief Error handler callback. \\\\param file Source file …","Local error handler function type","Integer number.","64-bit integer number.","Real number.","Character string.","Pointer (runtime only, cannot be saved).","Compound node.","\\\\brief Configuration node type.","","\\\\brief Internal structure for a configuration node object.","","\\\\brief Type for a configuration compound iterator.","","\\\\brief Internal structure for a configuration private …","Device-name list element","Device-name list element (definition)","< Device name string","< Comments","< Next pointer","","PCM generic info container","","PCM hardware configuration space container","","PCM software configuration container","","PCM status container","","PCM access types mask","","PCM formats mask","","PCM subformats mask","standard device","multichannel device","software modem device","digitizer device","digitizer device","PCM class","subdevices are mixed together","multichannel subdevices are mixed together","multichannel subdevices are mixed together","PCM subclass","Playback stream","Capture stream","Capture stream","PCM stream (direction)","mmap access with simple interleaved channels","mmap access with simple non interleaved channels","mmap access with complex placement","snd_pcm_readi/snd_pcm_writei access","snd_pcm_readn/snd_pcm_writen access","snd_pcm_readn/snd_pcm_writen access","PCM access type","Unknown","Signed 8 bit","Unsigned 8 bit","Signed 16 bit Little Endian","Signed 16 bit Big Endian","Unsigned 16 bit Little Endian","Unsigned 16 bit Big Endian","Signed 24 bit Little Endian using low three bytes in …","Signed 24 bit Big Endian using low three bytes in 32-bit …","Unsigned 24 bit Little Endian using low three bytes in …","Unsigned 24 bit Big Endian using low three bytes in …","Signed 32 bit Little Endian","Signed 32 bit Big Endian","Unsigned 32 bit Little Endian","Unsigned 32 bit Big Endian","Float 32 bit Little Endian, Range -1.0 to 1.0","Float 32 bit Big Endian, Range -1.0 to 1.0","Float 64 bit Little Endian, Range -1.0 to 1.0","Float 64 bit Big Endian, Range -1.0 to 1.0","IEC-958 Little Endian","IEC-958 Big Endian","Mu-Law","A-Law","Ima-ADPCM","MPEG","GSM","Signed 20bit Little Endian in 4bytes format, LSB justified","Signed 20bit Big Endian in 4bytes format, LSB justified","Unsigned 20bit Little Endian in 4bytes format, LSB …","Unsigned 20bit Big Endian in 4bytes format, LSB justified","Special","Signed 24bit Little Endian in 3bytes format","Signed 24bit Big Endian in 3bytes format","Unsigned 24bit Little Endian in 3bytes format","Unsigned 24bit Big Endian in 3bytes format","Signed 20bit Little Endian in 3bytes format","Signed 20bit Big Endian in 3bytes format","Unsigned 20bit Little Endian in 3bytes format","Unsigned 20bit Big Endian in 3bytes format","Signed 18bit Little Endian in 3bytes format","Signed 18bit Big Endian in 3bytes format","Unsigned 18bit Little Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Unsigned 18bit Big Endian in 3bytes format","Signed 16 bit CPU endian","Unsigned 16 bit CPU endian","Signed 24 bit CPU endian","Unsigned 24 bit CPU endian","Signed 32 bit CPU endian","Unsigned 32 bit CPU endian","Float 32 bit CPU endian","Float 64 bit CPU endian","IEC-958 CPU Endian","Signed 20bit in 4bytes format, LSB justified, CPU Endian","Unsigned 20bit in 4bytes format, LSB justified, CPU Endian","PCM sample format","Standard","Standard","PCM sample subformat","Open","Setup installed","Ready to start","Running","Stopped: underrun (playback) or overrun (capture) detected","Draining: running (playback) or stopped (capture)","Paused","Hardware is suspended","Hardware is disconnected","Hardware is disconnected","Private - used internally in the library - do not use","PCM state","Automatic start on data read/write","Explicit start","Explicit start","PCM start mode","Xrun detection disabled","Stop on xrun detection","Stop on xrun detection","PCM xrun mode","No timestamp","Update timestamp at every hardware position update","Equivalent with #SND_PCM_TSTAMP_ENABLE, just for …","Equivalent with #SND_PCM_TSTAMP_ENABLE, just for …","PCM timestamp mode","< gettimeofday equivalent","< posix_clock_monotonic equivalent","< monotonic_raw (no NTP)","","","first definition for backwards compatibility only, maps …","< DMA time, reported as per hw_ptr","< link time reported by sample or wallclock counter, …","< link time reported by sample or wallclock counter, not …","< link time estimated indirectly","< link time synchronized with system time","","","","","","","","","","","","","","","","","","","","","","","Unsigned frames quantity","Signed frames quantity","","PCM handle","Kernel level PCM","Hooked PCM","One or more linked PCM with exclusive access to selected …","File writing plugin","Null endpoint PCM","Shared memory client PCM","INET client PCM (not yet implemented)","Copying plugin","Linear format conversion PCM","A-Law format conversion PCM","Mu-Law format conversion PCM","IMA-ADPCM format conversion PCM","Rate conversion PCM","Attenuated static route PCM","Format adjusted PCM","Sharing PCM","Meter plugin","Mixing PCM","Attenuated dynamic route PCM (not yet implemented)","Loopback server plugin (not yet implemented)","Linear Integer <-> Linear Float format conversion PCM","LADSPA integration plugin","Direct Mixing plugin","Jack Audio Connection Kit plugin","Direct Snooping plugin","Direct Sharing plugin","IEC958 subframe plugin","Soft volume plugin","External I/O plugin","External filter plugin","Mmap-emulation plugin","Mmap-emulation plugin","PCM type","PCM area specification","base address of channel samples","offset to first sample in bits","samples distance in bits","PCM area specification","PCM synchronization ID","8-bit ID","16-bit ID","32-bit ID","PCM synchronization ID","","#SND_PCM_TYPE_METER scope handle","< unspecified channel position","< fixed channel position","< freely swappable channel position","< pair-wise swappable channel position","< last entry","channel map list type","< unspecified","< N/A, silent","< mono stream","< front left","< front right","< rear left","< rear right","< front center","< LFE","< side left","< side right","< rear center","< front left center","< front right center","< rear left center","< rear right center","< front left wide","< front right wide","< front left high","< front center high","< front right high","< top center","< top front left","< top front right","< top front center","< top rear left","< top rear right","< top rear center","< top front left center","< top front right center","< top side left","< top side right","< left LFE","< right LFE","< bottom center","< bottom left center","< bottom right center","","channel positions","the channel map header","< number of channels","< channel position array","the channel map header","the header of array items returned from …","< channel map type","< available channel map","the header of array items returned from …","","","","","type of pcm hook","","PCM hook container","PCM hook callback function","#SND_PCM_TYPE_METER scope functions","\\\\brief Enable and prepare it using current params \\\\param …","\\\\brief Disable \\\\param scope scope handle","\\\\brief PCM has been started \\\\param scope scope handle","\\\\brief PCM has been stopped \\\\param scope scope handle","\\\\brief New frames are present \\\\param scope scope handle","\\\\brief Reset status \\\\param scope scope handle","\\\\brief PCM is closing \\\\param scope scope handle","#SND_PCM_TYPE_METER scope functions","standard latency - for standard playback or capture …","medium latency - software phones etc. (estimated latency …","realtime latency - realtime applications (effect …","Simple PCM latency type","driver / library will ignore all xruns, the stream runs …","driver / library stops the stream when an xrun occurs","Simple PCM xrun type","liberal duplex - the buffer and period sizes might not …","pedantic duplex - the buffer and period sizes MUST match","Simple PCM duplex type","","RawMidi information container","","RawMidi settings container","","RawMidi status container","Output stream","Input stream","Input stream","RawMidi stream (direction)","","RawMidi handle","Kernel level RawMidi","Shared memory client RawMidi (not yet implemented)","INET client RawMidi (not yet implemented)","Virtual (sequencer) RawMidi","RawMidi type","","timer identification structure","","timer global info structure","","timer global params structure","","timer global status structure","","timer info structure","","timer params structure","","timer status structure","< invalid","< slave timer","< global timer","< card timer","< PCM timer","< last timer","timer master class","< none","< for internal use","< sequencer timer","< OSS sequencer timer","< last slave timer","timer slave class","","","","","","","","","","","","","","","","timer read event identification","timer read structure","< tick resolution in nanoseconds","< count of happened ticks","timer read structure","timer tstamp + event read structure","< Timer event","< Time stamp of each event","< Event value","timer tstamp + event read structure","Kernel level HwDep","Shared memory client timer (not yet implemented)","INET client timer (not yet implemented)","timer handle type","","timer query handle","","timer handle","","HwDep information container","","HwDep DSP status container","","HwDep DSP image container","< OPL2 raw driver","< OPL3 raw driver","< OPL4 raw driver","< SB16CSP driver","< EMU10K1 driver","< YSS225 driver","< ICS2115 driver","< Ensoniq SoundScape ISA card (MC68EC000)","< Digigram VX cards","< Digigram miXart cards","< Tascam US122, US224 & US428 usb","< EmuX wavetable","< Bluetooth audio","< Tascam US122, US224 & US428 raw USB PCM","< Digigram PCXHR","< SB Extigy/Audigy2NX remote control","< HD-audio","< direct access to usb stream","< TC DICE FireWire device","< Echo Audio Fireworks based device","< BridgeCo BeBoB based device","< Oxford OXFW970/971 based device","","","","","","< last known hwdep interface","HwDep interface","Kernel level HwDep","Shared memory client HwDep (not yet implemented)","INET client HwDep (not yet implemented)","HwDep handle type","","HwDep handle","IEC958 structure","< AES/IEC958 channel status bits","< AES/IEC958 subcode bits","< nothing","< AES/IEC958 subframe bits","IEC958 structure","","CTL card info container","","CTL element identifier container","","CTL element list container","","CTL element info container","","CTL element value container","","CTL event container","Invalid type","Boolean contents","Integer contents","Enumerated contents","Bytes contents","IEC958 (S/PDIF) setting content","64-bit integer contents","64-bit integer contents","CTL element type","Card level","Hardware dependent device","Mixer","PCM","RawMidi","Timer","Sequencer","Sequencer","CTL related interface","Elements related event","Elements related event","Event class","Kernel level CTL","Shared memory client CTL","INET client CTL (not yet implemented)","External control plugin","CTL type","","CTL handle","","SCTL type","","HCTL element handle","","HCTL handle","\\\\brief Compare function for sorting HCTL elements \\\\param …","\\\\brief HCTL callback function \\\\param hctl HCTL handle …","\\\\brief HCTL element callback function \\\\param elem HCTL …","","Mixer handle","","Mixer elements class handle","","Mixer element handle","\\\\brief Mixer callback function \\\\param mixer Mixer handle …","\\\\brief Mixer element callback function \\\\param elem Mixer …","\\\\brief Compare function for sorting mixer elements \\\\param …","\\\\brief Event callback for the mixer class \\\\param class_ …","","","Mixer element type","Unknown","Front left","Front right","Rear left","Rear right","Front center","Woofer","Side Left","Side Right","Rear Center","Rear Center","Mono (Front left alias)","Mixer simple element channel identifier","no abstraction - try use all universal controls from …","basic abstraction - Master,PCM,CD,Aux,Record-Gain etc.","Mixer simple element - register options - abstraction …","Mixer simple element - register options","structure version","v1: abstract layer selection","v1: device name (must be NULL when playback_pcm or …","v1: playback PCM connected to mixer device (NULL == none)","v1: capture PCM connected to mixer device (NULL == none)","","Mixer simple element identifier","Sequencer event data type","system status; event data type = #snd_seq_result_t","returned result status; event data type = …","note on and off with duration; event data type = …","note on; event data type = #snd_seq_ev_note_t","note off; event data type = #snd_seq_ev_note_t","key pressure change (aftertouch); event data type = …","controller; event data type = #snd_seq_ev_ctrl_t","program change; event data type = #snd_seq_ev_ctrl_t","channel pressure; event data type = #snd_seq_ev_ctrl_t","pitchwheel; event data type = #snd_seq_ev_ctrl_t; data is …","14 bit controller value; event data type = …","14 bit NRPN;  event data type = #snd_seq_ev_ctrl_t","14 bit RPN; event data type = #snd_seq_ev_ctrl_t","SPP with LSB and MSB values; event data type = …","Song Select with song ID number; event data type = …","midi time code quarter frame; event data type = …","SMF Time Signature event; event data type = …","SMF Key Signature event; event data type = …","MIDI Real Time Start message; event data type = …","MIDI Real Time Continue message; event data type = …","MIDI Real Time Stop message; event data type = …","Set tick queue position; event data type = …","Set real-time queue position; event data type = …","(SMF) Tempo event; event data type = …","MIDI Real Time Clock message; event data type = …","MIDI Real Time Tick message; event data type = …","Queue timer skew; event data type = …","Sync position changed; event data type = …","Tune request; event data type = none","Reset to power-on state; event data type = none","Active sensing event; event data type = none","Echo-back event; event data type = any type","OSS emulation raw event; event data type = any type","New client has connected; event data type = …","Client has left the system; event data type = …","Client status/info has changed; event data type = …","New port was created; event data type = #snd_seq_addr_t","Port was deleted from system; event data type = …","Port status/info has changed; event data type = …","Ports connected; event data type = #snd_seq_connect_t","Ports disconnected; event data type = #snd_seq_connect_t","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","user-defined event; event data type = any (fixed size)","system exclusive data (variable length);  event data type …","error event;  event data type = #snd_seq_ev_ext_t","reserved for user apps;  event data type = …","reserved for user apps; event data type = …","reserved for user apps; event data type = …","reserved for user apps; event data type = …","reserved for user apps; event data type = …","NOP; ignored in any case","Sequencer event type","Sequencer event address","< Client id","< Port id","Sequencer event address","Connection (subscription) between ports","< sender address","< destination address","Connection (subscription) between ports","Real-time data record","< seconds","< nanoseconds","Real-time data record","(MIDI) Tick-time data record","unioned time stamp","< tick-time","< real-time","unioned time stamp","Note event","< channel number","< note","< velocity","< note-off velocity; only for #SND_SEQ_EVENT_NOTE","< duration until note-off; only for #SND_SEQ_EVENT_NOTE","Note event","Controller event","< channel number","< reserved","< control parameter","< control value","Controller event","generic set of bytes (12x8 bit)","< 8 bit value","generic set of bytes (12x8 bit)","generic set of integers (3x32 bit)","< 32 bit value","generic set of integers (3x32 bit)","external stored data","< length of data","< pointer to data (note: can be 64-bit)","external stored data","Result events","< processed event type","< status","Result events","Queue skew values","< skew value","< skew base","Queue skew values","queue timer control","< affected queue","< reserved","< data value union","","< affected value (e.g. tempo)","< time","< sync position","< queue skew","< any data","< any data","queue timer control","Sequencer event","< event type","< event flags","< tag","< schedule queue","< schedule time","< source address","< destination address","< event data…","","< note information","< MIDI control information","< raw8 data","< raw32 data","< external data","< queue control","< timestamp","< address","< connect information","< operation result code","Sequencer event","","Sequencer handle","< hardware","< shared memory (NYI)","< network (NYI)","sequencer handle type","","system information container","","client information container","< user client","< kernel client","client types","","client pool information container","","port information container","","port subscription container","","subscription query container","< query read subscriptions","< query write subscriptions","type of query subscription","","queue information container","","queue status container","","queue tempo container","","queue timer information container","","","","sequencer timer sources","","event removal conditionals","","container for sequencer midi event parsersi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,2,2,2,0,3,3,3,3,3,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,0,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,11,11,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,17,0,0,18,18,0,0,19,19,0,0,0,20,20,0,0,21,21,21,21,21,0,0,22,22,22,22,0,0,23,0,0,24,0,0,25,25,0,0,26,26,0,0,27,27,0,0,28,28,28,0,29,29,29,29,29,29,0,0,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,5,5,5,5,5,5,5,5,5,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,46,46,46,46,46,46,46,46,46,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,47,47,47,47,47,47,47,47,47,10,10,10,10,10,10,10,11,11,11,11,11,11,11,48,48,48,48,48,48,48,48,48,12,12,12,12,12,12,12,12,12,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,15,15,15,15,15,15,15,15,15,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,16,16,16,16,16,16,16,16,16,79,79,79,79,79,79,79,79,79,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,1,2,4,32,33,34,35,36,37,38,5,39,40,41,42,43,44,45,6,7,46,8,9,47,48,12,49,50,51,52,53,54,55,56,57,58,59,13,60,61,62,63,64,65,15,66,67,68,69,70,71,72,73,74,75,76,77,78,16,79,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,80,81,82,83,84,85,86,87,88,89,90,91,92,2,3,2,2,2,2,1,2,3,4,32,33,34,35,36,37,38,5,39,40,41,42,43,44,45,6,7,46,8,47,10,11,48,12,49,50,51,52,53,54,55,56,57,58,59,13,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,16,79,17,18,19,21,22,23,24,25,26,27,80,81,82,83,84,85,86,87,88,89,90,91,92,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]],["bool",15]],[[["usize",15],["bool",15]]],[[["usize",15],["u8",15]],["u64",15]],[[["usize",15],["u64",15],["u8",15]]],null,[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["c_uint",6]],[[["c_uint",6]]],[[],["c_uint",6]],[[["c_uint",6]]],[[["c_uint",6]],[["__bindgenbitfieldunit",3],["u8",15]]],null,null,null,null,[[],["c_uint",6]],[[["c_uint",6]]],[[],["c_uint",6]],[[["c_uint",6]]],[[],["c_uint",6]],[[["c_uint",6]]],[[["c_uint",6]],[["__bindgenbitfieldunit",3],["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["__va_list_tag",3]],[[],["__bindgenbitfieldunit",3]],[[],["snd_dlsym_link",3]],[[],["_snd_async_handler",3]],[[],["snd_shm_area",3]],[[],["_snd_input",3]],[[],["_snd_output",3]],[[],["_snd_config",3]],[[],["_snd_config_iterator",3]],[[],["_snd_config_update",3]],[[],["snd_devname",3]],[[],["_snd_pcm_info",3]],[[],["_snd_pcm_hw_params",3]],[[],["_snd_pcm_sw_params",3]],[[],["_snd_pcm_status",3]],[[],["_snd_pcm_access_mask",3]],[[],["_snd_pcm_format_mask",3]],[[],["_snd_pcm_subformat_mask",3]],[[],["_snd_pcm_audio_tstamp_config",3]],[[],["_snd_pcm_audio_tstamp_report",3]],[[],["_snd_pcm",3]],[[],["_snd_pcm_channel_area",3]],[[],["_snd_pcm_sync_id",19]],[[],["_snd_pcm_scope",3]],[[],["_snd_pcm_hook",3]],[[],["_snd_pcm_scope_ops",3]],[[],["_snd_rawmidi_info",3]],[[],["_snd_rawmidi_params",3]],[[],["_snd_rawmidi_status",3]],[[],["_snd_rawmidi",3]],[[],["_snd_timer_id",3]],[[],["_snd_timer_ginfo",3]],[[],["_snd_timer_gparams",3]],[[],["_snd_timer_gstatus",3]],[[],["_snd_timer_info",3]],[[],["_snd_timer_params",3]],[[],["_snd_timer_status",3]],[[],["_snd_timer_read",3]],[[],["_snd_timer_query",3]],[[],["_snd_timer",3]],[[],["_snd_hwdep_info",3]],[[],["_snd_hwdep_dsp_status",3]],[[],["_snd_hwdep_dsp_image",3]],[[],["_snd_hwdep",3]],[[],["snd_aes_iec958",3]],[[],["_snd_ctl_card_info",3]],[[],["_snd_ctl_elem_id",3]],[[],["_snd_ctl_elem_list",3]],[[],["_snd_ctl_elem_info",3]],[[],["_snd_ctl_elem_value",3]],[[],["_snd_ctl_event",3]],[[],["_snd_ctl",3]],[[],["_snd_sctl",3]],[[],["_snd_hctl_elem",3]],[[],["_snd_hctl",3]],[[],["_snd_mixer",3]],[[],["_snd_mixer_class",3]],[[],["_snd_mixer_elem",3]],[[],["snd_mixer_selem_regopt",3]],[[],["_snd_mixer_selem_id",3]],[[],["snd_seq_addr",3]],[[],["snd_seq_connect",3]],[[],["snd_seq_real_time",3]],[[],["snd_seq_timestamp",19]],[[],["snd_seq_ev_note",3]],[[],["snd_seq_ev_ctrl",3]],[[],["snd_seq_ev_raw8",3]],[[],["snd_seq_ev_raw32",3]],[[],["snd_seq_ev_ext",3]],[[],["snd_seq_result",3]],[[],["snd_seq_queue_skew",3]],[[],["snd_seq_ev_queue_control",3]],[[],["snd_seq_ev_queue_control__bindgen_ty_1",19]],[[],["snd_seq_event",3]],[[],["snd_seq_event__bindgen_ty_1",19]],[[],["_snd_seq",3]],[[],["_snd_seq_system_info",3]],[[],["_snd_seq_client_info",3]],[[],["_snd_seq_client_pool",3]],[[],["_snd_seq_port_info",3]],[[],["_snd_seq_port_subscribe",3]],[[],["_snd_seq_query_subscribe",3]],[[],["_snd_seq_queue_info",3]],[[],["_snd_seq_queue_status",3]],[[],["_snd_seq_queue_tempo",3]],[[],["_snd_seq_queue_timer",3]],[[],["_snd_seq_remove_events",3]],[[],["snd_midi_event",3]],[[],["__bindgenbitfieldunit",3]],[[],["__incompletearrayfield",3]],[[["__bindgenbitfieldunit",3]],["ordering",4]],[[["__bindgenbitfieldunit",3]],["bool",15]],[[["__bindgenbitfieldunit",3]],["bool",15]],[[["__bindgenbitfieldunit",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[3,"__va_list_tag"],[3,"__BindgenBitfieldUnit"],[3,"__IncompleteArrayField"],[3,"snd_dlsym_link"],[3,"snd_devname"],[3,"_snd_pcm_audio_tstamp_config"],[3,"_snd_pcm_audio_tstamp_report"],[3,"_snd_pcm_channel_area"],[19,"_snd_pcm_sync_id"],[3,"snd_pcm_chmap"],[3,"snd_pcm_chmap_query"],[3,"_snd_pcm_scope_ops"],[3,"_snd_timer_read"],[3,"_snd_timer_tread"],[3,"snd_aes_iec958"],[3,"snd_mixer_selem_regopt"],[3,"snd_seq_addr"],[3,"snd_seq_connect"],[3,"snd_seq_real_time"],[19,"snd_seq_timestamp"],[3,"snd_seq_ev_note"],[3,"snd_seq_ev_ctrl"],[3,"snd_seq_ev_raw8"],[3,"snd_seq_ev_raw32"],[3,"snd_seq_ev_ext"],[3,"snd_seq_result"],[3,"snd_seq_queue_skew"],[3,"snd_seq_ev_queue_control"],[19,"snd_seq_ev_queue_control__bindgen_ty_1"],[3,"snd_seq_event"],[19,"snd_seq_event__bindgen_ty_1"],[3,"_snd_async_handler"],[3,"snd_shm_area"],[3,"_snd_input"],[3,"_snd_output"],[3,"_snd_config"],[3,"_snd_config_iterator"],[3,"_snd_config_update"],[3,"_snd_pcm_info"],[3,"_snd_pcm_hw_params"],[3,"_snd_pcm_sw_params"],[3,"_snd_pcm_status"],[3,"_snd_pcm_access_mask"],[3,"_snd_pcm_format_mask"],[3,"_snd_pcm_subformat_mask"],[3,"_snd_pcm"],[3,"_snd_pcm_scope"],[3,"_snd_pcm_hook"],[3,"_snd_rawmidi_info"],[3,"_snd_rawmidi_params"],[3,"_snd_rawmidi_status"],[3,"_snd_rawmidi"],[3,"_snd_timer_id"],[3,"_snd_timer_ginfo"],[3,"_snd_timer_gparams"],[3,"_snd_timer_gstatus"],[3,"_snd_timer_info"],[3,"_snd_timer_params"],[3,"_snd_timer_status"],[3,"_snd_timer_query"],[3,"_snd_timer"],[3,"_snd_hwdep_info"],[3,"_snd_hwdep_dsp_status"],[3,"_snd_hwdep_dsp_image"],[3,"_snd_hwdep"],[3,"_snd_ctl_card_info"],[3,"_snd_ctl_elem_id"],[3,"_snd_ctl_elem_list"],[3,"_snd_ctl_elem_info"],[3,"_snd_ctl_elem_value"],[3,"_snd_ctl_event"],[3,"_snd_ctl"],[3,"_snd_sctl"],[3,"_snd_hctl_elem"],[3,"_snd_hctl"],[3,"_snd_mixer"],[3,"_snd_mixer_class"],[3,"_snd_mixer_elem"],[3,"_snd_mixer_selem_id"],[3,"_snd_seq"],[3,"_snd_seq_system_info"],[3,"_snd_seq_client_info"],[3,"_snd_seq_client_pool"],[3,"_snd_seq_port_info"],[3,"_snd_seq_port_subscribe"],[3,"_snd_seq_query_subscribe"],[3,"_snd_seq_queue_info"],[3,"_snd_seq_queue_status"],[3,"_snd_seq_queue_tempo"],[3,"_snd_seq_queue_timer"],[3,"_snd_seq_remove_events"],[3,"snd_midi_event"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","t":[4,13,13,13,5,5,11,11,11,11,11,11,11,11,11],"n":["Stream","Stdout","Stderr","Stdin","is","isnt","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","clone"],"q":["atty","","","","","","","","","","","","","",""],"d":["possible stream sources","","","","returns true if this is a tty","returns true if this is <em>not</em> a tty","","","","","","","","",""],"i":[0,1,1,1,0,0,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,[[["stream",4]],["bool",15]],[[["stream",4]],["bool",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[],["stream",4]]],"p":[[4,"Stream"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","t":[5,3,5,5,3,3,4,13,13,5,3,3,4,13,13,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["trace_unsynchronized","Frame","resolve_frame_unsynchronized","resolve_unsynchronized","Symbol","SymbolName","BytesOrWideString","Bytes","Wide","clear_symbol_cache","BacktraceFmt","BacktraceFrameFmt","PrintFmt","Short","Full","trace","resolve","resolve_frame","Backtrace","BacktraceFrame","BacktraceSymbol","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","drop","from","into","clone","clone","clone","clone","clone","default","ip","sp","symbol_address","module_base_address","name","addr","filename_raw","colno","lineno","filename","new","as_str","as_bytes","to_str_lossy","into_path_buf","new","add_context","frame","finish","backtrace_frame","backtrace_symbol","symbol","print_raw","print_raw_with_column","new","new_unresolved","frames","resolve","ip","symbol_address","module_base_address","symbols","name","addr","filename","lineno","colno"],"q":["backtrace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Same as <code>trace</code>, only unsafe as it’s unsynchronized.","A trait representing one frame of a backtrace, yielded to …","Same as <code>resolve_frame</code>, only unsafe as it’s …","Same as <code>resolve</code>, only unsafe as it’s unsynchronized.","A trait representing the resolution of a symbol in a file.","A wrapper around a symbol name to provide ergonomic …","A platform independent representation of a string. When …","A slice, typically provided on Unix platforms.","Wide strings typically from Windows.","Attempt to reclaim that cached memory used to symbolicate …","A formatter for backtraces.","A formatter for just one frame of a backtrace.","The styles of printing that we can print","Prints a terser backtrace which ideally only contains …","Prints a backtrace that contains all possible information","Inspects the current call-stack, passing all active …","Resolve an address to a symbol, passing the symbol to the …","Resolve a previously capture frame to a symbol, passing …","Representation of an owned and self-contained backtrace.","Captured version of a frame in a backtrace.","Captured version of a symbol in a backtrace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current instruction pointer of this frame.","Returns the current stack pointer of this frame.","Returns the starting symbol address of the frame of this …","Returns the base address of the module to which the frame …","Returns the name of this function.","Returns the starting address of this function.","Returns the raw filename as a slice. This is mainly …","Returns the column number for where this symbol is …","Returns the line number for where this symbol is …","Returns the file name where this function was defined.","Creates a new symbol name from the raw underlying bytes.","Returns the raw (mangled) symbol name as a <code>str</code> if the …","Returns the raw symbol name as a list of bytes","Lossy converts to a <code>Cow<str></code>, will allocate if <code>Bytes</code> is …","Provides a <code>Path</code> representation of <code>BytesOrWideString</code>.","Create a new <code>BacktraceFmt</code> which will write output to the …","Prints a preamble for the backtrace about to be printed.","Adds a frame to the backtrace output.","Completes the backtrace output.","Prints a <code>BacktraceFrame</code> with this frame formatter.","Prints a <code>BacktraceSymbol</code> within a <code>BacktraceFrame</code>.","Prints a raw traced <code>Frame</code> and <code>Symbol</code>, typically from …","Adds a raw frame to the backtrace output.","Adds a raw frame to the backtrace output, including …","Captures a backtrace at the callsite of this function, …","Similar to <code>new</code> except that this does not resolve any …","Returns the frames from when this backtrace was captured.","If this backtrace was created from <code>new_unresolved</code> then …","Same as <code>Frame::ip</code>","Same as <code>Frame::symbol_address</code>","Same as <code>Frame::module_base_address</code>","Returns the list of symbols that this frame corresponds …","Same as <code>Symbol::name</code>","Same as <code>Symbol::addr</code>","Same as <code>Symbol::filename</code>","Same as <code>Symbol::lineno</code>","Same as <code>Symbol::colno</code>"],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,3,4,5,1,8,9,10,5,1,2,7,8,8,3,2,8,9,10,8,3,3,3,3,4,4,4,4,4,4,5,5,5,1,1,6,6,6,6,7,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,10],"f":[[[["fnmut",8]]],null,[[["frame",3]]],[[]],null,null,null,null,null,[[]],null,null,null,null,null,[[["fnmut",8]]],[[["fnmut",8]]],[[["frame",3],["fnmut",8]]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["printfmt",4]],["bool",15]],[[]],[[["vec",3],["backtraceframe",3]]],[[],[["vec",3],["backtraceframe",3]]],[[],["frame",3]],[[],["printfmt",4]],[[],["backtrace",3]],[[],["backtraceframe",3]],[[],["backtracesymbol",3]],[[],["backtrace",3]],[[]],[[]],[[]],[[],["option",4]],[[],[["option",4],["symbolname",3]]],[[],["option",4]],[[],[["option",4],["bytesorwidestring",4]]],[[],[["u32",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["path",3]]],[[],["symbolname",3]],[[],[["str",15],["option",4]]],[[]],[[],[["cow",4],["str",15]]],[[],["pathbuf",3]],[[["printfmt",4],["formatter",3],["fnmut",8]]],[[],["result",6]],[[],["backtraceframefmt",3]],[[],["result",6]],[[["backtraceframe",3]],["result",6]],[[["backtracesymbol",3],["backtraceframe",3]],["result",6]],[[["frame",3],["symbol",3]],["result",6]],[[["u32",15],["option",4],["symbolname",3],["option",4],["bytesorwidestring",4],["option",4]],["result",6]],[[["u32",15],["option",4],["symbolname",3],["option",4],["bytesorwidestring",4],["option",4]],["result",6]],[[],["backtrace",3]],[[],["backtrace",3]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[],[["option",4],["symbolname",3]]],[[],["option",4]],[[],[["option",4],["path",3]]],[[],[["u32",15],["option",4]]],[[],[["u32",15],["option",4]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structure."],"i":[0],"f":[null],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,11,10,11,10,10,10,10,10,11,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,4,6,4,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ReadBytesExt","read_u8","read_i8","read_u16","read_i16","read_u24","read_i24","read_u32","read_i32","read_u48","read_i48","read_u64","read_i64","read_u128","read_i128","read_uint","read_int","read_uint128","read_int128","read_f32","read_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i8_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","WriteBytesExt","write_u8","write_i8","write_u16","write_i16","write_u24","write_i24","write_u32","write_i32","write_u48","write_i48","write_u64","write_i64","write_u128","write_i128","write_uint","write_int","write_uint128","write_int128","write_f32","write_f64","ByteOrder","read_u16","read_u24","read_u32","read_u48","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","read_i16","read_i24","read_i32","read_i48","read_i64","read_i128","read_int","read_int128","read_f32","read_f64","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","write_f32","write_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u16_into","write_u32_into","write_u64_into","write_u128_into","write_i8_into","write_i16_into","write_i32_into","write_i64_into","write_i128_into","write_f32_into","write_f64_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_i128","from_slice_f32","from_slice_f64","BigEndian","BE","LittleEndian","LE","NetworkEndian","NativeEndian","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","clone","clone","default","default","cmp","cmp","eq","eq","partial_cmp","partial_cmp","fmt","fmt","hash","hash","read_u8","read_i8","read_u16","read_i16","read_u24","read_i24","read_u32","read_i32","read_u48","read_i48","read_u64","read_i64","read_u128","read_i128","read_uint","read_int","read_uint128","read_int128","read_f32","read_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i8_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u8","write_i8","write_u16","write_i16","write_u24","write_i24","write_u32","write_i32","write_u48","write_i48","write_u64","write_i64","write_u128","write_i128","write_uint","write_int","write_uint128","write_int128","write_f32","write_f64"],"q":["byteorderd":["Extends <code>Read</code> with methods for reading numbers. (For …","Reads an unsigned 8 bit integer from the underlying …","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying …","Reads a signed 16 bit integer from the underlying reader.","Reads an unsigned 24 bit integer from the underlying …","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying …","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 48 bit integer from the underlying …","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying …","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying …","Reads a signed 128 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of IEEE754 single-precision (4 bytes) …","<strong>DEPRECATED</strong>.","Reads a sequence of IEEE754 double-precision (8 bytes) …","<strong>DEPRECATED</strong>.","Extends <code>Write</code> with methods for writing numbers. (For …","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying …","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying …","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying …","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying …","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying …","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying …","Writes a signed 128 bit integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","<code>ByteOrder</code> describes types that can serialize integers as …","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Converts the given slice of unsigned 16 bit integers to a …","Converts the given slice of unsigned 32 bit integers to a …","Converts the given slice of unsigned 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of IEEE754 single-precision (4 …","Converts the given slice of IEEE754 double-precision (8 …","Defines big-endian serialization.","A type alias for <code>BigEndian</code>.","Defines little-endian serialization.","A type alias for <code>LittleEndian</code>.","Defines network byte order serialization.","Defines system native-endian serialization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads an unsigned 8 bit integer from the underlying …","Reads a signed 8 bit integer from the underlying reader.","Reads an unsigned 16 bit integer from the underlying …","Reads a signed 16 bit integer from the underlying reader.","Reads an unsigned 24 bit integer from the underlying …","Reads a signed 24 bit integer from the underlying reader.","Reads an unsigned 32 bit integer from the underlying …","Reads a signed 32 bit integer from the underlying reader.","Reads an unsigned 48 bit integer from the underlying …","Reads a signed 48 bit integer from the underlying reader.","Reads an unsigned 64 bit integer from the underlying …","Reads a signed 64 bit integer from the underlying reader.","Reads an unsigned 128 bit integer from the underlying …","Reads a signed 128 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads an unsigned n-bytes integer from the underlying …","Reads a signed n-bytes integer from the underlying reader.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of IEEE754 single-precision (4 bytes) …","<strong>DEPRECATED</strong>.","Reads a sequence of IEEE754 double-precision (8 bytes) …","<strong>DEPRECATED</strong>.","Writes an unsigned 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying …","Writes a signed 16 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying …","Writes a signed 24 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying …","Writes a signed 32 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying …","Writes a signed 48 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying …","Writes a signed 64 bit integer to the underlying writer.","Writes an unsigned 128 bit integer to the underlying …","Writes a signed 128 bit integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes an unsigned n-bytes integer to the underlying …","Writes a signed n-bytes integer to the underlying writer.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,[[],[["u8",15],["result",6]]],[[],[["i8",15],["result",6]]],[[],[["u16",15],["result",6]]],[[],[["result",6],["i16",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["u128",15],["result",6]]],[[],[["result",6],["i128",15]]],[[["usize",15]],[["result",6],["u64",15]]],[[["usize",15]],[["result",6],["i64",15]]],[[["usize",15]],[["u128",15],["result",6]]],[[["usize",15]],[["result",6],["i128",15]]],[[],[["f32",15],["result",6]]],[[],[["f64",15],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],null,[[["u8",15]],["result",6]],[[["i8",15]],["result",6]],[[["u16",15]],["result",6]],[[["i16",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u128",15]],["result",6]],[[["i128",15]],["result",6]],[[["usize",15],["u64",15]],["result",6]],[[["i64",15],["usize",15]],["result",6]],[[["usize",15],["u128",15]],["result",6]],[[["usize",15],["i128",15]],["result",6]],[[["f32",15]],["result",6]],[[["f64",15]],["result",6]],null,[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i128",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["f32",15]],[[],["f64",15]],[[["i16",15]]],[[["i32",15]]],[[["i32",15]]],[[["i64",15]]],[[["i64",15]]],[[["i128",15]]],[[["i64",15],["usize",15]]],[[["usize",15],["i128",15]]],[[["f32",15]]],[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["littleendian",4]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["u8",15],["result",6]]],[[],[["i8",15],["result",6]]],[[],[["u16",15],["result",6]]],[[],[["result",6],["i16",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["result",6],["u64",15]]],[[],[["result",6],["i64",15]]],[[],[["u128",15],["result",6]]],[[],[["result",6],["i128",15]]],[[["usize",15]],[["result",6],["u64",15]]],[[["usize",15]],[["result",6],["i64",15]]],[[["usize",15]],[["u128",15],["result",6]]],[[["usize",15]],[["result",6],["i128",15]]],[[],[["f32",15],["result",6]]],[[],[["f64",15],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["u8",15]],["result",6]],[[["i8",15]],["result",6]],[[["u16",15]],["result",6]],[[["i16",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u32",15]],["result",6]],[[["i32",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u64",15]],["result",6]],[[["i64",15]],["result",6]],[[["u128",15]],["result",6]],[[["i128",15]],["result",6]],[[["usize",15],["u64",15]],["result",6]],[[["i64",15],["usize",15]],["result",6]],[[["usize",15],["u128",15]],["result",6]],[[["usize",15],["i128",15]],["result",6]],[[["f32",15]],["result",6]],[[["f64",15]],["result",6]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cassowary":{"doc":"This crate contains an implementation of the Cassowary …","t":[0,5,17,17,17,17,5,3,11,3,12,12,3,12,12,11,11,11,11,4,13,13,13,3,11,11,11,11,4,13,13,13,3,4,13,13,13,4,13,13,4,13,13,4,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["strength","create","REQUIRED","STRONG","MEDIUM","WEAK","clip","Variable","new","Term","variable","coefficient","Expression","terms","constant","from_constant","from_term","new","negate","RelationalOperator","LessOrEqual","Equal","GreaterOrEqual","Constraint","new","expr","op","strength","WeightedRelation","EQ","LE","GE","PartialConstraint","AddConstraintError","DuplicateConstraint","UnsatisfiableConstraint","InternalSolverError","RemoveConstraintError","UnknownConstraint","InternalSolverError","AddEditVariableError","DuplicateEditVariable","BadRequiredStrength","RemoveEditVariableError","UnknownEditVariable","InternalSolverError","SuggestValueError","UnknownEditVariable","InternalSolverError","Solver","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","eq","ne","eq","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","div","div","div","div","div","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","mul","mul","mul","mul","mul","mul","neg","neg","neg","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","hash","hash","hash","new","add_constraints","add_constraint","remove_constraint","has_constraint","add_edit_variable","remove_edit_variable","has_edit_variable","suggest_value","fetch_changes","reset","get_value"],"q":["cassowary","cassowary::strength","","","","","","cassowaryd":["Contains useful constants and functions for producing …","Create a constraint as a linear combination of STRONG, …","","","","","Clips a strength value to the legal range","Identifies a variable for the constraint solver. Each new …","Produces a new unique variable for use in constraint …","A variable and a coefficient to multiply that variable …","","","An expression that can be the left hand or right hand …","","","Constructs an expression of the form <em>n</em>, where n is a …","Constructs an expression from a single term. Forms an …","General constructor. Each <code>Term</code> in <code>terms</code> is part of the …","Mutates this expression by multiplying it by minus one.","The possible relations that a constraint can specify.","<code><=</code>","<code>==</code>","<code>>=</code>","A constraint, consisting of an equation governed by an …","Construct a new constraint from an expression, a …","The expression of the left hand side of the constraint …","The relational operator governing the constraint.","The strength of the constraint that the solver will use.","This is part of the syntactic sugar used for specifying …","<code>==</code>","<code><=</code>","<code>>=</code>","This is an intermediate type used in the syntactic sugar …","The possible error conditions that <code>Solver::add_constraint</code> …","The constraint specified has already been added to the …","The constraint is required, but it is unsatisfiable in …","The solver entered an invalid state. If this occurs …","The possible error conditions that …","The constraint specified was not already in the solver, …","The solver entered an invalid state. If this occurs …","The possible error conditions that …","The specified variable is already marked as an edit …","The specified strength was <code>REQUIRED</code>. This is illegal for …","The possible error conditions that …","The specified variable was not an edit variable in the …","The solver entered an invalid state. If this occurs …","The possible error conditions that <code>Solver::suggest_value</code> …","The specified variable was not an edit variable in the …","The solver entered an invalid state. If this occurs …","A constraint solver using the Cassowary algorithm. For …onstruct a new solver.","","Add a constraint to the solver.","Remove a constraint from the solver.","Test whether a constraint has been added to the solver.","Add an edit variable to the solver.","Remove an edit variable from the solver.","Test whether an edit variable has been added to the …","Suggest a value for the given edit variable.","Fetches all changes to the values of variables since the …","Reset the solver to the empty starting condition.","Get the stored value for a variable."],"i":[0,0,0,0,0,0,0,0,1,0,2,2,0,3,3,3,3,3,3,0,4,4,4,0,5,5,5,5,0,6,6,6,0,0,7,7,7,0,8,8,0,9,9,0,10,10,0,11,11,0,12,12,12,12,12,12,12,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,13,13,13,13,13,13,13,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,3,3,3,1,2,3,4,5,7,8,9,10,11,1,4,1,1,4,5,1,4,1,2,3,4,5,7,8,9,10,11,4,1,1,2,2,3,3,1,1,1,1,2,1,3,2,2,2,2,3,3,3,3,1,1,1,1,2,1,3,2,2,2,2,3,3,3,3,1,1,2,2,3,3,1,2,3,1,2,3,13,13,13,13,13,1,4,5,12,12,12,12,12,12,12,12,12,12,12,12],"f":[null,[[["f64",15]],["f64",15]],null,null,null,null,[[["f64",15]],["f64",15]],null,[[],["variable",3]],null,null,null,null,null,null,[[["f64",15]],["expression",3]],[[["term",3]],["expression",3]],[[["f64",15],["vec",3],["term",3]],["expression",3]],[[]],null,null,null,null,null,[[["f64",15],["expression",3],["relationaloperator",4]],["constraint",3]],[[],["expression",3]],[[],["relationaloperator",4]],[[],["f64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["f64",15]],["expression",3]],[[["variable",3]],["expression",3]],[[["term",3]],["expression",3]],[[],["variable",3]],[[],["term",3]],[[],["expression",3]],[[],["relationaloperator",4]],[[],["constraint",3]],[[],["addconstrainterror",4]],[[],["removeconstrainterror",4]],[[],["addeditvariableerror",4]],[[],["removeeditvariableerror",4]],[[],["suggestvalueerror",4]],[[["variable",3]],["ordering",4]],[[["relationaloperator",4]],["ordering",4]],[[["variable",3]],["bool",15]],[[["variable",3]],["bool",15]],[[["relationaloperator",4]],["bool",15]],[[["constraint",3]],["bool",15]],[[["variable",3]],[["ordering",4],["option",4]]],[[["relationaloperator",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["f64",15]],["term",3]],[[["f32",15]],["term",3]],[[["f64",15]],["term",3]],[[["f32",15]],["term",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["variable",3]],["expression",3]],[[["term",3]],["expression",3]],[[["variable",3]],["expression",3]],[[["expression",3]],["expression",3]],[[["variable",3]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["term",3]],["expression",3]],[[["expression",3]],["expression",3]],[[["term",3]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["expression",3]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["variable",3]],["expression",3]],[[["term",3]],["expression",3]],[[["variable",3]],["expression",3]],[[["expression",3]],["expression",3]],[[["variable",3]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["term",3]],["expression",3]],[[["expression",3]],["expression",3]],[[["term",3]],["expression",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[["expression",3]],["expression",3]],[[["f64",15]],["term",3]],[[["f32",15]],["term",3]],[[["f64",15]],["term",3]],[[["f32",15]],["term",3]],[[["f64",15]],["expression",3]],[[["f32",15]],["expression",3]],[[],["term",3]],[[],["term",3]],[[],["expression",3]],[[["weightedrelation",4]],["partialconstraint",3]],[[["weightedrelation",4]],["partialconstraint",3]],[[["weightedrelation",4]],["partialconstraint",3]],[[["f64",15]],["constraint",3]],[[["f32",15]],["constraint",3]],[[["variable",3]],["constraint",3]],[[["term",3]],["constraint",3]],[[["expression",3]],["constraint",3]],[[]],[[]],[[]],[[],["solver",3]],[[["intoiterator",8]],[["result",4],["addconstrainterror",4]]],[[["constraint",3]],[["result",4],["addconstrainterror",4]]],[[["constraint",3]],[["result",4],["removeconstrainterror",4]]],[[["constraint",3]],["bool",15]],[[["f64",15],["variable",3]],[["addeditvariableerror",4],["result",4]]],[[["variable",3]],[["removeeditvariableerror",4],["result",4]]],[[["variable",3]],["bool",15]],[[["f64",15],["variable",3]],[["suggestvalueerror",4],["result",4]]],[[]],[[]],[[["variable",3]],["f64",15]]],"p":[[3,"Variable"],[3,"Term"],[3,"Expression"],[4,"RelationalOperator"],[3,"Constraint"],[4,"WeightedRelation"],[4,"AddConstraintError"],[4,"RemoveConstraintError"],[4,"AddEditVariableError"],[4,"RemoveEditVariableError"],[4,"SuggestValueError"],[3,"Solver"],[3,"PartialConstraint"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"clap":{"doc":"https://github.com/clap-rs/clap","t":[3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,3,3,3,3,8,18,10,8,11,11,11,11,8,10,8,10,10,8,10,10,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["App","AppSettings","AllowInvalidUtf8","AllowLeadingHyphen","AllArgsOverrideSelf","AllowNegativeNumbers","AllowMissingPositional","AllowExternalSubcommands","ArgsNegateSubcommands","ArgRequiredElseHelp","SubcommandPrecedenceOverArg","ColoredHelp","ColorAuto","ColorAlways","ColorNever","DontCollapseArgsInUsage","DontDelimitTrailingValues","DisableHelpFlags","DisableHelpSubcommand","DisableVersion","DeriveDisplayOrder","GlobalVersion","Hidden","HidePossibleValuesInHelp","HelpRequired","InferSubcommands","NoBinaryName","NextLineHelp","SubcommandsNegateReqs","SubcommandRequiredElseHelp","StrictUtf8","SubcommandRequired","TrailingVarArg","UnifiedHelpMessage","VersionlessSubcommands","WaitOnError","NoAutoHelp","NoAutoVersion","Arg","ArgGroup","ArgSettings","Required","MultipleValues","MultipleOccurrences","AllowEmptyValues","Hidden","TakesValue","UseValueDelimiter","NextLineHelp","RequireDelimiter","HidePossibleValues","AllowHyphenValues","RequireEquals","Last","HideDefaultValue","IgnoreCase","HideEnvValues","HiddenShortHelp","HiddenLongHelp","ValueHint","Unknown","Other","AnyPath","FilePath","DirPath","ExecutablePath","CommandName","CommandString","CommandWithArguments","Username","Hostname","Url","EmailAddress","Error","kind","info","ErrorKind","InvalidValue","UnknownArgument","InvalidSubcommand","UnrecognizedSubcommand","EmptyValue","ValueValidation","TooManyValues","TooFewValues","WrongNumberOfValues","ArgumentConflict","MissingRequiredArgument","MissingSubcommand","MissingArgumentOrSubcommand","UnexpectedMultipleUsage","InvalidUtf8","DisplayHelp","DisplayVersion","ArgumentNotFound","Io","Format","Result","ArgMatches","Indices","OsValues","Values","ArgEnum","VARIANTS","from_str","Clap","parse","try_parse","parse_from","try_parse_from","FromArgMatches","from_arg_matches","IntoApp","into_app","augment_clap","Subcommand","from_subcommand","augment_subcommands","crate_version","crate_authors","crate_description","crate_name","app_from_crate","clap_app","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","from","from","next_back","next_back","next_back","next","size_hint","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","cmp","eq","eq","eq","eq","eq","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_str","from_str","from_str","parse","try_parse","parse_from","try_parse_from","VARIANTS","get_name","get_short_flag","get_long_flag","get_bin_name","set_bin_name","get_about","get_visible_aliases","get_visible_short_flag_aliases","get_visible_long_flag_aliases","get_all_aliases","get_all_short_flag_aliases","get_all_long_flag_aliases","get_subcommands","get_subcommands_mut","get_arguments","get_positionals","get_flags_with_no_heading","get_opts_with_no_heading","get_arg_conflicts_with","is_set","has_subcommands","find_subcommand","new","author","bin_name","about","long_about","name","after_help","after_long_help","before_help","before_long_help","short_flag","long_flag","version","long_version","override_usage","override_help","help_template","setting","unset_setting","global_setting","unset_global_setting","term_width","max_term_width","arg","help_heading","stop_custom_headings","args","alias","short_flag_alias","long_flag_alias","aliases","short_flag_aliases","long_flag_aliases","visible_alias","visible_short_flag_alias","visible_long_flag_alias","visible_aliases","visible_short_flag_aliases","visible_long_flag_aliases","replace","group","groups","subcommand","subcommands","display_order","mut_arg","print_help","print_long_help","write_help","write_long_help","render_version","render_long_version","generate_usage","get_matches","get_matches_mut","try_get_matches","get_matches_from","try_get_matches_from","try_get_matches_from_mut","subcommand_placeholder","get_name","get_about","get_help_heading","get_short","get_visible_short_aliases","get_long","get_possible_values","get_index","get_value_hint","new","short","long","alias","short_alias","aliases","short_aliases","visible_alias","visible_short_alias","visible_aliases","visible_short_aliases","about","long_about","required_unless_present","required_unless_present_all","required_unless_present_any","conflicts_with","conflicts_with_all","exclusive","overrides_with","overrides_with_all","requires","requires_if","requires_ifs","required_if_eq","required_if_eq_any","requires_all","index","value_terminator","possible_values","possible_value","group","groups","number_of_values","validator","validator_os","max_values","min_values","value_delimiter","value_names","value_name","default_value","default_value_os","default_values","default_values_os","default_missing_value","default_missing_value_os","default_missing_values","default_missing_values_os","default_value_if","default_value_if_os","default_value_ifs","default_value_ifs_os","env","env_os","display_order","last","required","takes_value","allow_hyphen_values","require_equals","global","require_delimiter","hide_possible_values","hide_default_value","hidden","case_insensitive","use_delimiter","hide_env_values","next_line_help","multiple","multiple_values","multiple_occurrences","raw","hidden_short_help","hidden_long_help","is_set","setting","settings","unset_setting","help_heading","value_hint","new","arg","args","multiple","required","requires","requires_all","conflicts_with","conflicts_with_all","use_stderr","exit","with_description","value_of","value_of_lossy","value_of_os","values_of","values_of_lossy","values_of_os","value_of_t","value_of_t_or_exit","values_of_t","values_of_t_or_exit","is_present","occurrences_of","index_of","indices_of","subcommand_matches","subcommand_name","subcommand"],"q":["clapd":["Represents a command line interface which is made up of …","Application level settings, which affect how <code>App</code> operates","Specifies that any invalid UTF-8 code points should <em>not</em> …","Specifies that leading hyphens are allowed in argument <em>…","Specifies that all arguments override themselves. This is …","Allows negative numbers to pass as values. This is …","Allows one to implement two styles of CLIs where …","Specifies that an unexpected positional argument, which …","Specifies that use of a valid argument negates [subcomands…","Specifies that the help text should be displayed (and …","Instructs the parser to stop when encountering a …","Uses colorized help messages.","Enables colored output only when the output is going to a …","Enables colored output regardless of whether or not the …","Disables colored output no matter if the output is going …","Disables the automatic collapsing of positional args into …","Disables the automatic delimiting of values when <code>--</code> or …","Disables <code>-h</code> and <code>--help</code> <code>App</code> without affecting any of the …","Disables the <code>help</code> subcommand","Disables <code>-V</code> and <code>--version</code> <code>App</code> without affecting any of …","Displays the arguments and ``s in the help message in the …","Specifies to use the version of the current command for …","Specifies that this `` should be hidden from help messages","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Tells <code>clap</code> to panic if help strings are omitted","Tries to match unknown args to partial <code>subcommands</code> or …","Specifies that the parser should not assume the first …","Places the help string for all arguments on the line …","Allows ``s to override all requirements of the parent …","Specifies that the help text should be displayed (before …","Specifies that any invalid UTF-8 code points should be …","Allows specifying that if no `` is present at runtime, …","Specifies that the final positional argument is a “…","Groups flags and options together, presenting a more …","Disables <code>-V</code> and <code>--version</code> for all ``s (Defaults to <code>false</code>; …","Will display a message “Press [ENTER]/[RETURN] to …","@TODO-v3: @docs write them…maybe rename","@TODO-v3: @docs write them…maybe rename","The abstract representation of a command line argument. …","<code>ArgGroup</code>s are a family of related arguments and way for …","Various settings that apply to arguments and may be set, …","Specifies that an arg must be used","Allows an arg to accept multiple values","Allows an arg to appear multiple times","Allows an arg accept empty values such as <code>\\\"\\\"</code>","Hides an arg from the help message","Allows an argument to take a value (such as <code>--option value</code>…","Enables a delimiter to break up arguments …","Tells an arg to display it’s help on the line below the …","Says that arg <em>must</em> use a delimiter to separate values","Hides the possible values from the help message","Allows values that start with a hyphen","Requires that an equals be used to provide a value to an …","Says that a positional arg will be the last positional, …","Hides the default value from the help message","Possible values become case insensitive","Hides any values currently assigned to ENV variables in …","The argument should <strong>not</strong> be shown in short help text","The argument should <strong>not</strong> be shown in long help text","Provides hints about argument types for shell command …","Default value if hint is not specified. Follows shell …","None of the hints below apply. Disables shell completion …","Any existing path.","Path to a file.","Path to a directory.","Path to an executable file.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","Name of a local operating system user.","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","Complete web address.","Email address.","Command Line Argument Parser Error","The type of error","Additional information depending on the error kind, like …","Command line argument parser kind of error","Occurs when an <code>Arg</code> has a set of possible values, and the …","Occurs when a user provides a flag, option, argument or …","Occurs when the user provides an unrecognized [``] which …","Occurs when the user provides an unrecognized `` which …","Occurs when the user provides an empty value for an …","Occurs when the user provides a value for an argument …","Occurs when a user provides more values for an argument …","Occurs when the user provides fewer values for an …","Occurs when the user provides a different number of …","Occurs when the user provides two values which conflict …","Occurs when the user does not provide one or more …","Occurs when a subcommand is required (as defined by …","Occurs when either an argument or `` is required, as …","Occurs when the user provides multiple values to an …","Occurs when the user provides a value containing invalid …","Not a true “error” as it means <code>--help</code> or similar was …","Not a true “error” as it means <code>--version</code> or similar …","Occurs when using the [<code>ArgMathes::value_of_t</code>] and friends …","Represents an [I/O error]. Can occur when writing to …","Represents a Format error (which is a part of <code>Display</code>). …","Short hand for <code>Result</code> type","Used to get information about the arguments that were …","An iterator for getting multiple indices out of an …","An iterator for getting multiple values out of an …","An iterator for getting multiple values out of an …","@TODO @release @docs","@TODO @release @docs","@TODO @release @docs","The primary one-stop-shop trait used to create an …","Parse from <code>std::env::args_os()</code>, exit on error","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, exit on error","Parse from iterator, return Err on error.","Converts an instance of <code>ArgMatches</code> to a consumer defined …","It’s common to have an “application context” struct …","Build an App according to the struct","@TODO @release @docs","@TODO @release @docs","@TODO @release @docs","@TODO @release @docs","@TODO @release @docs","Allows you to pull the version from your Cargo.toml at …","Allows you to pull the authors for the app from your …","Allows you to pull the description from your Cargo.toml …","Allows you to pull the name from your Cargo.toml at …","Allows you to build the <code>App</code> instance from your Cargo.toml …","Build <code>App</code>, <code>Arg</code> and <code>Group</code> with Usage-string like input but …arse from <code>std::env::args_os()</code>, exit on error","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, exit on error","Parse from iterator, return Err on error.","@TODO @release @docs","Get the name of the app.","Get the short flag of the subcommand.","Get the long flag of the subcommand.","Get the name of the binary.","Set binary name. Uses <code>&mut self</code> instead of <code>self</code>.","Get the help message specified via <code>App::about</code>.","Iterate through the <em>visible</em> aliases for this subcommand.","Iterate through the <em>visible</em> short aliases for this …","Iterate through the <em>visible</em> short aliases for this …","Iterate through the set of <em>all</em> the aliases for this …","Iterate through the set of <em>all</em> the short aliases for this …","Iterate through the set of <em>all</em> the long aliases for this …","Iterate through the set of subcommands, getting a …","Iterate through the set of subcommands, getting a mutable …","Iterate through the set of arguments.","Get the list of <em>positional</em> arguments.","Iterate through the <em>flags</em> that don’t have custom …","Iterate through the <em>options</em> that don’t have custom …","Get a list of all arguments the given argument conflicts …","Returns <code>true</code> if the given <code>AppSettings</code> variant is …","Returns <code>true</code> if this <code>App</code> has subcommands.","Find subcommand such that its name or one of aliases …","Creates a new instance of an <code>App</code> requiring a <code>name</code>.","Sets a string of author(s) that will be displayed to the …","Overrides the runtime-determined name of the binary. This …","Sets a string describing what the program does. This will …","Sets a long format string describing what the program …","(Re)Sets the program’s name. This will be displayed …","Adds additional help information to be displayed at the …","Adds additional help information to be displayed in …","Adds additional help information to be displayed prior to …","Adds additional help information to be displayed prior to …","Allows the subcommand to be used as if it were an …","Allows the subcommand to be used as if it were an …","Sets a string of the version number to be displayed when …","Sets a string of the version number to be displayed when …","Overrides the <code>clap</code> generated usage string.","Overrides the <code>clap</code> generated help message. This should …","Sets the help template to be used, overriding the default …","Enables a single settings for the current (this <code>App</code> …","Disables a single setting for the current (this <code>App</code> …","Enables a single setting that is propagated <strong>down</strong> through …","Disables a global setting, and stops propagating down to …","Sets the terminal width at which to wrap help messages. …","Sets the maximum terminal width at which to wrap help …","Adds an argument to the list of valid possibilities.","Set a custom section heading for future args. Every call …","Stop using custom argument headings and return to default …","Adds multiple arguments to the list of valid …","If this <code>App</code> instance is a subcommand, this method adds an …","Allows adding an alias, which function as “hidden” …","Allows adding an alias, which function as “hidden” …","If this <code>App</code> instance is a subcommand, this method adds a …","Allows adding aliases, which function as “hidden” …","Allows adding aliases, which function as “hidden” …","If this <code>App</code> instance is a subcommand, this method adds a …","Allows adding an alias that functions exactly like those …","Allows adding an alias that functions exactly like those …","If this <code>App</code> instance is a subcommand, this method adds …","Allows adding multiple short flag aliases that functions …","Allows adding multiple long flag aliases that functions …","Replaces an argument or subcommand used on the CLI at …","Adds an <code>ArgGroup</code> to the application. <code>ArgGroup</code>s are a …","Adds multiple <code>ArgGroup</code>s to the <code>App</code> at once.","Adds a subcommand to the list of valid possibilities. …","Adds multiple subcommands to the list of valid …","Allows custom ordering of subcommands within the help …","Allows one to mutate an <code>Arg</code> after it’s been added to an …","Prints the full help message to <code>io::stdout()</code> using a […","Prints the full help message to <code>io::stdout()</code> using a …","Writes the full help message to the user to a <code>io::Write</code> …","Writes the full help message to the user to a <code>io::Write</code> …","Returns the version message rendered as if the user ran <code>-V</code>…","Returns the version message rendered as if the user ran …","@TODO-v3-alpha @docs @p2: write docs","Starts the parsing process, upon a failed parse an error …","Starts the parsing process, just like <code>App::get_matches</code> …","Starts the parsing process. This method will return a …","Starts the parsing process. Like <code>App::get_matches</code> this …","Starts the parsing process. A combination of …","Starts the parsing process without consuming the <code>App</code> …","Sets the placeholder text used for subcommands when …","Get the name of the argument","Get the help specified for this argument, if any","Get the help heading specified for this argument, if any","Get the short option name for this argument, if any","Get visible short aliases for this argument, if any","Get the long option name for this argument, if any","Get the list of the possible values for this argument, if …","Get the index of this argument, if any","Get the value hint of this argument","Creates a new instance of <code>Arg</code> using a unique string name. …","Sets the short version of the argument without the …","Sets the long version of the argument without the …","Allows adding a <code>Arg</code> alias, which function as “hidden” …","Allows adding a <code>Arg</code> alias, which function as “hidden” …","Allows adding <code>Arg</code> aliases, which function as “hidden” …","Allows adding <code>Arg</code> aliases, which function as “hidden” …","Allows adding a <code>Arg</code> alias that functions exactly like …","Allows adding a <code>Arg</code> alias that functions exactly like …","Allows adding multiple <code>Arg</code> aliases that functions exactly …","Allows adding multiple <code>Arg</code> aliases that functions exactly …","Sets the short help text of the argument that will be …","Sets the long help text of the argument that will be …","Set this arg as required as long as the specified …","Sets this arg as [required] unless <em>all</em> of the specified …","Sets this arg as required unless <em>any</em> of the specified …","Sets a conflicting argument by name. I.e. when using this …","The same as <code>Arg::conflicts_with</code> but allows specifying …","Set an exclusive argument by name. An exclusive argument …","Sets an overridable argument by name. I.e. this argument …","Sets multiple mutually overridable arguments by name. …","Sets an argument by name that is required when this one …","Require another argument if this arg was present on …","Allows multiple conditional requirements. The requirement …","Allows specifying that this argument is required only if …","Allows specifying that this argument is required based on …","Sets multiple arguments by names that are required when …","Specifies the index of a positional argument <strong>starting at</strong> …","Specifies a value that <em>stops</em> parsing multiple values of a …","Specifies a list of possible values for this argument. At …","Specifies a possible value for this argument, one at a …","Specifies the name of the <code>ArgGroup</code> the argument belongs …","Specifies the names of multiple <code>ArgGroup</code>’s the argument …","Specifies how many values are required to satisfy this …","Allows one to perform a custom validation on the argument …","Works identically to Validator but is intended to be used …","Specifies the <em>maximum</em> number of values are for this …","Specifies the <em>minimum</em> number of values for this argument. …","Specifies the separator to use when values are clumped …","Specify multiple names for values of option arguments. …","Specifies the name for value of option or positional …","Specifies the value of the argument when <em>not</em> specified at …","Provides a default value in the exact same manner as […","Like […","Provides default values in the exact same manner as […","Specifies a value for the argument when the argument is …","Provides a default value in the exact same manner as […","Like […","Provides default values in the exact same manner as […","Specifies the value of the argument if <code>arg</code> has been used …","Provides a conditional default value in the exact same …","Specifies multiple values and conditions in the same …","Provides multiple conditional default values in the exact …","Specifies that if the value is not passed in as an …","Specifies that if the value is not passed in as an …","Allows custom ordering of args within the help message. …","Specifies that this arg is the last, or final, positional …","Specifies that the argument is required by default. …","Specifies that the argument takes a value at run time.","Allows values which start with a leading hyphen (<code>-</code>)","Requires that options use the <code>--option=val</code> syntax (i.e. …","Specifies that an argument can be matched to all child ``…","Specifies that <em>multiple values</em> may only be set using the …","Specifies if the possible values of an argument should be …","Specifies that the default value of an argument should …","Hides an argument from help message output.","When used with [<code>Arg::possible_values</code>] it allows the …","Specifies that an argument should allow grouping of …","Specifies that any values inside the associated ENV …","When set to <code>true</code> the help string will be displayed on the …","Specifies that the argument may have an unknown number of …","Allows an argument to accept explicitly empty values. An …","Specifies that the argument may appear more than once. …","Indicates that all parameters passed after this should …","Hides an argument from short help message output.","Hides an argument from long help message output.","Checks if one of the [<code>ArgSettings</code>] is set for the argument…","Sets one of the [<code>ArgSettings</code>] settings for the argument […","Sets multiple [<code>ArgSettings</code>] for the argument [<code>ArgSettings</code>]…","Unsets one of the [<code>ArgSettings</code>] for the argument […","Set a custom heading for this arg to be printed under","Sets a hint about the type of the value for shell …","Creates a new instance of <code>ArgGroup</code> using a unique string …","Adds an argument to this group by name","Adds multiple arguments to this group by name","Allows more than one of the ‘Arg’s in this group to …","Sets the group as required or not. A required group will …","Sets the requirement rules of this group. This is not to …","Sets the requirement rules of this group. This is not to …","Sets the exclusion rules of this group. Exclusion (aka …","Sets the exclusion rules of this group. Exclusion rules …","Should the message be written to <code>stdout</code> or not","Prints the error to <code>stderr</code> and exits with a status of <code>1</code>","Create an error with a custom description.","Gets the value of a specific option or positional …","Gets the lossy value of a specific argument. If the …","Gets the OS version of a string value of a specific …","Gets a <code>Values</code> struct which implements <code>Iterator</code> for values …","Gets the lossy values of a specific argument. If the …","Gets a [<code>OsValues</code>] struct which is implements [<code>Iterator</code>] …","Gets the value of a specific argument (i.e. an argument …","Gets the value of a specific argument (i.e. an argument …","Gets the typed values of a specific argument (i.e. an …","Gets the typed values of a specific argument (i.e. an …","Returns <code>true</code> if an argument was present at runtime, …","Returns the number of times an argument was used at …","Gets the starting index of the argument in respect to all …","Gets all indices of the argument in respect to all other …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","Because <code>Subcommand</code>s are essentially “sub-<code>App</code>s” they …","This brings together <code>ArgMatches::subcommand_matches</code> and …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,6,6,0,7,7,7,7,0,8,0,9,9,0,10,10,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,12,12,13,4,4,15,16,17,15,15,16,16,17,17,1,11,2,3,12,13,5,14,15,16,17,11,3,12,13,14,15,16,17,12,1,2,3,12,5,12,1,11,2,3,12,13,5,4,14,11,12,4,1,2,3,7,7,7,7,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,4,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["str",15]],[["result",4],["string",3]]],null,[[]],[[],[["error",3],["result",4]]],[[]],[[],[["error",3],["result",4]]],null,[[["argmatches",3]]],null,[[],["app",3]],[[["app",3]],["app",3]],null,[[["option",4]],["option",4]],[[["app",3]],["app",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["arg",3]]],[[["str",15]]],[[["arggroup",3]]],[[["error",3]]],[[["error",3]]],[[],[["option",4],["str",15]]],[[],[["osstr",3],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["option",4],["str",15]]],[[]],[[],[["osstr",3],["option",4]]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],["appsettings",4]],[[],["app",3]],[[],["argsettings",4]],[[],["valuehint",4]],[[],["arg",3]],[[]],[[],["errorkind",4]],[[],["argmatches",3]],[[],["values",3]],[[],["osvalues",3]],[[],["indices",3]],[[],["app",3]],[[]],[[],["arg",3]],[[],["arggroup",3]],[[]],[[]],[[]],[[]],[[["arg",3]],["ordering",4]],[[["appsettings",4]],["bool",15]],[[["argsettings",4]],["bool",15]],[[["valuehint",4]],["bool",15]],[[["arg",3]],["bool",15]],[[["errorkind",4]],["bool",15]],[[],[["option",4],["ordering",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[],[["error",3],["result",4]]],[[]],[[],[["error",3],["result",4]]],null,[[],["str",15]],[[],[["char",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[["into",8],["string",3]]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arg",3]],[["arg",3],["vec",3]]],[[["appsettings",4]],["bool",15]],[[],["bool",15]],[[],[["option",4],["app",3]]],[[["into",8],["string",3]]],[[["into",8],["str",15]]],[[["into",8],["string",3]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["string",3]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["char",15]]],[[["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["into",8],["str",15]]],[[["appsettings",4]]],[[["appsettings",4]]],[[["appsettings",4]]],[[["appsettings",4]]],[[["usize",15]]],[[["usize",15]]],[[["into",8],["arg",3]]],[[["str",15]]],[[]],[[]],[[["into",8],["str",15]]],[[["char",15]]],[[["str",15]]],[[]],[[]],[[]],[[["into",8],["str",15]]],[[["char",15]]],[[["str",15]]],[[]],[[]],[[]],[[["str",15]]],[[["arggroup",3]]],[[]],[[["app",3]]],[[]],[[["usize",15]]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["argmatches",3]],[[],["argmatches",3]],[[],[["argmatches",3],["clapresult",6]]],[[],["argmatches",3]],[[],[["argmatches",3],["clapresult",6]]],[[],[["argmatches",3],["clapresult",6]]],[[]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["option",4],["str",15]]],[[],[["char",15],["option",4]]],[[],[["option",4],["vec",3]]],[[],[["option",4],["str",15]]],[[],["option",4]],[[],[["option",4],["u64",15]]],[[],["valuehint",4]],[[["into",8],["str",15]]],[[["char",15]]],[[["str",15]]],[[["into",8],["str",15]]],[[["char",15]]],[[]],[[]],[[["into",8],["str",15]]],[[["char",15]]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[["key",8]]],[[]],[[]],[[["key",8]]],[[]],[[["bool",15]]],[[["key",8]]],[[]],[[["key",8]]],[[["str",15],["key",8]]],[[]],[[["str",15],["key",8]]],[[]],[[]],[[["u64",15]]],[[["str",15]]],[[]],[[["str",15]]],[[["key",8]]],[[]],[[["u64",15]]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[["str",15]]],[[]],[[["str",15]]],[[["str",15]]],[[["osstr",3]]],[[]],[[]],[[["str",15]]],[[["osstr",3]]],[[]],[[]],[[["str",15],["option",4],["key",8]]],[[["option",4],["key",8],["osstr",3]]],[[]],[[]],[[["str",15]]],[[["osstr",3]]],[[["usize",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["argsettings",4]],["bool",15]],[[["argsettings",4]]],[[]],[[["argsettings",4]]],[[["str",15],["option",4]]],[[["valuehint",4]]],[[["into",8],["str",15]]],[[["key",8]]],[[]],[[["bool",15]]],[[["bool",15]]],[[["key",8]]],[[]],[[["key",8]]],[[]],[[],["bool",15]],[[]],[[["string",3],["errorkind",4]]],[[["key",8]],[["option",4],["str",15]]],[[["key",8]],[["cow",4],["option",4]]],[[["key",8]],[["osstr",3],["option",4]]],[[["key",8]],[["option",4],["values",3]]],[[["key",8]],[["option",4],["vec",3]]],[[["key",8]],[["option",4],["osvalues",3]]],[[["str",15]],[["result",4],["error",3]]],[[["str",15]]],[[["str",15]],[["vec",3],["result",4],["error",3]]],[[["str",15]],["vec",3]],[[["key",8]],["bool",15]],[[["key",8]],["u64",15]],[[["key",8]],[["usize",15],["option",4]]],[[["key",8]],[["indices",3],["option",4]]],[[["key",8]],[["option",4],["argmatches",3]]],[[],[["option",4],["str",15]]],[[],["option",4]]],"p":[[4,"AppSettings"],[4,"ArgSettings"],[4,"ValueHint"],[3,"Error"],[4,"ErrorKind"],[8,"ArgEnum"],[8,"Clap"],[8,"FromArgMatches"],[8,"IntoApp"],[8,"Subcommand"],[3,"App"],[3,"Arg"],[3,"ArgGroup"],[3,"ArgMatches"],[3,"Values"],[3,"OsValues"],[3,"Indices"]]},\
"clap_derive":{"doc":"This crate is custom derive for clap. It should not be …","t":[24,24,24,24],"n":["ArgEnum","Clap","IntoApp","Subcommand"],"q":["clap_derive","","",""],"d":["Generates the <code>ArgEnum</code> impl.","Generates the <code>Clap</code> implementation.","Generates the <code>IntoApp</code> impl.","Generates the <code>Subcommand</code> impl."],"i":[0,0,0,0],"f":[null,null,null,null],"p":[]},\
"claxon":{"doc":"Claxon, a FLAC decoding library.","t":[0,3,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,0,3,11,11,8,10,10,10,10,11,11,11,11,11,3,11,11,11,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,3,12,12,12,3,3,12,12,4,13,13,12,13,12,12,13,13,13,13,13,3,11,3,11,5,5,3,6,11,0,5,5,4,13,13,13,6,3,3,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["frame","Block","empty","time","len","duration","channels","channel","sample","into_buffer","stereo_samples","StereoSamples","FrameReader","FrameResult","new","read_next_or_eof","into_inner","input","BufferedReader","new","into_inner","ReadBytes","read_u8","read_u8_or_eof","read_into","skip","read_be_u16","read_be_u16_or_eof","read_be_u24","read_be_u32","read_le_u32","Bitstream","new","read_bit","read_unary","read_leq_u8","read_gt_u8_leq_u16","read_leq_u16","read_leq_u32","metadata","StreamInfo","min_block_size","max_block_size","min_frame_size","max_frame_size","sample_rate","channels","bits_per_sample","samples","md5sum","SeekPoint","sample","offset","samples","SeekTable","VorbisComment","vendor","comments","MetadataBlock","StreamInfo","Padding","length","Application","id","data","SeekTable","VorbisComment","CueSheet","Picture","Reserved","Tags","new","GetTag","new","read_metadata_block_with_header","read_metadata_block","MetadataBlockReader","MetadataBlockResult","new","subframe","extend_sign_u32","decode","Error","IoError","FormatError","Unsupported","Result","FlacReader","FlacReaderOptions","metadata_only","read_vorbis_comment","FlacSamples","new","new_ext","streaminfo","vendor","tags","get_tag","blocks","samples","into_inner","open","open_ext","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","read_u8","read_u8_or_eof","read_into","skip","from","from","next","next","size_hint","next","next","size_hint","next","clone","clone","clone","default","eq","eq","ne","fmt","fmt","fmt","fmt","description","cause"],"q":["claxon","claxon::frame","","","","","","","","","","","","","","","","claxon","claxon::input","","","","","","","","","","","","","","","","","","","","","claxon","claxon::metadata","","","","","","","","","","","","","","","","","","","","","claxon::metadata::MetadataBlock","claxon::metadata","claxon::metadata::MetadataBlock","","claxon::metadata","","","","","","","","","","","","","","claxon","claxon::subframe","","claxon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","claxon::frame","","","","","","","","","","","","","","","","","","","","","","claxon::input","","","","","","","","","","","","","","claxon::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","claxon","","","","","","","","","","","","","","","","","","","","","","","","claxon::input","","","","claxon","","claxon::frame","claxon::metadata","","","","","claxon","claxon::metadata","","claxon","","","","","","claxon::metadata","claxon","","",""],"d":["The <code>frame</code> module deals with the frames that make up a …","A block of raw audio samples.","Returns a block with 0 channels and 0 samples.","Returns the inter-channel sample number of the first …","Returns the total number of samples in this block.","Returns the number of inter-channel samples in the block.","Returns the number of channels in the block.","Returns the (zero-based) <code>ch</code>-th channel as a slice.","Returns a sample in this block.","Returns the underlying buffer that stores the samples in …","Returns an iterator that produces left and right channel …","An iterator over the stereo sample pairs in a block.","Reads frames from a stream and exposes decoded blocks as …","Either a <code>Block</code> or an <code>Error</code>.","Creates a new frame reader that will yield at least one …","Decodes the next frame or returns an error if the data …","Destroy the frame reader, returning the wrapped reader.","Exposes traits that help reading data at the bit level …","Similar to <code>std::io::BufRead</code>, but more performant.","Wrap the reader in a new buffered reader.","Destroys the buffered reader, returning the wrapped …","Provides convenience methods to make input less …","Reads a single byte, failing on EOF.","Reads a single byte, not failing on EOF.","Reads until the provided buffer is full.","Skips over the specified number of bytes.","Reads two bytes and interprets them as a big-endian …","Reads two bytes and interprets them as a big-endian …","Reads three bytes and interprets them as a big-endian …","Reads four bytes and interprets them as a big-endian …","Reads four bytes and interprets them as a little-endian …","Wraps a <code>Reader</code> to facilitate reading that is not …","Wraps the reader with a reader that facilitates reading …","Reads a single bit.","Reads bits until a 1 is read, and returns the number of …","Reads at most eight bits.","Read n bits, where 8 < n <= 16.","Reads at most 16 bits.","Reads at most 32 bits.","The <code>metadata</code> module deals with metadata at the beginning …","The streaminfo metadata block, with important information …","The minimum block size (in inter-channel samples) used in …","The maximum block size (in inter-channel samples) used in …","The minimum frame size (in bytes) used in the stream.","The maximum frame size (in bytes) used in the stream.","The sample rate in Hz.","The number of channels.","The number of bits per sample.","The total number of inter-channel samples in the stream.","MD5 signature of the unencoded audio data.","A seek point in the seek table.","Sample number of the first sample in the target frame, or …","Offset in bytes from the first byte of the first frame …","Number of samples in the target frame.","A seek table to aid seeking in the stream.","Vorbis comments, also known as FLAC tags (e.g. artist, …","The “vendor string”, chosen by the encoder vendor.","Name-value pairs of Vorbis comments, such as <code>ARTIST=Queen</code>.","A metadata about the flac stream.","A stream info block.","A padding block (with no meaningful data).","The number of padding bytes.","An application block with application-specific data.","The registered application ID.","The contents of the application block.","A seek table block.","A Vorbis comment block, also known as FLAC tags.","A CUE sheet block.","A picture block.","A block with a reserved block type, not supported by this …","Iterates over Vorbis comments (FLAC tags) in a FLAC …","Returns a new <code>Tags</code> iterator.","Iterates over Vorbis comments looking for a specific one; …","Returns a new <code>GetTag</code> iterator.","Read a single metadata block header and body from the …","Read a single metadata block of the given type and length …","Reads metadata blocks from a stream and exposes them as …","Either a <code>MetadataBlock</code> or an <code>Error</code>.","Creates a metadata block reader that will yield at least …","The <code>subframe</code> module deals with subframes that make up a …","Given a signed two’s complement integer in the <code>bits</code> …","Decodes a subframe into the provided block-size buffer.","An error that prevents successful decoding of the FLAC …","Not a decoding error, but a problem with the underlying …","An ill-formed FLAC stream was encountered.","A currently unsupported feature of the FLAC format was …","A type for results generated by Claxon where the error …","A FLAC decoder that can decode the stream from the …","Controls what metadata <code>FlacReader</code> reads when constructed.","When true, return a reader as soon as all desired …","When true, read metadata blocks at least until a Vorbis …","An iterator that yields samples read from a <code>FlacReader</code>.","Create a reader that reads the FLAC format.","Create a reader that reads the FLAC format, with reader …","Returns the streaminfo metadata.","Returns the vendor string of the Vorbis comment block, if …","Returns name-value pairs of Vorbis comments, such as …","Look up a Vorbis comment such as <code>ARTIST</code> in a …","Returns an iterator that decodes a single frame on every …","Returns an iterator over all samples.","Destroys the FLAC reader and returns the underlying …","Attempts to create a reader that reads from the specified …","Attemps to create a reader that reads from the specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,0,0,3,3,0,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,0,7,7,7,0,0,8,8,0,9,9,10,9,11,11,9,9,9,9,9,0,12,0,13,0,0,0,0,14,0,0,0,0,15,15,15,0,0,0,16,16,0,17,17,17,17,17,17,17,17,17,17,17,15,15,15,15,15,15,15,15,1,1,1,1,1,1,1,18,18,18,18,18,18,18,18,2,2,2,2,2,2,2,3,3,3,3,3,3,3,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,19,19,19,19,19,19,19,8,8,8,8,8,8,8,9,9,9,9,9,9,9,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,3,3,3,3,15,15,18,12,12,13,14,14,20,6,7,16,16,15,16,16,15,6,16,15,15,15],"f":[null,null,[[],["block",3]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]],["i32",15]],[[],[["i32",15],["vec",3]]],[[],["stereosamples",3]],null,null,null,[[],["framereader",3]],[[["vec",3],["i32",15]],["frameresult",6]],[[]],null,null,[[],["bufferedreader",3]],[[]],null,[[],[["result",6],["u8",15]]],[[],[["result",6],["option",4]]],[[],["result",6]],[[["u32",15]],["result",6]],[[],[["u16",15],["result",6]]],[[],[["result",6],["option",4]]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],[[],[["u32",15],["result",6]]],null,[[],["bitstream",3]],[[],[["result",6],["bool",15]]],[[],[["u32",15],["result",6]]],[[["u32",15]],[["result",6],["u8",15]]],[[["u32",15]],[["u32",15],["result",6]]],[[["u32",15]],[["u16",15],["result",6]]],[[["u32",15]],[["u32",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["tags",3]],null,[[["str",15]],["gettag",3]],[[],[["result",6],["metadatablock",4]]],[[["u32",15],["u8",15]],[["result",6],["metadatablock",4]]],null,null,[[],["metadatablockreader",3]],null,[[["u32",15]],["i32",15]],[[["u32",15],["bitstream",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,[[],[["flacreader",3],["result",6]]],[[["flacreaderoptions",3]],[["flacreader",3],["result",6]]],[[],["streaminfo",3]],[[],[["option",4],["str",15]]],[[],["tags",3]],[[["str",15]],["gettag",3]],[[],[["bufferedreader",3],["framereader",3]]],[[],[["flacsamples",3],["bufferedreader",3]]],[[]],[[["path",3],["asref",8]],[["flacreader",3],["result",6]]],[[["flacreaderoptions",3],["path",3],["asref",8]],[["flacreader",3],["result",6]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["result",6],["u8",15]]],[[],[["result",6],["option",4]]],[[],["result",6]],[[["u32",15]],["result",6]],[[["error",3]],["error",4]],[[["fromutf8error",3]],["error",4]],[[],["option",4]],[[],["option",4]],[[]],[[],[["option",4],["str",15]]],[[],[["option",4],["metadatablockresult",6]]],[[]],[[],[["result",6],["option",4]]],[[],["streaminfo",3]],[[],["seekpoint",3]],[[],["flacreaderoptions",3]],[[],["flacreaderoptions",3]],[[["error",4]],["bool",15]],[[["flacreaderoptions",3]],["bool",15]],[[["flacreaderoptions",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[],[["option",4],["error",8]]]],"p":[[3,"Block"],[3,"FrameReader"],[3,"BufferedReader"],[8,"ReadBytes"],[3,"Bitstream"],[3,"StreamInfo"],[3,"SeekPoint"],[3,"VorbisComment"],[4,"MetadataBlock"],[13,"Padding"],[13,"Application"],[3,"Tags"],[3,"GetTag"],[3,"MetadataBlockReader"],[4,"Error"],[3,"FlacReaderOptions"],[3,"FlacReader"],[3,"StereoSamples"],[3,"SeekTable"],[3,"FlacSamples"]]},\
"color_eyre":{"doc":"An error report handler for panics and the <code>eyre</code> crate for …","t":[0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,3,11,11,6,0,3,8,10,8,16,10,10,10,10,10,10,10,10,10,10,8,10,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["config","Theme","new","dark","light","file","line_number","spantrace_target","spantrace_fields","active_line","error","help_info_note","help_info_warning","help_info_suggestion","help_info_error","dependency_code","crate_code","code_hash","panic_header","panic_message","panic_file","panic_line_number","hidden_frames","Frame","n","name","lineno","filename","HookBuilder","new","blank","theme","panic_section","panic_message","capture_span_trace_by_default","display_env_section","add_frame_filter","install","add_default_filters","into_hooks","PanicReport","PanicHook","install","into_panic_hook","panic_report","EyreHook","install","into_eyre_hook","FilterCallback","section","IndentedSection","SectionExt","header","Section","Return","section","with_section","error","with_error","note","with_note","warning","with_warning","suggestion","with_suggestion","PanicMessage","display","Handler","install","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","header","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","default","default","fmt","fmt","fmt","fmt","fmt","debug","track_caller","backtrace","span_trace"],"q":["color_eyre","color_eyre::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","color_eyre","color_eyre::section","","","","","","","","","","","","","","","","","color_eyre","","color_eyre::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","color_eyre::section","","","","","","","","","color_eyre","","","","","","","color_eyre::config","","","","","color_eyre","color_eyre::config","color_eyre::section","color_eyre","","",""],"d":["Configuration options for customizing the behavior of the …","A struct that represents a theme that is used by …","Creates a blank theme","Returns a theme for dark backgrounds. This is the default","Returns a theme for light backgrounds","Styles printed paths","Styles the line number of a file","Styles the <code>color_spantrace</code> target (i.e. the module and …","Styles fields associated with a the <code>tracing::Span</code>.","Styles the selected line of displayed code","Styles errors printed by <code>EyreHandler</code>","Styles the “note” section header","Styles the “warning” section header","Styles the “suggestion” section header","Styles the “error” section header","Styles code that is not part of your crate","Styles code that’s in your crate","Styles the hash after <code>dependency_code</code> and <code>crate_code</code>","Styles the header of a panic","Styles the message of a panic","Styles paths of a panic","Styles the line numbers of a panic","Styles the “N frames hidden” message","A representation of a Frame from a Backtrace or a …","Frame index","frame symbol name","source line number","source file path","Builder for customizing the behavior of the global panic …","Construct a HookBuilder","Construct a HookBuilder with minimal features enabled","Set the global styles that <code>color_eyre</code> should use.","Add a custom section to the panic hook that will be …","Overrides the main error message printing section at the …","Configures the default capture mode for <code>SpanTraces</code> in …","Configures the enviroment varible info section and …","Add a custom filter to the set of frame filters","Install the given Hook as the global error report hook","Add the default set of filters to this <code>HookBuilder</code>’s …","Create a <code>PanicHook</code> and <code>EyreHook</code> from this <code>HookBuilder</code>. …","A type representing an error report for a panic.","A panic reporting hook","Install self as a global panic hook via …","Convert self into the type expected by …","Construct a panic reporter which prints it’s panic …","An eyre reporting hook used to construct <code>EyreHandler</code>s","Installs self as the global eyre handling hook via …","Convert the self into the boxed type expected by …","Callback for filtering a vector of <code>Frame</code>s","Helpers for adding custom sections to error reports","An indented section with a header for an error report","Extension trait for constructing sections with commonly …","Add a header to a <code>Section</code> and indent the body","A helper trait for attaching informational sections to …","The return type of each method after adding context","Add a section to an error report, to be displayed after …","Add a Section to an error report, to be displayed after …","Add an error section to an error report, to be displayed …","Add an error section to an error report, to be displayed …","Add a Note to an error report, to be displayed after the …","Add a Note to an error report, to be displayed after the …","Add a Warning to an error report, to be displayed after …","Add a Warning to an error report, to be displayed after …","Add a Suggestion to an error report, to be displayed …","Add a Suggestion to an error report, to be displayed …","Trait for printing a panic error message for the given …","Display trait equivalent for implementing the display …","A custom handler type for <code>eyre::Report</code> which provides …","Install the default panic and error report hooks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a reference to the captured <code>Backtrace</code> type","Return a reference to the captured <code>SpanTrace</code> type"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,0,5,5,0,0,0,0,6,0,7,7,7,7,7,7,7,7,7,7,7,0,8,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,9,9,9,9,9,9,9,9,4,4,4,4,4,4,4,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,1,1,3,1,2,11,9,10,11,11,11,11],"f":[null,null,[[]],[[]],[[]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],null,null,null,null,null,null,[[]],[[]],[[["theme",3]]],[[["display",8],["sync",8],["send",8]]],[[["panicmessage",8]]],[[["bool",15]]],[[["bool",15]]],[[["box",3],["filtercallback",6]]],[[],[["report",3],["result",4]]],[[]],[[]],null,null,[[]],[[],[["box",3],["fn",8]]],[[["panicinfo",3]],["panicreport",3]],null,[[],[["installerror",3],["result",4]]],[[],[["fn",8],["box",3]]],null,null,null,null,[[],["indentedsection",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["panicinfo",3],["formatter",3]],["result",6]],null,[[],[["result",6],["report",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["indentedsection",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["theme",3]],[[],["theme",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",8],["formatter",3]],["result",6]],[[["location",3]]],[[],[["option",4],["backtrace",3]]],[[],[["option",4],["spantrace",3]]]],"p":[[3,"Theme"],[3,"Frame"],[3,"HookBuilder"],[3,"PanicHook"],[3,"EyreHook"],[8,"SectionExt"],[8,"Section"],[8,"PanicMessage"],[3,"PanicReport"],[3,"IndentedSection"],[3,"Handler"]]},\
"color_spantrace":{"doc":"A rust library for colorizing <code>tracing_error::SpanTrace</code> …","t":[3,11,11,11,11,11,11,11,11,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Theme","new","dark","light","file","line_number","target","fields","active_line","InstallThemeError","set_theme","colorize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","in_current_span","clone","default","fmt","fmt","fmt"],"q":["color_spantrace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct that represents theme that is used by …","Create blank theme","A theme for a dark background. This is the default","A theme for a light background","Styles printed paths","Styles the line number of a file","Styles the target (i.e. the module and function name, and …","Styles fields associated with a the <code>tracing::Span</code>.","Styles the selected line of displayed code","An error returned by <code>set_theme</code> if a global theme was …","Sets the global theme.","Display a <code>SpanTrace</code> with colors and source","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,2,2],"f":[null,[[]],[[]],[[]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],[[["style",3]]],null,[[["theme",3]],[["installthemeerror",3],["result",4]]],[[["spantrace",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["theme",3]],[[],["theme",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[3,"Theme"],[3,"InstallThemeError"]]},\
"cpal":{"doc":"How to use cpal","t":[0,3,3,3,3,6,6,17,3,3,3,3,3,3,4,13,5,5,5,0,8,16,16,10,10,10,10,11,11,8,16,16,16,10,10,10,10,10,11,11,10,10,8,10,10,3,3,12,4,13,12,4,13,12,4,13,13,13,12,4,13,13,13,12,4,13,13,13,13,13,12,4,13,13,12,4,13,13,12,4,13,13,12,5,5,5,3,3,3,4,13,3,3,3,17,8,18,10,10,10,10,4,13,13,13,6,6,6,3,12,6,4,13,13,3,12,12,12,4,13,12,12,13,3,3,3,3,3,12,12,3,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18],"n":["platform","AlsaDevice","AlsaDevices","AlsaHost","AlsaStream","AlsaSupportedInputConfigs","AlsaSupportedOutputConfigs","ALL_HOSTS","Host","Device","Devices","Stream","SupportedInputConfigs","SupportedOutputConfigs","HostId","Alsa","available_hosts","host_from_id","default_host","traits","HostTrait","Devices","Device","is_available","devices","default_input_device","default_output_device","input_devices","output_devices","DeviceTrait","SupportedInputConfigs","SupportedOutputConfigs","Stream","name","supported_input_configs","supported_output_configs","default_input_config","default_output_config","build_input_stream","build_output_stream","build_input_stream_raw","build_output_stream_raw","StreamTrait","play","pause","HostUnavailable","BackendSpecificError","description","DevicesError","BackendSpecific","err","DeviceNameError","BackendSpecific","err","SupportedStreamConfigsError","DeviceNotAvailable","InvalidArgument","BackendSpecific","err","DefaultStreamConfigError","DeviceNotAvailable","StreamTypeNotSupported","BackendSpecific","err","BuildStreamError","DeviceNotAvailable","StreamConfigNotSupported","InvalidArgument","StreamIdOverflow","BackendSpecific","err","PlayStreamError","DeviceNotAvailable","BackendSpecific","err","PauseStreamError","DeviceNotAvailable","BackendSpecific","err","StreamError","DeviceNotAvailable","BackendSpecific","err","available_hosts","default_host","host_from_id","Device","Devices","Host","HostId","Alsa","Stream","SupportedInputConfigs","SupportedOutputConfigs","ALL_HOSTS","Sample","FORMAT","to_f32","to_i16","to_u16","from","SampleFormat","I16","U16","F32","InputDevices","OutputDevices","ChannelCount","SampleRate","0","FrameCount","BufferSize","Default","Fixed","StreamConfig","channels","sample_rate","buffer_size","SupportedBufferSize","Range","min","max","Unknown","SupportedStreamConfigRange","SupportedStreamConfig","Data","StreamInstant","InputStreamTimestamp","callback","capture","OutputStreamTimestamp","callback","playback","InputCallbackInfo","OutputCallbackInfo","channels","sample_rate","buffer_size","sample_format","config","duration_since","add","sub","timestamp","timestamp","sample_format","len","bytes","bytes_mut","as_slice","as_slice_mut","channels","min_sample_rate","max_sample_rate","buffer_size","sample_format","with_sample_rate","with_max_sample_rate","cmp_default_heuristics","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","is_available","devices","default_input_device","default_output_device","is_available","devices","default_input_device","default_output_device","name","supported_input_configs","supported_output_configs","default_input_config","default_output_config","build_input_stream_raw","build_output_stream_raw","name","supported_input_configs","supported_output_configs","default_input_config","default_output_config","build_input_stream_raw","build_output_stream_raw","play","pause","play","pause","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next","next","size_hint","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","mul","hash","hash","hash","hash","source","source","source","source","source","source","source","source","new","new","name","id","sample_size","FORMAT"],"q":["cpal","cpal::platform","","","","","","","","","","","","","","","","","","cpal","cpal::traits","","","","","","","","","","","","","","","","","","","","","","","","","cpal","","","","","cpal::DevicesError","cpal","","cpal::DeviceNameError","cpal","","","","cpal::SupportedStreamConfigsError","cpal","","","","cpal::DefaultStreamConfigError","cpal","","","","","","cpal::BuildStreamError","cpal","","","cpal::PlayStreamError","cpal","","","cpal::PauseStreamError","cpal","","","cpal::StreamError","cpal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal::SupportedBufferSize","","cpal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal","","","","","","","","","","","","","","","cpal::platform","","","","cpal","cpal::platform","","","","","","","cpal","","cpal::platform","cpal","","","","","","","","","","","","","","cpal::platform","cpal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cpal::platform","","cpal","","","","","","","","","","","","","","","","","","","","","","","","","cpal::platform","cpal","","","","","","","","","","","cpal::platform","","","","cpal",""],"d":["Platform-specific items.","","ALSA implementation for <code>Devices</code>.","The default linux, dragonfly and freebsd host type.","","","","All hosts supported by CPAL on this platform.","The platform’s dynamically dispatched <strong>Host</strong> type.","The <strong>Device</strong> implementation associated with the platform’…","The <strong>Devices</strong> iterator associated with the platform’s …","The <strong>Stream</strong> implementation associated with the platform’…","The <strong>SupportedInputConfigs</strong> iterator associated with the …","The <strong>SupportedOutputConfigs</strong> iterator associated with the …","Unique identifier for available hosts on the platform.","","Produces a list of hosts that are currently available on …","Given a unique host identifier, initialise and produce …","The default host for the current compilation target …","The suite of traits allowing CPAL to abstract over hosts, …","A <strong>Host</strong> provides access to the available audio devices on …","The type used for enumerating available devices by the …","The <code>Device</code> type yielded by the host.","Whether or not the host is available on the system.","An iterator yielding all <code>Device</code>s currently available to …","The default input audio device on the system.","The default output audio device on the system.","An iterator yielding all <code>Device</code>s currently available to …","An iterator yielding all <code>Device</code>s currently available to …","A device that is capable of audio input and/or output.","The iterator type yielding supported input stream formats.","The iterator type yielding supported output stream …","The stream type created by <code>build_input_stream_raw</code> and …","The human-readable name of the device.","An iterator yielding formats that are supported by the …","An iterator yielding output stream formats that are …","The default input stream format for the device.","The default output stream format for the device.","Create an input stream.","Create an output stream.","Create a dynamically typed input stream.","Create a dynamically typed output stream.","A stream created from <code>Device</code>, with methods to control …","Run the stream.","Some devices support pausing the audio stream. This can …","The requested host, although supported on this platform, …","Some error has occurred that is specific to the backend …","","An error that might occur while attempting to enumerate …","See the <code>BackendSpecificError</code> docs for more information …","","An error that may occur while attempting to retrieve a …","See the <code>BackendSpecificError</code> docs for more information …","","Error that can happen when enumerating the list of …","The device no longer exists. This can happen if the …","We called something the C-Layer did not understand","See the <code>BackendSpecificError</code> docs for more information …","","May occur when attempting to request the default input or …","The device no longer exists. This can happen if the …","Returned if e.g. the default input format was requested …","See the <code>BackendSpecificError</code> docs for more information …","","Error that can happen when creating a <code>Stream</code>.","The device no longer exists. This can happen if the …","The specified stream configuration is not supported.","We called something the C-Layer did not understand","Occurs if adding a new Stream ID would cause an integer …","See the <code>BackendSpecificError</code> docs for more information …","","Errors that might occur when calling <code>play_stream</code>.","The device associated with the stream is no longer …","See the <code>BackendSpecificError</code> docs for more information …","","Errors that might occur when calling <code>pause_stream</code>.","The device associated with the stream is no longer …","See the <code>BackendSpecificError</code> docs for more information …","","Errors that might occur while a stream is running.","The device no longer exists. This can happen if the …","See the <code>BackendSpecificError</code> docs for more information …","","Produces a list of hosts that are currently available on …","The default host for the current compilation target …","Given a unique host identifier, initialise and produce …","The <strong>Device</strong> implementation associated with the platform’…","The <strong>Devices</strong> iterator associated with the platform’s …","The platform’s dynamically dispatched <strong>Host</strong> type.","Unique identifier for available hosts on the platform.","","The <strong>Stream</strong> implementation associated with the platform’…","The <strong>SupportedInputConfigs</strong> iterator associated with the …","The <strong>SupportedOutputConfigs</strong> iterator associated with the …","All hosts supported by CPAL on this platform.","Trait for containers that contain PCM data.","The <code>SampleFormat</code> corresponding to this data type.","Turns the sample into its equivalent as a floating-point.","Converts this sample into a standard i16 sample.","Converts this sample into a standard u16 sample.","Converts any sample type to this one by calling <code>to_i16</code>, …","Format that each sample has.","The value 0 corresponds to 0.","The value 0 corresponds to 32768.","The boundaries are (-1.0, 1.0).","A host’s device iterator yielding only <em>input</em> devices.","A host’s device iterator yielding only <em>output</em> devices.","Number of channels.","The number of samples processed per second for a single …","","The desired number of frames for the hardware buffer.","The buffer size used by the device.","","","The set of parameters used to describe how to open a …","","","","Describes the minimum and maximum supported buffer size …","","","","In the case that the platform provides no way of getting …","Describes a range of supported stream configurations, …","Describes a single supported stream configuration, …","A buffer of dynamically typed audio data, passed to raw …","A monotonic time instance associated with a stream, …","A timestamp associated with a call to an input stream’s …","The instant the stream’s data callback was invoked.","The instant that data was captured from the device.","A timestamp associated with a call to an output stream’…","The instant the stream’s data callback was invoked.","The predicted instant that data written will be delivered …","Information relevant to a single call to the user’s …","Information relevant to a single call to the user’s …","","","","","","The amount of time elapsed from another instant to this …","Returns the instant in time after the given duration has …","Returns the instant in time one <code>duration</code> ago.","The timestamp associated with the call to an input stream…","The timestamp associated with the call to an output stream…","The sample format of the internal audio data.","The full length of the buffer in samples.","The raw slice of memory representing the underlying audio …","The raw slice of memory representing the underlying audio …","Access the data as a slice of sample type <code>T</code>.","Access the data as a slice of sample type <code>T</code>.","","","","","","Retrieve a <code>SupportedStreamConfig</code> with the given sample …","Turns this <code>SupportedStreamConfigRange</code> into a …","A comparison function which compares two …he unique identifier associated with this host.","Returns the size in bytes of a sample of this format.","The <code>SampleFormat</code> corresponding to this data type."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,0,5,0,6,7,0,8,9,0,10,10,10,11,0,12,12,12,13,0,14,14,14,14,14,15,0,16,16,17,0,18,18,19,0,20,20,21,0,0,0,0,0,0,0,1,0,0,0,0,0,22,22,22,22,22,0,23,23,23,0,0,0,0,24,0,0,25,25,0,26,26,26,0,27,28,28,27,0,0,0,0,0,29,29,0,30,30,0,0,31,31,31,31,31,32,32,32,33,34,35,35,35,35,35,35,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,16,16,16,16,16,16,16,16,18,18,18,18,18,18,18,18,20,20,20,20,20,20,20,20,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,1,1,1,1,1,1,1,1,1,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,36,36,36,36,36,36,36,36,36,31,31,31,31,31,31,31,31,31,35,35,35,35,35,35,35,32,32,32,32,32,32,32,32,32,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,39,39,39,39,42,42,42,42,40,40,40,40,40,40,40,43,43,43,43,43,43,43,41,41,45,45,41,6,8,10,12,14,16,18,20,6,5,14,10,16,18,20,43,44,42,45,26,38,44,44,46,46,47,47,37,5,1,23,24,25,26,27,36,31,32,29,30,33,34,24,32,1,23,24,24,25,25,26,26,27,27,36,36,31,31,32,32,29,29,30,30,33,33,34,34,24,32,37,5,6,8,10,12,14,16,18,20,39,1,23,24,25,26,27,36,31,35,32,29,30,33,34,37,5,6,8,10,12,14,16,18,20,24,24,1,32,29,30,6,8,10,12,14,16,18,20,38,39,1,42,23,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["hostid",4],["vec",3]]],[[["hostid",4]],[["host",3],["hostunavailable",3],["result",4]]],[[],["host",3]],null,null,null,null,[[],["bool",15]],[[],[["deviceserror",4],["result",4]]],[[],["option",4]],[[],["option",4]],[[],[["deviceserror",4],["result",4],["inputdevices",6]]],[[],[["outputdevices",6],["result",4],["deviceserror",4]]],null,null,null,null,[[],[["result",4],["string",3],["devicenameerror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["supportedstreamconfigserror",4],["result",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]],[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]],null,[[],[["playstreamerror",4],["result",4]]],[[],[["pausestreamerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["hostid",4],["vec",3]]],[[],["host",3]],[[["hostid",4]],[["host",3],["hostunavailable",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,[[],["f32",15]],[[],["i16",15]],[[],["u16",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["channelcount",6]],[[],["samplerate",3]],[[],["supportedbuffersize",4]],[[],["sampleformat",4]],[[],["streamconfig",3]],[[],[["option",4],["duration",3]]],[[["duration",3]],["option",4]],[[["duration",3]],["option",4]],[[],["inputstreamtimestamp",3]],[[],["outputstreamtimestamp",3]],[[],["sampleformat",4]],[[],["usize",15]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["channelcount",6]],[[],["samplerate",3]],[[],["samplerate",3]],[[],["supportedbuffersize",4]],[[],["sampleformat",4]],[[["samplerate",3]],["supportedstreamconfig",3]],[[],["supportedstreamconfig",3]],[[],["ordering",4]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],[["deviceserror",4],["result",4]]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],[["deviceserror",4],["result",4]]],[[],["option",4]],[[],["option",4]],[[],[["result",4],["string",3],["devicenameerror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["supportedstreamconfigserror",4],["result",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]],[[["streamconfig",3],["sampleformat",4]],[["result",4],["buildstreamerror",4]]],[[],[["string",3],["result",4],["devicenameerror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[["sampleformat",4],["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[["sampleformat",4],["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[],[["playstreamerror",4],["result",4]]],[[],[["pausestreamerror",4],["result",4]]],[[],[["playstreamerror",4],["result",4]]],[[],[["pausestreamerror",4],["result",4]]],[[]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["backendspecificerror",3]]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[["device",3]]],[[["devices",3]]],[[["host",3]]],[[["stream",3]]],[[["supportedstreamconfig",3]]],[[],[["device",3],["option",4]]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["hostunavailable",3]],[[],["backendspecificerror",3]],[[],["hostid",4]],[[],["sampleformat",4]],[[],["samplerate",3]],[[],["buffersize",4]],[[],["streamconfig",3]],[[],["supportedbuffersize",4]],[[],["supportedstreamconfigrange",3]],[[],["supportedstreamconfig",3]],[[],["streaminstant",3]],[[],["inputstreamtimestamp",3]],[[],["outputstreamtimestamp",3]],[[],["inputcallbackinfo",3]],[[],["outputcallbackinfo",3]],[[["samplerate",3]],["ordering",4]],[[["streaminstant",3]],["ordering",4]],[[["hostid",4]],["bool",15]],[[["sampleformat",4]],["bool",15]],[[["samplerate",3]],["bool",15]],[[["samplerate",3]],["bool",15]],[[["buffersize",4]],["bool",15]],[[["buffersize",4]],["bool",15]],[[["streamconfig",3]],["bool",15]],[[["streamconfig",3]],["bool",15]],[[["supportedbuffersize",4]],["bool",15]],[[["supportedbuffersize",4]],["bool",15]],[[["supportedstreamconfigrange",3]],["bool",15]],[[["supportedstreamconfigrange",3]],["bool",15]],[[["supportedstreamconfig",3]],["bool",15]],[[["supportedstreamconfig",3]],["bool",15]],[[["streaminstant",3]],["bool",15]],[[["streaminstant",3]],["bool",15]],[[["inputstreamtimestamp",3]],["bool",15]],[[["inputstreamtimestamp",3]],["bool",15]],[[["outputstreamtimestamp",3]],["bool",15]],[[["outputstreamtimestamp",3]],["bool",15]],[[["inputcallbackinfo",3]],["bool",15]],[[["inputcallbackinfo",3]],["bool",15]],[[["outputcallbackinfo",3]],["bool",15]],[[["outputcallbackinfo",3]],["bool",15]],[[["samplerate",3]],[["ordering",4],["option",4]]],[[["streaminstant",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["result",4],["deviceserror",4]]],[[],[["result",4],["hostunavailable",3]]],[[],["str",15]],[[],["hostid",4]],[[],["usize",15]],null],"p":[[4,"HostId"],[8,"HostTrait"],[8,"DeviceTrait"],[8,"StreamTrait"],[3,"BackendSpecificError"],[4,"DevicesError"],[13,"BackendSpecific"],[4,"DeviceNameError"],[13,"BackendSpecific"],[4,"SupportedStreamConfigsError"],[13,"BackendSpecific"],[4,"DefaultStreamConfigError"],[13,"BackendSpecific"],[4,"BuildStreamError"],[13,"BackendSpecific"],[4,"PlayStreamError"],[13,"BackendSpecific"],[4,"PauseStreamError"],[13,"BackendSpecific"],[4,"StreamError"],[13,"BackendSpecific"],[8,"Sample"],[4,"SampleFormat"],[3,"SampleRate"],[4,"BufferSize"],[3,"StreamConfig"],[4,"SupportedBufferSize"],[13,"Range"],[3,"InputStreamTimestamp"],[3,"OutputStreamTimestamp"],[3,"SupportedStreamConfig"],[3,"StreamInstant"],[3,"InputCallbackInfo"],[3,"OutputCallbackInfo"],[3,"Data"],[3,"SupportedStreamConfigRange"],[3,"HostUnavailable"],[3,"AlsaDevices"],[3,"AlsaHost"],[3,"AlsaDevice"],[3,"AlsaStream"],[3,"Host"],[3,"Device"],[3,"Devices"],[3,"Stream"],[3,"SupportedInputConfigs"],[3,"SupportedOutputConfigs"]]},\
"crossterm":{"doc":"Crossterm","t":[0,5,3,12,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,3,3,3,3,3,0,5,5,3,3,4,13,13,13,3,12,12,12,12,4,13,13,13,13,13,13,4,13,13,13,3,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,3,3,12,12,12,3,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,4,13,13,3,12,12,5,5,3,12,3,12,3,12,3,12,3,12,3,12,3,3,12,0,5,5,5,3,3,3,3,4,13,13,13,13,13,3,12,3,12,3,12,3,12,12,3,12,0,8,10,8,10,8,10,8,10,4,13,13,13,13,13,13,6,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["cursor","position","MoveTo","0","1","MoveToNextLine","0","MoveToPreviousLine","0","MoveToColumn","0","MoveUp","0","MoveRight","0","MoveDown","0","MoveLeft","0","SavePosition","RestorePosition","Hide","Show","EnableBlinking","DisableBlinking","event","poll","read","EnableMouseCapture","DisableMouseCapture","Event","Key","Mouse","Resize","MouseEvent","kind","column","row","modifiers","MouseEventKind","Down","Up","Drag","Moved","ScrollDown","ScrollUp","MouseButton","Left","Right","Middle","KeyModifiers","SHIFT","CONTROL","ALT","NONE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","KeyEvent","code","modifiers","new","KeyCode","Backspace","Enter","Left","Right","Up","Down","Home","End","PageUp","PageDown","Tab","BackTab","Delete","Insert","F","Char","Null","Esc","style","Attributes","ContentStyle","foreground_color","background_color","attributes","StyledContent","Colorize","black","dark_grey","red","dark_red","green","dark_green","yellow","dark_yellow","blue","dark_blue","magenta","dark_magenta","cyan","dark_cyan","white","grey","on_black","on_dark_grey","on_red","on_dark_red","on_green","on_dark_green","on_yellow","on_dark_yellow","on_blue","on_dark_blue","on_magenta","on_dark_magenta","on_cyan","on_dark_cyan","on_white","on_grey","Styler","reset","bold","underlined","reverse","dim","italic","negative","slow_blink","rapid_blink","hidden","crossed_out","Attribute","Reset","Bold","Dim","Italic","Underlined","SlowBlink","RapidBlink","Reverse","Hidden","CrossedOut","Fraktur","NoBold","NormalIntensity","NoItalic","NoUnderline","NoBlink","NoReverse","NoHidden","NotCrossedOut","Framed","Encircled","OverLined","NotFramedOrEncircled","NotOverLined","Color","Reset","Black","DarkGrey","Red","DarkRed","Green","DarkGreen","Yellow","DarkYellow","Blue","DarkBlue","Magenta","DarkMagenta","Cyan","DarkCyan","White","Grey","Rgb","r","g","b","AnsiValue","Colored","ForegroundColor","BackgroundColor","Colors","foreground","background","style","available_color_count","SetForegroundColor","0","SetBackgroundColor","0","SetColors","0","SetAttribute","0","SetAttributes","0","PrintStyledContent","0","ResetColor","Print","0","terminal","enable_raw_mode","disable_raw_mode","size","DisableLineWrap","EnableLineWrap","EnterAlternateScreen","LeaveAlternateScreen","ClearType","All","FromCursorDown","FromCursorUp","CurrentLine","UntilNewLine","ScrollUp","0","ScrollDown","0","Clear","0","SetSize","0","1","SetTitle","0","tty","IsTty","is_tty","Command","write_ansi","ExecutableCommand","execute","QueueableCommand","queue","ErrorKind","IoError","FmtError","Utf8Error","ParseIntError","ResizingTerminalFailure","SettingTerminalTitleFailure","Result","queue","execute","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","black","dark_grey","red","dark_red","green","dark_green","yellow","dark_yellow","blue","dark_blue","magenta","dark_magenta","cyan","dark_cyan","white","grey","on_black","on_dark_grey","on_red","on_dark_red","on_green","on_dark_green","on_yellow","on_dark_yellow","on_blue","on_dark_blue","on_magenta","on_dark_magenta","on_cyan","on_dark_cyan","on_white","on_grey","reset","bold","underlined","reverse","dim","italic","negative","slow_blink","rapid_blink","hidden","crossed_out","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","from","from","from","from","from","from","from","from","from","extend","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub_assign","not","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitand_assign","bitor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","from_str","from_iter","fmt","fmt","fmt","fmt","source","parse_ansi","parse_ansi","set","unset","toggle","has","extend","is_empty","apply","new","background","foreground","attribute","new","with","on","attribute","content","style","style_mut","iterator","bytes","sgr","then","new"],"q":["crossterm","crossterm::cursor","","","","","","","","","","","","","","","","","","","","","","","","crossterm","crossterm::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm::style::Color","","","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","","crossterm","crossterm::terminal","","","","","","","","","","","","","","","","","","","","","","","","crossterm","crossterm::tty","","crossterm","","","","","","","","","","","","","","","","crossterm::cursor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm::terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm","","","","","","","","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossterm::cursor","","","","","","","","","","","","","","crossterm::event","","crossterm::style","","","","","","","","crossterm::terminal","","","","","","","","","crossterm::event","crossterm::style","","","","crossterm","","","","crossterm::event","crossterm::cursor","","","","","","","","","","","","","","crossterm::event","","","","","","","","","crossterm::style","","","","","","","","","","","","","","","crossterm::terminal","","","","","","","","","","crossterm::style","","crossterm::event","crossterm::style","","","crossterm::terminal","crossterm::cursor","","","","","","","","","","","","","","","","","","","","","","crossterm::event","","","","","","","","","","","","","","","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","","crossterm::terminal","","","","","","","","","","","","","","","crossterm::event","","","","","","","crossterm::style","","","crossterm::terminal","crossterm::cursor","","","","","","","","","","","","","","crossterm::event","","","","","","","","","crossterm::style","","","","","","","","","","","","","","","crossterm::terminal","","","","","","","","","","crossterm","crossterm::cursor","","","","","","","","","","","","","","crossterm::style","","","","","","","","","","","crossterm::terminal","","","","crossterm","crossterm::event","","","","crossterm::style","","crossterm::event","crossterm::style","","crossterm::event","crossterm::style","","crossterm::event","","","","","","","","","","crossterm::style","","","crossterm::terminal","crossterm::style","","crossterm::event","","","","","crossterm","crossterm::style","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A module to work with the terminal cursor","Returns the cursor position (column, row).","A command that moves the terminal cursor to the given …","","","A command that moves the terminal cursor up the given …","","A command that moves the terminal cursor down the given …","","A command that moves the terminal cursor to the given …","","A command that moves the terminal cursor a given number …","","A command that moves the terminal cursor a given number …","","A command that moves the terminal cursor a given number …","","A command that moves the terminal cursor a given number …","","A command that saves the current terminal cursor position.","A command that restores the saved terminal cursor …","A command that hides the terminal cursor.","A command that shows the terminal cursor.","A command that enables blinking of the terminal cursor.","A command that disables blinking of the terminal cursor.","A module to read events.","Checks if there is an <code>Event</code> available.","Reads a single <code>Event</code>.","A command that enables mouse event capturing.","A command that disables mouse event capturing.","Represents an event.","A single key event with additional pressed modifiers.","A single mouse event with additional pressed modifiers.","An resize event with new dimensions after resize …","Represents a mouse event.","The kind of mouse event that was caused.","The column that the event occurred on.","The row that the event occurred on.","The key modifiers active when the event occurred.","A mouse event kind.","Pressed mouse button. Contains the button that was …","Released mouse button. Contains the button that was …","Moved the mouse cursor while pressing the contained mouse …","Moved the mouse cursor while not pressing a mouse button.","Scrolled mouse wheel downwards (towards the user).","Scrolled mouse wheel upwards (away from the user).","Represents a mouse button.","Left mouse button.","Right mouse button.","Middle mouse button.","Represents key modifiers (shift, control, alt).","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Represents a key event.","The key itself.","Additional key modifiers.","","Represents a key.","Backspace key.","Enter key.","Left arrow key.","Right arrow key.","Up arrow key.","Down arrow key.","Home key.","End key.","Page up key.","Page dow key.","Tab key.","Shift + Tab key.","Delete key.","Insert key.","F key.","A character.","Null.","Escape key.","A module to apply attributes and colors on your text.","a bitset for all possible attributes","The style that can be put on content.","The foreground color.","The background color.","List of attributes.","The style with the content to be styled.","Provides a set of methods to set the colors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides a set of methods to set the text attributes.","","","","","","","","","","","","Represents an attribute.","Resets all the attributes.","Increases the text intensity.","Decreases the text intensity.","Emphasises the text.","Underlines the text.","Makes the text blinking (< 150 per minute).","Makes the text blinking (>= 150 per minute).","Swaps foreground and background colors.","Hides the text (also known as Conceal).","Crosses the text.","Sets the Fraktur typeface.","Turns off the <code>Bold</code> attribute. - Inconsistent - Prefer to …","Switches the text back to normal intensity (no bold, …","Turns off the <code>Italic</code> attribute.","Turns off the <code>Underlined</code> attribute.","Turns off the text blinking (<code>SlowBlink</code> or <code>RapidBlink</code>).","Turns off the <code>Reverse</code> attribute.","Turns off the <code>Hidden</code> attribute.","Turns off the <code>CrossedOut</code> attribute.","Makes the text framed.","Makes the text encircled.","Draws a line at the top of the text.","Turns off the <code>Frame</code> and <code>Encircled</code> attributes.","Turns off the <code>OverLined</code> attribute.","Represents a color.","Resets the terminal color.","Black color.","Dark grey color.","Light red color.","Dark red color.","Light green color.","Dark green color.","Light yellow color.","Dark yellow color.","Light blue color.","Dark blue color.","Light magenta color.","Dark magenta color.","Light cyan color.","Dark cyan color.","White color.","Grey color.","An RGB color. See RGB color model for more info.","","","","An ANSI color. See 256 colors - cheat sheet for more info.","Represents a foreground or background color.","A foreground color.","A background color.","Represents, optionally, a foreground and/or a background …","","","Creates a <code>StyledContent</code>.","Returns available color count.","A command that sets the the foreground color.","","A command that sets the the background color.","","A command that optionally sets the foreground and/or …","","A command that sets an attribute.","","A command that sets several attributes.","","A command that prints styled content.","","A command that resets the colors back to default.","A command that prints the given displayable type.","","A module to work with the terminal.","Enables raw mode.","Disables raw mode.","Returns the terminal size <code>(columns, rows)</code>.","Disables line wrapping.","Enable line wrapping.","A command that switches to alternate screen.","A command that switches back to the main screen.","Different ways to clear the terminal buffer.","All cells.","All cells from the cursor position downwards.","All cells from the cursor position upwards.","All cells at the cursor row.","All cells from the cursor position until the new line.","A command that scrolls the terminal screen a given number …","","A command that scrolls the terminal screen a given number …","","A command that clears the terminal screen buffer.","","A command that sets the terminal size <code>(columns, rows)</code>.","","","A command that sets the terminal title","","A module to query if the current instance is a tty. …","Adds the <code>is_tty</code> method to types that might represent a …","Returns true when an instance is a terminal teletype, …","An interface for a command that performs an action on the …","Write an ANSI representation of this commmand to the …","An interface for types that can directly execute commands.","Executes the given command directly.","An interface for types that can queue commands for …","Queues the given command for further execution.","Wrapper for all errors that can occur in <code>crossterm</code>.","","","","","","","The <code>crossterm</code> result type.","Queues one or more command(s) for further execution.","Executes one or more command(s).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a ‘Color’ from the tuple representationeturns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","","","Returns the union of the two sets of flags.","","","Returns the left flags, but with all the right flags …","","","Disables all flags disabled in the set.","Adds the set of flags.","Toggles the set of flags.","","","","","","","","","","","","Try to create a <code>Color</code> from the string representation. …","Creates a <code>Color</code> from the string representation.","","","","","","","Parse an ANSI foreground or background color. This is the …","Parses an ANSI color sequence. For example:","Sets the attribute. If it’s already set, this does …","Unsets the attribute. If it’s not set, this changes …","Sets the attribute if it’s unset, unset it if it is set.","Returns whether the attribute is set.","Sets all the passed attributes. Removes none.","Returns whether there is no attribute set.","Creates a <code>StyledContent</code> by applying the style to the …","Creates a new <code>ContentStyle</code>.","Sets the background color.","Sets the foreground color.","Adds the attribute.","Creates a new <code>StyledContent</code>.","Sets the foreground color.","Sets the background color.","Adds the attribute.","Returns the content.","Returns the style.","Returns a mutable reference to the style, so that it can …","Iterates over all the variants of the Attribute enum.","Returns a u32 with one bit set, which is the signature of …","Returns the SGR attribute value.","Returns a new <code>Color</code> which, when applied, has the same …",""],"i":[0,0,0,1,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,10,10,10,10,0,11,11,11,11,11,11,0,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,16,16,16,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,20,0,22,22,0,23,23,0,0,0,24,0,25,0,26,0,27,0,28,0,29,0,0,30,0,0,0,0,0,0,0,0,0,31,31,31,31,31,0,32,0,33,0,34,0,35,35,0,36,0,0,37,0,38,0,39,0,40,0,41,41,41,41,41,41,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,50,50,50,50,50,50,50,50,50,16,16,16,16,16,16,16,16,16,51,51,51,51,51,51,51,51,51,51,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,52,52,52,52,52,52,52,52,52,52,30,30,30,30,30,30,30,30,30,30,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,41,41,41,41,41,41,41,41,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,1,2,3,4,5,6,7,8,42,43,44,45,46,47,48,49,24,25,26,27,28,29,52,30,53,54,55,56,32,33,34,35,36,14,50,50,20,23,41,41,41,41,13,1,2,3,4,5,6,7,8,42,43,44,45,46,47,48,49,9,10,11,12,13,14,15,50,16,51,19,20,22,23,24,25,26,27,28,29,52,30,53,54,55,56,31,32,33,34,35,36,50,16,13,19,20,22,31,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,42,43,44,45,46,47,48,49,9,9,10,10,11,11,12,13,13,14,14,15,15,50,50,16,16,19,20,20,22,22,23,23,24,24,25,25,26,26,27,27,28,28,52,30,30,53,54,55,56,31,32,32,33,33,34,34,35,35,36,36,9,10,11,12,13,14,15,19,20,22,31,1,2,3,4,5,6,7,8,42,43,44,45,46,47,48,49,9,10,11,12,13,14,15,50,16,51,19,20,22,23,24,25,26,27,28,29,52,30,53,54,55,56,31,32,33,34,35,36,41,1,4,2,3,5,7,8,6,42,43,44,45,46,47,22,51,19,30,24,25,26,27,29,29,52,32,33,35,34,41,13,13,13,13,50,50,13,50,50,13,50,50,13,13,13,9,10,11,12,13,14,15,19,20,22,31,20,20,13,13,13,13,13,41,22,20,50,50,50,50,50,50,16,16,16,16,16,51,51,51,51,51,51,51,19,19,19,23,23],"f":[null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],[["bool",15],["result",6]]],[[],[["result",6],["event",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["keymodifiers",3]],[[],["keymodifiers",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["keymodifiers",3]]],[[["u8",15]],["keymodifiers",3]],[[["u8",15]],["keymodifiers",3]],[[],["bool",15]],[[],["bool",15]],[[["keymodifiers",3]],["bool",15]],[[["keymodifiers",3]],["bool",15]],[[["keymodifiers",3]]],[[["keymodifiers",3]]],[[["keymodifiers",3]]],[[["bool",15],["keymodifiers",3]]],null,null,null,[[["keycode",4],["keymodifiers",3]],["keyevent",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],null,[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["styledcontent",3]],[[],["u16",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,[[],["result",6]],null,[[],["result",6]],null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["styledcontent",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["keycode",4]]],[[["attribute",4]]],[[]],[[]],[[["colored",4]],["colors",3]],[[["error",3]]],[[["error",3]]],[[["fromutf8error",3]]],[[["parseinterror",3]]],[[["intoiterator",8]]],[[],["moveto",3]],[[],["movetonextline",3]],[[],["movetopreviousline",3]],[[],["movetocolumn",3]],[[],["moveup",3]],[[],["moveright",3]],[[],["movedown",3]],[[],["moveleft",3]],[[],["saveposition",3]],[[],["restoreposition",3]],[[],["hide",3]],[[],["show",3]],[[],["enableblinking",3]],[[],["disableblinking",3]],[[],["enablemousecapture",3]],[[],["disablemousecapture",3]],[[],["event",4]],[[],["mouseevent",3]],[[],["mouseeventkind",4]],[[],["mousebutton",4]],[[],["keymodifiers",3]],[[],["keyevent",3]],[[],["keycode",4]],[[],["attributes",3]],[[],["contentstyle",3]],[[],["styledcontent",3]],[[],["attribute",4]],[[],["color",4]],[[],["colored",4]],[[],["colors",3]],[[],["setforegroundcolor",3]],[[],["setbackgroundcolor",3]],[[],["setcolors",3]],[[],["setattribute",3]],[[],["setattributes",3]],[[],["printstyledcontent",3]],[[],["resetcolor",3]],[[],["print",3]],[[],["disablelinewrap",3]],[[],["enablelinewrap",3]],[[],["enteralternatescreen",3]],[[],["leavealternatescreen",3]],[[],["cleartype",4]],[[],["scrollup",3]],[[],["scrolldown",3]],[[],["clear",3]],[[],["setsize",3]],[[],["settitle",3]],[[],["attributes",3]],[[],["contentstyle",3]],[[["keymodifiers",3]],["ordering",4]],[[["attribute",4]],["ordering",4]],[[["color",4]],["ordering",4]],[[["colored",4]],["ordering",4]],[[["cleartype",4]],["ordering",4]],[[["moveto",3]],["bool",15]],[[["moveto",3]],["bool",15]],[[["movetonextline",3]],["bool",15]],[[["movetonextline",3]],["bool",15]],[[["movetopreviousline",3]],["bool",15]],[[["movetopreviousline",3]],["bool",15]],[[["movetocolumn",3]],["bool",15]],[[["movetocolumn",3]],["bool",15]],[[["moveup",3]],["bool",15]],[[["moveup",3]],["bool",15]],[[["moveright",3]],["bool",15]],[[["moveright",3]],["bool",15]],[[["movedown",3]],["bool",15]],[[["movedown",3]],["bool",15]],[[["moveleft",3]],["bool",15]],[[["moveleft",3]],["bool",15]],[[["saveposition",3]],["bool",15]],[[["restoreposition",3]],["bool",15]],[[["hide",3]],["bool",15]],[[["show",3]],["bool",15]],[[["enableblinking",3]],["bool",15]],[[["disableblinking",3]],["bool",15]],[[["enablemousecapture",3]],["bool",15]],[[["disablemousecapture",3]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["mouseevent",3]],["bool",15]],[[["mouseevent",3]],["bool",15]],[[["mouseeventkind",4]],["bool",15]],[[["mouseeventkind",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["keymodifiers",3]],["bool",15]],[[["keymodifiers",3]],["bool",15]],[[["keyevent",3]],["bool",15]],[[["keyevent",3]],["bool",15]],[[["keycode",4]],["bool",15]],[[["keycode",4]],["bool",15]],[[["attributes",3]],["bool",15]],[[["attributes",3]],["bool",15]],[[["contentstyle",3]],["bool",15]],[[["contentstyle",3]],["bool",15]],[[["attribute",4]],["bool",15]],[[["color",4]],["bool",15]],[[["color",4]],["bool",15]],[[["colored",4]],["bool",15]],[[["colored",4]],["bool",15]],[[["colors",3]],["bool",15]],[[["colors",3]],["bool",15]],[[["setforegroundcolor",3]],["bool",15]],[[["setforegroundcolor",3]],["bool",15]],[[["setbackgroundcolor",3]],["bool",15]],[[["setbackgroundcolor",3]],["bool",15]],[[["setcolors",3]],["bool",15]],[[["setcolors",3]],["bool",15]],[[["setattribute",3]],["bool",15]],[[["setattribute",3]],["bool",15]],[[["setattributes",3]],["bool",15]],[[["setattributes",3]],["bool",15]],[[["resetcolor",3]],["bool",15]],[[["print",3]],["bool",15]],[[["print",3]],["bool",15]],[[["disablelinewrap",3]],["bool",15]],[[["enablelinewrap",3]],["bool",15]],[[["enteralternatescreen",3]],["bool",15]],[[["leavealternatescreen",3]],["bool",15]],[[["cleartype",4]],["bool",15]],[[["scrollup",3]],["bool",15]],[[["scrollup",3]],["bool",15]],[[["scrolldown",3]],["bool",15]],[[["scrolldown",3]],["bool",15]],[[["clear",3]],["bool",15]],[[["clear",3]],["bool",15]],[[["setsize",3]],["bool",15]],[[["setsize",3]],["bool",15]],[[["settitle",3]],["bool",15]],[[["settitle",3]],["bool",15]],[[["event",4]],[["ordering",4],["option",4]]],[[["mouseevent",3]],[["ordering",4],["option",4]]],[[["mouseeventkind",4]],[["ordering",4],["option",4]]],[[["mousebutton",4]],[["ordering",4],["option",4]]],[[["keymodifiers",3]],[["ordering",4],["option",4]]],[[["keyevent",3]],[["ordering",4],["option",4]]],[[["keycode",4]],[["ordering",4],["option",4]]],[[["attribute",4]],[["ordering",4],["option",4]]],[[["color",4]],[["ordering",4],["option",4]]],[[["colored",4]],[["ordering",4],["option",4]]],[[["cleartype",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["keymodifiers",3]],["keymodifiers",3]],[[["keymodifiers",3]]],[[],["keymodifiers",3]],[[["keymodifiers",3]],["keymodifiers",3]],[[["attribute",4]]],[[]],[[["keymodifiers",3]],["keymodifiers",3]],[[["attribute",4]]],[[]],[[["keymodifiers",3]],["keymodifiers",3]],[[["attribute",4]]],[[]],[[["keymodifiers",3]]],[[["keymodifiers",3]]],[[["keymodifiers",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["intoiterator",8]],["keymodifiers",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["error",8],["option",4]]],[[["str",15]],["option",4]],[[["str",15]],["option",4]],[[["attribute",4]]],[[["attribute",4]]],[[["attribute",4]]],[[["attribute",4]],["bool",15]],[[["attributes",3]]],[[],["bool",15]],[[["display",8]],[["display",8],["styledcontent",3]]],[[],["contentstyle",3]],[[["color",4]],["contentstyle",3]],[[["color",4]],["contentstyle",3]],[[["attribute",4]],["contentstyle",3]],[[["contentstyle",3]],["styledcontent",3]],[[["color",4]],["styledcontent",3]],[[["color",4]],["styledcontent",3]],[[["attribute",4]],["styledcontent",3]],[[]],[[],["contentstyle",3]],[[],["contentstyle",3]],[[]],[[],["u32",15]],[[],["i16",15]],[[["colors",3]],["colors",3]],[[["color",4]],["colors",3]]],"p":[[3,"MoveTo"],[3,"MoveToNextLine"],[3,"MoveToPreviousLine"],[3,"MoveToColumn"],[3,"MoveUp"],[3,"MoveRight"],[3,"MoveDown"],[3,"MoveLeft"],[4,"Event"],[3,"MouseEvent"],[4,"MouseEventKind"],[4,"MouseButton"],[3,"KeyModifiers"],[3,"KeyEvent"],[4,"KeyCode"],[3,"ContentStyle"],[8,"Colorize"],[8,"Styler"],[4,"Attribute"],[4,"Color"],[13,"Rgb"],[4,"Colored"],[3,"Colors"],[3,"SetForegroundColor"],[3,"SetBackgroundColor"],[3,"SetColors"],[3,"SetAttribute"],[3,"SetAttributes"],[3,"PrintStyledContent"],[3,"Print"],[4,"ClearType"],[3,"ScrollUp"],[3,"ScrollDown"],[3,"Clear"],[3,"SetSize"],[3,"SetTitle"],[8,"IsTty"],[8,"Command"],[8,"ExecutableCommand"],[8,"QueueableCommand"],[4,"ErrorKind"],[3,"SavePosition"],[3,"RestorePosition"],[3,"Hide"],[3,"Show"],[3,"EnableBlinking"],[3,"DisableBlinking"],[3,"EnableMouseCapture"],[3,"DisableMouseCapture"],[3,"Attributes"],[3,"StyledContent"],[3,"ResetColor"],[3,"DisableLineWrap"],[3,"EnableLineWrap"],[3,"EnterAlternateScreen"],[3,"LeaveAlternateScreen"]]},\
"eyre":{"doc":"This library provides <code>eyre::Report</code>, a trait object based …","t":[3,3,5,8,10,11,11,3,3,6,8,10,10,10,10,8,10,10,10,10,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Report","InstallError","set_hook","EyreHandler","debug","display","track_caller","DefaultHandler","Chain","Result","WrapErr","wrap_err","wrap_err_with","context","with_context","ContextCompat","context","with_context","wrap_err","wrap_err_with","bail","ensure","eyre","from","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","debug","track_caller","drop","as_ref","as_ref","from","next_back","len","next","size_hint","clone","default","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","new","new","msg","wrap_err","chain","root_cause","is","downcast","downcast_ref","downcast_mut","handler","handler_mut","is","downcast_ref","downcast_mut"],"q":["eyre","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The core error reporting type of the library, a wrapper …","Error indicating that <code>set_hook</code> was unable to install the …","Install the provided error hook for constructing …","Error Report Handler trait for customizing <code>eyre::Report</code>","Define the report format","Override for the <code>Display</code> format","Store the location of the caller who constructed this …","The default provided error report handler for <code>eyre::Report</code>…","Iterator of a chain of source errors.","type alias for <code>Result<T, Report></code>","Provides the <code>wrap_err</code> method for <code>Result</code>.","Wrap the error value with a new adhoc error","Wrap the error value with a new adhoc error that is …","Compatibility re-export of wrap_err for interopt with …","Compatibility re-export of wrap_err_with for interopt …","Provides the <code>context</code> method for <code>Option</code> when porting from …","Compatibility version of <code>wrap_err</code> for creating new errors …","Compatibility version of <code>wrap_err_with</code> for creating new …","Compatibility re-export of <code>context</code> for porting from <code>anyhow</code>…","Compatibility re-export of <code>with_context</code> for porting from …","Return early with an error.","Return early with an error if a condition is not …","Construct an ad-hoc error from a string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct an iterator over a chain of errors via the …","Create a new error object from any error type.","Create a new error object from a printable error message.","Create a new error from an error message to wrap the …","An iterator of the chain of source errors contained by …","The lowest level cause of this error — this error’s …","Returns true if <code>E</code> is the type held by this error object.","Attempt to downcast the error object to a concrete type.","Downcast this error object by reference.","Downcast this error object by mutable reference.","Get a reference to the Handler for this Report.","Get a mutable reference to the Handler for this Report.","","",""],"i":[0,0,0,0,1,1,1,0,0,0,0,2,2,2,2,0,3,3,3,3,0,0,0,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,6,6,4,4,4,4,7,7,7,7,7,7,4,4,4,5,6,4,5,7,4,4,4,4,4,4,4,4,4,4,4,1,1,1],"f":[null,null,[[["box",3],["fn",8]],[["result",6],["installerror",3]]],null,[[["stderror",8],["formatter",3]],["result",6]],[[["stderror",8],["formatter",3]],["result",6]],[[["location",3]]],null,null,null,null,[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],null,[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],[[],[["report",3],["result",6]]],null,null,null,[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["stderror",8],["formatter",3]],["result",6]],[[["location",3]]],[[]],[[],["stderror",8]],[[],["stderror",8]],[[]],[[],["option",4]],[[],["usize",15]],[[],["option",4]],[[]],[[],["chain",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["stderror",8]]],[[]],[[]],[[]],[[],["chain",3]],[[],["stderror",8]],[[],["bool",15]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[],["eyrehandler",8]],[[],["eyrehandler",8]],[[],["bool",15]],[[],["option",4]],[[],["option",4]]],"p":[[8,"EyreHandler"],[8,"WrapErr"],[8,"ContextCompat"],[3,"Report"],[3,"InstallError"],[3,"DefaultHandler"],[3,"Chain"]]},\
"gimli":{"doc":"<code>gimli</code> is a library for reading and writing the DWARF …","tn":["constants","DwUt","0","DW_UT_compile","DW_UT_type","DW_UT_partial","DW_UT_skeleton","DW_UT_split_compile","DW_UT_split_type","DW_UT_lo_user","DW_UT_hi_user","static_string","DwCfa","0","DW_CFA_advance_loc","DW_CFA_offset","DW_CFA_restore","DW_CFA_nop","DW_CFA_set_loc","DW_CFA_advance_loc1","DW_CFA_advance_loc2","DW_CFA_advance_loc4","DW_CFA_offset_extended","DW_CFA_restore_extended","DW_CFA_undefined","DW_CFA_same_value","DW_CFA_register","DW_CFA_remember_state","DW_CFA_restore_state","DW_CFA_def_cfa","DW_CFA_def_cfa_register","DW_CFA_def_cfa_offset","DW_CFA_def_cfa_expression","DW_CFA_expression","DW_CFA_offset_extended_sf","DW_CFA_def_cfa_sf","DW_CFA_def_cfa_offset_sf","DW_CFA_val_offset","DW_CFA_val_offset_sf","DW_CFA_val_expression","DW_CFA_lo_user","DW_CFA_hi_user","DW_CFA_MIPS_advance_loc8","DW_CFA_GNU_window_save","DW_CFA_GNU_args_size","DW_CFA_GNU_negative_offset_extended","static_string","DwChildren","0","DW_CHILDREN_no","DW_CHILDREN_yes","static_string","DwTag","0","DW_TAG_null","DW_TAG_array_type","DW_TAG_class_type","DW_TAG_entry_point","DW_TAG_enumeration_type","DW_TAG_formal_parameter","DW_TAG_imported_declaration","DW_TAG_label","DW_TAG_lexical_block","DW_TAG_member","DW_TAG_pointer_type","DW_TAG_reference_type","DW_TAG_compile_unit","DW_TAG_string_type","DW_TAG_structure_type","DW_TAG_subroutine_type","DW_TAG_typedef","DW_TAG_union_type","DW_TAG_unspecified_parameters","DW_TAG_variant","DW_TAG_common_block","DW_TAG_common_inclusion","DW_TAG_inheritance","DW_TAG_inlined_subroutine","DW_TAG_module","DW_TAG_ptr_to_member_type","DW_TAG_set_type","DW_TAG_subrange_type","DW_TAG_with_stmt","DW_TAG_access_declaration","DW_TAG_base_type","DW_TAG_catch_block","DW_TAG_const_type","DW_TAG_constant","DW_TAG_enumerator","DW_TAG_file_type","DW_TAG_friend","DW_TAG_namelist","DW_TAG_namelist_item","DW_TAG_packed_type","DW_TAG_subprogram","DW_TAG_template_type_parameter","DW_TAG_template_value_parameter","DW_TAG_thrown_type","DW_TAG_try_block","DW_TAG_variant_part","DW_TAG_variable","DW_TAG_volatile_type","DW_TAG_dwarf_procedure","DW_TAG_restrict_type","DW_TAG_interface_type","DW_TAG_namespace","DW_TAG_imported_module","DW_TAG_unspecified_type","DW_TAG_partial_unit","DW_TAG_imported_unit","DW_TAG_condition","DW_TAG_shared_type","DW_TAG_type_unit","DW_TAG_rvalue_reference_type","DW_TAG_template_alias","DW_TAG_coarray_type","DW_TAG_generic_subrange","DW_TAG_dynamic_type","DW_TAG_atomic_type","DW_TAG_call_site","DW_TAG_call_site_parameter","DW_TAG_skeleton_unit","DW_TAG_immutable_type","DW_TAG_lo_user","DW_TAG_hi_user","DW_TAG_MIPS_loop","DW_TAG_HP_array_descriptor","DW_TAG_HP_Bliss_field","DW_TAG_HP_Bliss_field_set","DW_TAG_format_label","DW_TAG_function_template","DW_TAG_class_template","DW_TAG_GNU_BINCL","DW_TAG_GNU_EINCL","DW_TAG_GNU_template_template_param","DW_TAG_GNU_template_parameter_pack","DW_TAG_GNU_formal_parameter_pack","DW_TAG_GNU_call_site","DW_TAG_GNU_call_site_parameter","DW_TAG_APPLE_property","DW_TAG_SUN_function_template","DW_TAG_SUN_class_template","DW_TAG_SUN_struct_template","DW_TAG_SUN_union_template","DW_TAG_SUN_indirect_inheritance","DW_TAG_SUN_codeflags","DW_TAG_SUN_memop_info","DW_TAG_SUN_omp_child_func","DW_TAG_SUN_rtti_descriptor","DW_TAG_SUN_dtor_info","DW_TAG_SUN_dtor","DW_TAG_SUN_f90_interface","DW_TAG_SUN_fortran_vax_structure","DW_TAG_ALTIUM_circ_type","DW_TAG_ALTIUM_mwa_circ_type","DW_TAG_ALTIUM_rev_carry_type","DW_TAG_ALTIUM_rom","DW_TAG_upc_shared_type","DW_TAG_upc_strict_type","DW_TAG_upc_relaxed_type","DW_TAG_PGI_kanji_type","DW_TAG_PGI_interface_block","DW_TAG_BORLAND_property","DW_TAG_BORLAND_Delphi_string","DW_TAG_BORLAND_Delphi_dynamic_array","DW_TAG_BORLAND_Delphi_set","DW_TAG_BORLAND_Delphi_variant","static_string","DwAt","0","DW_AT_null","DW_AT_sibling","DW_AT_location","DW_AT_name","DW_AT_ordering","DW_AT_byte_size","DW_AT_bit_offset","DW_AT_bit_size","DW_AT_stmt_list","DW_AT_low_pc","DW_AT_high_pc","DW_AT_language","DW_AT_discr","DW_AT_discr_value","DW_AT_visibility","DW_AT_import","DW_AT_string_length","DW_AT_common_reference","DW_AT_comp_dir","DW_AT_const_value","DW_AT_containing_type","DW_AT_default_value","DW_AT_inline","DW_AT_is_optional","DW_AT_lower_bound","DW_AT_producer","DW_AT_prototyped","DW_AT_return_addr","DW_AT_start_scope","DW_AT_bit_stride","DW_AT_upper_bound","DW_AT_abstract_origin","DW_AT_accessibility","DW_AT_address_class","DW_AT_artificial","DW_AT_base_types","DW_AT_calling_convention","DW_AT_count","DW_AT_data_member_location","DW_AT_decl_column","DW_AT_decl_file","DW_AT_decl_line","DW_AT_declaration","DW_AT_discr_list","DW_AT_encoding","DW_AT_external","DW_AT_frame_base","DW_AT_friend","DW_AT_identifier_case","DW_AT_macro_info","DW_AT_namelist_item","DW_AT_priority","DW_AT_segment","DW_AT_specification","DW_AT_static_link","DW_AT_type","DW_AT_use_location","DW_AT_variable_parameter","DW_AT_virtuality","DW_AT_vtable_elem_location","DW_AT_allocated","DW_AT_associated","DW_AT_data_location","DW_AT_byte_stride","DW_AT_entry_pc","DW_AT_use_UTF8","DW_AT_extension","DW_AT_ranges","DW_AT_trampoline","DW_AT_call_column","DW_AT_call_file","DW_AT_call_line","DW_AT_description","DW_AT_binary_scale","DW_AT_decimal_scale","DW_AT_small","DW_AT_decimal_sign","DW_AT_digit_count","DW_AT_picture_string","DW_AT_mutable","DW_AT_threads_scaled","DW_AT_explicit","DW_AT_object_pointer","DW_AT_endianity","DW_AT_elemental","DW_AT_pure","DW_AT_recursive","DW_AT_signature","DW_AT_main_subprogram","DW_AT_data_bit_offset","DW_AT_const_expr","DW_AT_enum_class","DW_AT_linkage_name","DW_AT_string_length_bit_size","DW_AT_string_length_byte_size","DW_AT_rank","DW_AT_str_offsets_base","DW_AT_addr_base","DW_AT_rnglists_base","DW_AT_dwo_name","DW_AT_reference","DW_AT_rvalue_reference","DW_AT_macros","DW_AT_call_all_calls","DW_AT_call_all_source_calls","DW_AT_call_all_tail_calls","DW_AT_call_return_pc","DW_AT_call_value","DW_AT_call_origin","DW_AT_call_parameter","DW_AT_call_pc","DW_AT_call_tail_call","DW_AT_call_target","DW_AT_call_target_clobbered","DW_AT_call_data_location","DW_AT_call_data_value","DW_AT_noreturn","DW_AT_alignment","DW_AT_export_symbols","DW_AT_deleted","DW_AT_defaulted","DW_AT_loclists_base","DW_AT_lo_user","DW_AT_hi_user","DW_AT_MIPS_fde","DW_AT_MIPS_loop_begin","DW_AT_MIPS_tail_loop_begin","DW_AT_MIPS_epilog_begin","DW_AT_MIPS_loop_unroll_factor","DW_AT_MIPS_software_pipeline_depth","DW_AT_MIPS_linkage_name","DW_AT_MIPS_stride","DW_AT_MIPS_abstract_name","DW_AT_MIPS_clone_origin","DW_AT_MIPS_has_inlines","DW_AT_MIPS_stride_byte","DW_AT_MIPS_stride_elem","DW_AT_MIPS_ptr_dopetype","DW_AT_MIPS_allocatable_dopetype","DW_AT_MIPS_assumed_shape_dopetype","DW_AT_MIPS_assumed_size","DW_AT_INTEL_other_endian","DW_AT_sf_names","DW_AT_src_info","DW_AT_mac_info","DW_AT_src_coords","DW_AT_body_begin","DW_AT_body_end","DW_AT_GNU_vector","DW_AT_GNU_guarded_by","DW_AT_GNU_pt_guarded_by","DW_AT_GNU_guarded","DW_AT_GNU_pt_guarded","DW_AT_GNU_locks_excluded","DW_AT_GNU_exclusive_locks_required","DW_AT_GNU_shared_locks_required","DW_AT_GNU_odr_signature","DW_AT_GNU_template_name","DW_AT_GNU_call_site_value","DW_AT_GNU_call_site_data_value","DW_AT_GNU_call_site_target","DW_AT_GNU_call_site_target_clobbered","DW_AT_GNU_tail_call","DW_AT_GNU_all_tail_call_sites","DW_AT_GNU_all_call_sites","DW_AT_GNU_all_source_call_sites","DW_AT_GNU_macros","DW_AT_GNU_dwo_name","DW_AT_GNU_dwo_id","DW_AT_GNU_ranges_base","DW_AT_GNU_addr_base","DW_AT_GNU_pubnames","DW_AT_GNU_pubtypes","DW_AT_GNU_discriminator","DW_AT_GNU_locviews","DW_AT_GNU_entry_view","DW_AT_SUN_template","DW_AT_SUN_alignment","DW_AT_SUN_vtable","DW_AT_SUN_count_guarantee","DW_AT_SUN_command_line","DW_AT_SUN_vbase","DW_AT_SUN_compile_options","DW_AT_SUN_language","DW_AT_SUN_browser_file","DW_AT_SUN_vtable_abi","DW_AT_SUN_func_offsets","DW_AT_SUN_cf_kind","DW_AT_SUN_vtable_index","DW_AT_SUN_omp_tpriv_addr","DW_AT_SUN_omp_child_func","DW_AT_SUN_func_offset","DW_AT_SUN_memop_type_ref","DW_AT_SUN_profile_id","DW_AT_SUN_memop_signature","DW_AT_SUN_obj_dir","DW_AT_SUN_obj_file","DW_AT_SUN_original_name","DW_AT_SUN_hwcprof_signature","DW_AT_SUN_amd64_parmdump","DW_AT_SUN_part_link_name","DW_AT_SUN_link_name","DW_AT_SUN_pass_with_const","DW_AT_SUN_return_with_const","DW_AT_SUN_import_by_name","DW_AT_SUN_f90_pointer","DW_AT_SUN_pass_by_ref","DW_AT_SUN_f90_allocatable","DW_AT_SUN_f90_assumed_shape_array","DW_AT_SUN_c_vla","DW_AT_SUN_return_value_ptr","DW_AT_SUN_dtor_start","DW_AT_SUN_dtor_length","DW_AT_SUN_dtor_state_initial","DW_AT_SUN_dtor_state_final","DW_AT_SUN_dtor_state_deltas","DW_AT_SUN_import_by_lname","DW_AT_SUN_f90_use_only","DW_AT_SUN_namelist_spec","DW_AT_SUN_is_omp_child_func","DW_AT_SUN_fortran_main_alias","DW_AT_SUN_fortran_based","DW_AT_ALTIUM_loclist","DW_AT_use_GNAT_descriptive_type","DW_AT_GNAT_descriptive_type","DW_AT_GNU_numerator","DW_AT_GNU_denominator","DW_AT_GNU_bias","DW_AT_upc_threads_scaled","DW_AT_PGI_lbase","DW_AT_PGI_soffset","DW_AT_PGI_lstride","DW_AT_BORLAND_property_read","DW_AT_BORLAND_property_write","DW_AT_BORLAND_property_implements","DW_AT_BORLAND_property_index","DW_AT_BORLAND_property_default","DW_AT_BORLAND_Delphi_unit","DW_AT_BORLAND_Delphi_class","DW_AT_BORLAND_Delphi_record","DW_AT_BORLAND_Delphi_metaclass","DW_AT_BORLAND_Delphi_constructor","DW_AT_BORLAND_Delphi_destructor","DW_AT_BORLAND_Delphi_anonymous_method","DW_AT_BORLAND_Delphi_interface","DW_AT_BORLAND_Delphi_ABI","DW_AT_BORLAND_Delphi_return","DW_AT_BORLAND_Delphi_frameptr","DW_AT_BORLAND_closure","DW_AT_LLVM_include_path","DW_AT_LLVM_config_macros","DW_AT_LLVM_isysroot","DW_AT_APPLE_optimized","DW_AT_APPLE_flags","DW_AT_APPLE_isa","DW_AT_APPLE_block","DW_AT_APPLE_major_runtime_vers","DW_AT_APPLE_runtime_class","DW_AT_APPLE_omit_frame_ptr","DW_AT_APPLE_property_name","DW_AT_APPLE_property_getter","DW_AT_APPLE_property_setter","DW_AT_APPLE_property_attribute","DW_AT_APPLE_objc_complete_type","DW_AT_APPLE_property","static_string","DwForm","0","DW_FORM_null","DW_FORM_addr","DW_FORM_block2","DW_FORM_block4","DW_FORM_data2","DW_FORM_data4","DW_FORM_data8","DW_FORM_string","DW_FORM_block","DW_FORM_block1","DW_FORM_data1","DW_FORM_flag","DW_FORM_sdata","DW_FORM_strp","DW_FORM_udata","DW_FORM_ref_addr","DW_FORM_ref1","DW_FORM_ref2","DW_FORM_ref4","DW_FORM_ref8","DW_FORM_ref_udata","DW_FORM_indirect","DW_FORM_sec_offset","DW_FORM_exprloc","DW_FORM_flag_present","DW_FORM_ref_sig8","DW_FORM_strx","DW_FORM_addrx","DW_FORM_ref_sup4","DW_FORM_strp_sup","DW_FORM_data16","DW_FORM_line_strp","DW_FORM_implicit_const","DW_FORM_loclistx","DW_FORM_rnglistx","DW_FORM_ref_sup8","DW_FORM_strx1","DW_FORM_strx2","DW_FORM_strx3","DW_FORM_strx4","DW_FORM_addrx1","DW_FORM_addrx2","DW_FORM_addrx3","DW_FORM_addrx4","DW_FORM_GNU_addr_index","DW_FORM_GNU_str_index","DW_FORM_GNU_ref_alt","DW_FORM_GNU_strp_alt","static_string","DwAte","0","DW_ATE_address","DW_ATE_boolean","DW_ATE_complex_float","DW_ATE_float","DW_ATE_signed","DW_ATE_signed_char","DW_ATE_unsigned","DW_ATE_unsigned_char","DW_ATE_imaginary_float","DW_ATE_packed_decimal","DW_ATE_numeric_string","DW_ATE_edited","DW_ATE_signed_fixed","DW_ATE_unsigned_fixed","DW_ATE_decimal_float","DW_ATE_UTF","DW_ATE_UCS","DW_ATE_ASCII","DW_ATE_lo_user","DW_ATE_hi_user","static_string","DwLle","0","DW_LLE_end_of_list","DW_LLE_base_addressx","DW_LLE_startx_endx","DW_LLE_startx_length","DW_LLE_offset_pair","DW_LLE_default_location","DW_LLE_base_address","DW_LLE_start_end","DW_LLE_start_length","DW_LLE_GNU_view_pair","static_string","DwDs","0","DW_DS_unsigned","DW_DS_leading_overpunch","DW_DS_trailing_overpunch","DW_DS_leading_separate","DW_DS_trailing_separate","static_string","DwEnd","0","DW_END_default","DW_END_big","DW_END_little","DW_END_lo_user","DW_END_hi_user","static_string","DwAccess","0","DW_ACCESS_public","DW_ACCESS_protected","DW_ACCESS_private","static_string","DwVis","0","DW_VIS_local","DW_VIS_exported","DW_VIS_qualified","static_string","DwVirtuality","0","DW_VIRTUALITY_none","DW_VIRTUALITY_virtual","DW_VIRTUALITY_pure_virtual","static_string","DwLang","0","DW_LANG_C89","DW_LANG_C","DW_LANG_Ada83","DW_LANG_C_plus_plus","DW_LANG_Cobol74","DW_LANG_Cobol85","DW_LANG_Fortran77","DW_LANG_Fortran90","DW_LANG_Pascal83","DW_LANG_Modula2","DW_LANG_Java","DW_LANG_C99","DW_LANG_Ada95","DW_LANG_Fortran95","DW_LANG_PLI","DW_LANG_ObjC","DW_LANG_ObjC_plus_plus","DW_LANG_UPC","DW_LANG_D","DW_LANG_Python","DW_LANG_OpenCL","DW_LANG_Go","DW_LANG_Modula3","DW_LANG_Haskell","DW_LANG_C_plus_plus_03","DW_LANG_C_plus_plus_11","DW_LANG_OCaml","DW_LANG_Rust","DW_LANG_C11","DW_LANG_Swift","DW_LANG_Julia","DW_LANG_Dylan","DW_LANG_C_plus_plus_14","DW_LANG_Fortran03","DW_LANG_Fortran08","DW_LANG_RenderScript","DW_LANG_BLISS","DW_LANG_lo_user","DW_LANG_hi_user","DW_LANG_Mips_Assembler","DW_LANG_GOOGLE_RenderScript","DW_LANG_SUN_Assembler","DW_LANG_ALTIUM_Assembler","DW_LANG_BORLAND_Delphi","static_string","default_lower_bound","DwAddr","0","DW_ADDR_none","static_string","DwId","0","DW_ID_case_sensitive","DW_ID_up_case","DW_ID_down_case","DW_ID_case_insensitive","static_string","DwCc","0","DW_CC_normal","DW_CC_program","DW_CC_nocall","DW_CC_pass_by_reference","DW_CC_pass_by_value","DW_CC_lo_user","DW_CC_hi_user","static_string","DwInl","0","DW_INL_not_inlined","DW_INL_inlined","DW_INL_declared_not_inlined","DW_INL_declared_inlined","static_string","DwOrd","0","DW_ORD_row_major","DW_ORD_col_major","static_string","DwDsc","0","DW_DSC_label","DW_DSC_range","static_string","DwIdx","0","DW_IDX_compile_unit","DW_IDX_type_unit","DW_IDX_die_offset","DW_IDX_parent","DW_IDX_type_hash","DW_IDX_lo_user","DW_IDX_hi_user","static_string","DwDefaulted","0","DW_DEFAULTED_no","DW_DEFAULTED_in_class","DW_DEFAULTED_out_of_class","static_string","DwLns","0","DW_LNS_copy","DW_LNS_advance_pc","DW_LNS_advance_line","DW_LNS_set_file","DW_LNS_set_column","DW_LNS_negate_stmt","DW_LNS_set_basic_block","DW_LNS_const_add_pc","DW_LNS_fixed_advance_pc","DW_LNS_set_prologue_end","DW_LNS_set_epilogue_begin","DW_LNS_set_isa","static_string","DwLne","0","DW_LNE_end_sequence","DW_LNE_set_address","DW_LNE_define_file","DW_LNE_set_discriminator","DW_LNE_lo_user","DW_LNE_hi_user","static_string","DwLnct","0","DW_LNCT_path","DW_LNCT_directory_index","DW_LNCT_timestamp","DW_LNCT_size","DW_LNCT_MD5","DW_LNCT_lo_user","DW_LNCT_hi_user","static_string","DwMacro","0","DW_MACRO_define","DW_MACRO_undef","DW_MACRO_start_file","DW_MACRO_end_file","DW_MACRO_define_strp","DW_MACRO_undef_strp","DW_MACRO_import","DW_MACRO_define_sup","DW_MACRO_undef_sup","DW_MACRO_import_sup","DW_MACRO_define_strx","DW_MACRO_undef_strx","DW_MACRO_lo_user","DW_MACRO_hi_user","static_string","DwRle","0","DW_RLE_end_of_list","DW_RLE_base_addressx","DW_RLE_startx_endx","DW_RLE_startx_length","DW_RLE_offset_pair","DW_RLE_base_address","DW_RLE_start_end","DW_RLE_start_length","static_string","DwOp","0","DW_OP_addr","DW_OP_deref","DW_OP_const1u","DW_OP_const1s","DW_OP_const2u","DW_OP_const2s","DW_OP_const4u","DW_OP_const4s","DW_OP_const8u","DW_OP_const8s","DW_OP_constu","DW_OP_consts","DW_OP_dup","DW_OP_drop","DW_OP_over","DW_OP_pick","DW_OP_swap","DW_OP_rot","DW_OP_xderef","DW_OP_abs","DW_OP_and","DW_OP_div","DW_OP_minus","DW_OP_mod","DW_OP_mul","DW_OP_neg","DW_OP_not","DW_OP_or","DW_OP_plus","DW_OP_plus_uconst","DW_OP_shl","DW_OP_shr","DW_OP_shra","DW_OP_xor","DW_OP_bra","DW_OP_eq","DW_OP_ge","DW_OP_gt","DW_OP_le","DW_OP_lt","DW_OP_ne","DW_OP_skip","DW_OP_lit0","DW_OP_lit1","DW_OP_lit2","DW_OP_lit3","DW_OP_lit4","DW_OP_lit5","DW_OP_lit6","DW_OP_lit7","DW_OP_lit8","DW_OP_lit9","DW_OP_lit10","DW_OP_lit11","DW_OP_lit12","DW_OP_lit13","DW_OP_lit14","DW_OP_lit15","DW_OP_lit16","DW_OP_lit17","DW_OP_lit18","DW_OP_lit19","DW_OP_lit20","DW_OP_lit21","DW_OP_lit22","DW_OP_lit23","DW_OP_lit24","DW_OP_lit25","DW_OP_lit26","DW_OP_lit27","DW_OP_lit28","DW_OP_lit29","DW_OP_lit30","DW_OP_lit31","DW_OP_reg0","DW_OP_reg1","DW_OP_reg2","DW_OP_reg3","DW_OP_reg4","DW_OP_reg5","DW_OP_reg6","DW_OP_reg7","DW_OP_reg8","DW_OP_reg9","DW_OP_reg10","DW_OP_reg11","DW_OP_reg12","DW_OP_reg13","DW_OP_reg14","DW_OP_reg15","DW_OP_reg16","DW_OP_reg17","DW_OP_reg18","DW_OP_reg19","DW_OP_reg20","DW_OP_reg21","DW_OP_reg22","DW_OP_reg23","DW_OP_reg24","DW_OP_reg25","DW_OP_reg26","DW_OP_reg27","DW_OP_reg28","DW_OP_reg29","DW_OP_reg30","DW_OP_reg31","DW_OP_breg0","DW_OP_breg1","DW_OP_breg2","DW_OP_breg3","DW_OP_breg4","DW_OP_breg5","DW_OP_breg6","DW_OP_breg7","DW_OP_breg8","DW_OP_breg9","DW_OP_breg10","DW_OP_breg11","DW_OP_breg12","DW_OP_breg13","DW_OP_breg14","DW_OP_breg15","DW_OP_breg16","DW_OP_breg17","DW_OP_breg18","DW_OP_breg19","DW_OP_breg20","DW_OP_breg21","DW_OP_breg22","DW_OP_breg23","DW_OP_breg24","DW_OP_breg25","DW_OP_breg26","DW_OP_breg27","DW_OP_breg28","DW_OP_breg29","DW_OP_breg30","DW_OP_breg31","DW_OP_regx","DW_OP_fbreg","DW_OP_bregx","DW_OP_piece","DW_OP_deref_size","DW_OP_xderef_size","DW_OP_nop","DW_OP_push_object_address","DW_OP_call2","DW_OP_call4","DW_OP_call_ref","DW_OP_form_tls_address","DW_OP_call_frame_cfa","DW_OP_bit_piece","DW_OP_implicit_value","DW_OP_stack_value","DW_OP_implicit_pointer","DW_OP_addrx","DW_OP_constx","DW_OP_entry_value","DW_OP_const_type","DW_OP_regval_type","DW_OP_deref_type","DW_OP_xderef_type","DW_OP_convert","DW_OP_reinterpret","DW_OP_GNU_push_tls_address","DW_OP_GNU_implicit_pointer","DW_OP_GNU_entry_value","DW_OP_GNU_const_type","DW_OP_GNU_regval_type","DW_OP_GNU_deref_type","DW_OP_GNU_convert","DW_OP_GNU_reinterpret","DW_OP_GNU_parameter_ref","DW_OP_GNU_addr_index","DW_OP_GNU_const_index","static_string","DwEhPe","0","DW_EH_PE_uleb128","DW_EH_PE_udata2","DW_EH_PE_udata4","DW_EH_PE_udata8","DW_EH_PE_sleb128","DW_EH_PE_sdata2","DW_EH_PE_sdata4","DW_EH_PE_sdata8","DW_EH_PE_pcrel","DW_EH_PE_textrel","DW_EH_PE_datarel","DW_EH_PE_funcrel","DW_EH_PE_aligned","DW_EH_PE_indirect","DW_EH_PE_absptr","DW_EH_PE_omit","static_string","format","application","is_absent","is_indirect","is_valid_encoding","leb128","read","unsigned","u16","signed","read","DebugAddr","DebugFrame","EhFrameHdr","ParsedEhFrameHdr","EhHdrTable","EhFrame","UnwindOffset","into","UnwindSection","Offset","entries","cie_from_offset","partial_fde_from_offset","fde_from_offset","fde_for_address","unwind_info_for_address","BaseAddresses","eh_frame_hdr","eh_frame","SectionBaseAddresses","section","text","data","CfiEntriesIter","CieOrFde","Cie","Fde","Augmentation","CommonInformationEntry","PartialFrameDescriptionEntry","FrameDescriptionEntry","UninitializedUnwindContext","UnwindContext","UnwindTable","RegisterRuleIter","UnwindTableRow","CfaRule","RegisterAndOffset","register","offset","Expression","RegisterRule","Undefined","SameValue","Offset","ValOffset","Register","Expression","ValExpression","Architectural","CallFrameInstruction","SetLoc","address","AdvanceLoc","delta","DefCfa","register","offset","DefCfaSf","register","factored_offset","DefCfaRegister","register","DefCfaOffset","offset","DefCfaOffsetSf","factored_offset","DefCfaExpression","expression","Undefined","register","SameValue","register","Offset","register","factored_offset","OffsetExtendedSf","register","factored_offset","ValOffset","register","factored_offset","ValOffsetSf","register","factored_offset","Register","dest_register","src_register","Expression","register","expression","ValExpression","register","expression","Restore","register","RememberState","RestoreState","ArgsSize","size","Nop","CallFrameInstructionIter","Pointer","Direct","Indirect","Dwarf","debug_abbrev","debug_addr","debug_info","debug_line","debug_line_str","debug_str","debug_str_offsets","debug_str_sup","debug_types","locations","ranges","file_type","Unit","header","abbreviations","name","comp_dir","low_pc","str_offsets_base","addr_base","loclists_base","rnglists_base","line_program","RangeIter","EndianSlice","ReaderOffsetId","0","ReaderOffset","from_u8","from_u16","from_i16","from_u32","from_u64","into_u64","wrapping_add","checked_sub","Reader","Endian","Offset","endian","len","empty","truncate","offset_from","offset_id","lookup_offset_id","find","skip","split","to_slice","to_string","to_string_lossy","read_slice","read_u8_array","is_empty","read_u8","read_i8","read_u16","read_i16","read_u32","read_i32","read_u64","read_i64","read_f32","read_f64","read_uint","read_null_terminated_slice","read_uleb128","read_uleb128_u16","read_sleb128","read_initial_length","read_address","read_word","read_length","read_offset","read_sized_offset","DebugAbbrev","Abbreviations","Abbreviation","AttributeSpecification","ArangeEntry","DebugAranges","ArangeEntryIter","DebugLine","LineNumberProgram","LineProgram","header","add_file","StateMachine","LineRows","Opcode","LineInstruction","Special","Copy","AdvancePc","AdvanceLine","SetFile","SetColumn","NegateStatement","SetBasicBlock","ConstAddPc","FixedAddPc","SetPrologueEnd","SetEpilogueBegin","SetIsa","UnknownStandard0","UnknownStandard1","UnknownStandardN","EndSequence","SetAddress","DefineFile","SetDiscriminator","UnknownExtended","OpcodesIter","LineInstructions","LineNumberRow","LineRow","ColumnType","LeftEdge","Column","LineNumberSequence","LineSequence","start","end","LineNumberProgramHeader","LineProgramHeader","IncompleteLineNumberProgram","IncompleteLineProgram","CompleteLineNumberProgram","CompleteLineProgram","FileEntry","FileEntryFormat","content_type","form","DebugLoc","DebugLocLists","LocationLists","RawLocListIter","RawLocListEntry","AddressOrOffsetPair","begin","end","data","BaseAddress","addr","BaseAddressx","addr","StartxEndx","begin","end","data","StartxLength","begin","length","data","OffsetPair","begin","end","data","DefaultLocation","data","StartEnd","begin","end","data","StartLength","begin","length","data","LocListIter","LocationListEntry","range","data","DieReference","UnitRef","DebugInfoRef","Operation","Deref","base_type","size","space","Drop","Pick","index","Swap","Rot","Abs","And","Div","Minus","Mod","Mul","Neg","Not","Or","Plus","PlusConstant","value","Shl","Shr","Shra","Xor","Bra","target","Eq","Ge","Gt","Le","Lt","Ne","Skip","target","UnsignedConstant","value","SignedConstant","value","Register","register","RegisterOffset","register","offset","base_type","FrameOffset","offset","Nop","PushObjectAddress","Call","offset","TLS","CallFrameCFA","Piece","size_in_bits","bit_offset","ImplicitValue","data","StackValue","ImplicitPointer","value","byte_offset","EntryValue","expression","ParameterRef","offset","Address","address","AddressIndex","index","ConstantIndex","index","TypedLiteral","base_type","value","Convert","base_type","Reinterpret","base_type","Location","Empty","Register","register","Address","address","Value","value","Bytes","value","ImplicitPointer","value","byte_offset","Piece","size_in_bits","bit_offset","location","EvaluationResult","Complete","RequiresMemory","address","size","space","base_type","RequiresRegister","register","base_type","RequiresFrameBase","RequiresTls","RequiresCallFrameCfa","RequiresAtLocation","RequiresEntryValue","RequiresParameterRef","RequiresRelocatedAddress","RequiresIndexedAddress","index","relocate","RequiresBaseType","Expression","0","OperationIter","Evaluation","PubNamesEntry","DebugPubNames","PubNamesEntryIter","PubTypesEntry","DebugPubTypes","PubTypesEntryIter","DebugRanges","DebugRngLists","RangeLists","RawRngListIter","RawRngListEntry","AddressOrOffsetPair","begin","end","BaseAddress","addr","BaseAddressx","addr","StartxEndx","begin","end","StartxLength","begin","length","OffsetPair","begin","end","StartEnd","begin","end","StartLength","begin","length","RngListIter","Range","begin","end","DebugStr","DebugStrOffsets","DebugLineStr","UnitOffset","0","DebugInfo","DebugInfoUnitHeadersIter","UnitType","Compilation","Type","type_signature","type_offset","Partial","Skeleton","SplitCompilation","SplitType","type_signature","type_offset","UnitHeader","DebuggingInformationEntry","AttributeValue","Addr","Block","Data1","Data2","Data4","Data8","Sdata","Udata","Exprloc","Flag","SecOffset","DebugAddrBase","DebugAddrIndex","UnitRef","DebugInfoRef","DebugInfoRefSup","DebugLineRef","LocationListsRef","DebugLocListsBase","DebugLocListsIndex","DebugMacinfoRef","DebugMacroRef","RangeListsRef","DebugRngListsBase","DebugRngListsIndex","DebugTypesRef","DebugStrRef","DebugStrRefSup","DebugStrOffsetsBase","DebugStrOffsetsIndex","DebugLineStrRef","String","Encoding","DecimalSign","Endianity","Accessibility","Visibility","Virtuality","Language","AddressClass","IdentifierCase","CallingConvention","Inline","Ordering","FileIndex","DwoId","Attribute","AttrsIter","EntriesRaw","EntriesCursor","EntriesTree","EntriesTreeNode","EntriesTreeIter","DebugTypes","DebugTypesUnitHeadersIter","ValueType","Generic","I8","U8","I16","U16","I32","U32","I64","U64","F32","F64","Value","Generic","I8","U8","I16","U16","I32","U32","I64","U64","F32","F64","EndianBuf","Error","Io","PcRelativePointerButSectionBaseIsUndefined","TextRelativePointerButTextBaseIsUndefined","DataRelativePointerButDataBaseIsUndefined","FuncRelativePointerInBadContext","CannotParseOmitPointerEncoding","BadUnsignedLeb128","BadSignedLeb128","AbbreviationTagZero","AttributeFormZero","BadHasChildren","BadLength","UnknownForm","ExpectedZero","DuplicateAbbreviationCode","DuplicateArange","UnknownReservedLength","UnknownVersion","UnknownAbbreviation","UnexpectedEof","UnexpectedNull","UnknownStandardOpcode","UnknownExtendedOpcode","UnsupportedAddressSize","UnsupportedOffsetSize","UnsupportedFieldSize","MinimumInstructionLengthZero","MaximumOperationsPerInstructionZero","LineRangeZero","OpcodeBaseZero","BadUtf8","NotCieId","NotCiePointer","NotFdePointer","BadBranchTarget","InvalidPushObjectAddress","NotEnoughStackItems","TooManyIterations","InvalidExpression","InvalidPiece","InvalidExpressionTerminator","DivisionByZero","TypeMismatch","IntegralTypeRequired","UnsupportedTypeOperation","InvalidShiftExpression","UnknownCallFrameInstruction","InvalidAddressRange","InvalidLocationAddressRange","CfiInstructionInInvalidContext","PopWithEmptyStack","NoUnwindInfoForAddress","UnsupportedOffset","UnknownPointerEncoding","NoEntryAtGivenOffset","OffsetOutOfBounds","UnknownAugmentation","UnsupportedPointerEncoding","UnsupportedRegister","TooManyRegisterRules","CfiStackFull","VariableLengthSearchTable","UnsupportedUnitType","UnsupportedAddressIndex","UnsupportedSegmentSize","MissingUnitDie","UnsupportedAttributeForm","MissingFileEntryFormatPath","ExpectedStringAttributeValue","InvalidImplicitConst","description","Result","Section","id","section_name","dwo_section_name","load","reader","lookup_offset_id","Format","Dwarf64","Dwarf32","Encoding","address_size","format","version","LineEncoding","minimum_instruction_length","maximum_operations_per_instruction","default_is_stmt","line_base","line_range","Register","0","DebugAbbrevOffset","0","DebugAddrBase","0","DebugAddrIndex","0","DebugInfoOffset","0","DebugLineOffset","0","DebugLineStrOffset","0","LocationListsOffset","0","DebugLocListsBase","0","DebugLocListsIndex","0","DebugMacinfoOffset","0","DebugMacroOffset","0","RangeListsOffset","0","DebugRngListsBase","0","DebugRngListsIndex","0","DebugStrOffset","0","DebugStrOffsetsBase","0","DebugStrOffsetsIndex","0","DebugTypesOffset","0","DebugTypeSignature","0","DebugFrameOffset","0","EhFrameOffset","0","UnitSectionOffset","DebugInfoOffset","DebugTypesOffset","SectionId","DebugAbbrev","DebugAddr","DebugAranges","DebugFrame","EhFrame","EhFrameHdr","DebugInfo","DebugLine","DebugLineStr","DebugLoc","DebugLocLists","DebugMacinfo","DebugMacro","DebugPubNames","DebugPubTypes","DebugRanges","DebugRngLists","DebugStr","DebugStrOffsets","DebugTypes","DwoId","0","DwarfFileType","Main","Dwo","Arm","X86","X86_64","BigEndian","Endianity","is_big_endian","is_little_endian","read_u16","read_u32","read_u64","read_uint","read_i16","read_i32","read_i64","read_f32","read_f64","write_u16","write_u32","write_u64","LittleEndian","NativeEndian","RunTimeEndian","Little","Big","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","is_big_endian","is_big_endian","is_big_endian","into","into","endian","len","is_empty","empty","truncate","offset_from","offset_id","lookup_offset_id","find","skip","split","to_slice","to_string","to_string_lossy","read_slice","header","add_file","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","id","reader","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","index","index","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","next","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","initial_length_size","word_size","as_debug_info_offset","as_debug_types_offset","name","dwo_name","R0","R1","R2","R3","R4","R5","R6","R7","R8","R9","R10","R11","R12","R13","R14","R15","register_name","name_to_register","EAX","ECX","EDX","EBX","ESP","EBP","ESI","EDI","RA","ST0","ST1","ST2","ST3","ST4","ST5","ST6","ST7","XMM0","XMM1","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","MM0","MM1","MM2","MM3","MM4","MM5","MM6","MM7","MXCSR","ES","CS","SS","DS","FS","GS","TR","LDTR","FS_BASE","GS_BASE","register_name","name_to_register","RAX","RDX","RCX","RBX","RSI","RDI","RBP","RSP","R8","R9","R10","R11","R12","R13","R14","R15","RA","XMM0","XMM1","XMM2","XMM3","XMM4","XMM5","XMM6","XMM7","XMM8","XMM9","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","ST0","ST1","ST2","ST3","ST4","ST5","ST6","ST7","MM0","MM1","MM2","MM3","MM4","MM5","MM6","MM7","RFLAGS","ES","CS","SS","DS","FS","GS","FS_BASE","GS_BASE","TR","LDTR","MXCSR","FCW","FSW","XMM16","XMM17","XMM18","XMM19","XMM20","XMM21","XMM22","XMM23","XMM24","XMM25","XMM26","XMM27","XMM28","XMM29","XMM30","XMM31","K0","K1","K2","K3","K4","K5","K6","K7","register_name","name_to_register","is_little_endian","read_u16","read_u32","read_u64","read_uint","read_i16","read_i32","read_i64","read_f32","read_f64","write_u16","write_u32","write_u64","get_address","borrow","set_address_size","set_segment_size","new","new","parse","eh_frame_ptr","table","lookup","pointer_to_offset","fde_for_address","unwind_info_for_address","set_address_size","new","entries","cie_from_offset","partial_fde_from_offset","fde_from_offset","fde_for_address","unwind_info_for_address","set_eh_frame_hdr","set_eh_frame","set_text","set_got","next","offset","encoding","address_size","instructions","entry_len","version","augmentation","has_lsda","lsda_encoding","personality_with_encoding","personality","fde_address_encoding","is_signal_trampoline","code_alignment_factor","data_alignment_factor","return_address_register","parse","rows","unwind_info_for_address","offset","cie","entry_len","instructions","initial_address","len","contains","lsda","is_signal_trampoline","personality","new","initialize","new","next_row","start_address","end_address","contains","saved_args_size","cfa","register","registers","next","load","borrow","units","unit","type_units","abbreviations","string_offset","string","line_string","attr_string","address","attr_address","ranges_offset","ranges","attr_ranges_offset","attr_ranges","die_ranges","unit_ranges","locations_offset","locations","attr_locations_offset","attr_locations","lookup_offset_id","format_error","new","encoding","entry","entries","entries_at_offset","entries_tree","entries_raw","copy_relocated_attributes","to_unit_offset","to_unit_section_offset","next","new","slice","split_at","find","offset_from","to_string","to_string_lossy","range","range_from","range_to","read_u8_array","is_empty","read_u8","read_i8","read_u16","read_i16","read_u32","read_i32","read_u64","read_i64","read_f32","read_f64","read_uint","read_null_terminated_slice","read_uleb128","read_uleb128_u16","read_sleb128","read_initial_length","read_address","read_word","read_length","read_offset","read_sized_offset","new","abbreviations","borrow","get","code","tag","has_children","attributes","new","name","form","implicit_const_value","size","segment","address","length","debug_info_offset","new","items","next","new","program","borrow","header","next_row","next_instruction","new","address","op_index","file_index","file","line","column","is_stmt","basic_block","end_sequence","prologue_end","epilogue_begin","isa","discriminator","execute","reset","offset","unit_length","encoding","version","header_length","address_size","format","line_encoding","minimum_instruction_length","maximum_operations_per_instruction","default_is_stmt","line_base","line_range","opcode_base","standard_opcode_lengths","directory_entry_format","include_directories","directory","file_name_entry_format","file_has_timestamp","file_has_size","file_has_md5","file_names","file","raw_program_buf","instructions","header","rows","sequences","header","resume_from","path_name","directory_index","directory","timestamp","size","md5","new","new","default_for_encoding_and_file","new","borrow","locations","locations_dwo","raw_locations","raw_locations_dwo","get_offset","lookup_offset_id","next","next","is_empty","parse","evaluation","operations","next","offset_from","new","set_initial_value","set_object_address","set_max_iterations","result","evaluate","resume_with_memory","resume_with_register","resume_with_frame_base","resume_with_tls","resume_with_call_frame_cfa","resume_with_at_location","resume_with_entry_value","resume_with_parameter_ref","resume_with_relocated_address","resume_with_indexed_address","resume_with_base_type","name","unit_header_offset","die_offset","new","items","next","name","unit_header_offset","die_offset","new","items","next","new","new","default_for_encoding_and_file","new","borrow","ranges","raw_ranges","get_offset","lookup_offset_id","next","next","new","get_str","borrow","get_str_offset","borrow","default_for_encoding_and_file","get_str","borrow","to_unit_offset","to_unit_offset","to_debug_info_offset","to_debug_types_offset","new","units","header_from_offset","borrow","next","new","offset","size_of_header","unit_length","length_including_self","encoding","version","type_","debug_abbrev_offset","address_size","format","header_size","range","range_from","range_to","entry","entries","entries_at_offset","entries_tree","entries_raw","abbreviations","new","code","offset","tag","has_children","attrs","attr","attr_value_raw","attr_value","name","raw_value","value","u8_value","u16_value","udata_value","sdata_value","offset_value","exprloc_value","string_value","string_value_sup","u8_value","u16_value","udata_value","sdata_value","offset_value","exprloc_value","string_value","string_value_sup","next","is_empty","next_offset","next_depth","read_abbreviation","read_attribute","current","next_entry","next_dfs","next_sibling","root","entry","children","next","new","borrow","units","next","bit_size","from_encoding","from_entry","value_type","parse","to_u64","from_u64","convert","reinterpret","abs","neg","add","sub","mul","div","rem","not","and","or","xor","shl","shr","shra","eq","ge","gt","le","lt","ne"],"q":["gimli","gimli::constantsgimli","gimli::leb128","gimli::leb128::read","","","gimli","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read::CfaRule","","gimli::read","","","","","","","","","","","","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","","gimli::read","gimli::read::CallFrameInstruction","gimli::read","","","gimli::read::CallFrameInstruction","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read::RawLocListEntry","","","gimli::read","gimli::read::RawLocListEntry","gimli::read","gimli::read::RawLocListEntry","gimli::read","gimli::read::RawLocListEntry","","","gimli::read","gimli::read::RawLocListEntry","","","gimli::read","gimli::read::RawLocListEntry","","","gimli::read","gimli::read::RawLocListEntry","gimli::read","gimli::read::RawLocListEntry","","","gimli::read","gimli::read::RawLocListEntry","","","gimli::read","","","","","","","","","gimli::read::Operation","","","gimli::read","","gimli::read::Operation","gimli::read","","","","","","","","","","","","","gimli::read::Operation","gimli::read","","","","","gimli::read::Operation","gimli::read","","","","","","","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","","","gimli::read","gimli::read::Operation","gimli::read","","","gimli::read::Operation","gimli::read","","","gimli::read::Operation","","gimli::read","gimli::read::Operation","gimli::read","","gimli::read::Operation","","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","","gimli::read","gimli::read::Operation","gimli::read","gimli::read::Operation","gimli::read","","","gimli::read::Location","gimli::read","gimli::read::Location","gimli::read","gimli::read::Location","gimli::read","gimli::read::Location","gimli::read","gimli::read::Location","","gimli::read","","","","","","","gimli::read::EvaluationResult","","","","gimli::read","gimli::read::EvaluationResult","","gimli::read","","","","","","","","gimli::read::EvaluationResult","","gimli::read","","","","","","","","","","","","","","","","","gimli::read::RawRngListEntry","","gimli::read","gimli::read::RawRngListEntry","gimli::read","gimli::read::RawRngListEntry","gimli::read","gimli::read::RawRngListEntry","","gimli::read","gimli::read::RawRngListEntry","","gimli::read","gimli::read::RawRngListEntry","","gimli::read","gimli::read::RawRngListEntry","","gimli::read","gimli::read::RawRngListEntry","","gimli::read","","","","","","","","","","","","","","gimli::read::UnitType","","gimli::read","","","","gimli::read::UnitType","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimligimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::readgimli","","","","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read","","gimli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read","","","gimli","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read","","","","","gimli","","","","","","","","","","","","","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","gimli::read","","","","","","gimli","","","","gimli::read","","","","","","","","","","","","","","","","","","","","gimli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::constants","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","","","","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","gimligimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli","gimli::read","","","","","","","","","","","","","gimli","gimli::read","","gimli","","gimli::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Constant definitions.","The unit type field in a unit header.","","","","","","","","","","","The opcode for a call frame instruction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The child determination encodings for DIE attributes.","","","","","The tag encodings for DIE attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The attribute encodings for DIE attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The attribute form encodings for DIE attributes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The encodings of the constants used in the <code>DW_AT_encoding</code> …","","","","","","","","","","","","","","","","","","","","","","","The encodings of the constants used in location list …","","","","","","","","","","","","","The encodings of the constants used in the …","","","","","","","","The encodings of the constants used in the <code>DW_AT_endianity</code>…","","","","","","","","The encodings of the constants used in the …","","","","","","The encodings of the constants used in the …","","","","","","The encodings of the constants used in the …","","","","","","The encodings of the constants used in the <code>DW_AT_language</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default DW_AT_lower_bound for this language.","The encodings of the constants used in the …","","","","The encodings of the constants used in the …","","","","","","","The encodings of the constants used in the …","","","","","","","","","","The encodings of the constants used in the <code>DW_AT_inline</code> …","","","","","","","The encodings of the constants used in the <code>DW_AT_ordering</code> …","","","","","The encodings of the constants used in the …","","","","","Name index attribute encodings.","","","","","","","","","","The encodings of the constants used in the <code>DW_AT_defaulted</code>…","","","","","","The encodings for the standard opcodes for line number …","","","","","","","","","","","","","","","The encodings for the extended opcodes for line number …","","","","","","","","","The encodings for the line number header entry formats.","","","","","","","","","","The encodings for macro information entry types.","","","","","","","","","","","","","","","","","Range list entry encoding values.","","","","","","","","","","","The encodings for DWARF expression operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer encoding used by <code>.eh_frame</code>.","","","","","","","","","","","","","","","","","","","Get the pointer encoding’s format.","Get the pointer encoding’s application.","Is this encoding the absent pointer encoding?","Is this coding indirect? If so, its encoded value is the …","Is this a known, valid pointer encoding?","Read and write DWARF’s “Little Endian Base 128” …","A module for reading signed and unsigned integers that …","Read an unsigned LEB128 number from the given <code>Reader</code> and …","Read an LEB128 u16 from the given <code>Reader</code> and return it or …","Read a signed LEB128 number from the given <code>Reader</code> and …","Read DWARF debugging information.","The raw contents of the <code>.debug_addr</code> section.","<code>DebugFrame</code> contains the <code>.debug_frame</code> section’s frame …","<code>EhFrameHdr</code> contains the information about the …","<code>ParsedEhFrameHdr</code> contains the parsed information from the …","The CFI binary search table that is an optional part of …","<code>EhFrame</code> contains the frame unwinding information needed …","An offset into an <code>UnwindSection</code>.","Convert an <code>UnwindOffset<T></code> into a <code>T</code>.","A section holding unwind information: either <code>.debug_frame</code> …","The offset type associated with this CFI section. Either …","Iterate over the <code>CommonInformationEntry</code>s and …","Parse the <code>CommonInformationEntry</code> at the given offset.","Parse the <code>PartialFrameDescriptionEntry</code> at the given …","Parse the <code>FrameDescriptionEntry</code> at the given offset.","Find the <code>FrameDescriptionEntry</code> for the given address.","Find the frame unwind information for the given address.","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","The base addresses to use for pointers in the …","The base addresses to use for pointers in the <code>.eh_frame</code> …","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","The address of the section containing the pointer.","The base address for text relative pointers. This is …","The base address for data relative pointers.","An iterator over CIE and FDE entries in a <code>.debug_frame</code> or …","Either a <code>CommonInformationEntry</code> (CIE) or a …","This CFI entry is a <code>CommonInformationEntry</code>.","This CFI entry is a <code>FrameDescriptionEntry</code>, however fully …","We support the z-style augmentation defined by <code>.eh_frame</code>.","A Common Information Entry holds information that is …","A partially parsed <code>FrameDescriptionEntry</code>.","A <code>FrameDescriptionEntry</code> is a set of CFA instructions for …","Common context needed when evaluating the call frame …","An unwinding context.","The <code>UnwindTable</code> iteratively evaluates a …","An unordered iterator for register rules.","A row in the virtual unwind table that describes how to …","The canonical frame address (CFA) recovery rules.","The CFA is given offset from the given register’s value.","The register containing the base value.","The offset from the register’s base value.","The CFA is obtained by evaluating this <code>Reader</code> as a DWARF …","An entry in the abstract CFI table that describes how to …","A register that has this rule has no recoverable value in …","This register has not been modified from the previous …","“The previous value of this register is saved at the …","“The previous value of this register is the value CFA+N …","“The previous value of this register is stored in …","“The previous value of this register is located at the …","“The previous value of this register is the value …","“The rule is defined externally to this specification …","A parsed call frame instruction.","DW_CFA_set_locThe DW_CFA_set_loc instruction takes a …","The target address.","The <code>AdvanceLoc</code> instruction is used for all of …","The delta to be added to the current address.","DW_CFA_def_cfaThe DW_CFA_def_cfa instruction takes two …","The target register’s number.","The non-factored offset.","DW_CFA_def_cfa_sfThe DW_CFA_def_cfa_sf instruction takes …","The target register’s number.","The factored offset.","DW_CFA_def_cfa_registerThe DW_CFA_def_cfa_register …","The target register’s number.","DW_CFA_def_cfa_offsetThe DW_CFA_def_cfa_offset …","The non-factored offset.","DW_CFA_def_cfa_offset_sfThe DW_CFA_def_cfa_offset_sf …","The factored offset.","DW_CFA_def_cfa_expressionThe DW_CFA_def_cfa_expression …","The DWARF expression.","DW_CFA_undefinedThe DW_CFA_undefined instruction takes a …","The target register’s number.","DW_CFA_same_valueThe DW_CFA_same_value instruction takes …","The target register’s number.","The <code>Offset</code> instruction represents both <code>DW_CFA_offset</code> and …","The target register’s number.","The factored offset.","DW_CFA_offset_extended_sfThe DW_CFA_offset_extended_sf …","The target register’s number.","The factored offset.","DW_CFA_val_offsetThe DW_CFA_val_offset instruction takes …","The target register’s number.","The factored offset.","DW_CFA_val_offset_sfThe DW_CFA_val_offset_sf instruction …","The target register’s number.","The factored offset.","DW_CFA_registerThe DW_CFA_register instruction takes two …","The number of the register whose rule is being changed.","The number of the register where the other register’s …","DW_CFA_expressionThe DW_CFA_expression instruction takes …","The target register’s number.","The DWARF expression.","DW_CFA_val_expressionThe DW_CFA_val_expression …","The target register’s number.","The DWARF expression.","The <code>Restore</code> instruction represents both <code>DW_CFA_restore</code> and…","The register to be reset.","DW_CFA_remember_stateThe DW_CFA_remember_state …","DW_CFA_restore_stateThe DW_CFA_restore_state instruction …","DW_CFA_GNU_args_size","The size of the arguments which have been pushed onto the …","DW_CFA_nopThe DW_CFA_nop instruction has no operands and …","A lazy iterator parsing call frame instructions.","A decoded pointer.","This value is the decoded pointer value.","This value is <em>not</em> the pointer value, but points to the …","All of the commonly used DWARF sections, and other common …","The <code>.debug_abbrev</code> section.","The <code>.debug_addr</code> section.","The <code>.debug_info</code> section.","The <code>.debug_line</code> section.","The <code>.debug_line_str</code> section.","The <code>.debug_str</code> section.","The <code>.debug_str_offsets</code> section.","The <code>.debug_str</code> section for a supplementary object file.","The <code>.debug_types</code> section.","The location lists in the <code>.debug_loc</code> and <code>.debug_loclists</code> …","The range lists in the <code>.debug_ranges</code> and <code>.debug_rnglists</code> …","The type of this file.","All of the commonly used information for a unit in the …","The header of the unit.","The parsed abbreviations for the unit.","The <code>DW_AT_name</code> attribute of the unit.","The <code>DW_AT_comp_dir</code> attribute of the unit.","The <code>DW_AT_low_pc</code> attribute of the unit. Defaults to 0.","The <code>DW_AT_str_offsets_base</code> attribute of the unit. …","The <code>DW_AT_addr_base</code> attribute of the unit. Defaults to 0.","The <code>DW_AT_loclists_base</code> attribute of the unit. Defaults …","The <code>DW_AT_rnglists_base</code> attribute of the unit. Defaults …","The line number program of the unit.","An iterator for the address ranges of a …","A <code>&[u8]</code> slice with endianity metadata.","An identifier for an offset within a section reader.","","A trait for offsets with a DWARF section.","Convert a u8 to an offset.","Convert a u16 to an offset.","Convert an i16 to an offset.","Convert a u32 to an offset.","Convert a u64 to an offset.","Convert an offset to a u64.","Wrapping (modular) addition. Computes <code>self + other</code>.","Checked subtraction. Computes <code>self - other</code>.","A trait for reading the data from a DWARF section.","The endianity of bytes that are read.","The type used for offsets and lengths.","Return the endianity of bytes that are read.","Return the number of bytes remaining.","Set the number of bytes remaining to zero.","Set the number of bytes remaining to the specified length.","Return the offset of this reader’s data relative to the …","Return an identifier for the current reader offset.","Return the offset corresponding to the given <code>id</code> if it is …","Find the index of the first occurence of the given byte. …","Discard the specified number of bytes.","Split a reader in two.","Return all remaining data as a clone-on-write slice.","Convert all remaining data to a clone-on-write string.","Convert all remaining data to a clone-on-write string, …","Read exactly <code>buf.len()</code> bytes into <code>buf</code>.","Read a u8 array.","Return true if the number of bytes remaining is zero.","Read a u8.","Read an i8.","Read a u16.","Read an i16.","Read a u32.","Read an i32.","Read a u64.","Read an i64.","Read a f32.","Read a f64.","Read an unsigned n-bytes integer u64.","Read a null-terminated slice, and return it (excluding …","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded u16.","Read a signed LEB128 encoded integer.","Read an initial length field.","Read an address-sized integer, and return it as a <code>u64</code>.","Parse a word-sized integer according to the DWARF format.","Parse a word-sized section length according to the DWARF …","Parse a word-sized section offset according to the DWARF …","Parse a section offset of the given size.","The <code>DebugAbbrev</code> struct represents the abbreviations …","A set of type abbreviations.","An abbreviation describes the shape of a …","The description of an attribute in an abbreviated type. …","A single parsed arange.","The <code>DebugAranges</code> struct represents the DWARF address …","An iterator over the aranges from a <code>.debug_aranges</code> …","The <code>DebugLine</code> struct contains the source location to …","Deprecated. <code>LineNumberProgram</code> has been renamed to …","A <code>LineProgram</code> provides access to a <code>LineProgramHeader</code> and …","Get a reference to the held <code>LineProgramHeader</code>.","Add a file to the file table if necessary.","Deprecated. <code>StateMachine</code> has been renamed to <code>LineRows</code>.","Executes a <code>LineProgram</code> to iterate over the rows in the …","Deprecated. <code>Opcode</code> has been renamed to <code>LineInstruction</code>.","A parsed line number program instruction.","6.2.5.1 Special Opcodes","“[<code>LineInstruction::Copy</code>] appends a row to the matrix …","“The DW_LNS_advance_pc opcode takes a single unsigned …","“The DW_LNS_advance_line opcode takes a single signed …","“The DW_LNS_set_file opcode takes a single unsigned …","“The DW_LNS_set_column opcode takes a single unsigned …","“The DW_LNS_negate_stmt opcode takes no operands. It …","“The DW_LNS_set_basic_block opcode takes no operands. …","The DW_LNS_const_add_pc opcode takes no operands. It …","The DW_LNS_fixed_advance_pc opcode takes a single uhalf …","“[<code>LineInstruction::SetPrologueEnd</code>] sets the …","“[<code>LineInstruction::SetEpilogueBegin</code>] sets the …","“The DW_LNS_set_isa opcode takes a single unsigned …","An unknown standard opcode with zero operands.","An unknown standard opcode with one operand.","An unknown standard opcode with multiple operands.","[<code>LineInstruction::EndSequence</code>] sets the end_sequence …","The DW_LNE_set_address opcode takes a single relocatable …","Defines a new source file in the line number program and …","“The DW_LNE_set_discriminator opcode takes a single …","An unknown extended opcode and the slice of its unparsed …","Deprecated. <code>OpcodesIter</code> has been renamed to …","An iterator yielding parsed instructions.","Deprecated. <code>LineNumberRow</code> has been renamed to <code>LineRow</code>.","A row in the line number program’s resulting matrix.","The type of column that a row is referring to.","The <code>LeftEdge</code> means that the statement begins at the start …","A column number, whose range begins at 1.","Deprecated. <code>LineNumberSequence</code> has been renamed to …","A sequence within a line number program.  A sequence, as …","The first address that is covered by this sequence within …","The first address that is <em>not</em> covered by this sequence …","Deprecated. <code>LineNumberProgramHeader</code> has been renamed to …","A header for a line number program in the <code>.debug_line</code> …","Deprecated. <code>IncompleteLineNumberProgram</code> has been renamed …","A line number program that has not been run to completion.","Deprecated. <code>CompleteLineNumberProgram</code> has been renamed to …","A line number program that has previously been run to …","An entry in the <code>LineProgramHeader</code>’s <code>file_names</code> set.","The format of a component of an include directory or file …","The type of information that is represented by the …","The encoding form of the component value.","The raw contents of the <code>.debug_loc</code> section.","The <code>DebugLocLists</code> struct represents the DWARF data found …","The DWARF data found in <code>.debug_loc</code> and <code>.debug_loclists</code> …","A raw iterator over a location list.","A raw entry in .debug_loclists.","A location from DWARF version <= 4.","Start of range. May be an address or an offset.","End of range. May be an address or an offset.","expression","DW_LLE_base_address","base address","DW_LLE_base_addressx","base address","DW_LLE_startx_endx","start of range","end of range","expression","DW_LLE_startx_length","start of range","length of range","expression","DW_LLE_offset_pair","start of range","end of range","expression","DW_LLE_default_location","expression","DW_LLE_start_end","start of range","end of range","expression","DW_LLE_start_length","start of range","length of range","expression","An iterator over a location list.","A location list entry from the <code>.debug_loc</code> or …","The address range that this location is valid for.","The data containing a single location description.","A reference to a DIE, either relative to the current CU or…","A CU-relative reference.","A section-relative reference.","A single decoded DWARF expression operation.","Dereference the topmost value of the stack.","The DIE of the base type or 0 to indicate the generic type","The size of the data to dereference.","True if the dereference operation takes an address space …","Drop an item from the stack.","Pick an item from the stack and push it on top of the …","The index, from the top of the stack, of the item to copy.","Swap the top two stack items.","Rotate the top three stack items.","Take the absolute value of the top of the stack.","Bitwise <code>and</code> of the top two values on the stack.","Divide the top two values on the stack.","Subtract the top two values on the stack.","Modulus of the top two values on the stack.","Multiply the top two values on the stack.","Negate the top of the stack.","Bitwise <code>not</code> of the top of the stack.","Bitwise <code>or</code> of the top two values on the stack.","Add the top two values on the stack.","Add a constant to the topmost value on the stack.","The value to add.","Logical left shift of the 2nd value on the stack by the …","Right shift of the 2nd value on the stack by the number of…","Arithmetic left shift of the 2nd value on the stack by the…","Bitwise <code>xor</code> of the top two values on the stack.","Branch to the target location if the top of stack is …","The relative offset to the target bytecode.","Compare the top two stack values for equality.","Compare the top two stack values using <code>>=</code>.","Compare the top two stack values using <code>></code>.","Compare the top two stack values using <code><=</code>.","Compare the top two stack values using <code><</code>.","Compare the top two stack values using <code>!=</code>.","Unconditional branch to the target location.","The relative offset to the target bytecode.","Push an unsigned constant value on the stack.  This …","The value to push.","Push a signed constant value on the stack.  This handles …","The value to push.","Indicate that this piece’s location is in the given …","The register number.","Find the value of the given register, add the offset, and …","The register number.","The offset to add.","The DIE of the base type or 0 to indicate the generic type","Compute the frame base (using <code>DW_AT_frame_base</code>), add the …","The offset to add.","No operation.","Push the object address on the stack.","Evaluate a DWARF expression as a subroutine.  The …","The DIE to use.","Compute the address of a thread-local variable and push …","Compute the call frame CFA and push it on the stack.","Terminate a piece.","The size of this piece in bits.","The bit offset of this piece.  If <code>None</code>, then this piece …","Represents <code>DW_OP_implicit_value</code>. The object has no …","The implicit value to use.","Represents <code>DW_OP_stack_value</code>. The object has no location, …","Represents <code>DW_OP_implicit_pointer</code>. The object is a …","The <code>.debug_info</code> offset of the value that this is an …","The byte offset into the value that the implicit pointer …","Represents <code>DW_OP_entry_value</code>. Evaluate an expression at …","The expression to be evaluated.","Represents <code>DW_OP_GNU_parameter_ref</code>. This represents a …","The DIE to use.","Represents <code>DW_OP_addr</code>. Relocate the address if needed, …","The offset to add.","Represents <code>DW_OP_addrx</code>. Read the address at the given …","The index of the address in <code>.debug_addr</code>.","Represents <code>DW_OP_constx</code>. Read the address at the given …","The index of the address in <code>.debug_addr</code>.","Represents <code>DW_OP_const_type</code>. Interpret the value bytes as …","The DIE of the base type.","The value bytes.","Represents <code>DW_OP_convert</code>. Pop the top stack entry, …","The DIE of the base type.","Represents <code>DW_OP_reinterpret</code>. Pop the top stack entry, …","The DIE of the base type.","A single location of a piece of the result of a DWARF …","The piece is empty.  Ordinarily this means the piece has …","The piece is found in a register.","The register number.","The piece is found in memory.","The address.","The piece has no location but its value is known.","The value.","The piece is represented by some constant bytes.","The value.","The piece is a pointer to a value which has no actual …","The <code>.debug_info</code> offset of the value that this is an …","The byte offset into the value that the implicit pointer …","The description of a single piece of the result of a DWARF…","If given, the size of the piece in bits.  If <code>None</code>, there …","If given, the bit offset of the piece within the location.…","Where this piece is to be found.","The state of an <code>Evaluation</code> after evaluating a DWARF …","The <code>Evaluation</code> is complete, and <code>Evaluation::result()</code> can …","The <code>Evaluation</code> needs a value from memory to proceed …","The address of the value required.","The size of the value required. This is guaranteed to be …","If not <code>None</code>, a target-specific address space value.","The DIE of the base type or 0 to indicate the generic type","The <code>Evaluation</code> needs a value from a register to proceed …","The register number.","The DIE of the base type or 0 to indicate the generic type","The <code>Evaluation</code> needs the frame base address to proceed …","The <code>Evaluation</code> needs a value from TLS to proceed further. …","The <code>Evaluation</code> needs the CFA to proceed further.  Once …","The <code>Evaluation</code> needs the DWARF expression at the given …","The <code>Evaluation</code> needs the value produced by evaluating a …","The <code>Evaluation</code> needs the value of the parameter at the …","The <code>Evaluation</code> needs an address to be relocated to …","The <code>Evaluation</code> needs an address from the <code>.debug_addr</code> …","The index of the address in the <code>.debug_addr</code> section, …","Whether the address also needs to be relocated.","The <code>Evaluation</code> needs the <code>ValueType</code> for the base type DIE …","The bytecode for a DWARF expression or location …","","An iterator for the operations in an expression.","A DWARF expression evaluator.","A single parsed pubname.","The <code>DebugPubNames</code> struct represents the DWARF public …","An iterator over the pubnames from a <code>.debug_pubnames</code> …","A single parsed pubtype.","The <code>DebugPubTypes</code> struct represents the DWARF public …","An iterator over the pubtypes from a <code>.debug_pubtypes</code> …","The raw contents of the <code>.debug_ranges</code> section.","The <code>DebugRngLists</code> struct represents the contents of the …","The DWARF data found in <code>.debug_ranges</code> and <code>.debug_rnglists</code> …","A raw iterator over an address range list.","A raw entry in .debug_rnglists","A range from DWARF version <= 4.","Start of range. May be an address or an offset.","End of range. May be an address or an offset.","DW_RLE_base_address","base address","DW_RLE_base_addressx","base address","DW_RLE_startx_endx","start of range","end of range","DW_RLE_startx_length","start of range","length of range","DW_RLE_offset_pair","start of range","end of range","DW_RLE_start_end","start of range","end of range","DW_RLE_start_length","start of range","length of range","An iterator over an address range list.","An address range from the <code>.debug_ranges</code> or <code>.debug_rnglists</code>…","The beginning address of the range.","The first address past the end of the range.","The <code>DebugStr</code> struct represents the DWARF strings found in …","The raw contents of the <code>.debug_str_offsets</code> section.","The <code>DebugLineStr</code> struct represents the DWARF strings …","An offset into the current compilation or type unit.","","The <code>DebugInfo</code> struct represents the DWARF debugging …","An iterator over the units of a .debug_info section.","This enum specifies the type of the unit and any type …","In DWARF5, a unit with type <code>DW_UT_compile</code>. In previous …","In DWARF5, a unit with type <code>DW_UT_type</code>. In DWARF4, any …","The unique type signature for this type unit.","The offset within this type unit where the type is …","A unit with type <code>DW_UT_partial</code>. The root DIE of this unit …","A unit with type <code>DW_UT_skeleton</code>. The enclosed dwo_id can …","A unit with type <code>DW_UT_split_compile</code>. The enclosed dwo_id …","A unit with type <code>DW_UT_split_type</code>. A split type unit is …","The unique type signature for this type unit.","The offset within this type unit where the type is …","The common fields for the headers of compilation units and…","A Debugging Information Entry (DIE).","The value of an attribute in a <code>DebuggingInformationEntry</code>.","“Refers to some location in the address space of the …","A slice of an arbitrary number of bytes.","A one byte constant data value. How to interpret the byte …","A two byte constant data value. How to interpret the …","A four byte constant data value. How to interpret the …","An eight byte constant data value. How to interpret the …","A signed integer constant.","An unsigned integer constant.","“The information bytes contain a DWARF expression (see …","A boolean that indicates presence or absence of the …","An offset into another section. Which section this is an …","An offset to a set of addresses in the <code>.debug_addr</code> …","An index into a set of addresses in the <code>.debug_addr</code> …","An offset into the current compilation unit.","An offset into the current <code>.debug_info</code> section, but …","An offset into the <code>.debug_info</code> section of the …","An offset into the <code>.debug_line</code> section.","An offset into either the <code>.debug_loc</code> section or the …","An offset to a set of offsets in the <code>.debug_loclists</code> …","An index into a set of offsets in the <code>.debug_loclists</code> …","An offset into the <code>.debug_macinfo</code> section.","An offset into the <code>.debug_macro</code> section.","An offset into the <code>.debug_ranges</code> section.","An offset to a set of offsets in the <code>.debug_rnglists</code> …","An index into a set of offsets in the <code>.debug_rnglists</code> …","A type signature.","An offset into the <code>.debug_str</code> section.","An offset into the <code>.debug_str</code> section of the …","An offset to a set of entries in the <code>.debug_str_offsets</code> …","An index into a set of entries in the <code>.debug_str_offsets</code> …","An offset into the <code>.debug_line_str</code> section.","A slice of bytes representing a string. Does not include …","The value of a <code>DW_AT_encoding</code> attribute.","The value of a <code>DW_AT_decimal_sign</code> attribute.","The value of a <code>DW_AT_endianity</code> attribute.","The value of a <code>DW_AT_accessibility</code> attribute.","The value of a <code>DW_AT_visibility</code> attribute.","The value of a <code>DW_AT_virtuality</code> attribute.","The value of a <code>DW_AT_language</code> attribute.","The value of a <code>DW_AT_address_class</code> attribute.","The value of a <code>DW_AT_identifier_case</code> attribute.","The value of a <code>DW_AT_calling_convention</code> attribute.","The value of a <code>DW_AT_inline</code> attribute.","The value of a <code>DW_AT_ordering</code> attribute.","An index into the filename entries from the line number …","An implementation-defined identifier uniquely identifying …","An attribute in a <code>DebuggingInformationEntry</code>, consisting …","An iterator over a particular entry’s attributes.","A raw reader of the data that defines the Debugging …","A cursor into the Debugging Information Entries tree for …","The state information for a tree view of the Debugging …","A node in the Debugging Information Entry tree.","An iterator that allows traversal of the children of an …","The <code>DebugTypes</code> struct represents the DWARF type …","An iterator over the type-units of this <code>.debug_types</code> …","The type of an entry on the DWARF stack.","The generic type, which is address-sized and of …","Signed 8-bit integer type.","Unsigned 8-bit integer type.","Signed 16-bit integer type.","Unsigned 16-bit integer type.","Signed 32-bit integer type.","Unsigned 32-bit integer type.","Signed 64-bit integer type.","Unsigned 64-bit integer type.","32-bit floating point type.","64-bit floating point type.","The value of an entry on the DWARF stack.","A generic value, which is address-sized and of …","A signed 8-bit integer value.","An unsigned 8-bit integer value.","A signed 16-bit integer value.","An unsigned 16-bit integer value.","A signed 32-bit integer value.","An unsigned 32-bit integer value.","A signed 64-bit integer value.","An unsigned 64-bit integer value.","A 32-bit floating point value.","A 64-bit floating point value.","<code>EndianBuf</code> has been renamed to <code>EndianSlice</code>. For ease of …","An error that occurred when parsing.","An I/O error occurred while reading.","Found a PC relative pointer, but the section base is …","Found a <code>.text</code> relative pointer, but the <code>.text</code> base is …","Found a data relative pointer, but the data base is …","Found a function relative pointer in a context that does …","Cannot parse a pointer with a <code>DW_EH_PE_omit</code> encoding.","An error parsing an unsigned LEB128 value.","An error parsing a signed LEB128 value.","An abbreviation declared that its tag is zero, but zero …","An attribute specification declared that its form is …","The abbreviation’s has-children byte was not one of …","The specified length is impossible.","Found an unknown <code>DW_FORM_*</code> type.","Expected a zero, found something else.","Found an abbreviation code that has already been used.","Found a duplicate arange.","Found an unknown reserved length value.","Found an unknown DWARF version.","Found a record with an unknown abbreviation code.","Hit the end of input before it was expected.","Read a null entry before it was expected.","Found an unknown standard opcode.","Found an unknown extended opcode.","The specified address size is not supported.","The specified offset size is not supported.","The specified field size is not supported.","The minimum instruction length must not be zero.","The maximum operations per instruction must not be zero.","The line range must not be zero.","The opcode base must not be zero.","Found an invalid UTF-8 string.","Expected to find the CIE ID, but found something else.","Expected to find a pointer to a CIE, but found the CIE ID …","Expected to find a pointer to an FDE, but found a CIE …","Invalid branch target for a DW_OP_bra or DW_OP_skip.","DW_OP_push_object_address used but no address passed in.","Not enough items on the stack when evaluating an …","Too many iterations to compute the expression.","An unrecognized operation was found while parsing a DWARF …","The expression had a piece followed by an expression …","An expression-terminating operation was followed by …","Division or modulus by zero when evaluating an expression.","An expression operation used mismatching types.","An expression operation required an integral type but saw …","An expression operation used types that are not supported.","The shift value in an expression must be a non-negative …","An unknown DW_CFA_* instruction.","The end of an address range was before the beginning.","The end offset of a loc list entry was before the …","Encountered a call frame instruction in a context in …","When evaluating call frame instructions, found a …","Do not have unwind info for the given address.","An offset value was larger than the maximum supported …","The given pointer encoding is either unknown or invalid.","Did not find an entry at the given offset.","The given offset is out of bounds.","Found an unknown CFI augmentation.","We do not support the given pointer encoding yet.","Registers larger than <code>u16</code> are not supported.","The CFI program defined more register rules than we have …","Attempted to push onto the CFI stack, but it was already …","The <code>.eh_frame_hdr</code> binary search table claims to be …","The <code>DW_UT_*</code> value for this unit is not supported yet.","Ranges using AddressIndex are not supported yet.","Nonzero segment selector sizes aren’t supported yet.","A compilation unit or type unit is missing its top level …","A DIE attribute used an unsupported form.","Missing DW_LNCT_path in file entry format.","Expected an attribute value to be a string form.","<code>DW_FORM_implicit_const</code> used in an invalid context.","A short description of the error.","The result of a parse.","A convenience trait for loading DWARF sections from …","Returns the section id for this type.","Returns the ELF section name for this type.","Returns the ELF section name (if any) for this type when …","Try to load the section using the given loader function.","Returns the <code>Reader</code> for this section.","Returns the <code>Reader</code> for this section.","Whether the format of a compilation unit is 32- or 64-bit.","64-bit DWARF","32-bit DWARF","Encoding parameters that are commonly used for multiple …","The size of an address.","Whether the DWARF format is 32- or 64-bit.","The DWARF version of the header.","Encoding parameters for a line number program.","The size in bytes of the smallest target machine …","The maximum number of individual operations that may be …","The initial value of the <code>is_stmt</code> register.","The minimum value which a special opcode can add to the …","The range of values which a special opcode can add to the …","A DWARF register number.","","An offset into the <code>.debug_abbrev</code> section.","","An offset to a set of entries in the <code>.debug_addr</code> section.","","An index into a set of addresses in the <code>.debug_addr</code> …","","An offset into the <code>.debug_info</code> section.","","An offset into the <code>.debug_line</code> section.","","An offset into the <code>.debug_line_str</code> section.","","An offset into either the <code>.debug_loc</code> section or the …","","An offset to a set of location list offsets in the …","","An index into a set of location list offsets in the …","","An offset into the <code>.debug_macinfo</code> section.","","An offset into the <code>.debug_macro</code> section.","","An offset into either the <code>.debug_ranges</code> section or the …","","An offset to a set of range list offsets in the …","","An index into a set of range list offsets in the …","","An offset into the <code>.debug_str</code> section.","","An offset to a set of entries in the <code>.debug_str_offsets</code> …","","An index into a set of entries in the <code>.debug_str_offsets</code> …","","An offset into the <code>.debug_types</code> section.","","A type signature as used in the <code>.debug_types</code> section.","","An offset into the <code>.debug_frame</code> section.","","An offset into the <code>.eh_frame</code> section.","","An offset into the <code>.debug_info</code> or <code>.debug_types</code> sections.","An offset into the <code>.debug_info</code> section.","An offset into the <code>.debug_types</code> section.","An identifier for a DWARF section.","The <code>.debug_abbrev</code> section.","The <code>.debug_addr</code> section.","The <code>.debug_aranges</code> section.","The <code>.debug_frame</code> section.","The <code>.eh_frame</code> section.","The <code>.eh_frame_hdr</code> section.","The <code>.debug_info</code> section.","The <code>.debug_line</code> section.","The <code>.debug_line_str</code> section.","The <code>.debug_loc</code> section.","The <code>.debug_loclists</code> section.","The <code>.debug_macinfo</code> section.","The <code>.debug_macro</code> section.","The <code>.debug_pubnames</code> section.","The <code>.debug_pubtypes</code> section.","The <code>.debug_ranges</code> section.","The <code>.debug_rnglists</code> section.","The <code>.debug_str</code> section.","The <code>.debug_str_offsets</code> section.","The <code>.debug_types</code> section.","An optionally-provided implementation-defined compilation …","","The “type” of file with DWARF debugging information. …","A normal executable or object file.","A .dwo split DWARF file.","ARM architecture specific definitions.","Intel i386 architecture specific definitions.","AMD64 architecture specific definitions.","Big endian byte order.","A trait describing the endianity of some buffer.","Return true for big endian byte order.","Return true for little endian byte order.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Read an unsigned n-bytes integer u64.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Little endian byte order.","The native endianity for the target platform.","Byte order that is selectable at runtime.","Little endian byte order.","Big endian byte ordereturn the serialized size of an initial length field for …","Return the natural word size for the format","Returns the <code>DebugInfoOffset</code> inside, or <code>None</code> otherwise.","Returns the <code>DebugTypesOffset</code> inside, or <code>None</code> otherwise.","Returns the ELF section name for this kind.","Returns the ELF section name for this kind, when found in …","","","","","","","","","","","","","","","","","The name of a register, or <code>None</code> if the register number is …","Converts a register name into a register number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of a register, or <code>None</code> if the register number is …","Converts a register name into a register number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The name of a register, or <code>None</code> if the register number is …","Converts a register name into a register number.","Return true for little endian byte order.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Read an unsigned n-bytes integer u64.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Returns the address at the given <code>base</code> and <code>index</code>.","Create a <code>DebugAddr</code> section that references the data in …","Set the size of a target address in bytes.","Set the size of a segment selector in bytes.","Construct a new <code>DebugFrame</code> instance from the data in the …","Constructs a new <code>EhFrameHdr</code> instance from the data in the …","Parses this <code>EhFrameHdr</code> to a <code>ParsedEhFrameHdr</code>.","Returns the address of the binary’s <code>.eh_frame</code> section.","Retrieves the CFI binary search table, if there is one.","<em>Probably</em> returns a pointer to the FDE for the given …","Convert a <code>Pointer</code> to a section offset.","Returns a parsed FDE for the given address, or …","Returns the frame unwind information for the given …","Set the size of a target address in bytes.","Construct a new <code>EhFrame</code> instance from the data in the …","Iterate over the <code>CommonInformationEntry</code>s and …","Parse the <code>CommonInformationEntry</code> at the given offset.","Parse the <code>PartialFrameDescriptionEntry</code> at the given …","Parse the <code>FrameDescriptionEntry</code> at the given offset.","Find the <code>FrameDescriptionEntry</code> for the given address.","Find the frame unwind information for the given address.","Set the <code>.eh_frame_hdr</code> section base address.","Set the <code>.eh_frame</code> section base address.","Set the <code>.text</code> section base address.","Set the <code>.got</code> section base address.","Advance the iterator to the next entry.","Get the offset of this entry from the start of its …","Return the encoding parameters for this CIE.","The size of addresses (in bytes) in this CIE.","Iterate over this CIE’s initial instructions.","A constant that gives the number of bytes of the CIE …","A version number (see Section 7.23). This number is …","Get the augmentation data, if any exists.","True if this CIE’s FDEs have a LSDA.","Return the encoding of the LSDA address for this CIE’s …","Return the encoding and address of the personality …","Return the address of the personality routine handler for …","Return the encoding of the addresses for this CIE’s …","True if this CIE’s FDEs are trampolines for signal …","A constant that is factored out of all advance location …","A constant that is factored out of certain offset …","An unsigned … constant that indicates which column in …","Fully parse this FDE.","Return the table of unwind information for this FDE.","Find the frame unwind information for the given address.","Get the offset of this entry from the start of its …","Get a reference to this FDE’s CIE.","A constant that gives the number of bytes of the header …","Iterate over this FDE’s instructions.","The first address for which this entry has unwind …","The number of bytes of instructions that this entry has …","Return <code>true</code> if the given address is within this FDE, <code>false</code>…","The address of this FDE’s language-specific data area …","Return true if this FDE’s function is a trampoline for …","Return the address of the FDE’s function’s …","Construct a new call frame unwinding context.","Run the CIE’s initial instructions, creating and return …","Construct a new <code>UnwindTable</code> for the given …","Evaluate call frame instructions until the next row of …","Get the starting PC address that this row applies to.","Get the end PC address where this row’s register rules …","Return <code>true</code> if the given <code>address</code> is within this row’s …","Returns the amount of args currently on the stack.","Get the canonical frame address (CFA) recovery rule for …","Get the register recovery rule for the given register …","Iterate over all defined register <code>(number, rule)</code> pairs.","Parse the next call frame instruction.","Try to load the DWARF sections using the given loader …","Create a <code>Dwarf</code> structure that references the data in <code>self</code>.","Iterate the unit headers in the <code>.debug_info</code> section.","Construct a new <code>Unit</code> from the given unit header.","Iterate the type-unit headers in the <code>.debug_types</code> section.","Parse the abbreviations for a compilation unit.","Return the string offset at the given index.","Return the string at the given offset in <code>.debug_str</code>.","Return the string at the given offset in <code>.debug_line_str</code>.","Return an attribute value as a string slice.","Return the address at the given index.","Try to return an attribute value as an address.","Return the range list offset at the given index.","Iterate over the <code>RangeListEntry</code>s starting at the given …","Try to return an attribute value as a range list offset.","Try to return an attribute value as a range list entry …","Return an iterator for the address ranges of a …","Return an iterator for the address ranges of a <code>Unit</code>.","Return the location list offset at the given index.","Iterate over the <code>LocationListEntry</code>s starting at the given …","Try to return an attribute value as a location list …","Try to return an attribute value as a location list entry …","Call <code>Reader::lookup_offset_id</code> for each section, and …","Returns a string representation of the given error.","Construct a new <code>Unit</code> from the given unit header.","Return the encoding parameters for this unit.","Read the <code>DebuggingInformationEntry</code> at the given offset.","Navigate this unit’s <code>DebuggingInformationEntry</code>s.","Navigate this unit’s <code>DebuggingInformationEntry</code>s …","Navigate this unit’s <code>DebuggingInformationEntry</code>s as a …","Read the raw data that defines the Debugging Information …","Copy attributes that are subject to relocation from …","Convert an offset to be relative to the start of the …","Convert an offset to be relative to the start of the …","Advance the iterator to the next range.","Construct a new <code>EndianSlice</code> with the given slice and …","Return a reference to the raw slice.","Split the slice in two at the given index, resulting in …","Find the first occurence of a byte in the slice, and …","Return the offset of the start of the slice relative to …","Converts the slice to a string using <code>str::from_utf8</code>.","Converts the slice to a string, including invalid …","Take the given <code>start..end</code> range of the underlying slice …","Take the given <code>start..</code> range of the underlying slice and …","Take the given <code>..end</code> range of the underlying slice and …","Read a u8 array.","Return true if the number of bytes remaining is zero.","Read a u8.","Read an i8.","Read a u16.","Read an i16.","Read a u32.","Read an i32.","Read a u64.","Read an i64.","Read a f32.","Read a f64.","Read an unsigned n-bytes integer u64.","Read a null-terminated slice, and return it (excluding …","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded u16.","Read a signed LEB128 encoded integer.","Read an initial length field.","Read an address-sized integer, and return it as a <code>u64</code>.","Parse a word-sized integer according to the DWARF format.","Parse a word-sized section length according to the DWARF …","Parse a word-sized section offset according to the DWARF …","Parse a section offset of the given size.","Construct a new <code>DebugAbbrev</code> instance from the data in the …","Parse the abbreviations at the given <code>offset</code> within this …","Create a <code>DebugAbbrev</code> section that references the data in …","Get the abbreviation associated with the given code.","Get this abbreviation’s code.","Get this abbreviation’s tag.","Return true if this abbreviation’s type has children, …","Get this abbreviation’s attributes.","Construct a new <code>AttributeSpecification</code> from the given …","Get the attribute’s name.","Get the attribute’s form.","Get the attribute’s implicit const value.","Return the size of the attribute, in bytes.","Return the segment selector of this arange.","Return the beginning address of this arange.","Return the length of this arange.","Return the offset into the .debug_info section for this …","Construct a new <code>DebugAranges</code> instance from the data in …","Iterate the aranges in the <code>.debug_aranges</code> section.","Advance the iterator and return the next arange.","Construct a new <code>DebugLine</code> instance from the data in the …","Parse the line number program whose header is at the …","Create a <code>DebugLine</code> section that references the data in …","Get a reference to the header for this state machine’s …","Parse and execute the next instructions in the line …","Advance the iterator and return the next instruction.","Create a line number row in the initial state for the …","“The program-counter value corresponding to a machine …","An unsigned integer representing the index of an …","“An unsigned integer indicating the identity of the …","The source file corresponding to the current machine …","“An unsigned integer indicating a source line number. …","“An unsigned integer indicating a column number within …","“A boolean indicating that the current instruction is a …","“A boolean indicating that the current instruction is …","“A boolean indicating that the current address is that …","“A boolean indicating that the current address is one …","“A boolean indicating that the current address is one …","Tag for the current instruction set architecture.","“An unsigned integer identifying the block to which the …","Execute the given instruction, and return true if a new …","Perform any reset that was required after copying the …","Return the offset of the line number program header in …","Return the length of the line number program and header, …","Return the encoding parameters for this header’s line …","Get the version of this header’s line program.","Get the length of the encoded line number program header, …","Get the size in bytes of a target machine address.","Whether this line program is encoded in 64- or 32-bit …","Get the line encoding parameters for this header’s line …","Get the minimum instruction length any instruction in …","Get the maximum number of operations each instruction in …","Get the default value of the <code>is_stmt</code> register for this …","Get the line base for this header’s line program.","Get the line range for this header’s line program.","Get opcode base for this header’s line program.","An array of <code>u8</code> that specifies the number of LEB128 …","Get the format of a directory entry.","Get the set of include directories for this header’s …","The include directory with the given directory index.","Get the format of a file name entry.","Return true if the file entries may have valid timestamps.","Return true if the file entries may have valid sizes.","Return true if the file name entry format contains an MD5 …","Get the list of source files that appear in this header’…","The source file with the given file index.","Get the raw, un-parsed <code>EndianSlice</code> containing this header…","Iterate over the instructions in this header’s line …","Retrieve the <code>LineProgramHeader</code> for this program.","Construct a new <code>LineRows</code> for executing this program to …","Execute the line number program, completing the …","Retrieve the <code>LineProgramHeader</code> for this program.","Construct a new <code>LineRows</code> for executing the subset of the …","A slice containing the full or relative path name of a …","An unsigned LEB128 number representing the directory …","Get this file’s directory.","The implementation-defined time of last modification of …","The size of the file in bytes, or 0 if not available.","A 16-byte MD5 digest of the file contents.","Construct a new <code>DebugLoc</code> instance from the data in the …","Construct a new <code>DebugLocLists</code> instance from the data in …","Returns a <code>DebugLocListsBase</code> with the default value of …","Construct a new <code>LocationLists</code> instance from the data in …","Create a <code>LocationLists</code> that references the data in <code>self</code>.","Iterate over the <code>LocationListEntry</code>s starting at the given …","Similar to <code>locations</code>, but with special handling for .dwo …","Iterate over the raw <code>LocationListEntry</code>s starting at the …","Similar to <code>raw_locations</code>, but with special handling for …","Returns the <code>.debug_loclists</code> offset at the given <code>base</code> and …","Call <code>Reader::lookup_offset_id</code> for each section, and …","Advance the iterator to the next location.","Advance the iterator to the next location.","Return true if the piece is empty.","Parse a single DWARF expression operation.","Create an evaluation for this expression.","Return an iterator for the operations in the expression.","Read the next operation in an expression.","Return the current byte offset of the iterator.","Create a new DWARF expression evaluator.","Set an initial value to be pushed on the DWARF expression …","Set the enclosing object’s address, as used by …","Set the maximum number of iterations to be allowed by the …","Get the result of this <code>Evaluation</code>.","Evaluate a DWARF expression.  This method should only …","Resume the <code>Evaluation</code> with the provided memory <code>value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>register</code> value.  …","Resume the <code>Evaluation</code> with the provided <code>frame_base</code>.  This …","Resume the <code>Evaluation</code> with the provided <code>value</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>cfa</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>bytes</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>entry_value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>parameter_value</code>.  …","Resume the <code>Evaluation</code> with the provided relocated <code>address</code>…","Resume the <code>Evaluation</code> with the provided indexed <code>address</code>.  …","Resume the <code>Evaluation</code> with the provided <code>base_type</code>.  This …","Returns the name this entry refers to.","Returns the offset into the .debug_info section for the …","Returns the offset into the compilation unit for the …","Construct a new <code>DebugPubNames</code> instance from the data in …","Iterate the pubnames in the <code>.debug_pubnames</code> section.","Advance the iterator and return the next pubname.","Returns the name of the type this entry refers to.","Returns the offset into the .debug_info section for the …","Returns the offset into the compilation unit for the …","Construct a new <code>DebugPubTypes</code> instance from the data in …","Iterate the pubtypes in the <code>.debug_pubtypes</code> section.","Advance the iterator and return the next pubtype.","Construct a new <code>DebugRanges</code> instance from the data in the …","Construct a new <code>DebugRngLists</code> instance from the data in …","Returns a <code>DebugRngListsBase</code> with the default value of …","Construct a new <code>RangeLists</code> instance from the data in the …","Create a <code>RangeLists</code> that references the data in <code>self</code>.","Iterate over the <code>Range</code> list entries starting at the given …","Iterate over the <code>RawRngListEntry</code>ies starting at the given …","Returns the <code>.debug_rnglists</code> offset at the given <code>base</code> and …","Call <code>Reader::lookup_offset_id</code> for each section, and …","Advance the iterator to the next range.","Advance the iterator to the next range.","Construct a new <code>DebugStr</code> instance from the data in the …","Lookup a string from the <code>.debug_str</code> section by …","Create a <code>DebugStr</code> section that references the data in <code>self</code>…","Returns the <code>.debug_str</code> offset at the given <code>base</code> and <code>index</code>.","Create a <code>DebugStrOffsets</code> section that references the data …","Returns a <code>DebugStrOffsetsBase</code> with the default value of …","Lookup a string from the <code>.debug_line_str</code> section by …","Create a <code>DebugLineStr</code> section that references the data in …","Convert an offset to be relative to the start of the …","Convert an offset to be relative to the start of the …","Convert an offset to be relative to the start of the …","Convert an offset to be relative to the start of the …","Construct a new <code>DebugInfo</code> instance from the data in the …","Iterate the units in this <code>.debug_info</code> section.","Get the UnitHeader located at offset from this …","Create a <code>DebugInfo</code> section that references the data in …","Advance the iterator to the next unit header.","Construct a new <code>UnitHeader</code>.","Get the offset of this unit within its section.","Return the serialized size of the common unit header for …","Get the length of the debugging info for this compilation …","Get the length of the debugging info for this compilation …","Return the encoding parameters for this unit.","Get the DWARF version of the debugging info for this …","Get the UnitType of this unit.","The offset into the <code>.debug_abbrev</code> section for this …","The size of addresses (in bytes) in this compilation unit.","Whether this compilation unit is encoded in 64- or 32-bit …","The serialized size of the header for this compilation …","Get the underlying bytes for the supplied range.","Get the underlying bytes for the supplied range.","Get the underlying bytes for the supplied range.","Read the <code>DebuggingInformationEntry</code> at the given offset.","Navigate this unit’s <code>DebuggingInformationEntry</code>s.","Navigate this compilation unit’s …","Navigate this unit’s <code>DebuggingInformationEntry</code>s as a …","Read the raw data that defines the Debugging Information …","Parse this unit’s abbreviations.","Construct a new <code>DebuggingInformationEntry</code>.","Get this entry’s code.","Get this entry’s offset.","Get this entry’s <code>DW_TAG_whatever</code> tag.","Return true if this entry’s type can have children, …","Iterate over this entry’s set of attributes.","Find the first attribute in this entry which has the …","Find the first attribute in this entry which has the …","Find the first attribute in this entry which has the …","Get this attribute’s name.","Get this attribute’s raw value.","Get this attribute’s normalized value.","Try to convert this attribute’s value to a u8.","Try to convert this attribute’s value to a u16.","Try to convert this attribute’s value to an unsigned …","Try to convert this attribute’s value to a signed …","Try to convert this attribute’s value to an offset.","Try to convert this attribute’s value to an expression …","Try to return this attribute’s value as a string slice.","Try to return this attribute’s value as a string slice.","Try to convert this attribute’s value to a u8.","Try to convert this attribute’s value to a u16.","Try to convert this attribute’s value to an unsigned …","Try to convert this attribute’s value to a signed …","Try to convert this attribute’s value to an offset.","Try to convert this attribute’s value to an expression …","Try to return this attribute’s value as a string slice.","Try to return this attribute’s value as a string slice.","Advance the iterator and return the next attribute.","Return true if there is no more input.","Return the unit offset at which the reader will read next.","Return the depth of the next entry.","Read an abbreviation code and lookup the corresponding …","Read an attribute.","Get a reference to the entry that the cursor is currently …","Move the cursor to the next DIE in the tree.","Move the cursor to the next DIE in the tree in DFS order.","Move the cursor to the next sibling DIE of the current …","Returns the root node of the tree.","Returns the current entry in the tree.","Create an iterator for the children of the current entry.","Returns an <code>EntriesTreeNode</code> for the next child entry.","Construct a new <code>DebugTypes</code> instance from the data in the …","Create a <code>DebugTypes</code> section that references the data in …","Iterate the type-units in this <code>.debug_types</code> section.","Advance the iterator to the next type unit header.","The size in bits of a value for this type.","Construct a <code>ValueType</code> from the attributes of a base type …","Construct a <code>ValueType</code> from a base type DIE.","Return the <code>ValueType</code> corresponding to this <code>Value</code>.","Read a <code>Value</code> with the given <code>value_type</code> from a <code>Reader</code>.","Convert a <code>Value</code> to a <code>u64</code>.","Create a <code>Value</code> with the given <code>value_type</code> from a <code>u64</code> value.","Convert a <code>Value</code> to the given <code>value_type</code>.","Reinterpret the bits in a <code>Value</code> as the given <code>value_type</code>.","Perform an absolute value operation.","Perform a negation operation.","Perform an addition operation.","Perform a subtraction operation.","Perform a multiplication operation.","Perform a division operation.","Perform a remainder operation.","Perform a bitwise not operation.","Perform a bitwise and operation.","Perform a bitwise or operation.","Perform a bitwise exclusive-or operation.","Perform a shift left operation.","Perform a logical shift right operation.","Perform an arithmetic shift right operation.","Perform the <code>==</code> relational operation.","Perform the <code>>=</code> relational operation.","Perform the <code>></code> relational operation.","Perform the `<= relational operation.","Perform the `< relational operation.","Perform the `!= relational operation."],"if":[null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],[[],[["usize",15],["option",4]]],null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["str",15],["option",4]]],[[],["dwehpe",3]],[[],["dwehpe",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],[["u64",15],["result",6]]],[[],[["result",6],["u16",15]]],[[],[["i64",15],["result",6]]],null,null,null,null,null,null,null,null,[[]],null,null,[[["baseaddresses",3]],["cfientriesiter",3]],[[["baseaddresses",3]],[["commoninformationentry",3],["result",6]]],[[["baseaddresses",3]],[["result",6],["partialframedescriptionentry",3]]],[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]],[[["baseaddresses",3],["u64",15]],[["result",6],["framedescriptionentry",3]]],[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["result",6],["unwindtablerow",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]]],[[["u16",15]]],[[["i16",15]]],[[["u32",15]]],[[["u64",15]],["result",6]],[[],["u64",15]],[[]],[[],["option",4]],null,null,null,[[]],[[]],[[]],[[],["result",6]],[[]],[[],["readeroffsetid",3]],[[["readeroffsetid",3]],["option",4]],[[["u8",15]],["result",6]],[[],["result",6]],[[],["result",6]],[[],[["result",6],["cow",4]]],[[],[["cow",4],["result",6]]],[[],[["cow",4],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["bool",15]],[[],[["result",6],["u8",15]]],[[],[["result",6],["i8",15]]],[[],[["result",6],["u16",15]]],[[],[["i16",15],["result",6]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u64",15],["result",6]]],[[],[["i64",15],["result",6]]],[[],[["result",6],["f32",15]]],[[],[["result",6],["f64",15]]],[[["usize",15]],[["u64",15],["result",6]]],[[],["result",6]],[[],[["u64",15],["result",6]]],[[],[["result",6],["u16",15]]],[[],[["i64",15],["result",6]]],[[],["result",6]],[[["u8",15]],[["u64",15],["result",6]]],[[["format",4]],["result",6]],[[["format",4]],["result",6]],[[["format",4]],["result",6]],[[["u8",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,[[],["lineprogramheader",3]],[[["fileentry",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,[[],["sectionid",4]],[[],["str",15]],[[],[["str",15],["option",4]]],[[],["result",4]],[[]],[[["readeroffsetid",3]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["f32",15]],[[],["f64",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],["usize",15]],[[],["bool",15]],[[]],[[["usize",15]],["result",6]],[[],["usize",15]],[[],["readeroffsetid",3]],[[["readeroffsetid",3]],["option",4]],[[["u8",15]],[["usize",15],["result",6]]],[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],[[],[["result",6],["cow",4]]],[[],[["cow",4],["result",6]]],[[],[["cow",4],["result",6]]],[[],["result",6]],[[],["lineprogramheader",3]],[[["fileentry",3]]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[],["sectionid",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["error",3],["result",4]]],[[["format",4]],["bool",15]],[[["encoding",3]],["bool",15]],[[["encoding",3]],["bool",15]],[[["lineencoding",3]],["bool",15]],[[["lineencoding",3]],["bool",15]],[[["register",3]],["bool",15]],[[["register",3]],["bool",15]],[[["debugabbrevoffset",3]],["bool",15]],[[["debugabbrevoffset",3]],["bool",15]],[[["debugaddrbase",3]],["bool",15]],[[["debugaddrbase",3]],["bool",15]],[[["debugaddrindex",3]],["bool",15]],[[["debugaddrindex",3]],["bool",15]],[[["debuginfooffset",3]],["bool",15]],[[["debuginfooffset",3]],["bool",15]],[[["debuglineoffset",3]],["bool",15]],[[["debuglineoffset",3]],["bool",15]],[[["debuglinestroffset",3]],["bool",15]],[[["debuglinestroffset",3]],["bool",15]],[[["locationlistsoffset",3]],["bool",15]],[[["locationlistsoffset",3]],["bool",15]],[[["debugloclistsbase",3]],["bool",15]],[[["debugloclistsbase",3]],["bool",15]],[[["debugloclistsindex",3]],["bool",15]],[[["debugloclistsindex",3]],["bool",15]],[[["debugmacinfooffset",3]],["bool",15]],[[["debugmacinfooffset",3]],["bool",15]],[[["debugmacrooffset",3]],["bool",15]],[[["debugmacrooffset",3]],["bool",15]],[[["rangelistsoffset",3]],["bool",15]],[[["rangelistsoffset",3]],["bool",15]],[[["debugrnglistsbase",3]],["bool",15]],[[["debugrnglistsbase",3]],["bool",15]],[[["debugrnglistsindex",3]],["bool",15]],[[["debugrnglistsindex",3]],["bool",15]],[[["debugstroffset",3]],["bool",15]],[[["debugstroffset",3]],["bool",15]],[[["debugstroffsetsbase",3]],["bool",15]],[[["debugstroffsetsbase",3]],["bool",15]],[[["debugstroffsetsindex",3]],["bool",15]],[[["debugstroffsetsindex",3]],["bool",15]],[[["debugtypesoffset",3]],["bool",15]],[[["debugtypesoffset",3]],["bool",15]],[[["debugtypesignature",3]],["bool",15]],[[["debugtypesignature",3]],["bool",15]],[[["debugframeoffset",3]],["bool",15]],[[["debugframeoffset",3]],["bool",15]],[[["ehframeoffset",3]],["bool",15]],[[["ehframeoffset",3]],["bool",15]],[[["unitsectionoffset",4]],["bool",15]],[[["unitsectionoffset",4]],["bool",15]],[[["sectionid",4]],["bool",15]],[[["dwoid",3]],["bool",15]],[[["dwoid",3]],["bool",15]],[[["dwarffiletype",4]],["bool",15]],[[["dwut",3]],["bool",15]],[[["dwut",3]],["bool",15]],[[["dwcfa",3]],["bool",15]],[[["dwcfa",3]],["bool",15]],[[["dwchildren",3]],["bool",15]],[[["dwchildren",3]],["bool",15]],[[["dwtag",3]],["bool",15]],[[["dwtag",3]],["bool",15]],[[["dwat",3]],["bool",15]],[[["dwat",3]],["bool",15]],[[["dwform",3]],["bool",15]],[[["dwform",3]],["bool",15]],[[["dwate",3]],["bool",15]],[[["dwate",3]],["bool",15]],[[["dwlle",3]],["bool",15]],[[["dwlle",3]],["bool",15]],[[["dwds",3]],["bool",15]],[[["dwds",3]],["bool",15]],[[["dwend",3]],["bool",15]],[[["dwend",3]],["bool",15]],[[["dwaccess",3]],["bool",15]],[[["dwaccess",3]],["bool",15]],[[["dwvis",3]],["bool",15]],[[["dwvis",3]],["bool",15]],[[["dwvirtuality",3]],["bool",15]],[[["dwvirtuality",3]],["bool",15]],[[["dwlang",3]],["bool",15]],[[["dwlang",3]],["bool",15]],[[["dwaddr",3]],["bool",15]],[[["dwaddr",3]],["bool",15]],[[["dwid",3]],["bool",15]],[[["dwid",3]],["bool",15]],[[["dwcc",3]],["bool",15]],[[["dwcc",3]],["bool",15]],[[["dwinl",3]],["bool",15]],[[["dwinl",3]],["bool",15]],[[["dword",3]],["bool",15]],[[["dword",3]],["bool",15]],[[["dwdsc",3]],["bool",15]],[[["dwdsc",3]],["bool",15]],[[["dwidx",3]],["bool",15]],[[["dwidx",3]],["bool",15]],[[["dwdefaulted",3]],["bool",15]],[[["dwdefaulted",3]],["bool",15]],[[["dwlns",3]],["bool",15]],[[["dwlns",3]],["bool",15]],[[["dwlne",3]],["bool",15]],[[["dwlne",3]],["bool",15]],[[["dwlnct",3]],["bool",15]],[[["dwlnct",3]],["bool",15]],[[["dwmacro",3]],["bool",15]],[[["dwmacro",3]],["bool",15]],[[["dwrle",3]],["bool",15]],[[["dwrle",3]],["bool",15]],[[["dwop",3]],["bool",15]],[[["dwop",3]],["bool",15]],[[["dwehpe",3]],["bool",15]],[[["dwehpe",3]],["bool",15]],[[["runtimeendian",4]],["bool",15]],[[["littleendian",3]],["bool",15]],[[["bigendian",3]],["bool",15]],[[["debugframe",3]],["bool",15]],[[["debugframe",3]],["bool",15]],[[["ehframehdr",3]],["bool",15]],[[["ehframehdr",3]],["bool",15]],[[["ehframe",3]],["bool",15]],[[["ehframe",3]],["bool",15]],[[["baseaddresses",3]],["bool",15]],[[["baseaddresses",3]],["bool",15]],[[["sectionbaseaddresses",3]],["bool",15]],[[["sectionbaseaddresses",3]],["bool",15]],[[["cieorfde",4]],["bool",15]],[[["cieorfde",4]],["bool",15]],[[["augmentation",3]],["bool",15]],[[["augmentation",3]],["bool",15]],[[["commoninformationentry",3]],["bool",15]],[[["commoninformationentry",3]],["bool",15]],[[["partialframedescriptionentry",3]],["bool",15]],[[["partialframedescriptionentry",3]],["bool",15]],[[["framedescriptionentry",3]],["bool",15]],[[["framedescriptionentry",3]],["bool",15]],[[["unwindcontext",3]],["bool",15]],[[["unwindtablerow",3]],["bool",15]],[[["unwindtablerow",3]],["bool",15]],[[["cfarule",4]],["bool",15]],[[["cfarule",4]],["bool",15]],[[["registerrule",4]],["bool",15]],[[["registerrule",4]],["bool",15]],[[["callframeinstruction",4]],["bool",15]],[[["callframeinstruction",4]],["bool",15]],[[["pointer",4]],["bool",15]],[[["pointer",4]],["bool",15]],[[["endianslice",3]],["bool",15]],[[["endianslice",3]],["bool",15]],[[["readeroffsetid",3]],["bool",15]],[[["readeroffsetid",3]],["bool",15]],[[["abbreviation",3]],["bool",15]],[[["abbreviation",3]],["bool",15]],[[["attributespecification",3]],["bool",15]],[[["attributespecification",3]],["bool",15]],[[["arangeentry",3]],["bool",15]],[[["arangeentry",3]],["bool",15]],[[["lineinstruction",4]],["bool",15]],[[["lineinstruction",4]],["bool",15]],[[["linerow",3]],["bool",15]],[[["linerow",3]],["bool",15]],[[["columntype",4]],["bool",15]],[[["columntype",4]],["bool",15]],[[["lineprogramheader",3]],["bool",15]],[[["lineprogramheader",3]],["bool",15]],[[["incompletelineprogram",3]],["bool",15]],[[["incompletelineprogram",3]],["bool",15]],[[["completelineprogram",3]],["bool",15]],[[["completelineprogram",3]],["bool",15]],[[["fileentry",3]],["bool",15]],[[["fileentry",3]],["bool",15]],[[["fileentryformat",3]],["bool",15]],[[["fileentryformat",3]],["bool",15]],[[["locationlistentry",3]],["bool",15]],[[["locationlistentry",3]],["bool",15]],[[["diereference",4]],["bool",15]],[[["diereference",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["operation",4]],["bool",15]],[[["location",4]],["bool",15]],[[["location",4]],["bool",15]],[[["piece",3]],["bool",15]],[[["piece",3]],["bool",15]],[[["evaluationresult",4]],["bool",15]],[[["evaluationresult",4]],["bool",15]],[[["expression",3]],["bool",15]],[[["expression",3]],["bool",15]],[[["range",3]],["bool",15]],[[["range",3]],["bool",15]],[[["unitoffset",3]],["bool",15]],[[["unitoffset",3]],["bool",15]],[[["unittype",4]],["bool",15]],[[["unittype",4]],["bool",15]],[[["unitheader",3]],["bool",15]],[[["unitheader",3]],["bool",15]],[[["attributevalue",4]],["bool",15]],[[["attributevalue",4]],["bool",15]],[[["attribute",3]],["bool",15]],[[["attribute",3]],["bool",15]],[[["valuetype",4]],["bool",15]],[[["value",4]],["bool",15]],[[["value",4]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["register",3]],["ordering",4]],[[["debuginfooffset",3]],["ordering",4]],[[["debugtypesoffset",3]],["ordering",4]],[[["unitsectionoffset",4]],["ordering",4]],[[["sectionid",4]],["ordering",4]],[[["dwut",3]],["ordering",4]],[[["dwcfa",3]],["ordering",4]],[[["dwchildren",3]],["ordering",4]],[[["dwtag",3]],["ordering",4]],[[["dwat",3]],["ordering",4]],[[["dwform",3]],["ordering",4]],[[["dwate",3]],["ordering",4]],[[["dwlle",3]],["ordering",4]],[[["dwds",3]],["ordering",4]],[[["dwend",3]],["ordering",4]],[[["dwaccess",3]],["ordering",4]],[[["dwvis",3]],["ordering",4]],[[["dwvirtuality",3]],["ordering",4]],[[["dwlang",3]],["ordering",4]],[[["dwaddr",3]],["ordering",4]],[[["dwid",3]],["ordering",4]],[[["dwcc",3]],["ordering",4]],[[["dwinl",3]],["ordering",4]],[[["dword",3]],["ordering",4]],[[["dwdsc",3]],["ordering",4]],[[["dwidx",3]],["ordering",4]],[[["dwdefaulted",3]],["ordering",4]],[[["dwlns",3]],["ordering",4]],[[["dwlne",3]],["ordering",4]],[[["dwlnct",3]],["ordering",4]],[[["dwmacro",3]],["ordering",4]],[[["dwrle",3]],["ordering",4]],[[["dwop",3]],["ordering",4]],[[["dwehpe",3]],["ordering",4]],[[["arangeentry",3]],["ordering",4]],[[["columntype",4]],["ordering",4]],[[["unitoffset",3]],["ordering",4]],[[["register",3]],[["ordering",4],["option",4]]],[[["debuginfooffset",3]],[["ordering",4],["option",4]]],[[["debugtypesoffset",3]],[["ordering",4],["option",4]]],[[["unitsectionoffset",4]],[["ordering",4],["option",4]]],[[["sectionid",4]],[["ordering",4],["option",4]]],[[["dwut",3]],[["ordering",4],["option",4]]],[[["dwcfa",3]],[["ordering",4],["option",4]]],[[["dwchildren",3]],[["ordering",4],["option",4]]],[[["dwtag",3]],[["ordering",4],["option",4]]],[[["dwat",3]],[["ordering",4],["option",4]]],[[["dwform",3]],[["ordering",4],["option",4]]],[[["dwate",3]],[["ordering",4],["option",4]]],[[["dwlle",3]],[["ordering",4],["option",4]]],[[["dwds",3]],[["ordering",4],["option",4]]],[[["dwend",3]],[["ordering",4],["option",4]]],[[["dwaccess",3]],[["ordering",4],["option",4]]],[[["dwvis",3]],[["ordering",4],["option",4]]],[[["dwvirtuality",3]],[["ordering",4],["option",4]]],[[["dwlang",3]],[["ordering",4],["option",4]]],[[["dwaddr",3]],[["ordering",4],["option",4]]],[[["dwid",3]],[["ordering",4],["option",4]]],[[["dwcc",3]],[["ordering",4],["option",4]]],[[["dwinl",3]],[["ordering",4],["option",4]]],[[["dword",3]],[["ordering",4],["option",4]]],[[["dwdsc",3]],[["ordering",4],["option",4]]],[[["dwidx",3]],[["ordering",4],["option",4]]],[[["dwdefaulted",3]],[["ordering",4],["option",4]]],[[["dwlns",3]],[["ordering",4],["option",4]]],[[["dwlne",3]],[["ordering",4],["option",4]]],[[["dwlnct",3]],[["ordering",4],["option",4]]],[[["dwmacro",3]],[["ordering",4],["option",4]]],[[["dwrle",3]],[["ordering",4],["option",4]]],[[["dwop",3]],[["ordering",4],["option",4]]],[[["dwehpe",3]],[["ordering",4],["option",4]]],[[["arangeentry",3]],[["option",4],["ordering",4]]],[[["columntype",4]],[["ordering",4],["option",4]]],[[["unitoffset",3]],[["ordering",4],["option",4]]],[[["usize",15]]],[[["usize",15],["rangefrom",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[["debuginfooffset",3]]],[[["debugtypesoffset",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[],["format",4]],[[],["encoding",3]],[[],["lineencoding",3]],[[],["register",3]],[[],["debugabbrevoffset",3]],[[],["debugaddrbase",3]],[[],["debugaddrindex",3]],[[],["debuginfooffset",3]],[[],["debuglineoffset",3]],[[],["debuglinestroffset",3]],[[],["locationlistsoffset",3]],[[],["debugloclistsbase",3]],[[],["debugloclistsindex",3]],[[],["debugmacinfooffset",3]],[[],["debugmacrooffset",3]],[[],["rangelistsoffset",3]],[[],["debugrnglistsbase",3]],[[],["debugrnglistsindex",3]],[[],["debugstroffset",3]],[[],["debugstroffsetsbase",3]],[[],["debugstroffsetsindex",3]],[[],["debugtypesoffset",3]],[[],["debugtypesignature",3]],[[],["debugframeoffset",3]],[[],["ehframeoffset",3]],[[],["unitsectionoffset",4]],[[],["sectionid",4]],[[],["dwoid",3]],[[],["dwarffiletype",4]],[[],["arm",3]],[[],["x86",3]],[[],["x86_64",3]],[[],["dwut",3]],[[],["dwcfa",3]],[[],["dwchildren",3]],[[],["dwtag",3]],[[],["dwat",3]],[[],["dwform",3]],[[],["dwate",3]],[[],["dwlle",3]],[[],["dwds",3]],[[],["dwend",3]],[[],["dwaccess",3]],[[],["dwvis",3]],[[],["dwvirtuality",3]],[[],["dwlang",3]],[[],["dwaddr",3]],[[],["dwid",3]],[[],["dwcc",3]],[[],["dwinl",3]],[[],["dword",3]],[[],["dwdsc",3]],[[],["dwidx",3]],[[],["dwdefaulted",3]],[[],["dwlns",3]],[[],["dwlne",3]],[[],["dwlnct",3]],[[],["dwmacro",3]],[[],["dwrle",3]],[[],["dwop",3]],[[],["dwehpe",3]],[[],["runtimeendian",4]],[[],["littleendian",3]],[[],["bigendian",3]],[[],["debugaddr",3]],[[],["debugframe",3]],[[],["ehframehdr",3]],[[],["parsedehframehdr",3]],[[],["ehhdrtable",3]],[[],["ehframe",3]],[[],["baseaddresses",3]],[[],["sectionbaseaddresses",3]],[[],["cfientriesiter",3]],[[],["cieorfde",4]],[[],["augmentation",3]],[[],["commoninformationentry",3]],[[],["partialframedescriptionentry",3]],[[],["framedescriptionentry",3]],[[],["uninitializedunwindcontext",3]],[[],["unwindcontext",3]],[[],["registerruleiter",3]],[[],["unwindtablerow",3]],[[],["cfarule",4]],[[],["registerrule",4]],[[],["callframeinstruction",4]],[[],["callframeinstructioniter",3]],[[],["pointer",4]],[[],["endianslice",3]],[[],["readeroffsetid",3]],[[],["debugabbrev",3]],[[],["abbreviations",3]],[[],["abbreviation",3]],[[],["attributespecification",3]],[[],["arangeentry",3]],[[],["debugaranges",3]],[[],["arangeentryiter",3]],[[],["debugline",3]],[[],["linerows",3]],[[],["lineinstruction",4]],[[],["lineinstructions",3]],[[],["linerow",3]],[[],["columntype",4]],[[],["linesequence",3]],[[],["lineprogramheader",3]],[[],["incompletelineprogram",3]],[[],["completelineprogram",3]],[[],["fileentry",3]],[[],["fileentryformat",3]],[[],["debugloc",3]],[[],["debugloclists",3]],[[],["locationlists",3]],[[],["rawloclistentry",4]],[[],["locationlistentry",3]],[[],["diereference",4]],[[],["operation",4]],[[],["location",4]],[[],["piece",3]],[[],["expression",3]],[[],["operationiter",3]],[[],["pubnamesentry",3]],[[],["debugpubnames",3]],[[],["pubnamesentryiter",3]],[[],["pubtypesentry",3]],[[],["debugpubtypes",3]],[[],["pubtypesentryiter",3]],[[],["debugranges",3]],[[],["debugrnglists",3]],[[],["rangelists",3]],[[],["rawrnglistentry",4]],[[],["range",3]],[[],["debugstr",3]],[[],["debugstroffsets",3]],[[],["debuglinestr",3]],[[],["unitoffset",3]],[[],["debuginfo",3]],[[],["debuginfounitheadersiter",3]],[[],["unittype",4]],[[],["unitheader",3]],[[],["debugginginformationentry",3]],[[],["attributevalue",4]],[[],["attribute",3]],[[],["attrsiter",3]],[[],["entriesraw",3]],[[],["entriescursor",3]],[[],["entriestree",3]],[[],["debugtypes",3]],[[],["debugtypesunitheadersiter",3]],[[],["valuetype",4]],[[],["value",4]],[[],["error",4]],[[]],[[]],[[],["runtimeendian",4]],[[],["littleendian",3]],[[],["bigendian",3]],[[],["debugaddr",3]],[[],["baseaddresses",3]],[[],["sectionbaseaddresses",3]],[[],["augmentation",3]],[[]],[[]],[[]],[[]],[[],["dwarf",3]],[[]],[[],["endianslice",3]],[[],["debugabbrev",3]],[[],["abbreviations",3]],[[],["debugline",3]],[[],["debugloc",3]],[[],["debugloclists",3]],[[],["locationlists",3]],[[],["debugranges",3]],[[],["debugrnglists",3]],[[],["rangelists",3]],[[],["debugstr",3]],[[],["debugstroffsets",3]],[[],["debuglinestr",3]],[[],["debuginfo",3]],[[],["debugtypes",3]],[[],["u8",15]],[[],["u8",15]],[[],[["option",4],["debuginfooffset",3]]],[[],[["option",4],["debugtypesoffset",3]]],[[],["str",15]],[[],[["str",15],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["register",3]],[["str",15],["option",4]]],[[["str",15]],[["option",4],["register",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["register",3]],[["str",15],["option",4]]],[[["str",15]],[["option",4],["register",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["register",3]],[["str",15],["option",4]]],[[["str",15]],[["option",4],["register",3]]],[[],["bool",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["f32",15]],[[],["f64",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["debugaddrbase",3],["debugaddrindex",3],["u8",15]],[["u64",15],["result",6]]],[[],["debugaddr",3]],[[["u8",15]]],[[["u8",15]]],[[]],[[]],[[["baseaddresses",3],["u8",15]],[["result",6],["parsedehframehdr",3]]],[[],["pointer",4]],[[],[["option",4],["ehhdrtable",3]]],[[["baseaddresses",3],["u64",15]],[["pointer",4],["result",6]]],[[["pointer",4]],[["result",6],["ehframeoffset",3]]],[[["u64",15],["baseaddresses",3],["ehframe",3]],[["result",6],["framedescriptionentry",3]]],[[["ehframe",3],["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["result",6],["unwindtablerow",3]]],[[["u8",15]]],[[]],[[["baseaddresses",3]],["cfientriesiter",3]],[[["baseaddresses",3]],[["commoninformationentry",3],["result",6]]],[[["baseaddresses",3]],[["result",6],["partialframedescriptionentry",3]]],[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]],[[["baseaddresses",3],["u64",15]],[["result",6],["framedescriptionentry",3]]],[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["result",6],["unwindtablerow",3]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[],[["option",4],["result",6]]],[[]],[[],["encoding",3]],[[],["u8",15]],[[["baseaddresses",3]],["callframeinstructioniter",3]],[[]],[[],["u8",15]],[[],[["option",4],["augmentation",3]]],[[],["bool",15]],[[],[["dwehpe",3],["option",4]]],[[],["option",4]],[[],[["pointer",4],["option",4]]],[[],[["dwehpe",3],["option",4]]],[[],["bool",15]],[[],["u64",15]],[[],["i64",15]],[[],["register",3]],[[],[["result",6],["framedescriptionentry",3]]],[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["result",6],["unwindtable",3]]],[[["u64",15],["baseaddresses",3],["uninitializedunwindcontext",3]],[["result",6],["unwindtablerow",3]]],[[]],[[],["commoninformationentry",3]],[[]],[[["baseaddresses",3]],["callframeinstructioniter",3]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]],["bool",15]],[[],[["pointer",4],["option",4]]],[[],["bool",15]],[[],[["pointer",4],["option",4]]],[[],["uninitializedunwindcontext",3]],[[["commoninformationentry",3],["baseaddresses",3]],[["result",6],["unwindcontext",3]]],[[["uninitializedunwindcontext",3],["baseaddresses",3],["framedescriptionentry",3]],[["result",6],["unwindtable",3]]],[[],[["result",6],["option",4]]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]],["bool",15]],[[],["u64",15]],[[],["cfarule",4]],[[["register",3]],["registerrule",4]],[[],["registerruleiter",3]],[[],[["result",6],["option",4]]],[[],["result",4]],[[],["dwarf",3]],[[],["debuginfounitheadersiter",3]],[[["unitheader",3]],[["result",6],["unit",3]]],[[],["debugtypesunitheadersiter",3]],[[["unitheader",3]],[["result",6],["abbreviations",3]]],[[["debugstroffsetsindex",3],["unit",3]],[["debugstroffset",3],["result",6]]],[[["debugstroffset",3]],["result",6]],[[["debuglinestroffset",3]],["result",6]],[[["attributevalue",4],["unit",3]],["result",6]],[[["debugaddrindex",3],["unit",3]],[["u64",15],["result",6]]],[[["attributevalue",4],["unit",3]],[["option",4],["result",6]]],[[["debugrnglistsindex",3],["unit",3]],[["result",6],["rangelistsoffset",3]]],[[["rangelistsoffset",3],["unit",3]],[["result",6],["rnglistiter",3]]],[[["attributevalue",4],["unit",3]],[["result",6],["option",4]]],[[["attributevalue",4],["unit",3]],[["option",4],["result",6]]],[[["debugginginformationentry",3],["unit",3]],[["rangeiter",3],["result",6]]],[[["unit",3]],[["rangeiter",3],["result",6]]],[[["debugloclistsindex",3],["unit",3]],[["locationlistsoffset",3],["result",6]]],[[["locationlistsoffset",3],["unit",3]],[["loclistiter",3],["result",6]]],[[["attributevalue",4],["unit",3]],[["result",6],["option",4]]],[[["attributevalue",4],["unit",3]],[["option",4],["result",6]]],[[["readeroffsetid",3]],["option",4]],[[["error",4]],["string",3]],[[["dwarf",3],["unitheader",3]],["result",6]],[[],["encoding",3]],[[["unitoffset",3]],[["result",6],["debugginginformationentry",3]]],[[],["entriescursor",3]],[[["unitoffset",3]],[["result",6],["entriescursor",3]]],[[["option",4],["unitoffset",3]],[["result",6],["entriestree",3]]],[[["option",4],["unitoffset",3]],[["result",6],["entriesraw",3]]],[[["unit",3]]],[[["unit",3]],[["unitoffset",3],["option",4]]],[[["unit",3]],["unitsectionoffset",4]],[[],[["option",4],["result",6]]],[[],["endianslice",3]],[[]],[[["usize",15]]],[[["u8",15]],[["usize",15],["option",4]]],[[["endianslice",3]],["usize",15]],[[],[["str",15],["result",6]]],[[],[["cow",4],["str",15]]],[[["usize",15],["range",3]],["endianslice",3]],[[["usize",15],["rangefrom",3]],["endianslice",3]],[[["usize",15],["rangeto",3]],["endianslice",3]],[[],["result",6]],[[],["bool",15]],[[],[["result",6],["u8",15]]],[[],[["result",6],["i8",15]]],[[],[["result",6],["u16",15]]],[[],[["i16",15],["result",6]]],[[],[["u32",15],["result",6]]],[[],[["result",6],["i32",15]]],[[],[["u64",15],["result",6]]],[[],[["i64",15],["result",6]]],[[],[["result",6],["f32",15]]],[[],[["result",6],["f64",15]]],[[["usize",15]],[["u64",15],["result",6]]],[[],["result",6]],[[],[["u64",15],["result",6]]],[[],[["result",6],["u16",15]]],[[],[["i64",15],["result",6]]],[[],["result",6]],[[["u8",15]],[["u64",15],["result",6]]],[[["format",4]],["result",6]],[[["format",4]],["result",6]],[[["format",4]],["result",6]],[[["u8",15]],["result",6]],[[]],[[["debugabbrevoffset",3]],[["result",6],["abbreviations",3]]],[[],["debugabbrev",3]],[[["u64",15]],[["abbreviation",3],["option",4]]],[[],["u64",15]],[[],["dwtag",3]],[[],["bool",15]],[[]],[[["dwat",3],["option",4],["i64",15],["dwform",3]],["attributespecification",3]],[[],["dwat",3]],[[],["dwform",3]],[[],[["i64",15],["option",4]]],[[["unitheader",3]],[["usize",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],["u64",15]],[[],["u64",15]],[[],["debuginfooffset",3]],[[]],[[],["arangeentryiter",3]],[[],[["option",4],["result",6]]],[[]],[[["option",4],["debuglineoffset",3],["u8",15]],[["incompletelineprogram",3],["result",6]]],[[],["debugline",3]],[[],["lineprogramheader",3]],[[],[["option",4],["result",6]]],[[["lineprogramheader",3]],[["option",4],["result",6]]],[[["lineprogramheader",3]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["lineprogramheader",3]],[["fileentry",3],["option",4]]],[[],[["option",4],["u64",15]]],[[],["columntype",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["lineinstruction",4]],["bool",15]],[[["lineprogramheader",3]]],[[],["debuglineoffset",3]],[[]],[[],["encoding",3]],[[],["u16",15]],[[]],[[],["u8",15]],[[],["format",4]],[[],["lineencoding",3]],[[],["u8",15]],[[],["u8",15]],[[],["bool",15]],[[],["i8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[["u64",15]],[["option",4],["attributevalue",4]]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["u64",15]],[["fileentry",3],["option",4]]],[[]],[[],["lineinstructions",3]],[[],["lineprogramheader",3]],[[],[["linerows",3],["incompletelineprogram",3]]],[[],["result",6]],[[],["lineprogramheader",3]],[[["linesequence",3]],[["completelineprogram",3],["linerows",3]]],[[],["attributevalue",4]],[[],["u64",15]],[[["lineprogramheader",3]],[["option",4],["attributevalue",4]]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[["dwarffiletype",4],["encoding",3]],["debugloclistsbase",3]],[[["debugloc",3],["debugloclists",3]],["locationlists",3]],[[],["locationlists",3]],[[["debugaddr",3],["locationlistsoffset",3],["u64",15],["encoding",3],["debugaddrbase",3]],[["loclistiter",3],["result",6]]],[[["debugaddr",3],["locationlistsoffset",3],["u64",15],["encoding",3],["debugaddrbase",3]],[["loclistiter",3],["result",6]]],[[["locationlistsoffset",3],["encoding",3]],[["result",6],["rawloclistiter",3]]],[[["locationlistsoffset",3],["encoding",3]],[["result",6],["rawloclistiter",3]]],[[["debugloclistsbase",3],["encoding",3],["debugloclistsindex",3]],[["locationlistsoffset",3],["result",6]]],[[["readeroffsetid",3]],["option",4]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],["bool",15]],[[["encoding",3]],[["operation",4],["result",6]]],[[["encoding",3]],["evaluation",3]],[[["encoding",3]],["operationiter",3]],[[],[["result",6],["option",4]]],[[["expression",3]]],[[["encoding",3]],["evaluation",3]],[[["u64",15]]],[[["u64",15]]],[[["u32",15]]],[[],[["vec",3],["piece",3]]],[[],[["result",6],["evaluationresult",4]]],[[["value",4]],[["result",6],["evaluationresult",4]]],[[["value",4]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[],[["result",6],["evaluationresult",4]]],[[["value",4]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[["u64",15]],[["result",6],["evaluationresult",4]]],[[["valuetype",4]],[["result",6],["evaluationresult",4]]],[[]],[[],["debuginfooffset",3]],[[],["unitoffset",3]],[[]],[[],["pubnamesentryiter",3]],[[],[["result",6],["option",4]]],[[]],[[],["debuginfooffset",3]],[[],["unitoffset",3]],[[]],[[],["pubtypesentryiter",3]],[[],[["result",6],["option",4]]],[[]],[[]],[[["dwarffiletype",4],["encoding",3]],["debugrnglistsbase",3]],[[["debugranges",3],["debugrnglists",3]],["rangelists",3]],[[],["rangelists",3]],[[["debugaddr",3],["rangelistsoffset",3],["u64",15],["encoding",3],["debugaddrbase",3]],[["result",6],["rnglistiter",3]]],[[["rangelistsoffset",3],["encoding",3]],[["result",6],["rawrnglistiter",3]]],[[["debugrnglistsindex",3],["encoding",3],["debugrnglistsbase",3]],[["result",6],["rangelistsoffset",3]]],[[["readeroffsetid",3]],["option",4]],[[],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],[[]],[[["debugstroffset",3]],["result",6]],[[],["debugstr",3]],[[["format",4],["debugstroffsetsbase",3],["debugstroffsetsindex",3]],[["debugstroffset",3],["result",6]]],[[],["debugstroffsets",3]],[[["dwarffiletype",4],["encoding",3]],["debugstroffsetsbase",3]],[[["debuglinestroffset",3]],["result",6]],[[],["debuglinestr",3]],[[["unitheader",3]],[["unitoffset",3],["option",4]]],[[["unitheader",3]],[["unitoffset",3],["option",4]]],[[["unitheader",3]],[["option",4],["debuginfooffset",3]]],[[["unitheader",3]],[["option",4],["debugtypesoffset",3]]],[[]],[[],["debuginfounitheadersiter",3]],[[["debuginfooffset",3]],[["unitheader",3],["result",6]]],[[],["debuginfo",3]],[[],[["result",6],["option",4]]],[[["encoding",3],["unitsectionoffset",4],["debugabbrevoffset",3],["unittype",4]]],[[],["unitsectionoffset",4]],[[],["usize",15]],[[]],[[]],[[],["encoding",3]],[[],["u16",15]],[[],["unittype",4]],[[],["debugabbrevoffset",3]],[[],["u8",15]],[[],["format",4]],[[]],[[["range",3],["unitoffset",3]],["result",6]],[[["rangefrom",3],["unitoffset",3]],["result",6]],[[["rangeto",3],["unitoffset",3]],["result",6]],[[["abbreviations",3],["unitoffset",3]],[["result",6],["debugginginformationentry",3]]],[[["abbreviations",3]],["entriescursor",3]],[[["abbreviations",3],["unitoffset",3]],[["result",6],["entriescursor",3]]],[[["abbreviations",3],["option",4],["unitoffset",3]],[["result",6],["entriestree",3]]],[[["abbreviations",3],["option",4],["unitoffset",3]],[["entriesraw",3],["result",6]]],[[["debugabbrev",3]],[["result",6],["abbreviations",3]]],[[["abbreviation",3],["unitoffset",3],["unitheader",3]]],[[],["u64",15]],[[],["unitoffset",3]],[[],["dwtag",3]],[[],["bool",15]],[[],["attrsiter",3]],[[["dwat",3]],[["option",4],["result",6]]],[[["dwat",3]],[["result",6],["option",4]]],[[["dwat",3]],[["result",6],["option",4]]],[[],["dwat",3]],[[],["attributevalue",4]],[[],["attributevalue",4]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["i64",15],["option",4]]],[[],["option",4]],[[],[["expression",3],["option",4]]],[[["debugstr",3]],["option",4]],[[["debugstr",3],["option",4]],["option",4]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["i64",15],["option",4]]],[[],["option",4]],[[],[["expression",3],["option",4]]],[[["debugstr",3]],["option",4]],[[["debugstr",3],["option",4]],["option",4]],[[],[["option",4],["result",6]]],[[],["bool",15]],[[],["unitoffset",3]],[[],["isize",15]],[[],[["result",6],["option",4]]],[[["attributespecification",3]],[["attribute",3],["result",6]]],[[],[["debugginginformationentry",3],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["entriestreenode",3]]],[[],["debugginginformationentry",3]],[[],["entriestreeiter",3]],[[],[["option",4],["result",6]]],[[]],[[],["debugtypes",3]],[[],["debugtypesunitheadersiter",3]],[[],[["result",6],["option",4]]],[[["u64",15]],["u32",15]],[[["dwate",3],["u64",15]],[["valuetype",4],["option",4]]],[[["debugginginformationentry",3]],[["result",6],["option",4]]],[[],["valuetype",4]],[[["valuetype",4],["reader",8]],[["result",6],["value",4]]],[[["u64",15]],[["u64",15],["result",6]]],[[["valuetype",4],["u64",15]],[["result",6],["value",4]]],[[["valuetype",4],["u64",15]],[["result",6],["value",4]]],[[["valuetype",4],["u64",15]],[["result",6],["value",4]]],[[["u64",15]],[["result",6],["value",4]]],[[["u64",15]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]],[[["u64",15],["value",4]],[["result",6],["value",4]]]],"p":[[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[3,"DwEhPe"],[8,"UnwindOffset"],[8,"UnwindSection"],[3,"BaseAddresses"],[3,"SectionBaseAddresses"],[4,"CieOrFde"],[4,"CfaRule"],[13,"RegisterAndOffset"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"DefCfa"],[13,"DefCfaSf"],[13,"DefCfaRegister"],[13,"DefCfaOffset"],[13,"DefCfaOffsetSf"],[13,"DefCfaExpression"],[13,"Undefined"],[13,"SameValue"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"Register"],[13,"Expression"],[13,"ValExpression"],[13,"Restore"],[13,"ArgsSize"],[4,"Pointer"],[3,"Dwarf"],[3,"Unit"],[3,"ReaderOffsetId"],[8,"ReaderOffset"],[8,"Reader"],[8,"LineProgram"],[4,"LineInstruction"],[4,"ColumnType"],[3,"LineSequence"],[3,"FileEntryFormat"],[4,"RawLocListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"DefaultLocation"],[13,"StartEnd"],[13,"StartLength"],[3,"LocationListEntry"],[4,"DieReference"],[4,"Operation"],[13,"Deref"],[13,"Pick"],[13,"PlusConstant"],[13,"Bra"],[13,"Skip"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"Register"],[13,"RegisterOffset"],[13,"FrameOffset"],[13,"Call"],[13,"Piece"],[13,"ImplicitValue"],[13,"ImplicitPointer"],[13,"EntryValue"],[13,"ParameterRef"],[13,"Address"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[4,"Location"],[13,"Register"],[13,"Address"],[13,"Value"],[13,"Bytes"],[13,"ImplicitPointer"],[3,"Piece"],[4,"EvaluationResult"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[3,"Expression"],[4,"RawRngListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[3,"Range"],[3,"UnitOffset"],[4,"UnitType"],[13,"Type"],[13,"SplitType"],[4,"AttributeValue"],[4,"ValueType"],[4,"Value"],[4,"Error"],[8,"Section"],[4,"Format"],[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugInfoOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypesOffset"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[4,"UnitSectionOffset"],[4,"SectionId"],[3,"DwoId"],[4,"DwarfFileType"],[8,"Endianity"],[4,"RunTimeEndian"],[3,"Arm"],[3,"X86"],[3,"X86_64"],[3,"LittleEndian"],[3,"BigEndian"],[3,"DebugAddr"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"CfiEntriesIter"],[3,"Augmentation"],[3,"CommonInformationEntry"],[3,"PartialFrameDescriptionEntry"],[3,"FrameDescriptionEntry"],[3,"UninitializedUnwindContext"],[3,"UnwindContext"],[3,"UnwindTable"],[3,"RegisterRuleIter"],[3,"UnwindTableRow"],[3,"CallFrameInstructionIter"],[3,"RangeIter"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"Abbreviations"],[3,"Abbreviation"],[3,"AttributeSpecification"],[3,"ArangeEntry"],[3,"DebugAranges"],[3,"ArangeEntryIter"],[3,"DebugLine"],[3,"LineRows"],[3,"LineInstructions"],[3,"LineRow"],[3,"LineProgramHeader"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"FileEntry"],[3,"DebugLoc"],[3,"DebugLocLists"],[3,"LocationLists"],[3,"RawLocListIter"],[3,"LocListIter"],[3,"OperationIter"],[3,"Evaluation"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"RangeLists"],[3,"RawRngListIter"],[3,"RngListIter"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"DebugInfoUnitHeadersIter"],[3,"UnitHeader"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[3,"AttrsIter"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"DebugTypes"],[3,"DebugTypesUnitHeadersIter"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":[0,3,3,3,3,3,3,0,4,3,3,3,3,3,3,3,3,3,3,4,13,13,3,3,3,4,13,13,3,3,0,3,3,3,3,3,3,3,3,3,3,3,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["raw","Bucket","RawTable","RawIter","RawIntoIter","RawDrain","RawIterHash","hash_map","DefaultHashBuilder","HashMap","Iter","IterMut","IntoIter","Keys","Values","Drain","DrainFilter","ValuesMut","RawEntryBuilderMut","RawEntryMut","Occupied","Vacant","RawOccupiedEntryMut","RawVacantEntryMut","RawEntryBuilder","Entry","Occupied","Vacant","OccupiedEntry","VacantEntry","hash_set","HashSet","Iter","IntoIter","Drain","DrainFilter","Intersection","Difference","SymmetricDifference","Union","HashMap","HashSet","TryReserveError","CapacityOverflow","AllocError","layout","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","ne","drop","drop","drop","drop","drop","index","len","len","len","len","len","len","len","len","len","len","from_iter","from_iter","next","size_hint","next","size_hint","next","size_hint","next","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","into_iter","into_iter","into_iter","extend","extend","extend","extend","clone","clone","clone_from","clone","clone","clone_from","clone","clone","clone","clone","clone_from","clone","clone","clone","clone","clone","clone","default","default","as_ptr","drop","read","write","as_ref","as_mut","copy_from_nonoverlapping","new","try_with_capacity","with_capacity","data_end","bucket_index","bucket","erase_no_drop","erase","erase_entry","remove","remove_entry","clear_no_drop","clear","shrink_to","reserve","try_reserve","insert","insert_entry","insert_no_grow","replace_bucket_with","find","get","get_mut","capacity","len","buckets","iter","iter_hash","drain","drain_iter_from","into_iter_from","clone_from_with_hasher","reflect_remove","reflect_insert","iter","iter","with_hasher","with_capacity_and_hasher","hasher","capacity","keys","values","values_mut","iter","iter_mut","len","is_empty","drain","retain","drain_filter","clear","reserve","try_reserve","shrink_to_fit","shrink_to","entry","get","get_key_value","get_key_value_mut","contains_key","get_mut","insert","remove","remove_entry","raw_entry_mut","raw_entry","from_key","from_key_hashed_nocheck","from_hash","from_key","from_key_hashed_nocheck","from_hash","insert","or_insert","or_insert_with","and_modify","and_replace_entry_with","key","key_mut","into_key","get","into_mut","get_mut","get_key_value","get_key_value_mut","into_key_value","insert","insert_key","remove","remove_entry","replace_entry_with","insert","insert_hashed_nocheck","insert_with_hasher","insert","or_insert","or_insert_with","or_insert_with_key","key","and_modify","and_replace_entry_with","or_default","key","remove_entry","get","get_mut","into_mut","insert","remove","replace_entry","replace_key","replace_entry_with","key","into_key","insert","with_hasher","with_capacity_and_hasher","capacity","iter","len","is_empty","drain","retain","drain_filter","clear","hasher","reserve","try_reserve","shrink_to_fit","shrink_to","difference","symmetric_difference","intersection","union","contains","get","get_or_insert","get_or_insert_owned","get_or_insert_with","is_disjoint","is_subset","is_superset","insert","replace","remove","take"],"q":["hashbrown","hashbrown::raw","","","","","","hashbrown","hashbrown::hash_map","","","","","","","","","","","","","","","","","","","","","","hashbrown","hashbrown::hash_set","","","","","","","","","hashbrown","","","","","hashbrown::TryReserveError","hashbrown::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hashbrown::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hashbrown::hash_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hashbrown","","","","","","","","","hashbrown::hash_map","","","","","","","","","","","","","","","","hashbrown::hash_set","","","","","","","","hashbrown","hashbrown::hash_map","hashbrown::hash_set","hashbrown","","hashbrown::raw","","","hashbrown::hash_map","hashbrown::hash_set","hashbrown::hash_map","","","","","","","","hashbrown::hash_set","","","hashbrown::hash_map","hashbrown::hash_set","hashbrown::raw","","","","","","","hashbrown::hash_map","","","","","","","","","","","","","","","","hashbrown::hash_set","","","","","","","","","","","","","","","","hashbrown::raw","hashbrown::hash_map","hashbrown::hash_set","hashbrown::hash_map","","hashbrown::hash_set","","hashbrown::raw","","","","hashbrown::hash_map","","","","","hashbrown::hash_set","","","","","","","hashbrown","hashbrown::hash_map","hashbrown::hash_set","hashbrown::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hashbrown::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hashbrown::hash_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Experimental and unsafe <code>RawTable</code> API. This module is only …","A reference to a hash table bucket containing a <code>T</code>.","A raw hash table with an unsafe API.","Iterator which returns a raw pointer to every full bucket …","Iterator which consumes a table and returns elements.","Iterator which consumes elements without freeing the …","Iterator over occupied buckets that could match a given …","A hash map implemented with quadratic probing and SIMD …","Dummy default hasher for <code>HashMap</code>.","A hash map implemented with quadratic probing and SIMD …","An iterator over the entries of a <code>HashMap</code>.","A mutable iterator over the entries of a <code>HashMap</code>.","An owning iterator over the entries of a <code>HashMap</code>.","An iterator over the keys of a <code>HashMap</code>.","An iterator over the values of a <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code>.","A draining iterator over entries of a <code>HashMap</code> which don’…","A mutable iterator over the values of a <code>HashMap</code>.","A builder for computing where in a [<code>HashMap</code>] a key-value …","A view into a single entry in a map, which may either be …","An occupied entry.","A vacant entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of …","A builder for computing where in a [<code>HashMap</code>] a key-value …","A view into a single entry in a map, which may either be …","An occupied entry.","A vacant entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","An iterator over the items of a <code>HashSet</code>.","An owning iterator over the items of a <code>HashSet</code>.","A draining iterator over the items of a <code>HashSet</code>.","A draining iterator over entries of a <code>HashSet</code> which don’…","A lazy iterator producing elements in the intersection of …","A lazy iterator producing elements in the difference of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","Error due to the computed capacity exceeding the …","The memory allocator returned an error","The layout of the allocation request that failedeturns a reference to the value corresponding to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves …","Creates a consuming iterator, that is, one that moves …","","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …","","","","","","","","Creates a new empty hash table without allocating any …","Attempts to allocate a new hash table with at least …","Allocates a new hash table with at least enough capacity …","Returns pointer to one past last element of data table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns a pointer to an element in the table.","Erases an element from the table without dropping it.","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Marks all table buckets as empty without dropping their …","Removes all elements from the table without freeing the …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","Ensures that at least <code>additional</code> items can be inserted …","Tries to ensure that at least <code>additional</code> items can be …","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table, without growing the …","Temporary removes a bucket, applying the given function …","Searches for an element in the table.","Gets a reference to an element in the table.","Gets a mutable reference to an element in the table.","Returns the number of elements the map can hold without …","Returns the number of elements in the table.","Returns the number of buckets in the table.","Returns an iterator over every element in the table. It …","Returns an iterator over occupied buckets that could …","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","Returns an iterator which consumes all elements from the …","Variant of <code>clone_from</code> to use when a hasher is available.","Refresh the iterator so that it reflects a removal from …","Refresh the iterator so that it reflects an insertion …","","","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> with the specified capacity, …","Returns a reference to the map’s <code>BuildHasher</code>.","Returns the number of elements the map can hold without …","An iterator visiting all keys in arbitrary order. The …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns the number of elements in the map.","Returns <code>true</code> if the map contains no elements.","Clears the map, returning all key-value pairs as an …","Retains only the elements specified by the predicate.","Drains elements which are true under the given predicate, …","Clears the map, removing all key-value pairs. Keeps the …","Reserves capacity for at least <code>additional</code> more elements …","Tries to reserve capacity for at least <code>additional</code> more …","Shrinks the capacity of the map as much as possible. It …","Shrinks the capacity of the map with a lower limit. It …","Gets the given key’s corresponding entry in the map for …","Returns a reference to the value corresponding to the key.","Returns the key-value pair corresponding to the supplied …","Returns the key-value pair corresponding to the supplied …","Returns <code>true</code> if the map contains a value for the …","Returns a mutable reference to the value corresponding to …","Inserts a key-value pair into the map.","Removes a key from the map, returning the value at the …","Removes a key from the map, returning the stored key and …","Creates a raw entry builder for the HashMap.","Creates a raw immutable entry builder for the HashMap.","Creates a <code>RawEntryMut</code> from the given key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Creates a <code>RawEntryMut</code> from the given hash.","Access an entry by key.","Access an entry by a key and its hash.","Access an entry by hash.","Sets the value of the entry, and returns a …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Gets a reference to the key in the entry.","Gets a mutable reference to the key in the entry.","Converts the entry into a mutable reference to the key in …","Gets a reference to the value in the entry.","Converts the OccupiedEntry into a mutable reference to …","Gets a mutable reference to the value in the entry.","Gets a reference to the key and value in the entry.","Gets a mutable reference to the key and value in the …","Converts the OccupiedEntry into a mutable reference to …","Sets the value of the entry, and returns the entry’s …","Sets the value of the entry, and returns the entry’s …","Takes the value out of the entry, and returns it.","Take the ownership of the key and value from the map.","Provides shared access to the key and owned access to the …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry with the VacantEntry’s key, …","Set the value of an entry with a custom hasher function.","Sets the value of the entry, and returns an OccupiedEntry.","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Ensures a value is in the entry by inserting, if empty, …","Returns a reference to this entry’s key.","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Ensures a value is in the entry by inserting the default …","Gets a reference to the key in the entry.","Take the ownership of the key and value from the map.","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Converts the OccupiedEntry into a mutable reference to …","Sets the value of the entry, and returns the entry’s …","Takes the value out of the entry, and returns it.","Replaces the entry, returning the old key and value. The …","Replaces the key in the hash map with the key used to …","Provides shared access to the key and owned access to the …","Gets a reference to the key that would be used when …","Take ownership of the key.","Sets the value of the entry with the VacantEntry’s key, …","Creates a new empty hash set which will use the given …","Creates an empty <code>HashSet</code> with the specified capacity, …","Returns the number of elements the set can hold without …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","Returns <code>true</code> if the set contains no elements.","Clears the set, returning all elements in an iterator.","Retains only the elements specified by the predicate.","Drains elements which are true under the given predicate, …","Clears the set, removing all values.","Returns a reference to the set’s <code>BuildHasher</code>.","Reserves capacity for at least <code>additional</code> more elements …","Tries to reserve capacity for at least <code>additional</code> more …","Shrinks the capacity of the set as much as possible. It …","Shrinks the capacity of the set with a lower limit. It …","Visits the values representing the difference, i.e., the …","Visits the values representing the symmetric difference, …","Visits the values representing the intersection, i.e., …","Visits the values representing the union, i.e., all the …","Returns <code>true</code> if the set contains a value.","Returns a reference to the value in the set, if any, that …","Inserts the given <code>value</code> into the set if it is not …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…","Returns <code>true</code> if the set is a subset of another, i.e., …","Returns <code>true</code> if the set is a superset of another, i.e., …","Adds a value to the set.","Adds a value to the set, replacing the existing value, if …","Removes a value from the set. Returns whether the value …","Removes and returns the value in the set, if any, that is …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,1,1,1,1,1,1,1,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,2,2,2,2,2,2,2,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,3,3,3,3,3,3,3,3,3,12,13,16,17,21,1,22,23,24,2,25,26,14,15,20,18,27,28,29,30,32,33,34,35,3,12,27,3,3,6,8,9,19,31,12,13,14,15,16,17,20,18,28,29,30,12,27,7,7,8,8,9,9,10,19,19,13,13,14,14,15,15,16,16,17,17,20,20,18,18,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,6,12,27,12,12,27,27,5,6,6,7,12,12,13,16,17,27,27,28,32,33,34,35,3,12,27,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,8,9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,21,21,21,24,24,24,1,1,1,1,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,2,2,2,2,2,2,2,2,25,25,25,25,25,25,25,25,25,25,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["tryreserveerror",4]],["bool",15]],[[["tryreserveerror",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],[["option",4],["bucket",3]]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],[["option",4],["bucket",3]]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["rawintoiter",3]],[[],["intoiter",3]],[[],["intoiter",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tryreserveerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["result",4],["tryreserveerror",4]]],[[["usize",15]]],[[],["nonnull",3]],[[["bucket",3]],["usize",15]],[[["usize",15]],["bucket",3]],[[["bucket",3]]],[[["bucket",3]]],[[["u64",15]],["bool",15]],[[["bucket",3]]],[[["u64",15]],["option",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["result",4],["tryreserveerror",4]]],[[["u64",15]],["bucket",3]],[[["u64",15]]],[[["u64",15]],["bucket",3]],[[["bucket",3]],["bool",15]],[[["u64",15]],[["option",4],["bucket",3]]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["rawiter",3]],[[["u64",15]],["rawiterhash",3]],[[],["rawdrain",3]],[[["rawiter",3]],["rawdrain",3]],[[["rawiter",3]],["rawintoiter",3]],[[]],[[["bucket",3]]],[[["bucket",3]]],[[],["rawiter",3]],[[],["rawiter",3]],[[]],[[["usize",15]]],[[]],[[],["usize",15]],[[],["keys",3]],[[],["values",3]],[[],["valuesmut",3]],[[],["iter",3]],[[],["itermut",3]],[[],["usize",15]],[[],["bool",15]],[[],["drain",3]],[[]],[[],["drainfilter",3]],[[]],[[["usize",15]]],[[["usize",15]],[["result",4],["tryreserveerror",4]]],[[]],[[["usize",15]]],[[],["entry",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["rawentrybuildermut",3]],[[],["rawentrybuilder",3]],[[],["rawentrymut",4]],[[["u64",15]],["rawentrymut",4]],[[["u64",15]],["rawentrymut",4]],[[],["option",4]],[[["u64",15]],["option",4]],[[["u64",15]],["option",4]],[[],["rawoccupiedentrymut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawentrymut",4]],[[]],[[["u64",15]]],[[["u64",15]]],[[],["occupiedentry",3]],[[]],[[["fnonce",8]]],[[["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["entry",4]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["usize",15]],[[],["iter",3]],[[],["usize",15]],[[],["bool",15]],[[],["drain",3]],[[]],[[],["drainfilter",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]],[["result",4],["tryreserveerror",4]]],[[]],[[["usize",15]]],[[],["difference",3]],[[],["symmetricdifference",3]],[[],["intersection",3]],[[],["union",3]],[[],["bool",15]],[[],["option",4]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["bool",15]],[[],["option",4]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"RawIterHash"],[4,"DefaultHashBuilder"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"heck":{"doc":"<strong>heck</strong> is a case conversion library.","t":[8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10],"n":["CamelCase","to_camel_case","KebabCase","to_kebab_case","MixedCase","to_mixed_case","ShoutyKebabCase","to_shouty_kebab_case","ShoutySnakeCase","to_shouty_snake_case","ShoutySnekCase","TO_SHOUTY_SNEK_CASE","SnakeCase","to_snake_case","SnekCase","to_snek_case","TitleCase","to_title_case"],"q":["heck","","","","","","","","","","","","","","","","",""],"d":["This trait defines a camel case conversion.","Convert this type to camel case.","This trait defines a kebab case conversion.","Convert this type to kebab case.","This trait defines a mixed case conversion.","Convert this type to mixed case.","This trait defines a shouty kebab case conversion.","Convert this type to shouty kebab case.","This trait defines a shouty snake case conversion.","Convert this type to shouty snake case.","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase. …","CONVERT THIS TYPE TO SNEK CASE.","This trait defines a snake case conversion.","Convert this type to snake case.","Oh heck, SnekCase is an alias for SnakeCase. See …","Convert this type to snek case.","This trait defines a title case conversion.","Convert this type to title case."],"i":[0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9],"f":[null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutyKebabCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]},\
"hound":{"doc":"Hound, a wav encoding and decoding library.","t":[3,3,3,5,3,3,8,10,10,10,4,13,13,3,12,12,12,12,4,13,13,13,13,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["WavReader","WavIntoSamples","WavSamples","read_wave_header","SampleWriter16","WavWriter","Sample","write","read","as_i16","SampleFormat","Float","Int","WavSpec","channels","sample_rate","bits_per_sample","sample_format","Error","IoError","FormatError","TooWide","UnfinishedSample","Unsupported","InvalidSampleFormat","Result","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","drop","from","next","size_hint","next","size_hint","clone","clone","eq","eq","ne","fmt","fmt","fmt","fmt","description","cause","new","spec","samples","into_samples","duration","len","into_inner","seek","open","new","write_sample","get_i16_writer","flush","finalize","spec","duration","len","create","append","new_append","write_sample","write_sample_unchecked","flush"],"q":["hound","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A reader that reads the WAVE format from the underlying …","An iterator that yields samples of type <code>S</code> read from a …","An iterator that yields samples of type <code>S</code> read from a …","Reads the RIFF WAVE header, returns the supposed file …","A writer that specifically only writes integer samples of …","A writer that accepts samples and writes the WAVE format.","A type that can be used to represent audio samples.","Writes the audio sample to the WAVE data chunk.","Reads the audio sample from the WAVE data chunk.","Cast the sample to a 16-bit sample.","Specifies whether a sample is stored as an “IEEE Float…","Wave files with the <code>WAVE_FORMAT_IEEE_FLOAT</code> format tag …","Wave files with the <code>WAVE_FORMAT_PCM</code> format tag store …","Specifies properties of the audio data.","The number of channels.","The number of samples per second.","The number of bits per sample.","Whether the wav’s samples are float or integer values.","The error type for operations on <code>WavReader</code> and <code>WavWriter</code>.","An IO error occured in the underlying reader or writer.","Ill-formed WAVE data was encountered.","The sample has more bits than the destination type.","The number of samples written is not a multiple of the …","The format is not supported.","The sample format is different than the destination …","A type for results generated by Hound where the error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to create a reader that reads the WAVE format.","Returns information about the WAVE file.","Returns an iterator over all samples.","Same as <code>samples</code>, but takes ownership of the <code>WavReader</code>.","Returns the duration of the file in samples.","Returns the number of values that the sample iterator …","Destroys the <code>WavReader</code> and returns the underlying reader.","Seek to the given time within the file.","Attempts to create a reader that reads from the specified …","Creates a writer that writes the WAVE format to the …","Writes a single sample for one channel.","Create an efficient writer that writes 16-bit integer …","Updates the WAVE header and flushes the underlying writer.","Updates the WAVE header (which requires knowing all …","Returns information about the WAVE file being written.","Returns the duration of the file written so far, in …","Returns the number of samples in the file written so far.","Creates a writer that writes the WAVE format to a file.","Creates a writer that appends samples to an existing file.","Creates a writer that appends samples to an existing file …","Writes a single sample for one channel.","Like <code>write_sample()</code>, but does not perform a bounds check …","Flush the internal buffer to the underlying writer."],"i":[0,0,0,0,0,0,0,1,1,1,0,2,2,0,3,3,3,3,0,4,4,4,4,4,4,0,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,8,4,6,6,7,7,2,3,2,3,3,2,3,4,4,4,4,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,8,8,8,8,8,9,9,9],"f":[null,null,null,[[],[["u64",15],["result",6]]],null,null,null,[[["u16",15]],["result",6]],[[["sampleformat",4],["u16",15]],["result",6]],[[],["i16",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["error",3]],["error",4]],[[],[["result",6],["option",4]]],[[]],[[],[["result",6],["option",4]]],[[]],[[],["sampleformat",4]],[[],["wavspec",3]],[[["sampleformat",4]],["bool",15]],[[["wavspec",3]],["bool",15]],[[["wavspec",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[],[["option",4],["error",8]]],[[],[["result",6],["wavreader",3]]],[[],["wavspec",3]],[[],[["wavsamples",3],["sample",8]]],[[],[["sample",8],["wavintosamples",3]]],[[],["u32",15]],[[],["u32",15]],[[]],[[["u32",15]],["result",6]],[[["asref",8],["path",3]],[["result",6],["wavreader",3]]],[[["wavspec",3]],[["result",6],["wavwriter",3]]],[[["sample",8]],["result",6]],[[["u32",15]],["samplewriter16",3]],[[],["result",6]],[[],["result",6]],[[],["wavspec",3]],[[],["u32",15]],[[],["u32",15]],[[["wavspec",3],["asref",8],["path",3]],[["result",6],["wavwriter",3]]],[[["asref",8],["path",3]],[["result",6],["wavwriter",3]]],[[],[["result",6],["wavwriter",3]]],[[["sample",8]]],[[["sample",8]]],[[],["result",6]]],"p":[[8,"Sample"],[4,"SampleFormat"],[3,"WavSpec"],[4,"Error"],[3,"WavReader"],[3,"WavSamples"],[3,"WavIntoSamples"],[3,"WavWriter"],[3,"SampleWriter16"]]},\
"indenter":{"doc":"A few wrappers for the <code>fmt::Write</code> objects that …","t":[4,13,12,13,12,13,12,3,6,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Format","Uniform","indentation","Numbered","ind","Custom","inserter","Indented","Inserter","ind","with_str","with_format","indented","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","write_str"],"q":["indenter","","indenter::Format","indenter","indenter::Format","indenter","indenter::Format","indenter","","","","","","","","","","","","","","","","","","","",""],"d":["The set of supported formats for indentation","Insert uniform indentation before every line","The string to insert as indentation","Inserts a number before the first line","The index to insert before the first line of output","A custom indenter which is executed after every newline","The custom indenter","Helper struct for efficiently indenting multi line …","A callback for <code>Format::Custom</code> used to insert indenation …","Sets the format to <code>Format::Numbered</code> with the provided …","Sets the format to <code>Format::Uniform</code> with the provided …","Construct an indenter with a user defined format","Helper function for creating a default indenter","","","","","","","","","","","","","","",""],"i":[0,1,2,1,3,1,4,0,0,5,5,5,0,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5],"f":[null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["str",15]]],[[["format",4]]],[[],[["sized",8],["indented",3]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["result",6]]],"p":[[4,"Format"],[13,"Uniform"],[13,"Numbered"],[13,"Custom"],[3,"Indented"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":[0,5,5,0,8,16,16,10,10,10,4,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,3,3,3,3,8,10,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["serde_seq","serialize","deserialize","map","MutableKeys","Key","Value","get_full_mut2","retain2","__private_marker","Entry","Occupied","Vacant","OccupiedEntry","VacantEntry","IndexMap","new","with_capacity","with_capacity_and_hasher","with_hasher","capacity","hasher","len","is_empty","iter","iter_mut","keys","values","values_mut","clear","truncate","drain","split_off","reserve","shrink_to_fit","insert","insert_full","entry","contains_key","get","get_key_value","get_full","get_index_of","get_mut","get_full_mut","remove","remove_entry","swap_remove","swap_remove_entry","swap_remove_full","shift_remove","shift_remove_entry","shift_remove_full","pop","retain","sort_keys","sort_by","sorted_by","reverse","get_index","get_index_mut","first","first_mut","last","last_mut","swap_remove_index","shift_remove_index","swap_indices","Keys","Values","ValuesMut","Iter","IterMut","IntoIter","Drain","set","IndexSet","new","with_capacity","with_capacity_and_hasher","with_hasher","capacity","hasher","len","is_empty","iter","clear","truncate","drain","split_off","reserve","shrink_to_fit","insert","insert_full","difference","symmetric_difference","intersection","union","contains","get","get_full","get_index_of","replace","remove","swap_remove","shift_remove","take","swap_take","shift_take","swap_remove_full","shift_remove_full","pop","retain","sort","sort_by","sorted_by","reverse","get_index","first","last","swap_remove_index","shift_remove_index","swap_indices","IntoIter","Iter","Drain","is_disjoint","is_subset","is_superset","Difference","Intersection","SymmetricDifference","Union","Equivalent","equivalent","indexmap","indexset","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","get_full_mut2","retain2","__private_marker","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","index","index","index","index_mut","index_mut","len","len","len","len","len","len","len","len","from_iter","from_iter","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","count","nth","last","collect","next","size_hint","next","size_hint","next","size_hint","fold","next","size_hint","fold","into_iter","into_iter","extend","extend","extend","extend","clone","clone_from","clone","clone","clone","clone","clone_from","clone","clone","clone","clone","clone","default","default","into_deserializer","into_deserializer","serialize","serialize","deserialize","deserialize","key","get","get_mut","index","into_mut","swap_remove_entry","shift_remove_entry","or_insert","or_insert_with","or_insert_with_key","key","index","and_modify","or_default","insert","remove","swap_remove","shift_remove","remove_entry","key","into_key","index","insert"],"q":["indexmap","indexmap::serde_seq","","indexmap","indexmap::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap","indexmap::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap","","","","indexmap::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap::map","","","","","","","","","","","indexmap::set","","","","","","","indexmap::map","indexmap::set","indexmap::map","","indexmap::set","indexmap::map","","","","","","","","indexmap::set","","indexmap::map","indexmap::set","indexmap::map","","","","","","","indexmap::set","","","","","","","indexmap::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap::set","","","","","","","","","","","","","","","","","","","","","","","","","","","","indexmap::map","indexmap::set","indexmap::map","","indexmap::set","","indexmap::map","","","","","indexmap::set","","","","","","","indexmap::map","indexmap::set","indexmap::map","indexmap::set","indexmap::map","indexmap::set","indexmap::map","indexmap::set","indexmap::map","","","","","","","","","","","","","","","","","","","","","",""],"d":["Functions to serialize and deserialize an <code>IndexMap</code> as an …","Serializes an <code>IndexMap</code> as an ordered sequence.","Deserializes an <code>IndexMap</code> from an ordered sequence.","<code>IndexMap</code> is a hash table where the iteration order of the …","Opt-in mutable access to keys.","","","Return item index, mutable reference to key and value","Scan through each key-value pair in the map and keep …","This method is not useful in itself – it is there to …","Entry for an existing key-value pair or a vacant location …","Existing slot with equivalent key.","Vacant slot (no equivalent key in the map).","A view into an occupied entry in a <code>IndexMap</code>. It is part …","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","A hash table where the iteration order of the key-value …","Create a new map. (Does not allocate.)","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>","Computes in <strong>O(1)</strong> time.","Return a reference to the map’s <code>BuildHasher</code>.","Return the number of key-value pairs in the map.","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map, …","Return an iterator over the key-value pairs of the map, …","Return an iterator over the keys of the map, in their …","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the the …","Remove all key-value pairs in the map, while preserving …","Shortens the map, keeping the first <code>len</code> elements and …","Clears the <code>IndexMap</code> in the given index range, returning …","Splits the collection into two at the given index.","Reserve capacity for <code>additional</code> more key-value pairs.","Shrink the capacity of the map as much as possible.","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Get the given key’s corresponding entry in the map for …","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return references to the key-value pair stored for <code>key</code>, …","Return item index, key and value","Return item index, if it exists in the map","","","Remove the key-value pair equivalent to <code>key</code> and return …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair equivalent to <code>key</code> and return …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the last key-value pair","Scan through each key-value pair in the map and keep …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the key-value pairs of the map and return a by value …","Reverses the order of the map’s key-value pairs in …","Get a key-value pair by index","Get a key-value pair by index","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","Get the last key-value pair","Get the last key-value pair, with mutable access to the …","Remove the key-value pair by index","Remove the key-value pair by index","Swaps the position of two key-value pairs in the map.","An iterator over the keys of a <code>IndexMap</code>.","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the entries of a <code>IndexMap</code>.","A draining iterator over the entries of a <code>IndexMap</code>.","A hash set implemented using <code>IndexMap</code>","A hash set where the iteration order of the values is …","Create a new set. (Does not allocate.)","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>","Computes in <strong>O(1)</strong> time.","Return a reference to the set’s <code>BuildHasher</code>.","Return the number of elements in the set.","Returns true if the set contains no elements.","Return an iterator over the values of the set, in their …","Remove all elements in the set, while preserving its …","Shortens the set, keeping the first <code>len</code> elements and …","Clears the <code>IndexSet</code> in the given index range, returning …","Splits the collection into two at the given index.","Reserve capacity for <code>additional</code> more values.","Shrink the capacity of the set as much as possible.","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in <code>self</code> but …","Return an iterator over the values that are in <code>self</code> or …","Return an iterator over the values that are in both <code>self</code> …","Return an iterator over all values that are in <code>self</code> or …","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","Return a reference to the value stored in the set, if it …","Return item index and value","Return item index, if it exists in the set","Adds a value to the set, replacing the existing value, if …","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set, and return <code>true</code> if it was …","Removes and returns the value in the set, if any, that is …","Removes and returns the value in the set, if any, that is …","Removes and returns the value in the set, if any, that is …","Remove the value from the set return it and the index it …","Remove the value from the set return it and the index it …","Remove the last value","Scan through each value in the set and keep those where …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by value iterator …","Reverses the order of the set’s values in place.","Get a value by index","Get the first value","Get the last value","Remove the value by index","Remove the value by index","Swaps the position of two values in the set.","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A draining iterator over the items of a <code>IndexSet</code>.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns <code>true</code> if all elements of <code>self</code> are contained in …","Returns <code>true</code> if all elements of <code>other</code> are contained in …","A lazy iterator producing elements in the difference of …","A lazy iterator producing elements in the intersection of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of …","Key equivalence trait.","Compare self to <code>key</code> and return <code>true</code> if they are equal.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of valueseturns a reference to the value corresponding to the …","Returns a reference to the value at the supplied <code>index</code>.","Returns a reference to the value at the supplied <code>index</code>.","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value at the supplied …","","","","","","","","","Create an <code>IndexMap</code> from the sequence of key-value pairs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","","","","","","","","","","","","","","","Return an empty <code>IndexMap</code>","Return an empty <code>IndexSet</code>","","","","","","","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s value in the map.","Gets a mutable reference to the entry’s value in the …","Return the index of the key-value pair","Converts into a mutable reference to the entry’s value …","Remove and return the key, value pair stored in the map …","Remove and return the key, value pair stored in the map …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if …","Inserts the result of the <code>call</code> function with a reference …","Gets a reference to the entry’s key, either within the …","Return the index where the key-value pair exists or will …","Modifies the entry if it is occupied.","Inserts a default-constructed value in the entry if it is …","Sets the value of the entry to <code>value</code>, and returns the …","Remove the key, value pair stored in the map for this …","Remove the key, value pair stored in the map for this …","Remove the key, value pair stored in the map for this …","Remove and return the key, value pair stored in the map …","Gets a reference to the key that was used to find the …","Takes ownership of the key, leaving the entry vacant.","Return the index where the key-value pair will be …","Inserts the entry’s key and the given value into the …"],"i":[0,0,0,0,0,1,1,1,1,1,0,2,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,4,4,4,0,0,0,0,0,5,0,0,6,6,6,6,6,6,6,2,2,2,2,2,2,2,7,7,7,7,7,7,7,3,3,3,3,3,3,3,3,3,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,3,3,3,2,6,7,3,8,9,11,13,4,15,16,18,19,20,21,3,4,3,3,4,3,3,8,9,10,11,12,13,15,16,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,8,8,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,17,17,17,17,17,18,18,19,19,20,20,20,21,21,21,3,4,3,3,4,4,3,3,8,9,11,4,4,16,18,19,20,21,3,4,3,4,3,4,3,4,6,6,6,6,6,6,6,2,2,2,2,2,2,2,6,6,6,6,6,7,7,7,7],"f":[null,[[["indexmap",3]],["result",4]],[[],[["indexmap",3],["result",4]]],null,null,null,null,[[],["option",4]],[[]],[[],["privatemarker",3]],null,null,null,null,null,null,[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["bool",15]],[[],["iter",3]],[[],["itermut",3]],[[],["keys",3]],[[],["values",3]],[[],["valuesmut",3]],[[]],[[["usize",15]]],[[],["drain",3]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["option",4]],[[]],[[],["entry",4]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]]],null,null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["bool",15]],[[],["iter",3]],[[]],[[["usize",15]]],[[],["drain",3]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["bool",15]],[[]],[[["indexset",3]],["difference",3]],[[["indexset",3]],["symmetricdifference",3]],[[["indexset",3]],["intersection",3]],[[["indexset",3]],["union",3]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["intoiter",3]],[[]],[[["usize",15]],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]]],null,null,null,[[["indexset",3]],["bool",15]],[[["indexset",3]],["bool",15]],[[["indexset",3]],["bool",15]],null,null,null,null,null,[[],["bool",15]],null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[],["privatemarker",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["indexmap",3]],["bool",15]],[[["indexset",3]],["bool",15]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]]],"p":[[8,"MutableKeys"],[4,"Entry"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"instant":{"doc":"","t":[6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Instant","Duration","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","hash","mul_assign","sum","sum","div","clone","fmt","mul","cmp","sub","add","add_assign","div_assign","default","eq","ne","partial_cmp","sub_assign","SECOND","MILLISECOND","MICROSECOND","NANOSECOND","ZERO","MAX","new","from_secs","from_millis","from_micros","from_nanos","is_zero","as_secs","subsec_millis","subsec_micros","subsec_nanos","as_millis","as_micros","as_nanos","checked_add","saturating_add","checked_sub","saturating_sub","checked_mul","saturating_mul","checked_div","as_secs_f64","as_secs_f32","from_secs_f64","from_secs_f32","mul_f64","mul_f32","div_f64","div_f32","div_duration_f64","div_duration_f32"],"q":["instant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A <code>Duration</code> type to represent a span of time, typically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The duration of one second.","The duration of one millisecond.","The duration of one microsecond.","The duration of one nanosecond.","A duration of zero time.","The maximum duration.","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Returns true if this <code>Duration</code> spans no time.","Returns the number of <em>whole</em> seconds contained by this …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","Returns the total number of whole milliseconds contained …","Returns the total number of whole microseconds contained …","Returns the total number of nanoseconds contained by this …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Multiplies <code>Duration</code> by <code>f64</code>.","Multiplies <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>."],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["u32",15]]],[[],["duration",3]],[[],["duration",3]],[[["u32",15]],["duration",3]],[[],["duration",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["u32",15]],["duration",3]],[[["duration",3]],["ordering",4]],[[["duration",3]],["duration",3]],[[["duration",3]],["duration",3]],[[["duration",3]]],[[["u32",15]]],[[],["duration",3]],[[["duration",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["duration",3]],[["ordering",4],["option",4]]],[[["duration",3]]],null,null,null,null,null,null,[[["u32",15],["u64",15]],["duration",3]],[[["u64",15]],["duration",3]],[[["u64",15]],["duration",3]],[[["u64",15]],["duration",3]],[[["u64",15]],["duration",3]],[[],["bool",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u128",15]],[[],["u128",15]],[[],["u128",15]],[[["duration",3]],[["option",4],["duration",3]]],[[["duration",3]],["duration",3]],[[["duration",3]],[["option",4],["duration",3]]],[[["duration",3]],["duration",3]],[[["u32",15]],[["option",4],["duration",3]]],[[["u32",15]],["duration",3]],[[["u32",15]],[["option",4],["duration",3]]],[[],["f64",15]],[[],["f32",15]],[[["f64",15]],["duration",3]],[[["f32",15]],["duration",3]],[[["f64",15]],["duration",3]],[[["f32",15]],["duration",3]],[[["f64",15]],["duration",3]],[[["f32",15]],["duration",3]],[[["duration",3]],["f64",15]],[[["duration",3]],["f32",15]]],"p":[[3,"Duration"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[]],null],"p":[]},\
"lewton":{"doc":"A <code>vorbis</code> decoder, written in Rust.","t":[0,4,13,13,13,13,13,13,13,13,6,3,12,12,12,12,12,12,12,5,3,12,12,5,3,5,0,4,13,13,13,13,3,11,11,5,5,5,0,5,3,12,12,12,11,11,11,11,11,11,11,11,11,0,8,10,10,10,3,12,12,8,10,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["header","HeaderReadError","EndOfPacket","NotVorbisHeader","UnsupportedVorbisVersion","HeaderBadFormat","HeaderBadType","HeaderIsAudio","Utf8DecodeError","BufferNotAddressable","HeaderSet","IdentHeader","audio_channels","audio_sample_rate","bitrate_maximum","bitrate_nominal","bitrate_minimum","blocksize_0","blocksize_1","read_header_ident","CommentHeader","vendor","comment_list","read_header_comment","SetupHeader","read_header_setup","audio","AudioReadError","EndOfPacket","AudioBadFormat","AudioIsHeader","BufferNotAddressable","PreviousWindowRight","new","is_empty","get_decoded_sample_count","read_audio_packet_generic","read_audio_packet","inside_ogg","read_headers","OggStreamReader","ident_hdr","comment_hdr","setup_hdr","new","from_ogg_reader","into_inner","read_dec_packet","read_dec_packet_generic","read_dec_packet_itl","stream_serial","get_last_absgp","seek_absgp_pg","samples","Samples","num_samples","truncate","from_floats","InterleavedSamples","samples","channel_count","Sample","from_float","VorbisError","BadAudio","BadHeader","OggError","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","num_samples","truncate","from_floats","from","from","from","from","from","from","from","clone","eq","ne","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash"],"q":["lewton","lewton::header","","","","","","","","","","","","","","","","","","","","","","","","","lewton","lewton::audio","","","","","","","","","","","lewton","lewton::inside_ogg","","","","","","","","","","","","","","lewton","lewton::samples","","","","","","","","","lewton","","","","lewton::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lewton::audio","","","","","","","","","","","","","","","lewton::inside_ogg","","","","","","","lewton::samples","","","","","","","lewton","","","","","","","","lewton::samples","","","lewton::header","","","lewton::audio","lewton","","","lewton::header","","","","","lewton::audio","lewton::header","","lewton::audio","lewton","lewton::header","lewton::audio","lewton","lewton::header"],"d":["Header decoding","Errors that can occur during Header decoding","","If the passed data don’t start with the “vorbis” …","","If the header violates the vorbis spec","The given packet indeed seems to be a vorbis header, but …","The given packet does not seem to be a header as per …","","If the needed memory isn’t addressable by us","The set of the three Vorbis headers","Representation for the identification header","The number of audio channels in the stream","The sample rate of the stream","The maximum bit rate of the stream","The nominal bit rate of the stream","The minimum bit rate of the stream","","","Reading the Identification header","Representation of the comment header","An identification string of the software/library that …","A key-value list of the comments attached to the stream.","Reading the Comment header","","Reading the setup header.","Audio packet decoding","","","","","If the needed memory isn’t addressable by us","The right part of the previous window","Initialisation for new streams","If the state is still uninitialized","Returns the per-channel sample count of a packet if it …","Main audio packet decoding function","Main audio packet decoding function","Higher-level utilities for Ogg streams and files","Reads the three vorbis headers from an ogg stream as well …","Reading ogg/vorbis files or streams","","","","Constructs a new OggStreamReader from a given …","Constructs a new OggStreamReader from a given Ogg …","","Reads and decompresses an audio packet from the stream.","Reads and decompresses an audio packet from the stream …","Reads and decompresses an audio packet from the stream …","Returns the stream serial of the current stream","Returns the absolute granule position of the last read …","Seeks to the specified absolute granule position, with a …","Traits for sample formats","Trait for a packet of multiple samples","","","","A packet of multi-channel interleaved samples","","","Trait representing a single sample","","Errors that can occur during decoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,0,0,3,3,0,0,0,0,0,4,4,4,4,0,5,5,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,0,8,8,0,9,0,10,10,10,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,8,1,1,1,4,10,10,10,3,1,1,3,3,4,1,3,4,10,1,4,10,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["headerreaderror",4],["identheader",3],["result",4]]],null,null,null,[[],[["commentheader",3],["result",4],["headerreaderror",4]]],null,[[["u8",15]],[["result",4],["setupheader",3],["headerreaderror",4]]],null,null,null,null,null,null,null,[[]],[[],["bool",15]],[[["setupheader",3],["identheader",3]],[["usize",15],["result",4],["audioreaderror",4]]],[[["previouswindowright",3],["setupheader",3],["identheader",3]],[["result",4],["audioreaderror",4],["samples",8]]],[[["previouswindowright",3],["setupheader",3],["identheader",3]],[["vec",3],["result",4],["audioreaderror",4]]],null,[[["packetreader",3]],[["vorbiserror",4],["result",4]]],null,null,null,null,[[],[["result",4],["vorbiserror",4]]],[[["packetreader",3]],[["result",4],["vorbiserror",4]]],[[],["packetreader",3]],[[],[["result",4],["vorbiserror",4],["option",4]]],[[],[["option",4],["result",4],["vorbiserror",4]]],[[],[["option",4],["vorbiserror",4],["result",4]]],[[],["u32",15]],[[],[["option",4],["u64",15]]],[[["u64",15]],[["result",4],["vorbiserror",4]]],null,null,[[],["usize",15]],[[["usize",15]]],[[["vec",3],["vec",3]]],null,null,null,null,[[["f32",15]]],null,null,null,null,[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["usize",15]],[[["usize",15]]],[[["vec",3],["vec",3]]],[[],["headerreaderror",4]],[[["error",3]],["headerreaderror",4]],[[["fromutf8error",3]],["headerreaderror",4]],[[],["audioreaderror",4]],[[["audioreaderror",4]],["vorbiserror",4]],[[["headerreaderror",4]],["vorbiserror",4]],[[["oggreaderror",4]],["vorbiserror",4]],[[],["commentheader",3]],[[["headerreaderror",4]],["bool",15]],[[["headerreaderror",4]],["bool",15]],[[["commentheader",3]],["bool",15]],[[["commentheader",3]],["bool",15]],[[["audioreaderror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]]],"p":[[4,"HeaderReadError"],[3,"IdentHeader"],[3,"CommentHeader"],[4,"AudioReadError"],[3,"PreviousWindowRight"],[3,"OggStreamReader"],[8,"Samples"],[3,"InterleavedSamples"],[8,"Sample"],[4,"VorbisError"],[3,"SetupHeader"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,6,3,12,12,12,12,3,12,12,3,12,12,3,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,3,12,12,3,12,12,12,3,12,12,12,12,3,12,12,3,12,3,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,6,6,6,6,6,6,4,3,12,3,12,12,3,12,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,3,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,3,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,3,12,12,3,12,12,3,12,3,12,12,12,12,12,12,3,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,3,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,3,3,12,12,12,12,3,3,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,3,12,12,3,12,12,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,3,3,3,12,12,12,3,12,12,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,3,12,12,3,12,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,19,12,12,3,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,3,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,3,12,3,12,12,12,12,3,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,3,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,3,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,17,17,17,6,6,6,6,6,6,6,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,3,3,12,12,3,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,3,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,3,3,3,3,3,12,12,12,12,12,12,12,3,3,3,3,12,12,12,3,12,12,12,12,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","isblank","tolower","toupper","qsort","bsearch","fopen","freopen","fmemopen","open_memstream","fflush","fclose","remove","rename","tmpfile","setvbuf","setbuf","getchar","putchar","fgetc","fgets","fputc","fputs","puts","ungetc","fread","fwrite","fseek","ftell","rewind","fgetpos","fsetpos","feof","ferror","clearerr","perror","atoi","strtod","strtol","strtoul","calloc","malloc","realloc","free","abort","exit","_exit","atexit","system","getenv","strcpy","strncpy","strcat","strncat","strcmp","strncmp","strcoll","strchr","strrchr","strspn","strcspn","strdup","strndup","strpbrk","strstr","strcasecmp","strncasecmp","strlen","strnlen","strerror","strtok","strxfrm","strsignal","wcslen","wcstombs","memchr","wmemchr","memcmp","memcpy","memmove","memset","getpwnam","getpwuid","fprintf","printf","snprintf","sprintf","fscanf","scanf","sscanf","getchar_unlocked","putchar_unlocked","socket","connect","listen","accept","getpeername","getsockname","setsockopt","socketpair","sendto","shutdown","chmod","fchmod","fstat","mkdir","stat","pclose","fdopen","fileno","open","creat","fcntl","opendir","readdir","closedir","rewinddir","fchmodat","fchown","fchownat","fstatat","linkat","renameat","symlinkat","unlinkat","access","alarm","chdir","fchdir","chown","lchown","close","dup","dup2","execl","execle","execlp","execv","execve","execvp","fork","fpathconf","getcwd","getegid","geteuid","getgid","getgroups","getlogin","getopt","getpgid","getpgrp","getpid","getppid","getuid","isatty","link","lseek","pathconf","pipe","posix_memalign","read","rmdir","seteuid","setegid","setgid","setpgid","setsid","setuid","sleep","nanosleep","tcgetpgrp","tcsetpgrp","ttyname","ttyname_r","unlink","wait","waitpid","write","pread","pwrite","umask","utime","kill","killpg","mlock","munlock","mlockall","munlockall","mmap","munmap","if_nametoindex","if_indextoname","lstat","fsync","setenv","unsetenv","symlink","ftruncate","signal","getrusage","realpath","flock","times","pthread_self","pthread_join","pthread_exit","pthread_attr_init","pthread_attr_destroy","pthread_attr_setstacksize","pthread_attr_setdetachstate","pthread_detach","sched_yield","pthread_key_create","pthread_key_delete","pthread_getspecific","pthread_setspecific","pthread_mutex_init","pthread_mutex_destroy","pthread_mutex_lock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_init","pthread_mutexattr_destroy","pthread_mutexattr_settype","pthread_cond_init","pthread_cond_wait","pthread_cond_timedwait","pthread_cond_signal","pthread_cond_broadcast","pthread_cond_destroy","pthread_condattr_init","pthread_condattr_destroy","pthread_rwlock_init","pthread_rwlock_destroy","pthread_rwlock_rdlock","pthread_rwlock_tryrdlock","pthread_rwlock_wrlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlockattr_init","pthread_rwlockattr_destroy","getsockopt","raise","sigaction","utimes","dlopen","dlerror","dlsym","dlclose","dladdr","getaddrinfo","freeaddrinfo","gai_strerror","res_init","gmtime_r","localtime_r","mktime","time","gmtime","localtime","difftime","timegm","mknod","gethostname","endservent","getservbyname","getservbyport","getservent","setservent","getprotobyname","getprotobynumber","chroot","usleep","send","recv","putenv","poll","select","setlocale","localeconv","sem_wait","sem_trywait","sem_post","statvfs","fstatvfs","readlink","sigemptyset","sigaddset","sigfillset","sigdelset","sigismember","sigprocmask","sigpending","sysconf","mkfifo","pselect","fseeko","ftello","tcdrain","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","tcgetattr","tcsetattr","tcflow","tcflush","tcgetsid","tcsendbreak","mkstemp","mkdtemp","tmpnam","openlog","closelog","setlogmask","syslog","nice","grantpt","posix_openpt","ptsname","unlockpt","strcasestr","getline","lockf","open_wmemstream","getsid","truncate","pause","readlinkat","mkdirat","openat","fdopendir","readdir_r","cfmakeraw","cfsetspeed","sem_destroy","sem_init","fdatasync","mincore","clock_getres","clock_gettime","clock_settime","clock_getcpuclockid","dirfd","pthread_getattr_np","pthread_attr_getstack","memalign","setgroups","pipe2","statfs","statfs64","fstatfs","fstatfs64","statvfs64","fstatvfs64","memrchr","posix_fadvise","posix_fadvise64","futimens","utimensat","duplocale","freelocale","newlocale","uselocale","creat64","fstat64","fstatat64","ftruncate64","lseek64","lstat64","mmap64","open64","openat64","pread64","pwrite64","readdir64","readdir64_r","stat64","truncate64","mknodat","pthread_condattr_getclock","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_mutexattr_setpshared","pthread_rwlockattr_getpshared","pthread_rwlockattr_setpshared","ptsname_r","clearenv","waitid","setreuid","setregid","getresuid","getresgid","acct","brk","sbrk","vfork","setresgid","setresuid","wait4","login_tty","execvpe","fexecve","getifaddrs","freeifaddrs","bind","writev","readv","sendmsg","recvmsg","uname","preadv64","pwritev64","forkpty","openpty","aio_read","aio_write","aio_fsync","aio_error","aio_return","aio_suspend","aio_cancel","lio_listio","pwritev","preadv","getnameinfo","getloadavg","process_vm_readv","process_vm_writev","futimes","strerror_r","abs","atof","labs","rand","srand","lutimes","setpwent","endpwent","getpwent","setgrent","endgrent","getgrent","setspent","endspent","getspent","getspnam","getspnam_r","shm_open","shmget","shmat","shmdt","shmctl","ftok","semget","semop","semctl","msgctl","msgget","msgrcv","msgsnd","mprotect","__errno_location","fopen64","freopen64","tmpfile64","fgetpos64","fsetpos64","fseeko64","ftello64","fallocate","fallocate64","posix_fallocate","posix_fallocate64","readahead","getxattr","lgetxattr","fgetxattr","setxattr","lsetxattr","fsetxattr","listxattr","llistxattr","flistxattr","removexattr","lremovexattr","fremovexattr","signalfd","timerfd_create","timerfd_gettime","timerfd_settime","quotactl","mq_open","mq_close","mq_unlink","mq_receive","mq_timedreceive","mq_send","mq_timedsend","mq_getattr","mq_setattr","epoll_pwait","dup3","mkostemp","mkostemps","sigtimedwait","sigwaitinfo","nl_langinfo_l","accept4","pthread_setschedprio","reboot","setfsgid","setfsuid","mkfifoat","if_nameindex","if_freenameindex","sync_file_range","mremap","glob","globfree","posix_madvise","shm_unlink","seekdir","telldir","madvise","msync","remap_file_pages","recvfrom","mkstemps","nl_langinfo","getdomainname","setdomainname","vhangup","sync","syscall","sched_getaffinity","sched_setaffinity","epoll_create","epoll_create1","epoll_wait","epoll_ctl","pthread_getschedparam","unshare","umount","sched_get_priority_max","tee","settimeofday","splice","eventfd","sched_rr_get_interval","sem_timedwait","sem_getvalue","sched_setparam","setns","swapoff","vmsplice","mount","personality","prctl","sched_getparam","ppoll","pthread_mutex_timedlock","clone","sched_getscheduler","clock_nanosleep","pthread_attr_getguardsize","sethostname","sched_get_priority_min","pthread_condattr_getpshared","sysinfo","umount2","pthread_setschedparam","swapon","sched_setscheduler","sendfile","sendfile64","sigsuspend","getgrgid_r","sigaltstack","sem_close","getdtablesize","getgrnam_r","initgroups","pthread_sigmask","sem_open","getgrnam","pthread_cancel","pthread_kill","sem_unlink","daemon","getpwnam_r","getpwuid_r","sigwait","pthread_atfork","getgrgid","getgrouplist","pthread_mutexattr_getpshared","popen","faccessat","pthread_create","dl_iterate_phdr","setmntent","getmntent","addmntent","endmntent","hasmntopt","posix_spawn","posix_spawnp","posix_spawnattr_init","posix_spawnattr_destroy","posix_spawnattr_getsigdefault","posix_spawnattr_setsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_setsigmask","posix_spawnattr_getflags","posix_spawnattr_setflags","posix_spawnattr_getpgroup","posix_spawnattr_setpgroup","posix_spawnattr_getschedpolicy","posix_spawnattr_setschedpolicy","posix_spawnattr_getschedparam","posix_spawnattr_setschedparam","posix_spawn_file_actions_init","posix_spawn_file_actions_destroy","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","fread_unlocked","inotify_rm_watch","inotify_init","inotify_init1","inotify_add_watch","fanotify_init","regcomp","regexec","regerror","regfree","iconv_open","iconv","iconv_close","gettid","fgetspent_r","sgetspent_r","getspent_r","qsort_r","sendmmsg","recvmmsg","getrlimit64","setrlimit64","getrlimit","setrlimit","prlimit","prlimit64","utmpname","utmpxname","getutxent","getutxid","getutxline","pututxline","setutxent","endutxent","getpt","mallopt","gettimeofday","statx","getrandom","memmem","getauxval","adjtimex","ntp_adjtime","ntp_gettime","copy_file_range","fanotify_mark","preadv2","pwritev2","renameat2","ioctl","backtrace","glob64","globfree64","ptrace","pthread_attr_getaffinity_np","pthread_attr_setaffinity_np","getpriority","setpriority","pthread_getaffinity_np","pthread_setaffinity_np","pthread_rwlockattr_getkind_np","pthread_rwlockattr_setkind_np","sched_getcpu","mallinfo","malloc_usable_size","getpwent_r","getgrent_r","pthread_getname_np","pthread_setname_np","dlmopen","dlinfo","getcontext","setcontext","makecontext","swapcontext","iopl","ioperm","sysctl","int8_t","int16_t","int32_t","int64_t","uint8_t","uint16_t","uint32_t","uint64_t","c_schar","c_uchar","c_short","c_ushort","c_int","c_uint","c_float","c_double","c_longlong","c_ulonglong","intmax_t","uintmax_t","size_t","ptrdiff_t","intptr_t","uintptr_t","ssize_t","pid_t","uid_t","gid_t","in_addr_t","in_port_t","sighandler_t","cc_t","DIR","locale_t","group","gr_name","gr_passwd","gr_gid","gr_mem","utimbuf","actime","modtime","timeval","tv_sec","tv_usec","timespec","tv_sec","tv_nsec","rlimit","rlim_cur","rlim_max","rusage","ru_utime","ru_stime","ru_maxrss","ru_ixrss","ru_idrss","ru_isrss","ru_minflt","ru_majflt","ru_nswap","ru_inblock","ru_oublock","ru_msgsnd","ru_msgrcv","ru_nsignals","ru_nvcsw","ru_nivcsw","ipv6_mreq","ipv6mr_multiaddr","ipv6mr_interface","hostent","h_name","h_aliases","h_addrtype","h_length","h_addr_list","iovec","iov_base","iov_len","pollfd","fd","events","revents","winsize","ws_row","ws_col","ws_xpixel","ws_ypixel","linger","l_onoff","l_linger","sigval","sival_ptr","itimerval","it_interval","it_value","tms","tms_utime","tms_stime","tms_cutime","tms_cstime","servent","s_name","s_aliases","s_port","s_proto","protoent","p_name","p_aliases","p_proto","INT_MIN","INT_MAX","SIG_DFL","SIG_IGN","SIG_ERR","DT_UNKNOWN","DT_FIFO","DT_CHR","DT_DIR","DT_BLK","DT_REG","DT_LNK","DT_SOCK","FD_CLOEXEC","USRQUOTA","GRPQUOTA","SIGIOT","S_ISUID","S_ISGID","S_ISVTX","IF_NAMESIZE","IFNAMSIZ","LOG_EMERG","LOG_ALERT","LOG_CRIT","LOG_ERR","LOG_WARNING","LOG_NOTICE","LOG_INFO","LOG_DEBUG","LOG_KERN","LOG_USER","LOG_MAIL","LOG_DAEMON","LOG_AUTH","LOG_SYSLOG","LOG_LPR","LOG_NEWS","LOG_UUCP","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_PID","LOG_CONS","LOG_ODELAY","LOG_NDELAY","LOG_NOWAIT","LOG_PRIMASK","LOG_FACMASK","PRIO_MIN","PRIO_MAX","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_TCP","IPPROTO_UDP","IPPROTO_IP","IPPROTO_IPV6","INADDR_LOOPBACK","INADDR_ANY","INADDR_BROADCAST","INADDR_NONE","ARPOP_REQUEST","ARPOP_REPLY","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","FILE","fpos_t","sa_family_t","speed_t","tcflag_t","clockid_t","key_t","id_t","timezone","in_addr","s_addr","ip_mreq","imr_multiaddr","imr_interface","ip_mreq_source","imr_multiaddr","imr_interface","imr_sourceaddr","sockaddr","sa_family","sa_data","sockaddr_in","sin_family","sin_port","sin_addr","sin_zero","sockaddr_in6","sin6_family","sin6_port","sin6_flowinfo","sin6_addr","sin6_scope_id","addrinfo","ai_flags","ai_family","ai_socktype","ai_protocol","ai_addrlen","ai_addr","ai_canonname","ai_next","sockaddr_ll","sll_family","sll_protocol","sll_ifindex","sll_hatype","sll_pkttype","sll_halen","sll_addr","fd_set","tm","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","tm_zone","sched_param","sched_priority","Dl_info","dli_fname","dli_fbase","dli_sname","dli_saddr","lconv","decimal_point","thousands_sep","grouping","int_curr_symbol","currency_symbol","mon_decimal_point","mon_thousands_sep","mon_grouping","positive_sign","negative_sign","int_frac_digits","frac_digits","p_cs_precedes","p_sep_by_space","n_cs_precedes","n_sep_by_space","p_sign_posn","n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_n_cs_precedes","int_n_sep_by_space","int_p_sign_posn","int_n_sign_posn","in_pktinfo","ipi_ifindex","ipi_spec_dst","ipi_addr","ifaddrs","ifa_next","ifa_name","ifa_flags","ifa_addr","ifa_netmask","ifa_ifu","ifa_data","in6_rtmsg","arpreq","arp_pa","arp_ha","arp_flags","arp_netmask","arp_dev","arpreq_old","arp_pa","arp_ha","arp_flags","arp_netmask","arphdr","ar_hrd","ar_pro","ar_hln","ar_pln","ar_op","mmsghdr","msg_hdr","msg_len","epoll_event","events","u64","sockaddr_un","sun_family","sun_path","sockaddr_storage","ss_family","utsname","sysname","nodename","release","version","machine","domainname","sigevent","sigev_value","sigev_signo","sigev_notify","sigev_notify_thread_id","EXIT_FAILURE","EXIT_SUCCESS","RAND_MAX","EOF","SEEK_SET","SEEK_CUR","SEEK_END","_IOFBF","_IONBF","_IOLBF","F_DUPFD","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_SETLEASE","F_GETLEASE","F_NOTIFY","F_CANCELLK","F_DUPFD_CLOEXEC","F_SETPIPE_SZ","F_GETPIPE_SZ","F_ADD_SEALS","F_GET_SEALS","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","SIGTRAP","PTHREAD_CREATE_JOINABLE","PTHREAD_CREATE_DETACHED","CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID","CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM","CLOCK_BOOTTIME_ALARM","CLOCK_TAI","TIMER_ABSTIME","RUSAGE_SELF","O_RDONLY","O_WRONLY","O_RDWR","SOCK_CLOEXEC","S_IFIFO","S_IFCHR","S_IFBLK","S_IFDIR","S_IFREG","S_IFLNK","S_IFSOCK","S_IFMT","S_IRWXU","S_IXUSR","S_IWUSR","S_IRUSR","S_IRWXG","S_IXGRP","S_IWGRP","S_IRGRP","S_IRWXO","S_IXOTH","S_IWOTH","S_IROTH","F_OK","R_OK","W_OK","X_OK","STDIN_FILENO","STDOUT_FILENO","STDERR_FILENO","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGABRT","SIGFPE","SIGKILL","SIGSEGV","SIGPIPE","SIGALRM","SIGTERM","PROT_NONE","PROT_READ","PROT_WRITE","PROT_EXEC","LC_CTYPE","LC_NUMERIC","LC_TIME","LC_COLLATE","LC_MONETARY","LC_MESSAGES","LC_ALL","LC_CTYPE_MASK","LC_NUMERIC_MASK","LC_TIME_MASK","LC_COLLATE_MASK","LC_MONETARY_MASK","LC_MESSAGES_MASK","MAP_FILE","MAP_SHARED","MAP_PRIVATE","MAP_FIXED","MAP_FAILED","MS_ASYNC","MS_INVALIDATE","MS_SYNC","MS_RDONLY","MS_NOSUID","MS_NODEV","MS_NOEXEC","MS_SYNCHRONOUS","MS_REMOUNT","MS_MANDLOCK","MS_DIRSYNC","MS_NOATIME","MS_NODIRATIME","MS_BIND","MS_MOVE","MS_REC","MS_SILENT","MS_POSIXACL","MS_UNBINDABLE","MS_PRIVATE","MS_SLAVE","MS_SHARED","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_ACTIVE","MS_MGC_VAL","MS_MGC_MSK","SCM_RIGHTS","SCM_CREDENTIALS","PROT_GROWSDOWN","PROT_GROWSUP","MAP_TYPE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_FREE","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_HWPOISON","IFF_UP","IFF_BROADCAST","IFF_DEBUG","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_NOARP","IFF_PROMISC","IFF_ALLMULTI","IFF_MASTER","IFF_SLAVE","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","SOL_IP","SOL_TCP","SOL_UDP","SOL_IPV6","SOL_ICMPV6","SOL_RAW","SOL_DECNET","SOL_X25","SOL_PACKET","SOL_ATM","SOL_AAL","SOL_IRDA","SOL_NETBEUI","SOL_LLC","SOL_DCCP","SOL_NETLINK","SOL_TIPC","SOL_BLUETOOTH","SOL_ALG","AF_UNSPEC","AF_UNIX","AF_LOCAL","AF_INET","AF_AX25","AF_IPX","AF_APPLETALK","AF_NETROM","AF_BRIDGE","AF_ATMPVC","AF_X25","AF_INET6","AF_ROSE","AF_DECnet","AF_NETBEUI","AF_SECURITY","AF_KEY","AF_NETLINK","AF_ROUTE","AF_PACKET","AF_ASH","AF_ECONET","AF_ATMSVC","AF_RDS","AF_SNA","AF_IRDA","AF_PPPOX","AF_WANPIPE","AF_LLC","AF_CAN","AF_TIPC","AF_BLUETOOTH","AF_IUCV","AF_RXRPC","AF_ISDN","AF_PHONET","AF_IEEE802154","AF_CAIF","AF_ALG","PF_UNSPEC","PF_UNIX","PF_LOCAL","PF_INET","PF_AX25","PF_IPX","PF_APPLETALK","PF_NETROM","PF_BRIDGE","PF_ATMPVC","PF_X25","PF_INET6","PF_ROSE","PF_DECnet","PF_NETBEUI","PF_SECURITY","PF_KEY","PF_NETLINK","PF_ROUTE","PF_PACKET","PF_ASH","PF_ECONET","PF_ATMSVC","PF_RDS","PF_SNA","PF_IRDA","PF_PPPOX","PF_WANPIPE","PF_LLC","PF_CAN","PF_TIPC","PF_BLUETOOTH","PF_IUCV","PF_RXRPC","PF_ISDN","PF_PHONET","PF_IEEE802154","PF_CAIF","PF_ALG","SOMAXCONN","MSG_OOB","MSG_PEEK","MSG_DONTROUTE","MSG_CTRUNC","MSG_TRUNC","MSG_DONTWAIT","MSG_EOR","MSG_WAITALL","MSG_FIN","MSG_SYN","MSG_CONFIRM","MSG_RST","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_MORE","MSG_WAITFORONE","MSG_FASTOPEN","MSG_CMSG_CLOEXEC","SCM_TIMESTAMP","SOCK_RAW","SOCK_RDM","IP_TOS","IP_TTL","IP_HDRINCL","IP_OPTIONS","IP_ROUTER_ALERT","IP_RECVOPTS","IP_RETOPTS","IP_PKTINFO","IP_PKTOPTIONS","IP_MTU_DISCOVER","IP_RECVERR","IP_RECVTTL","IP_RECVTOS","IP_MTU","IP_FREEBIND","IP_IPSEC_POLICY","IP_XFRM_POLICY","IP_PASSSEC","IP_TRANSPARENT","IP_ORIGDSTADDR","IP_RECVORIGDSTADDR","IP_MINTTL","IP_NODEFRAG","IP_CHECKSUM","IP_BIND_ADDRESS_NO_PORT","IP_MULTICAST_IF","IP_MULTICAST_TTL","IP_MULTICAST_LOOP","IP_ADD_MEMBERSHIP","IP_DROP_MEMBERSHIP","IP_UNBLOCK_SOURCE","IP_BLOCK_SOURCE","IP_ADD_SOURCE_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_MSFILTER","IP_MULTICAST_ALL","IP_UNICAST_IF","IP_DEFAULT_MULTICAST_TTL","IP_DEFAULT_MULTICAST_LOOP","IP_PMTUDISC_DONT","IP_PMTUDISC_WANT","IP_PMTUDISC_DO","IP_PMTUDISC_PROBE","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IPPROTO_HOPOPTS","IPPROTO_IGMP","IPPROTO_IPIP","IPPROTO_EGP","IPPROTO_PUP","IPPROTO_IDP","IPPROTO_TP","IPPROTO_DCCP","IPPROTO_ROUTING","IPPROTO_FRAGMENT","IPPROTO_RSVP","IPPROTO_GRE","IPPROTO_ESP","IPPROTO_AH","IPPROTO_NONE","IPPROTO_DSTOPTS","IPPROTO_MTP","IPPROTO_ENCAP","IPPROTO_PIM","IPPROTO_COMP","IPPROTO_SCTP","IPPROTO_MH","IPPROTO_UDPLITE","IPPROTO_RAW","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_BLOCK_SOURCE","MCAST_UNBLOCK_SOURCE","MCAST_LEAVE_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","IPV6_ADDRFORM","IPV6_2292PKTINFO","IPV6_2292HOPOPTS","IPV6_2292DSTOPTS","IPV6_2292RTHDR","IPV6_2292PKTOPTIONS","IPV6_CHECKSUM","IPV6_2292HOPLIMIT","IPV6_NEXTHOP","IPV6_AUTHHDR","IPV6_UNICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_LOOP","IPV6_ADD_MEMBERSHIP","IPV6_DROP_MEMBERSHIP","IPV6_ROUTER_ALERT","IPV6_MTU_DISCOVER","IPV6_MTU","IPV6_RECVERR","IPV6_V6ONLY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_IPSEC_POLICY","IPV6_XFRM_POLICY","IPV6_RECVPKTINFO","IPV6_PKTINFO","IPV6_RECVHOPLIMIT","IPV6_HOPLIMIT","IPV6_RECVHOPOPTS","IPV6_HOPOPTS","IPV6_RTHDRDSTOPTS","IPV6_RECVRTHDR","IPV6_RTHDR","IPV6_RECVDSTOPTS","IPV6_DSTOPTS","IPV6_RECVPATHMTU","IPV6_PATHMTU","IPV6_DONTFRAG","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_AUTOFLOWLABEL","IPV6_ADDR_PREFERENCES","IPV6_MINHOPCOUNT","IPV6_ORIGDSTADDR","IPV6_RECVORIGDSTADDR","IPV6_TRANSPARENT","IPV6_UNICAST_IF","IPV6_PREFER_SRC_TMP","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_NONCGA","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_WANT","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_PROBE","TCP_NODELAY","TCP_MAXSEG","TCP_CORK","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_KEEPCNT","TCP_SYNCNT","TCP_LINGER2","TCP_DEFER_ACCEPT","TCP_WINDOW_CLAMP","TCP_INFO","TCP_QUICKACK","TCP_CONGESTION","SO_DEBUG","SHUT_RD","SHUT_WR","SHUT_RDWR","LOCK_SH","LOCK_EX","LOCK_NB","LOCK_UN","SS_ONSTACK","SS_DISABLE","PATH_MAX","UIO_MAXIOV","FD_SETSIZE","EPOLLIN","EPOLLPRI","EPOLLOUT","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLMSG","EPOLLERR","EPOLLHUP","EPOLLET","EPOLL_CTL_ADD","EPOLL_CTL_MOD","EPOLL_CTL_DEL","MNT_DETACH","MNT_EXPIRE","Q_GETFMT","Q_GETINFO","Q_SETINFO","QIF_BLIMITS","QIF_SPACE","QIF_ILIMITS","QIF_INODES","QIF_BTIME","QIF_ITIME","QIF_LIMITS","QIF_USAGE","QIF_TIMES","QIF_ALL","MNT_FORCE","Q_SYNC","Q_QUOTAON","Q_QUOTAOFF","Q_GETQUOTA","Q_SETQUOTA","TCIOFF","TCION","TCOOFF","TCOON","TCIFLUSH","TCOFLUSH","TCIOFLUSH","NL0","NL1","TAB0","CR0","FF0","BS0","VT0","VERASE","VKILL","VINTR","VQUIT","VLNEXT","IGNBRK","BRKINT","IGNPAR","PARMRK","INPCK","ISTRIP","INLCR","IGNCR","ICRNL","IXANY","IMAXBEL","OPOST","CS5","CRTSCTS","ECHO","OCRNL","ONOCR","ONLRET","OFILL","OFDEL","CLONE_VM","CLONE_FS","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","CLONE_IO","WNOHANG","WUNTRACED","WSTOPPED","WEXITED","WCONTINUED","WNOWAIT","MMAP_PAGE_ZERO","ADDR_LIMIT_32BIT","SHORT_INODE","WHOLE_SECONDS","STICKY_TIMEOUTS","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","__WNOTHREAD","__WALL","__WCLONE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","RTLD_LOCAL","RTLD_LAZY","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","AT_FDCWD","AT_SYMLINK_NOFOLLOW","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","LOG_CRON","LOG_AUTHPRIV","LOG_FTP","LOG_PERROR","PIPE_BUF","SI_LOAD_SHIFT","CLD_EXITED","CLD_KILLED","CLD_DUMPED","CLD_TRAPPED","CLD_STOPPED","CLD_CONTINUED","SIGEV_SIGNAL","SIGEV_NONE","SIGEV_THREAD","P_ALL","P_PID","P_PGID","P_PIDFD","UTIME_OMIT","UTIME_NOW","POLLIN","POLLPRI","POLLOUT","POLLERR","POLLHUP","POLLNVAL","POLLRDNORM","POLLRDBAND","IPTOS_LOWDELAY","IPTOS_THROUGHPUT","IPTOS_RELIABILITY","IPTOS_MINCOST","IPTOS_PREC_NETCONTROL","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_FLASH","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_ECN_MASK","IPTOS_ECN_ECT1","IPTOS_ECN_ECT0","IPTOS_ECN_CE","IPOPT_COPY","IPOPT_CLASS_MASK","IPOPT_NUMBER_MASK","IPOPT_CONTROL","IPOPT_RESERVED1","IPOPT_MEASUREMENT","IPOPT_RESERVED2","IPOPT_END","IPOPT_NOOP","IPOPT_SEC","IPOPT_LSRR","IPOPT_TIMESTAMP","IPOPT_RR","IPOPT_SID","IPOPT_SSRR","IPOPT_RA","IPVERSION","MAXTTL","IPDEFTTL","IPOPT_OPTVAL","IPOPT_OLEN","IPOPT_OFFSET","IPOPT_MINOFF","MAX_IPOPTLEN","IPOPT_NOP","IPOPT_EOL","IPOPT_TS","IPOPT_TS_TSONLY","IPOPT_TS_TSANDADDR","IPOPT_TS_PRESPEC","ARPOP_RREQUEST","ARPOP_RREPLY","ARPOP_InREQUEST","ARPOP_InREPLY","ARPOP_NAK","ATF_NETMASK","ATF_DONTPUB","ARPHRD_NETROM","ARPHRD_ETHER","ARPHRD_EETHER","ARPHRD_AX25","ARPHRD_PRONET","ARPHRD_CHAOS","ARPHRD_IEEE802","ARPHRD_ARCNET","ARPHRD_APPLETLK","ARPHRD_DLCI","ARPHRD_ATM","ARPHRD_METRICOM","ARPHRD_IEEE1394","ARPHRD_EUI64","ARPHRD_INFINIBAND","ARPHRD_SLIP","ARPHRD_CSLIP","ARPHRD_SLIP6","ARPHRD_CSLIP6","ARPHRD_RSRVD","ARPHRD_ADAPT","ARPHRD_ROSE","ARPHRD_X25","ARPHRD_HWX25","ARPHRD_PPP","ARPHRD_CISCO","ARPHRD_HDLC","ARPHRD_LAPB","ARPHRD_DDCMP","ARPHRD_RAWHDLC","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_FRAD","ARPHRD_SKIP","ARPHRD_LOOPBACK","ARPHRD_LOCALTLK","ARPHRD_FDDI","ARPHRD_BIF","ARPHRD_SIT","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_PIMREG","ARPHRD_HIPPI","ARPHRD_ASH","ARPHRD_ECONET","ARPHRD_IRDA","ARPHRD_FCPP","ARPHRD_FCAL","ARPHRD_FCPL","ARPHRD_FCFABRIC","ARPHRD_IEEE802_TR","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_VOID","ARPHRD_NONE","IPPROTO_BEETPH","IPPROTO_MPLS","IPV6_HDRINCL","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","CLONE_NEWCGROUP","ADDR_NO_RANDOMIZE","ADDR_COMPAT_LAYOUT","READ_IMPLIES_EXEC","ADDR_LIMIT_3GB","PTRACE_O_EXITKILL","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_MASK","CMSG_FIRSTHDR","CMSG_DATA","CMSG_SPACE","CMSG_LEN","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","WIFSTOPPED","WSTOPSIG","WIFCONTINUED","WIFSIGNALED","WTERMSIG","WIFEXITED","WEXITSTATUS","WCOREDUMP","W_EXITCODE","W_STOPCODE","QCMD","IPOPT_COPIED","IPOPT_CLASS","IPOPT_NUMBER","IPTOS_ECN","useconds_t","dev_t","socklen_t","mode_t","ino64_t","off64_t","blkcnt64_t","rlim64_t","mqd_t","nfds_t","nl_item","idtype_t","loff_t","pthread_key_t","__u8","__u16","__s16","__u32","__s32","Elf32_Half","Elf32_Word","Elf32_Off","Elf32_Addr","Elf64_Half","Elf64_Word","Elf64_Off","Elf64_Addr","Elf64_Xword","Elf64_Sxword","Elf32_Section","Elf64_Section","canid_t","can_err_mask_t","iconv_t","fpos64_t","rlimit64","rlim_cur","rlim_max","glob_t","gl_pathc","gl_pathv","gl_offs","gl_flags","passwd","pw_name","pw_passwd","pw_uid","pw_gid","pw_gecos","pw_dir","pw_shell","spwd","sp_namp","sp_pwdp","sp_lstchg","sp_min","sp_max","sp_warn","sp_inact","sp_expire","sp_flag","dqblk","dqb_bhardlimit","dqb_bsoftlimit","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_curinodes","dqb_btime","dqb_itime","dqb_valid","signalfd_siginfo","ssi_signo","ssi_errno","ssi_code","ssi_pid","ssi_uid","ssi_fd","ssi_tid","ssi_band","ssi_overrun","ssi_trapno","ssi_status","ssi_int","ssi_ptr","ssi_utime","ssi_stime","ssi_addr","ssi_addr_lsb","ssi_syscall","ssi_call_addr","ssi_arch","itimerspec","it_interval","it_value","fsid_t","packet_mreq","mr_ifindex","mr_type","mr_alen","mr_address","cpu_set_t","if_nameindex","if_index","if_name","msginfo","msgpool","msgmap","msgmax","msgmnb","msgmni","msgssz","msgtql","msgseg","sembuf","sem_num","sem_op","sem_flg","input_event","time","type_","code","value","input_id","bustype","vendor","product","version","input_absinfo","value","minimum","maximum","fuzz","flat","resolution","input_keymap_entry","flags","len","index","keycode","scancode","input_mask","type_","codes_size","codes_ptr","ff_replay","length","delay","ff_trigger","button","interval","ff_envelope","attack_length","attack_level","fade_length","fade_level","ff_constant_effect","level","envelope","ff_ramp_effect","start_level","end_level","envelope","ff_condition_effect","right_saturation","left_saturation","right_coeff","left_coeff","deadband","center","ff_periodic_effect","waveform","period","magnitude","offset","phase","envelope","custom_len","custom_data","ff_rumble_effect","strong_magnitude","weak_magnitude","ff_effect","type_","id","direction","trigger","replay","u","uinput_ff_upload","request_id","retval","effect","old","uinput_ff_erase","request_id","retval","effect_id","uinput_abs_setup","code","absinfo","dl_phdr_info","dlpi_addr","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_adds","dlpi_subs","dlpi_tls_modid","dlpi_tls_data","Elf32_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf64_Ehdr","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Elf32_Sym","st_name","st_value","st_size","st_info","st_other","st_shndx","Elf64_Sym","st_name","st_info","st_other","st_shndx","st_value","st_size","Elf32_Phdr","p_type","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_flags","p_align","Elf64_Phdr","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","Elf32_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","Elf64_Shdr","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","ucred","pid","uid","gid","mntent","mnt_fsname","mnt_dir","mnt_type","mnt_opts","mnt_freq","mnt_passno","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","cmd","version","reserved","in6_pktinfo","ipi6_addr","ipi6_ifindex","arpd_request","req","ip","dev","stamp","updated","ha","inotify_event","wd","mask","cookie","len","fanotify_response","fd","response","sockaddr_vm","svm_family","svm_reserved1","svm_port","svm_cid","svm_zero","regmatch_t","rm_so","rm_eo","sock_extended_err","ee_errno","ee_origin","ee_type","ee_code","ee_pad","ee_info","ee_data","__c_anonymous_sockaddr_can_tp","rx_id","tx_id","__c_anonymous_sockaddr_can_j1939","name","pgn","addr","can_filter","can_id","can_mask","sockaddr_nl","nl_family","nl_pid","nl_groups","dirent","d_ino","d_off","d_reclen","d_type","d_name","dirent64","d_ino","d_off","d_reclen","d_type","d_name","sockaddr_alg","salg_family","salg_type","salg_feat","salg_mask","salg_name","uinput_setup","id","name","ff_effects_max","uinput_user_dev","name","id","ff_effects_max","absmax","absmin","absfuzz","absflat","af_alg_iv","ivlen","iv","mq_attr","mq_flags","mq_maxmsg","mq_msgsize","mq_curmsgs","__c_anonymous_sockaddr_can_can_addr","tp","j1939","sockaddr_can","can_family","can_ifindex","can_addr","ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","ABMON_1","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABMON_10","ABMON_11","ABMON_12","MON_1","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MON_10","MON_11","MON_12","AM_STR","PM_STR","D_T_FMT","D_FMT","T_FMT","T_FMT_AMPM","ERA","ERA_D_FMT","ALT_DIGITS","ERA_D_T_FMT","ERA_T_FMT","CODESET","CRNCYSTR","RADIXCHAR","THOUSEP","YESEXPR","NOEXPR","YESSTR","NOSTR","RUSAGE_CHILDREN","L_tmpnam","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_CHOWN_RESTRICTED","_PC_NO_TRUNC","_PC_VDISABLE","_PC_SYNC_IO","_PC_ASYNC_IO","_PC_PRIO_IO","_PC_SOCK_MAXBUF","_PC_FILESIZEBITS","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_ALLOC_SIZE_MIN","_PC_SYMLINK_MAX","_PC_2_SYMLINKS","MS_NOUSER","_SC_ARG_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_NGROUPS_MAX","_SC_OPEN_MAX","_SC_STREAM_MAX","_SC_TZNAME_MAX","_SC_JOB_CONTROL","_SC_SAVED_IDS","_SC_REALTIME_SIGNALS","_SC_PRIORITY_SCHEDULING","_SC_TIMERS","_SC_ASYNCHRONOUS_IO","_SC_PRIORITIZED_IO","_SC_SYNCHRONIZED_IO","_SC_FSYNC","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_SEMAPHORES","_SC_SHARED_MEMORY_OBJECTS","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_DELAYTIMER_MAX","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_VERSION","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_RTSIG_MAX","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SIGQUEUE_MAX","_SC_TIMER_MAX","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_COLL_WEIGHTS_MAX","_SC_EXPR_NEST_MAX","_SC_LINE_MAX","_SC_RE_DUP_MAX","_SC_2_VERSION","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_SW_DEV","_SC_2_LOCALEDEF","_SC_UIO_MAXIOV","_SC_IOV_MAX","_SC_THREADS","_SC_THREAD_SAFE_FUNCTIONS","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_LOGIN_NAME_MAX","_SC_TTY_NAME_MAX","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_PHYS_PAGES","_SC_AVPHYS_PAGES","_SC_ATEXIT_MAX","_SC_PASS_MAX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_UNIX","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_SHM","_SC_2_CHAR_TERM","_SC_2_UPE","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","_SC_NZERO","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_ADVISORY_INFO","_SC_BARRIERS","_SC_CLOCK_SELECTION","_SC_CPUTIME","_SC_THREAD_CPUTIME","_SC_MONOTONIC_CLOCK","_SC_READER_WRITER_LOCKS","_SC_SPIN_LOCKS","_SC_REGEXP","_SC_SHELL","_SC_SPAWN","_SC_SPORADIC_SERVER","_SC_THREAD_SPORADIC_SERVER","_SC_TIMEOUTS","_SC_TYPED_MEMORY_OBJECTS","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_SYMLOOP_MAX","_SC_STREAMS","_SC_2_PBS_CHECKPOINT","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_HOST_NAME_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_IPV6","_SC_RAW_SOCKETS","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_SS_REPL_MAX","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_XOPEN_STREAMS","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","RLIM_SAVED_MAX","RLIM_SAVED_CUR","AT_NULL","AT_IGNORE","AT_EXECFD","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PAGESZ","AT_BASE","AT_FLAGS","AT_ENTRY","AT_NOTELF","AT_UID","AT_EUID","AT_GID","AT_EGID","AT_PLATFORM","AT_HWCAP","AT_CLKTCK","AT_SECURE","AT_BASE_PLATFORM","AT_RANDOM","AT_HWCAP2","AT_EXECFN","GLOB_ERR","GLOB_MARK","GLOB_NOSORT","GLOB_DOOFFS","GLOB_NOCHECK","GLOB_APPEND","GLOB_NOESCAPE","GLOB_NOSPACE","GLOB_ABORTED","GLOB_NOMATCH","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","S_IEXEC","S_IWRITE","S_IREAD","F_LOCK","F_TEST","F_TLOCK","F_ULOCK","F_SEAL_FUTURE_WRITE","IFF_LOWER_UP","IFF_DORMANT","IFF_ECHO","IFA_UNSPEC","IFA_ADDRESS","IFA_LOCAL","IFA_LABEL","IFA_BROADCAST","IFA_ANYCAST","IFA_CACHEINFO","IFA_MULTICAST","IFA_F_SECONDARY","IFA_F_TEMPORARY","IFA_F_NODAD","IFA_F_OPTIMISTIC","IFA_F_DADFAILED","IFA_F_HOMEADDRESS","IFA_F_DEPRECATED","IFA_F_TENTATIVE","IFA_F_PERMANENT","IFLA_UNSPEC","IFLA_ADDRESS","IFLA_BROADCAST","IFLA_IFNAME","IFLA_MTU","IFLA_LINK","IFLA_QDISC","IFLA_STATS","IFLA_COST","IFLA_PRIORITY","IFLA_MASTER","IFLA_WIRELESS","IFLA_PROTINFO","IFLA_TXQLEN","IFLA_MAP","IFLA_WEIGHT","IFLA_OPERSTATE","IFLA_LINKMODE","IFLA_LINKINFO","IFLA_NET_NS_PID","IFLA_IFALIAS","IFLA_NUM_VF","IFLA_VFINFO_LIST","IFLA_STATS64","IFLA_VF_PORTS","IFLA_PORT_SELF","IFLA_AF_SPEC","IFLA_GROUP","IFLA_NET_NS_FD","IFLA_EXT_MASK","IFLA_PROMISCUITY","IFLA_NUM_TX_QUEUES","IFLA_NUM_RX_QUEUES","IFLA_CARRIER","IFLA_PHYS_PORT_ID","IFLA_CARRIER_CHANGES","IFLA_PHYS_SWITCH_ID","IFLA_LINK_NETNSID","IFLA_PHYS_PORT_NAME","IFLA_PROTO_DOWN","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_PAD","IFLA_XDP","IFLA_EVENT","IFLA_NEW_NETNSID","IFLA_IF_NETNSID","IFLA_TARGET_NETNSID","IFLA_CARRIER_UP_COUNT","IFLA_CARRIER_DOWN_COUNT","IFLA_NEW_IFINDEX","IFLA_MIN_MTU","IFLA_MAX_MTU","IFLA_PROP_LIST","IFLA_ALT_IFNAME","IFLA_PERM_ADDRESS","IFLA_PROTO_DOWN_REASON","IFLA_INFO_UNSPEC","IFLA_INFO_KIND","IFLA_INFO_DATA","IFLA_INFO_XSTATS","IFLA_INFO_SLAVE_KIND","IFLA_INFO_SLAVE_DATA","IFF_TUN","IFF_TAP","IFF_NO_PI","TUN_READQ_SIZE","TUN_TUN_DEV","TUN_TAP_DEV","TUN_TYPE_MASK","IFF_ONE_QUEUE","IFF_VNET_HDR","IFF_TUN_EXCL","IFF_MULTI_QUEUE","IFF_ATTACH_QUEUE","IFF_DETACH_QUEUE","IFF_PERSIST","IFF_NOFILTER","SEEK_DATA","SEEK_HOLE","ST_RDONLY","ST_NOSUID","ST_NODEV","ST_NOEXEC","ST_SYNCHRONOUS","ST_MANDLOCK","ST_WRITE","ST_APPEND","ST_IMMUTABLE","ST_NOATIME","ST_NODIRATIME","RTLD_NEXT","RTLD_DEFAULT","RTLD_NODELETE","RTLD_NOW","AT_EACCESS","TCP_MD5SIG","PTHREAD_MUTEX_INITIALIZER","PTHREAD_COND_INITIALIZER","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_DEFAULT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","__SIZEOF_PTHREAD_COND_T","RENAME_NOREPLACE","RENAME_EXCHANGE","RENAME_WHITEOUT","SCHED_OTHER","SCHED_FIFO","SCHED_RR","SCHED_BATCH","SCHED_IDLE","SCHED_RESET_ON_FORK","IPPROTO_MPTCP","IPPROTO_MAX","IPC_PRIVATE","IPC_CREAT","IPC_EXCL","IPC_NOWAIT","IPC_RMID","IPC_SET","IPC_STAT","IPC_INFO","MSG_STAT","MSG_INFO","MSG_NOERROR","MSG_EXCEPT","SHM_R","SHM_W","SHM_RDONLY","SHM_RND","SHM_REMAP","SHM_LOCK","SHM_UNLOCK","SHM_HUGETLB","SHM_NORESERVE","EPOLLRDHUP","EPOLLEXCLUSIVE","EPOLLWAKEUP","EPOLLONESHOT","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","EFD_SEMAPHORE","LOG_NFACILITIES","SEM_FAILED","RB_AUTOBOOT","RB_HALT_SYSTEM","RB_ENABLE_CAD","RB_DISABLE_CAD","RB_POWER_OFF","RB_SW_SUSPEND","RB_KEXEC","AI_PASSIVE","AI_CANONNAME","AI_NUMERICHOST","AI_V4MAPPED","AI_ALL","AI_ADDRCONFIG","AI_NUMERICSERV","EAI_BADFLAGS","EAI_NONAME","EAI_AGAIN","EAI_FAIL","EAI_NODATA","EAI_FAMILY","EAI_SOCKTYPE","EAI_SERVICE","EAI_MEMORY","EAI_SYSTEM","EAI_OVERFLOW","NI_NUMERICHOST","NI_NUMERICSERV","NI_NOFQDN","NI_NAMEREQD","NI_DGRAM","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WAIT_AFTER","AIO_CANCELED","AIO_NOTCANCELED","AIO_ALLDONE","LIO_READ","LIO_WRITE","LIO_NOP","LIO_WAIT","LIO_NOWAIT","RUSAGE_THREAD","TCP_ULP","MSG_COPY","SHM_EXEC","IPV6_MULTICAST_ALL","IPV6_ROUTER_ALERT_ISOLATE","PACKET_MR_UNICAST","PTRACE_EVENT_STOP","UDP_SEGMENT","UDP_GRO","MREMAP_MAYMOVE","MREMAP_FIXED","PR_SET_PDEATHSIG","PR_GET_PDEATHSIG","PR_GET_DUMPABLE","PR_SET_DUMPABLE","PR_GET_UNALIGN","PR_SET_UNALIGN","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PR_GET_KEEPCAPS","PR_SET_KEEPCAPS","PR_GET_FPEMU","PR_SET_FPEMU","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_GET_FPEXC","PR_SET_FPEXC","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_DIV","PR_FP_EXC_OVF","PR_FP_EXC_UND","PR_FP_EXC_RES","PR_FP_EXC_INV","PR_FP_EXC_DISABLED","PR_FP_EXC_NONRECOV","PR_FP_EXC_ASYNC","PR_FP_EXC_PRECISE","PR_GET_TIMING","PR_SET_TIMING","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_SET_NAME","PR_GET_NAME","PR_GET_ENDIAN","PR_SET_ENDIAN","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_GET_SECCOMP","PR_SET_SECCOMP","PR_CAPBSET_READ","PR_CAPBSET_DROP","PR_GET_TSC","PR_SET_TSC","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_GET_SECUREBITS","PR_SET_SECUREBITS","PR_SET_TIMERSLACK","PR_GET_TIMERSLACK","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_SET","PR_MCE_KILL_LATE","PR_MCE_KILL_EARLY","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_GET","PR_SET_MM","PR_SET_MM_START_CODE","PR_SET_MM_END_CODE","PR_SET_MM_START_DATA","PR_SET_MM_END_DATA","PR_SET_MM_START_STACK","PR_SET_MM_START_BRK","PR_SET_MM_BRK","PR_SET_MM_ARG_START","PR_SET_MM_ARG_END","PR_SET_MM_ENV_START","PR_SET_MM_ENV_END","PR_SET_MM_AUXV","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_PTRACER","PR_SET_CHILD_SUBREAPER","PR_GET_CHILD_SUBREAPER","PR_SET_NO_NEW_PRIVS","PR_GET_NO_NEW_PRIVS","PR_GET_TID_ADDRESS","PR_SET_THP_DISABLE","PR_GET_THP_DISABLE","PR_MPX_ENABLE_MANAGEMENT","PR_MPX_DISABLE_MANAGEMENT","PR_SET_FP_MODE","PR_GET_FP_MODE","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_CAP_AMBIENT","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_RAISE","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_CLEAR_ALL","GRND_NONBLOCK","GRND_RANDOM","SECCOMP_MODE_DISABLED","SECCOMP_MODE_STRICT","SECCOMP_MODE_FILTER","ITIMER_REAL","ITIMER_VIRTUAL","ITIMER_PROF","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","XATTR_CREATE","XATTR_REPLACE","_POSIX_VDISABLE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","ENOATTR","SO_ORIGINAL_DST","IP_RECVFRAGSIZE","IPV6_FLOWINFO","IPV6_FLOWLABEL_MGR","IPV6_FLOWINFO_SEND","IPV6_RECVFRAGSIZE","IPV6_FREEBIND","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IUTF8","CMSPAR","MFD_CLOEXEC","MFD_ALLOW_SEALING","MFD_HUGETLB","PT_NULL","PT_LOAD","PT_DYNAMIC","PT_INTERP","PT_NOTE","PT_SHLIB","PT_PHDR","PT_TLS","PT_NUM","PT_LOOS","PT_GNU_EH_FRAME","PT_GNU_STACK","PT_GNU_RELRO","ETH_ALEN","ETH_HLEN","ETH_ZLEN","ETH_DATA_LEN","ETH_FRAME_LEN","ETH_FCS_LEN","ETH_P_LOOP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_IP","ETH_P_X25","ETH_P_ARP","ETH_P_BPQ","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_BATMAN","ETH_P_DEC","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_LAT","ETH_P_DIAG","ETH_P_CUST","ETH_P_SCA","ETH_P_TEB","ETH_P_RARP","ETH_P_ATALK","ETH_P_AARP","ETH_P_8021Q","ETH_P_IPX","ETH_P_IPV6","ETH_P_PAUSE","ETH_P_SLOW","ETH_P_WCCP","ETH_P_MPLS_UC","ETH_P_MPLS_MC","ETH_P_ATMMPOA","ETH_P_PPP_DISC","ETH_P_PPP_SES","ETH_P_LINK_CTL","ETH_P_ATMFATE","ETH_P_PAE","ETH_P_AOE","ETH_P_8021AD","ETH_P_802_EX1","ETH_P_TIPC","ETH_P_MACSEC","ETH_P_8021AH","ETH_P_MVRP","ETH_P_1588","ETH_P_PRP","ETH_P_FCOE","ETH_P_TDLS","ETH_P_FIP","ETH_P_80221","ETH_P_LOOPBACK","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_EDSA","ETH_P_AF_IUCV","ETH_P_802_3_MIN","ETH_P_802_3","ETH_P_AX25","ETH_P_ALL","ETH_P_802_2","ETH_P_SNAP","ETH_P_DDCMP","ETH_P_WAN_PPP","ETH_P_PPP_MP","ETH_P_LOCALTALK","ETH_P_CANFD","ETH_P_PPPTALK","ETH_P_TR_802_2","ETH_P_MOBITEX","ETH_P_CONTROL","ETH_P_IRDA","ETH_P_ECONET","ETH_P_HDLC","ETH_P_ARCNET","ETH_P_DSA","ETH_P_TRAILER","ETH_P_PHONET","ETH_P_IEEE802154","ETH_P_CAIF","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","NLMSG_NOOP","NLMSG_ERROR","NLMSG_DONE","NLMSG_OVERRUN","NLMSG_MIN_TYPE","NFNLGRP_NONE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_NFTABLES","NFNLGRP_ACCT_QUOTA","NFNETLINK_V0","NFNL_SUBSYS_NONE","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFNL_SUBSYS_OSF","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_COUNT","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFULNL_MSG_PACKET","NFULNL_MSG_CONFIG","NFULA_UNSPEC","NFULA_PACKET_HDR","NFULA_MARK","NFULA_TIMESTAMP","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_HWADDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_UID","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_GID","NFULA_HWTYPE","NFULA_HWHEADER","NFULA_HWLEN","NFULA_CT","NFULA_CT_INFO","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULA_CFG_UNSPEC","NFULA_CFG_CMD","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_TIMEOUT","NFULA_CFG_QTHRESH","NFULA_CFG_FLAGS","NFULNL_COPY_NONE","NFULNL_COPY_META","NFULNL_COPY_PACKET","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_CFG_F_CONNTRACK","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_CONFIG","NFQNL_MSG_VERDICT_BATCH","NFQA_UNSPEC","NFQA_PACKET_HDR","NFQA_VERDICT_HDR","NFQA_MARK","NFQA_TIMESTAMP","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_HWADDR","NFQA_PAYLOAD","NFQA_CT","NFQA_CT_INFO","NFQA_CAP_LEN","NFQA_SKB_INFO","NFQA_EXP","NFQA_UID","NFQA_GID","NFQA_SECCTX","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_UNBIND","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_COPY_NONE","NFQNL_COPY_META","NFQNL_COPY_PACKET","NFQA_CFG_UNSPEC","NFQA_CFG_CMD","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_MASK","NFQA_CFG_FLAGS","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_GSO","NFQA_CFG_F_UID_GID","NFQA_CFG_F_SECCTX","NFQA_CFG_F_MAX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_GSO","NFQA_SKB_CSUM_NOTVERIFIED","GENL_NAMSIZ","GENL_MIN_ID","GENL_MAX_ID","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","CTRL_CMD_UNSPEC","CTRL_CMD_NEWFAMILY","CTRL_CMD_DELFAMILY","CTRL_CMD_GETFAMILY","CTRL_CMD_NEWOPS","CTRL_CMD_DELOPS","CTRL_CMD_GETOPS","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_GETMCAST_GRP","CTRL_ATTR_UNSPEC","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_VERSION","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_OPS","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_ID","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_ALLMULTI","NF_DROP","NF_ACCEPT","NF_STOLEN","NF_QUEUE","NF_REPEAT","NF_STOP","NF_MAX_VERDICT","NF_VERDICT_MASK","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_QMASK","NF_VERDICT_QBITS","NF_VERDICT_BITS","NF_INET_PRE_ROUTING","NF_INET_LOCAL_IN","NF_INET_FORWARD","NF_INET_LOCAL_OUT","NF_INET_POST_ROUTING","NF_INET_NUMHOOKS","NFPROTO_UNSPEC","NFPROTO_IPV4","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_IPV6","NFPROTO_DECNET","NFPROTO_NUMPROTO","NF_IP_PRE_ROUTING","NF_IP_LOCAL_IN","NF_IP_FORWARD","NF_IP_LOCAL_OUT","NF_IP_POST_ROUTING","NF_IP_NUMHOOKS","NF_IP_PRI_FIRST","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_RAW","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_CONNTRACK","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_FILTER","NF_IP_PRI_SECURITY","NF_IP_PRI_NAT_SRC","NF_IP_PRI_SELINUX_LAST","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_LAST","NF_IP6_PRE_ROUTING","NF_IP6_LOCAL_IN","NF_IP6_FORWARD","NF_IP6_LOCAL_OUT","NF_IP6_POST_ROUTING","NF_IP6_NUMHOOKS","NF_IP6_PRI_FIRST","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_RAW","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_FILTER","NF_IP6_PRI_SECURITY","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_SELINUX_LAST","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_LAST","IP6T_SO_ORIGINAL_DST","SIOCADDRT","SIOCDELRT","SIOCGIFNAME","SIOCSIFLINK","SIOCGIFCONF","SIOCGIFFLAGS","SIOCSIFFLAGS","SIOCGIFADDR","SIOCSIFADDR","SIOCGIFDSTADDR","SIOCSIFDSTADDR","SIOCGIFBRDADDR","SIOCSIFBRDADDR","SIOCGIFNETMASK","SIOCSIFNETMASK","SIOCGIFMETRIC","SIOCSIFMETRIC","SIOCGIFMEM","SIOCSIFMEM","SIOCGIFMTU","SIOCSIFMTU","SIOCSIFHWADDR","SIOCGIFENCAP","SIOCSIFENCAP","SIOCGIFHWADDR","SIOCGIFSLAVE","SIOCSIFSLAVE","SIOCADDMULTI","SIOCDELMULTI","SIOCDARP","SIOCGARP","SIOCSARP","SIOCDRARP","SIOCGRARP","SIOCSRARP","SIOCGIFMAP","SIOCSIFMAP","IPTOS_TOS_MASK","IPTOS_PREC_MASK","IPTOS_ECN_NOT_ECT","RTF_UP","RTF_GATEWAY","RTF_HOST","RTF_REINSTATE","RTF_DYNAMIC","RTF_MODIFIED","RTF_MTU","RTF_MSS","RTF_WINDOW","RTF_IRTT","RTF_REJECT","RTF_STATIC","RTF_XRESOLVE","RTF_NOFORWARD","RTF_THROW","RTF_NOPMTUDISC","RTF_DEFAULT","RTF_ALLONLINK","RTF_ADDRCONF","RTF_LINKRT","RTF_NONEXTHOP","RTF_CACHE","RTF_FLOW","RTF_POLICY","RTCF_VALVE","RTCF_MASQ","RTCF_NAT","RTCF_DOREDIRECT","RTCF_LOG","RTCF_DIRECTSRC","RTF_LOCAL","RTF_INTERFACE","RTF_MULTICAST","RTF_BROADCAST","RTF_NAT","RTF_ADDRCLASSMASK","RT_CLASS_UNSPEC","RT_CLASS_DEFAULT","RT_CLASS_MAIN","RT_CLASS_LOCAL","RT_CLASS_MAX","NUD_NONE","NUD_INCOMPLETE","NUD_REACHABLE","NUD_STALE","NUD_DELAY","NUD_PROBE","NUD_FAILED","NUD_NOARP","NUD_PERMANENT","NTF_USE","NTF_SELF","NTF_MASTER","NTF_PROXY","NTF_ROUTER","NDA_UNSPEC","NDA_DST","NDA_LLADDR","NDA_CACHEINFO","NDA_PROBES","NDA_VLAN","NDA_PORT","NDA_VNI","NDA_IFINDEX","NLA_ALIGNTO","NETLINK_ROUTE","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_FIREWALL","NETLINK_SOCK_DIAG","NETLINK_NFLOG","NETLINK_XFRM","NETLINK_SELINUX","NETLINK_ISCSI","NETLINK_AUDIT","NETLINK_FIB_LOOKUP","NETLINK_CONNECTOR","NETLINK_NETFILTER","NETLINK_IP6_FW","NETLINK_DNRTMSG","NETLINK_KOBJECT_UEVENT","NETLINK_GENERIC","NETLINK_SCSITRANSPORT","NETLINK_ECRYPTFS","NETLINK_RDMA","NETLINK_CRYPTO","NETLINK_INET_DIAG","NLM_F_REQUEST","NLM_F_MULTI","NLM_F_ACK","NLM_F_ECHO","NLM_F_DUMP_INTR","NLM_F_DUMP_FILTERED","NLM_F_ROOT","NLM_F_MATCH","NLM_F_ATOMIC","NLM_F_DUMP","NLM_F_REPLACE","NLM_F_EXCL","NLM_F_CREATE","NLM_F_APPEND","NETLINK_ADD_MEMBERSHIP","NETLINK_DROP_MEMBERSHIP","NETLINK_PKTINFO","NETLINK_BROADCAST_ERROR","NETLINK_NO_ENOBUFS","NETLINK_RX_RING","NETLINK_TX_RING","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_CAP_ACK","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","TCA_UNSPEC","TCA_KIND","TCA_OPTIONS","TCA_STATS","TCA_XSTATS","TCA_RATE","TCA_FCNT","TCA_STATS2","TCA_STAB","RTM_NEWLINK","RTM_DELLINK","RTM_GETLINK","RTM_SETLINK","RTM_NEWADDR","RTM_DELADDR","RTM_GETADDR","RTM_NEWROUTE","RTM_DELROUTE","RTM_GETROUTE","RTM_NEWNEIGH","RTM_DELNEIGH","RTM_GETNEIGH","RTM_NEWRULE","RTM_DELRULE","RTM_GETRULE","RTM_NEWQDISC","RTM_DELQDISC","RTM_GETQDISC","RTM_NEWTCLASS","RTM_DELTCLASS","RTM_GETTCLASS","RTM_NEWTFILTER","RTM_DELTFILTER","RTM_GETTFILTER","RTM_NEWACTION","RTM_DELACTION","RTM_GETACTION","RTM_NEWPREFIX","RTM_GETMULTICAST","RTM_GETANYCAST","RTM_NEWNEIGHTBL","RTM_GETNEIGHTBL","RTM_SETNEIGHTBL","RTM_NEWNDUSEROPT","RTM_NEWADDRLABEL","RTM_DELADDRLABEL","RTM_GETADDRLABEL","RTM_GETDCB","RTM_SETDCB","RTM_NEWNETCONF","RTM_GETNETCONF","RTM_NEWMDB","RTM_DELMDB","RTM_GETMDB","RTM_NEWNSID","RTM_DELNSID","RTM_GETNSID","RTM_F_NOTIFY","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_PREFIX","RTA_UNSPEC","RTA_DST","RTA_SRC","RTA_IIF","RTA_OIF","RTA_GATEWAY","RTA_PRIORITY","RTA_PREFSRC","RTA_METRICS","RTA_MULTIPATH","RTA_PROTOINFO","RTA_FLOW","RTA_CACHEINFO","RTA_SESSION","RTA_MP_ALGO","RTA_TABLE","RTA_MARK","RTA_MFC_STATS","RTN_UNSPEC","RTN_UNICAST","RTN_LOCAL","RTN_BROADCAST","RTN_ANYCAST","RTN_MULTICAST","RTN_BLACKHOLE","RTN_UNREACHABLE","RTN_PROHIBIT","RTN_THROW","RTN_NAT","RTN_XRESOLVE","RTPROT_UNSPEC","RTPROT_REDIRECT","RTPROT_KERNEL","RTPROT_BOOT","RTPROT_STATIC","RT_SCOPE_UNIVERSE","RT_SCOPE_SITE","RT_SCOPE_LINK","RT_SCOPE_HOST","RT_SCOPE_NOWHERE","RT_TABLE_UNSPEC","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_MAIN","RT_TABLE_LOCAL","RTMSG_OVERRUN","RTMSG_NEWDEVICE","RTMSG_DELDEVICE","RTMSG_NEWROUTE","RTMSG_DELROUTE","RTMSG_NEWRULE","RTMSG_DELRULE","RTMSG_CONTROL","RTMSG_AR_FAILED","MAX_ADDR_LEN","ARPD_UPDATE","ARPD_LOOKUP","ARPD_FLUSH","ATF_MAGIC","SO_TIMESTAMPING","SCM_TIMESTAMPING","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_RAW_HARDWARE","ALG_SET_KEY","ALG_SET_IV","ALG_SET_OP","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","UDP_CORK","UDP_ENCAP","UDP_NO_CHECK6_TX","UDP_NO_CHECK6_RX","MAP_SHARED_VALIDATE","MAP_FIXED_NOREPLACE","VMADDR_CID_ANY","VMADDR_CID_HYPERVISOR","VMADDR_CID_RESERVED","VMADDR_CID_LOCAL","VMADDR_CID_HOST","VMADDR_PORT_ANY","IN_ACCESS","IN_MODIFY","IN_ATTRIB","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_CLOSE","IN_OPEN","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_MOVE_SELF","IN_UNMOUNT","IN_Q_OVERFLOW","IN_IGNORED","IN_ONLYDIR","IN_DONT_FOLLOW","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEYCTL_GET_KEYRING_ID","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_UPDATE","KEYCTL_REVOKE","KEYCTL_CHOWN","KEYCTL_SETPERM","KEYCTL_DESCRIBE","KEYCTL_CLEAR","KEYCTL_LINK","KEYCTL_UNLINK","KEYCTL_SEARCH","KEYCTL_READ","KEYCTL_INSTANTIATE","KEYCTL_NEGATE","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_GET_SECURITY","KEYCTL_SESSION_TO_PARENT","KEYCTL_REJECT","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_GET_PERSISTENT","IN_ISDIR","IN_ONESHOT","IN_ALL_EVENTS","IN_CLOEXEC","IN_NONBLOCK","FF_MAX","FF_CNT","INPUT_PROP_MAX","INPUT_PROP_CNT","EV_MAX","EV_CNT","SYN_MAX","SYN_CNT","KEY_MAX","KEY_CNT","REL_MAX","REL_CNT","ABS_MAX","ABS_CNT","SW_MAX","SW_CNT","MSC_MAX","MSC_CNT","LED_MAX","LED_CNT","REP_MAX","REP_CNT","SND_MAX","SND_CNT","UINPUT_VERSION","UINPUT_MAX_NAME_SIZE","FAN_ACCESS","FAN_MODIFY","FAN_CLOSE_WRITE","FAN_CLOSE_NOWRITE","FAN_OPEN","FAN_Q_OVERFLOW","FAN_OPEN_PERM","FAN_ACCESS_PERM","FAN_ONDIR","FAN_EVENT_ON_CHILD","FAN_CLOSE","FAN_CLOEXEC","FAN_NONBLOCK","FAN_CLASS_NOTIF","FAN_CLASS_CONTENT","FAN_CLASS_PRE_CONTENT","FAN_UNLIMITED_QUEUE","FAN_UNLIMITED_MARKS","FAN_MARK_ADD","FAN_MARK_REMOVE","FAN_MARK_DONT_FOLLOW","FAN_MARK_ONLYDIR","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_FLUSH","FANOTIFY_METADATA_VERSION","FAN_ALLOW","FAN_DENY","FAN_NOFD","FUTEX_WAIT","FUTEX_WAKE","FUTEX_FD","FUTEX_REQUEUE","FUTEX_CMP_REQUEUE","FUTEX_WAKE_OP","FUTEX_LOCK_PI","FUTEX_UNLOCK_PI","FUTEX_TRYLOCK_PI","FUTEX_WAIT_BITSET","FUTEX_WAKE_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI","FUTEX_PRIVATE_FLAG","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_CMD_KEXEC","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_ENOSYS","REG_NOMATCH","REG_BADPAT","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_ESUBREG","REG_EBRACK","REG_EPAREN","REG_EBRACE","REG_BADBR","REG_ERANGE","REG_ESPACE","REG_BADRPT","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_TXSTATUS","SO_EE_ORIGIN_TIMESTAMPING","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EWOULDBLOCK","CAN_EFF_FLAG","CAN_RTR_FLAG","CAN_ERR_FLAG","CAN_SFF_MASK","CAN_EFF_MASK","CAN_ERR_MASK","CAN_SFF_ID_BITS","CAN_EFF_ID_BITS","CAN_MAX_DLC","CAN_MAX_DLEN","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_BRS","CANFD_ESI","CAN_MTU","CANFD_MTU","CAN_RAW","CAN_BCM","CAN_TP16","CAN_TP20","CAN_MCNET","CAN_ISOTP","CAN_J1939","CAN_NPROTO","SOL_CAN_BASE","CAN_INV_FILTER","CAN_RAW_FILTER_MAX","NLA_ALIGN","CMSG_NXTHDR","CPU_ALLOC_SIZE","CPU_ZERO","CPU_SET","CPU_CLR","CPU_ISSET","CPU_COUNT_S","CPU_COUNT","CPU_EQUAL","major","minor","makedev","IPTOS_TOS","IPTOS_PREC","RT_TOS","RT_ADDRCLASS","RT_LOCALADDR","SO_EE_OFFENDER","pthread_t","__priority_which_t","__rlimit_resource_t","Lmid_t","regoff_t","statx","stx_mask","stx_blksize","stx_attributes","stx_nlink","stx_uid","stx_gid","stx_mode","stx_ino","stx_size","stx_blocks","stx_attributes_mask","stx_atime","stx_btime","stx_ctime","stx_mtime","stx_rdev_major","stx_rdev_minor","stx_dev_major","stx_dev_minor","stx_mnt_id","statx_timestamp","tv_sec","tv_nsec","__statx_timestamp_pad1","aiocb","aio_fildes","aio_lio_opcode","aio_reqprio","aio_buf","aio_nbytes","aio_sigevent","aio_offset","__exit_status","e_termination","e_exit","__timeval","tv_sec","tv_usec","glob64_t","gl_pathc","gl_pathv","gl_offs","gl_flags","msghdr","msg_name","msg_namelen","msg_iov","msg_iovlen","msg_control","msg_controllen","msg_flags","cmsghdr","cmsg_len","cmsg_level","cmsg_type","termios","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","mallinfo","arena","ordblks","smblks","hblks","hblkhd","usmblks","fsmblks","uordblks","fordblks","keepcost","nlmsghdr","nlmsg_len","nlmsg_type","nlmsg_flags","nlmsg_seq","nlmsg_pid","nlmsgerr","error","msg","nl_pktinfo","group","nl_mmap_req","nm_block_size","nm_block_nr","nm_frame_size","nm_frame_nr","nl_mmap_hdr","nm_status","nm_len","nm_group","nm_pid","nm_uid","nm_gid","nlattr","nla_len","nla_type","rtentry","rt_pad1","rt_dst","rt_gateway","rt_genmask","rt_flags","rt_pad2","rt_pad3","rt_tos","rt_class","rt_pad4","rt_metric","rt_dev","rt_mtu","rt_window","rt_irtt","timex","modes","offset","freq","maxerror","esterror","status","constant","precision","tolerance","time","tick","ppsfreq","jitter","shift","stabil","jitcnt","calcnt","errcnt","stbcnt","tai","__unused1","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","__unused10","__unused11","ntptimeval","time","maxerror","esterror","tai","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","regex_t","Elf64_Chdr","ch_type","ch_reserved","ch_size","ch_addralign","Elf32_Chdr","ch_type","ch_size","ch_addralign","utmpx","ut_type","ut_pid","ut_line","ut_id","ut_user","ut_host","ut_exit","ut_session","ut_tv","ut_addr_v6","HUGETLB_FLAG_ENCODE_SHIFT","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_16GB","MAP_HUGE_SHIFT","MAP_HUGE_MASK","MAP_HUGE_64KB","MAP_HUGE_512KB","MAP_HUGE_1MB","MAP_HUGE_2MB","MAP_HUGE_8MB","MAP_HUGE_16MB","MAP_HUGE_32MB","MAP_HUGE_256MB","MAP_HUGE_512MB","MAP_HUGE_1GB","MAP_HUGE_2GB","MAP_HUGE_16GB","RLIMIT_CPU","RLIMIT_FSIZE","RLIMIT_DATA","RLIMIT_STACK","RLIMIT_CORE","RLIMIT_LOCKS","RLIMIT_SIGPENDING","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_NLIMITS","PRIO_PROCESS","PRIO_PGRP","PRIO_USER","MS_RMT_MASK","__UT_LINESIZE","__UT_NAMESIZE","__UT_HOSTSIZE","EMPTY","RUN_LVL","BOOT_TIME","NEW_TIME","OLD_TIME","INIT_PROCESS","LOGIN_PROCESS","USER_PROCESS","DEAD_PROCESS","ACCOUNTING","LM_ID_BASE","LM_ID_NEWLM","RTLD_DI_LMID","RTLD_DI_LINKMAP","RTLD_DI_CONFIGADDR","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_TLS_MODID","RTLD_DI_TLS_DATA","SOCK_NONBLOCK","SOL_RXRPC","SOL_PPPOL2TP","SOL_PNPIPE","SOL_RDS","SOL_IUCV","SOL_CAIF","SOL_NFC","SOL_XDP","MSG_TRYHARD","LC_PAPER","LC_NAME","LC_ADDRESS","LC_TELEPHONE","LC_MEASUREMENT","LC_IDENTIFICATION","LC_PAPER_MASK","LC_NAME_MASK","LC_ADDRESS_MASK","LC_TELEPHONE_MASK","LC_MEASUREMENT_MASK","LC_IDENTIFICATION_MASK","LC_ALL_MASK","ENOTSUP","SOCK_SEQPACKET","SOCK_DCCP","SOCK_PACKET","TCP_COOKIE_TRANSACTIONS","TCP_THIN_LINEAR_TIMEOUTS","TCP_THIN_DUPACK","TCP_USER_TIMEOUT","TCP_REPAIR","TCP_REPAIR_QUEUE","TCP_QUEUE_SEQ","TCP_REPAIR_OPTIONS","TCP_FASTOPEN","TCP_TIMESTAMP","TCP_FASTOPEN_CONNECT","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_FILESYSTEM","AF_IB","AF_MPLS","AF_NFC","AF_VSOCK","AF_XDP","PF_IB","PF_MPLS","PF_NFC","PF_VSOCK","PF_XDP","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_TX_CCID","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SERVICE_LIST_MAX_LEN","SIGEV_THREAD_ID","BUFSIZ","TMP_MAX","FOPEN_MAX","FILENAME_MAX","POSIX_MADV_DONTNEED","_SC_EQUIV_CLASS_MAX","_SC_CHARCLASS_NAME_MAX","_SC_PII","_SC_PII_XTI","_SC_PII_SOCKET","_SC_PII_INTERNET","_SC_PII_OSI","_SC_POLL","_SC_SELECT","_SC_PII_INTERNET_STREAM","_SC_PII_INTERNET_DGRAM","_SC_PII_OSI_COTS","_SC_PII_OSI_CLTS","_SC_PII_OSI_M","_SC_T_IOV_MAX","_SC_2_C_VERSION","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_INT_MAX","_SC_INT_MIN","_SC_LONG_BIT","_SC_WORD_BIT","_SC_MB_LEN_MAX","_SC_SSIZE_MAX","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_ULONG_MAX","_SC_USHRT_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_BASE","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_FD_MGMT","_SC_FIFO","_SC_PIPE","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_MULTI_PROCESS","_SC_SINGLE_PROCESS","_SC_NETWORKING","_SC_REGEX_VERSION","_SC_SIGNALS","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","O_ACCMODE","ST_RELATIME","NI_MAXHOST","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BINDERFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX2_SUPER_MAGIC","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINIX_SUPER_MAGIC","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","CPU_SETSIZE","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_ATTACH","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","RWF_HIPRI","RWF_DSYNC","RWF_SYNC","RWF_NOWAIT","RWF_APPEND","TCA_PAD","TCA_DUMP_INVISIBLE","TCA_CHAIN","TCA_HW_OFFLOAD","RTM_DELNETCONF","RTM_NEWSTATS","RTM_GETSTATS","RTM_NEWCACHEREPORT","RTM_F_LOOKUP_TABLE","RTM_F_FIB_MATCH","RTA_VIA","RTA_NEWDST","RTA_PREF","RTA_ENCAP_TYPE","RTA_ENCAP","RTA_EXPIRES","RTA_PAD","RTA_UID","RTA_TTL_PROPAGATE","NTF_EXT_LEARNED","NTF_OFFLOADED","NDA_MASTER","NDA_LINK_NETNSID","NDA_SRC_VNI","UNAME26","FDPIC_FUNCPTRS","IFA_FLAGS","IFA_F_MANAGETEMPADDR","IFA_F_NOPREFIXROUTE","IFA_F_MCAUTOJOIN","IFA_F_STABLE_PRIVACY","MAX_LINKS","GENL_UNS_ADMIN_PERM","GENL_ID_VFS_DQUOT","GENL_ID_PMCRAID","TIOCM_LE","TIOCM_DTR","TIOCM_RTS","TIOCM_CD","TIOCM_RI","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NFPROTO_INET","NFPROTO_NETDEV","KEYCTL_DH_COMPUTE","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_RESTRICT_KEYRING","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_MOVE","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","NFT_TABLE_MAXNAMELEN","NFT_CHAIN_MAXNAMELEN","NFT_SET_MAXNAMELEN","NFT_OBJ_MAXNAMELEN","NFT_USERDATA_MAXLEN","NFT_REG_VERDICT","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","__NFT_REG_MAX","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG_SIZE","NFT_REG32_SIZE","NFT_CONTINUE","NFT_BREAK","NFT_JUMP","NFT_GOTO","NFT_RETURN","NFT_MSG_NEWTABLE","NFT_MSG_GETTABLE","NFT_MSG_DELTABLE","NFT_MSG_NEWCHAIN","NFT_MSG_GETCHAIN","NFT_MSG_DELCHAIN","NFT_MSG_NEWRULE","NFT_MSG_GETRULE","NFT_MSG_DELRULE","NFT_MSG_NEWSET","NFT_MSG_GETSET","NFT_MSG_DELSET","NFT_MSG_NEWSETELEM","NFT_MSG_GETSETELEM","NFT_MSG_DELSETELEM","NFT_MSG_NEWGEN","NFT_MSG_GETGEN","NFT_MSG_TRACE","NFT_MSG_NEWOBJ","NFT_MSG_GETOBJ","NFT_MSG_DELOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_MAX","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_TIMEOUT","NFT_SET_EVAL","NFT_SET_POL_PERFORMANCE","NFT_SET_POL_MEMORY","NFT_SET_ELEM_INTERVAL_END","NFT_DATA_VALUE","NFT_DATA_VERDICT","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE_MAXLEN","NFT_BYTEORDER_NTOH","NFT_BYTEORDER_HTON","NFT_CMP_EQ","NFT_CMP_NEQ","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_GT","NFT_CMP_GTE","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_LOOKUP_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_DYNSET_F_INV","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_CSUM_INET","NFT_META_LEN","NFT_META_PROTOCOL","NFT_META_PRIORITY","NFT_META_MARK","NFT_META_IIF","NFT_META_OIF","NFT_META_IIFNAME","NFT_META_OIFNAME","NFT_META_IIFTYPE","NFT_META_OIFTYPE","NFT_META_SKUID","NFT_META_SKGID","NFT_META_NFTRACE","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_NFPROTO","NFT_META_L4PROTO","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_PKTTYPE","NFT_META_CPU","NFT_META_IIFGROUP","NFT_META_OIFGROUP","NFT_META_CGROUP","NFT_META_PRANDOM","NFT_CT_STATE","NFT_CT_DIRECTION","NFT_CT_STATUS","NFT_CT_MARK","NFT_CT_SECMARK","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_SRC","NFT_CT_DST","NFT_CT_PROTOCOL","NFT_CT_PROTO_SRC","NFT_CT_PROTO_DST","NFT_CT_LABELS","NFT_CT_PKTS","NFT_CT_BYTES","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LIMIT_F_INV","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_NAT_SNAT","NFT_NAT_DNAT","NFT_TRACETYPE_UNSPEC","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","M_MXFAST","M_NLBLKS","M_GRAIN","M_KEEP","M_TRIM_THRESHOLD","M_TOP_PAD","M_MMAP_THRESHOLD","M_MMAP_MAX","M_CHECK_ACTION","M_PERTURB","M_ARENA_TEST","M_ARENA_MAX","AT_STATX_SYNC_TYPE","AT_STATX_SYNC_AS_STAT","AT_STATX_FORCE_SYNC","AT_STATX_DONT_SYNC","STATX_TYPE","STATX_MODE","STATX_NLINK","STATX_UID","STATX_GID","STATX_ATIME","STATX_MTIME","STATX_CTIME","STATX_INO","STATX_SIZE","STATX_BLOCKS","STATX_BASIC_STATS","STATX_BTIME","STATX_MNT_ID","STATX_ALL","STATX__RESERVED","STATX_ATTR_COMPRESSED","STATX_ATTR_IMMUTABLE","STATX_ATTR_APPEND","STATX_ATTR_NODUMP","STATX_ATTR_ENCRYPTED","STATX_ATTR_AUTOMOUNT","ADJ_OFFSET","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_ESTERROR","ADJ_STATUS","ADJ_TIMECONST","ADJ_TAI","ADJ_SETOFFSET","ADJ_MICRO","ADJ_NANO","ADJ_TICK","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","MOD_OFFSET","MOD_FREQUENCY","MOD_MAXERROR","MOD_ESTERROR","MOD_STATUS","MOD_TIMECONST","MOD_CLKB","MOD_CLKA","MOD_TAI","MOD_MICRO","MOD_NANO","STA_PLL","STA_PPSFREQ","STA_PPSTIME","STA_FLL","STA_INS","STA_DEL","STA_UNSYNC","STA_FREQHOLD","STA_PPSSIGNAL","STA_PPSJITTER","STA_PPSWANDER","STA_PPSERROR","STA_CLOCKERR","STA_NANO","STA_MODE","STA_CLK","STA_RONLY","NTP_API","TIME_OK","TIME_INS","TIME_DEL","TIME_OOP","TIME_WAIT","TIME_ERROR","TIME_BAD","MAXTC","PTHREAD_STACK_MIN","PTHREAD_MUTEX_ADAPTIVE_NP","REG_STARTEND","REG_EEND","REG_ESIZE","REG_ERPAREN","ino_t","off_t","blkcnt_t","shmatt_t","msgqnum_t","msglen_t","fsblkcnt_t","fsfilcnt_t","rlim_t","__fsword_t","clock_t","time_t","sigset_t","sysinfo","uptime","loads","totalram","freeram","sharedram","bufferram","totalswap","freeswap","procs","pad","totalhigh","freehigh","mem_unit","_f","msqid_ds","msg_perm","msg_stime","msg_rtime","msg_ctime","msg_qnum","msg_qbytes","msg_lspid","msg_lrpid","RLIM_INFINITY","__SIZEOF_PTHREAD_RWLOCKATTR_T","O_LARGEFILE","c_char","wchar_t","nlink_t","blksize_t","greg_t","suseconds_t","__u64","sigaction","sa_sigaction","sa_mask","sa_flags","sa_restorer","statfs","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","flock","l_type","l_whence","l_start","l_len","l_pid","flock64","l_type","l_whence","l_start","l_len","l_pid","siginfo_t","si_signo","si_errno","si_code","stack_t","ss_sp","ss_flags","ss_size","stat","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","stat64","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","statfs64","f_type","f_bsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_fsid","f_namelen","f_frsize","f_flags","f_spare","statvfs64","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","pthread_attr_t","_libc_fpxreg","significand","exponent","_libc_xmmreg","element","_libc_fpstate","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","_st","_xmm","user_regs_struct","r15","r14","r13","r12","rbp","rbx","r11","r10","r9","r8","rax","rcx","rdx","rsi","rdi","orig_rax","rip","cs","eflags","rsp","ss","fs_base","gs_base","ds","es","fs","gs","user","regs","u_fpvalid","i387","u_tsize","u_dsize","u_ssize","start_code","start_stack","signal","u_ar0","u_fpstate","magic","u_comm","u_debugreg","mcontext_t","gregs","fpregs","ipc_perm","__key","uid","gid","cuid","cgid","mode","__seq","shmid_ds","shm_perm","shm_segsz","shm_atime","shm_dtime","shm_ctime","shm_cpid","shm_lpid","shm_nattch","termios2","c_iflag","c_oflag","c_cflag","c_lflag","c_line","c_cc","c_ispeed","c_ospeed","ip_mreqn","imr_multiaddr","imr_address","imr_ifindex","user_fpregs_struct","cwd","swd","ftw","fop","rip","rdp","mxcsr","mxcr_mask","st_space","xmm_space","ucontext_t","uc_flags","uc_link","uc_stack","uc_mcontext","uc_sigmask","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","VEOF","RTLD_DEEPBIND","RTLD_GLOBAL","RTLD_NOLOAD","TIOCGSOFTCAR","TIOCSSOFTCAR","TIOCGRS485","TIOCSRS485","RLIMIT_RSS","RLIMIT_AS","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","O_APPEND","O_CREAT","O_EXCL","O_NOCTTY","O_NONBLOCK","O_SYNC","O_RSYNC","O_DSYNC","O_FSYNC","O_NOATIME","O_PATH","O_TMPFILE","MADV_SOFT_OFFLINE","MAP_GROWSDOWN","EDEADLK","ENAMETOOLONG","ENOLCK","ENOSYS","ENOTEMPTY","ELOOP","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EMULTIHOP","EOVERFLOW","ENOTUNIQ","EBADFD","EBADMSG","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","EILSEQ","ERESTART","ESTRPIPE","EUSERS","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EALREADY","EINPROGRESS","ESTALE","EDQUOT","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","ENOKEY","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","EHWPOISON","ERFKILL","SOL_SOCKET","SO_REUSEADDR","SO_TYPE","SO_ERROR","SO_DONTROUTE","SO_BROADCAST","SO_SNDBUF","SO_RCVBUF","SO_SNDBUFFORCE","SO_RCVBUFFORCE","SO_KEEPALIVE","SO_OOBINLINE","SO_NO_CHECK","SO_PRIORITY","SO_LINGER","SO_BSDCOMPAT","SO_REUSEPORT","SO_PASSCRED","SO_PEERCRED","SO_RCVLOWAT","SO_SNDLOWAT","SO_RCVTIMEO","SO_SNDTIMEO","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SECURITY_ENCRYPTION_NETWORK","SO_BINDTODEVICE","SO_ATTACH_FILTER","SO_DETACH_FILTER","SO_GET_FILTER","SO_PEERNAME","SO_TIMESTAMP","SO_ACCEPTCONN","SO_PEERSEC","SO_PASSSEC","SO_TIMESTAMPNS","SCM_TIMESTAMPNS","SO_MARK","SO_PROTOCOL","SO_DOMAIN","SO_RXQ_OVFL","SO_WIFI_STATUS","SCM_WIFI_STATUS","SO_PEEK_OFF","SO_NOFCS","SO_LOCK_FILTER","SO_SELECT_ERR_QUEUE","SO_BUSY_POLL","SO_MAX_PACING_RATE","SO_BPF_EXTENSIONS","SO_INCOMING_CPU","SO_ATTACH_BPF","SO_DETACH_BPF","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_CNX_ADVICE","SCM_TIMESTAMPING_OPT_STATS","SO_MEMINFO","SO_INCOMING_NAPI_ID","SO_COOKIE","SCM_TIMESTAMPING_PKTINFO","SO_PEERGROUPS","SO_ZEROCOPY","SO_TXTIME","SCM_TXTIME","SO_BINDTOIFINDEX","SO_TIMESTAMP_NEW","SO_TIMESTAMPNS_NEW","SO_TIMESTAMPING_NEW","SO_RCVTIMEO_NEW","SO_SNDTIMEO_NEW","SO_DETACH_REUSEPORT_BPF","SOCK_STREAM","SOCK_DGRAM","SA_ONSTACK","SA_SIGINFO","SA_NOCLDWAIT","SIGTTIN","SIGTTOU","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGCHLD","SIGBUS","SIGUSR1","SIGUSR2","SIGCONT","SIGSTOP","SIGTSTP","SIGURG","SIGIO","SIGSYS","SIGSTKFLT","SIGUNUSED","SIGPOLL","SIGPWR","SIG_SETMASK","SIG_BLOCK","SIG_UNBLOCK","POLLWRNORM","POLLWRBAND","O_ASYNC","O_NDELAY","PTRACE_DETACH","EFD_NONBLOCK","F_GETLK","F_GETOWN","F_SETOWN","F_SETLK","F_SETLKW","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_RDLCK","F_WRLCK","F_UNLCK","SFD_NONBLOCK","TCSANOW","TCSADRAIN","TCSAFLUSH","TIOCLINUX","TIOCGSERIAL","TIOCEXCL","TIOCNXCL","TIOCSCTTY","TIOCSTI","TIOCMGET","TIOCMBIS","TIOCMBIC","TIOCMSET","TIOCCONS","TIOCM_ST","TIOCM_SR","TIOCM_CTS","TIOCM_CAR","TIOCM_RNG","TIOCM_DSR","SFD_CLOEXEC","NCCS","O_TRUNC","O_CLOEXEC","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EDOTDOT","SA_NODEFER","SA_RESETHAND","SA_RESTART","SA_NOCLDSTOP","EPOLL_CLOEXEC","EFD_CLOEXEC","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_MUTEXATTR_T","O_DIRECT","O_DIRECTORY","O_NOFOLLOW","MAP_HUGETLB","MAP_LOCKED","MAP_NORESERVE","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_POPULATE","MAP_NONBLOCK","MAP_STACK","MAP_SYNC","EDEADLOCK","EUCLEAN","ENOTNAM","ENAVAIL","EISNAM","EREMOTEIO","FIOCLEX","FIONCLEX","FIONBIO","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_PEEKSIGINFO_SHARED","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","MCL_CURRENT","MCL_FUTURE","SIGSTKSZ","MINSIGSTKSZ","CBAUD","TAB1","TAB2","TAB3","CR1","CR2","CR3","FF1","BS1","VT1","VWERASE","VREPRINT","VSUSP","VSTART","VSTOP","VDISCARD","VTIME","IXON","IXOFF","ONLCR","CSIZE","CS6","CS7","CS8","CSTOPB","CREAD","PARENB","PARODD","HUPCL","CLOCAL","ECHOKE","ECHOE","ECHOK","ECHONL","ECHOPRT","ECHOCTL","ISIG","ICANON","PENDIN","NOFLSH","CIBAUD","CBAUDEX","VSWTC","OLCUC","NLDLY","CRDLY","TABDLY","BSDLY","FFDLY","VTDLY","XTABS","B0","B50","B75","B110","B134","B150","B200","B300","B600","B1200","B1800","B2400","B4800","B9600","B19200","B38400","EXTA","EXTB","BOTHER","B57600","B115200","B230400","B460800","B500000","B576000","B921600","B1000000","B1152000","B1500000","B2000000","B2500000","B3000000","B3500000","B4000000","VEOL","VEOL2","VMIN","IEXTEN","TOSTOP","FLUSHO","EXTPROC","TCGETS","TCSETS","TCSETSW","TCSETSF","TCGETA","TCSETA","TCSETAW","TCSETAF","TCSBRK","TCXONC","TCFLSH","TIOCINQ","TIOCGPGRP","TIOCSPGRP","TIOCOUTQ","TIOCGWINSZ","TIOCSWINSZ","FIONREAD","TIOCSBRK","TIOCCBRK","R15","R14","R13","R12","RBP","RBX","R11","R10","R9","R8","RAX","RCX","RDX","RSI","RDI","ORIG_RAX","RIP","CS","EFLAGS","RSP","SS","FS_BASE","GS_BASE","DS","ES","FS","GS","REG_R8","REG_R9","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_RDI","REG_RSI","REG_RBP","REG_RBX","REG_RDX","REG_RAX","REG_RCX","REG_RSP","REG_RIP","REG_EFL","REG_CSGSFS","REG_ERR","REG_TRAPNO","REG_OLDMASK","REG_CR2","c_long","c_ulong","statvfs","f_bsize","f_frsize","f_blocks","f_bfree","f_bavail","f_files","f_ffree","f_favail","f_fsid","f_flag","f_namemax","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCK_T","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","SYS_read","SYS_write","SYS_open","SYS_close","SYS_stat","SYS_fstat","SYS_lstat","SYS_poll","SYS_lseek","SYS_mmap","SYS_mprotect","SYS_munmap","SYS_brk","SYS_rt_sigaction","SYS_rt_sigprocmask","SYS_rt_sigreturn","SYS_ioctl","SYS_pread64","SYS_pwrite64","SYS_readv","SYS_writev","SYS_access","SYS_pipe","SYS_select","SYS_sched_yield","SYS_mremap","SYS_msync","SYS_mincore","SYS_madvise","SYS_shmget","SYS_shmat","SYS_shmctl","SYS_dup","SYS_dup2","SYS_pause","SYS_nanosleep","SYS_getitimer","SYS_alarm","SYS_setitimer","SYS_getpid","SYS_sendfile","SYS_socket","SYS_connect","SYS_accept","SYS_sendto","SYS_recvfrom","SYS_sendmsg","SYS_recvmsg","SYS_shutdown","SYS_bind","SYS_listen","SYS_getsockname","SYS_getpeername","SYS_socketpair","SYS_setsockopt","SYS_getsockopt","SYS_clone","SYS_fork","SYS_vfork","SYS_execve","SYS_exit","SYS_wait4","SYS_kill","SYS_uname","SYS_semget","SYS_semop","SYS_semctl","SYS_shmdt","SYS_msgget","SYS_msgsnd","SYS_msgrcv","SYS_msgctl","SYS_fcntl","SYS_flock","SYS_fsync","SYS_fdatasync","SYS_truncate","SYS_ftruncate","SYS_getdents","SYS_getcwd","SYS_chdir","SYS_fchdir","SYS_rename","SYS_mkdir","SYS_rmdir","SYS_creat","SYS_link","SYS_unlink","SYS_symlink","SYS_readlink","SYS_chmod","SYS_fchmod","SYS_chown","SYS_fchown","SYS_lchown","SYS_umask","SYS_gettimeofday","SYS_getrlimit","SYS_getrusage","SYS_sysinfo","SYS_times","SYS_ptrace","SYS_getuid","SYS_syslog","SYS_getgid","SYS_setuid","SYS_setgid","SYS_geteuid","SYS_getegid","SYS_setpgid","SYS_getppid","SYS_getpgrp","SYS_setsid","SYS_setreuid","SYS_setregid","SYS_getgroups","SYS_setgroups","SYS_setresuid","SYS_getresuid","SYS_setresgid","SYS_getresgid","SYS_getpgid","SYS_setfsuid","SYS_setfsgid","SYS_getsid","SYS_capget","SYS_capset","SYS_rt_sigpending","SYS_rt_sigtimedwait","SYS_rt_sigqueueinfo","SYS_rt_sigsuspend","SYS_sigaltstack","SYS_utime","SYS_mknod","SYS_uselib","SYS_personality","SYS_ustat","SYS_statfs","SYS_fstatfs","SYS_sysfs","SYS_getpriority","SYS_setpriority","SYS_sched_setparam","SYS_sched_getparam","SYS_sched_setscheduler","SYS_sched_getscheduler","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_rr_get_interval","SYS_mlock","SYS_munlock","SYS_mlockall","SYS_munlockall","SYS_vhangup","SYS_modify_ldt","SYS_pivot_root","SYS__sysctl","SYS_prctl","SYS_arch_prctl","SYS_adjtimex","SYS_setrlimit","SYS_chroot","SYS_sync","SYS_acct","SYS_settimeofday","SYS_mount","SYS_umount2","SYS_swapon","SYS_swapoff","SYS_reboot","SYS_sethostname","SYS_setdomainname","SYS_iopl","SYS_ioperm","SYS_create_module","SYS_init_module","SYS_delete_module","SYS_get_kernel_syms","SYS_query_module","SYS_quotactl","SYS_nfsservctl","SYS_getpmsg","SYS_putpmsg","SYS_afs_syscall","SYS_tuxcall","SYS_security","SYS_gettid","SYS_readahead","SYS_setxattr","SYS_lsetxattr","SYS_fsetxattr","SYS_getxattr","SYS_lgetxattr","SYS_fgetxattr","SYS_listxattr","SYS_llistxattr","SYS_flistxattr","SYS_removexattr","SYS_lremovexattr","SYS_fremovexattr","SYS_tkill","SYS_time","SYS_futex","SYS_sched_setaffinity","SYS_sched_getaffinity","SYS_set_thread_area","SYS_io_setup","SYS_io_destroy","SYS_io_getevents","SYS_io_submit","SYS_io_cancel","SYS_get_thread_area","SYS_lookup_dcookie","SYS_epoll_create","SYS_epoll_ctl_old","SYS_epoll_wait_old","SYS_remap_file_pages","SYS_getdents64","SYS_set_tid_address","SYS_restart_syscall","SYS_semtimedop","SYS_fadvise64","SYS_timer_create","SYS_timer_settime","SYS_timer_gettime","SYS_timer_getoverrun","SYS_timer_delete","SYS_clock_settime","SYS_clock_gettime","SYS_clock_getres","SYS_clock_nanosleep","SYS_exit_group","SYS_epoll_wait","SYS_epoll_ctl","SYS_tgkill","SYS_utimes","SYS_vserver","SYS_mbind","SYS_set_mempolicy","SYS_get_mempolicy","SYS_mq_open","SYS_mq_unlink","SYS_mq_timedsend","SYS_mq_timedreceive","SYS_mq_notify","SYS_mq_getsetattr","SYS_kexec_load","SYS_waitid","SYS_add_key","SYS_request_key","SYS_keyctl","SYS_ioprio_set","SYS_ioprio_get","SYS_inotify_init","SYS_inotify_add_watch","SYS_inotify_rm_watch","SYS_migrate_pages","SYS_openat","SYS_mkdirat","SYS_mknodat","SYS_fchownat","SYS_futimesat","SYS_newfstatat","SYS_unlinkat","SYS_renameat","SYS_linkat","SYS_symlinkat","SYS_readlinkat","SYS_fchmodat","SYS_faccessat","SYS_pselect6","SYS_ppoll","SYS_unshare","SYS_set_robust_list","SYS_get_robust_list","SYS_splice","SYS_tee","SYS_sync_file_range","SYS_vmsplice","SYS_move_pages","SYS_utimensat","SYS_epoll_pwait","SYS_signalfd","SYS_timerfd_create","SYS_eventfd","SYS_fallocate","SYS_timerfd_settime","SYS_timerfd_gettime","SYS_accept4","SYS_signalfd4","SYS_eventfd2","SYS_epoll_create1","SYS_dup3","SYS_pipe2","SYS_inotify_init1","SYS_preadv","SYS_pwritev","SYS_rt_tgsigqueueinfo","SYS_perf_event_open","SYS_recvmmsg","SYS_fanotify_init","SYS_fanotify_mark","SYS_prlimit64","SYS_name_to_handle_at","SYS_open_by_handle_at","SYS_clock_adjtime","SYS_syncfs","SYS_sendmmsg","SYS_setns","SYS_getcpu","SYS_process_vm_readv","SYS_process_vm_writev","SYS_kcmp","SYS_finit_module","SYS_sched_setattr","SYS_sched_getattr","SYS_renameat2","SYS_seccomp","SYS_getrandom","SYS_memfd_create","SYS_kexec_file_load","SYS_bpf","SYS_execveat","SYS_userfaultfd","SYS_membarrier","SYS_mlock2","SYS_copy_file_range","SYS_preadv2","SYS_pwritev2","SYS_pkey_mprotect","SYS_pkey_alloc","SYS_pkey_free","SYS_statx","SYS_pidfd_send_signal","SYS_io_uring_setup","SYS_io_uring_enter","SYS_io_uring_register","SYS_open_tree","SYS_move_mount","SYS_fsopen","SYS_fsconfig","SYS_fsmount","SYS_fspick","SYS_pidfd_open","SYS_clone3","SYS_close_range","SYS_openat2","SYS_pidfd_getfd","SYS_faccessat2","SYS_process_madvise","SYS_epoll_pwait2","SYS_mount_setattr","max_align_t","sem_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","fanotify_event_metadata","event_len","vers","reserved","metadata_len","mask","fd","pid","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","can_frame","can_id","can_dlc","data","canfd_frame","can_id","len","flags","data","c_void","in6_addr","s6_addr","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","si_addr","si_value","si_pid","si_uid","si_status","si_utime","si_stime"],"q":["libcdhe 64-bit libc on Solaris and illumos only has …op-by-hop option header","group mgmt protocol","for compatibility","exterior gateway protocol","pup","xns idp","tp-4 w/ class negotiation","DCCP","IP6 routing header","IP6 fragmentation header","resource reservation","General Routing Encap.","IP6 Encap Sec. Payload","IP6 Auth Header","IP6 no next header","IP6 destination option","","encapsulation header","Protocol indep. multicast","IP Payload Comp. Protocol","SCTP","","","raw IP packethe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multipathmaximum number of services provided on the same listening …quivalent to C’s <code>void</code> type when used as a [pointeri":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,3,3,0,4,4,0,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,0,8,8,8,8,8,0,9,9,0,10,10,10,0,11,11,11,11,0,12,12,0,13,0,14,14,0,15,15,15,15,0,16,16,16,16,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,19,19,0,20,20,20,0,21,21,0,22,22,22,22,0,23,23,23,23,23,0,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,0,0,26,26,26,26,26,26,26,26,26,26,26,0,27,0,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,0,31,31,31,31,31,31,31,0,0,32,32,32,32,32,0,33,33,33,33,0,34,34,34,34,34,0,35,35,0,36,36,0,37,37,0,38,0,39,39,39,39,39,39,0,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,0,42,42,42,42,0,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,0,0,48,48,48,48,0,0,49,49,0,50,50,50,50,50,50,50,50,0,51,51,51,0,52,52,52,52,0,53,53,53,53,0,54,54,54,54,54,54,0,55,55,55,55,55,0,56,56,56,0,57,57,0,58,58,0,59,59,59,59,0,60,60,0,61,61,61,0,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,0,64,64,0,65,65,65,65,65,65,0,66,66,66,66,0,67,67,67,0,68,68,0,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,0,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,77,77,0,78,78,78,0,79,79,79,79,79,79,0,0,0,80,80,80,0,81,81,0,82,82,82,82,82,82,0,83,83,83,83,0,84,84,0,85,85,85,85,85,0,86,86,0,87,87,87,87,87,87,87,0,88,88,0,89,89,89,0,90,90,0,91,91,91,0,92,92,92,92,92,0,93,93,93,93,93,0,94,94,94,94,94,0,95,95,95,0,96,96,96,96,96,96,96,0,97,97,0,98,98,98,98,0,99,99,0,100,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,0,103,103,103,103,103,103,103,0,104,104,0,105,105,0,106,106,106,106,0,107,107,107,107,107,107,107,0,108,108,108,0,109,109,109,109,109,109,109,109,0,110,110,110,110,110,110,110,110,110,110,0,111,111,111,111,111,0,112,112,0,113,0,114,114,114,114,0,115,115,115,115,115,115,0,116,116,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,119,119,119,119,119,119,119,119,0,0,120,120,120,120,0,121,121,121,0,122,122,122,122,122,122,122,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,125,125,125,125,0,126,126,126,126,126,126,126,126,126,126,0,127,127,127,127,127,0,128,128,128,128,128,0,129,129,129,0,130,130,130,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,133,133,133,133,133,133,133,133,133,133,133,133,0,134,134,134,134,134,134,134,134,134,134,134,0,0,135,135,0,136,0,137,137,137,137,137,137,137,137,137,137,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,140,140,0,141,141,141,141,141,141,141,0,142,142,142,142,142,142,142,142,0,143,143,143,143,143,143,143,143,0,144,144,144,0,145,145,145,145,145,145,145,145,145,145,0,146,146,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,147,147,147,147,147,147,147,147,147,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,148,148,148,148,148,148,0,0,0,0,149,149,149,0,150,150,150,150,0,0,151,147,147,147,147,147,147,147,152,152,152,152,152,152,152,125,125,125,125,125,125,125,126,126,126,126,126,126,126,127,127,127,127,127,127,127,128,128,128,128,128,128,128,129,129,129,129,129,129,129,130,130,130,130,130,130,130,131,131,131,131,131,131,131,132,132,132,132,132,132,132,133,133,133,133,133,133,133,134,134,134,134,134,134,134,153,153,153,153,153,153,153,135,135,135,135,135,135,135,136,136,136,136,136,136,136,137,137,137,137,137,137,137,138,138,138,138,138,138,138,139,139,139,139,139,139,139,140,140,140,140,140,140,140,141,141,141,141,141,141,141,142,142,142,142,142,142,142,143,143,143,143,143,143,143,144,144,144,144,144,144,144,145,145,145,145,145,145,145,146,146,146,146,146,146,146,154,154,154,154,154,154,154,123,123,123,123,123,123,123,124,124,124,124,124,124,124,155,155,155,155,155,155,155,101,101,101,101,101,101,101,102,102,102,102,102,102,102,103,103,103,103,103,103,103,104,104,104,104,104,104,104,105,105,105,105,105,105,105,106,106,106,106,106,106,106,107,107,107,107,107,107,107,108,108,108,108,108,108,108,109,109,109,109,109,109,109,110,110,110,110,110,110,110,111,111,111,111,111,111,111,112,112,112,112,112,112,112,113,113,113,113,113,113,113,114,114,114,114,114,114,114,115,115,115,115,115,115,115,116,116,116,116,116,116,116,117,117,117,117,117,117,117,118,118,118,118,118,118,118,119,119,119,119,119,119,119,156,156,156,156,156,156,156,120,120,120,120,120,120,120,121,121,121,121,121,121,121,122,122,122,122,122,122,122,157,157,157,157,157,157,157,41,41,41,41,41,41,41,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,158,158,158,158,158,158,158,48,48,48,48,48,48,48,159,159,159,159,159,159,159,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,56,56,56,56,56,56,56,57,57,57,57,57,57,57,58,58,58,58,58,58,58,59,59,59,59,59,59,59,60,60,60,60,60,60,60,61,61,61,61,61,61,61,62,62,62,62,62,62,62,63,63,63,63,63,63,63,64,64,64,64,64,64,64,65,65,65,65,65,65,65,66,66,66,66,66,66,66,67,67,67,67,67,67,67,68,68,68,68,68,68,68,69,69,69,69,69,69,69,70,70,70,70,70,70,70,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,74,74,74,74,74,74,74,75,75,75,75,75,75,75,76,76,76,76,76,76,76,77,77,77,77,77,77,77,78,78,78,78,78,78,78,79,79,79,79,79,79,79,160,160,160,160,160,160,160,161,161,161,161,161,161,161,80,80,80,80,80,80,80,81,81,81,81,81,81,81,82,82,82,82,82,82,82,83,83,83,83,83,83,83,84,84,84,84,84,84,84,85,85,85,85,85,85,85,86,86,86,86,86,86,86,87,87,87,87,87,87,87,88,88,88,88,88,88,88,89,89,89,89,89,89,89,90,90,90,90,90,90,90,91,91,91,91,91,91,91,92,92,92,92,92,92,92,93,93,93,93,93,93,93,94,94,94,94,94,94,94,95,95,95,95,95,95,95,96,96,96,96,96,96,96,97,97,97,97,97,97,97,98,98,98,98,98,98,98,99,99,99,99,99,99,99,100,100,100,100,100,100,100,162,162,162,162,162,162,162,163,163,163,163,163,163,163,164,164,164,164,164,164,164,148,148,148,148,148,148,148,165,165,165,165,165,165,165,166,166,166,166,166,166,166,167,167,167,167,167,167,167,149,149,149,149,149,149,149,150,150,150,150,150,150,150,168,168,168,168,168,168,168,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,169,169,169,169,169,169,169,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,170,170,170,170,170,170,170,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,151,151,151,151,151,151,151,171,171,171,171,171,171,171,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,172,172,172,172,172,172,172,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,171,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,172,173,168,18,19,20,21,22,23,24,25,169,26,27,28,29,30,31,170,32,33,34,35,36,37,38,39,40,157,41,42,43,44,45,46,47,158,48,159,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,160,161,80,81,82,83,84,85,86,87,88,89,90,91,92,93,165,166,167,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,156,120,121,122,154,123,124,125,126,127,128,129,130,131,132,133,134,153,135,136,137,138,139,140,141,142,143,144,145,146,147,155,162,163,164,148,151,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,169,169,26,26,27,27,28,28,29,29,30,30,31,31,170,170,32,32,33,33,34,34,35,35,36,37,38,39,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,158,158,48,48,159,159,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,160,160,161,161,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,92,93,165,166,167,94,95,96,97,98,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,156,156,120,120,121,121,122,154,154,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,153,153,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,146,147,147,155,155,162,162,163,163,164,164,148,148,151,151,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,169,26,27,28,29,30,31,170,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,158,48,159,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,160,161,80,81,82,83,84,85,86,87,88,89,90,91,92,93,165,166,167,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,156,120,121,122,154,123,124,125,126,127,128,129,130,131,132,133,134,153,135,136,137,138,139,140,141,142,143,144,145,146,147,155,162,163,164,148,151,171,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,172,173,168,18,19,20,21,22,23,24,25,169,26,27,28,29,30,31,170,32,33,34,35,36,37,38,39,40,157,41,42,43,44,45,46,47,158,48,159,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,160,161,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,156,120,121,122,154,123,124,125,126,127,128,129,130,131,132,133,134,153,135,136,137,138,139,140,141,142,143,144,145,146,147,152,155,162,163,164,148,165,166,167,149,150,151,129,129,129,129,129,129,129],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["c_uint",6]],["c_uint",6]],[[["c_uint",6]],["c_uint",6]],[[["c_int",6]]],[[["c_int",6]],["bool",15]],[[["c_int",6]]],[[]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["bool",15]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["c_int",6]],["c_int",6]],[[]],[[["c_int",6]],["size_t",6]],[[["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]]],[[["usize",15],["cpu_set_t",3]],["bool",15]],[[["usize",15],["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3]],["c_int",6]],[[["cpu_set_t",3]],["bool",15]],[[["dev_t",6]],["c_uint",6]],[[["dev_t",6]],["c_uint",6]],[[["c_uint",6]],["dev_t",6]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u8",15]],["u8",15]],[[["u32",15]],["u32",15]],[[["u32",15]],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["group",3]],["bool",15]],[[["group",3]],["bool",15]],[[["utimbuf",3]],["bool",15]],[[["utimbuf",3]],["bool",15]],[[["timeval",3]],["bool",15]],[[["timeval",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["rlimit",3]],["bool",15]],[[["rlimit",3]],["bool",15]],[[["rusage",3]],["bool",15]],[[["rusage",3]],["bool",15]],[[["ipv6_mreq",3]],["bool",15]],[[["ipv6_mreq",3]],["bool",15]],[[["hostent",3]],["bool",15]],[[["hostent",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["pollfd",3]],["bool",15]],[[["pollfd",3]],["bool",15]],[[["winsize",3]],["bool",15]],[[["winsize",3]],["bool",15]],[[["linger",3]],["bool",15]],[[["linger",3]],["bool",15]],[[["sigval",3]],["bool",15]],[[["sigval",3]],["bool",15]],[[["itimerval",3]],["bool",15]],[[["itimerval",3]],["bool",15]],[[["tms",3]],["bool",15]],[[["tms",3]],["bool",15]],[[["servent",3]],["bool",15]],[[["servent",3]],["bool",15]],[[["protoent",3]],["bool",15]],[[["protoent",3]],["bool",15]],[[["in_addr",3]],["bool",15]],[[["in_addr",3]],["bool",15]],[[["ip_mreq",3]],["bool",15]],[[["ip_mreq",3]],["bool",15]],[[["ip_mreq_source",3]],["bool",15]],[[["ip_mreq_source",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["sockaddr_in",3]],["bool",15]],[[["sockaddr_in",3]],["bool",15]],[[["sockaddr_in6",3]],["bool",15]],[[["sockaddr_in6",3]],["bool",15]],[[["addrinfo",3]],["bool",15]],[[["addrinfo",3]],["bool",15]],[[["sockaddr_ll",3]],["bool",15]],[[["sockaddr_ll",3]],["bool",15]],[[["fd_set",3]],["bool",15]],[[["fd_set",3]],["bool",15]],[[["tm",3]],["bool",15]],[[["tm",3]],["bool",15]],[[["sched_param",3]],["bool",15]],[[["sched_param",3]],["bool",15]],[[["dl_info",3]],["bool",15]],[[["dl_info",3]],["bool",15]],[[["lconv",3]],["bool",15]],[[["lconv",3]],["bool",15]],[[["in_pktinfo",3]],["bool",15]],[[["in_pktinfo",3]],["bool",15]],[[["ifaddrs",3]],["bool",15]],[[["ifaddrs",3]],["bool",15]],[[["in6_rtmsg",3]],["bool",15]],[[["in6_rtmsg",3]],["bool",15]],[[["arpreq",3]],["bool",15]],[[["arpreq",3]],["bool",15]],[[["arpreq_old",3]],["bool",15]],[[["arpreq_old",3]],["bool",15]],[[["arphdr",3]],["bool",15]],[[["arphdr",3]],["bool",15]],[[["mmsghdr",3]],["bool",15]],[[["mmsghdr",3]],["bool",15]],[[["epoll_event",3]],["bool",15]],[[["sockaddr_un",3]],["bool",15]],[[["sockaddr_storage",3]],["bool",15]],[[["utsname",3]],["bool",15]],[[["sigevent",3]],["bool",15]],[[["rlimit64",3]],["bool",15]],[[["rlimit64",3]],["bool",15]],[[["glob_t",3]],["bool",15]],[[["glob_t",3]],["bool",15]],[[["passwd",3]],["bool",15]],[[["passwd",3]],["bool",15]],[[["spwd",3]],["bool",15]],[[["spwd",3]],["bool",15]],[[["dqblk",3]],["bool",15]],[[["dqblk",3]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[["itimerspec",3]],["bool",15]],[[["itimerspec",3]],["bool",15]],[[["fsid_t",3]],["bool",15]],[[["fsid_t",3]],["bool",15]],[[["packet_mreq",3]],["bool",15]],[[["packet_mreq",3]],["bool",15]],[[["cpu_set_t",3]],["bool",15]],[[["cpu_set_t",3]],["bool",15]],[[["if_nameindex",3]],["bool",15]],[[["if_nameindex",3]],["bool",15]],[[["msginfo",3]],["bool",15]],[[["msginfo",3]],["bool",15]],[[["sembuf",3]],["bool",15]],[[["sembuf",3]],["bool",15]],[[["input_event",3]],["bool",15]],[[["input_event",3]],["bool",15]],[[["input_id",3]],["bool",15]],[[["input_id",3]],["bool",15]],[[["input_absinfo",3]],["bool",15]],[[["input_absinfo",3]],["bool",15]],[[["input_keymap_entry",3]],["bool",15]],[[["input_keymap_entry",3]],["bool",15]],[[["input_mask",3]],["bool",15]],[[["input_mask",3]],["bool",15]],[[["ff_replay",3]],["bool",15]],[[["ff_replay",3]],["bool",15]],[[["ff_trigger",3]],["bool",15]],[[["ff_trigger",3]],["bool",15]],[[["ff_envelope",3]],["bool",15]],[[["ff_envelope",3]],["bool",15]],[[["ff_constant_effect",3]],["bool",15]],[[["ff_constant_effect",3]],["bool",15]],[[["ff_ramp_effect",3]],["bool",15]],[[["ff_ramp_effect",3]],["bool",15]],[[["ff_condition_effect",3]],["bool",15]],[[["ff_condition_effect",3]],["bool",15]],[[["ff_periodic_effect",3]],["bool",15]],[[["ff_periodic_effect",3]],["bool",15]],[[["ff_rumble_effect",3]],["bool",15]],[[["ff_rumble_effect",3]],["bool",15]],[[["ff_effect",3]],["bool",15]],[[["ff_effect",3]],["bool",15]],[[["uinput_ff_upload",3]],["bool",15]],[[["uinput_ff_upload",3]],["bool",15]],[[["uinput_ff_erase",3]],["bool",15]],[[["uinput_ff_erase",3]],["bool",15]],[[["uinput_abs_setup",3]],["bool",15]],[[["uinput_abs_setup",3]],["bool",15]],[[["dl_phdr_info",3]],["bool",15]],[[["dl_phdr_info",3]],["bool",15]],[[["elf32_ehdr",3]],["bool",15]],[[["elf32_ehdr",3]],["bool",15]],[[["elf64_ehdr",3]],["bool",15]],[[["elf64_ehdr",3]],["bool",15]],[[["elf32_sym",3]],["bool",15]],[[["elf32_sym",3]],["bool",15]],[[["elf64_sym",3]],["bool",15]],[[["elf64_sym",3]],["bool",15]],[[["elf32_phdr",3]],["bool",15]],[[["elf32_phdr",3]],["bool",15]],[[["elf64_phdr",3]],["bool",15]],[[["elf64_phdr",3]],["bool",15]],[[["elf32_shdr",3]],["bool",15]],[[["elf32_shdr",3]],["bool",15]],[[["elf64_shdr",3]],["bool",15]],[[["elf64_shdr",3]],["bool",15]],[[["ucred",3]],["bool",15]],[[["ucred",3]],["bool",15]],[[["mntent",3]],["bool",15]],[[["mntent",3]],["bool",15]],[[["posix_spawn_file_actions_t",3]],["bool",15]],[[["posix_spawn_file_actions_t",3]],["bool",15]],[[["posix_spawnattr_t",3]],["bool",15]],[[["posix_spawnattr_t",3]],["bool",15]],[[["genlmsghdr",3]],["bool",15]],[[["genlmsghdr",3]],["bool",15]],[[["in6_pktinfo",3]],["bool",15]],[[["in6_pktinfo",3]],["bool",15]],[[["arpd_request",3]],["bool",15]],[[["arpd_request",3]],["bool",15]],[[["inotify_event",3]],["bool",15]],[[["inotify_event",3]],["bool",15]],[[["fanotify_response",3]],["bool",15]],[[["fanotify_response",3]],["bool",15]],[[["sockaddr_vm",3]],["bool",15]],[[["sockaddr_vm",3]],["bool",15]],[[["regmatch_t",3]],["bool",15]],[[["regmatch_t",3]],["bool",15]],[[["sock_extended_err",3]],["bool",15]],[[["sock_extended_err",3]],["bool",15]],[[["__c_anonymous_sockaddr_can_tp",3]],["bool",15]],[[["__c_anonymous_sockaddr_can_tp",3]],["bool",15]],[[["__c_anonymous_sockaddr_can_j1939",3]],["bool",15]],[[["__c_anonymous_sockaddr_can_j1939",3]],["bool",15]],[[["can_filter",3]],["bool",15]],[[["can_filter",3]],["bool",15]],[[["sockaddr_nl",3]],["bool",15]],[[["dirent",3]],["bool",15]],[[["dirent64",3]],["bool",15]],[[["pthread_cond_t",3]],["bool",15]],[[["pthread_mutex_t",3]],["bool",15]],[[["pthread_rwlock_t",3]],["bool",15]],[[["sockaddr_alg",3]],["bool",15]],[[["uinput_setup",3]],["bool",15]],[[["uinput_user_dev",3]],["bool",15]],[[["af_alg_iv",3]],["bool",15]],[[["mq_attr",3]],["bool",15]],[[["statx",3]],["bool",15]],[[["statx",3]],["bool",15]],[[["statx_timestamp",3]],["bool",15]],[[["statx_timestamp",3]],["bool",15]],[[["aiocb",3]],["bool",15]],[[["aiocb",3]],["bool",15]],[[["__exit_status",3]],["bool",15]],[[["__exit_status",3]],["bool",15]],[[["__timeval",3]],["bool",15]],[[["__timeval",3]],["bool",15]],[[["glob64_t",3]],["bool",15]],[[["glob64_t",3]],["bool",15]],[[["msghdr",3]],["bool",15]],[[["msghdr",3]],["bool",15]],[[["cmsghdr",3]],["bool",15]],[[["cmsghdr",3]],["bool",15]],[[["termios",3]],["bool",15]],[[["termios",3]],["bool",15]],[[["mallinfo",3]],["bool",15]],[[["mallinfo",3]],["bool",15]],[[["nlmsghdr",3]],["bool",15]],[[["nlmsghdr",3]],["bool",15]],[[["nlmsgerr",3]],["bool",15]],[[["nlmsgerr",3]],["bool",15]],[[["nl_pktinfo",3]],["bool",15]],[[["nl_pktinfo",3]],["bool",15]],[[["nl_mmap_req",3]],["bool",15]],[[["nl_mmap_req",3]],["bool",15]],[[["nl_mmap_hdr",3]],["bool",15]],[[["nl_mmap_hdr",3]],["bool",15]],[[["nlattr",3]],["bool",15]],[[["nlattr",3]],["bool",15]],[[["rtentry",3]],["bool",15]],[[["rtentry",3]],["bool",15]],[[["timex",3]],["bool",15]],[[["timex",3]],["bool",15]],[[["ntptimeval",3]],["bool",15]],[[["ntptimeval",3]],["bool",15]],[[["regex_t",3]],["bool",15]],[[["regex_t",3]],["bool",15]],[[["elf64_chdr",3]],["bool",15]],[[["elf64_chdr",3]],["bool",15]],[[["elf32_chdr",3]],["bool",15]],[[["elf32_chdr",3]],["bool",15]],[[["utmpx",3]],["bool",15]],[[["sigset_t",3]],["bool",15]],[[["sigset_t",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["msqid_ds",3]],["bool",15]],[[["msqid_ds",3]],["bool",15]],[[["sigaction",3]],["bool",15]],[[["sigaction",3]],["bool",15]],[[["statfs",3]],["bool",15]],[[["statfs",3]],["bool",15]],[[["flock",3]],["bool",15]],[[["flock",3]],["bool",15]],[[["flock64",3]],["bool",15]],[[["flock64",3]],["bool",15]],[[["siginfo_t",3]],["bool",15]],[[["siginfo_t",3]],["bool",15]],[[["stack_t",3]],["bool",15]],[[["stack_t",3]],["bool",15]],[[["stat",3]],["bool",15]],[[["stat",3]],["bool",15]],[[["stat64",3]],["bool",15]],[[["stat64",3]],["bool",15]],[[["statfs64",3]],["bool",15]],[[["statfs64",3]],["bool",15]],[[["statvfs64",3]],["bool",15]],[[["statvfs64",3]],["bool",15]],[[["pthread_attr_t",3]],["bool",15]],[[["pthread_attr_t",3]],["bool",15]],[[["_libc_fpxreg",3]],["bool",15]],[[["_libc_fpxreg",3]],["bool",15]],[[["_libc_xmmreg",3]],["bool",15]],[[["_libc_xmmreg",3]],["bool",15]],[[["_libc_fpstate",3]],["bool",15]],[[["_libc_fpstate",3]],["bool",15]],[[["user_regs_struct",3]],["bool",15]],[[["user_regs_struct",3]],["bool",15]],[[["user",3]],["bool",15]],[[["user",3]],["bool",15]],[[["mcontext_t",3]],["bool",15]],[[["mcontext_t",3]],["bool",15]],[[["ipc_perm",3]],["bool",15]],[[["ipc_perm",3]],["bool",15]],[[["shmid_ds",3]],["bool",15]],[[["shmid_ds",3]],["bool",15]],[[["termios2",3]],["bool",15]],[[["termios2",3]],["bool",15]],[[["ip_mreqn",3]],["bool",15]],[[["ip_mreqn",3]],["bool",15]],[[["user_fpregs_struct",3]],["bool",15]],[[["ucontext_t",3]],["bool",15]],[[["statvfs",3]],["bool",15]],[[["statvfs",3]],["bool",15]],[[["sem_t",3]],["bool",15]],[[["sem_t",3]],["bool",15]],[[["pthread_mutexattr_t",3]],["bool",15]],[[["pthread_mutexattr_t",3]],["bool",15]],[[["pthread_rwlockattr_t",3]],["bool",15]],[[["pthread_rwlockattr_t",3]],["bool",15]],[[["pthread_condattr_t",3]],["bool",15]],[[["pthread_condattr_t",3]],["bool",15]],[[["fanotify_event_metadata",3]],["bool",15]],[[["fanotify_event_metadata",3]],["bool",15]],[[["in6_addr",3]],["bool",15]],[[["in6_addr",3]],["booldir",4]],[[],["group",3]],[[],["utimbuf",3]],[[],["timeval",3]],[[],["timespec",3]],[[],["rlimit",3]],[[],["rusage",3]],[[],["ipv6_mreq",3]],[[],["hostent",3]],[[],["iovec",3]],[[],["pollfd",3]],[[],["winsize",3]],[[],["linger",3]],[[],["sigval",3]],[[],["itimerval",3]],[[],["tms",3]],[[],["servent",3]],[[],["protoent",3]],[[],["file",4]],[[],["fpos_t",4]],[[],["timezone",4]],[[],["in_addr",3]],[[],["ip_mreq",3]],[[],["ip_mreq_source",3]],[[],["sockaddr",3]],[[],["sockaddr_in",3]],[[],["sockaddr_in6",3]],[[],["addrinfo",3]],[[],["sockaddr_ll",3]],[[],["fd_set",3]],[[],["tm",3]],[[],["sched_param",3]],[[],["dl_info",3]],[[],["lconv",3]],[[],["in_pktinfo",3]],[[],["ifaddrs",3]],[[],["in6_rtmsg",3]],[[],["arpreq",3]],[[],["arpreq_old",3]],[[],["arphdr",3]],[[],["mmsghdr",3]],[[],["epoll_event",3]],[[],["sockaddr_un",3]],[[],["sockaddr_storage",3]],[[],["utsname",3]],[[],["sigevent",3]],[[],["fpos64_t",4]],[[],["rlimit64",3]],[[],["glob_t",3]],[[],["passwd",3]],[[],["spwd",3]],[[],["dqblk",3]],[[],["signalfd_siginfo",3]],[[],["itimerspec",3]],[[],["fsid_t",3]],[[],["packet_mreq",3]],[[],["cpu_set_t",3]],[[],["if_nameindex",3]],[[],["msginfo",3]],[[],["sembuf",3]],[[],["input_event",3]],[[],["input_id",3]],[[],["input_absinfo",3]],[[],["input_keymap_entry",3]],[[],["input_mask",3]],[[],["ff_replay",3]],[[],["ff_trigger",3]],[[],["ff_envelope",3]],[[],["ff_constant_effect",3]],[[],["ff_ramp_effect",3]],[[],["ff_condition_effect",3]],[[],["ff_periodic_effect",3]],[[],["ff_rumble_effect",3]],[[],["ff_effect",3]],[[],["uinput_ff_upload",3]],[[],["uinput_ff_erase",3]],[[],["uinput_abs_setup",3]],[[],["dl_phdr_info",3]],[[],["elf32_ehdr",3]],[[],["elf64_ehdr",3]],[[],["elf32_sym",3]],[[],["elf64_sym",3]],[[],["elf32_phdr",3]],[[],["elf64_phdr",3]],[[],["elf32_shdr",3]],[[],["elf64_shdr",3]],[[],["ucred",3]],[[],["mntent",3]],[[],["posix_spawn_file_actions_t",3]],[[],["posix_spawnattr_t",3]],[[],["genlmsghdr",3]],[[],["in6_pktinfo",3]],[[],["arpd_request",3]],[[],["inotify_event",3]],[[],["fanotify_response",3]],[[],["sockaddr_vm",3]],[[],["regmatch_t",3]],[[],["sock_extended_err",3]],[[],["__c_anonymous_sockaddr_can_tp",3]],[[],["__c_anonymous_sockaddr_can_j1939",3]],[[],["can_filter",3]],[[],["sockaddr_nl",3]],[[],["dirent",3]],[[],["dirent64",3]],[[],["sockaddr_alg",3]],[[],["uinput_setup",3]],[[],["uinput_user_dev",3]],[[],["af_alg_iv",3]],[[],["mq_attr",3]],[[],["__c_anonymous_sockaddr_can_can_addr",19]],[[],["sockaddr_can",3]],[[],["statx",3]],[[],["statx_timestamp",3]],[[],["aiocb",3]],[[],["__exit_status",3]],[[],["__timeval",3]],[[],["glob64_t",3]],[[],["msghdr",3]],[[],["cmsghdr",3]],[[],["termios",3]],[[],["mallinfo",3]],[[],["nlmsghdr",3]],[[],["nlmsgerr",3]],[[],["nl_pktinfo",3]],[[],["nl_mmap_req",3]],[[],["nl_mmap_hdr",3]],[[],["nlattr",3]],[[],["rtentry",3]],[[],["timex",3]],[[],["ntptimeval",3]],[[],["regex_t",3]],[[],["elf64_chdr",3]],[[],["elf32_chdr",3]],[[],["utmpx",3]],[[],["sigset_t",3]],[[],["sysinfo",3]],[[],["msqid_ds",3]],[[],["sigaction",3]],[[],["statfs",3]],[[],["flock",3]],[[],["flock64",3]],[[],["siginfo_t",3]],[[],["stack_t",3]],[[],["stat",3]],[[],["stat64",3]],[[],["statfs64",3]],[[],["statvfs64",3]],[[],["pthread_attr_t",3]],[[],["_libc_fpxreg",3]],[[],["_libc_xmmreg",3]],[[],["_libc_fpstate",3]],[[],["user_regs_struct",3]],[[],["user",3]],[[],["mcontext_t",3]],[[],["ipc_perm",3]],[[],["shmid_ds",3]],[[],["termios2",3]],[[],["ip_mreqn",3]],[[],["user_fpregs_struct",3]],[[],["ucontext_t",3]],[[],["statvfs",3]],[[],["max_align_t",3]],[[],["sem_t",3]],[[],["pthread_mutexattr_t",3]],[[],["pthread_rwlockattr_t",3]],[[],["pthread_condattr_t",3]],[[],["fanotify_event_metadata",3]],[[],["pthread_cond_t",3]],[[],["pthread_mutex_t",3]],[[],["pthread_rwlock_t",3]],[[],["can_frame",3]],[[],["canfd_frame",3]],[[],["in6_addr",3]],[[]],[[],["sigval",3]],[[],["pid_t",6]],[[],["uid_t",6]],[[],["c_int",6]],[[],["c_long",6]],[[],["c_long",6]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[3,3,8,18,16,10,10,10,11,8,10,11,8,16,16,10,10,3,3,3,8,18,10,3,3,3,3,8,18,16,10,10,10,10,10,10,11,8,10,10,11,11,8,10,8,16,16,10,10,10,10,8,10,10,8,10,10,8,10,10,10,10,10,8,10,11,8,10,10,8,10,10,10,10,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GuardSend","GuardNoSend","RawMutex","INIT","GuardMarker","lock","try_lock","unlock","is_locked","RawMutexFair","unlock_fair","bump","RawMutexTimed","Duration","Instant","try_lock_for","try_lock_until","Mutex","MutexGuard","MappedMutexGuard","GetThreadId","INIT","nonzero_thread_id","RawReentrantMutex","ReentrantMutex","ReentrantMutexGuard","MappedReentrantMutexGuard","RawRwLock","INIT","GuardMarker","lock_shared","try_lock_shared","unlock_shared","lock_exclusive","try_lock_exclusive","unlock_exclusive","is_locked","RawRwLockFair","unlock_shared_fair","unlock_exclusive_fair","bump_shared","bump_exclusive","RawRwLockDowngrade","downgrade","RawRwLockTimed","Duration","Instant","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","RawRwLockRecursive","lock_shared_recursive","try_lock_shared_recursive","RawRwLockRecursiveTimed","try_lock_shared_recursive_for","try_lock_shared_recursive_until","RawRwLockUpgrade","lock_upgradable","try_lock_upgradable","unlock_upgradable","upgrade","try_upgrade","RawRwLockUpgradeFair","unlock_upgradable_fair","bump_upgradable","RawRwLockUpgradeDowngrade","downgrade_upgradable","downgrade_to_upgradable","RawRwLockUpgradeTimed","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade_for","try_upgrade_until","RwLock","RwLockReadGuard","RwLockWriteGuard","RwLockUpgradableReadGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","default","default","default","INIT","is_locked","bump","new","into_inner","const_new","lock","try_lock","get_mut","is_locked","force_unlock","raw","data_ptr","force_unlock_fair","try_lock_for","try_lock_until","mutex","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","map","try_map","unlock_fair","INIT","INIT","lock","try_lock","unlock","is_locked","unlock_fair","bump","try_lock_until","try_lock_for","new","into_inner","const_new","lock","try_lock","get_mut","is_locked","force_unlock","raw","data_ptr","force_unlock_fair","try_lock_for","try_lock_until","remutex","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","map","try_map","unlock_fair","INIT","is_locked","bump_shared","bump_exclusive","bump_upgradable","new","into_inner","const_new","read","try_read","write","try_write","get_mut","is_locked","force_unlock_read","force_unlock_write","raw","data_ptr","force_unlock_read_fair","force_unlock_write_fair","try_read_for","try_read_until","try_write_for","try_write_until","read_recursive","try_read_recursive","try_read_recursive_for","try_read_recursive_until","upgradable_read","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","rwlock","map","try_map","unlocked","unlock_fair","unlocked_fair","bump","rwlock","map","try_map","unlocked","downgrade","downgrade_to_upgradable","unlock_fair","unlocked_fair","bump","rwlock","unlocked","upgrade","try_upgrade","unlock_fair","unlocked_fair","bump","downgrade","try_upgrade_for","try_upgrade_until","map","try_map","unlock_fair","map","try_map","unlock_fair"],"q":["lock_apid":["Marker type which indicates that the Guard type for a …","Marker type which indicates that the Guard type for a …","Basic operations for a mutex.","Initial value for an unlocked mutex.","Marker type which determines whether a lock guard should …","Acquires this mutex, blocking the current thread until it …","Attempts to acquire this mutex without blocking. Returns …","Unlocks this mutex.","Checks whether the mutex is currently locked.","Additional methods for mutexes which support fair …","Unlocks this mutex using a fair unlock protocol.","Temporarily yields the mutex to a waiting thread if there …","Additional methods for mutexes which support locking with …","Duration type used for <code>try_lock_for</code>.","Instant type used for <code>try_lock_until</code>.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …","Helper trait which returns a non-zero thread ID.","Initial value.","Returns a non-zero thread ID which identifies the current …","A raw mutex type that wraps another raw mutex to provide …","A mutex which can be recursively locked by a single …","An RAII implementation of a “scoped lock” of a …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","Basic operations for a reader-writer lock.","Initial value for an unlocked <code>RwLock</code>.","Marker type which determines whether a lock guard should …","Acquires a shared lock, blocking the current thread until …","Attempts to acquire a shared lock without blocking.","Releases a shared lock.","Acquires an exclusive lock, blocking the current thread …","Attempts to acquire an exclusive lock without blocking.","Releases an exclusive lock.","Checks if this <code>RwLock</code> is currently locked in any way.","Additional methods for RwLocks which support fair …","Releases a shared lock using a fair unlock protocol.","Releases an exclusive lock using a fair unlock protocol.","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an exclusive lock to a waiting thread …","Additional methods for RwLocks which support atomically …","Atomically downgrades an exclusive lock into a shared …","Additional methods for RwLocks which support locking with …","Duration type used for <code>try_lock_for</code>.","Instant type used for <code>try_lock_until</code>.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Additional methods for RwLocks which support recursive …","Acquires a shared lock without deadlocking in case of a …","Attempts to acquire a shared lock without deadlocking in …","Additional methods for RwLocks which support recursive …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Additional methods for RwLocks which support atomically …","Acquires an upgradable lock, blocking the current thread …","Attempts to acquire an upgradable lock without blocking.","Releases an upgradable lock.","Upgrades an upgradable lock to an exclusive lock.","Attempts to upgrade an upgradable lock to an exclusive …","Additional methods for RwLocks which support upgradable …","Releases an upgradable lock using a fair unlock protocol.","Temporarily yields an upgradable lock to a waiting thread …","Additional methods for RwLocks which support upgradable …","Downgrades an upgradable lock to a shared lock.","Downgrades an exclusive lock to an upgradable lock.","Additional methods for RwLocks which support upgradable …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to upgrade an upgradable lock to an exclusive …","Attempts to upgrade an upgradable lock to an exclusive …","A reader-writer lock","RAII structure used to release the shared read access of …","RAII structure used to release the exclusive write access …","RAII structure used to release the upgradable read access …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial value for an unlocked mutex.","Checks whether the mutex is currently locked.","Temporarily yields the mutex to a waiting thread if there …","Creates a new mutex in an unlocked state ready for use.","Consumes this mutex, returning the underlying data.","Creates a new mutex based on a pre-existing raw mutex.","Acquires a mutex, blocking the current thread until it is …","Attempts to acquire this lock.","Returns a mutable reference to the underlying data.","Checks whether the mutex is currently locked.","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","Returns a raw pointer to the underlying data.","Forcibly unlocks the mutex using a fair unlock procotol.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Returns a reference to the original <code>Mutex</code> object.","Makes a new <code>MappedMutexGuard</code> for a component of the …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Temporarily unlocks the mutex to execute the given …","Unlocks the mutex using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily yields the mutex to a waiting thread if there …","Makes a new <code>MappedMutexGuard</code> for a component of the …","Attempts to make a new <code>MappedMutexGuard</code> for a component …","Unlocks the mutex using a fair unlock protocol.","Initial value.","Initial value for an unlocked mutex.","Acquires this mutex, blocking if it’s held by another …","Attempts to acquire this mutex without blocking. Returns …","Unlocks this mutex. The inner mutex may not be unlocked if…","Checks whether the mutex is currently locked.","Unlocks this mutex using a fair unlock protocol. The …","Temporarily yields the mutex to a waiting thread if there …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Creates a new reentrant mutex in an unlocked state ready …","Consumes this mutex, returning the underlying data.","Creates a new reentrant mutex based on a pre-existing raw …","Acquires a reentrant mutex, blocking the current thread …","Attempts to acquire this lock.","Returns a mutable reference to the underlying data.","Checks whether the mutex is currently locked.","Forcibly unlocks the mutex.","Returns the underlying raw mutex object.","Returns a raw pointer to the underlying data.","Forcibly unlocks the mutex using a fair unlock protocol.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Returns a reference to the original <code>ReentrantMutex</code> object.","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Temporarily unlocks the mutex to execute the given …","Unlocks the mutex using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily yields the mutex to a waiting thread if there …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Unlocks the mutex using a fair unlock protocol.","Initial value for an unlocked <code>RwLock</code>.","Checks if this <code>RwLock</code> is currently locked in any way.","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new instance of an <code>RwLock<T></code> which is unlocked.","Consumes this <code>RwLock</code>, returning the underlying data.","Creates a new new instance of an <code>RwLock<T></code> based on a …","Locks this <code>RwLock</code> with shared read access, blocking the …","Attempts to acquire this <code>RwLock</code> with shared read access.","Locks this <code>RwLock</code> with exclusive write access, blocking …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Returns a mutable reference to the underlying data.","Checks whether this <code>RwLock</code> is currently locked in any way.","Forcibly unlocks a read lock.","Forcibly unlocks a write lock.","Returns the underlying raw reader-writer lock object.","Returns a raw pointer to the underlying data.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock using a fair unlock …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","Locks this <code>RwLock</code> with shared read access, blocking the …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Returns a reference to the original reader-writer lock …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Returns a reference to the original reader-writer lock …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Atomically downgrades a write lock into a read lock …","Atomically downgrades a write lock into an upgradable …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Returns a reference to the original reader-writer lock …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Atomically upgrades an upgradable read lock lock into a …","Tries to atomically upgrade an upgradable read lock into …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily yields the <code>RwLock</code> to a waiting thread if …","Atomically downgrades an upgradable read lock lock into a …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Unlocks the <code>RwLock</code> using a fair unlock protocol."],"i":[0,0,0,1,1,1,1,1,1,0,2,2,0,3,3,3,3,0,0,0,0,4,4,0,0,0,0,0,5,5,5,5,5,5,5,5,5,0,6,6,6,6,0,7,0,8,8,8,8,8,8,0,9,9,0,10,10,0,11,11,11,11,11,0,12,12,0,13,13,0,14,14,14,14,0,0,0,0,0,0,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,26,26,26,26,26,26,26,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,16,17,20,21,23,24,25,26,27,16,17,24,27,15,16,17,19,20,21,22,23,24,25,26,27,16,17,20,21,23,24,25,26,27,16,17,20,21,23,24,25,26,27,15,19,22,15,19,22,1,1,2,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,4,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,21,21,21,5,5,6,6,12,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,27,27,27],"f":[null,null,null,null,null,[[]],[[],["bool",15]],[[]],[[],["bool",15]],null,[[]],[[]],null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[],["nonzerousize",3]],null,null,null,null,null,null,null,[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],null,[[]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],null,[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],null,[[],["bool",15]],[[]],[[],["mutex",3]],[[]],[[],["mutex",3]],[[],["mutexguard",3]],[[],[["option",4],["mutexguard",3]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["option",4],["mutexguard",3]]],[[],[["option",4],["mutexguard",3]]],[[],["mutex",3]],[[],[["mappedmutexguard",3],["sized",8]]],[[],[["mappedmutexguard",3],["result",4]]],[[]],[[]],[[]],[[]],[[],[["mappedmutexguard",3],["sized",8]]],[[],[["mappedmutexguard",3],["result",4]]],[[]],null,null,[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["reentrantmutex",3]],[[]],[[],["reentrantmutex",3]],[[],["reentrantmutexguard",3]],[[],[["reentrantmutexguard",3],["option",4]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],[["reentrantmutexguard",3],["option",4]]],[[],[["reentrantmutexguard",3],["option",4]]],[[],["reentrantmutex",3]],[[],[["mappedreentrantmutexguard",3],["sized",8]]],[[],[["result",4],["mappedreentrantmutexguard",3]]],[[]],[[]],[[]],[[]],[[],[["mappedreentrantmutexguard",3],["sized",8]]],[[],[["result",4],["mappedreentrantmutexguard",3]]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[],["rwlock",3]],[[],["rwlockreadguard",3]],[[],[["option",4],["rwlockreadguard",3]]],[[],["rwlockwriteguard",3]],[[],[["rwlockwriteguard",3],["option",4]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["rwlockwriteguard",3],["option",4]]],[[],[["rwlockwriteguard",3],["option",4]]],[[],["rwlockreadguard",3]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],[["option",4],["rwlockreadguard",3]]],[[],["rwlockupgradablereadguard",3]],[[],[["option",4],["rwlockupgradablereadguard",3]]],[[],[["option",4],["rwlockupgradablereadguard",3]]],[[],[["option",4],["rwlockupgradablereadguard",3]]],[[],["rwlock",3]],[[],[["mappedrwlockreadguard",3],["sized",8]]],[[],[["mappedrwlockreadguard",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["rwlock",3]],[[],[["mappedrwlockwriteguard",3],["sized",8]]],[[],[["result",4],["mappedrwlockwriteguard",3]]],[[]],[[],["rwlockreadguard",3]],[[],["rwlockupgradablereadguard",3]],[[]],[[]],[[]],[[],["rwlock",3]],[[]],[[],["rwlockwriteguard",3]],[[],[["result",4],["rwlockwriteguard",3]]],[[]],[[]],[[]],[[],["rwlockreadguard",3]],[[],[["result",4],["rwlockwriteguard",3]]],[[],[["result",4],["rwlockwriteguard",3]]],[[],[["mappedrwlockreadguard",3],["sized",8]]],[[],[["mappedrwlockreadguard",3],["result",4]]],[[]],[[],[["mappedrwlockwriteguard",3],["sized",8]]],[[],[["result",4],["mappedrwlockwriteguard",3]]],[[]]],"p":[[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"RawReentrantMutex"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":[4,13,13,13,13,13,11,11,11,4,13,13,13,13,13,13,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,3,11,11,11,11,8,10,10,10,5,5,5,5,5,3,3,5,17,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Level","Error","Warn","Info","Debug","Trace","max","to_level_filter","as_str","LevelFilter","Off","Error","Warn","Info","Debug","Trace","max","to_level","as_str","Record","builder","args","metadata","level","target","module_path","module_path_static","file","file_static","line","RecordBuilder","new","args","metadata","level","target","module_path","module_path_static","file","file_static","line","build","Metadata","builder","level","target","MetadataBuilder","new","level","target","build","Log","enabled","log","flush","set_max_level","max_level","set_boxed_logger","set_logger","set_logger_racy","SetLoggerError","ParseLevelError","logger","STATIC_MAX_LEVEL","log","error","warn","info","debug","trace","log_enabled","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","from_str","from_str"],"q":["logd":["An enum representing the available verbosity levels of …","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns the most verbose logging level.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Returns the string representation of the <code>Level</code>.","An enum representing the available verbosity level …","A level lower than all log levels.","Corresponds to the <code>Error</code> log level.","Corresponds to the <code>Warn</code> log level.","Corresponds to the <code>Info</code> log level.","Corresponds to the <code>Debug</code> log level.","Corresponds to the <code>Trace</code> log level.","Returns the most verbose logging level filter.","Converts <code>self</code> to the equivalent <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","The “payload” of a log message.","Returns a new builder.","The message body.","Metadata about the log directive.","The verbosity level of the message.","The name of the target of the directive.","The module path of the message.","The module path of the message, if it is a <code>\'static</code> string.","The source file containing the message.","The module path of the message, if it is a <code>\'static</code> string.","The line containing the message.","Builder for <code>Record</code>.","Construct new <code>RecordBuilder</code>.","Set <code>args</code>.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","Set <code>Metadata::level</code>.","Set <code>Metadata::target</code>","Set <code>module_path</code>","Set <code>module_path</code> to a <code>\'static</code> string","Set <code>file</code>","Set <code>file</code> to a <code>\'static</code> string.","Set <code>line</code>","Invoke the builder and return a <code>Record</code>","Metadata about a log message.","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","Builder for <code>Metadata</code>.","Construct a new <code>MetadataBuilder</code>.","Setter for <code>level</code>.","Setter for <code>target</code>.","Returns a <code>Metadata</code> object.","A trait encapsulating the operations required of a logger.","Determines if a log message with the specified metadata …","Logs the <code>Record</code>.","Flushes any buffered records.","Sets the global maximum log level.","Returns the current maximum log level.","Sets the global logger to a <code>Box<Log></code>.","Sets the global logger to a <code>&\'static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The type returned by <code>from_str</code> when the string doesn’t …","Returns a reference to the logger.","The statically resolved maximum log level.","The standard logging macro.","Logs a message at the error level.","Logs a message at the warn level.","Logs a message at the info level.","Logs a message at the debug level.","Logs a message at the trace level.","Determines if a message logged at the specified level in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,0,6,6,6,6,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,1,2,3,5,1,2,5,6,1,1,2,2,5,5,6,6,9,9,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,5,6,1,2,3,4,5,6,8,9,1,2,8,9,1,2,5,6,1,2],"f":[null,null,null,null,null,null,[[],["level",4]],[[],["levelfilter",4]],[[],["str",15]],null,null,null,null,null,null,null,[[],["levelfilter",4]],[[],[["option",4],["level",4]]],[[],["str",15]],null,[[],["recordbuilder",3]],[[],["arguments",3]],[[],["metadata",3]],[[],["level",4]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],null,[[],["recordbuilder",3]],[[["arguments",3]],["recordbuilder",3]],[[["metadata",3]],["recordbuilder",3]],[[["level",4]],["recordbuilder",3]],[[["str",15]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["u32",15],["option",4]],["recordbuilder",3]],[[],["record",3]],null,[[],["metadatabuilder",3]],[[],["level",4]],[[],["str",15]],null,[[],["metadatabuilder",3]],[[["level",4]],["metadatabuilder",3]],[[["str",15]],["metadatabuilder",3]],[[],["metadata",3]],null,[[["metadata",3]],["bool",15]],[[["record",3]]],[[]],[[["levelfilter",4]]],[[],["levelfilter",4]],[[["log",8],["box",3]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],null,null,[[],["log",8]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],[["ordering",4],["option",4]]],[[["metadatabuilder",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["level",4],["result",4]]],[[["str",15]],[["levelfilter",4],["result",4]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"minimp3":{"doc":"minimp3","t":[4,13,13,13,13,17,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","Io","InsufficientData","SkippedData","Eof","MAX_SAMPLES_PER_FRAME","Decoder","Frame","data","sample_rate","channels","layer","bitrate","new","reader","reader_mut","into_inner","next_frame","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","fmt","fmt","fmt","source"],"q":["minimp3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Errors encountered by the MP3 decoder.","An error caused by some IO operation required during …","The decoder tried to parse a frame from its internal …","The decoder encountered data which was not a frame (ie, …","The decoder has reached the end of the provided reader.","Maximum number of samples present in a MP3 frame.","A MP3 decoder which consumes a reader and produces <code>Frame</code>s.","A MP3 frame, owning the decoded audio of that frame.","The decoded audio held by this frame. Channels are …","This frame’s sample rate in hertz.","The number of channels in this frame.","MPEG layer used by this file.","Current bitrate as of this frame, in kb/s.","Creates a new decoder, consuming the <code>reader</code>.","Return a reference to the underlying reader.","Return a mutable reference to the underlying reader …","Destroy the decoder and return the inner reader","Reads a new frame from the internal reader. Returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,0,0,2,2,2,2,2,3,3,3,3,3,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["result",4],["error",4],["frame",3]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["error",3]]],[[],["frame",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["option",4],["error",8]]]],"p":[[4,"Error"],[3,"Frame"],[3,"Decoder"]]},\
"minimp3_sys":{"doc":"","t":[5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,12,12,12,12,12,12,3,12,12,12,12,12,12,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["mp3dec_init","mp3dec_decode_frame","_STDINT_H","_FEATURES_H","_DEFAULT_SOURCE","__USE_ISOC11","__USE_ISOC99","__USE_ISOC95","__USE_POSIX_IMPLICITLY","_POSIX_SOURCE","_POSIX_C_SOURCE","__USE_POSIX","__USE_POSIX2","__USE_POSIX199309","__USE_POSIX199506","__USE_XOPEN2K","__USE_XOPEN2K8","_ATFILE_SOURCE","__USE_MISC","__USE_ATFILE","__USE_FORTIFY_LEVEL","__GLIBC_USE_DEPRECATED_GETS","_STDC_PREDEF_H","__STDC_IEC_559__","__STDC_IEC_559_COMPLEX__","__STDC_ISO_10646__","__STDC_NO_THREADS__","__GNU_LIBRARY__","__GLIBC__","__GLIBC_MINOR__","_SYS_CDEFS_H","__glibc_c99_flexarr_available","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__SYSCALL_WORDSIZE","__HAVE_GENERIC_SELECTION","__GLIBC_USE_LIB_EXT2","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_TYPES_EXT","_BITS_TYPES_H","_BITS_TYPESIZES_H","__OFF_T_MATCHES_OFF64_T","__INO_T_MATCHES_INO64_T","__RLIM_T_MATCHES_RLIM64_T","__FD_SETSIZE","_BITS_WCHAR_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","INT8_MIN","INT16_MIN","INT32_MIN","INT8_MAX","INT16_MAX","INT32_MAX","UINT8_MAX","UINT16_MAX","UINT32_MAX","INT_LEAST8_MIN","INT_LEAST16_MIN","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST16_MAX","INT_LEAST32_MAX","UINT_LEAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","INT_FAST8_MIN","INT_FAST16_MIN","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST16_MAX","INT_FAST32_MAX","UINT_FAST8_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","INTPTR_MIN","INTPTR_MAX","UINTPTR_MAX","PTRDIFF_MIN","PTRDIFF_MAX","SIG_ATOMIC_MIN","SIG_ATOMIC_MAX","SIZE_MAX","WINT_MIN","WINT_MAX","MINIMP3_MAX_SAMPLES_PER_FRAME","__u_char","__u_short","__u_int","__u_long","__int8_t","__uint8_t","__int16_t","__uint16_t","__int32_t","__uint32_t","__int64_t","__uint64_t","__quad_t","__u_quad_t","__intmax_t","__uintmax_t","__dev_t","__uid_t","__gid_t","__ino_t","__ino64_t","__mode_t","__nlink_t","__off_t","__off64_t","__pid_t","__fsid_t","__val","__clock_t","__rlim_t","__rlim64_t","__id_t","__time_t","__useconds_t","__suseconds_t","__daddr_t","__key_t","__clockid_t","__timer_t","__blksize_t","__blkcnt_t","__blkcnt64_t","__fsblkcnt_t","__fsblkcnt64_t","__fsfilcnt_t","__fsfilcnt64_t","__fsword_t","__ssize_t","__syscall_slong_t","__syscall_ulong_t","__loff_t","__caddr_t","__intptr_t","__socklen_t","__sig_atomic_t","int_least8_t","int_least16_t","int_least32_t","int_least64_t","uint_least8_t","uint_least16_t","uint_least32_t","uint_least64_t","int_fast8_t","int_fast16_t","int_fast32_t","int_fast64_t","uint_fast8_t","uint_fast16_t","uint_fast32_t","uint_fast64_t","intmax_t","uintmax_t","mp3dec_frame_info_t","frame_bytes","frame_offset","channels","hz","layer","bitrate_kbps","mp3dec_t","mdct_overlap","qmf_state","reserv","free_format_bytes","header","reserv_buf","mp3d_sample_t","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","fmt","fmt"],"q":["minimp3_sysdi":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,0,3,3,3,3,3,3,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,1,2,3,1,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["__fsid_t",3]],[[],["mp3dec_frame_info_t",3]],[[],["mp3dec_t",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[3,"__fsid_t"],[3,"mp3dec_frame_info_t"],[3,"mp3dec_t"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":[0,0,0,17,17,17,17,17,17,17,17,4,13,13,13,13,13,4,13,13,13,13,11,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,3,12,5,5,5,0,5,4,13,13,13,13,13,13,5,5,0,0,0,17,17,17,17,17,3,11,11,11,5,0,8,10,3,3,3,12,3,11,11,11,11,11,11,11,5,4,13,13,13,13,13,13,13,11,5,5,5,5,4,13,13,13,13,13,13,11,4,13,13,13,4,13,13,13,13,13,13,13,4,13,13,6,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["deflate","core","deflate_flags","TDEFL_WRITE_ZLIB_HEADER","TDEFL_COMPUTE_ADLER32","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_FORCE_ALL_RAW_BLOCKS","CompressionStrategy","Default","Filtered","HuffmanOnly","RLE","Fixed","TDEFLFlush","None","Sync","Full","Finish","new","TDEFLStatus","BadParam","PutBufFailed","Okay","Done","CompressorOxide","new","adler32","prev_return_status","flags","data_format","reset","set_compression_level","set_compression_level_raw","set_format_and_level","CallbackFunc","put_buf_func","compress","compress_to_output","create_comp_flags_from_zip_params","stream","deflate","CompressionLevel","NoCompression","BestSpeed","BestCompression","UberCompression","DefaultLevel","DefaultCompression","compress_to_vec","compress_to_vec_zlib","inflate","core","inflate_flags","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","TINFL_FLAG_COMPUTE_ADLER32","TINFL_LZ_DICT_SIZE","DecompressorOxide","new","init","adler32","decompress","stream","ResetPolicy","reset","MinReset","ZeroReset","FullReset","0","InflateState","new","new_boxed","decompressor","last_status","new_boxed_with_window_bits","reset","reset_as","inflate","TINFLStatus","FailedCannotMakeProgress","BadParam","Adler32Mismatch","Failed","Done","NeedsMoreInput","HasMoreOutput","from_i32","decompress_to_vec","decompress_to_vec_zlib","decompress_to_vec_with_limit","decompress_to_vec_zlib_with_limit","MZFlush","None","Partial","Sync","Full","Finish","Block","new","MZStatus","Ok","StreamEnd","NeedDict","MZError","ErrNo","Stream","Data","Mem","Buf","Version","Param","DataFormat","Zlib","Raw","MZResult","StreamResult","bytes_consumed","bytes_written","status","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","reset","reset","reset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default"],"q":["miniz_oxide","miniz_oxide::deflate","miniz_oxide::deflate::core","miniz_oxide::deflate::core::deflate_flags","","","","","","","","miniz_oxide::deflate::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate","miniz_oxide::deflate::stream","miniz_oxide::deflate","","","","","","","","","miniz_oxide","miniz_oxide::inflate","miniz_oxide::inflate::core","miniz_oxide::inflate::core::inflate_flags","","","","miniz_oxide::inflate::core","","","","","","miniz_oxide::inflate","miniz_oxide::inflate::stream","","","","","","","","","","","","","","","miniz_oxide::inflate","","","","","","","","","","","","","miniz_oxide","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate","","","","","","","","","miniz_oxide::inflate::core","","","","","","","miniz_oxide::inflate::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::inflate","","","","","","","","","miniz_oxide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::inflate::stream","","","miniz_oxide::deflate::core","","","miniz_oxide::deflate","miniz_oxide::inflate","miniz_oxide","","","","","miniz_oxide::deflate::core","","","miniz_oxide::deflate","miniz_oxide::inflate","miniz_oxide","","","","","","miniz_oxide::deflate::core","","","miniz_oxide::deflate","miniz_oxide::inflate","miniz_oxide","","","","","miniz_oxide::deflate::core","miniz_oxide","","miniz_oxide::deflate::core","","","miniz_oxide::deflate","miniz_oxide::inflate","miniz_oxide","","","","","miniz_oxide::deflate::core","miniz_oxide::inflate::core","miniz_oxide::inflate::stream"],"d":["This module contains functionality for compression.","Streaming compression functionality.","","Whether to use a zlib wrapper.","Should we compute the adler32 checksum.","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Only use matches that are at least 6 bytes long.","Force the compressor to only output static blocks. …","Force the compressor to only output raw/uncompressed …","Strategy setting for compression.","Don’t use any of the special strategies.","Only use matches that are at least 5 bytes long.","Don’t look for matches, only huffman encode the …","Only look for matches with a distance of 1, i.e do …","Only use static/fixed blocks. (Blocks using the default …","A list of deflate flush types.","Compress as much as there is space for, and then return …","Try to flush the current data and output an empty raw …","Same as sync, but reset the dictionary so that the …","Try to flush everything and end the stream.","","Return status codes.","","","","","Main compression struct.","Create a new <code>CompressorOxide</code> with the given flags.","Get the adler32 checksum of the currently encoded data.","Get the return status of the previous <code>compress</code> call with …","Get the raw compressor flags.","Returns whether the compressor is wrapping the data in a …","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","Callback function and user used in <code>compress_to_output</code>.","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used …","Extra streaming compression functionality.","Try to compress from input to output with the given …","How much processing the compressor should do to compress …","Don’t do any compression, only output uncompressed …","Fast compression. Uses a special compression routine that …","Slow/high compression. Do a lot of checks to try to find …","Even more checks, can be very slow.","Default compromise between speed and compression.","Use the default compression level.","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","This module contains functionality for decompression.","Streaming decompression functionality.","","Should we try to parse a zlib header?","There is more input that hasn’t been given to the …","The output buffer should not wrap around.","Should we calculate the adler32 checksum of the output …","","Main decompression struct.","Create a new tinfl_decompressor with all fields set to 0.","Set the current state to <code>Start</code>.","Returns the adler32 checksum of the currently …","Main decompression function. Keeps decompressing data …","Extra streaming decompression functionality.","Tag that determines reset policy of InflateState","Performs reset","Resets state, without performing expensive ops (e.g. …","Resets state and zero memory, continuing to use the same …","Full reset of the state, including zeroing memory.","","A struct that compbines a decompressor with extra data …","Create a new state.","Create a new state on the heap.","Access the innner decompressor.","Return the status of the last call to <code>inflate</code> with this …","Create a new state using miniz/zlib style window bits …","Reset the decompressor without re-allocating memory, …","Resets the state according to specified policy.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Return status codes.","More input data was expected, but the caller indicated …","One or more of the input parameters were invalid.","The decompression went fine, but the adler32 checksum did …","Failed to decompress due to invalid data.","Finished decomression without issues.","The decompressor needs more input data to continue …","There is still pending data that didn’t fit in the …","","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data in <code>input</code> to a vector. …","Decompress the deflate-encoded data (with a zlib wrapper) …","A list of flush types.","Don’t force any flushing. Used when more input data is …","Zlib partial flush. Currently treated as <code>Sync</code>.","Finish compressing the currently buffered data, and …","Same as <code>Sync</code>, but resets the compression dictionary so …","Attempt to flush the remaining data and end the stream.","Not implemented.","Create an MZFlush value from an integer value.","A list of miniz successful status codes.","","","","A list of miniz failed status codes.","","","","","","","","How compressed data is wrapped.","Wrapped using the zlib format.","Raw DEFLATE.","<code>Result</code> alias for all miniz status codes both successful …","A structure containg the result of a call to the inflate …","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","The return status of the callnitialize the compressor with a level of 4, zlib wrapper …","Create a new tinfl_decompressor with all fields set to 0.",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,2,2,2,2,2,0,3,3,3,3,0,4,4,4,4,4,4,4,4,4,0,5,0,0,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,8,0,0,0,9,0,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,0,0,0,0,0,12,12,12,12,12,12,12,0,13,13,13,0,14,14,14,14,14,14,14,0,15,15,0,0,16,16,16,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,17,17,17,17,17,17,17,18,18,18,18,18,18,18,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,18,9,1,2,3,6,11,12,13,14,15,16,1,2,3,6,11,12,13,14,15,16,16,1,2,3,6,11,12,13,14,15,16,2,19,19,1,2,3,6,11,12,13,14,15,16,4,7,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],[["result",4],["mzerror",4]]],null,null,null,null,null,null,[[["u32",15]]],[[],["u32",15]],[[],["tdeflstatus",4]],[[],["i32",15]],[[],["dataformat",4]],[[]],[[["compressionlevel",4]]],[[["u8",15]]],[[["dataformat",4],["u8",15]]],null,null,[[["tdeflflush",4],["compressoroxide",3]]],[[["tdeflflush",4],["compressoroxide",3]]],[[["i32",15]],["u32",15]],null,[[["mzflush",4],["compressoroxide",3]],["streamresult",3]],null,null,null,null,null,null,null,[[["u8",15]],[["vec",3],["u8",15]]],[[["u8",15]],[["vec",3],["u8",15]]],null,null,null,null,null,null,null,null,null,[[],["decompressoroxide",3]],[[]],[[],[["u32",15],["option",4]]],[[["usize",15],["decompressoroxide",3],["u32",15]]],null,null,[[["inflatestate",3]]],null,null,null,null,null,[[["dataformat",4]],["inflatestate",3]],[[["dataformat",4]],[["box",3],["inflatestate",3]]],[[],["decompressoroxide",3]],[[],["tinflstatus",4]],[[["i32",15]],[["box",3],["inflatestate",3]]],[[["dataformat",4]]],[[["resetpolicy",8]]],[[["mzflush",4],["inflatestate",3]],["streamresult",3]],null,null,null,null,null,null,null,null,[[["i32",15]],[["option",4],["tinflstatus",4]]],[[],[["vec",3],["tinflstatus",4],["result",4]]],[[],[["vec",3],["tinflstatus",4],["result",4]]],[[["usize",15]],[["vec",3],["tinflstatus",4],["result",4]]],[[["usize",15]],[["vec",3],["tinflstatus",4],["result",4]]],null,null,null,null,null,null,null,[[["i32",15]],[["result",4],["mzerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["inflatestate",3]]],[[["inflatestate",3]]],[[["inflatestate",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["compressionstrategy",4]],["bool",15]],[[["tdeflflush",4]],["bool",15]],[[["tdeflstatus",4]],["bool",15]],[[["compressionlevel",4]],["bool",15]],[[["tinflstatus",4]],["bool",15]],[[["mzflush",4]],["bool",15]],[[["mzstatus",4]],["bool",15]],[[["mzerror",4]],["bool",15]],[[["dataformat",4]],["bool",15]],[[["streamresult",3]],["bool",15]],[[["streamresult",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mzflush",4]]],[[["streamresult",3]]],[[["streamresult",3]]],[[],["compressionstrategy",4]],[[],["tdeflflush",4]],[[],["tdeflstatus",4]],[[],["compressionlevel",4]],[[],["tinflstatus",4]],[[],["mzflush",4]],[[],["mzstatus",4]],[[],["mzerror",4]],[[],["dataformat",4]],[[],["streamresult",3]],[[]],[[]],[[]]],"p":[[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[3,"CallbackFunc"],[4,"CompressionLevel"],[3,"DecompressorOxide"],[8,"ResetPolicy"],[3,"FullReset"],[3,"InflateState"],[4,"TINFLStatus"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[3,"MinReset"],[3,"ZeroReset"],[6,"MZResult"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","t":[0,3,3,3,8,10,10,10,0,0,5,3,3,3,12,0,0,3,3,3,3,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["event","Event","Events","Iter","Source","register","reregister","deregister","unix","pipe","new","Receiver","Sender","SourceFd","0","features","guide","Interest","Poll","Registry","Token","0","Waker","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","register","reregister","deregister","register","reregister","deregister","register","reregister","deregister","from","from","from","next","size_hint","count","clone","clone","clone","clone","cmp","cmp","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","bitor","bitor_assign","hash","read","read_vectored","write","write_vectored","flush","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","from_raw_fd","from_raw_fd","into_raw_fd","into_raw_fd","READABLE","WRITABLE","add","remove","is_readable","is_writable","is_aio","is_lio","registry","poll","new","register","reregister","deregister","try_clone","set_nonblocking","set_nonblocking","new","wake","token","is_readable","is_writable","is_error","is_read_closed","is_write_closed","is_priority","is_aio","is_lio","with_capacity","capacity","is_empty","iter","clear"],"q":["mio","mio::event","","","","","","","mio","mio::unix","mio::unix::pipe","","","mio::unix","","mio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mio::unix","","","","","","","mio::unix::pipe","","","","","","","","","","","","","","mio","","","","","","","","","","","","","","","","mio::event","","","","","","","","","","","","","","","","","","","","","","","","","","mio::unix","","","mio::unix::pipe","","","","","","","","","mio::event","","","mio","","mio::event","","mio","","","","","","","","","","","mio::unix","mio::unix::pipe","","mio","","mio::event","","","mio","","","mio::unix::pipe","","","","","mio","","mio::unix::pipe","","","","","","mio","","","","","","","","","","","","","","","mio::unix::pipe","","mio","","mio::event","","","","","","","","","","","","",""],"d":["Readiness event types and utilities.","A readiness event.","A collection of readiness events.","<code>Events</code> iterator.","An event source that may be registered with <code>Registry</code>.","Register <code>self</code> with the given <code>Registry</code> instance.","Re-register <code>self</code> with the given <code>Registry</code> instance.","Deregister <code>self</code> from the given <code>Registry</code> instance.","Unix only extensions.","Unix pipe.","Create a new non-blocking Unix pipe.","Receiving end of an Unix pipe.","Sending end of an Unix pipe.","Adapter for [<code>RawFd</code>] providing an <code>event::Source</code> …","","Mio’s optional features.","Getting started guide.","Interest used in registering.","Polls for readiness events on all registered values.","Registers I/O resources.","Associates readiness events with <code>event::Source</code>s.","","Waker allows cross-thread waking of <code>Poll</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>Interest</code> set representing readable interests.","Returns a <code>Interest</code> set representing writable interests.","Add together two <code>Interest</code>.","Removes <code>other</code> <code>Interest</code> from <code>self</code>.","Returns true if the value includes readable readiness.","Returns true if the value includes writable readiness.","Returns true if <code>Interest</code> contains AIO readiness","Returns true if <code>Interest</code> contains LIO readiness","Create a separate <code>Registry</code> which can be used to register …","Wait for readiness events","Return a new <code>Poll</code> handle.","Register an <code>event::Source</code> with the <code>Poll</code> instance.","Re-register an [<code>event::Source</code>] with the <code>Poll</code> instance.","Deregister an [<code>event::Source</code>] with the <code>Poll</code> instance.","Creates a new independently owned <code>Registry</code>.","Set the <code>Sender</code> into or out of non-blocking mode.","Set the <code>Receiver</code> into or out of non-blocking mode.","Create a new <code>Waker</code>.","Wake up the <code>Poll</code> associated with this <code>Waker</code>.","Returns the event’s token.","Returns true if the event contains readable readiness.","Returns true if the event contains writable readiness.","Returns true if the event contains error readiness.","Returns true if the event contains read closed readiness.","Returns true if the event contains write closed readiness.","Returns true if the event contains priority readiness.","Returns true if the event contains AIO readiness.","Returns true if the event contains LIO readiness.","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …","Returns the number of <code>Event</code> values that <code>self</code> can hold.","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.","Returns an iterator over the <code>Event</code> values.","Clearing all <code>Event</code> values from container explicitly."],"i":[0,0,0,0,0,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,0,3,0,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,2,2,2,2,2,2,2,7,7,7,7,7,7,7,8,8,8,8,8,8,8,3,3,3,3,3,3,3,3,3,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,2,2,2,7,7,7,8,8,8,7,8,8,12,12,12,4,3,10,12,4,3,4,4,3,3,4,3,4,5,6,2,7,8,3,9,10,12,11,4,4,3,8,8,7,7,7,5,6,7,8,7,8,7,8,4,4,4,4,4,4,4,4,5,5,5,6,6,6,6,7,8,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11],"f":[null,null,null,null,null,[[["token",3],["registry",3],["interest",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["registry",3]],["result",6]],null,null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["registry",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["registry",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["token",3],["registry",3],["interest",3]],["result",6]],[[["registry",3]],["result",6]],[[["childstdin",3]],["sender",3]],[[["childstdout",3]],["receiver",3]],[[["childstderr",3]],["receiver",3]],[[],["option",4]],[[]],[[],["usize",15]],[[],["interest",3]],[[],["token",3]],[[],["event",3]],[[],["iter",3]],[[["interest",3]],["ordering",4]],[[["token",3]],["ordering",4]],[[["interest",3]],["bool",15]],[[["interest",3]],["bool",15]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["interest",3]],[["ordering",4],["option",4]]],[[["token",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["result",6],["usize",15]]],[[],[["result",6],["usize",15]]],[[],[["result",6],["usize",15]]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[["rawfd",6]],["sender",3]],[[["rawfd",6]],["receiver",3]],[[],["rawfd",6]],[[],["rawfd",6]],null,null,[[["interest",3]],["interest",3]],[[["interest",3]],[["option",4],["interest",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["registry",3]],[[["duration",3],["events",3],["option",4]],["result",6]],[[],[["poll",3],["result",6]]],[[["token",3],["interest",3]],["result",6]],[[["token",3],["interest",3]],["result",6]],[[],["result",6]],[[],[["registry",3],["result",6]]],[[["bool",15]],["result",6]],[[["bool",15]],["result",6]],[[["token",3],["registry",3]],[["result",6],["waker",3]]],[[],["result",6]],[[],["token",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["usize",15]],["events",3]],[[],["usize",15]],[[],["bool",15]],[[],["iter",3]],[[]]],"p":[[8,"Source"],[3,"SourceFd"],[3,"Token"],[3,"Interest"],[3,"Poll"],[3,"Registry"],[3,"Sender"],[3,"Receiver"],[3,"Waker"],[3,"Event"],[3,"Events"],[3,"Iter"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","tn":["dir","Dir","open","openat","from","from_fd","iter","Iter","OwningIter","Entry","Type","Fifo","CharacterDevice","Directory","BlockDevice","File","Symlink","Socket","ino","file_name","file_type","env","clearenv","errno","Errno","UnknownErrno","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","EDEADLK","ENAMETOOLONG","ENOLCK","ENOSYS","ENOTEMPTY","ELOOP","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","EOVERFLOW","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","EILSEQ","ERESTART","ESTRPIPE","EUSERS","ENOTSOCK","EDESTADDRREQ","EMSGSIZE","EPROTOTYPE","ENOPROTOOPT","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EOPNOTSUPP","EPFNOSUPPORT","EAFNOSUPPORT","EADDRINUSE","EADDRNOTAVAIL","ENETDOWN","ENETUNREACH","ENETRESET","ECONNABORTED","ECONNRESET","ENOBUFS","EISCONN","ENOTCONN","ESHUTDOWN","ETOOMANYREFS","ETIMEDOUT","ECONNREFUSED","EHOSTDOWN","EHOSTUNREACH","EALREADY","EINPROGRESS","ESTALE","EUCLEAN","ENOTNAM","ENAVAIL","EISNAM","EREMOTEIO","EDQUOT","ENOMEDIUM","EMEDIUMTYPE","ECANCELED","ENOKEY","EKEYEXPIRED","EKEYREVOKED","EKEYREJECTED","EOWNERDEAD","ENOTRECOVERABLE","ERFKILL","EHWPOISON","EWOULDBLOCK","EDEADLOCK","ENOTSUP","from_i32","errno","last","desc","from_i32","clear","result","ErrnoSentinel","sentinel","features","socket_atomic_cloexec","fcntl","PosixFadviseAdvice","POSIX_FADV_NORMAL","POSIX_FADV_SEQUENTIAL","POSIX_FADV_RANDOM","POSIX_FADV_NOREUSE","POSIX_FADV_WILLNEED","POSIX_FADV_DONTNEED","posix_fadvise","AtFlags","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_NO_AUTOMOUNT","AT_EMPTY_PATH","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","OFlag","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NOATIME","O_NOCTTY","O_NDELAY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","open","openat","renameat","readlink","readlinkat","SealFlag","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_GROW","F_SEAL_WRITE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","FdFlag","FD_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","FcntlArg","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_SETFD","F_GETFL","F_SETFL","F_SETLK","F_SETLKW","F_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OFD_GETLK","F_ADD_SEALS","F_GET_SEALS","F_GETPIPE_SZ","F_SETPIPE_SZ","fcntl","FlockArg","LockShared","LockExclusive","Unlock","LockSharedNonblock","LockExclusiveNonblock","UnlockNonblock","flock","SpliceFFlags","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SPLICE_F_MORE","SPLICE_F_GIFT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","copy_file_range","splice","tee","vmsplice","FallocateFlags","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_ZERO_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_UNSHARE_RANGE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","fallocate","posix_fallocate","ifaddrs","InterfaceAddress","interface_name","flags","address","netmask","broadcast","destination","InterfaceAddressIterator","getifaddrs","kmod","init_module","ModuleInitFlags","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","finit_module","DeleteModuleFlags","O_NONBLOCK","O_TRUNC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","delete_module","mount","MsFlags","MS_RDONLY","MS_NOSUID","MS_NODEV","MS_NOEXEC","MS_SYNCHRONOUS","MS_REMOUNT","MS_MANDLOCK","MS_DIRSYNC","MS_NOATIME","MS_NODIRATIME","MS_BIND","MS_MOVE","MS_REC","MS_SILENT","MS_POSIXACL","MS_UNBINDABLE","MS_PRIVATE","MS_SLAVE","MS_SHARED","MS_RELATIME","MS_KERNMOUNT","MS_I_VERSION","MS_STRICTATIME","MS_ACTIVE","MS_NOUSER","MS_RMT_MASK","MS_MGC_VAL","MS_MGC_MSK","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MntFlags","MNT_FORCE","MNT_DETACH","MNT_EXPIRE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","mount","umount","umount2","mqueue","MQ_OFlag","O_RDONLY","O_WRONLY","O_RDWR","O_CREAT","O_EXCL","O_NONBLOCK","O_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","FdFlag","FD_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MqAttr","mq_attr_member_t","new","flags","mq_open","mq_unlink","mq_close","mq_receive","mq_send","mq_getattr","mq_setattr","mq_set_nonblock","mq_remove_nonblock","net","if_","if_nametoindex","InterfaceFlags","IFF_UP","IFF_BROADCAST","IFF_DEBUG","IFF_LOOPBACK","IFF_POINTOPOINT","IFF_NOTRAILERS","IFF_RUNNING","IFF_NOARP","IFF_PROMISC","IFF_ALLMULTI","IFF_MASTER","IFF_SLAVE","IFF_MULTICAST","IFF_PORTSEL","IFF_AUTOMEDIA","IFF_DYNAMIC","IFF_LOWER_UP","IFF_DORMANT","IFF_ECHO","IFF_NO_PI","IFF_TUN","IFF_TAP","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","poll","PollFd","new","revents","PollFlags","POLLIN","POLLPRI","POLLOUT","POLLRDNORM","POLLWRNORM","POLLRDBAND","POLLWRBAND","POLLERR","POLLHUP","POLLNVAL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","poll","ppoll","pty","SessionId","Winsize","ws_row","ws_col","ws_xpixel","ws_ypixel","OpenptyResult","master","slave","ForkptyResult","master","fork_result","PtyMaster","grantpt","posix_openpt","ptsname","ptsname_r","unlockpt","openpty","forkpty","sched","CloneFlags","CloneCb","CpuSet","sched_setaffinity","sched_getaffinity","clone","unshare","setns","sched_yield","sys","aio","AioFsyncMode","O_SYNC","O_DSYNC","LioOpcode","LIO_NOP","LIO_WRITE","LIO_READ","LioMode","LIO_WAIT","LIO_NOWAIT","AioCancelStat","AioCanceled","AioNotCanceled","AioAllDone","Buffer","None","Phantom","BoxedSlice","BoxedMutSlice","AioCb","buffer","boxed_slice","boxed_mut_slice","fd","from_fd","from_mut_slice","from_boxed_slice","from_boxed_mut_slice","from_mut_ptr","from_ptr","from_slice","set_sigev_notify","cancel","error","fsync","lio_opcode","nbytes","offset","priority","read","sigevent","aio_return","write","aio_cancel_all","aio_suspend","LioCb","aiocbs","with_capacity","listio","listio_resubmit","aio_return","error","epoll","EpollFlags","EPOLLIN","EPOLLPRI","EPOLLOUT","EPOLLRDNORM","EPOLLRDBAND","EPOLLWRNORM","EPOLLWRBAND","EPOLLMSG","EPOLLERR","EPOLLHUP","EPOLLRDHUP","EPOLLEXCLUSIVE","EPOLLWAKEUP","EPOLLONESHOT","EPOLLET","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","EpollOp","EpollCtlAdd","EpollCtlDel","EpollCtlMod","EpollCreateFlags","EPOLL_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","EpollEvent","new","empty","events","data","epoll_create","epoll_create1","epoll_ctl","epoll_wait","eventfd","EfdFlags","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","eventfd","ioctl","memfd","MemFdCreateFlag","MFD_CLOEXEC","MFD_ALLOW_SEALING","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","memfd_create","mman","ProtFlags","PROT_NONE","PROT_READ","PROT_WRITE","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MapFlags","MAP_FILE","MAP_SHARED","MAP_PRIVATE","MAP_FIXED","MAP_ANON","MAP_ANONYMOUS","MAP_32BIT","MAP_GROWSDOWN","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_LOCKED","MAP_NORESERVE","MAP_POPULATE","MAP_NONBLOCK","MAP_HUGETLB","MAP_HUGE_64KB","MAP_HUGE_512KB","MAP_HUGE_1MB","MAP_HUGE_2MB","MAP_HUGE_8MB","MAP_HUGE_16MB","MAP_HUGE_32MB","MAP_HUGE_256MB","MAP_HUGE_512MB","MAP_HUGE_1GB","MAP_HUGE_2GB","MAP_HUGE_16GB","MAP_STACK","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MRemapFlags","MREMAP_MAYMOVE","MREMAP_FIXED","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MmapAdvise","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_DONTNEED","MADV_REMOVE","MADV_DONTFORK","MADV_DOFORK","MADV_HWPOISON","MADV_MERGEABLE","MADV_UNMERGEABLE","MADV_SOFT_OFFLINE","MADV_HUGEPAGE","MADV_NOHUGEPAGE","MADV_DONTDUMP","MADV_DODUMP","MADV_FREE","MsFlags","MS_ASYNC","MS_INVALIDATE","MS_SYNC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MlockAllFlags","MCL_CURRENT","MCL_FUTURE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","mlock","munlock","mlockall","munlockall","mmap","mremap","munmap","madvise","mprotect","msync","shm_open","shm_unlink","personality","Persona","ADDR_COMPAT_LAYOUT","ADDR_NO_RANDOMIZE","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","FDPIC_FUNCPTRS","MMAP_PAGE_ZERO","READ_IMPLIES_EXEC","SHORT_INODE","STICKY_TIMEOUTS","UNAME26","WHOLE_SECONDS","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","get","set","pthread","Pthread","pthread_self","ptrace","AddressType","Request","PTRACE_TRACEME","PTRACE_PEEKTEXT","PTRACE_PEEKDATA","PTRACE_PEEKUSER","PTRACE_POKETEXT","PTRACE_POKEDATA","PTRACE_POKEUSER","PTRACE_CONT","PTRACE_KILL","PTRACE_SINGLESTEP","PTRACE_GETREGS","PTRACE_SETREGS","PTRACE_GETFPREGS","PTRACE_SETFPREGS","PTRACE_ATTACH","PTRACE_DETACH","PTRACE_GETFPXREGS","PTRACE_SETFPXREGS","PTRACE_SYSCALL","PTRACE_SETOPTIONS","PTRACE_GETEVENTMSG","PTRACE_GETSIGINFO","PTRACE_SETSIGINFO","PTRACE_GETREGSET","PTRACE_SETREGSET","PTRACE_SEIZE","PTRACE_INTERRUPT","PTRACE_LISTEN","PTRACE_PEEKSIGINFO","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","Event","PTRACE_EVENT_FORK","PTRACE_EVENT_VFORK","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_VFORK_DONE","PTRACE_EVENT_EXIT","PTRACE_EVENT_SECCOMP","Options","getregs","setregs","setoptions","getevent","getsiginfo","setsiginfo","traceme","syscall","sysemu","attach","seize","detach","cont","kill","step","sysemu_step","read","write","quota","QuotaType","USRQUOTA","GRPQUOTA","QuotaFmt","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QuotaValidFlags","QIF_BLIMITS","QIF_SPACE","QIF_ILIMITS","QIF_INODES","QIF_BTIME","QIF_ITIME","QIF_LIMITS","QIF_USAGE","QIF_TIMES","QIF_ALL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Dqblk","blocks_hard_limit","set_blocks_hard_limit","blocks_soft_limit","set_blocks_soft_limit","occupied_space","inodes_hard_limit","set_inodes_hard_limit","inodes_soft_limit","set_inodes_soft_limit","allocated_inodes","block_time_limit","set_block_time_limit","inode_time_limit","set_inode_time_limit","quotactl_on","quotactl_off","quotactl_sync","quotactl_get","quotactl_set","reboot","RebootMode","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_AUTOBOOT","RB_SW_SUSPEND","reboot","set_cad_enabled","select","FD_SETSIZE","FdSet","new","insert","remove","contains","clear","highest","fds","Fds","select","pselect","sendfile","sendfile","signal","SigEvent","Signal","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGTRAP","SIGABRT","SIGBUS","SIGFPE","SIGKILL","SIGUSR1","SIGSEGV","SIGUSR2","SIGPIPE","SIGALRM","SIGTERM","SIGSTKFLT","SIGCHLD","SIGCONT","SIGSTOP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGIO","SIGPWR","SIGSYS","as_str","NSIG","SignalIterator","iterator","SIGIOT","SIGPOLL","SIGUNUSED","SaFlags","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","SigmaskHow","SIG_BLOCK","SIG_UNBLOCK","SIG_SETMASK","SigSet","all","empty","add","clear","remove","contains","extend","thread_get_mask","thread_set_mask","thread_block","thread_unblock","thread_swap_mask","wait","SigHandler","SigDfl","SigIgn","Handler","SigAction","SigAction","new","flags","mask","handler","sigaction","signal","pthread_sigmask","sigprocmask","kill","killpg","raise","type_of_thread_id","SigevNotify","SigevNone","SigevSignal","signal","si_value","SigevThreadId","signal","thread_id","si_value","signalfd","siginfo","ssi_signo","ssi_errno","ssi_code","ssi_pid","ssi_uid","ssi_fd","ssi_tid","ssi_band","ssi_overrun","ssi_trapno","ssi_status","ssi_int","ssi_ptr","ssi_utime","ssi_stime","ssi_addr","ssi_addr_lsb","ssi_syscall","ssi_call_addr","ssi_arch","SfdFlags","SFD_NONBLOCK","SFD_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","SIGNALFD_NEW","SIGNALFD_SIGINFO_SIZE","signalfd","SignalFd","new","with_flags","set_mask","read_signal","socket","sockopt","ReuseAddr","ReusePort","TcpNoDelay","Linger","IpAddMembership","IpDropMembership","Ipv6AddMembership","Ipv6DropMembership","IpMulticastTtl","IpMulticastLoop","ReceiveTimeout","SendTimeout","Broadcast","OobInline","SocketError","KeepAlive","PeerCredentials","TcpKeepIdle","TcpKeepCount","TcpKeepInterval","RcvBuf","SndBuf","RcvBufForce","SndBufForce","SockType","AcceptConn","BindToDevice","OriginalDst","ReceiveTimestamp","IpTransparent","Mark","PassCred","TcpCongestion","Ipv4PacketInfo","Ipv6RecvPacketInfo","UdpGsoSegment","UdpGroSegment","AlgSetAeadAuthSize","AlgSetKey","AddressFamily","Unix","Inet","Inet6","Netlink","Packet","Ax25","Ipx","AppleTalk","NetRom","Bridge","AtmPvc","X25","Rose","Decnet","NetBeui","Security","Key","Ash","Econet","AtmSvc","Rds","Sna","Irda","Pppox","Wanpipe","Llc","Ib","Mpls","Can","Tipc","Bluetooth","Iucv","RxRpc","Isdn","Phonet","Ieee802154","Caif","Alg","Nfc","Vsock","Unspec","SockAddr","Inet","Unix","Netlink","Alg","Link","Vsock","InetAddr","V4","V6","UnixAddr","0","1","IpAddr","V4","V6","Ipv4Addr","0","Ipv6Addr","0","LinkAddr","0","NetlinkAddr","0","AlgAddr","0","VsockAddr","0","cmsghdr","cmsg_len","cmsg_level","cmsg_type","msghdr","msg_name","msg_namelen","msg_iov","msg_iovlen","msg_control","msg_controllen","msg_flags","sa_family_t","sockaddr","sa_family","sa_data","sockaddr_in","sin_family","sin_port","sin_addr","sin_zero","sockaddr_in6","sin6_family","sin6_port","sin6_flowinfo","sin6_addr","sin6_scope_id","sockaddr_storage","ss_family","sockaddr_un","sun_family","sun_path","SockType","Stream","Datagram","SeqPacket","Raw","Rdm","SockProtocol","Tcp","Udp","NetlinkRoute","NetlinkUserSock","NetlinkSockDiag","NetlinkSELinux","NetlinkISCSI","NetlinkAudit","NetlinkFIBLookup","NetlinkNetFilter","NetlinkSCSITransport","NetlinkRDMA","NetlinkIPv6Firewall","NetlinkDECNetRoutingMessage","NetlinkKObjectUEvent","NetlinkCrypto","SockFlag","SOCK_NONBLOCK","SOCK_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","MsgFlags","MSG_OOB","MSG_PEEK","MSG_WAITALL","MSG_DONTWAIT","MSG_CTRUNC","MSG_TRUNC","MSG_EOR","MSG_ERRQUEUE","MSG_CMSG_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","UnixCredentials","new","pid","uid","gid","IpMembershipRequest","new","Ipv6MembershipRequest","new","RecvMsg","bytes","address","flags","cmsgs","CmsgIterator","ControlMessageOwned","ScmRights","ScmCredentials","ScmTimestamp","Ipv4PacketInfo","Ipv6PacketInfo","UdpGroSegments","ControlMessage","ScmRights","ScmCredentials","AlgSetIv","AlgSetOp","AlgSetAeadAssoclen","UdpGsoSegments","Ipv4PacketInfo","Ipv6PacketInfo","sendmsg","SendMmsgData","iov","cmsgs","addr","_lt","sendmmsg","RecvMmsgData","iov","cmsg_buffer","recvmmsg","recvmsg","socket","socketpair","listen","bind","accept","accept4","connect","recv","recvfrom","sendto","send","GetSockOpt","Val","SetSockOpt","Val","getsockopt","setsockopt","getpeername","getsockname","sockaddr_storage_to_addr","Shutdown","Read","Write","Both","shutdown","stat","dev_t","mode_t","FileStat","st_dev","st_ino","st_nlink","st_mode","st_uid","st_gid","st_rdev","st_size","st_blksize","st_blocks","st_atime","st_atime_nsec","st_mtime","st_mtime_nsec","st_ctime","st_ctime_nsec","FileStat","SFlag","S_IFIFO","S_IFCHR","S_IFDIR","S_IFBLK","S_IFREG","S_IFLNK","S_IFSOCK","S_IFMT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Mode","S_IRWXU","S_IRUSR","S_IWUSR","S_IXUSR","S_IRWXG","S_IRGRP","S_IWGRP","S_IXGRP","S_IRWXO","S_IROTH","S_IWOTH","S_IXOTH","S_ISUID","S_ISGID","S_ISVTX","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","mknod","major","minor","makedev","umask","stat","lstat","fstat","fstatat","fchmod","FchmodatFlags","FollowSymlink","NoFollowSymlink","fchmodat","utimes","lutimes","futimens","UtimensatFlags","FollowSymlink","NoFollowSymlink","utimensat","mkdirat","statfs","fsid_t","Statfs","FsType","0","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SMB_SUPER_MAGIC","TMPFS_MAGIC","USBDEVICE_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","filesystem_type","optimal_transfer_size","block_size","maximum_name_length","blocks","blocks_free","blocks_available","files","files_free","filesystem_id","statfs","fstatfs","statvfs","FsFlags","ST_RDONLY","ST_NOSUID","ST_NODEV","ST_NOEXEC","ST_SYNCHRONOUS","ST_MANDLOCK","ST_WRITE","ST_APPEND","ST_IMMUTABLE","ST_NOATIME","ST_NODIRATIME","ST_RELATIME","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Statvfs","block_size","fragment_size","blocks","blocks_free","blocks_available","files","files_free","files_available","filesystem_id","flags","name_max","statvfs","fstatvfs","sysinfo","SysInfo","load_average","uptime","process_count","swap_total","swap_free","ram_total","ram_unused","sysinfo","termios","Termios","input_flags","output_flags","control_flags","local_flags","control_chars","BaudRate","B0","B50","B75","B110","B134","B150","B200","B300","B600","B1200","B1800","B2400","B4800","B9600","B19200","B38400","B57600","B115200","B230400","B460800","B500000","B576000","B921600","B1000000","B1152000","B1500000","B2000000","B2500000","B3000000","B3500000","B4000000","SetArg","TCSANOW","TCSADRAIN","TCSAFLUSH","FlushArg","TCIFLUSH","TCOFLUSH","TCIOFLUSH","FlowArg","TCOOFF","TCOON","TCIOFF","TCION","SpecialCharacterIndices","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VTIME","VWERASE","NCCS","_POSIX_VDISABLE","InputFlags","IGNBRK","BRKINT","IGNPAR","PARMRK","INPCK","ISTRIP","INLCR","IGNCR","ICRNL","IXON","IXOFF","IXANY","IMAXBEL","IUTF8","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","OutputFlags","OPOST","OLCUC","ONLCR","OCRNL","ONOCR","ONLRET","OFILL","OFDEL","NL0","NL1","CR0","CR1","CR2","CR3","TAB0","TAB1","TAB2","TAB3","XTABS","BS0","BS1","VT0","VT1","FF0","FF1","NLDLY","CRDLY","TABDLY","BSDLY","VTDLY","FFDLY","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","ControlFlags","CS5","CS6","CS7","CS8","CSTOPB","CREAD","PARENB","PARODD","HUPCL","CLOCAL","CRTSCTS","CBAUD","CMSPAR","CIBAUD","CBAUDEX","CSIZE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","LocalFlags","ECHOKE","ECHOE","ECHOK","ECHO","ECHONL","ECHOPRT","ECHOCTL","ISIG","ICANON","IEXTEN","EXTPROC","TOSTOP","FLUSHO","PENDIN","NOFLSH","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","cfgetispeed","cfgetospeed","cfsetispeed","cfsetospeed","cfsetspeed","cfmakeraw","tcgetattr","tcsetattr","tcdrain","tcflow","tcflush","tcsendbreak","tcgetsid","time","time_t","suseconds_t","TimeValLike","zero","hours","minutes","seconds","milliseconds","microseconds","nanoseconds","num_hours","num_minutes","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","TimeSpec","tv_sec","tv_nsec","TimeVal","tv_sec","tv_usec","uio","writev","readv","pwritev","preadv","pwrite","pread","RemoteIoVec","base","len","process_vm_writev","process_vm_readv","IoVec","as_slice","from_slice","from_mut_slice","utsname","UtsName","sysname","nodename","release","version","machine","uname","wait","WaitPidFlag","WNOHANG","WUNTRACED","WEXITED","WCONTINUED","WSTOPPED","WNOWAIT","__WNOTHREAD","__WALL","__WCLONE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","WaitStatus","Exited","Signaled","Stopped","PtraceEvent","PtraceSyscall","Continued","StillAlive","pid","from_raw","waitpid","wait","inotify","AddWatchFlags","IN_ACCESS","IN_MODIFY","IN_ATTRIB","IN_CLOSE_WRITE","IN_CLOSE_NOWRITE","IN_OPEN","IN_MOVED_FROM","IN_MOVED_TO","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_MOVE_SELF","IN_UNMOUNT","IN_Q_OVERFLOW","IN_IGNORED","IN_CLOSE","IN_MOVE","IN_ONLYDIR","IN_DONT_FOLLOW","IN_ISDIR","IN_ONESHOT","IN_ALL_EVENTS","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","InitFlags","IN_CLOEXEC","IN_NONBLOCK","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Inotify","WatchDescriptor","InotifyEvent","wd","mask","cookie","name","init","add_watch","rm_watch","read_events","timerfd","TimerFd","ClockId","CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM","CLOCK_BOOTTIME_ALARM","TimerFlags","TFD_NONBLOCK","TFD_CLOEXEC","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","TimerSetTimeFlags","TFD_TIMER_ABSTIME","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Expiration","OneShot","IntervalDelayed","Interval","new","set","get","unset","wait","time","ClockId","from_raw","pid_cpu_clock_id","res","now","set_time","as_raw","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_THREAD_CPUTIME_ID","clock_getres","clock_gettime","clock_settime","clock_getcpuclockid","ucontext","UContext","get","set","sigmask_mut","sigmask","unistd","alarm","set","cancel","acct","enable","disable","pivot_root","setresuid","setresgid","Uid","from_raw","current","effective","is_root","as_raw","ROOT","Gid","from_raw","current","effective","as_raw","Pid","from_raw","this","parent","as_raw","ForkResult","Parent","child","Child","is_child","is_parent","fork","getpid","getppid","setpgid","getpgid","setsid","getsid","tcgetpgrp","tcsetpgrp","getpgrp","gettid","dup","dup2","dup3","chdir","fchdir","mkdir","mkfifo","mkfifoat","symlinkat","getcwd","chown","fchown","FchownatFlags","FollowSymlink","NoFollowSymlink","fchownat","execv","execve","execvp","execvpe","fexecve","execveat","daemon","sethostname","gethostname","close","read","write","Whence","SeekSet","SeekCur","SeekEnd","SeekData","SeekHole","lseek","lseek64","pipe","pipe2","truncate","ftruncate","isatty","LinkatFlags","SymlinkFollow","NoSymlinkFollow","linkat","unlink","UnlinkatFlags","RemoveDir","NoRemoveDir","unlinkat","chroot","sync","fsync","fdatasync","getuid","geteuid","getgid","getegid","seteuid","setegid","setuid","setgid","setfsuid","setfsgid","getgroups","setgroups","getgrouplist","initgroups","pause","sleep","mkstemp","PathconfVar","FILESIZEBITS","LINK_MAX","MAX_CANON","MAX_INPUT","NAME_MAX","PATH_MAX","PIPE_BUF","POSIX2_SYMLINKS","POSIX_ALLOC_SIZE_MIN","POSIX_REC_INCR_XFER_SIZE","POSIX_REC_MAX_XFER_SIZE","POSIX_REC_MIN_XFER_SIZE","POSIX_REC_XFER_ALIGN","SYMLINK_MAX","_POSIX_CHOWN_RESTRICTED","_POSIX_NO_TRUNC","_POSIX_VDISABLE","_POSIX_ASYNC_IO","_POSIX_PRIO_IO","_POSIX_SYNC_IO","fpathconf","pathconf","SysconfVar","AIO_LISTIO_MAX","AIO_MAX","AIO_PRIO_DELTA_MAX","ARG_MAX","ATEXIT_MAX","BC_BASE_MAX","BC_DIM_MAX","BC_SCALE_MAX","BC_STRING_MAX","CHILD_MAX","CLK_TCK","COLL_WEIGHTS_MAX","DELAYTIMER_MAX","EXPR_NEST_MAX","HOST_NAME_MAX","IOV_MAX","LINE_MAX","LOGIN_NAME_MAX","NGROUPS_MAX","GETGR_R_SIZE_MAX","GETPW_R_SIZE_MAX","MQ_OPEN_MAX","MQ_PRIO_MAX","OPEN_MAX","_POSIX_ADVISORY_INFO","_POSIX_BARRIERS","_POSIX_ASYNCHRONOUS_IO","_POSIX_CLOCK_SELECTION","_POSIX_CPUTIME","_POSIX_FSYNC","_POSIX_IPV6","_POSIX_JOB_CONTROL","_POSIX_MAPPED_FILES","_POSIX_MEMLOCK","_POSIX_MEMLOCK_RANGE","_POSIX_MEMORY_PROTECTION","_POSIX_MESSAGE_PASSING","_POSIX_MONOTONIC_CLOCK","_POSIX_PRIORITIZED_IO","_POSIX_PRIORITY_SCHEDULING","_POSIX_RAW_SOCKETS","_POSIX_READER_WRITER_LOCKS","_POSIX_REALTIME_SIGNALS","_POSIX_REGEXP","_POSIX_SAVED_IDS","_POSIX_SEMAPHORES","_POSIX_SHARED_MEMORY_OBJECTS","_POSIX_SHELL","_POSIX_SPAWN","_POSIX_SPIN_LOCKS","_POSIX_SPORADIC_SERVER","_POSIX_SS_REPL_MAX","_POSIX_SYNCHRONIZED_IO","_POSIX_THREAD_ATTR_STACKADDR","_POSIX_THREAD_ATTR_STACKSIZE","_POSIX_THREAD_CPUTIME","_POSIX_THREAD_PRIO_INHERIT","_POSIX_THREAD_PRIO_PROTECT","_POSIX_THREAD_PRIORITY_SCHEDULING","_POSIX_THREAD_PROCESS_SHARED","_POSIX_THREAD_ROBUST_PRIO_INHERIT","_POSIX_THREAD_ROBUST_PRIO_PROTECT","_POSIX_THREAD_SAFE_FUNCTIONS","_POSIX_THREAD_SPORADIC_SERVER","_POSIX_THREADS","_POSIX_TIMEOUTS","_POSIX_TIMERS","_POSIX_TRACE","_POSIX_TRACE_EVENT_FILTER","_POSIX_TRACE_EVENT_NAME_MAX","_POSIX_TRACE_INHERIT","_POSIX_TRACE_LOG","_POSIX_TRACE_NAME_MAX","_POSIX_TRACE_SYS_MAX","_POSIX_TRACE_USER_EVENT_MAX","_POSIX_TYPED_MEMORY_OBJECTS","_POSIX_VERSION","_POSIX_V6_ILP32_OFF32","_POSIX_V6_ILP32_OFFBIG","_POSIX_V6_LP64_OFF64","_POSIX_V6_LPBIG_OFFBIG","_POSIX2_C_BIND","_POSIX2_C_DEV","_POSIX2_CHAR_TERM","_POSIX2_FORT_DEV","_POSIX2_FORT_RUN","_POSIX2_LOCALEDEF","_POSIX2_PBS","_POSIX2_PBS_ACCOUNTING","_POSIX2_PBS_CHECKPOINT","_POSIX2_PBS_LOCATE","_POSIX2_PBS_MESSAGE","_POSIX2_PBS_TRACK","_POSIX2_SW_DEV","_POSIX2_UPE","_POSIX2_VERSION","PAGE_SIZE","PTHREAD_DESTRUCTOR_ITERATIONS","PTHREAD_KEYS_MAX","PTHREAD_STACK_MIN","PTHREAD_THREADS_MAX","RE_DUP_MAX","RTSIG_MAX","SEM_NSEMS_MAX","SEM_VALUE_MAX","SIGQUEUE_MAX","STREAM_MAX","SYMLOOP_MAX","TIMER_MAX","TTY_NAME_MAX","TZNAME_MAX","_XOPEN_CRYPT","_XOPEN_ENH_I18N","_XOPEN_LEGACY","_XOPEN_REALTIME","_XOPEN_REALTIME_THREADS","_XOPEN_SHM","_XOPEN_STREAMS","_XOPEN_UNIX","_XOPEN_VERSION","sysconf","AccessFlags","F_OK","R_OK","W_OK","X_OK","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","access","User","name","passwd","uid","gid","gecos","dir","shell","from_uid","from_name","Group","name","passwd","gid","mem","from_gid","from_name","ttyname","Result","Error","Sys","InvalidPath","InvalidUtf8","UnsupportedOperation","as_errno","from_errno","last","invalid_argument","NixPath","is_empty","len","with_nix_path","request_code_none","request_code_read","request_code_write","request_code_readwrite","ioctl_none","ioctl_none_bad","ioctl_read","ioctl_read_bad","ioctl_write_ptr","ioctl_write_ptr_bad","ioctl_write_int","ioctl_write_int_bad","ioctl_readwrite","ioctl_readwrite_bad","ioctl_read_buf","ioctl_write_buf","ioctl_readwrite_buf","cmsg_space","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","seconds","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","seconds","milliseconds","microseconds","nanoseconds","num_seconds","num_milliseconds","num_microseconds","num_nanoseconds","drop","drop","drop","drop","drop","drop","drop","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","next_back","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","into_iter","next","next","next","next","size_hint","next","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","div","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","add","add","mul","mul","neg","neg","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","not","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","from_str","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","read","write","flush","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","from_raw_fd","from_raw_fd","into_raw_fd","CLONE_VM","CLONE_FS","CLONE_FILES","CLONE_SIGHAND","CLONE_PTRACE","CLONE_VFORK","CLONE_PARENT","CLONE_THREAD","CLONE_NEWNS","CLONE_SYSVSEM","CLONE_SETTLS","CLONE_PARENT_SETTID","CLONE_CHILD_CLEARTID","CLONE_DETACHED","CLONE_UNTRACED","CLONE_CHILD_SETTID","CLONE_NEWCGROUP","CLONE_NEWUTS","CLONE_NEWIPC","CLONE_NEWUSER","CLONE_NEWPID","CLONE_NEWNET","CLONE_IO","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","is_set","set","unset","count","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEFORK","PTRACE_O_TRACEVFORK","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEVFORKDONE","PTRACE_O_TRACEEXIT","PTRACE_O_TRACESECCOMP","PTRACE_O_EXITKILL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","sigevent","new","pid","groups","new","alg_type","alg_name","family","protocol","ifindex","hatype","pkttype","halen","addr","new","cid","port","from_i32","from_std","new","ip","port","to_std","to_str","new_v4","new_v6","from_std","to_std","new","from_std","any","octets","to_std","new","from_std","segments","to_std","new","new_abstract","path","as_abstract","new_inet","new_unix","new_netlink","new_alg","new_vsock","family","to_str","as_ffi_pair"],"q":["nix","nix::dir","","","","","","","","","","","","","","","","","","","","nix","nix::env","nix","nix::errno","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::features","nix","nix::fcntlnix","nix::ifaddrs","","","","","","","","","nix","nix::kmod","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::mount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::mqueue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::net","nix::net::if_","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::poll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::pty","","","","","","","","","","","","","","","","","","","","nix","nix::sched","","","","","","","","","nix","nix::sys","nix::sys::aio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::epoll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::eventfd","","","","","","","","","","","","","","","","","","","nix::sys","","nix::sys::memfd","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::mman","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::personality","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::pthread","","nix::sys","nix::sys::ptrace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::quota","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::reboot","","","","","","","","nix::sys","nix::sys::select","","","","","","","","","","","","nix::sys","nix::sys::sendfile","nix::sys","nix::sys::signal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::signal::SigevNotify","","nix::sys::signal","nix::sys::signal::SigevNotify","","","nix::sys","nix::sys::signalfd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::socket","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socketnix::sys","nix::sys::stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::statfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::statvfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::sysinfo","","","","","","","","","nix::sys","nix::sys::termiosnix::sys","nix::sys::time","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::uio","","","","","","","","","","","","","","","nix::sys","nix::sys::utsname","","","","","","","nix::sys","nix::sys::wait","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::inotify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","nix::sys::timerfd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","nix::time","","","","","","","","","","","","","","","","","","","","","nix","nix::ucontext","","","","","nix","nix::unistd","nix::unistd::alarm","","nix::unistd","nix::unistd::acct","","nix::unistd","","","","","","","","","","","","","","","","","","","","","","nix::unistd::ForkResult","nix::unistdnix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::dir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::errno","","","","","","","","","","nix::fcntl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::ifaddrs","","","","","","","","","","","","","","","","","nix::kmod","","","","","","","","","","","","","","","","","","nix::mount","","","","","","","","","","","","","","","","","","nix::mqueue","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::net::if_","","","","","","","","","nix::poll","","","","","","","","","","","","","","","","","","nix::pty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sched","","","","","","","","","","","","","","","","","","nix::sys::aio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::epoll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::eventfd","","","","","","","","","nix::sys::memfd","","","","","","","","","nix::sys::mman","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::personality","","","","","","","","","nix::sys::ptrace","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::quota","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::reboot","","","","","","","","","nix::sys::select","","","","","","","","","","","","","","","","","nix::sys::signal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::signalfd","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket::sockoptnix::sys::socketnix::sys::stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::statfs","","","","","","","","","","","","","","","","","","nix::sys::statvfs","","","","","","","","","","","","","","","","","","nix::sys::sysinfo","","","","","","","","","nix::sys::termios","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::time","","","","","","","","","","","","","","","","","","","","nix::sys::uio","","","","","","","","","","","","","","","","","","nix::sys::utsname","","","","","","","","","nix::sys::wait","","","","","","","","","","","","","","","","","","nix::sys::inotify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::timerfd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::time","","","","","","","","","","nix::ucontext","","","","","","","","","nix::unistd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix","","","","","","","","","","nix::sys::socket","","","","nix::sys::stat","","nix::sys::socket","","","","","","nix::pty","","nix::sys::signalfd","","nix::sys::socket","","","","","nix::sys::signalfd","nix::pty","nix::sys::stat","nix::sys::socket","","","","","","","","nix::sys::stat","nix::sys::socket","","nix::sys::signalfd","nix::sys::socket","nix::pty","nix::sys::stat","nix::sys::signalfd","nix::sys::socket","","","","","nix::pty","nix::sys::socket","","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::time","","","","","","","","","","","","","","","","nix::dir","","nix::ifaddrs","nix::pty","nix::sys::aio","nix::sys::signalfd","nix::sys::timerfd","nix::sys::time","","nix::sys::signal","","nix::sys::time","","nix::sys::aio","nix::sys::signal","nix::sys::socket","nix::sys::termios","nix::sys::time","","","nix::time","nix","nix::unistd","","nix","","nix::sys::socket","nix::time","nix::sys::select","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::dir","","","nix::ifaddrs","nix::sys::select","","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","nix::dir","","nix::errno","nix::fcntl","","","","","","","","nix::ifaddrs","nix::kmod","","nix::mount","","nix::mqueue","","","nix::net::if_","nix::poll","","nix::pty","","nix::sched","","nix::sys::aio","","","","nix::sys::epoll","","","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","","nix::sys::personality","nix::sys::ptrace","","","nix::sys::quota","","","","nix::sys::reboot","nix::sys::select","nix::sys::signal","","","","","","","","","nix::sys::signalfd","nix::sys::socket","","","","","","","","","","","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","","","","","","","","","nix::sys::stat","","","","nix::sys::statfs","","nix::sys::statvfs","","nix::sys::sysinfo","nix::sys::termios","","","","","","","","","","nix::sys::time","","nix::sys::uio","","nix::sys::utsname","nix::sys::wait","","nix::sys::inotify","","","","nix::sys::timerfd","","","","nix::time","nix::ucontext","nix::unistd","","","","","","","","","","","","","nix","nix::sched","nix::sys::quota","","nix::sys::select","nix::sys::socket::sockopt","nix::sys::socket","nix::sys::statvfs","nix::fcntl","","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::aio","","","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","","nix::sys::personality","nix::sys::ptrace","","","nix::sys::quota","","","nix::sys::reboot","nix::sys::signal","","","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","","","","","","nix::sys::time","","nix::sys::wait","nix::sys::inotify","","","nix::sys::timerfd","","","nix::time","nix::unistd","","nix::dir","","","","","","","","","nix::errno","nix::fcntl","","","","","","","","","","","","","","","","nix::ifaddrs","","","","nix::kmod","","","","nix::mount","","","","nix::mqueue","","","","","","nix::net::if_","","nix::poll","","","","nix::pty","","","","nix::sched","","","","nix::sys::aio","","","","nix::sys::epoll","","","","","","","nix::sys::eventfd","","nix::sys::memfd","","nix::sys::mman","","","","","","","","","","","nix::sys::personality","","nix::sys::ptrace","","","","nix::sys::quota","","","","","","nix::sys::reboot","nix::sys::select","","nix::sys::signal","","","","","","","","","","","","","","","","nix::sys::signalfd","","","","nix::sys::socket","","","","","","","","","","","","","","","","","","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","","","","","","","","","","","","","","","","","","nix::sys::stat","","","","nix::sys::statfs","","nix::sys::statvfs","","","","nix::sys::sysinfo","","nix::sys::termios","","","","","","","","","","","","","","","nix::sys::time","","","","nix::sys::uio","","","","nix::sys::utsname","","nix::sys::wait","","","","nix::sys::inotify","","","","","","nix::sys::timerfd","","","","","","","nix::time","","nix::ucontext","","nix::unistd","","","","","","","","","","","","","","nix","","nix::fcntl","","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::aio","","","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","","nix::sys::personality","nix::sys::ptrace","","","nix::sys::quota","","","nix::sys::reboot","nix::sys::signal","","","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","","","","","","nix::sys::time","","nix::sys::wait","nix::sys::inotify","","","nix::sys::timerfd","","","nix::time","nix::unistd","","nix::dir","","","","","nix::errno","nix::fcntl","","","","","","","","","nix::ifaddrs","","nix::kmod","","nix::mount","","nix::mqueue","","","nix::net::if_","nix::poll","","nix::pty","","","nix::sched","","nix::sys::aio","","","","","","","nix::sys::epoll","","","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","","nix::sys::personality","nix::sys::ptrace","","","nix::sys::quota","","","","nix::sys::reboot","nix::sys::select","","nix::sys::signal","","","","","","","","","nix::sys::signalfd","","nix::sys::socket","","","","","","","","","","","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","","","","","","","","","","","nix::sys::stat","","","","nix::sys::statfs","","nix::sys::statvfs","","nix::sys::sysinfo","nix::sys::termios","","","","","","","","","","nix::sys::time","","nix::sys::uio","","nix::sys::utsname","nix::sys::wait","","nix::sys::inotify","","","","","nix::sys::timerfd","","","","","nix::time","nix::ucontext","nix::unistd","","","","","","","","","","","","","nix","nix::errno","nix::sys::signal","nix::sys::socket","","","","","","","","","","nix::sys::time","","nix::time","nix::unistd","","","nix","nix::sys::time","","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::time","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::sys::time","","","","","","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::dir","","","","","nix::fcntl","","","","","","","","","nix::ifaddrs","","nix::kmod","","nix::mount","","nix::mqueue","","","nix::net::if_","nix::poll","","nix::pty","","nix::sched","","nix::sys::aio","","","","nix::sys::epoll","","","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","","nix::sys::personality","nix::sys::ptrace","","","nix::sys::quota","","","","nix::sys::reboot","nix::sys::select","nix::sys::signal","","","","","","","","","nix::sys::signalfd","","nix::sys::socket","","","","","","","","","","","nix::sys::socket::sockopt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","nix::sys::stat","","nix::sys::statvfs","","nix::sys::sysinfo","nix::sys::termios","","","","","","","","","nix::sys::time","","nix::sys::uio","","nix::sys::utsname","nix::sys::wait","","nix::sys::inotify","","","nix::sys::timerfd","","","nix::time","nix::ucontext","nix::unistd","","","","","","nix::sys::signal","nix::sys::termios","nix::sys::signal","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::fcntl","","","","","","nix::kmod","","nix::mount","","nix::mqueue","","nix::net::if_","nix::poll","nix::sched","nix::sys::epoll","","nix::sys::eventfd","nix::sys::memfd","nix::sys::mman","","","","","nix::sys::personality","nix::sys::ptrace","nix::sys::quota","nix::sys::signal","nix::sys::signalfd","nix::sys::socket","","nix::sys::stat","","nix::sys::statvfs","nix::sys::termios","","","","nix::sys::wait","nix::sys::inotify","","nix::sys::timerfd","","nix::unistd","nix::pty","","","nix::dir","nix::pty","nix::sys::signalfd","nix::sys::inotify","nix::sys::timerfd","nix::sys::inotify","nix::sys::timerfd","nix::pty","nix::sched","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::ptrace","","","","","","","","","","","","","","","","","","","","","","","nix::sys::signal","","nix::sys::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","An open directory.","Opens the given path as with <code>fcntl::open</code>.","Opens the given path as with <code>fcntl::openat</code>.","Converts from a descriptor-based object, closing the …","Converts from a file descriptor, closing it on success or …","Returns an iterator of <code>Result<Entry></code> which rewinds when …","","The return type of [Dir::into_iter]","A directory entry, similar to <code>std::fs::DirEntry</code>.","","","","","","","","","Returns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.","Returns the bare file name of this directory entry …","Returns the type of this directory entry, if known.","","Clear the environment of all name-value pairs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the platform-specific value of errno","","","","","Returns <code>Ok(value)</code> if it does not contain the sentinel …","The sentinel value indicates that a function failed and …","","Feature tests for OS functionality","Check if the OS supports atomic close-on-exec for sockets","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Configuration options for opened files.","Mask for the access mode of the file.","Open the file in append-only mode.","Generate a signal when input or output becomes possible.","Closes the file descriptor once an <code>execve</code> call is made.","Create the file if it does not exist.","Try to minimize cache effects of the I/O for this file.","If the specified path isn’t a directory, fail.","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.","Error out if a file was not created.","Same as <code>O_SYNC</code>.","Allow files whose sizes can’t be represented in an <code>off_t</code>…","Do not update the file last access time during <code>read(2)</code>s.","Don’t attach the device as the process’ controlling …","Same as <code>O_NONBLOCK</code>.","<code>open()</code> will fail if the given path is a symbolic link.","When possible, open the file in nonblocking mode.","Obtain a file descriptor for low-level access.","Only allow reading.","Allow both reading and writing.","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.","Create an unnamed temporary file.","Truncate an existing regular file to 0 length if it …","Only allow writing.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","Additional flags for file sealing, which allows for …","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.","The file cannot be reduced in size.","The size of the file cannot be increased.","The file contents cannot be modified.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Additional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.","The file descriptor will automatically be closed during a …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional flags to <code>splice</code> and friends.","Request that pages be moved instead of copied.","Do not block on I/O.","Hint that more data will be coming in a subsequent splice.","Gift the user pages to the kernel.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Copy a range of data from one file to another","","","","Mode argument flags for fallocate determining operation …","File size is not changed.","Deallocates space by creating a hole.","Removes byte range from a file without leaving a hole.","Zeroes space in specified byte range.","Increases file space by inserting a hole within the file …","Shared file data extants are made private to the file.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Manipulates file space.","","Query network interface addresses","Describes a single address for an interface as returned …","Name of the network interface","Flags as from <code>SIOCGIFFLAGS</code> ioctl","Network address of this interface","Netmask of this interface","Broadcast address of this interface, if applicable","Point-to-point destination address","Holds the results of <code>getifaddrs</code>.","Get interface addresses using libc’s <code>getifaddrs</code>","Load and unload kernel modules.","Loads a kernel module from a buffer.","Flags used by the <code>finit_module</code> function.","Ignore symbol version hashes.","Ignore kernel version magic.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Loads a kernel module from a given file descriptor.","Flags used by <code>delete_module</code>.","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Unloads the kernel module with the given name.","","","Mount read-only","Ignore suid and sgid bits","Disallow access to device special files","Disallow program execution","Writes are synced at once","Alter flags of a mounted FS","Allow mandatory locks on a FS","Directory modifications are synchronous","Do not update access times","Do not update directory access times","Linux 2.4.0 - Bind directory at different place","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Posix Message Queue functions","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","Open a message queue","Remove a message queue","Close a message queue","Receive a message from a message queue","Send a message to a message queue","Get message queue attributes","Set the attributes of the message queue. Only <code>O_NONBLOCK</code> …","Convenience function. Sets the <code>O_NONBLOCK</code> attribute for a …","Convenience function. Removes <code>O_NONBLOCK</code> attribute for a …","Functionality involving network interfaces","Network interface name resolution.","Resolve an interface into a interface number.","Standard interface flags, used by <code>getifaddrs</code>","Interface is running. (see <code>netdevice(7)</code>)","Valid broadcast address set. (see <code>netdevice(7)</code>)","Internal debugging flag. (see <code>netdevice(7)</code>)","Interface is a loopback interface. (see <code>netdevice(7)</code>)","Interface is a point-to-point link. (see <code>netdevice(7)</code>)","Avoid use of trailers. (see <code>netdevice(7)</code>)","Resources allocated. (see <code>netdevice(7)</code>)","No arp protocol, L2 destination address not set. (see …","Interface is in promiscuous mode. (see <code>netdevice(7)</code>)","Receive all multicast packets. (see <code>netdevice(7)</code>)","Master of a load balancing bundle. (see <code>netdevice(7)</code>)","Slave of a load balancing bundle. (see <code>netdevice(7)</code>)","Supports multicast. (see <code>netdevice(7)</code>)","Is able to select media type via ifmap. (see <code>netdevice(7)</code>)","Auto media selection active. (see <code>netdevice(7)</code>)","The addresses are lost when the interface goes down. (see …","Driver signals L1 up. Volatile.","Driver signals dormant. Volatile.","Echo sent packets. Volatile.","Do not provide packet information","TUN device (no Ethernet headers) ","TAP device","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Wait for events to trigger on specific file descriptors","This is a wrapper around <code>libc::pollfd</code>.","Creates a new <code>PollFd</code> specifying the events of interest …","Returns the events that occured in the last call to <code>poll</code> …","These flags define the different events that can be …","There is data to read.","There is some exceptional condition on the file …","Writing is now possible, though a write larger that the …","Equivalent to <code>POLLIN</code>","Equivalent to <code>POLLOUT</code>","Priority band data can be read (generally unused on …","Priority data may be written.","Error condition (only returned in <code>PollFd::revents</code>; …","Hang up (only returned in <code>PollFd::revents</code>; ignored in …","Invalid request: <code>fd</code> not open (only returned in …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","<code>poll</code> waits for one of a set of file descriptors to become …","<code>ppoll()</code> allows an application to safely wait until either …","Create master and slave virtual pseudo-terminals (PTYs)","","","","","","","Representation of a master/slave pty pair","The master port in a virtual pty pair","The slave port in a virtual pty pair","Representation of a master with a forked pty","The master port in a virtual pty pair","Metadata about forked process","Representation of the Master device in a master/slave pty …","Grant access to a slave pseudoterminal (see <code>grantpt(3)</code>)","Open a pseudoterminal device (see <code>posix_openpt(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","Unlock a pseudoterminal master/slave pseudoterminal pair …","Create a new pseudoterminal, returning the slave and …","Create a new pseudoterminal, returning the master file …","","","","CpuSet represent a bit-mask of CPUs. CpuSets are used by …","<code>sched_setaffinity</code> set a thread’s CPU affinity mask (…","<code>sched_getaffinity</code> get a thread’s CPU affinity mask (…","","","","Explicitly yield the processor to other threads.","","POSIX Asynchronous I/O","Mode for <code>AioCb::fsync</code>.  Controls whether only data or …","do it like <code>fsync</code>","on supported operating systems only, do it like <code>fdatasync</code>","When used with <code>lio_listio</code>, determines whether a given …","","","","Mode for <code>lio_listio</code>","Requests that <code>lio_listio</code> block until all requested …","Requests that <code>lio_listio</code> return immediately","Return values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>","All outstanding requests were canceled","Some requests were not canceled.  Their status should be …","All of the requests have already finished","Owns (uniquely or shared) a memory buffer to keep it from …","No buffer to own.","Keeps a reference to a slice","Generic thing that keeps a buffer from dropping","Generic thing that keeps a mutable buffer from dropping","AIO Control Block.","Remove the inner <code>Buffer</code> and return it","Remove the inner boxed slice, if any, and return it.","Remove the inner boxed mutable slice, if any, and return …","Returns the underlying file descriptor associated with …","Constructs a new <code>AioCb</code> with no associated buffer.","Constructs a new <code>AioCb</code> from a mutable slice.","The safest and most flexible way to create an <code>AioCb</code>.","The safest and most flexible way to create an <code>AioCb</code> for …","Constructs a new <code>AioCb</code> from a mutable raw pointer","Constructs a new <code>AioCb</code> from a raw pointer.","Like <code>from_mut_slice</code>, but works on constant slices rather …","Update the notification settings for an existing <code>aiocb</code>","Cancels an outstanding AIO request.","Retrieve error status of an asynchronous operation.","An asynchronous version of <code>fsync(2)</code>.","Returns the <code>aiocb</code>’s <code>LioOpcode</code> field","Returns the requested length of the aio operation in bytes","Returns the file offset stored in the <code>AioCb</code>","Returns the priority of the <code>AioCb</code>","Asynchronously reads from a file descriptor into a buffer","Returns the <code>SigEvent</code> stored in the <code>AioCb</code>","Retrieve return status of an asynchronous operation.","Asynchronously writes from a buffer to a file descriptor","Cancels outstanding AIO requests for a given file …","Suspends the calling process until at least one of the …","LIO Control Block.","A collection of <code>AioCb</code>s.  All of these will be issued …","Initialize an empty <code>LioCb</code>","Submits multiple asynchronous I/O requests with a single …","Resubmits any incomplete operations with <code>lio_listio</code>.","Collect final status for an individual <code>AioCb</code> submitted as …","Retrieve error status of an individual <code>AioCb</code> submitted as …","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Provide helpers for making ioctl system calls.","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Desired memory protection of a memory mapping.","Pages cannot be accessed.","Pages can be read.","Pages can be written.","Pages can be executed","Apply protection up to the end of a mapping that grows …","Apply protection down to the beginning of a mapping that …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Additional parameters for <code>mmap()</code>.","Compatibility flag. Ignored.","Share this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.","Create a private copy-on-write mapping. Mutually …","Place the mapping at exactly the address specified in <code>addr</code>…","Synonym for <code>MAP_ANONYMOUS</code>.","The mapping is not backed by any file.","Put the mapping into the first 2GB of the process address …","Used for stacks; indicates to the kernel that the mapping …","Compatibility flag. Ignored.","Compatibility flag. Ignored.","Mark the mmaped region to be locked in the same way as …","Do not reserve swap space for this mapping.","Populate page tables for a mapping.","Only meaningful when used with <code>MAP_POPULATE</code>. Don’t …","Allocate the mapping using “huge pages.”","Make use of 64KB huge page (must be supported by the …","Make use of 512KB huge page (must be supported by the …","Make use of 1MB huge page (must be supported by the …","Make use of 2MB huge page (must be supported by the …","Make use of 8MB huge page (must be supported by the …","Make use of 16MB huge page (must be supported by the …","Make use of 32MB huge page (must be supported by the …","Make use of 256MB huge page (must be supported by the …","Make use of 512MB huge page (must be supported by the …","Make use of 1GB huge page (must be supported by the …","Make use of 2GB huge page (must be supported by the …","Make use of 16GB huge page (must be supported by the …","Region grows down, like a stack.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Options for <code>mremap()</code>.","Permit the kernel to relocate the mapping to a new …","Place the mapping at exactly the address specified in …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Usage information for a range of memory to allow for …","No further special treatment. This is the default.","Expect random page references.","Expect sequential page references.","Expect access in the near future.","Do not expect access in the near future.","Free up a given range of pages and its associated backing …","Do not make pages in this range available to the child …","Undo the effect of <code>MADV_DONTFORK</code>.","Poison the given pages.","Enable Kernel Samepage Merging (KSM) for the given pages.","Undo the effect of <code>MADV_MERGEABLE</code>","Preserve the memory of each page but offline the original …","Enable Transparent Huge Pages (THP) for pages in the …","Undo the effect of <code>MADV_HUGEPAGE</code>.","Exclude the given range from a core dump.","Undo the effect of an earlier <code>MADV_DONTDUMP</code>.","Specify that the application no longer needs the pages in …","Configuration flags for <code>msync</code>.","Schedule an update but return immediately.","Invalidate all cached data.","Perform an update and wait for it to complete.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags for <code>mlockall</code>.","Lock pages that are currently mapped into the address …","Lock pages which will become mapped into the address …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Locks all memory pages that contain part of the address …","Unlocks all memory pages that contain part of the address …","Locks all memory pages mapped into this process’ …","Unlocks all memory pages mapped into this process’ …","allocate memory, or map files or devices into memory","Expands (or shrinks) an existing memory mapping, …","remove a mapping","give advice about use of memory","Set protection of memory mapping.","synchronize a mapped region","","","","Flags used and returned by <code>get()</code> and <code>set()</code>.","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Retrieve the current process personality.","Set the current process personality.","","","Obtain ID of the calling thread (see <code>pthread_self(3)</code>","","","Ptrace Request enum defining the action to be taken.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Using the ptrace options the tracer can configure the …","Event that stops before a return from fork or clone.","Event that stops before a return from vfork or clone.","Event that stops before a return from clone.","Event that stops before a return from execve.","Event for a return from vfork.","Event for a stop before an exit. Unlike the waitpid Exit …","STop triggered by a seccomp rule on a tracee.","Ptrace options used in conjunction with the …","Get user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>","Set user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>","Set options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.","Gets a ptrace event as described by …","Get siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>","Set siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>","Sets the process as traceable, as with …","Continue execution until the next syscall, as with …","Continue execution until the next syscall, as with …","Attach to a running process, as with …","Attach to a running process, as with …","Detaches the current running process, as with …","Restart the stopped tracee process, as with …","Issues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>","Move the stopped tracee process forward by a single step …","Move the stopped tracee process forward by a single step …","Reads a word from a processes memory at the given address","Writes a word into the processes memory at the given …","Set and configure disk quotas for users, groups, or …","The scope of the quota.","Specify a user quota","Specify a group quota","The type of quota format to use.","Use the original quota format.","Use the standard VFS v0 quota format.","Use the VFS v1 quota format.","Indicates the quota fields that are valid to read from.","The block hard & soft limit fields.","The current space field.","The inode hard & soft limit fields.","The current inodes field.","The disk use time limit field.","The file quote time limit field.","All block & inode limits.","The space & inodes usage fields.","The time limit fields.","All fields.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Wrapper type for <code>if_dqblk</code>","The absolute limit on disk quota blocks allocated.","Set the absolute limit on disk quota blocks allocated.","Preferred limit on disk quota blocks","Set the preferred limit on disk quota blocks allocated.","Current occupied space (bytes).","Maximum number of allocated inodes.","Set the maximum number of allocated inodes.","Preferred inode limit","Set the preferred limit of allocated inodes.","Current number of allocated inodes.","Time limit for excessive disk use.","Set the time limit for excessive disk use.","Time limit for excessive files.","Set the time limit for excessive files.","Turn on disk quotas for a block device.","Disable disk quotas for a block device.","Update the on-disk copy of quota usages for a filesystem.","Get disk quota limits and current usage for the given …","Configure quota values for the specified fields for a …","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.","How exactly should the system be rebooted.","","","","","","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).","","","","","","","","","Finds the highest file descriptor in the set.","Returns an iterator over the file descriptors in the set.","Iterator over <code>FdSet</code>.","Monitors file descriptors for readiness","Monitors file descriptors for readiness with an altered …","","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …","","Used to request asynchronous notification of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns name of signal.","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","Gets the currently blocked (masked) set of signals for …","Sets the set of signals as the signal mask for the …","Adds the set of signals to the signal mask for the …","Removes the set of signals from the signal mask for the …","Sets the set of signals as the signal mask, and returns …","Suspends execution of the calling thread until one of the …","A signal handler.","Default signal handling.","Request that the signal be ignored.","Use the given signal-catching function, which takes in …","Use the given signal-catching function, which takes in …","Action to take on receipt of a signal. Corresponds to …","Creates a new action.","Returns the flags set on the action.","Returns the set of signals that are blocked during …","Returns the action’s handler.","Changes the action taken by a process on receipt of a …","Signal management (see signal(3p))","Manages the signal mask (set of blocked signals) for the …","Examine and change blocked signals.","","Send a signal to a process group (see killpg(3)).","","","Used to request asynchronous notification of certain …","No notification will be delivered","The signal given by <code>signal</code> will be delivered to the …","","","The signal <code>signal</code> is queued to the thread whose LWP ID is …","","","","Interface for the <code>signalfd</code> syscall.","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Creates a new file descriptor for reading signals.","A helper struct for creating, reading and closing a …","","","","","Socket interface functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These constants specify the protocol family to be used in …","Local communication (see <code>unix(7)</code>)","IPv4 Internet protocols (see <code>ip(7)</code>)","IPv6 Internet protocols (see <code>ipv6(7)</code>)","Kernel user interface device (see <code>netlink(7)</code>)","Low level packet interface (see <code>packet(7)</code>)","Amateur radio AX.25 protocol","IPX - Novell protocols","AppleTalk","","","Access to raw ATM PVCs","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","Interface to kernel crypto API","","","Unspecified address family, (see <code>getaddrinfo(3)</code>)","Represents a socket address","","","","","Datalink address (MAC)","","","","","A wrapper around <code>sockaddr_un</code>.","","","","","","","","","","Hardware Address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These constants are used to specify the communication …","Provides sequenced, reliable, two-way, connection- based …","Supports datagrams (connectionless, unreliable messages …","Provides a sequenced, reliable, two-way connection- based …","Provides raw network protocol access.","Provides a reliable datagram layer that does not …","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …","TCP protocol (ip(7))","UDP protocol (ip(7))","Receives routing and link updates and may be used to …","Reserved for user-mode socket protocols (ref)","Query information about sockets of various protocol …","SELinux event notifications. (ref)","Open-iSCSI (ref)","Auditing (ref)","Access to FIB lookup from user space (ref)","Netfilter subsystem (ref)","SCSI Transports (ref)","Infiniband RDMA (ref)","Transport IPv6 packets from netfilter to user space.  …","DECnet routing messages (ref)","Kernel messages to user space (ref)","Netlink interface to request information about ciphers …","Additional socket options","Set non-blocking mode on the new socket","Set close-on-exec on the new descriptor","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags for send/recv and their relatives","Sends or requests out-of-band data on sockets that …","Peeks at an incoming message. The data is treated as …","Receive operation blocks until the full amount of data …","Enables nonblocking operation; if the operation would …","Receive flags: Control Data was discarded (buffer too …","For raw (<code>Packet</code>), Internet datagram (since Linux …","Terminates a record (when this notion is supported, as for…","This flag specifies that queued errors should be received …","Set the <code>close-on-exec</code> flag for the file descriptor …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Unix credentials of the sending process.","Creates a new instance with the credentials of the …","Returns the process identifier","Returns the user identifier","Returns the group identifier","Request for multicast socket operations","Instantiate a new <code>IpMembershipRequest</code>","Request for ipv6 multicast socket operations","Instantiate a new <code>Ipv6MembershipRequest</code>","","","","","Iterate over the valid control messages pointed to by this…","","A type-safe wrapper around a single control message, as …","Received version of [<code>ControlMessage::ScmRights</code>][…","Received version of [<code>ControlMessage::ScmCredentials</code>][…","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …","","","UDP Generic Receive Offload (GRO) allows receiving …","A type-safe zero-copy wrapper around a single control …","A message of type <code>SCM_RIGHTS</code>, containing an array of file …","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, …","Set IV for <code>AF_ALG</code> crypto API.","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …","Set the length of associated authentication data (AAD) …","UDP GSO makes it possible for applications to generate …","Configure the sending addressing and interface for v4","Configure the sending addressing and interface for v6","Send data in scatter-gather vectors to a socket, possibly …","","","","","","An extension of <code>sendmsg</code> that allows the caller to …","","","","An extension of <code>recvmsg</code> that allows the caller to receive …","Receive message in scatter-gather vectors from a socket, …","Create an endpoint for communication","Create a pair of connected sockets","Listen for connections on a socket","Bind a name to a socket","Accept a connection on a socket","Accept a connection on a socket","Initiate a connection on a socket","Receive data from a connection-oriented socket. Returns …","Receive data from a connectionless or connection-oriented …","Send a message to a socket","Send data to a connection-oriented socket. Returns the …","Represents a socket option that can be accessed or set. …","","Represents a socket option that can be accessed or set. …","","Get the current value for the requested socket option","Sets the value for the requested socket option","Get the address of the peer connected to the socket <code>fd</code>.","Get the current address to which the socket <code>fd</code> is bound.","Return the appropriate <code>SockAddr</code> type from a …","","Further receptions will be disallowed.","Further  transmissions will be disallowed.","Further receptions and transmissions will be disallowed.","Shut down part of a full-duplex connection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","","","","Change the file permission bits of the file specified by …","Flags for <code>fchmodat</code> function.","","","Change the file permission bits.","Change the access and modification times of a file.","Change the access and modification times of a file …","Change the access and modification times of the file …","Flags for <code>utimensat</code> function.","","","Change the access and modification times of a file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Magic code defining system type","Optimal transfer block size","Size of a block","Maximum length of filenames","Total data blocks in filesystem","Free blocks in filesystem","Free blocks available to unprivileged user","Total file nodes in filesystem","Free file nodes in filesystem","Filesystem ID","","","Get filesystem statistics","File system mount Flags","Read Only","Do not allow the set-uid bits to have an effect","Do not interpret character or block-special devices","Do not allow execution of binaries on the filesystem","All IO should be done synchronously","Allow mandatory locks on the filesystem","Write on file/directory/symlink","Append-only file","Immutable file","Do not update access times on files","Do not update access times on files","Update access time relative to modify/change time","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Wrapper around the POSIX <code>statvfs</code> struct","get the file system block size","Get the fundamental file system block size","Get the number of blocks.","Get the number of free blocks in the file system","Get the number of free blocks for unprivileged users","Get the total number of file inodes","Get the number of free file inodes","Get the number of free file inodes for unprivileged users","Get the file system id","Get the mount flags","Get the maximum filename length","Return a <code>Statvfs</code> object with information about the <code>path</code>","Return a <code>Statvfs</code> object with information about <code>fd</code>","","System info structure returned by <code>sysinfo</code>.","Returns the load average tuple.","Returns the time since system boot.","Current number of processes.","Returns the amount of swap memory in Bytes.","Returns the amount of unused swap memory in Bytes.","Returns the total amount of installed RAM in Bytes.","Returns the amount of completely unused RAM in Bytes.","Returns system information.","An interface for controlling asynchronous communication …","Stores settings for the termios API","Input mode flags (see <code>termios.c_iflag</code> documentation)","Output mode flags (see <code>termios.c_oflag</code> documentation)","Control mode flags (see <code>termios.c_cflag</code> documentation)","Local mode flags (see <code>termios.c_lflag</code> documentation)","Control characters (see <code>termios.c_cc</code> documentation)","Baud rates supported by the system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specify when a port configuration change should occur.","The change will occur immediately","The change occurs after all output has been written","Same as <code>TCSADRAIN</code>, but will also flush the input buffer","Specify a combination of the input and output buffers to …","Flush data that was received but not read","Flush data written but not transmitted","Flush both received data not read and written data not …","Specify how transmission flow should be altered","Suspend transmission","Resume transmission","Transmit a STOP character, which should disable a …","Transmit a START character, which should re-enable a …","Indices into the <code>termios.c_cc</code> array for special …","","","","","","","","","","","","","","","","","","","","Flags for configuring the input mode of a terminal","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags for configuring the output mode of a terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags for setting the control mode of a terminal","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags for setting any local modes","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Get input baud rate (see cfgetispeed(3p)).","Get output baud rate (see cfgetospeed(3p)).","Set input baud rate (see cfsetispeed(3p)).","Set output baud rate (see cfsetospeed(3p)).","Set both the input and output baud rates (see termios(3)).","Configures the port to something like the “raw” mode …","Return the configuration of a port tcgetattr(3p)).","Set the configuration for a terminal (see tcsetattr(3p)).","Block until all output data is written (see tcdrain(3p)).","Suspend or resume the transmission or reception of data …","Discard data in the output or input queue (see tcflush(3p)…","Send a break for a specific duration (see tcsendbreak(3p)…","Get the session controlled by the given terminal (see …","","","","","","","","","","","","","","","","","","","","","","","","","","","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.","","","A slice of memory in a remote process, starting at …","The starting address of this slice (<code>iov_base</code>).","The number of bytes in this slice (<code>iov_len</code>).","Write data directly to another process’s virtual memory …","Read data directly from another process’s virtual memory…","","","","","","","","","","","","","","","","","","","","Don’t reap, just poll status.","Don’t wait on children of other threads in this group","Wait on all children, regardless of type","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Possible return values from <code>wait()</code> or <code>waitpid()</code>.","The process exited normally (as with <code>exit()</code> or returning …","The process was killed by the given signal. The third …","The process is alive, but was stopped by the given …","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …","The traced process was stopped by execution of a system …","The process was previously stopped but has resumed …","There are currently no state changes to report in any …","Extracts the PID from the WaitStatus unless it equals …","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …","","","Monitoring API for filesystem events.","Configuration options for <code>inotify_add_watch</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Configuration options for <code>inotify_init1</code>.","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","An inotify instance. This is also a file descriptor, you …","This object is returned when you create a new watch on an …","A single inotify event.","Watch descriptor. This field corresponds to the watch …","Event mask. This field is a bitfield describing the exact …","This cookie is a number that allows you to connect …","Filename. This field exists only if the event was …","Initialize a new inotify instance.","Adds a new watch on the target file or directory. ","Removes an existing watch using the watch descriptor …","Reads a collection of events from the inotify file …","Timer API via file descriptors.","A timerfd instance. This is also a file descriptor, you …","The type of the clock used to mark the progress of the …","","","","","","Additional flags to change the behaviour of the file …","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Flags that are used for arming the timer.","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","An enumeration allowing the definition of the expiration …","","","","Creates a new timer based on the clock defined by <code>clockid</code>…","Sets a new alarm on the timer.","Get the parameters for the alarm currently set, if any.","Remove the alarm if any is set.","Wait for the configured alarm to expire.","","Clock identifier","Creates <code>ClockId</code> from raw <code>clockid_t</code>","Returns <code>ClockId</code> of a <code>pid</code> CPU-time clock","Returns resolution of the clock id","Returns the current time on the clock id","Sets time to <code>timespec</code> on the clock id","Gets the raw <code>clockid_t</code> wrapped by <code>self</code>","","","","","","","","","","","Get the resolution of the specified clock, (see …","Get the time of the specified clock, (see clock_gettime(2)…","Set the time of the specified clock, (see clock_settime(2)…","Get the clock id of the specified process id, (see …","","","","","","","Safe wrappers around functions found in libc “unistd.h…","Alarm signal scheduling.","Schedule an alarm signal.","Cancel an previously set alarm signal.","","Enable process accounting","Disable process accounting","","Sets the real, effective, and saved uid. (see setresuid(2)…","Sets the real, effective, and saved gid. (see setresuid(2)…","User identifier","Creates <code>Uid</code> from raw <code>uid_t</code>.","Returns Uid of calling process. This is practically a …","Returns effective Uid of calling process. This is …","Returns true if the <code>Uid</code> represents privileged user - …","Get the raw <code>uid_t</code> wrapped by <code>self</code>.","Constant for UID = 0","Group identifier","Creates <code>Gid</code> from raw <code>gid_t</code>.","Returns Gid of calling process. This is practically a …","Returns effective Gid of calling process. This is …","Get the raw <code>gid_t</code> wrapped by <code>self</code>.","Process identifier","Creates <code>Pid</code> from raw <code>pid_t</code>.","Returns PID of calling process","Returns PID of parent of calling process","Get the raw <code>pid_t</code> wrapped by <code>self</code>.","Represents the successful result of calling <code>fork</code>","","","","Return <code>true</code> if this is the child process of the <code>fork()</code>","Returns <code>true</code> if this is the parent process of the <code>fork()</code>","Create a new child process duplicating the parent process …","Get the pid of this process (see getpid(2)).","Get the pid of this processes’ parent (see getpid(2)).","Set a process group ID (see setpgid(2)).","","Create new session and set process group id (see setsid(2)…","Get the process group ID of a session leader getsid(2).","Get the terminal foreground process group (see …","Set the terminal foreground process group (see …","Get the group id of the calling process (see getpgrp(3)).","Get the caller’s thread ID (see gettid(2).","Create a copy of the specified file descriptor (see dup(2)…","Create a copy of the specified file descriptor using the …","Create a new copy of the specified file descriptor using …","Change the current working directory of the calling …","Change the current working directory of the process to …","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.","Returns the current directory as a <code>PathBuf</code>","Change the ownership of the file at <code>path</code> to be owned by …","Change the ownership of the file referred to by the open …","Flags for <code>fchownat</code> function.","","","Change the ownership of the file at <code>path</code> to be owned by …","Replace the current process image with a new one (see …","Replace the current process image with a new one (see …","Replace the current process image with a new one and …","Replace the current process image with a new one and …","Replace the current process image with a new one (see …","Execute program relative to a directory file descriptor …","Daemonize this process by detaching from the controlling …","Set the system host name (see sethostname(2)).","Get the host name and store it in the provided buffer, …","Close a raw file descriptor","Read from a raw file descriptor.","Write to a raw file descriptor.","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …","Specify an offset relative to the start of the file.","Specify an offset relative to the current file location.","Specify an offset relative to the end of the file.","Specify an offset relative to the next location in the …","Specify an offset relative to the next hole in the file …","Move the read/write file offset.","","Create an interprocess channel.","Like <code>pipe</code>, but allows setting certain file descriptor …","Truncate a file to a specified length","Truncate a file to a specified length","","Flags for <code>linkat</code> function.","","","Link one file to another file","Remove a directory entry","Flags for <code>unlinkat</code> function.","","","Remove a directory entry","","Commit filesystem caches to disk","Synchronize changes to a file","Synchronize the data of a file","Get a real user ID","Get the effective user ID","Get the real group ID","Get the effective group ID","Set the effective user ID","Set the effective group ID","Set the user ID","Set the group ID","Set the user identity used for filesystem checks …","Set the group identity used for filesystem checks …","Get the list of supplementary group IDs of the calling …","Set the list of supplementary group IDs for the calling …","Calculate the supplementary group access list.","Initialize the supplementary group access list.","Suspend the thread until a signal is received.","Suspend execution for an interval of time","Creates a regular file which persists even after process …","Variable names for <code>pathconf</code>","Minimum number of bits needed to represent, as a signed …","Maximum number of links to a single file.","Maximum number of bytes in a terminal canonical input …","Minimum number of bytes for which space is available in a …","Maximum number of bytes in a filename (not including the …","Maximum number of bytes the implementation will store as …","Maximum number of bytes that is guaranteed to be atomic …","Symbolic links can be created.","Minimum number of bytes of storage actually allocated for …","Recommended increment for file transfer sizes between the …","Maximum recommended file transfer size.","Minimum recommended file transfer size.","Recommended file transfer buffer alignment.","Maximum number of bytes in a symbolic link.","The use of <code>chown</code> and <code>fchown</code> is restricted to a process …","Pathname components longer than {NAME_MAX} generate an …","This symbol shall be defined to be the value of a …","Asynchronous input or output operations may be performed …","Prioritized input or output operations may be performed …","Synchronized input or output operations may be performed …","Like <code>pathconf</code>, but works with file descriptors instead of …","Get path-dependent configurable system variables (see …","Variable names for <code>sysconf</code>","Maximum number of I/O operations in a single list I/O …","Maximum number of outstanding asynchronous I/O operations …","The maximum amount by which a process can decrease its …","Maximum length of argument to the exec functions …","Maximum number of functions that may be registered with …","Maximum obase values allowed by the bc utility.","Maximum number of elements permitted in an array by the …","Maximum scale value allowed by the bc utility.","Maximum length of a string constant accepted by the bc …","Maximum number of simultaneous processes per real user ID.","","Maximum number of weights that can be assigned to an …","Maximum number of timer expiration overruns.","Maximum number of expressions that can be nested within …","Maximum length of a host name (not including the …","Maximum number of iovec structures that one process has …","Unless otherwise noted, the maximum length, in bytes, of …","Maximum length of a login name.","Maximum number of simultaneous supplementary group IDs …","Initial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers","Initial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers","The maximum number of open message queue descriptors a …","The maximum number of message priorities supported by the …","A value one greater than the maximum value that the …","The implementation supports the Advisory Information …","The implementation supports barriers.","The implementation supports asynchronous input and output.","The implementation supports clock selection.","The implementation supports the Process CPU-Time Clocks …","The implementation supports the File Synchronization …","The implementation supports the IPv6 option.","The implementation supports job control.","The implementation supports memory mapped Files.","The implementation supports the Process Memory Locking …","The implementation supports the Range Memory Locking …","The implementation supports memory protection.","The implementation supports the Message Passing option.","The implementation supports the Monotonic Clock option.","The implementation supports the Prioritized Input and …","The implementation supports the Process Scheduling option.","The implementation supports the Raw Sockets option.","The implementation supports read-write locks.","The implementation supports realtime signals.","The implementation supports the Regular Expression …","Each process has a saved set-user-ID and a saved …","The implementation supports semaphores.","The implementation supports the Shared Memory Objects …","The implementation supports the POSIX shell.","The implementation supports the Spawn option.","The implementation supports spin locks.","The implementation supports the Process Sporadic Server …","","The implementation supports the Synchronized Input and …","The implementation supports the Thread Stack Address …","The implementation supports the Thread Stack Size …","The implementation supports the Thread CPU-Time Clocks …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Thread Execution …","The implementation supports the Thread Process-Shared …","The implementation supports the Robust Mutex Priority …","The implementation supports the Robust Mutex Priority …","The implementation supports thread-safe functions.","The implementation supports the Thread Sporadic Server …","The implementation supports threads.","The implementation supports timeouts.","The implementation supports timers.","The implementation supports the Trace option.","The implementation supports the Trace Event Filter option.","","The implementation supports the Trace Inherit option.","The implementation supports the Trace Log option.","","","","The implementation supports the Typed Memory Objects …","Integer value indicating version of this standard …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation supports the C-Language Binding option.","The implementation supports the C-Language Development …","The implementation supports the Terminal Characteristics …","The implementation supports the FORTRAN Development …","The implementation supports the FORTRAN Runtime Utilities …","The implementation supports the creation of locales by …","The implementation supports the Batch Environment …","The implementation supports the Batch Accounting option.","The implementation supports the Batch Checkpoint/Restart …","The implementation supports the Locate Batch Job Request …","The implementation supports the Batch Job Message Request …","The implementation supports the Track Batch Job Request …","The implementation supports the Software Development …","The implementation supports the User Portability …","Integer value indicating version of the Shell and …","The size of a system page in bytes.","","","","","","","","","","","","","","","The implementation supports the X/Open Encryption Option …","The implementation supports the Issue 4, Version 2 …","","The implementation supports the X/Open Realtime Option …","The implementation supports the X/Open Realtime Threads …","The implementation supports the Issue 4, Version 2 Shared …","The implementation supports the XSI STREAMS Option Group.","The implementation supports the XSI option","Integer value indicating version of the X/Open …","Get configurable system variables (see sysconf(3))","Options for access()","Test for existence of file.","Test for read permission.","Test for write permission.","Test for execute (search) permission.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Checks the file named by <code>path</code> for accessibility according …","Representation of a User, based on <code>libc::passwd</code>","Username","User password (probably encrypted)","User ID","Group ID","User information","Home directory","Path to shell","Get a user by UID.","Get a user by name.","Representation of a Group, based on <code>libc::group</code>","Group name","Group password","Group ID","List of Group members","Get a group by GID.","Get a group by name.","Get the name of the terminal device that is open on file …","Nix Result Type","Nix Error Type","","","The operation involved a conversion to Rust’s native …","The operation is not supported by Nix, in this instance …","Convert this <code>Error</code> to an <code>Errno</code>.","Create a nix Error from a given errno","Get the current errno and convert it to a nix Error","Create a new invalid argument error (<code>EINVAL</code>)","","","","","Generate an ioctl request code for a command that passes …","Generate an ioctl request code for a command that reads.","Generate an ioctl request code for a command that writes.","Generate an ioctl request code for a command that reads …","Generates a wrapper function for an ioctl that passes no …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads data …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that writes …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for a ioctl that writes an …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads and …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads an …","Generates a wrapper function for an ioctl that writes an …","Generates a wrapper function for an ioctl that reads and …","Create a buffer large enough for storing some control …akes a new <code>TimeSpec</code> with given number of microseconds.","Makes a new <code>TimeSpec</code> with given number of nanoseconds.","","","","","","","Makes a new <code>TimeVal</code> with given number of microseconds.","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …","","","","","","","","","If the <code>AioCb</code> has no remaining state in the kernel, just …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a owning iterator, that is, one that takes …eturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flagseturns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Create a new and empty CpuSet.","Test to see if a CPU is in the CpuSet. <code>field</code> is the CPU …","Add a CPU to CpuSet. <code>field</code> is the CPU id to add","Remove a CPU from CpuSet. <code>field</code> is the CPU id to remove","Return the maximum number of CPU in CpuSet","When delivering system call traps set a bit to allow …","Stop tracee at next fork and start tracing the forked …","Stop tracee at next vfork call and trace the vforked …","Stop tracee at next clone call and trace the cloned …","Stop tracee at next execve call.","Stop tracee at vfork completion.","Stop tracee at next exit call. Stops before exit …","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. …","Send a SIGKILL to the tracee if the tracer exits.  This …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","<strong>Note:</strong> this constructor does not allow the user to set the …","","","","","","","","Always AF_PACKET","Physical-layer protocol","Interface number","ARP hardware type","Packet type","Length of MAC address","Physical-layer address (MAC)","","Context Identifier (CID)","Port number","Create a new <code>AddressFamily</code> from an integer value …","","","Gets the IP address associated with this socket address.","Gets the port number associated with this socket address","","","Create a new IpAddr that contains an IPv4 address.","Create a new IpAddr that contains an IPv6 address.","","","","","","","","","","Return the eight 16-bit segments that make up this address","","Create a new sockaddr_un representing a filesystem path.","Create a new <code>sockaddr_un</code> representing an address in the …","If this address represents a filesystem path, return that …","If this address represents an abstract socket, return its …","","","","","","","","Conversion from nix’s SockAddr type to the underlying …"],"i":[0,0,1,1,1,1,1,0,0,0,0,2,2,2,2,2,2,2,3,3,3,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,4,4,4,4,4,0,5,0,0,0,0,6,6,6,6,6,6,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,12,12,12,12,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,15,15,15,15,15,15,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,26,26,26,26,0,27,27,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,0,30,30,30,0,31,31,0,32,32,32,0,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,35,35,35,35,35,35,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,0,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,55,55,55,55,55,0,0,0,0,0,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,57,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,0,60,60,60,60,60,60,60,60,60,60,60,60,60,0,61,61,61,61,0,62,62,62,62,0,0,0,0,0,0,0,0,0,63,63,64,64,63,65,65,65,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,0,68,68,68,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,0,71,71,0,72,72,0,73,73,0,74,0,75,0,76,0,77,0,78,0,79,0,80,80,80,0,81,81,81,81,81,81,81,0,0,82,82,0,83,83,83,83,0,84,84,84,84,84,0,85,0,86,86,0,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,0,92,0,93,0,94,94,94,94,0,0,95,95,95,95,95,95,0,96,96,96,96,96,96,96,96,0,0,97,97,97,97,0,0,98,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,100,0,0,0,0,0,0,101,101,101,0,0,0,0,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,0,0,0,0,0,0,0,0,105,105,0,0,0,0,0,106,106,0,0,0,0,0,0,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,108,108,108,108,108,108,108,108,108,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,111,111,111,111,111,111,111,0,0,0,112,112,112,112,112,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,114,114,114,0,115,115,115,0,116,116,116,116,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,122,122,122,122,122,122,122,122,122,122,122,122,0,123,123,0,124,124,0,0,0,0,0,0,0,0,125,125,0,0,0,126,126,126,0,0,127,127,127,127,127,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,129,129,129,129,129,129,129,129,129,0,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,0,132,132,132,132,133,133,133,133,0,0,0,134,134,134,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,137,137,137,138,138,138,138,138,0,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,0,0,0,0,0,140,140,140,140,0,0,0,0,0,0,0,0,0,0,0,141,141,141,141,141,0,0,142,142,142,142,0,143,143,143,143,0,144,145,144,144,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,147,147,147,147,147,0,0,0,0,0,0,0,0,148,148,0,0,0,149,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,0,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,153,153,153,153,153,153,153,153,153,0,154,154,154,154,154,154,0,0,0,155,155,155,155,155,155,155,155,0,156,156,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,159,159,159,159,159,159,159,159,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,163,163,163,163,163,163,163,163,163,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,57,57,57,57,57,57,57,57,57,57,166,166,166,166,166,166,166,166,166,166,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,76,76,76,76,76,76,76,76,76,76,79,79,79,79,79,79,79,79,79,79,69,69,69,69,69,69,69,69,69,71,71,71,71,71,71,71,71,71,71,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,72,72,72,72,72,72,72,72,72,72,70,70,70,70,70,70,70,70,70,70,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,206,206,206,206,206,206,206,206,206,206,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,98,98,98,98,98,98,98,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,108,108,108,108,108,108,108,108,108,107,107,107,107,107,107,107,107,107,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,133,133,133,133,133,133,133,133,133,207,207,207,207,207,207,207,207,207,132,132,132,132,132,132,132,138,138,138,138,138,138,138,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,83,83,81,81,102,102,80,80,85,86,82,82,26,26,66,66,84,84,84,86,82,66,26,102,81,80,83,85,83,84,81,86,102,85,82,66,80,26,102,66,80,85,84,86,83,26,81,82,167,168,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,192,193,194,195,196,197,198,199,200,201,202,203,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,184,185,186,187,188,189,190,193,195,196,197,198,199,200,201,202,203,204,205,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,1,157,159,160,34,68,138,123,124,57,60,123,124,35,165,91,112,123,123,124,139,208,153,154,155,155,91,139,164,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,1,157,158,159,164,164,166,68,206,3,2,4,7,8,9,10,12,13,14,6,15,16,17,18,19,20,21,22,23,24,25,27,28,161,162,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,163,51,52,53,54,55,56,57,166,58,59,60,61,62,63,165,67,69,71,73,74,75,72,70,77,78,76,79,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,87,88,89,90,91,92,93,94,206,95,96,101,103,104,105,106,108,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,133,207,134,135,136,137,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,162,53,54,56,205,91,109,7,8,9,10,13,14,6,16,17,18,19,20,21,23,25,161,29,30,31,36,38,40,41,42,43,44,45,46,47,48,49,50,163,51,52,53,55,57,58,59,67,89,90,103,104,109,113,114,115,116,117,118,119,120,121,123,124,128,130,131,207,134,135,136,139,143,152,1,1,157,157,158,158,3,3,2,4,7,7,8,8,9,9,10,10,11,11,12,13,13,14,14,6,15,15,159,159,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,27,27,160,160,161,161,162,162,29,30,31,32,36,36,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,46,46,47,47,48,48,49,50,163,163,51,52,53,53,54,54,55,56,56,57,166,166,58,58,59,60,60,61,61,62,62,63,63,165,165,67,67,68,68,69,71,71,73,73,74,74,75,75,72,70,70,77,77,78,76,76,79,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,87,88,89,89,90,90,91,91,92,92,93,93,94,94,206,206,95,95,96,96,101,103,103,104,104,107,107,109,109,110,110,111,111,112,112,113,114,115,116,117,118,118,119,119,120,120,121,121,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,207,207,134,135,135,136,136,137,137,139,139,140,140,141,141,142,142,143,143,150,151,152,152,153,153,154,154,155,155,7,8,9,10,13,14,6,16,17,18,19,20,21,23,25,161,29,30,31,36,38,40,41,42,43,44,45,46,47,48,49,50,163,51,52,53,55,57,58,59,67,89,90,103,104,109,113,114,115,116,117,118,119,120,121,123,124,128,130,131,207,134,135,136,139,143,152,1,157,158,3,2,4,7,8,9,10,11,12,13,14,6,15,159,16,17,18,19,20,21,22,23,24,25,27,28,160,161,162,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,163,51,52,53,54,55,56,164,57,166,58,59,60,61,62,63,165,67,68,69,71,73,74,75,72,70,77,78,76,79,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,87,88,89,90,91,92,93,94,206,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,133,207,132,138,134,135,136,137,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,4,57,71,73,74,75,72,70,77,78,76,79,123,124,139,141,142,143,155,123,124,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,123,124,128,130,131,135,136,152,123,124,123,124,123,124,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,1,157,158,3,2,7,8,9,10,11,12,13,14,6,15,159,16,17,18,19,20,21,22,23,24,25,27,160,161,162,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,163,51,52,53,54,55,56,57,166,58,59,60,61,62,63,165,67,68,69,71,73,74,75,72,70,77,78,76,79,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,88,89,90,101,103,104,109,110,111,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,207,134,135,136,139,140,141,142,143,150,151,152,57,113,57,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,7,8,9,10,13,14,16,17,18,19,20,21,23,25,161,36,38,40,41,42,43,44,46,47,48,163,53,58,67,89,90,103,104,109,118,119,120,121,128,130,131,135,136,152,160,160,160,1,160,68,133,138,133,138,160,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,165,165,77,77,77,78,78,78,76,76,76,76,76,76,76,79,79,79,69,71,71,71,71,71,71,73,73,73,73,74,74,74,74,74,75,75,75,75,72,72,72,72,70,70,70,70,70,70,70,70],"f":[null,null,[[["oflag",3],["mode",3]],["result",6]],[[["oflag",3],["rawfd",6],["mode",3]],["result",6]],[[["intorawfd",8]],["result",6]],[[["rawfd",6]],["result",6]],[[],["iter",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["u64",15]],[[],["cstr",3]],[[],[["option",4],["type",4]]],null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],["errno",4]],[[],["i32",15]],[[]],[[],["str",15]],[[["i32",15]],["errno",4]],[[]],[[["partialeq",8],["errnosentinel",8]],[["partialeq",8],["result",6],["errnosentinel",8]]],null,[[]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,[[["posixfadviseadvice",4],["rawfd",6],["off_t",6]],[["result",6],["c_int",6]]],null,null,null,null,null,null,[[],["atflags",3]],[[],["atflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["atflags",3]]],[[["c_int",6]],["atflags",3]],[[["c_int",6]],["atflags",3]],[[],["bool",15]],[[],["bool",15]],[[["atflags",3]],["bool",15]],[[["atflags",3]],["bool",15]],[[["atflags",3]]],[[["atflags",3]]],[[["atflags",3]]],[[["bool",15],["atflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["oflag",3]],[[],["oflag",3]],[[],["c_int",6]],[[["c_int",6]],[["oflag",3],["option",4]]],[[["c_int",6]],["oflag",3]],[[["c_int",6]],["oflag",3]],[[],["bool",15]],[[],["bool",15]],[[["oflag",3]],["bool",15]],[[["oflag",3]],["bool",15]],[[["oflag",3]]],[[["oflag",3]]],[[["oflag",3]]],[[["bool",15],["oflag",3]]],[[["oflag",3],["mode",3]],[["rawfd",6],["result",6]]],[[["oflag",3],["rawfd",6],["mode",3]],[["rawfd",6],["result",6]]],[[["option",4],["rawfd",6]],["result",6]],[[],[["result",6],["osstring",3]]],[[["rawfd",6]],[["result",6],["osstring",3]]],null,null,null,null,null,[[],["sealflag",3]],[[],["sealflag",3]],[[],["c_int",6]],[[["c_int",6]],[["sealflag",3],["option",4]]],[[["c_int",6]],["sealflag",3]],[[["c_int",6]],["sealflag",3]],[[],["bool",15]],[[],["bool",15]],[[["sealflag",3]],["bool",15]],[[["sealflag",3]],["bool",15]],[[["sealflag",3]]],[[["sealflag",3]]],[[["sealflag",3]]],[[["sealflag",3],["bool",15]]],null,null,[[],["fdflag",3]],[[],["fdflag",3]],[[],["c_int",6]],[[["c_int",6]],[["fdflag",3],["option",4]]],[[["c_int",6]],["fdflag",3]],[[["c_int",6]],["fdflag",3]],[[],["bool",15]],[[],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]]],[[["fdflag",3]]],[[["fdflag",3]]],[[["bool",15],["fdflag",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["fcntlarg",4],["rawfd",6]],[["c_int",6],["result",6]]],null,null,null,null,null,null,null,[[["rawfd",6],["flockarg",4]],["result",6]],null,null,null,null,null,[[],["splicefflags",3]],[[],["splicefflags",3]],[[],["c_uint",6]],[[["c_uint",6]],[["splicefflags",3],["option",4]]],[[["c_uint",6]],["splicefflags",3]],[[["c_uint",6]],["splicefflags",3]],[[],["bool",15]],[[],["bool",15]],[[["splicefflags",3]],["bool",15]],[[["splicefflags",3]],["bool",15]],[[["splicefflags",3]]],[[["splicefflags",3]]],[[["splicefflags",3]]],[[["bool",15],["splicefflags",3]]],[[["usize",15],["option",4],["loff_t",6],["rawfd",6]],[["usize",15],["result",6]]],[[["usize",15],["option",4],["loff_t",6],["splicefflags",3],["rawfd",6]],[["usize",15],["result",6]]],[[["usize",15],["rawfd",6],["splicefflags",3]],[["usize",15],["result",6]]],[[["rawfd",6],["splicefflags",3]],[["usize",15],["result",6]]],null,null,null,null,null,null,null,[[],["fallocateflags",3]],[[],["fallocateflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["fallocateflags",3]]],[[["c_int",6]],["fallocateflags",3]],[[["c_int",6]],["fallocateflags",3]],[[],["bool",15]],[[],["bool",15]],[[["fallocateflags",3]],["bool",15]],[[["fallocateflags",3]],["bool",15]],[[["fallocateflags",3]]],[[["fallocateflags",3]]],[[["fallocateflags",3]]],[[["bool",15],["fallocateflags",3]]],[[["fallocateflags",3],["off_t",6],["rawfd",6]],["result",6]],[[["rawfd",6],["off_t",6]],["result",6]],null,null,null,null,null,null,null,null,null,[[],[["interfaceaddressiterator",3],["result",6]]],null,[[["cstr",3]],["result",6]],null,null,null,[[],["moduleinitflags",3]],[[],["moduleinitflags",3]],[[],["c_uint",6]],[[["c_uint",6]],[["option",4],["moduleinitflags",3]]],[[["c_uint",6]],["moduleinitflags",3]],[[["c_uint",6]],["moduleinitflags",3]],[[],["bool",15]],[[],["bool",15]],[[["moduleinitflags",3]],["bool",15]],[[["moduleinitflags",3]],["bool",15]],[[["moduleinitflags",3]]],[[["moduleinitflags",3]]],[[["moduleinitflags",3]]],[[["bool",15],["moduleinitflags",3]]],[[["cstr",3],["moduleinitflags",3]],["result",6]],null,null,null,[[],["deletemoduleflags",3]],[[],["deletemoduleflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["deletemoduleflags",3]]],[[["c_int",6]],["deletemoduleflags",3]],[[["c_int",6]],["deletemoduleflags",3]],[[],["bool",15]],[[],["bool",15]],[[["deletemoduleflags",3]],["bool",15]],[[["deletemoduleflags",3]],["bool",15]],[[["deletemoduleflags",3]]],[[["deletemoduleflags",3]]],[[["deletemoduleflags",3]]],[[["bool",15],["deletemoduleflags",3]]],[[["cstr",3],["deletemoduleflags",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["msflags",3]],[[],["msflags",3]],[[],["c_ulong",6]],[[["c_ulong",6]],[["option",4],["msflags",3]]],[[["c_ulong",6]],["msflags",3]],[[["c_ulong",6]],["msflags",3]],[[],["bool",15]],[[],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]]],[[["msflags",3]]],[[["msflags",3]]],[[["bool",15],["msflags",3]]],null,null,null,null,[[],["mntflags",3]],[[],["mntflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["mntflags",3]]],[[["c_int",6]],["mntflags",3]],[[["c_int",6]],["mntflags",3]],[[],["bool",15]],[[],["bool",15]],[[["mntflags",3]],["bool",15]],[[["mntflags",3]],["bool",15]],[[["mntflags",3]]],[[["mntflags",3]]],[[["mntflags",3]]],[[["mntflags",3],["bool",15]]],[[["option",4],["option",4],["option",4],["msflags",3]],["result",6]],[[],["result",6]],[[["mntflags",3]],["result",6]],null,null,null,null,null,null,null,null,null,[[],["mq_oflag",3]],[[],["mq_oflag",3]],[[],["c_int",6]],[[["c_int",6]],[["mq_oflag",3],["option",4]]],[[["c_int",6]],["mq_oflag",3]],[[["c_int",6]],["mq_oflag",3]],[[],["bool",15]],[[],["bool",15]],[[["mq_oflag",3]],["bool",15]],[[["mq_oflag",3]],["bool",15]],[[["mq_oflag",3]]],[[["mq_oflag",3]]],[[["mq_oflag",3]]],[[["bool",15],["mq_oflag",3]]],null,null,[[],["fdflag",3]],[[],["fdflag",3]],[[],["c_int",6]],[[["c_int",6]],[["fdflag",3],["option",4]]],[[["c_int",6]],["fdflag",3]],[[["c_int",6]],["fdflag",3]],[[],["bool",15]],[[],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]]],[[["fdflag",3]]],[[["fdflag",3]]],[[["bool",15],["fdflag",3]]],null,null,[[["mq_attr_member_t",6]],["mqattr",3]],[[],["mq_attr_member_t",6]],[[["mode",3],["cstring",3],["mqattr",3],["option",4],["mq_oflag",3]],[["result",6],["mqd_t",6]]],[[["cstring",3]],["result",6]],[[["mqd_t",6]],["result",6]],[[["u32",15],["mqd_t",6]],[["usize",15],["result",6]]],[[["u32",15],["mqd_t",6]],["result",6]],[[["mqd_t",6]],[["mqattr",3],["result",6]]],[[["mqattr",3],["mqd_t",6]],[["mqattr",3],["result",6]]],[[["mqd_t",6]],[["mqattr",3],["result",6]]],[[["mqd_t",6]],[["mqattr",3],["result",6]]],null,null,[[],[["result",6],["c_uint",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["interfaceflags",3]],[[],["interfaceflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["interfaceflags",3]]],[[["c_int",6]],["interfaceflags",3]],[[["c_int",6]],["interfaceflags",3]],[[],["bool",15]],[[],["bool",15]],[[["interfaceflags",3]],["bool",15]],[[["interfaceflags",3]],["bool",15]],[[["interfaceflags",3]]],[[["interfaceflags",3]]],[[["interfaceflags",3]]],[[["bool",15],["interfaceflags",3]]],null,null,[[["rawfd",6],["pollflags",3]],["pollfd",3]],[[],[["option",4],["pollflags",3]]],null,null,null,null,null,null,null,null,null,null,null,[[],["pollflags",3]],[[],["pollflags",3]],[[],["c_short",6]],[[["c_short",6]],[["option",4],["pollflags",3]]],[[["c_short",6]],["pollflags",3]],[[["c_short",6]],["pollflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pollflags",3]],["bool",15]],[[["pollflags",3]],["bool",15]],[[["pollflags",3]]],[[["pollflags",3]]],[[["pollflags",3]]],[[["bool",15],["pollflags",3]]],[[["c_int",6]],[["result",6],["c_int",6]]],[[["option",4],["timespec",3],["sigset",3]],[["result",6],["c_int",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ptymaster",3]],["result",6]],[[["oflag",3]],[["ptymaster",3],["result",6]]],[[["ptymaster",3]],[["string",3],["result",6]]],[[["ptymaster",3]],[["string",3],["result",6]]],[[["ptymaster",3]],["result",6]],[[["into",8],["into",8],["option",4],["option",4]],[["openptyresult",3],["result",6]]],[[["into",8],["into",8],["option",4],["option",4]],[["result",6],["forkptyresult",3]]],null,null,null,null,[[["pid",3],["cpuset",3]],["result",6]],[[["pid",3]],[["cpuset",3],["result",6]]],[[["option",4],["clonecb",6],["cloneflags",3],["c_int",6]],[["pid",3],["result",6]]],[[["cloneflags",3]],["result",6]],[[["cloneflags",3],["rawfd",6]],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["buffer",4]],[[],[["option",4],["box",3]]],[[],[["option",4],["box",3]]],[[],["rawfd",6]],[[["c_int",6],["rawfd",6],["sigevnotify",4]],["aiocb",3]],[[["off_t",6],["sigevnotify",4],["lioopcode",4],["c_int",6],["rawfd",6]],["aiocb",3]],[[["off_t",6],["sigevnotify",4],["lioopcode",4],["borrow",8],["c_int",6],["rawfd",6],["box",3]],["aiocb",3]],[[["off_t",6],["borrowmut",8],["sigevnotify",4],["lioopcode",4],["box",3],["rawfd",6],["c_int",6]],["aiocb",3]],[[["off_t",6],["usize",15],["sigevnotify",4],["lioopcode",4],["c_int",6],["rawfd",6]],["aiocb",3]],[[["off_t",6],["usize",15],["sigevnotify",4],["lioopcode",4],["c_int",6],["rawfd",6]],["aiocb",3]],[[["off_t",6],["sigevnotify",4],["lioopcode",4],["c_int",6],["rawfd",6]],["aiocb",3]],[[["sigevnotify",4]]],[[],[["aiocancelstat",4],["result",6]]],[[],["result",6]],[[["aiofsyncmode",4]],["result",6]],[[],[["lioopcode",4],["option",4]]],[[],["usize",15]],[[],["off_t",6]],[[],["c_int",6]],[[],["result",6]],[[],["sigevent",3]],[[],[["isize",15],["result",6]]],[[],["result",6]],[[["rawfd",6]],[["aiocancelstat",4],["result",6]]],[[["option",4],["timespec",3]],["result",6]],null,null,[[["usize",15]],["liocb",3]],[[["sigevnotify",4],["liomode",4]],["result",6]],[[["sigevnotify",4],["liomode",4]],["result",6]],[[["usize",15]],[["isize",15],["result",6]]],[[["usize",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["epollflags",3]],[[],["epollflags",3]],[[],["c_int",6]],[[["c_int",6]],[["epollflags",3],["option",4]]],[[["c_int",6]],["epollflags",3]],[[["c_int",6]],["epollflags",3]],[[],["bool",15]],[[],["bool",15]],[[["epollflags",3]],["bool",15]],[[["epollflags",3]],["bool",15]],[[["epollflags",3]]],[[["epollflags",3]]],[[["epollflags",3]]],[[["epollflags",3],["bool",15]]],null,null,null,null,null,null,[[],["epollcreateflags",3]],[[],["epollcreateflags",3]],[[],["c_int",6]],[[["c_int",6]],[["epollcreateflags",3],["option",4]]],[[["c_int",6]],["epollcreateflags",3]],[[["c_int",6]],["epollcreateflags",3]],[[],["bool",15]],[[],["bool",15]],[[["epollcreateflags",3]],["bool",15]],[[["epollcreateflags",3]],["bool",15]],[[["epollcreateflags",3]]],[[["epollcreateflags",3]]],[[["epollcreateflags",3]]],[[["epollcreateflags",3],["bool",15]]],null,[[["epollflags",3],["u64",15]]],[[]],[[],["epollflags",3]],[[],["u64",15]],[[],[["rawfd",6],["result",6]]],[[["epollcreateflags",3]],[["rawfd",6],["result",6]]],[[["epollop",4],["rawfd",6]],["result",6]],[[["isize",15],["rawfd",6]],[["usize",15],["result",6]]],null,null,null,null,null,[[],["efdflags",3]],[[],["efdflags",3]],[[],["c_int",6]],[[["c_int",6]],[["efdflags",3],["option",4]]],[[["c_int",6]],["efdflags",3]],[[["c_int",6]],["efdflags",3]],[[],["bool",15]],[[],["bool",15]],[[["efdflags",3]],["bool",15]],[[["efdflags",3]],["bool",15]],[[["efdflags",3]]],[[["efdflags",3]]],[[["efdflags",3]]],[[["bool",15],["efdflags",3]]],[[["c_uint",6],["efdflags",3]],[["rawfd",6],["result",6]]],null,null,null,null,null,[[],["memfdcreateflag",3]],[[],["memfdcreateflag",3]],[[],["c_uint",6]],[[["c_uint",6]],[["memfdcreateflag",3],["option",4]]],[[["c_uint",6]],["memfdcreateflag",3]],[[["c_uint",6]],["memfdcreateflag",3]],[[],["bool",15]],[[],["bool",15]],[[["memfdcreateflag",3]],["bool",15]],[[["memfdcreateflag",3]],["bool",15]],[[["memfdcreateflag",3]]],[[["memfdcreateflag",3]]],[[["memfdcreateflag",3]]],[[["bool",15],["memfdcreateflag",3]]],[[["cstr",3],["memfdcreateflag",3]],[["rawfd",6],["result",6]]],null,null,null,null,null,null,null,null,[[],["protflags",3]],[[],["protflags",3]],[[],["c_int",6]],[[["c_int",6]],[["protflags",3],["option",4]]],[[["c_int",6]],["protflags",3]],[[["c_int",6]],["protflags",3]],[[],["bool",15]],[[],["bool",15]],[[["protflags",3]],["bool",15]],[[["protflags",3]],["bool",15]],[[["protflags",3]]],[[["protflags",3]]],[[["protflags",3]]],[[["bool",15],["protflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mapflags",3]],[[],["mapflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["mapflags",3]]],[[["c_int",6]],["mapflags",3]],[[["c_int",6]],["mapflags",3]],[[],["bool",15]],[[],["bool",15]],[[["mapflags",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["mapflags",3]]],[[["mapflags",3]]],[[["mapflags",3]]],[[["bool",15],["mapflags",3]]],null,null,null,[[],["mremapflags",3]],[[],["mremapflags",3]],[[],["c_int",6]],[[["c_int",6]],[["mremapflags",3],["option",4]]],[[["c_int",6]],["mremapflags",3]],[[["c_int",6]],["mremapflags",3]],[[],["bool",15]],[[],["bool",15]],[[["mremapflags",3]],["bool",15]],[[["mremapflags",3]],["bool",15]],[[["mremapflags",3]]],[[["mremapflags",3]]],[[["mremapflags",3]]],[[["bool",15],["mremapflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["msflags",3]],[[],["msflags",3]],[[],["c_int",6]],[[["c_int",6]],[["msflags",3],["option",4]]],[[["c_int",6]],["msflags",3]],[[["c_int",6]],["msflags",3]],[[],["bool",15]],[[],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]]],[[["msflags",3]]],[[["msflags",3]]],[[["msflags",3],["bool",15]]],null,null,null,[[],["mlockallflags",3]],[[],["mlockallflags",3]],[[],["c_int",6]],[[["c_int",6]],[["mlockallflags",3],["option",4]]],[[["c_int",6]],["mlockallflags",3]],[[["c_int",6]],["mlockallflags",3]],[[],["bool",15]],[[],["bool",15]],[[["mlockallflags",3]],["bool",15]],[[["mlockallflags",3]],["bool",15]],[[["mlockallflags",3]]],[[["mlockallflags",3]]],[[["mlockallflags",3]]],[[["bool",15],["mlockallflags",3]]],[[["size_t",6]],["result",6]],[[["size_t",6]],["result",6]],[[["mlockallflags",3]],["result",6]],[[],["result",6]],[[["off_t",6],["mapflags",3],["protflags",3],["size_t",6],["rawfd",6]],["result",6]],[[["mremapflags",3],["size_t",6],["option",4]],["result",6]],[[["size_t",6]],["result",6]],[[["size_t",6],["mmapadvise",4]],["result",6]],[[["protflags",3],["size_t",6]],["result",6]],[[["msflags",3],["size_t",6]],["result",6]],[[["oflag",3],["mode",3]],[["rawfd",6],["result",6]]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["persona",3]],[[],["persona",3]],[[],["c_int",6]],[[["c_int",6]],[["persona",3],["option",4]]],[[["c_int",6]],["persona",3]],[[["c_int",6]],["persona",3]],[[],["bool",15]],[[],["bool",15]],[[["persona",3]],["bool",15]],[[["persona",3]],["bool",15]],[[["persona",3]]],[[["persona",3]]],[[["persona",3]]],[[["bool",15],["persona",3]]],[[],[["result",6],["persona",3]]],[[["persona",3]],[["result",6],["persona",3]]],null,null,[[],["pthread",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pid",3]],[["result",6],["user_regs_struct",3]]],[[["pid",3],["user_regs_struct",3]],["result",6]],[[["pid",3],["options",3]],["result",6]],[[["pid",3]],[["result",6],["c_long",6]]],[[["pid",3]],[["result",6],["siginfo_t",3]]],[[["pid",3],["siginfo_t",3]],["result",6]],[[],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3]],["result",6]],[[["pid",3],["options",3]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3],["addresstype",6]],[["result",6],["c_long",6]]],[[["pid",3],["addresstype",6]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["quotavalidflags",3]],[[],["quotavalidflags",3]],[[],["u32",15]],[[["u32",15]],[["quotavalidflags",3],["option",4]]],[[["u32",15]],["quotavalidflags",3]],[[["u32",15]],["quotavalidflags",3]],[[],["bool",15]],[[],["bool",15]],[[["quotavalidflags",3]],["bool",15]],[[["quotavalidflags",3]],["bool",15]],[[["quotavalidflags",3]]],[[["quotavalidflags",3]]],[[["quotavalidflags",3]]],[[["quotavalidflags",3],["bool",15]]],null,[[],[["option",4],["u64",15]]],[[["u64",15]]],[[],[["option",4],["u64",15]]],[[["u64",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u64",15]]],[[["u64",15]]],[[],[["option",4],["u64",15]]],[[["u64",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["u64",15]]],[[["u64",15]]],[[],[["option",4],["u64",15]]],[[["u64",15]]],[[["quotatype",4],["quotafmt",4]],["result",6]],[[["quotatype",4]],["result",6]],[[["quotatype",4],["option",4]],["result",6]],[[["quotatype",4],["c_int",6]],[["dqblk",3],["result",6]]],[[["quotatype",4],["c_int",6],["quotavalidflags",3],["dqblk",3]],["result",6]],null,null,null,null,null,null,null,[[["rebootmode",4]],[["result",6],["infallible",4]]],[[["bool",15]],["result",6]],null,null,null,[[],["fdset",3]],[[["rawfd",6]]],[[["rawfd",6]]],[[["rawfd",6]],["bool",15]],[[]],[[],[["option",4],["rawfd",6]]],[[["option",4],["rawfd",6]],["fds",3]],null,[[],[["c_int",6],["result",6]]],[[],[["c_int",6],["result",6]]],null,[[["option",4],["usize",15],["off_t",6],["rawfd",6]],[["usize",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,[[],["signaliterator",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["saflags",3]],[[],["saflags",3]],[[],["c_int",6]],[[["c_int",6]],[["saflags",3],["option",4]]],[[["c_int",6]],["saflags",3]],[[["c_int",6]],["saflags",3]],[[],["bool",15]],[[],["bool",15]],[[["saflags",3]],["bool",15]],[[["saflags",3]],["bool",15]],[[["saflags",3]]],[[["saflags",3]]],[[["saflags",3]]],[[["bool",15],["saflags",3]]],null,null,null,null,null,[[],["sigset",3]],[[],["sigset",3]],[[["signal",4]]],[[]],[[["signal",4]]],[[["signal",4]],["bool",15]],[[["sigset",3]]],[[],[["sigset",3],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["sigmaskhow",4]],[["sigset",3],["result",6]]],[[],[["result",6],["signal",4]]],null,null,null,null,null,null,[[["saflags",3],["sigset",3],["sighandler",4]],["sigaction",3]],[[],["saflags",3]],[[],["sigset",3]],[[],["sighandler",4]],[[["sigaction",3],["signal",4]],[["result",6],["sigaction",3]]],[[["signal",4],["sighandler",4]],[["result",6],["sighandler",4]]],[[["option",4],["sigset",3],["option",4],["sigmaskhow",4],["sigset",3]],["result",6]],[[["option",4],["sigset",3],["option",4],["sigmaskhow",4],["sigset",3]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["pid",3],["option",4],["into",8]],["result",6]],[[["signal",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["sfdflags",3]],[[],["sfdflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["sfdflags",3]]],[[["c_int",6]],["sfdflags",3]],[[["c_int",6]],["sfdflags",3]],[[],["bool",15]],[[],["bool",15]],[[["sfdflags",3]],["bool",15]],[[["sfdflags",3]],["bool",15]],[[["sfdflags",3]]],[[["sfdflags",3]]],[[["sfdflags",3]]],[[["bool",15],["sfdflags",3]]],null,null,[[["sigset",3],["rawfd",6],["sfdflags",3]],[["rawfd",6],["result",6]]],null,[[["sigset",3]],[["result",6],["signalfd",3]]],[[["sigset",3],["sfdflags",3]],[["result",6],["signalfd",3]]],[[["sigset",3]],["result",6]],[[],[["option",4],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["sockflag",3]],[[],["sockflag",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["sockflag",3]]],[[["c_int",6]],["sockflag",3]],[[["c_int",6]],["sockflag",3]],[[],["bool",15]],[[],["bool",15]],[[["sockflag",3]],["bool",15]],[[["sockflag",3]],["bool",15]],[[["sockflag",3]]],[[["sockflag",3]]],[[["sockflag",3]]],[[["bool",15],["sockflag",3]]],null,null,null,null,null,null,null,null,null,null,[[],["msgflags",3]],[[],["msgflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["msgflags",3]]],[[["c_int",6]],["msgflags",3]],[[["c_int",6]],["msgflags",3]],[[],["bool",15]],[[],["bool",15]],[[["msgflags",3]],["bool",15]],[[["msgflags",3]],["bool",15]],[[["msgflags",3]]],[[["msgflags",3]]],[[["msgflags",3]]],[[["msgflags",3],["bool",15]]],null,[[]],[[],["pid_t",6]],[[],["uid_t",6]],[[],["gid_t",6]],null,[[["ipv4addr",3],["option",4]]],null,[[["ipv6addr",3]]],null,null,null,null,[[],["cmsgiterator",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["msgflags",3],["rawfd",6],["sockaddr",4]],[["usize",15],["result",6]]],null,null,null,null,null,[[["msgflags",3],["rawfd",6]],[["result",6],["vec",3]]],null,null,null,[[["option",4],["timespec",3],["msgflags",3],["rawfd",6]],[["result",6],["vec",3]]],[[["vec",3],["msgflags",3],["rawfd",6],["option",4]],[["result",6],["recvmsg",3]]],[[["addressfamily",4],["option",4],["socktype",4],["sockflag",3],["into",8]],[["rawfd",6],["result",6]]],[[["addressfamily",4],["option",4],["socktype",4],["sockflag",3],["into",8]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["rawfd",6],["sockaddr",4]],["result",6]],[[["rawfd",6]],[["rawfd",6],["result",6]]],[[["rawfd",6],["sockflag",3]],[["rawfd",6],["result",6]]],[[["rawfd",6],["sockaddr",4]],["result",6]],[[["msgflags",3],["rawfd",6]],[["usize",15],["result",6]]],[[["rawfd",6]],["result",6]],[[["msgflags",3],["rawfd",6],["sockaddr",4]],[["usize",15],["result",6]]],[[["msgflags",3],["rawfd",6]],[["usize",15],["result",6]]],null,null,null,null,[[["getsockopt",8],["rawfd",6]],["result",6]],[[["rawfd",6],["setsockopt",8]],["result",6]],[[["rawfd",6]],[["sockaddr",4],["result",6]]],[[["rawfd",6]],[["sockaddr",4],["result",6]]],[[["usize",15],["sockaddr_storage",3]],[["sockaddr",4],["result",6]]],null,null,null,null,[[["shutdown",4],["rawfd",6]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["i32",15]],null,null,null,null,null,null,null,null,null,[[],["sflag",3]],[[],["sflag",3]],[[],["mode_t",6]],[[["mode_t",6]],[["option",4],["sflag",3]]],[[["mode_t",6]],["sflag",3]],[[["mode_t",6]],["sflag",3]],[[],["bool",15]],[[],["bool",15]],[[["sflag",3]],["bool",15]],[[["sflag",3]],["bool",15]],[[["sflag",3]]],[[["sflag",3]]],[[["sflag",3]]],[[["sflag",3],["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mode",3]],[[],["mode",3]],[[],["mode_t",6]],[[["mode_t",6]],[["option",4],["mode",3]]],[[["mode_t",6]],["mode",3]],[[["mode_t",6]],["mode",3]],[[],["bool",15]],[[],["bool",15]],[[["mode",3]],["bool",15]],[[["mode",3]],["bool",15]],[[["mode",3]]],[[["mode",3]]],[[["mode",3]]],[[["bool",15],["mode",3]]],[[["sflag",3],["mode",3],["dev_t",6]],["result",6]],[[["dev_t",6]],["u64",15]],[[["dev_t",6]],["u64",15]],[[["u64",15]],["dev_t",6]],[[["mode",3]],["mode",3]],[[],[["filestat",3],["result",6]]],[[],[["filestat",3],["result",6]]],[[["rawfd",6]],[["filestat",3],["result",6]]],[[["rawfd",6],["atflags",3]],[["filestat",3],["result",6]]],[[["mode",3],["rawfd",6]],["result",6]],null,null,null,[[["mode",3],["fchmodatflags",4],["option",4],["rawfd",6]],["result",6]],[[["timeval",3]],["result",6]],[[["timeval",3]],["result",6]],[[["rawfd",6],["timespec",3]],["result",6]],null,null,null,[[["timespec",3],["utimensatflags",4],["option",4],["rawfd",6]],["result",6]],[[["mode",3],["rawfd",6]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["fstype",3]],[[],["__fsword_t",6]],[[],["__fsword_t",6]],[[],["__fsword_t",6]],[[],["c_ulong",6]],[[],["c_ulong",6]],[[],["c_ulong",6]],[[],["c_ulong",6]],[[],["c_ulong",6]],[[],["fsid_t",6]],[[],[["result",6],["statfs",3]]],[[],[["result",6],["statfs",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["fsflags",3]],[[],["fsflags",3]],[[],["c_ulong",6]],[[["c_ulong",6]],[["fsflags",3],["option",4]]],[[["c_ulong",6]],["fsflags",3]],[[["c_ulong",6]],["fsflags",3]],[[],["bool",15]],[[],["bool",15]],[[["fsflags",3]],["bool",15]],[[["fsflags",3]],["bool",15]],[[["fsflags",3]]],[[["fsflags",3]]],[[["fsflags",3]]],[[["bool",15],["fsflags",3]]],null,[[],["c_ulong",6]],[[],["c_ulong",6]],[[],["fsblkcnt_t",6]],[[],["fsblkcnt_t",6]],[[],["fsblkcnt_t",6]],[[],["fsfilcnt_t",6]],[[],["fsfilcnt_t",6]],[[],["fsfilcnt_t",6]],[[],["c_ulong",6]],[[],["fsflags",3]],[[],["c_ulong",6]],[[],[["result",6],["statvfs",3]]],[[],[["result",6],["statvfs",3]]],null,null,[[]],[[],["duration",3]],[[],["u16",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],[["sysinfo",3],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["inputflags",3]],[[],["inputflags",3]],[[],["tcflag_t",6]],[[["tcflag_t",6]],[["option",4],["inputflags",3]]],[[["tcflag_t",6]],["inputflags",3]],[[["tcflag_t",6]],["inputflags",3]],[[],["bool",15]],[[],["bool",15]],[[["inputflags",3]],["bool",15]],[[["inputflags",3]],["bool",15]],[[["inputflags",3]]],[[["inputflags",3]]],[[["inputflags",3]]],[[["inputflags",3],["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["outputflags",3]],[[],["outputflags",3]],[[],["tcflag_t",6]],[[["tcflag_t",6]],[["option",4],["outputflags",3]]],[[["tcflag_t",6]],["outputflags",3]],[[["tcflag_t",6]],["outputflags",3]],[[],["bool",15]],[[],["bool",15]],[[["outputflags",3]],["bool",15]],[[["outputflags",3]],["bool",15]],[[["outputflags",3]]],[[["outputflags",3]]],[[["outputflags",3]]],[[["bool",15],["outputflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["controlflags",3]],[[],["controlflags",3]],[[],["tcflag_t",6]],[[["tcflag_t",6]],[["option",4],["controlflags",3]]],[[["tcflag_t",6]],["controlflags",3]],[[["tcflag_t",6]],["controlflags",3]],[[],["bool",15]],[[],["bool",15]],[[["controlflags",3]],["bool",15]],[[["controlflags",3]],["bool",15]],[[["controlflags",3]]],[[["controlflags",3]]],[[["controlflags",3]]],[[["bool",15],["controlflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["localflags",3]],[[],["localflags",3]],[[],["tcflag_t",6]],[[["tcflag_t",6]],[["localflags",3],["option",4]]],[[["tcflag_t",6]],["localflags",3]],[[["tcflag_t",6]],["localflags",3]],[[],["bool",15]],[[],["bool",15]],[[["localflags",3]],["bool",15]],[[["localflags",3]],["bool",15]],[[["localflags",3]]],[[["localflags",3]]],[[["localflags",3]]],[[["bool",15],["localflags",3]]],[[["termios",3]],["baudrate",4]],[[["termios",3]],["baudrate",4]],[[["baudrate",4],["termios",3]],["result",6]],[[["baudrate",4],["termios",3]],["result",6]],[[["baudrate",4],["termios",3]],["result",6]],[[["termios",3]]],[[["rawfd",6]],[["result",6],["termios",3]]],[[["setarg",4],["rawfd",6],["termios",3]],["result",6]],[[["rawfd",6]],["result",6]],[[["flowarg",4],["rawfd",6]],["result",6]],[[["flusharg",4],["rawfd",6]],["result",6]],[[["c_int",6],["rawfd",6]],["result",6]],[[["rawfd",6]],[["pid",3],["result",6]]],null,null,null,null,[[]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[["i64",15]]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],null,[[],["time_t",6]],[[],["c_long",6]],null,[[],["time_t",6]],[[],["suseconds_t",6]],null,[[["rawfd",6]],[["usize",15],["result",6]]],[[["rawfd",6]],[["usize",15],["result",6]]],[[["off_t",6],["rawfd",6]],[["usize",15],["result",6]]],[[["off_t",6],["rawfd",6]],[["usize",15],["result",6]]],[[["off_t",6],["rawfd",6]],[["usize",15],["result",6]]],[[["off_t",6],["rawfd",6]],[["usize",15],["result",6]]],null,null,null,[[["pid",3]],[["usize",15],["result",6]]],[[["pid",3]],[["usize",15],["result",6]]],null,[[]],[[],["iovec",3]],[[],["iovec",3]],null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["utsname",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["waitpidflag",3]],[[],["waitpidflag",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["waitpidflag",3]]],[[["c_int",6]],["waitpidflag",3]],[[["c_int",6]],["waitpidflag",3]],[[],["bool",15]],[[],["bool",15]],[[["waitpidflag",3]],["bool",15]],[[["waitpidflag",3]],["bool",15]],[[["waitpidflag",3]]],[[["waitpidflag",3]]],[[["waitpidflag",3]]],[[["bool",15],["waitpidflag",3]]],null,null,null,null,null,null,null,null,[[],[["pid",3],["option",4]]],[[["pid",3],["i32",15]],[["result",6],["waitstatus",4]]],[[["option",4],["into",8],["waitpidflag",3],["option",4]],[["result",6],["waitstatus",4]]],[[],[["result",6],["waitstatus",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["addwatchflags",3]],[[],["addwatchflags",3]],[[],["u32",15]],[[["u32",15]],[["addwatchflags",3],["option",4]]],[[["u32",15]],["addwatchflags",3]],[[["u32",15]],["addwatchflags",3]],[[],["bool",15]],[[],["bool",15]],[[["addwatchflags",3]],["bool",15]],[[["addwatchflags",3]],["bool",15]],[[["addwatchflags",3]]],[[["addwatchflags",3]]],[[["addwatchflags",3]]],[[["bool",15],["addwatchflags",3]]],null,null,null,[[],["initflags",3]],[[],["initflags",3]],[[],["c_int",6]],[[["c_int",6]],[["initflags",3],["option",4]]],[[["c_int",6]],["initflags",3]],[[["c_int",6]],["initflags",3]],[[],["bool",15]],[[],["bool",15]],[[["initflags",3]],["bool",15]],[[["initflags",3]],["bool",15]],[[["initflags",3]]],[[["initflags",3]]],[[["initflags",3]]],[[["initflags",3],["bool",15]]],null,null,null,null,null,null,null,[[["initflags",3]],[["result",6],["inotify",3]]],[[["addwatchflags",3]],[["watchdescriptor",3],["result",6]]],[[["watchdescriptor",3]],["result",6]],[[],[["vec",3],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,[[],["timerflags",3]],[[],["timerflags",3]],[[],["c_int",6]],[[["c_int",6]],[["timerflags",3],["option",4]]],[[["c_int",6]],["timerflags",3]],[[["c_int",6]],["timerflags",3]],[[],["bool",15]],[[],["bool",15]],[[["timerflags",3]],["bool",15]],[[["timerflags",3]],["bool",15]],[[["timerflags",3]]],[[["timerflags",3]]],[[["timerflags",3]]],[[["bool",15],["timerflags",3]]],null,null,[[],["timersettimeflags",3]],[[],["timersettimeflags",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["timersettimeflags",3]]],[[["c_int",6]],["timersettimeflags",3]],[[["c_int",6]],["timersettimeflags",3]],[[],["bool",15]],[[],["bool",15]],[[["timersettimeflags",3]],["bool",15]],[[["timersettimeflags",3]],["bool",15]],[[["timersettimeflags",3]]],[[["timersettimeflags",3]]],[[["timersettimeflags",3]]],[[["bool",15],["timersettimeflags",3]]],null,null,null,null,[[["clockid",4],["timerflags",3]],["result",6]],[[["expiration",4],["timersettimeflags",3]],["result",6]],[[],[["result",6],["option",4]]],[[],["result",6]],[[],["result",6]],null,null,[[["clockid_t",6]]],[[["pid",3]],["result",6]],[[],[["result",6],["timespec",3]]],[[],[["result",6],["timespec",3]]],[[["timespec",3]],["result",6]],[[],["clockid_t",6]],null,null,null,null,null,null,null,null,null,null,[[["clockid",3]],[["result",6],["timespec",3]]],[[["clockid",3]],[["result",6],["timespec",3]]],[[["clockid",3],["timespec",3]],["result",6]],[[["pid",3]],[["result",6],["clockid",3]]],null,null,[[],[["result",6],["ucontext",3]]],[[],["result",6]],[[],["sigset",3]],[[],["sigset",3]],null,null,[[["c_uint",6]],[["option",4],["c_uint",6]]],[[],[["option",4],["c_uint",6]]],null,[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["uid",3]],["result",6]],[[["gid",3]],["result",6]],null,[[["uid_t",6]]],[[]],[[]],[[],["bool",15]],[[],["uid_t",6]],null,null,[[["gid_t",6]]],[[]],[[]],[[],["gid_t",6]],null,[[["pid_t",6]]],[[]],[[]],[[],["pid_t",6]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],[["forkresult",4],["result",6]]],[[],["pid",3]],[[],["pid",3]],[[["pid",3]],["result",6]],[[["pid",3],["option",4]],[["pid",3],["result",6]]],[[],[["pid",3],["result",6]]],[[["pid",3],["option",4]],[["pid",3],["result",6]]],[[["c_int",6]],[["pid",3],["result",6]]],[[["pid",3],["c_int",6]],["result",6]],[[],["pid",3]],[[],["pid",3]],[[["rawfd",6]],[["rawfd",6],["result",6]]],[[["rawfd",6]],[["rawfd",6],["result",6]]],[[["oflag",3],["rawfd",6]],[["rawfd",6],["result",6]]],[[],["result",6]],[[["rawfd",6]],["result",6]],[[["mode",3]],["result",6]],[[["mode",3]],["result",6]],[[["mode",3],["option",4],["rawfd",6]],["result",6]],[[["option",4],["rawfd",6]],["result",6]],[[],[["result",6],["pathbuf",3]]],[[["uid",3],["option",4],["gid",3],["option",4]],["result",6]],[[["uid",3],["option",4],["gid",3],["option",4],["rawfd",6]],["result",6]],null,null,null,[[["uid",3],["option",4],["gid",3],["option",4],["fchownatflags",4],["option",4],["rawfd",6]],["result",6]],[[["cstr",3]],[["result",6],["infallible",4]]],[[["cstr",3]],[["result",6],["infallible",4]]],[[["cstr",3]],[["result",6],["infallible",4]]],[[["cstr",3]],[["result",6],["infallible",4]]],[[["rawfd",6]],[["result",6],["infallible",4]]],[[["cstr",3],["atflags",3],["rawfd",6]],[["result",6],["infallible",4]]],[[["bool",15]],["result",6]],[[["asref",8],["osstr",3]],["result",6]],[[],[["cstr",3],["result",6]]],[[["rawfd",6]],["result",6]],[[["rawfd",6]],[["usize",15],["result",6]]],[[["rawfd",6]],[["usize",15],["result",6]]],null,null,null,null,null,null,[[["off_t",6],["rawfd",6],["whence",4]],[["off_t",6],["result",6]]],[[["whence",4],["rawfd",6],["off64_t",6]],[["result",6],["off64_t",6]]],[[],["result",6]],[[["oflag",3]],["result",6]],[[["off_t",6]],["result",6]],[[["off_t",6],["rawfd",6]],["result",6]],[[["rawfd",6]],[["bool",15],["result",6]]],null,null,null,[[["linkatflags",4],["option",4],["rawfd",6]],["result",6]],[[],["result",6]],null,null,null,[[["unlinkatflags",4],["option",4],["rawfd",6]],["result",6]],[[],["result",6]],[[]],[[["rawfd",6]],["result",6]],[[["rawfd",6]],["result",6]],[[],["uid",3]],[[],["uid",3]],[[],["gid",3]],[[],["gid",3]],[[["uid",3]],["result",6]],[[["gid",3]],["result",6]],[[["uid",3]],["result",6]],[[["gid",3]],["result",6]],[[["uid",3]],["uid",3]],[[["gid",3]],["gid",3]],[[],[["result",6],["vec",3]]],[[],["result",6]],[[["cstr",3],["gid",3]],[["result",6],["vec",3]]],[[["cstr",3],["gid",3]],["result",6]],[[]],[[["c_uint",6]],["c_uint",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rawfd",6],["pathconfvar",4]],[["result",6],["option",4]]],[[["pathconfvar",4]],[["result",6],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sysconfvar",4]],[["result",6],["option",4]]],null,null,null,null,null,[[],["accessflags",3]],[[],["accessflags",3]],[[],["c_int",6]],[[["c_int",6]],[["accessflags",3],["option",4]]],[[["c_int",6]],["accessflags",3]],[[["c_int",6]],["accessflags",3]],[[],["bool",15]],[[],["bool",15]],[[["accessflags",3]],["bool",15]],[[["accessflags",3]],["bool",15]],[[["accessflags",3]]],[[["accessflags",3]]],[[["accessflags",3]]],[[["accessflags",3],["bool",15]]],[[["accessflags",3]],["result",6]],null,null,null,null,null,null,null,null,[[["uid",3]],[["option",4],["result",6]]],[[["str",15]],[["option",4],["result",6]]],null,null,null,null,null,[[["gid",3]],[["option",4],["result",6]]],[[["str",15]],[["option",4],["result",6]]],[[["rawfd",6]],[["result",6],["pathbuf",3]]],null,null,null,null,null,null,[[],[["errno",4],["option",4]]],[[["errno",4]],["error",4]],[[],["error",4]],[[],["error",4]],null,[[],["bool",15]],[[],["usize",15]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["sockaddr_in",3]],["bool",15]],[[["sockaddr_in",3]],["bool",15]],[[["msghdr",3]],["bool",15]],[[["msghdr",3]],["bool",15]],[[["stat",3]],["bool",15]],[[["stat",3]],["bool",15]],[[["cmsghdr",3]],["bool",15]],[[["cmsghdr",3]],["bool",15]],[[["sockaddr_storage",3]],["bool",15]],[[["sockaddr_un",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["sockaddr",3]],["bool",15]],[[["winsize",3]],["bool",15]],[[["winsize",3]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[["sockaddr_in6",3]],["bool",15]],[[["sockaddr_in6",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stat",3]],[[],["signalfd_siginfo",3]],[[],["cmsghdr",3]],[[],["sockaddr_storage",3]],[[],["sockaddr_in6",3]],[[],["sockaddr_un",3]],[[],["sockaddr_in",3]],[[],["winsize",3]],[[],["msghdr",3]],[[],["sockaddr",3]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["linger",3]]],[[["rawfd",6]],[["u8",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["timeval",3]]],[[["rawfd",6]],[["result",6],["timeval",3]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["i32",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["unixcredentials",3],["result",6]]],[[["rawfd",6]],[["result",6],["u32",15]]],[[["rawfd",6]],[["result",6],["u32",15]]],[[["rawfd",6]],[["result",6],["u32",15]]],[[["rawfd",6]],[["usize",15],["result",6]]],[[["rawfd",6]],[["usize",15],["result",6]]],[[["rawfd",6]],[["socktype",4],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["osstring",3]]],[[["rawfd",6]],[["result",6],["sockaddr_in",3]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["u32",15]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["osstring",3]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["rawfd",6]],[["result",6],["c_int",6]]],[[["rawfd",6]],[["bool",15],["result",6]]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["linger",3],["rawfd",6]],["result",6]],[[["rawfd",6],["ipmembershiprequest",3]],["result",6]],[[["rawfd",6],["ipmembershiprequest",3]],["result",6]],[[["ipv6membershiprequest",3],["rawfd",6]],["result",6]],[[["ipv6membershiprequest",3],["rawfd",6]],["result",6]],[[["rawfd",6],["u8",15]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["rawfd",6],["timeval",3]],["result",6]],[[["rawfd",6],["timeval",3]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["u32",15],["rawfd",6]],["result",6]],[[["u32",15],["rawfd",6]],["result",6]],[[["u32",15],["rawfd",6]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["osstring",3],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["u32",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["osstring",3],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["c_int",6],["rawfd",6]],["result",6]],[[["bool",15],["rawfd",6]],["result",6]],[[["usize",15],["rawfd",6]],["result",6]],[[["rawfd",6]],["result",6]],[[["i64",15]],["timespec",3]],[[["i64",15]],["timespec",3]],[[["i64",15]],["timespec",3]],[[["i64",15]],["timespec",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[["i64",15]],["timeval",3]],[[["i64",15]],["timeval",3]],[[["i64",15]],["timeval",3]],[[["i64",15]],["timeval",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["timespec",3]],[[],["timeval",3]],[[],["str",15]],[[],["sigset_t",3]],[[],["timespec",3]],[[],["timeval",3]],[[["vec",3],["aiocb",3]],["liocb",3]],[[["sigevent",3]]],[[["ucred",3]]],[[["termios",3]]],[[["timespec",3]]],[[["duration",3]]],[[["timeval",3]]],[[["clockid_t",6]]],[[["pid",3]]],[[["passwd",3]],["user",3]],[[["group",3]],["group",3]],[[["errno",4]],["error",4]],[[["fromutf8error",3]],["error",4]],[[],["ucred",3]],[[],["clockid_t",6]],[[],[["option",4],["rawfd",6]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["rawfd",6]]],[[]],[[],[["option",4],["signal",4]]],[[],["option",4]],[[],[["option",4],["controlmessageowned",4]]],[[],["entry",3]],[[],["type",4]],[[],["errno",4]],[[],["atflags",3]],[[],["oflag",3]],[[],["sealflag",3]],[[],["fdflag",3]],[[],["flockarg",4]],[[],["splicefflags",3]],[[],["fallocateflags",3]],[[],["posixfadviseadvice",4]],[[],["interfaceaddress",3]],[[],["moduleinitflags",3]],[[],["deletemoduleflags",3]],[[],["msflags",3]],[[],["mntflags",3]],[[],["mq_oflag",3]],[[],["fdflag",3]],[[],["mqattr",3]],[[],["interfaceflags",3]],[[],["pollfd",3]],[[],["pollflags",3]],[[],["openptyresult",3]],[[],["forkptyresult",3]],[[],["cloneflags",3]],[[],["cpuset",3]],[[],["aiofsyncmode",4]],[[],["lioopcode",4]],[[],["liomode",4]],[[],["aiocancelstat",4]],[[],["epollflags",3]],[[],["epollop",4]],[[],["epollcreateflags",3]],[[],["epollevent",3]],[[],["efdflags",3]],[[],["memfdcreateflag",3]],[[],["protflags",3]],[[],["mapflags",3]],[[],["mremapflags",3]],[[],["mmapadvise",4]],[[],["msflags",3]],[[],["mlockallflags",3]],[[],["persona",3]],[[],["request",4]],[[],["event",4]],[[],["options",3]],[[],["quotatype",4]],[[],["quotafmt",4]],[[],["quotavalidflags",3]],[[],["dqblk",3]],[[],["rebootmode",4]],[[],["fdset",3]],[[],["signal",4]],[[],["signaliterator",3]],[[],["saflags",3]],[[],["sigmaskhow",4]],[[],["sigset",3]],[[],["sighandler",4]],[[],["sigaction",3]],[[],["sigevnotify",4]],[[],["sigevent",3]],[[],["sfdflags",3]],[[],["addressfamily",4]],[[],["inetaddr",4]],[[],["ipaddr",4]],[[],["ipv4addr",3]],[[],["ipv6addr",3]],[[],["unixaddr",3]],[[],["sockaddr",4]],[[],["netlinkaddr",3]],[[],["algaddr",3]],[[],["linkaddr",3]],[[],["vsockaddr",3]],[[],["reuseaddr",3]],[[],["reuseport",3]],[[],["tcpnodelay",3]],[[],["linger",3]],[[],["ipaddmembership",3]],[[],["ipdropmembership",3]],[[],["ipv6addmembership",3]],[[],["ipv6dropmembership",3]],[[],["ipmulticastttl",3]],[[],["ipmulticastloop",3]],[[],["receivetimeout",3]],[[],["sendtimeout",3]],[[],["broadcast",3]],[[],["oobinline",3]],[[],["socketerror",3]],[[],["keepalive",3]],[[],["peercredentials",3]],[[],["tcpkeepidle",3]],[[],["tcpkeepcount",3]],[[],["tcpkeepinterval",3]],[[],["rcvbuf",3]],[[],["sndbuf",3]],[[],["rcvbufforce",3]],[[],["sndbufforce",3]],[[],["socktype",3]],[[],["acceptconn",3]],[[],["bindtodevice",3]],[[],["originaldst",3]],[[],["receivetimestamp",3]],[[],["iptransparent",3]],[[],["mark",3]],[[],["passcred",3]],[[],["tcpcongestion",3]],[[],["ipv4packetinfo",3]],[[],["ipv6recvpacketinfo",3]],[[],["udpgsosegment",3]],[[],["udpgrosegment",3]],[[],["algsetaeadauthsize",3]],[[],["algsetkey",3]],[[],["socktype",4]],[[],["sockprotocol",4]],[[],["sockflag",3]],[[],["msgflags",3]],[[],["unixcredentials",3]],[[],["ipmembershiprequest",3]],[[],["ipv6membershiprequest",3]],[[],["recvmsg",3]],[[],["cmsgiterator",3]],[[],["controlmessageowned",4]],[[],["controlmessage",4]],[[],["shutdown",4]],[[],["sflag",3]],[[],["mode",3]],[[],["fchmodatflags",4]],[[],["utimensatflags",4]],[[],["statfs",3]],[[],["fstype",3]],[[],["fsflags",3]],[[],["statvfs",3]],[[],["sysinfo",3]],[[],["termios",3]],[[],["baudrate",4]],[[],["setarg",4]],[[],["flusharg",4]],[[],["flowarg",4]],[[],["specialcharacterindices",4]],[[],["inputflags",3]],[[],["outputflags",3]],[[],["controlflags",3]],[[],["localflags",3]],[[],["timespec",3]],[[],["timeval",3]],[[],["remoteiovec",3]],[[],["iovec",3]],[[],["utsname",3]],[[],["waitpidflag",3]],[[],["waitstatus",4]],[[],["addwatchflags",3]],[[],["initflags",3]],[[],["inotify",3]],[[],["watchdescriptor",3]],[[],["clockid",4]],[[],["timerflags",3]],[[],["timersettimeflags",3]],[[],["expiration",4]],[[],["clockid",3]],[[],["ucontext",3]],[[],["uid",3]],[[],["gid",3]],[[],["pid",3]],[[],["forkresult",4]],[[],["fchownatflags",4]],[[],["whence",4]],[[],["linkatflags",4]],[[],["unlinkatflags",4]],[[],["pathconfvar",4]],[[],["sysconfvar",4]],[[],["accessflags",3]],[[],["user",3]],[[],["group",3]],[[],["error",4]],[[]],[[],["quotavalidflags",3]],[[],["dqblk",3]],[[]],[[]],[[]],[[],["fsflags",3]],[[["atflags",3]],["ordering",4]],[[["oflag",3]],["ordering",4]],[[["sealflag",3]],["ordering",4]],[[["fdflag",3]],["ordering",4]],[[["splicefflags",3]],["ordering",4]],[[["fallocateflags",3]],["ordering",4]],[[["posixfadviseadvice",4]],["ordering",4]],[[["moduleinitflags",3]],["ordering",4]],[[["deletemoduleflags",3]],["ordering",4]],[[["msflags",3]],["ordering",4]],[[["mntflags",3]],["ordering",4]],[[["mq_oflag",3]],["ordering",4]],[[["fdflag",3]],["ordering",4]],[[["interfaceflags",3]],["ordering",4]],[[["pollflags",3]],["ordering",4]],[[["cloneflags",3]],["ordering",4]],[[["aiofsyncmode",4]],["ordering",4]],[[["lioopcode",4]],["ordering",4]],[[["liomode",4]],["ordering",4]],[[["epollflags",3]],["ordering",4]],[[["epollcreateflags",3]],["ordering",4]],[[["efdflags",3]],["ordering",4]],[[["memfdcreateflag",3]],["ordering",4]],[[["protflags",3]],["ordering",4]],[[["mapflags",3]],["ordering",4]],[[["mremapflags",3]],["ordering",4]],[[["mmapadvise",4]],["ordering",4]],[[["msflags",3]],["ordering",4]],[[["mlockallflags",3]],["ordering",4]],[[["persona",3]],["ordering",4]],[[["request",4]],["ordering",4]],[[["event",4]],["ordering",4]],[[["options",3]],["ordering",4]],[[["quotatype",4]],["ordering",4]],[[["quotafmt",4]],["ordering",4]],[[["quotavalidflags",3]],["ordering",4]],[[["rebootmode",4]],["ordering",4]],[[["signal",4]],["ordering",4]],[[["saflags",3]],["ordering",4]],[[["sigmaskhow",4]],["ordering",4]],[[["sfdflags",3]],["ordering",4]],[[["sockflag",3]],["ordering",4]],[[["msgflags",3]],["ordering",4]],[[["sflag",3]],["ordering",4]],[[["mode",3]],["ordering",4]],[[["fsflags",3]],["ordering",4]],[[["baudrate",4]],["ordering",4]],[[["setarg",4]],["ordering",4]],[[["flusharg",4]],["ordering",4]],[[["flowarg",4]],["ordering",4]],[[["specialcharacterindices",4]],["ordering",4]],[[["inputflags",3]],["ordering",4]],[[["outputflags",3]],["ordering",4]],[[["controlflags",3]],["ordering",4]],[[["localflags",3]],["ordering",4]],[[["timespec",3]],["ordering",4]],[[["timeval",3]],["ordering",4]],[[["waitpidflag",3]],["ordering",4]],[[["addwatchflags",3]],["ordering",4]],[[["initflags",3]],["ordering",4]],[[["watchdescriptor",3]],["ordering",4]],[[["clockid",4]],["ordering",4]],[[["timerflags",3]],["ordering",4]],[[["timersettimeflags",3]],["ordering",4]],[[["clockid",3]],["ordering",4]],[[["pid",3]],["ordering",4]],[[["accessflags",3]],["ordering",4]],[[["dir",3]],["bool",15]],[[["dir",3]],["bool",15]],[[["iter",3]],["bool",15]],[[["iter",3]],["bool",15]],[[["owningiter",3]],["bool",15]],[[["owningiter",3]],["bool",15]],[[["entry",3]],["bool",15]],[[["entry",3]],["bool",15]],[[["type",4]],["bool",15]],[[["errno",4]],["bool",15]],[[["atflags",3]],["bool",15]],[[["atflags",3]],["bool",15]],[[["oflag",3]],["bool",15]],[[["oflag",3]],["bool",15]],[[["sealflag",3]],["bool",15]],[[["sealflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fcntlarg",4]],["bool",15]],[[["fcntlarg",4]],["bool",15]],[[["flockarg",4]],["bool",15]],[[["splicefflags",3]],["bool",15]],[[["splicefflags",3]],["bool",15]],[[["fallocateflags",3]],["bool",15]],[[["fallocateflags",3]],["bool",15]],[[["posixfadviseadvice",4]],["bool",15]],[[["interfaceaddress",3]],["bool",15]],[[["interfaceaddress",3]],["bool",15]],[[["interfaceaddressiterator",3]],["bool",15]],[[["interfaceaddressiterator",3]],["bool",15]],[[["moduleinitflags",3]],["bool",15]],[[["moduleinitflags",3]],["bool",15]],[[["deletemoduleflags",3]],["bool",15]],[[["deletemoduleflags",3]],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]],["bool",15]],[[["mntflags",3]],["bool",15]],[[["mntflags",3]],["bool",15]],[[["mq_oflag",3]],["bool",15]],[[["mq_oflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["fdflag",3]],["bool",15]],[[["mqattr",3]],["bool",15]],[[["mqattr",3]],["bool",15]],[[["interfaceflags",3]],["bool",15]],[[["interfaceflags",3]],["bool",15]],[[["pollfd",3]],["bool",15]],[[["pollfd",3]],["bool",15]],[[["pollflags",3]],["bool",15]],[[["pollflags",3]],["bool",15]],[[["openptyresult",3]],["bool",15]],[[["openptyresult",3]],["bool",15]],[[["ptymaster",3]],["bool",15]],[[["ptymaster",3]],["bool",15]],[[["cloneflags",3]],["bool",15]],[[["cloneflags",3]],["bool",15]],[[["cpuset",3]],["bool",15]],[[["cpuset",3]],["bool",15]],[[["aiofsyncmode",4]],["bool",15]],[[["lioopcode",4]],["bool",15]],[[["liomode",4]],["bool",15]],[[["aiocancelstat",4]],["bool",15]],[[["epollflags",3]],["bool",15]],[[["epollflags",3]],["bool",15]],[[["epollop",4]],["bool",15]],[[["epollcreateflags",3]],["bool",15]],[[["epollcreateflags",3]],["bool",15]],[[["epollevent",3]],["bool",15]],[[["epollevent",3]],["bool",15]],[[["efdflags",3]],["bool",15]],[[["efdflags",3]],["bool",15]],[[["memfdcreateflag",3]],["bool",15]],[[["memfdcreateflag",3]],["bool",15]],[[["protflags",3]],["bool",15]],[[["protflags",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["mapflags",3]],["bool",15]],[[["mremapflags",3]],["bool",15]],[[["mremapflags",3]],["bool",15]],[[["mmapadvise",4]],["bool",15]],[[["msflags",3]],["bool",15]],[[["msflags",3]],["bool",15]],[[["mlockallflags",3]],["bool",15]],[[["mlockallflags",3]],["bool",15]],[[["persona",3]],["bool",15]],[[["persona",3]],["bool",15]],[[["request",4]],["bool",15]],[[["event",4]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["quotatype",4]],["bool",15]],[[["quotafmt",4]],["bool",15]],[[["quotavalidflags",3]],["bool",15]],[[["quotavalidflags",3]],["bool",15]],[[["dqblk",3]],["bool",15]],[[["dqblk",3]],["bool",15]],[[["rebootmode",4]],["bool",15]],[[["fdset",3]],["bool",15]],[[["fdset",3]],["bool",15]],[[["signal",4]],["bool",15]],[[["signaliterator",3]],["bool",15]],[[["signaliterator",3]],["bool",15]],[[["saflags",3]],["bool",15]],[[["saflags",3]],["bool",15]],[[["sigmaskhow",4]],["bool",15]],[[["sigset",3]],["bool",15]],[[["sigset",3]],["bool",15]],[[["sighandler",4]],["bool",15]],[[["sighandler",4]],["bool",15]],[[["sigaction",3]],["bool",15]],[[["sigaction",3]],["bool",15]],[[["sigevnotify",4]],["bool",15]],[[["sigevnotify",4]],["bool",15]],[[["sigevent",3]],["bool",15]],[[["sigevent",3]],["bool",15]],[[["sfdflags",3]],["bool",15]],[[["sfdflags",3]],["bool",15]],[[["signalfd",3]],["bool",15]],[[["signalfd",3]],["bool",15]],[[["addressfamily",4]],["bool",15]],[[["inetaddr",4]],["bool",15]],[[["inetaddr",4]],["bool",15]],[[["ipaddr",4]],["bool",15]],[[["ipaddr",4]],["bool",15]],[[["ipv4addr",3]],["bool",15]],[[["ipv4addr",3]],["bool",15]],[[["ipv6addr",3]],["bool",15]],[[["ipv6addr",3]],["bool",15]],[[["unixaddr",3]],["bool",15]],[[["sockaddr",4]],["bool",15]],[[["sockaddr",4]],["bool",15]],[[["netlinkaddr",3]],["bool",15]],[[["netlinkaddr",3]],["bool",15]],[[],["bool",15]],[[["linkaddr",3]],["bool",15]],[[["linkaddr",3]],["bool",15]],[[],["bool",15]],[[["reuseaddr",3]],["bool",15]],[[["reuseport",3]],["bool",15]],[[["tcpnodelay",3]],["bool",15]],[[["linger",3]],["bool",15]],[[["ipaddmembership",3]],["bool",15]],[[["ipdropmembership",3]],["bool",15]],[[["ipv6addmembership",3]],["bool",15]],[[["ipv6dropmembership",3]],["bool",15]],[[["ipmulticastttl",3]],["bool",15]],[[["ipmulticastloop",3]],["bool",15]],[[["receivetimeout",3]],["bool",15]],[[["sendtimeout",3]],["bool",15]],[[["broadcast",3]],["bool",15]],[[["oobinline",3]],["bool",15]],[[["socketerror",3]],["bool",15]],[[["keepalive",3]],["bool",15]],[[["peercredentials",3]],["bool",15]],[[["tcpkeepidle",3]],["bool",15]],[[["tcpkeepcount",3]],["bool",15]],[[["tcpkeepinterval",3]],["bool",15]],[[["rcvbuf",3]],["bool",15]],[[["sndbuf",3]],["bool",15]],[[["rcvbufforce",3]],["bool",15]],[[["sndbufforce",3]],["bool",15]],[[["socktype",3]],["bool",15]],[[["acceptconn",3]],["bool",15]],[[["bindtodevice",3]],["bool",15]],[[["originaldst",3]],["bool",15]],[[["receivetimestamp",3]],["bool",15]],[[["iptransparent",3]],["bool",15]],[[["mark",3]],["bool",15]],[[["passcred",3]],["bool",15]],[[["tcpcongestion",3]],["bool",15]],[[["ipv4packetinfo",3]],["bool",15]],[[["ipv6recvpacketinfo",3]],["bool",15]],[[["udpgsosegment",3]],["bool",15]],[[["udpgrosegment",3]],["bool",15]],[[["socktype",4]],["bool",15]],[[["sockprotocol",4]],["bool",15]],[[["sockflag",3]],["bool",15]],[[["sockflag",3]],["bool",15]],[[["msgflags",3]],["bool",15]],[[["msgflags",3]],["bool",15]],[[["unixcredentials",3]],["bool",15]],[[["unixcredentials",3]],["bool",15]],[[["ipmembershiprequest",3]],["bool",15]],[[["ipmembershiprequest",3]],["bool",15]],[[["ipv6membershiprequest",3]],["bool",15]],[[["ipv6membershiprequest",3]],["bool",15]],[[["recvmsg",3]],["bool",15]],[[["recvmsg",3]],["bool",15]],[[["cmsgiterator",3]],["bool",15]],[[["cmsgiterator",3]],["bool",15]],[[["controlmessageowned",4]],["bool",15]],[[["controlmessageowned",4]],["bool",15]],[[["controlmessage",4]],["bool",15]],[[["controlmessage",4]],["bool",15]],[[["shutdown",4]],["bool",15]],[[["sflag",3]],["bool",15]],[[["sflag",3]],["bool",15]],[[["mode",3]],["bool",15]],[[["mode",3]],["bool",15]],[[["fstype",3]],["bool",15]],[[["fstype",3]],["bool",15]],[[["fsflags",3]],["bool",15]],[[["fsflags",3]],["bool",15]],[[["statvfs",3]],["bool",15]],[[["statvfs",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["sysinfo",3]],["bool",15]],[[["termios",3]],["bool",15]],[[["termios",3]],["bool",15]],[[["baudrate",4]],["bool",15]],[[["setarg",4]],["bool",15]],[[["flusharg",4]],["bool",15]],[[["flowarg",4]],["bool",15]],[[["specialcharacterindices",4]],["bool",15]],[[["inputflags",3]],["bool",15]],[[["inputflags",3]],["bool",15]],[[["outputflags",3]],["bool",15]],[[["outputflags",3]],["bool",15]],[[["controlflags",3]],["bool",15]],[[["controlflags",3]],["bool",15]],[[["localflags",3]],["bool",15]],[[["localflags",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["timespec",3]],["bool",15]],[[["timeval",3]],["bool",15]],[[["timeval",3]],["bool",15]],[[["remoteiovec",3]],["bool",15]],[[["remoteiovec",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["iovec",3]],["bool",15]],[[["utsname",3]],["bool",15]],[[["utsname",3]],["bool",15]],[[["waitpidflag",3]],["bool",15]],[[["waitpidflag",3]],["bool",15]],[[["waitstatus",4]],["bool",15]],[[["waitstatus",4]],["bool",15]],[[["addwatchflags",3]],["bool",15]],[[["addwatchflags",3]],["bool",15]],[[["initflags",3]],["bool",15]],[[["initflags",3]],["bool",15]],[[["watchdescriptor",3]],["bool",15]],[[["watchdescriptor",3]],["bool",15]],[[["clockid",4]],["bool",15]],[[["timerflags",3]],["bool",15]],[[["timerflags",3]],["bool",15]],[[["timersettimeflags",3]],["bool",15]],[[["timersettimeflags",3]],["bool",15]],[[["expiration",4]],["bool",15]],[[["expiration",4]],["bool",15]],[[["clockid",3]],["bool",15]],[[["clockid",3]],["bool",15]],[[["ucontext",3]],["bool",15]],[[["ucontext",3]],["bool",15]],[[["uid",3]],["bool",15]],[[["uid",3]],["bool",15]],[[["gid",3]],["bool",15]],[[["gid",3]],["bool",15]],[[["pid",3]],["bool",15]],[[["pid",3]],["bool",15]],[[["pathconfvar",4]],["bool",15]],[[["sysconfvar",4]],["bool",15]],[[["accessflags",3]],["bool",15]],[[["accessflags",3]],["bool",15]],[[["user",3]],["bool",15]],[[["user",3]],["bool",15]],[[["group",3]],["bool",15]],[[["group",3]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["atflags",3]],[["ordering",4],["option",4]]],[[["oflag",3]],[["ordering",4],["option",4]]],[[["sealflag",3]],[["ordering",4],["option",4]]],[[["fdflag",3]],[["ordering",4],["option",4]]],[[["splicefflags",3]],[["ordering",4],["option",4]]],[[["fallocateflags",3]],[["ordering",4],["option",4]]],[[["posixfadviseadvice",4]],[["ordering",4],["option",4]]],[[["moduleinitflags",3]],[["ordering",4],["option",4]]],[[["deletemoduleflags",3]],[["ordering",4],["option",4]]],[[["msflags",3]],[["ordering",4],["option",4]]],[[["mntflags",3]],[["ordering",4],["option",4]]],[[["mq_oflag",3]],[["ordering",4],["option",4]]],[[["fdflag",3]],[["ordering",4],["option",4]]],[[["interfaceflags",3]],[["ordering",4],["option",4]]],[[["pollflags",3]],[["ordering",4],["option",4]]],[[["cloneflags",3]],[["ordering",4],["option",4]]],[[["aiofsyncmode",4]],[["ordering",4],["option",4]]],[[["lioopcode",4]],[["ordering",4],["option",4]]],[[["liomode",4]],[["ordering",4],["option",4]]],[[["epollflags",3]],[["ordering",4],["option",4]]],[[["epollcreateflags",3]],[["ordering",4],["option",4]]],[[["efdflags",3]],[["ordering",4],["option",4]]],[[["memfdcreateflag",3]],[["ordering",4],["option",4]]],[[["protflags",3]],[["ordering",4],["option",4]]],[[["mapflags",3]],[["ordering",4],["option",4]]],[[["mremapflags",3]],[["ordering",4],["option",4]]],[[["mmapadvise",4]],[["ordering",4],["option",4]]],[[["msflags",3]],[["ordering",4],["option",4]]],[[["mlockallflags",3]],[["ordering",4],["option",4]]],[[["persona",3]],[["ordering",4],["option",4]]],[[["request",4]],[["ordering",4],["option",4]]],[[["event",4]],[["ordering",4],["option",4]]],[[["options",3]],[["ordering",4],["option",4]]],[[["quotatype",4]],[["ordering",4],["option",4]]],[[["quotafmt",4]],[["ordering",4],["option",4]]],[[["quotavalidflags",3]],[["ordering",4],["option",4]]],[[["rebootmode",4]],[["ordering",4],["option",4]]],[[["signal",4]],[["ordering",4],["option",4]]],[[["saflags",3]],[["ordering",4],["option",4]]],[[["sigmaskhow",4]],[["ordering",4],["option",4]]],[[["sfdflags",3]],[["ordering",4],["option",4]]],[[["sockflag",3]],[["ordering",4],["option",4]]],[[["msgflags",3]],[["ordering",4],["option",4]]],[[["sflag",3]],[["ordering",4],["option",4]]],[[["mode",3]],[["ordering",4],["option",4]]],[[["fsflags",3]],[["ordering",4],["option",4]]],[[["baudrate",4]],[["ordering",4],["option",4]]],[[["setarg",4]],[["ordering",4],["option",4]]],[[["flusharg",4]],[["ordering",4],["option",4]]],[[["flowarg",4]],[["ordering",4],["option",4]]],[[["specialcharacterindices",4]],[["ordering",4],["option",4]]],[[["inputflags",3]],[["ordering",4],["option",4]]],[[["outputflags",3]],[["ordering",4],["option",4]]],[[["controlflags",3]],[["ordering",4],["option",4]]],[[["localflags",3]],[["ordering",4],["option",4]]],[[["timespec",3]],[["option",4],["ordering",4]]],[[["timeval",3]],[["option",4],["ordering",4]]],[[["waitpidflag",3]],[["ordering",4],["option",4]]],[[["addwatchflags",3]],[["ordering",4],["option",4]]],[[["initflags",3]],[["ordering",4],["option",4]]],[[["watchdescriptor",3]],[["ordering",4],["option",4]]],[[["clockid",4]],[["ordering",4],["option",4]]],[[["timerflags",3]],[["ordering",4],["option",4]]],[[["timersettimeflags",3]],[["ordering",4],["option",4]]],[[["clockid",3]],[["ordering",4],["option",4]]],[[["pid",3]],[["ordering",4],["option",4]]],[[["accessflags",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["i32",15]],["timespec",3]],[[["i32",15]],["timeval",3]],[[["atflags",3]],["atflags",3]],[[["oflag",3]],["oflag",3]],[[["sealflag",3]],["sealflag",3]],[[["fdflag",3]],["fdflag",3]],[[["splicefflags",3]],["splicefflags",3]],[[["fallocateflags",3]],["fallocateflags",3]],[[["moduleinitflags",3]],["moduleinitflags",3]],[[["deletemoduleflags",3]],["deletemoduleflags",3]],[[["msflags",3]],["msflags",3]],[[["mntflags",3]],["mntflags",3]],[[["mq_oflag",3]],["mq_oflag",3]],[[["fdflag",3]],["fdflag",3]],[[["interfaceflags",3]],["interfaceflags",3]],[[["pollflags",3]],["pollflags",3]],[[["cloneflags",3]],["cloneflags",3]],[[["epollflags",3]],["epollflags",3]],[[["epollcreateflags",3]],["epollcreateflags",3]],[[["efdflags",3]],["efdflags",3]],[[["memfdcreateflag",3]],["memfdcreateflag",3]],[[["protflags",3]],["protflags",3]],[[["mapflags",3]],["mapflags",3]],[[["mremapflags",3]],["mremapflags",3]],[[["msflags",3]],["msflags",3]],[[["mlockallflags",3]],["mlockallflags",3]],[[["persona",3]],["persona",3]],[[["options",3]],["options",3]],[[["quotavalidflags",3]],["quotavalidflags",3]],[[["saflags",3]],["saflags",3]],[[["sfdflags",3]],["sfdflags",3]],[[["sockflag",3]],["sockflag",3]],[[["msgflags",3]],["msgflags",3]],[[["sflag",3]],["sflag",3]],[[["mode",3]],["mode",3]],[[["fsflags",3]],["fsflags",3]],[[["inputflags",3]],["inputflags",3]],[[["outputflags",3]],["outputflags",3]],[[["controlflags",3]],["controlflags",3]],[[["localflags",3]],["localflags",3]],[[["timespec",3]],["timespec",3]],[[["timeval",3]],["timeval",3]],[[["waitpidflag",3]],["waitpidflag",3]],[[["addwatchflags",3]],["addwatchflags",3]],[[["initflags",3]],["initflags",3]],[[["timerflags",3]],["timerflags",3]],[[["timersettimeflags",3]],["timersettimeflags",3]],[[["accessflags",3]],["accessflags",3]],[[["timespec",3]],["timespec",3]],[[["timeval",3]],["timeval",3]],[[["i32",15]],["timespec",3]],[[["i32",15]],["timeval",3]],[[],["timespec",3]],[[],["timeval",3]],[[["atflags",3]]],[[["oflag",3]]],[[["sealflag",3]]],[[["fdflag",3]]],[[["splicefflags",3]]],[[["fallocateflags",3]]],[[["moduleinitflags",3]]],[[["deletemoduleflags",3]]],[[["msflags",3]]],[[["mntflags",3]]],[[["mq_oflag",3]]],[[["fdflag",3]]],[[["interfaceflags",3]]],[[["pollflags",3]]],[[["cloneflags",3]]],[[["epollflags",3]]],[[["epollcreateflags",3]]],[[["efdflags",3]]],[[["memfdcreateflag",3]]],[[["protflags",3]]],[[["mapflags",3]]],[[["mremapflags",3]]],[[["msflags",3]]],[[["mlockallflags",3]]],[[["persona",3]]],[[["options",3]]],[[["quotavalidflags",3]]],[[["saflags",3]]],[[["sfdflags",3]]],[[["sockflag",3]]],[[["msgflags",3]]],[[["sflag",3]]],[[["mode",3]]],[[["fsflags",3]]],[[["inputflags",3]]],[[["outputflags",3]]],[[["controlflags",3]]],[[["localflags",3]]],[[["waitpidflag",3]]],[[["addwatchflags",3]]],[[["initflags",3]]],[[["timerflags",3]]],[[["timersettimeflags",3]]],[[["accessflags",3]]],[[],["atflags",3]],[[],["oflag",3]],[[],["sealflag",3]],[[],["fdflag",3]],[[],["splicefflags",3]],[[],["fallocateflags",3]],[[],["moduleinitflags",3]],[[],["deletemoduleflags",3]],[[],["msflags",3]],[[],["mntflags",3]],[[],["mq_oflag",3]],[[],["fdflag",3]],[[],["interfaceflags",3]],[[],["pollflags",3]],[[],["cloneflags",3]],[[],["epollflags",3]],[[],["epollcreateflags",3]],[[],["efdflags",3]],[[],["memfdcreateflag",3]],[[],["protflags",3]],[[],["mapflags",3]],[[],["mremapflags",3]],[[],["msflags",3]],[[],["mlockallflags",3]],[[],["persona",3]],[[],["options",3]],[[],["quotavalidflags",3]],[[],["saflags",3]],[[],["sfdflags",3]],[[],["sockflag",3]],[[],["msgflags",3]],[[],["sflag",3]],[[],["mode",3]],[[],["fsflags",3]],[[],["inputflags",3]],[[],["outputflags",3]],[[],["controlflags",3]],[[],["localflags",3]],[[],["waitpidflag",3]],[[],["addwatchflags",3]],[[],["initflags",3]],[[],["timerflags",3]],[[],["timersettimeflags",3]],[[],["accessflags",3]],[[["atflags",3]],["atflags",3]],[[["oflag",3]],["oflag",3]],[[["sealflag",3]],["sealflag",3]],[[["fdflag",3]],["fdflag",3]],[[["splicefflags",3]],["splicefflags",3]],[[["fallocateflags",3]],["fallocateflags",3]],[[["moduleinitflags",3]],["moduleinitflags",3]],[[["deletemoduleflags",3]],["deletemoduleflags",3]],[[["msflags",3]],["msflags",3]],[[["mntflags",3]],["mntflags",3]],[[["mq_oflag",3]],["mq_oflag",3]],[[["fdflag",3]],["fdflag",3]],[[["interfaceflags",3]],["interfaceflags",3]],[[["pollflags",3]],["pollflags",3]],[[["cloneflags",3]],["cloneflags",3]],[[["epollflags",3]],["epollflags",3]],[[["epollcreateflags",3]],["epollcreateflags",3]],[[["efdflags",3]],["efdflags",3]],[[["memfdcreateflag",3]],["memfdcreateflag",3]],[[["protflags",3]],["protflags",3]],[[["mapflags",3]],["mapflags",3]],[[["mremapflags",3]],["mremapflags",3]],[[["msflags",3]],["msflags",3]],[[["mlockallflags",3]],["mlockallflags",3]],[[["persona",3]],["persona",3]],[[["options",3]],["options",3]],[[["quotavalidflags",3]],["quotavalidflags",3]],[[["saflags",3]],["saflags",3]],[[["sfdflags",3]],["sfdflags",3]],[[["sockflag",3]],["sockflag",3]],[[["msgflags",3]],["msgflags",3]],[[["sflag",3]],["sflag",3]],[[["mode",3]],["mode",3]],[[["fsflags",3]],["fsflags",3]],[[["inputflags",3]],["inputflags",3]],[[["outputflags",3]],["outputflags",3]],[[["controlflags",3]],["controlflags",3]],[[["localflags",3]],["localflags",3]],[[["waitpidflag",3]],["waitpidflag",3]],[[["addwatchflags",3]],["addwatchflags",3]],[[["initflags",3]],["initflags",3]],[[["timerflags",3]],["timerflags",3]],[[["timersettimeflags",3]],["timersettimeflags",3]],[[["accessflags",3]],["accessflags",3]],[[["atflags",3]],["atflags",3]],[[["oflag",3]],["oflag",3]],[[["sealflag",3]],["sealflag",3]],[[["fdflag",3]],["fdflag",3]],[[["splicefflags",3]],["splicefflags",3]],[[["fallocateflags",3]],["fallocateflags",3]],[[["moduleinitflags",3]],["moduleinitflags",3]],[[["deletemoduleflags",3]],["deletemoduleflags",3]],[[["msflags",3]],["msflags",3]],[[["mntflags",3]],["mntflags",3]],[[["mq_oflag",3]],["mq_oflag",3]],[[["fdflag",3]],["fdflag",3]],[[["interfaceflags",3]],["interfaceflags",3]],[[["pollflags",3]],["pollflags",3]],[[["cloneflags",3]],["cloneflags",3]],[[["epollflags",3]],["epollflags",3]],[[["epollcreateflags",3]],["epollcreateflags",3]],[[["efdflags",3]],["efdflags",3]],[[["memfdcreateflag",3]],["memfdcreateflag",3]],[[["protflags",3]],["protflags",3]],[[["mapflags",3]],["mapflags",3]],[[["mremapflags",3]],["mremapflags",3]],[[["msflags",3]],["msflags",3]],[[["mlockallflags",3]],["mlockallflags",3]],[[["persona",3]],["persona",3]],[[["options",3]],["options",3]],[[["quotavalidflags",3]],["quotavalidflags",3]],[[["saflags",3]],["saflags",3]],[[["sfdflags",3]],["sfdflags",3]],[[["sockflag",3]],["sockflag",3]],[[["msgflags",3]],["msgflags",3]],[[["sflag",3]],["sflag",3]],[[["mode",3]],["mode",3]],[[["fsflags",3]],["fsflags",3]],[[["inputflags",3]],["inputflags",3]],[[["outputflags",3]],["outputflags",3]],[[["controlflags",3]],["controlflags",3]],[[["localflags",3]],["localflags",3]],[[["waitpidflag",3]],["waitpidflag",3]],[[["addwatchflags",3]],["addwatchflags",3]],[[["initflags",3]],["initflags",3]],[[["timerflags",3]],["timerflags",3]],[[["timersettimeflags",3]],["timersettimeflags",3]],[[["accessflags",3]],["accessflags",3]],[[["atflags",3]],["atflags",3]],[[["oflag",3]],["oflag",3]],[[["sealflag",3]],["sealflag",3]],[[["fdflag",3]],["fdflag",3]],[[["splicefflags",3]],["splicefflags",3]],[[["fallocateflags",3]],["fallocateflags",3]],[[["moduleinitflags",3]],["moduleinitflags",3]],[[["deletemoduleflags",3]],["deletemoduleflags",3]],[[["msflags",3]],["msflags",3]],[[["mntflags",3]],["mntflags",3]],[[["mq_oflag",3]],["mq_oflag",3]],[[["fdflag",3]],["fdflag",3]],[[["interfaceflags",3]],["interfaceflags",3]],[[["pollflags",3]],["pollflags",3]],[[["cloneflags",3]],["cloneflags",3]],[[["epollflags",3]],["epollflags",3]],[[["epollcreateflags",3]],["epollcreateflags",3]],[[["efdflags",3]],["efdflags",3]],[[["memfdcreateflag",3]],["memfdcreateflag",3]],[[["protflags",3]],["protflags",3]],[[["mapflags",3]],["mapflags",3]],[[["mremapflags",3]],["mremapflags",3]],[[["msflags",3]],["msflags",3]],[[["mlockallflags",3]],["mlockallflags",3]],[[["persona",3]],["persona",3]],[[["options",3]],["options",3]],[[["quotavalidflags",3]],["quotavalidflags",3]],[[["saflags",3]],["saflags",3]],[[["sfdflags",3]],["sfdflags",3]],[[["sockflag",3]],["sockflag",3]],[[["msgflags",3]],["msgflags",3]],[[["sflag",3]],["sflag",3]],[[["mode",3]],["mode",3]],[[["fsflags",3]],["fsflags",3]],[[["inputflags",3]],["inputflags",3]],[[["outputflags",3]],["outputflags",3]],[[["controlflags",3]],["controlflags",3]],[[["localflags",3]],["localflags",3]],[[["waitpidflag",3]],["waitpidflag",3]],[[["addwatchflags",3]],["addwatchflags",3]],[[["initflags",3]],["initflags",3]],[[["timerflags",3]],["timerflags",3]],[[["timersettimeflags",3]],["timersettimeflags",3]],[[["accessflags",3]],["accessflags",3]],[[["atflags",3]]],[[["oflag",3]]],[[["sealflag",3]]],[[["fdflag",3]]],[[["splicefflags",3]]],[[["fallocateflags",3]]],[[["moduleinitflags",3]]],[[["deletemoduleflags",3]]],[[["msflags",3]]],[[["mntflags",3]]],[[["mq_oflag",3]]],[[["fdflag",3]]],[[["interfaceflags",3]]],[[["pollflags",3]]],[[["cloneflags",3]]],[[["epollflags",3]]],[[["epollcreateflags",3]]],[[["efdflags",3]]],[[["memfdcreateflag",3]]],[[["protflags",3]]],[[["mapflags",3]]],[[["mremapflags",3]]],[[["msflags",3]]],[[["mlockallflags",3]]],[[["persona",3]]],[[["options",3]]],[[["quotavalidflags",3]]],[[["saflags",3]]],[[["sfdflags",3]]],[[["sockflag",3]]],[[["msgflags",3]]],[[["sflag",3]]],[[["mode",3]]],[[["fsflags",3]]],[[["inputflags",3]]],[[["outputflags",3]]],[[["controlflags",3]]],[[["localflags",3]]],[[["waitpidflag",3]]],[[["addwatchflags",3]]],[[["initflags",3]]],[[["timerflags",3]]],[[["timersettimeflags",3]]],[[["accessflags",3]]],[[["atflags",3]]],[[["oflag",3]]],[[["sealflag",3]]],[[["fdflag",3]]],[[["splicefflags",3]]],[[["fallocateflags",3]]],[[["moduleinitflags",3]]],[[["deletemoduleflags",3]]],[[["msflags",3]]],[[["mntflags",3]]],[[["mq_oflag",3]]],[[["fdflag",3]]],[[["interfaceflags",3]]],[[["pollflags",3]]],[[["cloneflags",3]]],[[["epollflags",3]]],[[["epollcreateflags",3]]],[[["efdflags",3]]],[[["memfdcreateflag",3]]],[[["protflags",3]]],[[["mapflags",3]]],[[["mremapflags",3]]],[[["msflags",3]]],[[["mlockallflags",3]]],[[["persona",3]]],[[["options",3]]],[[["quotavalidflags",3]]],[[["saflags",3]]],[[["sfdflags",3]]],[[["sockflag",3]]],[[["msgflags",3]]],[[["sflag",3]]],[[["mode",3]]],[[["fsflags",3]]],[[["inputflags",3]]],[[["outputflags",3]]],[[["controlflags",3]]],[[["localflags",3]]],[[["waitpidflag",3]]],[[["addwatchflags",3]]],[[["initflags",3]]],[[["timerflags",3]]],[[["timersettimeflags",3]]],[[["accessflags",3]]],[[["atflags",3]]],[[["oflag",3]]],[[["sealflag",3]]],[[["fdflag",3]]],[[["splicefflags",3]]],[[["fallocateflags",3]]],[[["moduleinitflags",3]]],[[["deletemoduleflags",3]]],[[["msflags",3]]],[[["mntflags",3]]],[[["mq_oflag",3]]],[[["fdflag",3]]],[[["interfaceflags",3]]],[[["pollflags",3]]],[[["cloneflags",3]]],[[["epollflags",3]]],[[["epollcreateflags",3]]],[[["efdflags",3]]],[[["memfdcreateflag",3]]],[[["protflags",3]]],[[["mapflags",3]]],[[["mremapflags",3]]],[[["msflags",3]]],[[["mlockallflags",3]]],[[["persona",3]]],[[["options",3]]],[[["quotavalidflags",3]]],[[["saflags",3]]],[[["sfdflags",3]]],[[["sockflag",3]]],[[["msgflags",3]]],[[["sflag",3]]],[[["mode",3]]],[[["fsflags",3]]],[[["inputflags",3]]],[[["outputflags",3]]],[[["controlflags",3]]],[[["localflags",3]]],[[["waitpidflag",3]]],[[["addwatchflags",3]]],[[["initflags",3]]],[[["timerflags",3]]],[[["timersettimeflags",3]]],[[["accessflagsc_int",6]],[["result",6],["signal",4]]],[[["speed_t",6]],[["baudrate",4],["result",6]]],[[["str",15]],[["result",6],["signal",4]]],[[["intoiterator",8]],["atflags",3]],[[["intoiterator",8]],["oflag",3]],[[["intoiterator",8]],["sealflag",3]],[[["intoiterator",8]],["fdflag",3]],[[["intoiterator",8]],["splicefflags",3]],[[["intoiterator",8]],["fallocateflags",3]],[[["intoiterator",8]],["moduleinitflags",3]],[[["intoiterator",8]],["deletemoduleflags",3]],[[["intoiterator",8]],["msflags",3]],[[["intoiterator",8]],["mntflags",3]],[[["intoiterator",8]],["mq_oflag",3]],[[["intoiterator",8]],["fdflag",3]],[[["intoiterator",8]],["interfaceflags",3]],[[["intoiterator",8]],["pollflags",3]],[[["intoiterator",8]],["cloneflags",3]],[[["intoiterator",8]],["epollflags",3]],[[["intoiterator",8]],["epollcreateflags",3]],[[["intoiterator",8]],["efdflags",3]],[[["intoiterator",8]],["memfdcreateflag",3]],[[["intoiterator",8]],["protflags",3]],[[["intoiterator",8]],["mapflags",3]],[[["intoiterator",8]],["mremapflags",3]],[[["intoiterator",8]],["msflags",3]],[[["intoiterator",8]],["mlockallflags",3]],[[["intoiterator",8]],["persona",3]],[[["intoiterator",8]],["options",3]],[[["intoiterator",8]],["quotavalidflags",3]],[[["intoiterator",8]],["saflags",3]],[[["intoiterator",8]],["sfdflags",3]],[[["intoiterator",8]],["sockflag",3]],[[["intoiterator",8]],["msgflags",3]],[[["intoiterator",8]],["sflag",3]],[[["intoiterator",8]],["mode",3]],[[["intoiterator",8]],["fsflags",3]],[[["intoiterator",8]],["inputflags",3]],[[["intoiterator",8]],["outputflags",3]],[[["intoiterator",8]],["controlflags",3]],[[["intoiterator",8]],["localflags",3]],[[["intoiterator",8]],["waitpidflag",3]],[[["intoiterator",8]],["addwatchflags",3]],[[["intoiterator",8]],["initflags",3]],[[["intoiterator",8]],["timerflags",3]],[[["intoiterator",8]],["timersettimeflags",3]],[[["intoiterator",8]],["accessflags",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["usize",15],["result",6]]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[],["rawfd",6]],[[["rawfd",6]]],[[["rawfd",6]]],[[],["rawfd",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cloneflags",3]],[[],["cloneflags",3]],[[],["c_int",6]],[[["c_int",6]],[["cloneflags",3],["option",4]]],[[["c_int",6]],["cloneflags",3]],[[["c_int",6]],["cloneflags",3]],[[],["bool",15]],[[],["bool",15]],[[["cloneflags",3]],["bool",15]],[[["cloneflags",3]],["bool",15]],[[["cloneflags",3]]],[[["cloneflags",3]]],[[["cloneflags",3]]],[[["cloneflags",3],["bool",15]]],[[],["cpuset",3]],[[["usize",15]],[["bool",15],["result",6]]],[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],[[],["usize",15]],null,null,null,null,null,null,null,null,null,[[],["options",3]],[[],["options",3]],[[],["c_int",6]],[[["c_int",6]],[["option",4],["options",3]]],[[["c_int",6]],["options",3]],[[["c_int",6]],["options",3]],[[],["bool",15]],[[],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]]],[[["options",3]]],[[["options",3]]],[[["bool",15],["options",3]]],[[["sigevnotify",4]],["sigevent",3]],[[],["sigevent",3]],[[["u32",15]],["netlinkaddr",3]],[[],["u32",15]],[[],["u32",15]],[[["str",15]],["algaddr",3]],[[],["cstr",3]],[[],["cstr",3]],[[],["addressfamily",4]],[[],["u16",15]],[[],["usize",15]],[[],["u16",15]],[[],["u8",15]],[[],["usize",15]],[[]],[[["u32",15]],["vsockaddr",3]],[[],["u32",15]],[[],["u32",15]],[[["i32",15]],[["addressfamily",4],["option",4]]],[[["socketaddr",4]],["inetaddr",4]],[[["u16",15],["ipaddr",4]],["inetaddr",4]],[[],["ipaddr",4]],[[],["u16",15]],[[],["socketaddr",4]],[[],["string",3]],[[["u8",15]],["ipaddr",4]],[[["u16",15]],["ipaddr",4]],[[["ipaddr",4]],["ipaddr",4]],[[],["ipaddr",4]],[[["u8",15]],["ipv4addr",3]],[[["ipv4addr",3]],["ipv4addr",3]],[[],["ipv4addr",3]],[[]],[[],["ipv4addr",3]],[[["u16",15]],["ipv6addr",3]],[[["ipv6addr",3]],["ipv6addr",3]],[[]],[[],["ipv6addr",3]],[[],[["result",6],["unixaddr",3]]],[[],[["result",6],["unixaddr",3]]],[[],[["path",3],["option",4]]],[[],["option",4]],[[["inetaddr",4]],["sockaddr",4]],[[],[["sockaddr",4],["result",6]]],[[["u32",15]],["sockaddr",4]],[[["str",15]],["sockaddr",4]],[[["u32",15]],["sockaddr",4]],[[],["addressfamily",4]],[[],["string",3]],[[]]],"p":[[3,"Dir"],[4,"Type"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"PosixFadviseAdvice"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[3,"LioCb"],[3,"EpollFlags"],[4,"EpollOp"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MRemapFlags"],[4,"MmapAdvise"],[3,"MsFlags"],[3,"MlockAllFlags"],[3,"Persona"],[4,"Request"],[4,"Event"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[3,"SaFlags"],[4,"SigmaskHow"],[3,"SigSet"],[4,"SigHandler"],[3,"SigAction"],[4,"SigevNotify"],[13,"SigevSignal"],[13,"SigevThreadId"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[3,"UnixAddr"],[4,"IpAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"AlgAddr"],[3,"VsockAddr"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[4,"SockType"],[4,"SockProtocol"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"RecvMsg"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[3,"SendMmsgData"],[3,"RecvMmsgData"],[8,"GetSockOpt"],[8,"SetSockOpt"],[4,"Shutdown"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"FsType"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[3,"WaitPidFlag"],[4,"WaitStatus"],[3,"AddWatchFlags"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Inotify"],[4,"ClockId"],[3,"TimerFlags"],[3,"TimerSetTimeFlags"],[4,"Expiration"],[3,"TimerFd"],[3,"ClockId"],[3,"UContext"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[4,"ForkResult"],[13,"Parent"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"AccessFlags"],[3,"User"],[3,"Group"],[4,"Error"],[8,"NixPath"],[3,"Iter"],[3,"OwningIter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"Options"],[3,"Fds"],[3,"SigEvent"],[3,"SignalIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"TcpKeepCount"],[3,"TcpKeepInterval"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"CmsgIterator"],[3,"WatchDescriptor"],[6,"SessionId"]]},\
"object":{"doc":"<code>object</code>","t":[0,8,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,3,3,6,6,6,6,6,6,6,3,11,11,11,3,11,11,11,3,11,11,11,3,11,11,11,3,11,11,11,3,11,11,11,0,8,5,5,5,3,12,11,11,11,11,11,11,11,11,11,11,11,8,10,10,10,10,10,0,0,4,13,13,13,13,3,11,11,11,3,3,11,11,11,11,11,11,11,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,6,6,3,8,16,16,16,16,16,16,16,16,16,16,16,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,3,6,6,3,8,16,16,16,10,10,10,10,10,10,10,10,11,11,11,11,11,11,3,6,6,3,6,6,3,8,16,16,16,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,3,6,6,3,6,6,3,6,6,3,8,16,16,10,10,10,10,10,10,10,10,10,11,11,11,3,6,6,3,6,6,3,8,16,16,16,10,10,10,10,8,16,16,16,10,10,10,10,10,6,6,3,6,6,3,6,6,3,8,16,16,10,10,8,16,16,10,10,10,3,3,8,16,10,10,10,0,8,16,10,10,10,10,10,11,11,6,6,3,6,6,3,6,6,3,6,6,3,8,16,16,16,16,16,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,6,6,3,6,6,3,8,16,16,16,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,6,6,3,6,6,3,8,16,16,10,10,10,10,10,10,10,10,10,11,11,11,11,11,3,6,6,3,6,6,3,6,6,3,8,16,16,10,10,10,10,10,11,11,11,6,6,3,0,6,6,3,6,6,3,6,6,3,6,6,3,8,16,10,10,10,10,10,11,11,11,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,6,3,6,6,3,6,6,3,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,16,16,16,16,16,16,16,16,16,16,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,11,11,11,10,8,10,10,10,10,10,10,10,8,16,10,10,10,10,10,10,10,10,11,10,10,10,10,10,8,16,10,10,10,10,8,16,16,10,10,8,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,3,3,6,6,4,13,13,13,13,13,13,13,13,13,13,11,3,12,3,12,4,13,13,13,13,13,13,11,8,10,3,11,11,11,3,11,11,11,3,11,11,11,3,11,11,11,11,11,3,11,11,3,11,11,4,13,13,13,3,11,11,11,11,11,11,11,3,12,12,12,4,13,13,13,11,11,0,17,17,17,3,12,12,12,12,12,12,12,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,3,12,12,12,12,17,17,17,17,17,17,3,12,12,12,12,12,12,11,11,11,11,3,12,12,12,12,12,12,11,11,11,11,3,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,11,11,11,11,3,12,12,12,11,11,11,11,3,12,12,11,11,11,11,3,12,12,12,11,11,11,11,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,3,12,12,12,7,17,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,17,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,3,12,12,12,12,12,17,17,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,17,17,3,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,12,3,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,17,17,17,17,17,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,11,11,11,3,12,12,12,12,12,12,11,17,17,3,12,12,12,12,12,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,3,12,12,12,3,12,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,6,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,17,3,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,17,3,12,3,12,12,12,12,12,12,17,3,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,3,12,12,12,12,17,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,3,12,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,17,3,12,12,12,12,12,12,12,12,12,12,12,3,12,17,17,3,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,17,3,12,12,12,12,12,12,17,17,3,12,12,3,12,3,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,3,12,12,3,12,12,12,12,12,3,12,12,12,12,12,17,17,17,17,17,3,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,3,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,12,12,12,12,12,12,12,17,17,17,17,17,3,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,17,17,17,17,17,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,17,17,17,17,3,12,12,17,3,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,12,12,13,4,13,13,13,13,13,13,4,13,13,12,13,12,13,12,4,13,13,12,13,12,13,12,4,13,13,12,12,13,12,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["endian","Endian","from_big_endian","from_little_endian","is_big_endian","is_little_endian","read_u16","read_u32","read_u64","read_i16","read_i32","read_i64","read_u16_bytes","read_u32_bytes","read_u64_bytes","read_i16_bytes","read_i32_bytes","read_i64_bytes","write_u16","write_u32","write_u64","write_i16","write_i32","write_i64","write_u16_bytes","write_u32_bytes","write_u64_bytes","write_i16_bytes","write_i32_bytes","write_i64_bytes","Endianness","Little","Big","LittleEndian","BigEndian","NativeEndian","U16","U32","U64","I16","I32","I64","U16Bytes","new","get","set","U32Bytes","new","get","set","U64Bytes","new","get","set","I16Bytes","new","get","set","I32Bytes","new","get","set","I64Bytes","new","get","set","pod","Pod","from_bytes","slice_from_bytes","bytes_of","Bytes","0","len","is_empty","skip","read_bytes","read_bytes_at","read","read_at","read_slice","read_slice_at","read_string","read_string_at","WritableBuffer","len","is_empty","reserve","resize","extend","read","archive","ArchiveKind","Unknown","Gnu","Bsd","Coff","ArchiveFile","parse","kind","members","ArchiveMemberIterator","ArchiveMember","header","name","date","uid","gid","mode","data","coff","CoffFile","SectionTable","CoffSegmentIterator","CoffSegment","CoffSectionIterator","CoffSection","SymbolTable","CoffSymbolTable","CoffSymbolIterator","CoffSymbol","CoffRelocationIterator","CoffComdatIterator","CoffComdat","CoffComdatSectionIterator","elf","ElfFile32","ElfFile64","ElfFile","FileHeader","Word","Sword","Endian","ProgramHeader","SectionHeader","CompressionHeader","NoteHeader","Dyn","Sym","Rel","Rela","is_type_64","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","parse","is_supported","is_class_32","is_class_64","is_little_endian","is_big_endian","endian","section_0","phnum","shnum","shstrndx","program_headers","section_headers","section_strings","sections","ElfSegmentIterator32","ElfSegmentIterator64","ElfSegmentIterator","ElfSegment32","ElfSegment64","ElfSegment","ProgramHeader","Elf","Word","Endian","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","file_range","data","data_as_array","data_range","dynamic","notes","SectionTable","ElfSectionIterator32","ElfSectionIterator64","ElfSectionIterator","ElfSection32","ElfSection64","ElfSection","SectionHeader","Elf","Word","Endian","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","name","file_range","data","data_as_array","symbols","rel","rela","relocation_symbols","notes","group","SymbolTable","ElfSymbolTable32","ElfSymbolTable64","ElfSymbolTable","ElfSymbolIterator32","ElfSymbolIterator64","ElfSymbolIterator","ElfSymbol32","ElfSymbol64","ElfSymbol","Sym","Word","Endian","st_name","st_info","st_bind","st_type","st_other","st_visibility","st_shndx","st_value","st_size","name","is_undefined","is_definition","RelocationSections","ElfDynamicRelocationIterator32","ElfDynamicRelocationIterator64","ElfDynamicRelocationIterator","ElfSectionRelocationIterator32","ElfSectionRelocationIterator64","ElfSectionRelocationIterator","Rel","Word","Sword","Endian","r_offset","r_info","r_sym","r_type","Rela","Word","Sword","Endian","r_offset","r_info","r_addend","r_sym","r_type","ElfComdatIterator32","ElfComdatIterator64","ElfComdatIterator","ElfComdat32","ElfComdat64","ElfComdat","ElfComdatSectionIterator32","ElfComdatSectionIterator64","ElfComdatSectionIterator","Dyn","Word","Endian","d_tag","d_val","CompressionHeader","Word","Endian","ch_type","ch_size","ch_addralign","NoteIterator","Note","NoteHeader","Endian","n_namesz","n_descsz","n_type","macho","FatArch","Word","cputype","cpusubtype","offset","size","align","architecture","data","MachOFile32","MachOFile64","MachOFile","MachOComdatIterator32","MachOComdatIterator64","MachOComdatIterator","MachOComdat32","MachOComdat64","MachOComdat","MachOComdatSectionIterator32","MachOComdatSectionIterator64","MachOComdatSectionIterator","MachHeader","Word","Endian","Segment","Section","Nlist","is_type_64","is_big_endian","is_little_endian","magic","cputype","cpusubtype","filetype","ncmds","sizeofcmds","flags","parse","is_supported","endian","load_commands","uuid","MachOSegmentIterator32","MachOSegmentIterator64","MachOSegmentIterator","MachOSegment32","MachOSegment64","MachOSegment","Segment","Word","Endian","Section","from_command","cmd","cmdsize","segname","vmaddr","vmsize","fileoff","filesize","maxprot","initprot","nsects","flags","name","file_range","data","sections","MachOSectionIterator32","MachOSectionIterator64","MachOSectionIterator","MachOSection32","MachOSection64","MachOSection","Section","Word","Endian","sectname","segname","addr","size","offset","align","reloff","nreloc","flags","name","segment_name","file_range","data","relocations","SymbolTable","MachOSymbolTable32","MachOSymbolTable64","MachOSymbolTable","MachOSymbolIterator32","MachOSymbolIterator64","MachOSymbolIterator","MachOSymbol32","MachOSymbol64","MachOSymbol","Nlist","Word","Endian","n_strx","n_type","n_sect","n_desc","n_value","name","is_definition","library_ordinal","MachORelocationIterator32","MachORelocationIterator64","MachORelocationIterator","pe","PeFile32","PeFile64","PeFile","PeComdatIterator32","PeComdatIterator64","PeComdatIterator","PeComdat32","PeComdat64","PeComdat","PeComdatSectionIterator32","PeComdatSectionIterator64","PeComdatSectionIterator","ImageNtHeaders","ImageOptionalHeader","is_type_64","is_valid_optional_magic","signature","file_header","optional_header","parse","sections","symbols","ImageOptionalHeader","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","PeSegmentIterator32","PeSegmentIterator64","PeSegmentIterator","PeSegment32","PeSegment64","PeSegment","PeSectionIterator32","PeSectionIterator64","PeSectionIterator","PeSection32","PeSection64","PeSection","PeRelocationIterator","SectionTable","SymbolTable","StringTable","File","SegmentIterator","Segment","SectionIterator","Section","ComdatIterator","Comdat","ComdatSectionIterator","SymbolTable","SymbolIterator","Symbol","DynamicRelocationIterator","SectionRelocationIterator","Object","Segment","SegmentIterator","Section","SectionIterator","Comdat","ComdatIterator","Symbol","SymbolIterator","SymbolTable","DynamicRelocationIterator","architecture","endianness","is_little_endian","is_64","segments","entry","section_by_name","section_by_index","sections","comdats","symbol_table","symbol_by_index","symbols","dynamic_symbol_table","dynamic_symbols","dynamic_relocations","symbol_map","object_map","imports","exports","has_debug_symbols","mach_uuid","build_id","gnu_debuglink","flags","ObjectSegment","address","size","align","file_range","data","data_range","name","ObjectSection","RelocationIterator","index","address","size","align","file_range","data","data_range","compressed_data","uncompressed_data","name","segment_name","kind","relocations","flags","ObjectComdat","SectionIterator","kind","symbol","name","sections","ObjectSymbolTable","Symbol","SymbolIterator","symbols","symbol_by_index","ObjectSymbol","index","name","address","size","kind","section","section_index","is_undefined","is_definition","is_common","is_weak","scope","is_global","is_local","flags","NoDynamicRelocationIterator","Error","Result","NativeFile","FileKind","Archive","Coff","Elf32","Elf64","MachO32","MachO64","MachOFat32","MachOFat64","Pe32","Pe64","parse","SectionIndex","0","SymbolIndex","0","SymbolSection","Unknown","None","Undefined","Absolute","Common","Section","index","SymbolMapEntry","address","SymbolMap","new","get","symbols","SymbolMapName","new","address","name","ObjectMap","get","symbols","objects","ObjectMapEntry","address","size","name","object_index","object","Import","name","library","Export","name","address","RelocationTarget","Symbol","Section","Absolute","Relocation","kind","encoding","size","target","addend","set_addend","has_implicit_addend","CompressedData","format","data","uncompressed_size","CompressionFormat","None","Unknown","Zlib","none","decompress","archive","MAGIC","THIN_MAGIC","TERMINATOR","Header","name","date","uid","gid","mode","size","terminator","elf","FileHeader32","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","FileHeader64","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","Ident","magic","class","data","version","os_abi","abi_version","padding","ELFMAG","ELFCLASSNONE","ELFCLASS32","ELFCLASS64","ELFDATANONE","ELFDATA2LSB","ELFDATA2MSB","ELFOSABI_NONE","ELFOSABI_SYSV","ELFOSABI_HPUX","ELFOSABI_NETBSD","ELFOSABI_GNU","ELFOSABI_LINUX","ELFOSABI_SOLARIS","ELFOSABI_AIX","ELFOSABI_IRIX","ELFOSABI_FREEBSD","ELFOSABI_TRU64","ELFOSABI_MODESTO","ELFOSABI_OPENBSD","ELFOSABI_ARM_AEABI","ELFOSABI_ARM","ELFOSABI_STANDALONE","ET_NONE","ET_REL","ET_EXEC","ET_DYN","ET_CORE","ET_LOOS","ET_HIOS","ET_LOPROC","ET_HIPROC","EM_NONE","EM_M32","EM_SPARC","EM_386","EM_68K","EM_88K","EM_IAMCU","EM_860","EM_MIPS","EM_S370","EM_MIPS_RS3_LE","EM_PARISC","EM_VPP500","EM_SPARC32PLUS","EM_960","EM_PPC","EM_PPC64","EM_S390","EM_SPU","EM_V800","EM_FR20","EM_RH32","EM_RCE","EM_ARM","EM_FAKE_ALPHA","EM_SH","EM_SPARCV9","EM_TRICORE","EM_ARC","EM_H8_300","EM_H8_300H","EM_H8S","EM_H8_500","EM_IA_64","EM_MIPS_X","EM_COLDFIRE","EM_68HC12","EM_MMA","EM_PCP","EM_NCPU","EM_NDR1","EM_STARCORE","EM_ME16","EM_ST100","EM_TINYJ","EM_X86_64","EM_PDSP","EM_PDP10","EM_PDP11","EM_FX66","EM_ST9PLUS","EM_ST7","EM_68HC16","EM_68HC11","EM_68HC08","EM_68HC05","EM_SVX","EM_ST19","EM_VAX","EM_CRIS","EM_JAVELIN","EM_FIREPATH","EM_ZSP","EM_MMIX","EM_HUANY","EM_PRISM","EM_AVR","EM_FR30","EM_D10V","EM_D30V","EM_V850","EM_M32R","EM_MN10300","EM_MN10200","EM_PJ","EM_OPENRISC","EM_ARC_COMPACT","EM_XTENSA","EM_VIDEOCORE","EM_TMM_GPP","EM_NS32K","EM_TPC","EM_SNP1K","EM_ST200","EM_IP2K","EM_MAX","EM_CR","EM_F2MC16","EM_MSP430","EM_BLACKFIN","EM_SE_C33","EM_SEP","EM_ARCA","EM_UNICORE","EM_EXCESS","EM_DXP","EM_ALTERA_NIOS2","EM_CRX","EM_XGATE","EM_C166","EM_M16C","EM_DSPIC30F","EM_CE","EM_M32C","EM_TSK3000","EM_RS08","EM_SHARC","EM_ECOG2","EM_SCORE7","EM_DSP24","EM_VIDEOCORE3","EM_LATTICEMICO32","EM_SE_C17","EM_TI_C6000","EM_TI_C2000","EM_TI_C5500","EM_TI_ARP32","EM_TI_PRU","EM_MMDSP_PLUS","EM_CYPRESS_M8C","EM_R32C","EM_TRIMEDIA","EM_QDSP6","EM_8051","EM_STXP7X","EM_NDS32","EM_ECOG1X","EM_MAXQ30","EM_XIMO16","EM_MANIK","EM_CRAYNV2","EM_RX","EM_METAG","EM_MCST_ELBRUS","EM_ECOG16","EM_CR16","EM_ETPU","EM_SLE9X","EM_L10M","EM_K10M","EM_AARCH64","EM_AVR32","EM_STM8","EM_TILE64","EM_TILEPRO","EM_MICROBLAZE","EM_CUDA","EM_TILEGX","EM_CLOUDSHIELD","EM_COREA_1ST","EM_COREA_2ND","EM_ARC_COMPACT2","EM_OPEN8","EM_RL78","EM_VIDEOCORE5","EM_78KOR","EM_56800EX","EM_BA1","EM_BA2","EM_XCORE","EM_MCHP_PIC","EM_KM32","EM_KMX32","EM_EMX16","EM_EMX8","EM_KVARC","EM_CDP","EM_COGE","EM_COOL","EM_NORC","EM_CSR_KALIMBA","EM_Z80","EM_VISIUM","EM_FT32","EM_MOXIE","EM_AMDGPU","EM_RISCV","EM_BPF","EM_CSKY","EM_ALPHA","EV_NONE","EV_CURRENT","SectionHeader32","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","SectionHeader64","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","SHN_UNDEF","SHN_LORESERVE","SHN_LOPROC","SHN_HIPROC","SHN_LOOS","SHN_HIOS","SHN_ABS","SHN_COMMON","SHN_XINDEX","SHN_HIRESERVE","SHT_NULL","SHT_PROGBITS","SHT_SYMTAB","SHT_STRTAB","SHT_RELA","SHT_HASH","SHT_DYNAMIC","SHT_NOTE","SHT_NOBITS","SHT_REL","SHT_SHLIB","SHT_DYNSYM","SHT_INIT_ARRAY","SHT_FINI_ARRAY","SHT_PREINIT_ARRAY","SHT_GROUP","SHT_SYMTAB_SHNDX","SHT_LOOS","SHT_HIOS","SHT_LOPROC","SHT_HIPROC","SHT_LOUSER","SHT_HIUSER","SHF_WRITE","SHF_ALLOC","SHF_EXECINSTR","SHF_MERGE","SHF_STRINGS","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_OS_NONCONFORMING","SHF_GROUP","SHF_TLS","SHF_COMPRESSED","SHF_MASKOS","SHF_MASKPROC","CompressionHeader32","ch_type","ch_size","ch_addralign","CompressionHeader64","ch_type","ch_reserved","ch_size","ch_addralign","ELFCOMPRESS_ZLIB","ELFCOMPRESS_LOOS","ELFCOMPRESS_HIOS","ELFCOMPRESS_LOPROC","ELFCOMPRESS_HIPROC","GRP_COMDAT","Sym32","st_name","st_value","st_size","st_info","st_other","st_shndx","st_bind","st_type","set_st_info","st_visibility","Sym64","st_name","st_info","st_other","st_shndx","st_value","st_size","st_bind","st_type","set_st_info","st_visibility","Syminfo32","si_boundto","si_flags","Syminfo64","si_boundto","si_flags","SYMINFO_BT_SELF","SYMINFO_BT_PARENT","SYMINFO_BT_LOWRESERVE","SYMINFO_FLG_DIRECT","SYMINFO_FLG_PASSTHRU","SYMINFO_FLG_COPY","SYMINFO_FLG_LAZYLOAD","SYMINFO_NONE","SYMINFO_CURRENT","SYMINFO_NUM","STB_LOCAL","STB_GLOBAL","STB_WEAK","STB_LOOS","STB_GNU_UNIQUE","STB_HIOS","STB_LOPROC","STB_HIPROC","STT_NOTYPE","STT_OBJECT","STT_FUNC","STT_SECTION","STT_FILE","STT_COMMON","STT_TLS","STT_LOOS","STT_GNU_IFUNC","STT_HIOS","STT_LOPROC","STT_HIPROC","STV_DEFAULT","STV_INTERNAL","STV_HIDDEN","STV_PROTECTED","Rel32","r_offset","r_info","r_sym","r_type","r_info","set_r_info","Rela32","r_offset","r_info","r_addend","r_sym","r_type","r_info","set_r_info","Rel64","r_offset","r_info","r_sym","r_type","r_info","set_r_info","Rela64","r_offset","r_info","r_addend","r_sym","r_type","r_info","set_r_info","ProgramHeader32","p_type","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_flags","p_align","ProgramHeader64","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","PN_XNUM","PT_NULL","PT_LOAD","PT_DYNAMIC","PT_INTERP","PT_NOTE","PT_SHLIB","PT_PHDR","PT_TLS","PT_LOOS","PT_GNU_EH_FRAME","PT_GNU_STACK","PT_GNU_RELRO","PT_HIOS","PT_LOPROC","PT_HIPROC","PF_X","PF_W","PF_R","PF_MASKOS","PF_MASKPROC","ELF_NOTE_CORE","ELF_NOTE_LINUX","NT_PRSTATUS","NT_PRFPREG","NT_FPREGSET","NT_PRPSINFO","NT_PRXREG","NT_TASKSTRUCT","NT_PLATFORM","NT_AUXV","NT_GWINDOWS","NT_ASRS","NT_PSTATUS","NT_PSINFO","NT_PRCRED","NT_UTSNAME","NT_LWPSTATUS","NT_LWPSINFO","NT_PRFPXREG","NT_SIGINFO","NT_FILE","NT_PRXFPREG","NT_PPC_VMX","NT_PPC_SPE","NT_PPC_VSX","NT_PPC_TAR","NT_PPC_PPR","NT_PPC_DSCR","NT_PPC_EBB","NT_PPC_PMU","NT_PPC_TM_CGPR","NT_PPC_TM_CFPR","NT_PPC_TM_CVMX","NT_PPC_TM_CVSX","NT_PPC_TM_SPR","NT_PPC_TM_CTAR","NT_PPC_TM_CPPR","NT_PPC_TM_CDSCR","NT_PPC_PKEY","NT_386_TLS","NT_386_IOPERM","NT_X86_XSTATE","NT_S390_HIGH_GPRS","NT_S390_TIMER","NT_S390_TODCMP","NT_S390_TODPREG","NT_S390_CTRS","NT_S390_PREFIX","NT_S390_LAST_BREAK","NT_S390_SYSTEM_CALL","NT_S390_TDB","NT_S390_VXRS_LOW","NT_S390_VXRS_HIGH","NT_S390_GS_CB","NT_S390_GS_BC","NT_S390_RI_CB","NT_ARM_VFP","NT_ARM_TLS","NT_ARM_HW_BREAK","NT_ARM_HW_WATCH","NT_ARM_SYSTEM_CALL","NT_ARM_SVE","NT_VMCOREDD","NT_MIPS_DSP","NT_MIPS_FP_MODE","NT_VERSION","Dyn32","d_tag","d_val","Dyn64","d_tag","d_val","DT_NULL","DT_NEEDED","DT_PLTRELSZ","DT_PLTGOT","DT_HASH","DT_STRTAB","DT_SYMTAB","DT_RELA","DT_RELASZ","DT_RELAENT","DT_STRSZ","DT_SYMENT","DT_INIT","DT_FINI","DT_SONAME","DT_RPATH","DT_SYMBOLIC","DT_REL","DT_RELSZ","DT_RELENT","DT_PLTREL","DT_DEBUG","DT_TEXTREL","DT_JMPREL","DT_BIND_NOW","DT_INIT_ARRAY","DT_FINI_ARRAY","DT_INIT_ARRAYSZ","DT_FINI_ARRAYSZ","DT_RUNPATH","DT_FLAGS","DT_ENCODING","DT_PREINIT_ARRAY","DT_PREINIT_ARRAYSZ","DT_SYMTAB_SHNDX","DT_LOOS","DT_HIOS","DT_LOPROC","DT_HIPROC","DT_VALRNGLO","DT_GNU_PRELINKED","DT_GNU_CONFLICTSZ","DT_GNU_LIBLISTSZ","DT_CHECKSUM","DT_PLTPADSZ","DT_MOVEENT","DT_MOVESZ","DT_FEATURE_1","DT_POSFLAG_1","DT_SYMINSZ","DT_SYMINENT","DT_VALRNGHI","DT_ADDRRNGLO","DT_GNU_HASH","DT_TLSDESC_PLT","DT_TLSDESC_GOT","DT_GNU_CONFLICT","DT_GNU_LIBLIST","DT_CONFIG","DT_DEPAUDIT","DT_AUDIT","DT_PLTPAD","DT_MOVETAB","DT_SYMINFO","DT_ADDRRNGHI","DT_VERSYM","DT_RELACOUNT","DT_RELCOUNT","DT_FLAGS_1","DT_VERDEF","DT_VERDEFNUM","DT_VERNEED","DT_VERNEEDNUM","DT_AUXILIARY","DT_FILTER","DF_ORIGIN","DF_SYMBOLIC","DF_TEXTREL","DF_BIND_NOW","DF_STATIC_TLS","DF_1_NOW","DF_1_GLOBAL","DF_1_GROUP","DF_1_NODELETE","DF_1_LOADFLTR","DF_1_INITFIRST","DF_1_NOOPEN","DF_1_ORIGIN","DF_1_DIRECT","DF_1_TRANS","DF_1_INTERPOSE","DF_1_NODEFLIB","DF_1_NODUMP","DF_1_CONFALT","DF_1_ENDFILTEE","DF_1_DISPRELDNE","DF_1_DISPRELPND","DF_1_NODIRECT","DF_1_IGNMULDEF","DF_1_NOKSYMS","DF_1_NOHDR","DF_1_EDITED","DF_1_NORELOC","DF_1_SYMINTPOSE","DF_1_GLOBAUDIT","DF_1_SINGLETON","DF_1_STUB","DF_1_PIE","NoteHeader32","n_namesz","n_descsz","n_type","NoteHeader64","n_namesz","n_descsz","n_type","ELF_NOTE_SOLARIS","NT_SOLARIS_PAGESIZE_HINT","ELF_NOTE_GNU","NT_GNU_ABI_TAG","ELF_NOTE_OS_LINUX","ELF_NOTE_OS_GNU","ELF_NOTE_OS_SOLARIS2","ELF_NOTE_OS_FREEBSD","NT_GNU_HWCAP","NT_GNU_BUILD_ID","NT_GNU_GOLD_VERSION","NT_GNU_PROPERTY_TYPE_0","R_68K_NONE","R_68K_32","R_68K_16","R_68K_8","R_68K_PC32","R_68K_PC16","R_68K_PC8","R_68K_GOT32","R_68K_GOT16","R_68K_GOT8","R_68K_GOT32O","R_68K_GOT16O","R_68K_GOT8O","R_68K_PLT32","R_68K_PLT16","R_68K_PLT8","R_68K_PLT32O","R_68K_PLT16O","R_68K_PLT8O","R_68K_COPY","R_68K_GLOB_DAT","R_68K_JMP_SLOT","R_68K_RELATIVE","R_68K_TLS_GD32","R_68K_TLS_GD16","R_68K_TLS_GD8","R_68K_TLS_LDM32","R_68K_TLS_LDM16","R_68K_TLS_LDM8","R_68K_TLS_LDO32","R_68K_TLS_LDO16","R_68K_TLS_LDO8","R_68K_TLS_IE32","R_68K_TLS_IE16","R_68K_TLS_IE8","R_68K_TLS_LE32","R_68K_TLS_LE16","R_68K_TLS_LE8","R_68K_TLS_DTPMOD32","R_68K_TLS_DTPREL32","R_68K_TLS_TPREL32","R_386_NONE","R_386_32","R_386_PC32","R_386_GOT32","R_386_PLT32","R_386_COPY","R_386_GLOB_DAT","R_386_JMP_SLOT","R_386_RELATIVE","R_386_GOTOFF","R_386_GOTPC","R_386_32PLT","R_386_TLS_TPOFF","R_386_TLS_IE","R_386_TLS_GOTIE","R_386_TLS_LE","R_386_TLS_GD","R_386_TLS_LDM","R_386_16","R_386_PC16","R_386_8","R_386_PC8","R_386_TLS_GD_32","R_386_TLS_GD_PUSH","R_386_TLS_GD_CALL","R_386_TLS_GD_POP","R_386_TLS_LDM_32","R_386_TLS_LDM_PUSH","R_386_TLS_LDM_CALL","R_386_TLS_LDM_POP","R_386_TLS_LDO_32","R_386_TLS_IE_32","R_386_TLS_LE_32","R_386_TLS_DTPMOD32","R_386_TLS_DTPOFF32","R_386_TLS_TPOFF32","R_386_SIZE32","R_386_TLS_GOTDESC","R_386_TLS_DESC_CALL","R_386_TLS_DESC","R_386_IRELATIVE","R_386_GOT32X","STT_SPARC_REGISTER","EF_SPARCV9_MM","EF_SPARCV9_TSO","EF_SPARCV9_PSO","EF_SPARCV9_RMO","EF_SPARC_LEDATA","EF_SPARC_EXT_MASK","EF_SPARC_32PLUS","EF_SPARC_SUN_US1","EF_SPARC_HAL_R1","EF_SPARC_SUN_US3","R_SPARC_NONE","R_SPARC_8","R_SPARC_16","R_SPARC_32","R_SPARC_DISP8","R_SPARC_DISP16","R_SPARC_DISP32","R_SPARC_WDISP30","R_SPARC_WDISP22","R_SPARC_HI22","R_SPARC_22","R_SPARC_13","R_SPARC_LO10","R_SPARC_GOT10","R_SPARC_GOT13","R_SPARC_GOT22","R_SPARC_PC10","R_SPARC_PC22","R_SPARC_WPLT30","R_SPARC_COPY","R_SPARC_GLOB_DAT","R_SPARC_JMP_SLOT","R_SPARC_RELATIVE","R_SPARC_UA32","R_SPARC_PLT32","R_SPARC_HIPLT22","R_SPARC_LOPLT10","R_SPARC_PCPLT32","R_SPARC_PCPLT22","R_SPARC_PCPLT10","R_SPARC_10","R_SPARC_11","R_SPARC_64","R_SPARC_OLO10","R_SPARC_HH22","R_SPARC_HM10","R_SPARC_LM22","R_SPARC_PC_HH22","R_SPARC_PC_HM10","R_SPARC_PC_LM22","R_SPARC_WDISP16","R_SPARC_WDISP19","R_SPARC_GLOB_JMP","R_SPARC_7","R_SPARC_5","R_SPARC_6","R_SPARC_DISP64","R_SPARC_PLT64","R_SPARC_HIX22","R_SPARC_LOX10","R_SPARC_H44","R_SPARC_M44","R_SPARC_L44","R_SPARC_REGISTER","R_SPARC_UA64","R_SPARC_UA16","R_SPARC_TLS_GD_HI22","R_SPARC_TLS_GD_LO10","R_SPARC_TLS_GD_ADD","R_SPARC_TLS_GD_CALL","R_SPARC_TLS_LDM_HI22","R_SPARC_TLS_LDM_LO10","R_SPARC_TLS_LDM_ADD","R_SPARC_TLS_LDM_CALL","R_SPARC_TLS_LDO_HIX22","R_SPARC_TLS_LDO_LOX10","R_SPARC_TLS_LDO_ADD","R_SPARC_TLS_IE_HI22","R_SPARC_TLS_IE_LO10","R_SPARC_TLS_IE_LD","R_SPARC_TLS_IE_LDX","R_SPARC_TLS_IE_ADD","R_SPARC_TLS_LE_HIX22","R_SPARC_TLS_LE_LOX10","R_SPARC_TLS_DTPMOD32","R_SPARC_TLS_DTPMOD64","R_SPARC_TLS_DTPOFF32","R_SPARC_TLS_DTPOFF64","R_SPARC_TLS_TPOFF32","R_SPARC_TLS_TPOFF64","R_SPARC_GOTDATA_HIX22","R_SPARC_GOTDATA_LOX10","R_SPARC_GOTDATA_OP_HIX22","R_SPARC_GOTDATA_OP_LOX10","R_SPARC_GOTDATA_OP","R_SPARC_H34","R_SPARC_SIZE32","R_SPARC_SIZE64","R_SPARC_WDISP10","R_SPARC_JMP_IREL","R_SPARC_IRELATIVE","R_SPARC_GNU_VTINHERIT","R_SPARC_GNU_VTENTRY","R_SPARC_REV32","DT_SPARC_REGISTER","EF_MIPS_NOREORDER","EF_MIPS_PIC","EF_MIPS_CPIC","EF_MIPS_XGOT","EF_MIPS_64BIT_WHIRL","EF_MIPS_ABI2","EF_MIPS_ABI_ON32","EF_MIPS_FP64","EF_MIPS_NAN2008","EF_MIPS_ARCH","EF_MIPS_ARCH_1","EF_MIPS_ARCH_2","EF_MIPS_ARCH_3","EF_MIPS_ARCH_4","EF_MIPS_ARCH_5","EF_MIPS_ARCH_32","EF_MIPS_ARCH_64","EF_MIPS_ARCH_32R2","EF_MIPS_ARCH_64R2","SHN_MIPS_ACOMMON","SHN_MIPS_TEXT","SHN_MIPS_DATA","SHN_MIPS_SCOMMON","SHN_MIPS_SUNDEFINED","SHT_MIPS_LIBLIST","SHT_MIPS_MSYM","SHT_MIPS_CONFLICT","SHT_MIPS_GPTAB","SHT_MIPS_UCODE","SHT_MIPS_DEBUG","SHT_MIPS_REGINFO","SHT_MIPS_PACKAGE","SHT_MIPS_PACKSYM","SHT_MIPS_RELD","SHT_MIPS_IFACE","SHT_MIPS_CONTENT","SHT_MIPS_OPTIONS","SHT_MIPS_SHDR","SHT_MIPS_FDESC","SHT_MIPS_EXTSYM","SHT_MIPS_DENSE","SHT_MIPS_PDESC","SHT_MIPS_LOCSYM","SHT_MIPS_AUXSYM","SHT_MIPS_OPTSYM","SHT_MIPS_LOCSTR","SHT_MIPS_LINE","SHT_MIPS_RFDESC","SHT_MIPS_DELTASYM","SHT_MIPS_DELTAINST","SHT_MIPS_DELTACLASS","SHT_MIPS_DWARF","SHT_MIPS_DELTADECL","SHT_MIPS_SYMBOL_LIB","SHT_MIPS_EVENTS","SHT_MIPS_TRANSLATE","SHT_MIPS_PIXIE","SHT_MIPS_XLATE","SHT_MIPS_XLATE_DEBUG","SHT_MIPS_WHIRL","SHT_MIPS_EH_REGION","SHT_MIPS_XLATE_OLD","SHT_MIPS_PDR_EXCEPTION","SHF_MIPS_GPREL","SHF_MIPS_MERGE","SHF_MIPS_ADDR","SHF_MIPS_STRINGS","SHF_MIPS_NOSTRIP","SHF_MIPS_LOCAL","SHF_MIPS_NAMES","SHF_MIPS_NODUPE","STO_MIPS_PLT","STO_MIPS_SC_ALIGN_UNUSED","STB_MIPS_SPLIT_COMMON","ODK_NULL","ODK_REGINFO","ODK_EXCEPTIONS","ODK_PAD","ODK_HWPATCH","ODK_FILL","ODK_TAGS","ODK_HWAND","ODK_HWOR","OEX_FPU_MIN","OEX_FPU_MAX","OEX_PAGE0","OEX_SMM","OEX_FPDBUG","OEX_PRECISEFP","OEX_DISMISS","OEX_FPU_INVAL","OEX_FPU_DIV0","OEX_FPU_OFLO","OEX_FPU_UFLO","OEX_FPU_INEX","OHW_R4KEOP","OHW_R8KPFETCH","OHW_R5KEOP","OHW_R5KCVTL","OPAD_PREFIX","OPAD_POSTFIX","OPAD_SYMBOL","OHWA0_R4KEOP_CHECKED","OHWA1_R4KEOP_CLEAN","R_MIPS_NONE","R_MIPS_16","R_MIPS_32","R_MIPS_REL32","R_MIPS_26","R_MIPS_HI16","R_MIPS_LO16","R_MIPS_GPREL16","R_MIPS_LITERAL","R_MIPS_GOT16","R_MIPS_PC16","R_MIPS_CALL16","R_MIPS_GPREL32","R_MIPS_SHIFT5","R_MIPS_SHIFT6","R_MIPS_64","R_MIPS_GOT_DISP","R_MIPS_GOT_PAGE","R_MIPS_GOT_OFST","R_MIPS_GOT_HI16","R_MIPS_GOT_LO16","R_MIPS_SUB","R_MIPS_INSERT_A","R_MIPS_INSERT_B","R_MIPS_DELETE","R_MIPS_HIGHER","R_MIPS_HIGHEST","R_MIPS_CALL_HI16","R_MIPS_CALL_LO16","R_MIPS_SCN_DISP","R_MIPS_REL16","R_MIPS_ADD_IMMEDIATE","R_MIPS_PJUMP","R_MIPS_RELGOT","R_MIPS_JALR","R_MIPS_TLS_DTPMOD32","R_MIPS_TLS_DTPREL32","R_MIPS_TLS_DTPMOD64","R_MIPS_TLS_DTPREL64","R_MIPS_TLS_GD","R_MIPS_TLS_LDM","R_MIPS_TLS_DTPREL_HI16","R_MIPS_TLS_DTPREL_LO16","R_MIPS_TLS_GOTTPREL","R_MIPS_TLS_TPREL32","R_MIPS_TLS_TPREL64","R_MIPS_TLS_TPREL_HI16","R_MIPS_TLS_TPREL_LO16","R_MIPS_GLOB_DAT","R_MIPS_COPY","R_MIPS_JUMP_SLOT","PT_MIPS_REGINFO","PT_MIPS_RTPROC","PT_MIPS_OPTIONS","PT_MIPS_ABIFLAGS","PF_MIPS_LOCAL","DT_MIPS_RLD_VERSION","DT_MIPS_TIME_STAMP","DT_MIPS_ICHECKSUM","DT_MIPS_IVERSION","DT_MIPS_FLAGS","DT_MIPS_BASE_ADDRESS","DT_MIPS_MSYM","DT_MIPS_CONFLICT","DT_MIPS_LIBLIST","DT_MIPS_LOCAL_GOTNO","DT_MIPS_CONFLICTNO","DT_MIPS_LIBLISTNO","DT_MIPS_SYMTABNO","DT_MIPS_UNREFEXTNO","DT_MIPS_GOTSYM","DT_MIPS_HIPAGENO","DT_MIPS_RLD_MAP","DT_MIPS_DELTA_CLASS","DT_MIPS_DELTA_CLASS_NO","DT_MIPS_DELTA_INSTANCE","DT_MIPS_DELTA_INSTANCE_NO","DT_MIPS_DELTA_RELOC","DT_MIPS_DELTA_RELOC_NO","DT_MIPS_DELTA_SYM","DT_MIPS_DELTA_SYM_NO","DT_MIPS_DELTA_CLASSSYM","DT_MIPS_DELTA_CLASSSYM_NO","DT_MIPS_CXX_FLAGS","DT_MIPS_PIXIE_INIT","DT_MIPS_SYMBOL_LIB","DT_MIPS_LOCALPAGE_GOTIDX","DT_MIPS_LOCAL_GOTIDX","DT_MIPS_HIDDEN_GOTIDX","DT_MIPS_PROTECTED_GOTIDX","DT_MIPS_OPTIONS","DT_MIPS_INTERFACE","DT_MIPS_DYNSTR_ALIGN","DT_MIPS_INTERFACE_SIZE","DT_MIPS_RLD_TEXT_RESOLVE_ADDR","DT_MIPS_PERF_SUFFIX","DT_MIPS_COMPACT_SIZE","DT_MIPS_GP_VALUE","DT_MIPS_AUX_DYNAMIC","DT_MIPS_PLTGOT","DT_MIPS_RWPLT","DT_MIPS_RLD_MAP_REL","RHF_NONE","RHF_QUICKSTART","RHF_NOTPOT","RHF_NO_LIBRARY_REPLACEMENT","RHF_NO_MOVE","RHF_SGI_ONLY","RHF_GUARANTEE_INIT","RHF_DELTA_C_PLUS_PLUS","RHF_GUARANTEE_START_INIT","RHF_PIXIE","RHF_DEFAULT_DELAY_LOAD","RHF_REQUICKSTART","RHF_REQUICKSTARTED","RHF_CORD","RHF_NO_UNRES_UNDEF","RHF_RLD_ORDER_SAFE","LL_NONE","LL_EXACT_MATCH","LL_IGNORE_INT_VER","LL_REQUIRE_MINOR","LL_EXPORTS","LL_DELAY_LOAD","LL_DELTA","EF_PARISC_TRAPNIL","EF_PARISC_EXT","EF_PARISC_LSB","EF_PARISC_WIDE","EF_PARISC_NO_KABP","EF_PARISC_LAZYSWAP","EF_PARISC_ARCH","EFA_PARISC_1_0","EFA_PARISC_1_1","EFA_PARISC_2_0","SHN_PARISC_ANSI_COMMON","SHN_PARISC_HUGE_COMMON","SHT_PARISC_EXT","SHT_PARISC_UNWIND","SHT_PARISC_DOC","SHF_PARISC_SHORT","SHF_PARISC_HUGE","SHF_PARISC_SBP","STT_PARISC_MILLICODE","STT_HP_OPAQUE","STT_HP_STUB","R_PARISC_NONE","R_PARISC_DIR32","R_PARISC_DIR21L","R_PARISC_DIR17R","R_PARISC_DIR17F","R_PARISC_DIR14R","R_PARISC_PCREL32","R_PARISC_PCREL21L","R_PARISC_PCREL17R","R_PARISC_PCREL17F","R_PARISC_PCREL14R","R_PARISC_DPREL21L","R_PARISC_DPREL14R","R_PARISC_GPREL21L","R_PARISC_GPREL14R","R_PARISC_LTOFF21L","R_PARISC_LTOFF14R","R_PARISC_SECREL32","R_PARISC_SEGBASE","R_PARISC_SEGREL32","R_PARISC_PLTOFF21L","R_PARISC_PLTOFF14R","R_PARISC_LTOFF_FPTR32","R_PARISC_LTOFF_FPTR21L","R_PARISC_LTOFF_FPTR14R","R_PARISC_FPTR64","R_PARISC_PLABEL32","R_PARISC_PLABEL21L","R_PARISC_PLABEL14R","R_PARISC_PCREL64","R_PARISC_PCREL22F","R_PARISC_PCREL14WR","R_PARISC_PCREL14DR","R_PARISC_PCREL16F","R_PARISC_PCREL16WF","R_PARISC_PCREL16DF","R_PARISC_DIR64","R_PARISC_DIR14WR","R_PARISC_DIR14DR","R_PARISC_DIR16F","R_PARISC_DIR16WF","R_PARISC_DIR16DF","R_PARISC_GPREL64","R_PARISC_GPREL14WR","R_PARISC_GPREL14DR","R_PARISC_GPREL16F","R_PARISC_GPREL16WF","R_PARISC_GPREL16DF","R_PARISC_LTOFF64","R_PARISC_LTOFF14WR","R_PARISC_LTOFF14DR","R_PARISC_LTOFF16F","R_PARISC_LTOFF16WF","R_PARISC_LTOFF16DF","R_PARISC_SECREL64","R_PARISC_SEGREL64","R_PARISC_PLTOFF14WR","R_PARISC_PLTOFF14DR","R_PARISC_PLTOFF16F","R_PARISC_PLTOFF16WF","R_PARISC_PLTOFF16DF","R_PARISC_LTOFF_FPTR64","R_PARISC_LTOFF_FPTR14WR","R_PARISC_LTOFF_FPTR14DR","R_PARISC_LTOFF_FPTR16F","R_PARISC_LTOFF_FPTR16WF","R_PARISC_LTOFF_FPTR16DF","R_PARISC_LORESERVE","R_PARISC_COPY","R_PARISC_IPLT","R_PARISC_EPLT","R_PARISC_TPREL32","R_PARISC_TPREL21L","R_PARISC_TPREL14R","R_PARISC_LTOFF_TP21L","R_PARISC_LTOFF_TP14R","R_PARISC_LTOFF_TP14F","R_PARISC_TPREL64","R_PARISC_TPREL14WR","R_PARISC_TPREL14DR","R_PARISC_TPREL16F","R_PARISC_TPREL16WF","R_PARISC_TPREL16DF","R_PARISC_LTOFF_TP64","R_PARISC_LTOFF_TP14WR","R_PARISC_LTOFF_TP14DR","R_PARISC_LTOFF_TP16F","R_PARISC_LTOFF_TP16WF","R_PARISC_LTOFF_TP16DF","R_PARISC_GNU_VTENTRY","R_PARISC_GNU_VTINHERIT","R_PARISC_TLS_GD21L","R_PARISC_TLS_GD14R","R_PARISC_TLS_GDCALL","R_PARISC_TLS_LDM21L","R_PARISC_TLS_LDM14R","R_PARISC_TLS_LDMCALL","R_PARISC_TLS_LDO21L","R_PARISC_TLS_LDO14R","R_PARISC_TLS_DTPMOD32","R_PARISC_TLS_DTPMOD64","R_PARISC_TLS_DTPOFF32","R_PARISC_TLS_DTPOFF64","R_PARISC_TLS_LE21L","R_PARISC_TLS_LE14R","R_PARISC_TLS_IE21L","R_PARISC_TLS_IE14R","R_PARISC_TLS_TPREL32","R_PARISC_TLS_TPREL64","R_PARISC_HIRESERVE","PT_HP_TLS","PT_HP_CORE_NONE","PT_HP_CORE_VERSION","PT_HP_CORE_KERNEL","PT_HP_CORE_COMM","PT_HP_CORE_PROC","PT_HP_CORE_LOADABLE","PT_HP_CORE_STACK","PT_HP_CORE_SHM","PT_HP_CORE_MMF","PT_HP_PARALLEL","PT_HP_FASTBIND","PT_HP_OPT_ANNOT","PT_HP_HSL_ANNOT","PT_HP_STACK","PT_PARISC_ARCHEXT","PT_PARISC_UNWIND","PF_PARISC_SBP","PF_HP_PAGE_SIZE","PF_HP_FAR_SHARED","PF_HP_NEAR_SHARED","PF_HP_CODE","PF_HP_MODIFY","PF_HP_LAZYSWAP","PF_HP_SBP","EF_ALPHA_32BIT","EF_ALPHA_CANRELAX","SHT_ALPHA_DEBUG","SHT_ALPHA_REGINFO","SHF_ALPHA_GPREL","STO_ALPHA_NOPV","STO_ALPHA_STD_GPLOAD","R_ALPHA_NONE","R_ALPHA_REFLONG","R_ALPHA_REFQUAD","R_ALPHA_GPREL32","R_ALPHA_LITERAL","R_ALPHA_LITUSE","R_ALPHA_GPDISP","R_ALPHA_BRADDR","R_ALPHA_HINT","R_ALPHA_SREL16","R_ALPHA_SREL32","R_ALPHA_SREL64","R_ALPHA_GPRELHIGH","R_ALPHA_GPRELLOW","R_ALPHA_GPREL16","R_ALPHA_COPY","R_ALPHA_GLOB_DAT","R_ALPHA_JMP_SLOT","R_ALPHA_RELATIVE","R_ALPHA_TLS_GD_HI","R_ALPHA_TLSGD","R_ALPHA_TLS_LDM","R_ALPHA_DTPMOD64","R_ALPHA_GOTDTPREL","R_ALPHA_DTPREL64","R_ALPHA_DTPRELHI","R_ALPHA_DTPRELLO","R_ALPHA_DTPREL16","R_ALPHA_GOTTPREL","R_ALPHA_TPREL64","R_ALPHA_TPRELHI","R_ALPHA_TPRELLO","R_ALPHA_TPREL16","LITUSE_ALPHA_ADDR","LITUSE_ALPHA_BASE","LITUSE_ALPHA_BYTOFF","LITUSE_ALPHA_JSR","LITUSE_ALPHA_TLS_GD","LITUSE_ALPHA_TLS_LDM","DT_ALPHA_PLTRO","EF_PPC_EMB","EF_PPC_RELOCATABLE","EF_PPC_RELOCATABLE_LIB","R_PPC_NONE","R_PPC_ADDR32","R_PPC_ADDR24","R_PPC_ADDR16","R_PPC_ADDR16_LO","R_PPC_ADDR16_HI","R_PPC_ADDR16_HA","R_PPC_ADDR14","R_PPC_ADDR14_BRTAKEN","R_PPC_ADDR14_BRNTAKEN","R_PPC_REL24","R_PPC_REL14","R_PPC_REL14_BRTAKEN","R_PPC_REL14_BRNTAKEN","R_PPC_GOT16","R_PPC_GOT16_LO","R_PPC_GOT16_HI","R_PPC_GOT16_HA","R_PPC_PLTREL24","R_PPC_COPY","R_PPC_GLOB_DAT","R_PPC_JMP_SLOT","R_PPC_RELATIVE","R_PPC_LOCAL24PC","R_PPC_UADDR32","R_PPC_UADDR16","R_PPC_REL32","R_PPC_PLT32","R_PPC_PLTREL32","R_PPC_PLT16_LO","R_PPC_PLT16_HI","R_PPC_PLT16_HA","R_PPC_SDAREL16","R_PPC_SECTOFF","R_PPC_SECTOFF_LO","R_PPC_SECTOFF_HI","R_PPC_SECTOFF_HA","R_PPC_TLS","R_PPC_DTPMOD32","R_PPC_TPREL16","R_PPC_TPREL16_LO","R_PPC_TPREL16_HI","R_PPC_TPREL16_HA","R_PPC_TPREL32","R_PPC_DTPREL16","R_PPC_DTPREL16_LO","R_PPC_DTPREL16_HI","R_PPC_DTPREL16_HA","R_PPC_DTPREL32","R_PPC_GOT_TLSGD16","R_PPC_GOT_TLSGD16_LO","R_PPC_GOT_TLSGD16_HI","R_PPC_GOT_TLSGD16_HA","R_PPC_GOT_TLSLD16","R_PPC_GOT_TLSLD16_LO","R_PPC_GOT_TLSLD16_HI","R_PPC_GOT_TLSLD16_HA","R_PPC_GOT_TPREL16","R_PPC_GOT_TPREL16_LO","R_PPC_GOT_TPREL16_HI","R_PPC_GOT_TPREL16_HA","R_PPC_GOT_DTPREL16","R_PPC_GOT_DTPREL16_LO","R_PPC_GOT_DTPREL16_HI","R_PPC_GOT_DTPREL16_HA","R_PPC_TLSGD","R_PPC_TLSLD","R_PPC_EMB_NADDR32","R_PPC_EMB_NADDR16","R_PPC_EMB_NADDR16_LO","R_PPC_EMB_NADDR16_HI","R_PPC_EMB_NADDR16_HA","R_PPC_EMB_SDAI16","R_PPC_EMB_SDA2I16","R_PPC_EMB_SDA2REL","R_PPC_EMB_SDA21","R_PPC_EMB_MRKREF","R_PPC_EMB_RELSEC16","R_PPC_EMB_RELST_LO","R_PPC_EMB_RELST_HI","R_PPC_EMB_RELST_HA","R_PPC_EMB_BIT_FLD","R_PPC_EMB_RELSDA","R_PPC_DIAB_SDA21_LO","R_PPC_DIAB_SDA21_HI","R_PPC_DIAB_SDA21_HA","R_PPC_DIAB_RELSDA_LO","R_PPC_DIAB_RELSDA_HI","R_PPC_DIAB_RELSDA_HA","R_PPC_IRELATIVE","R_PPC_REL16","R_PPC_REL16_LO","R_PPC_REL16_HI","R_PPC_REL16_HA","R_PPC_TOC16","DT_PPC_GOT","DT_PPC_OPT","PPC_OPT_TLS","R_PPC64_NONE","R_PPC64_ADDR32","R_PPC64_ADDR24","R_PPC64_ADDR16","R_PPC64_ADDR16_LO","R_PPC64_ADDR16_HI","R_PPC64_ADDR16_HA","R_PPC64_ADDR14","R_PPC64_ADDR14_BRTAKEN","R_PPC64_ADDR14_BRNTAKEN","R_PPC64_REL24","R_PPC64_REL14","R_PPC64_REL14_BRTAKEN","R_PPC64_REL14_BRNTAKEN","R_PPC64_GOT16","R_PPC64_GOT16_LO","R_PPC64_GOT16_HI","R_PPC64_GOT16_HA","R_PPC64_COPY","R_PPC64_GLOB_DAT","R_PPC64_JMP_SLOT","R_PPC64_RELATIVE","R_PPC64_UADDR32","R_PPC64_UADDR16","R_PPC64_REL32","R_PPC64_PLT32","R_PPC64_PLTREL32","R_PPC64_PLT16_LO","R_PPC64_PLT16_HI","R_PPC64_PLT16_HA","R_PPC64_SECTOFF","R_PPC64_SECTOFF_LO","R_PPC64_SECTOFF_HI","R_PPC64_SECTOFF_HA","R_PPC64_ADDR30","R_PPC64_ADDR64","R_PPC64_ADDR16_HIGHER","R_PPC64_ADDR16_HIGHERA","R_PPC64_ADDR16_HIGHEST","R_PPC64_ADDR16_HIGHESTA","R_PPC64_UADDR64","R_PPC64_REL64","R_PPC64_PLT64","R_PPC64_PLTREL64","R_PPC64_TOC16","R_PPC64_TOC16_LO","R_PPC64_TOC16_HI","R_PPC64_TOC16_HA","R_PPC64_TOC","R_PPC64_PLTGOT16","R_PPC64_PLTGOT16_LO","R_PPC64_PLTGOT16_HI","R_PPC64_PLTGOT16_HA","R_PPC64_ADDR16_DS","R_PPC64_ADDR16_LO_DS","R_PPC64_GOT16_DS","R_PPC64_GOT16_LO_DS","R_PPC64_PLT16_LO_DS","R_PPC64_SECTOFF_DS","R_PPC64_SECTOFF_LO_DS","R_PPC64_TOC16_DS","R_PPC64_TOC16_LO_DS","R_PPC64_PLTGOT16_DS","R_PPC64_PLTGOT16_LO_DS","R_PPC64_TLS","R_PPC64_DTPMOD64","R_PPC64_TPREL16","R_PPC64_TPREL16_LO","R_PPC64_TPREL16_HI","R_PPC64_TPREL16_HA","R_PPC64_TPREL64","R_PPC64_DTPREL16","R_PPC64_DTPREL16_LO","R_PPC64_DTPREL16_HI","R_PPC64_DTPREL16_HA","R_PPC64_DTPREL64","R_PPC64_GOT_TLSGD16","R_PPC64_GOT_TLSGD16_LO","R_PPC64_GOT_TLSGD16_HI","R_PPC64_GOT_TLSGD16_HA","R_PPC64_GOT_TLSLD16","R_PPC64_GOT_TLSLD16_LO","R_PPC64_GOT_TLSLD16_HI","R_PPC64_GOT_TLSLD16_HA","R_PPC64_GOT_TPREL16_DS","R_PPC64_GOT_TPREL16_LO_DS","R_PPC64_GOT_TPREL16_HI","R_PPC64_GOT_TPREL16_HA","R_PPC64_GOT_DTPREL16_DS","R_PPC64_GOT_DTPREL16_LO_DS","R_PPC64_GOT_DTPREL16_HI","R_PPC64_GOT_DTPREL16_HA","R_PPC64_TPREL16_DS","R_PPC64_TPREL16_LO_DS","R_PPC64_TPREL16_HIGHER","R_PPC64_TPREL16_HIGHERA","R_PPC64_TPREL16_HIGHEST","R_PPC64_TPREL16_HIGHESTA","R_PPC64_DTPREL16_DS","R_PPC64_DTPREL16_LO_DS","R_PPC64_DTPREL16_HIGHER","R_PPC64_DTPREL16_HIGHERA","R_PPC64_DTPREL16_HIGHEST","R_PPC64_DTPREL16_HIGHESTA","R_PPC64_TLSGD","R_PPC64_TLSLD","R_PPC64_TOCSAVE","R_PPC64_ADDR16_HIGH","R_PPC64_ADDR16_HIGHA","R_PPC64_TPREL16_HIGH","R_PPC64_TPREL16_HIGHA","R_PPC64_DTPREL16_HIGH","R_PPC64_DTPREL16_HIGHA","R_PPC64_JMP_IREL","R_PPC64_IRELATIVE","R_PPC64_REL16","R_PPC64_REL16_LO","R_PPC64_REL16_HI","R_PPC64_REL16_HA","EF_PPC64_ABI","DT_PPC64_GLINK","DT_PPC64_OPD","DT_PPC64_OPDSZ","DT_PPC64_OPT","PPC64_OPT_TLS","PPC64_OPT_MULTI_TOC","PPC64_OPT_LOCALENTRY","STO_PPC64_LOCAL_BIT","STO_PPC64_LOCAL_MASK","EF_ARM_RELEXEC","EF_ARM_HASENTRY","EF_ARM_INTERWORK","EF_ARM_APCS_26","EF_ARM_APCS_FLOAT","EF_ARM_PIC","EF_ARM_ALIGN8","EF_ARM_NEW_ABI","EF_ARM_OLD_ABI","EF_ARM_SOFT_FLOAT","EF_ARM_VFP_FLOAT","EF_ARM_MAVERICK_FLOAT","EF_ARM_ABI_FLOAT_SOFT","EF_ARM_ABI_FLOAT_HARD","EF_ARM_SYMSARESORTED","EF_ARM_DYNSYMSUSESEGIDX","EF_ARM_MAPSYMSFIRST","EF_ARM_BE8","EF_ARM_LE8","EF_ARM_EABIMASK","EF_ARM_EABI_UNKNOWN","EF_ARM_EABI_VER1","EF_ARM_EABI_VER2","EF_ARM_EABI_VER3","EF_ARM_EABI_VER4","EF_ARM_EABI_VER5","STT_ARM_TFUNC","STT_ARM_16BIT","SHF_ARM_ENTRYSECT","SHF_ARM_COMDEF","PF_ARM_SB","PF_ARM_PI","PF_ARM_ABS","PT_ARM_EXIDX","SHT_ARM_EXIDX","SHT_ARM_PREEMPTMAP","SHT_ARM_ATTRIBUTES","R_AARCH64_NONE","R_AARCH64_P32_ABS32","R_AARCH64_P32_COPY","R_AARCH64_P32_GLOB_DAT","R_AARCH64_P32_JUMP_SLOT","R_AARCH64_P32_RELATIVE","R_AARCH64_P32_TLS_DTPMOD","R_AARCH64_P32_TLS_DTPREL","R_AARCH64_P32_TLS_TPREL","R_AARCH64_P32_TLSDESC","R_AARCH64_P32_IRELATIVE","R_AARCH64_ABS64","R_AARCH64_ABS32","R_AARCH64_ABS16","R_AARCH64_PREL64","R_AARCH64_PREL32","R_AARCH64_PREL16","R_AARCH64_MOVW_UABS_G0","R_AARCH64_MOVW_UABS_G0_NC","R_AARCH64_MOVW_UABS_G1","R_AARCH64_MOVW_UABS_G1_NC","R_AARCH64_MOVW_UABS_G2","R_AARCH64_MOVW_UABS_G2_NC","R_AARCH64_MOVW_UABS_G3","R_AARCH64_MOVW_SABS_G0","R_AARCH64_MOVW_SABS_G1","R_AARCH64_MOVW_SABS_G2","R_AARCH64_LD_PREL_LO19","R_AARCH64_ADR_PREL_LO21","R_AARCH64_ADR_PREL_PG_HI21","R_AARCH64_ADR_PREL_PG_HI21_NC","R_AARCH64_ADD_ABS_LO12_NC","R_AARCH64_LDST8_ABS_LO12_NC","R_AARCH64_TSTBR14","R_AARCH64_CONDBR19","R_AARCH64_JUMP26","R_AARCH64_CALL26","R_AARCH64_LDST16_ABS_LO12_NC","R_AARCH64_LDST32_ABS_LO12_NC","R_AARCH64_LDST64_ABS_LO12_NC","R_AARCH64_MOVW_PREL_G0","R_AARCH64_MOVW_PREL_G0_NC","R_AARCH64_MOVW_PREL_G1","R_AARCH64_MOVW_PREL_G1_NC","R_AARCH64_MOVW_PREL_G2","R_AARCH64_MOVW_PREL_G2_NC","R_AARCH64_MOVW_PREL_G3","R_AARCH64_LDST128_ABS_LO12_NC","R_AARCH64_MOVW_GOTOFF_G0","R_AARCH64_MOVW_GOTOFF_G0_NC","R_AARCH64_MOVW_GOTOFF_G1","R_AARCH64_MOVW_GOTOFF_G1_NC","R_AARCH64_MOVW_GOTOFF_G2","R_AARCH64_MOVW_GOTOFF_G2_NC","R_AARCH64_MOVW_GOTOFF_G3","R_AARCH64_GOTREL64","R_AARCH64_GOTREL32","R_AARCH64_GOT_LD_PREL19","R_AARCH64_LD64_GOTOFF_LO15","R_AARCH64_ADR_GOT_PAGE","R_AARCH64_LD64_GOT_LO12_NC","R_AARCH64_LD64_GOTPAGE_LO15","R_AARCH64_TLSGD_ADR_PREL21","R_AARCH64_TLSGD_ADR_PAGE21","R_AARCH64_TLSGD_ADD_LO12_NC","R_AARCH64_TLSGD_MOVW_G1","R_AARCH64_TLSGD_MOVW_G0_NC","R_AARCH64_TLSLD_ADR_PREL21","R_AARCH64_TLSLD_ADR_PAGE21","R_AARCH64_TLSLD_ADD_LO12_NC","R_AARCH64_TLSLD_MOVW_G1","R_AARCH64_TLSLD_MOVW_G0_NC","R_AARCH64_TLSLD_LD_PREL19","R_AARCH64_TLSLD_MOVW_DTPREL_G2","R_AARCH64_TLSLD_MOVW_DTPREL_G1","R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","R_AARCH64_TLSLD_MOVW_DTPREL_G0","R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","R_AARCH64_TLSLD_ADD_DTPREL_HI12","R_AARCH64_TLSLD_ADD_DTPREL_LO12","R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST8_DTPREL_LO12","R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST16_DTPREL_LO12","R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST32_DTPREL_LO12","R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST64_DTPREL_LO12","R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","R_AARCH64_TLSLE_MOVW_TPREL_G2","R_AARCH64_TLSLE_MOVW_TPREL_G1","R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","R_AARCH64_TLSLE_MOVW_TPREL_G0","R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","R_AARCH64_TLSLE_ADD_TPREL_HI12","R_AARCH64_TLSLE_ADD_TPREL_LO12","R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST8_TPREL_LO12","R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST16_TPREL_LO12","R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST32_TPREL_LO12","R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST64_TPREL_LO12","R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","R_AARCH64_TLSDESC_LD_PREL19","R_AARCH64_TLSDESC_ADR_PREL21","R_AARCH64_TLSDESC_ADR_PAGE21","R_AARCH64_TLSDESC_LD64_LO12","R_AARCH64_TLSDESC_ADD_LO12","R_AARCH64_TLSDESC_OFF_G1","R_AARCH64_TLSDESC_OFF_G0_NC","R_AARCH64_TLSDESC_LDR","R_AARCH64_TLSDESC_ADD","R_AARCH64_TLSDESC_CALL","R_AARCH64_TLSLE_LDST128_TPREL_LO12","R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","R_AARCH64_TLSLD_LDST128_DTPREL_LO12","R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","R_AARCH64_COPY","R_AARCH64_GLOB_DAT","R_AARCH64_JUMP_SLOT","R_AARCH64_RELATIVE","R_AARCH64_TLS_DTPMOD","R_AARCH64_TLS_DTPREL","R_AARCH64_TLS_TPREL","R_AARCH64_TLSDESC","R_AARCH64_IRELATIVE","R_ARM_NONE","R_ARM_PC24","R_ARM_ABS32","R_ARM_REL32","R_ARM_PC13","R_ARM_ABS16","R_ARM_ABS12","R_ARM_THM_ABS5","R_ARM_ABS8","R_ARM_SBREL32","R_ARM_THM_PC22","R_ARM_THM_PC8","R_ARM_AMP_VCALL9","R_ARM_SWI24","R_ARM_TLS_DESC","R_ARM_THM_SWI8","R_ARM_XPC25","R_ARM_THM_XPC22","R_ARM_TLS_DTPMOD32","R_ARM_TLS_DTPOFF32","R_ARM_TLS_TPOFF32","R_ARM_COPY","R_ARM_GLOB_DAT","R_ARM_JUMP_SLOT","R_ARM_RELATIVE","R_ARM_GOTOFF","R_ARM_GOTPC","R_ARM_GOT32","R_ARM_PLT32","R_ARM_CALL","R_ARM_JUMP24","R_ARM_THM_JUMP24","R_ARM_BASE_ABS","R_ARM_ALU_PCREL_7_0","R_ARM_ALU_PCREL_15_8","R_ARM_ALU_PCREL_23_15","R_ARM_LDR_SBREL_11_0","R_ARM_ALU_SBREL_19_12","R_ARM_ALU_SBREL_27_20","R_ARM_TARGET1","R_ARM_SBREL31","R_ARM_V4BX","R_ARM_TARGET2","R_ARM_PREL31","R_ARM_MOVW_ABS_NC","R_ARM_MOVT_ABS","R_ARM_MOVW_PREL_NC","R_ARM_MOVT_PREL","R_ARM_THM_MOVW_ABS_NC","R_ARM_THM_MOVT_ABS","R_ARM_THM_MOVW_PREL_NC","R_ARM_THM_MOVT_PREL","R_ARM_THM_JUMP19","R_ARM_THM_JUMP6","R_ARM_THM_ALU_PREL_11_0","R_ARM_THM_PC12","R_ARM_ABS32_NOI","R_ARM_REL32_NOI","R_ARM_ALU_PC_G0_NC","R_ARM_ALU_PC_G0","R_ARM_ALU_PC_G1_NC","R_ARM_ALU_PC_G1","R_ARM_ALU_PC_G2","R_ARM_LDR_PC_G1","R_ARM_LDR_PC_G2","R_ARM_LDRS_PC_G0","R_ARM_LDRS_PC_G1","R_ARM_LDRS_PC_G2","R_ARM_LDC_PC_G0","R_ARM_LDC_PC_G1","R_ARM_LDC_PC_G2","R_ARM_ALU_SB_G0_NC","R_ARM_ALU_SB_G0","R_ARM_ALU_SB_G1_NC","R_ARM_ALU_SB_G1","R_ARM_ALU_SB_G2","R_ARM_LDR_SB_G0","R_ARM_LDR_SB_G1","R_ARM_LDR_SB_G2","R_ARM_LDRS_SB_G0","R_ARM_LDRS_SB_G1","R_ARM_LDRS_SB_G2","R_ARM_LDC_SB_G0","R_ARM_LDC_SB_G1","R_ARM_LDC_SB_G2","R_ARM_MOVW_BREL_NC","R_ARM_MOVT_BREL","R_ARM_MOVW_BREL","R_ARM_THM_MOVW_BREL_NC","R_ARM_THM_MOVT_BREL","R_ARM_THM_MOVW_BREL","R_ARM_TLS_GOTDESC","R_ARM_TLS_CALL","R_ARM_TLS_DESCSEQ","R_ARM_THM_TLS_CALL","R_ARM_PLT32_ABS","R_ARM_GOT_ABS","R_ARM_GOT_PREL","R_ARM_GOT_BREL12","R_ARM_GOTOFF12","R_ARM_GOTRELAX","R_ARM_GNU_VTENTRY","R_ARM_GNU_VTINHERIT","R_ARM_THM_PC11","R_ARM_THM_PC9","R_ARM_TLS_GD32","R_ARM_TLS_LDM32","R_ARM_TLS_LDO32","R_ARM_TLS_IE32","R_ARM_TLS_LE32","R_ARM_TLS_LDO12","R_ARM_TLS_LE12","R_ARM_TLS_IE12GP","R_ARM_ME_TOO","R_ARM_THM_TLS_DESCSEQ","R_ARM_THM_TLS_DESCSEQ16","R_ARM_THM_TLS_DESCSEQ32","R_ARM_THM_GOT_BREL12","R_ARM_IRELATIVE","R_ARM_RXPC25","R_ARM_RSBREL32","R_ARM_THM_RPC22","R_ARM_RREL32","R_ARM_RABS22","R_ARM_RPC24","R_ARM_RBASE","R_CKCORE_NONE","R_CKCORE_ADDR32","R_CKCORE_PCRELIMM8BY4","R_CKCORE_PCRELIMM11BY2","R_CKCORE_PCREL32","R_CKCORE_PCRELJSR_IMM11BY2","R_CKCORE_RELATIVE","R_CKCORE_COPY","R_CKCORE_GLOB_DAT","R_CKCORE_JUMP_SLOT","R_CKCORE_GOTOFF","R_CKCORE_GOTPC","R_CKCORE_GOT32","R_CKCORE_PLT32","R_CKCORE_ADDRGOT","R_CKCORE_ADDRPLT","R_CKCORE_PCREL_IMM26BY2","R_CKCORE_PCREL_IMM16BY2","R_CKCORE_PCREL_IMM16BY4","R_CKCORE_PCREL_IMM10BY2","R_CKCORE_PCREL_IMM10BY4","R_CKCORE_ADDR_HI16","R_CKCORE_ADDR_LO16","R_CKCORE_GOTPC_HI16","R_CKCORE_GOTPC_LO16","R_CKCORE_GOTOFF_HI16","R_CKCORE_GOTOFF_LO16","R_CKCORE_GOT12","R_CKCORE_GOT_HI16","R_CKCORE_GOT_LO16","R_CKCORE_PLT12","R_CKCORE_PLT_HI16","R_CKCORE_PLT_LO16","R_CKCORE_ADDRGOT_HI16","R_CKCORE_ADDRGOT_LO16","R_CKCORE_ADDRPLT_HI16","R_CKCORE_ADDRPLT_LO16","R_CKCORE_PCREL_JSR_IMM26BY2","R_CKCORE_TOFFSET_LO16","R_CKCORE_DOFFSET_LO16","R_CKCORE_PCREL_IMM18BY2","R_CKCORE_DOFFSET_IMM18","R_CKCORE_DOFFSET_IMM18BY2","R_CKCORE_DOFFSET_IMM18BY4","R_CKCORE_GOT_IMM18BY4","R_CKCORE_PLT_IMM18BY4","R_CKCORE_PCREL_IMM7BY4","R_CKCORE_TLS_LE32","R_CKCORE_TLS_IE32","R_CKCORE_TLS_GD32","R_CKCORE_TLS_LDM32","R_CKCORE_TLS_LDO32","R_CKCORE_TLS_DTPMOD32","R_CKCORE_TLS_DTPOFF32","R_CKCORE_TLS_TPOFF32","EF_CSKY_ABIMASK","EF_CSKY_OTHER","EF_CSKY_PROCESSOR","EF_CSKY_ABIV1","EF_CSKY_ABIV2","SHT_CSKY_ATTRIBUTES","EF_IA_64_MASKOS","EF_IA_64_ABI64","EF_IA_64_ARCH","PT_IA_64_ARCHEXT","PT_IA_64_UNWIND","PT_IA_64_HP_OPT_ANOT","PT_IA_64_HP_HSL_ANOT","PT_IA_64_HP_STACK","PF_IA_64_NORECOV","SHT_IA_64_EXT","SHT_IA_64_UNWIND","SHF_IA_64_SHORT","SHF_IA_64_NORECOV","DT_IA_64_PLT_RESERVE","R_IA64_NONE","R_IA64_IMM14","R_IA64_IMM22","R_IA64_IMM64","R_IA64_DIR32MSB","R_IA64_DIR32LSB","R_IA64_DIR64MSB","R_IA64_DIR64LSB","R_IA64_GPREL22","R_IA64_GPREL64I","R_IA64_GPREL32MSB","R_IA64_GPREL32LSB","R_IA64_GPREL64MSB","R_IA64_GPREL64LSB","R_IA64_LTOFF22","R_IA64_LTOFF64I","R_IA64_PLTOFF22","R_IA64_PLTOFF64I","R_IA64_PLTOFF64MSB","R_IA64_PLTOFF64LSB","R_IA64_FPTR64I","R_IA64_FPTR32MSB","R_IA64_FPTR32LSB","R_IA64_FPTR64MSB","R_IA64_FPTR64LSB","R_IA64_PCREL60B","R_IA64_PCREL21B","R_IA64_PCREL21M","R_IA64_PCREL21F","R_IA64_PCREL32MSB","R_IA64_PCREL32LSB","R_IA64_PCREL64MSB","R_IA64_PCREL64LSB","R_IA64_LTOFF_FPTR22","R_IA64_LTOFF_FPTR64I","R_IA64_LTOFF_FPTR32MSB","R_IA64_LTOFF_FPTR32LSB","R_IA64_LTOFF_FPTR64MSB","R_IA64_LTOFF_FPTR64LSB","R_IA64_SEGREL32MSB","R_IA64_SEGREL32LSB","R_IA64_SEGREL64MSB","R_IA64_SEGREL64LSB","R_IA64_SECREL32MSB","R_IA64_SECREL32LSB","R_IA64_SECREL64MSB","R_IA64_SECREL64LSB","R_IA64_REL32MSB","R_IA64_REL32LSB","R_IA64_REL64MSB","R_IA64_REL64LSB","R_IA64_LTV32MSB","R_IA64_LTV32LSB","R_IA64_LTV64MSB","R_IA64_LTV64LSB","R_IA64_PCREL21BI","R_IA64_PCREL22","R_IA64_PCREL64I","R_IA64_IPLTMSB","R_IA64_IPLTLSB","R_IA64_COPY","R_IA64_SUB","R_IA64_LTOFF22X","R_IA64_LDXMOV","R_IA64_TPREL14","R_IA64_TPREL22","R_IA64_TPREL64I","R_IA64_TPREL64MSB","R_IA64_TPREL64LSB","R_IA64_LTOFF_TPREL22","R_IA64_DTPMOD64MSB","R_IA64_DTPMOD64LSB","R_IA64_LTOFF_DTPMOD22","R_IA64_DTPREL14","R_IA64_DTPREL22","R_IA64_DTPREL64I","R_IA64_DTPREL32MSB","R_IA64_DTPREL32LSB","R_IA64_DTPREL64MSB","R_IA64_DTPREL64LSB","R_IA64_LTOFF_DTPREL22","EF_SH_MACH_MASK","EF_SH_UNKNOWN","EF_SH1","EF_SH2","EF_SH3","EF_SH_DSP","EF_SH3_DSP","EF_SH4AL_DSP","EF_SH3E","EF_SH4","EF_SH2E","EF_SH4A","EF_SH2A","EF_SH4_NOFPU","EF_SH4A_NOFPU","EF_SH4_NOMMU_NOFPU","EF_SH2A_NOFPU","EF_SH3_NOMMU","EF_SH2A_SH4_NOFPU","EF_SH2A_SH3_NOFPU","EF_SH2A_SH4","EF_SH2A_SH3E","R_SH_NONE","R_SH_DIR32","R_SH_REL32","R_SH_DIR8WPN","R_SH_IND12W","R_SH_DIR8WPL","R_SH_DIR8WPZ","R_SH_DIR8BP","R_SH_DIR8W","R_SH_DIR8L","R_SH_SWITCH16","R_SH_SWITCH32","R_SH_USES","R_SH_COUNT","R_SH_ALIGN","R_SH_CODE","R_SH_DATA","R_SH_LABEL","R_SH_SWITCH8","R_SH_GNU_VTINHERIT","R_SH_GNU_VTENTRY","R_SH_TLS_GD_32","R_SH_TLS_LD_32","R_SH_TLS_LDO_32","R_SH_TLS_IE_32","R_SH_TLS_LE_32","R_SH_TLS_DTPMOD32","R_SH_TLS_DTPOFF32","R_SH_TLS_TPOFF32","R_SH_GOT32","R_SH_PLT32","R_SH_COPY","R_SH_GLOB_DAT","R_SH_JMP_SLOT","R_SH_RELATIVE","R_SH_GOTOFF","R_SH_GOTPC","EF_S390_HIGH_GPRS","R_390_NONE","R_390_8","R_390_12","R_390_16","R_390_32","R_390_PC32","R_390_GOT12","R_390_GOT32","R_390_PLT32","R_390_COPY","R_390_GLOB_DAT","R_390_JMP_SLOT","R_390_RELATIVE","R_390_GOTOFF32","R_390_GOTPC","R_390_GOT16","R_390_PC16","R_390_PC16DBL","R_390_PLT16DBL","R_390_PC32DBL","R_390_PLT32DBL","R_390_GOTPCDBL","R_390_64","R_390_PC64","R_390_GOT64","R_390_PLT64","R_390_GOTENT","R_390_GOTOFF16","R_390_GOTOFF64","R_390_GOTPLT12","R_390_GOTPLT16","R_390_GOTPLT32","R_390_GOTPLT64","R_390_GOTPLTENT","R_390_PLTOFF16","R_390_PLTOFF32","R_390_PLTOFF64","R_390_TLS_LOAD","R_390_TLS_GDCALL","R_390_TLS_LDCALL","R_390_TLS_GD32","R_390_TLS_GD64","R_390_TLS_GOTIE12","R_390_TLS_GOTIE32","R_390_TLS_GOTIE64","R_390_TLS_LDM32","R_390_TLS_LDM64","R_390_TLS_IE32","R_390_TLS_IE64","R_390_TLS_IEENT","R_390_TLS_LE32","R_390_TLS_LE64","R_390_TLS_LDO32","R_390_TLS_LDO64","R_390_TLS_DTPMOD","R_390_TLS_DTPOFF","R_390_TLS_TPOFF","R_390_20","R_390_GOT20","R_390_GOTPLT20","R_390_TLS_GOTIE20","R_390_IRELATIVE","R_CRIS_NONE","R_CRIS_8","R_CRIS_16","R_CRIS_32","R_CRIS_8_PCREL","R_CRIS_16_PCREL","R_CRIS_32_PCREL","R_CRIS_GNU_VTINHERIT","R_CRIS_GNU_VTENTRY","R_CRIS_COPY","R_CRIS_GLOB_DAT","R_CRIS_JUMP_SLOT","R_CRIS_RELATIVE","R_CRIS_16_GOT","R_CRIS_32_GOT","R_CRIS_16_GOTPLT","R_CRIS_32_GOTPLT","R_CRIS_32_GOTREL","R_CRIS_32_PLT_GOTREL","R_CRIS_32_PLT_PCREL","R_X86_64_NONE","R_X86_64_64","R_X86_64_PC32","R_X86_64_GOT32","R_X86_64_PLT32","R_X86_64_COPY","R_X86_64_GLOB_DAT","R_X86_64_JUMP_SLOT","R_X86_64_RELATIVE","R_X86_64_GOTPCREL","R_X86_64_32","R_X86_64_32S","R_X86_64_16","R_X86_64_PC16","R_X86_64_8","R_X86_64_PC8","R_X86_64_DTPMOD64","R_X86_64_DTPOFF64","R_X86_64_TPOFF64","R_X86_64_TLSGD","R_X86_64_TLSLD","R_X86_64_DTPOFF32","R_X86_64_GOTTPOFF","R_X86_64_TPOFF32","R_X86_64_PC64","R_X86_64_GOTOFF64","R_X86_64_GOTPC32","R_X86_64_GOT64","R_X86_64_GOTPCREL64","R_X86_64_GOTPC64","R_X86_64_GOTPLT64","R_X86_64_PLTOFF64","R_X86_64_SIZE32","R_X86_64_SIZE64","R_X86_64_GOTPC32_TLSDESC","R_X86_64_TLSDESC_CALL","R_X86_64_TLSDESC","R_X86_64_IRELATIVE","R_X86_64_RELATIVE64","R_X86_64_GOTPCRELX","R_X86_64_REX_GOTPCRELX","SHT_X86_64_UNWIND","R_MN10300_NONE","R_MN10300_32","R_MN10300_16","R_MN10300_8","R_MN10300_PCREL32","R_MN10300_PCREL16","R_MN10300_PCREL8","R_MN10300_GNU_VTINHERIT","R_MN10300_GNU_VTENTRY","R_MN10300_24","R_MN10300_GOTPC32","R_MN10300_GOTPC16","R_MN10300_GOTOFF32","R_MN10300_GOTOFF24","R_MN10300_GOTOFF16","R_MN10300_PLT32","R_MN10300_PLT16","R_MN10300_GOT32","R_MN10300_GOT24","R_MN10300_GOT16","R_MN10300_COPY","R_MN10300_GLOB_DAT","R_MN10300_JMP_SLOT","R_MN10300_RELATIVE","R_MN10300_TLS_GD","R_MN10300_TLS_LD","R_MN10300_TLS_LDO","R_MN10300_TLS_GOTIE","R_MN10300_TLS_IE","R_MN10300_TLS_LE","R_MN10300_TLS_DTPMOD","R_MN10300_TLS_DTPOFF","R_MN10300_TLS_TPOFF","R_MN10300_SYM_DIFF","R_MN10300_ALIGN","R_M32R_NONE","R_M32R_16","R_M32R_32","R_M32R_24","R_M32R_10_PCREL","R_M32R_18_PCREL","R_M32R_26_PCREL","R_M32R_HI16_ULO","R_M32R_HI16_SLO","R_M32R_LO16","R_M32R_SDA16","R_M32R_GNU_VTINHERIT","R_M32R_GNU_VTENTRY","R_M32R_16_RELA","R_M32R_32_RELA","R_M32R_24_RELA","R_M32R_10_PCREL_RELA","R_M32R_18_PCREL_RELA","R_M32R_26_PCREL_RELA","R_M32R_HI16_ULO_RELA","R_M32R_HI16_SLO_RELA","R_M32R_LO16_RELA","R_M32R_SDA16_RELA","R_M32R_RELA_GNU_VTINHERIT","R_M32R_RELA_GNU_VTENTRY","R_M32R_REL32","R_M32R_GOT24","R_M32R_26_PLTREL","R_M32R_COPY","R_M32R_GLOB_DAT","R_M32R_JMP_SLOT","R_M32R_RELATIVE","R_M32R_GOTOFF","R_M32R_GOTPC24","R_M32R_GOT16_HI_ULO","R_M32R_GOT16_HI_SLO","R_M32R_GOT16_LO","R_M32R_GOTPC_HI_ULO","R_M32R_GOTPC_HI_SLO","R_M32R_GOTPC_LO","R_M32R_GOTOFF_HI_ULO","R_M32R_GOTOFF_HI_SLO","R_M32R_GOTOFF_LO","R_M32R_NUM","R_MICROBLAZE_NONE","R_MICROBLAZE_32","R_MICROBLAZE_32_PCREL","R_MICROBLAZE_64_PCREL","R_MICROBLAZE_32_PCREL_LO","R_MICROBLAZE_64","R_MICROBLAZE_32_LO","R_MICROBLAZE_SRO32","R_MICROBLAZE_SRW32","R_MICROBLAZE_64_NONE","R_MICROBLAZE_32_SYM_OP_SYM","R_MICROBLAZE_GNU_VTINHERIT","R_MICROBLAZE_GNU_VTENTRY","R_MICROBLAZE_GOTPC_64","R_MICROBLAZE_GOT_64","R_MICROBLAZE_PLT_64","R_MICROBLAZE_REL","R_MICROBLAZE_JUMP_SLOT","R_MICROBLAZE_GLOB_DAT","R_MICROBLAZE_GOTOFF_64","R_MICROBLAZE_GOTOFF_32","R_MICROBLAZE_COPY","R_MICROBLAZE_TLS","R_MICROBLAZE_TLSGD","R_MICROBLAZE_TLSLD","R_MICROBLAZE_TLSDTPMOD32","R_MICROBLAZE_TLSDTPREL32","R_MICROBLAZE_TLSDTPREL64","R_MICROBLAZE_TLSGOTTPREL32","R_MICROBLAZE_TLSTPREL32","DT_NIOS2_GP","R_NIOS2_NONE","R_NIOS2_S16","R_NIOS2_U16","R_NIOS2_PCREL16","R_NIOS2_CALL26","R_NIOS2_IMM5","R_NIOS2_CACHE_OPX","R_NIOS2_IMM6","R_NIOS2_IMM8","R_NIOS2_HI16","R_NIOS2_LO16","R_NIOS2_HIADJ16","R_NIOS2_BFD_RELOC_32","R_NIOS2_BFD_RELOC_16","R_NIOS2_BFD_RELOC_8","R_NIOS2_GPREL","R_NIOS2_GNU_VTINHERIT","R_NIOS2_GNU_VTENTRY","R_NIOS2_UJMP","R_NIOS2_CJMP","R_NIOS2_CALLR","R_NIOS2_ALIGN","R_NIOS2_GOT16","R_NIOS2_CALL16","R_NIOS2_GOTOFF_LO","R_NIOS2_GOTOFF_HA","R_NIOS2_PCREL_LO","R_NIOS2_PCREL_HA","R_NIOS2_TLS_GD16","R_NIOS2_TLS_LDM16","R_NIOS2_TLS_LDO16","R_NIOS2_TLS_IE16","R_NIOS2_TLS_LE16","R_NIOS2_TLS_DTPMOD","R_NIOS2_TLS_DTPREL","R_NIOS2_TLS_TPREL","R_NIOS2_COPY","R_NIOS2_GLOB_DAT","R_NIOS2_JUMP_SLOT","R_NIOS2_RELATIVE","R_NIOS2_GOTOFF","R_NIOS2_CALL26_NOAT","R_NIOS2_GOT_LO","R_NIOS2_GOT_HA","R_NIOS2_CALL_LO","R_NIOS2_CALL_HA","R_TILEPRO_NONE","R_TILEPRO_32","R_TILEPRO_16","R_TILEPRO_8","R_TILEPRO_32_PCREL","R_TILEPRO_16_PCREL","R_TILEPRO_8_PCREL","R_TILEPRO_LO16","R_TILEPRO_HI16","R_TILEPRO_HA16","R_TILEPRO_COPY","R_TILEPRO_GLOB_DAT","R_TILEPRO_JMP_SLOT","R_TILEPRO_RELATIVE","R_TILEPRO_BROFF_X1","R_TILEPRO_JOFFLONG_X1","R_TILEPRO_JOFFLONG_X1_PLT","R_TILEPRO_IMM8_X0","R_TILEPRO_IMM8_Y0","R_TILEPRO_IMM8_X1","R_TILEPRO_IMM8_Y1","R_TILEPRO_MT_IMM15_X1","R_TILEPRO_MF_IMM15_X1","R_TILEPRO_IMM16_X0","R_TILEPRO_IMM16_X1","R_TILEPRO_IMM16_X0_LO","R_TILEPRO_IMM16_X1_LO","R_TILEPRO_IMM16_X0_HI","R_TILEPRO_IMM16_X1_HI","R_TILEPRO_IMM16_X0_HA","R_TILEPRO_IMM16_X1_HA","R_TILEPRO_IMM16_X0_PCREL","R_TILEPRO_IMM16_X1_PCREL","R_TILEPRO_IMM16_X0_LO_PCREL","R_TILEPRO_IMM16_X1_LO_PCREL","R_TILEPRO_IMM16_X0_HI_PCREL","R_TILEPRO_IMM16_X1_HI_PCREL","R_TILEPRO_IMM16_X0_HA_PCREL","R_TILEPRO_IMM16_X1_HA_PCREL","R_TILEPRO_IMM16_X0_GOT","R_TILEPRO_IMM16_X1_GOT","R_TILEPRO_IMM16_X0_GOT_LO","R_TILEPRO_IMM16_X1_GOT_LO","R_TILEPRO_IMM16_X0_GOT_HI","R_TILEPRO_IMM16_X1_GOT_HI","R_TILEPRO_IMM16_X0_GOT_HA","R_TILEPRO_IMM16_X1_GOT_HA","R_TILEPRO_MMSTART_X0","R_TILEPRO_MMEND_X0","R_TILEPRO_MMSTART_X1","R_TILEPRO_MMEND_X1","R_TILEPRO_SHAMT_X0","R_TILEPRO_SHAMT_X1","R_TILEPRO_SHAMT_Y0","R_TILEPRO_SHAMT_Y1","R_TILEPRO_DEST_IMM8_X1","R_TILEPRO_TLS_GD_CALL","R_TILEPRO_IMM8_X0_TLS_GD_ADD","R_TILEPRO_IMM8_X1_TLS_GD_ADD","R_TILEPRO_IMM8_Y0_TLS_GD_ADD","R_TILEPRO_IMM8_Y1_TLS_GD_ADD","R_TILEPRO_TLS_IE_LOAD","R_TILEPRO_IMM16_X0_TLS_GD","R_TILEPRO_IMM16_X1_TLS_GD","R_TILEPRO_IMM16_X0_TLS_GD_LO","R_TILEPRO_IMM16_X1_TLS_GD_LO","R_TILEPRO_IMM16_X0_TLS_GD_HI","R_TILEPRO_IMM16_X1_TLS_GD_HI","R_TILEPRO_IMM16_X0_TLS_GD_HA","R_TILEPRO_IMM16_X1_TLS_GD_HA","R_TILEPRO_IMM16_X0_TLS_IE","R_TILEPRO_IMM16_X1_TLS_IE","R_TILEPRO_IMM16_X0_TLS_IE_LO","R_TILEPRO_IMM16_X1_TLS_IE_LO","R_TILEPRO_IMM16_X0_TLS_IE_HI","R_TILEPRO_IMM16_X1_TLS_IE_HI","R_TILEPRO_IMM16_X0_TLS_IE_HA","R_TILEPRO_IMM16_X1_TLS_IE_HA","R_TILEPRO_TLS_DTPMOD32","R_TILEPRO_TLS_DTPOFF32","R_TILEPRO_TLS_TPOFF32","R_TILEPRO_IMM16_X0_TLS_LE","R_TILEPRO_IMM16_X1_TLS_LE","R_TILEPRO_IMM16_X0_TLS_LE_LO","R_TILEPRO_IMM16_X1_TLS_LE_LO","R_TILEPRO_IMM16_X0_TLS_LE_HI","R_TILEPRO_IMM16_X1_TLS_LE_HI","R_TILEPRO_IMM16_X0_TLS_LE_HA","R_TILEPRO_IMM16_X1_TLS_LE_HA","R_TILEPRO_GNU_VTINHERIT","R_TILEPRO_GNU_VTENTRY","R_TILEGX_NONE","R_TILEGX_64","R_TILEGX_32","R_TILEGX_16","R_TILEGX_8","R_TILEGX_64_PCREL","R_TILEGX_32_PCREL","R_TILEGX_16_PCREL","R_TILEGX_8_PCREL","R_TILEGX_HW0","R_TILEGX_HW1","R_TILEGX_HW2","R_TILEGX_HW3","R_TILEGX_HW0_LAST","R_TILEGX_HW1_LAST","R_TILEGX_HW2_LAST","R_TILEGX_COPY","R_TILEGX_GLOB_DAT","R_TILEGX_JMP_SLOT","R_TILEGX_RELATIVE","R_TILEGX_BROFF_X1","R_TILEGX_JUMPOFF_X1","R_TILEGX_JUMPOFF_X1_PLT","R_TILEGX_IMM8_X0","R_TILEGX_IMM8_Y0","R_TILEGX_IMM8_X1","R_TILEGX_IMM8_Y1","R_TILEGX_DEST_IMM8_X1","R_TILEGX_MT_IMM14_X1","R_TILEGX_MF_IMM14_X1","R_TILEGX_MMSTART_X0","R_TILEGX_MMEND_X0","R_TILEGX_SHAMT_X0","R_TILEGX_SHAMT_X1","R_TILEGX_SHAMT_Y0","R_TILEGX_SHAMT_Y1","R_TILEGX_IMM16_X0_HW0","R_TILEGX_IMM16_X1_HW0","R_TILEGX_IMM16_X0_HW1","R_TILEGX_IMM16_X1_HW1","R_TILEGX_IMM16_X0_HW2","R_TILEGX_IMM16_X1_HW2","R_TILEGX_IMM16_X0_HW3","R_TILEGX_IMM16_X1_HW3","R_TILEGX_IMM16_X0_HW0_LAST","R_TILEGX_IMM16_X1_HW0_LAST","R_TILEGX_IMM16_X0_HW1_LAST","R_TILEGX_IMM16_X1_HW1_LAST","R_TILEGX_IMM16_X0_HW2_LAST","R_TILEGX_IMM16_X1_HW2_LAST","R_TILEGX_IMM16_X0_HW0_PCREL","R_TILEGX_IMM16_X1_HW0_PCREL","R_TILEGX_IMM16_X0_HW1_PCREL","R_TILEGX_IMM16_X1_HW1_PCREL","R_TILEGX_IMM16_X0_HW2_PCREL","R_TILEGX_IMM16_X1_HW2_PCREL","R_TILEGX_IMM16_X0_HW3_PCREL","R_TILEGX_IMM16_X1_HW3_PCREL","R_TILEGX_IMM16_X0_HW0_LAST_PCREL","R_TILEGX_IMM16_X1_HW0_LAST_PCREL","R_TILEGX_IMM16_X0_HW1_LAST_PCREL","R_TILEGX_IMM16_X1_HW1_LAST_PCREL","R_TILEGX_IMM16_X0_HW2_LAST_PCREL","R_TILEGX_IMM16_X1_HW2_LAST_PCREL","R_TILEGX_IMM16_X0_HW0_GOT","R_TILEGX_IMM16_X1_HW0_GOT","R_TILEGX_IMM16_X0_HW0_PLT_PCREL","R_TILEGX_IMM16_X1_HW0_PLT_PCREL","R_TILEGX_IMM16_X0_HW1_PLT_PCREL","R_TILEGX_IMM16_X1_HW1_PLT_PCREL","R_TILEGX_IMM16_X0_HW2_PLT_PCREL","R_TILEGX_IMM16_X1_HW2_PLT_PCREL","R_TILEGX_IMM16_X0_HW0_LAST_GOT","R_TILEGX_IMM16_X1_HW0_LAST_GOT","R_TILEGX_IMM16_X0_HW1_LAST_GOT","R_TILEGX_IMM16_X1_HW1_LAST_GOT","R_TILEGX_IMM16_X0_HW3_PLT_PCREL","R_TILEGX_IMM16_X1_HW3_PLT_PCREL","R_TILEGX_IMM16_X0_HW0_TLS_GD","R_TILEGX_IMM16_X1_HW0_TLS_GD","R_TILEGX_IMM16_X0_HW0_TLS_LE","R_TILEGX_IMM16_X1_HW0_TLS_LE","R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","R_TILEGX_IMM16_X0_HW0_TLS_IE","R_TILEGX_IMM16_X1_HW0_TLS_IE","R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","R_TILEGX_TLS_DTPMOD64","R_TILEGX_TLS_DTPOFF64","R_TILEGX_TLS_TPOFF64","R_TILEGX_TLS_DTPMOD32","R_TILEGX_TLS_DTPOFF32","R_TILEGX_TLS_TPOFF32","R_TILEGX_TLS_GD_CALL","R_TILEGX_IMM8_X0_TLS_GD_ADD","R_TILEGX_IMM8_X1_TLS_GD_ADD","R_TILEGX_IMM8_Y0_TLS_GD_ADD","R_TILEGX_IMM8_Y1_TLS_GD_ADD","R_TILEGX_TLS_IE_LOAD","R_TILEGX_IMM8_X0_TLS_ADD","R_TILEGX_IMM8_X1_TLS_ADD","R_TILEGX_IMM8_Y0_TLS_ADD","R_TILEGX_IMM8_Y1_TLS_ADD","R_TILEGX_GNU_VTINHERIT","R_TILEGX_GNU_VTENTRY","EF_RISCV_RVC","EF_RISCV_FLOAT_ABI","EF_RISCV_FLOAT_ABI_SOFT","EF_RISCV_FLOAT_ABI_SINGLE","EF_RISCV_FLOAT_ABI_DOUBLE","EF_RISCV_FLOAT_ABI_QUAD","R_RISCV_NONE","R_RISCV_32","R_RISCV_64","R_RISCV_RELATIVE","R_RISCV_COPY","R_RISCV_JUMP_SLOT","R_RISCV_TLS_DTPMOD32","R_RISCV_TLS_DTPMOD64","R_RISCV_TLS_DTPREL32","R_RISCV_TLS_DTPREL64","R_RISCV_TLS_TPREL32","R_RISCV_TLS_TPREL64","R_RISCV_BRANCH","R_RISCV_JAL","R_RISCV_CALL","R_RISCV_CALL_PLT","R_RISCV_GOT_HI20","R_RISCV_TLS_GOT_HI20","R_RISCV_TLS_GD_HI20","R_RISCV_PCREL_HI20","R_RISCV_PCREL_LO12_I","R_RISCV_PCREL_LO12_S","R_RISCV_HI20","R_RISCV_LO12_I","R_RISCV_LO12_S","R_RISCV_TPREL_HI20","R_RISCV_TPREL_LO12_I","R_RISCV_TPREL_LO12_S","R_RISCV_TPREL_ADD","R_RISCV_ADD8","R_RISCV_ADD16","R_RISCV_ADD32","R_RISCV_ADD64","R_RISCV_SUB8","R_RISCV_SUB16","R_RISCV_SUB32","R_RISCV_SUB64","R_RISCV_GNU_VTINHERIT","R_RISCV_GNU_VTENTRY","R_RISCV_ALIGN","R_RISCV_RVC_BRANCH","R_RISCV_RVC_JUMP","R_RISCV_RVC_LUI","R_RISCV_GPREL_I","R_RISCV_GPREL_S","R_RISCV_TPREL_I","R_RISCV_TPREL_S","R_RISCV_RELAX","R_RISCV_SUB6","R_RISCV_SET6","R_RISCV_SET8","R_RISCV_SET16","R_RISCV_SET32","R_RISCV_32_PCREL","R_BPF_NONE","R_BPF_64_64","R_BPF_64_32","R_METAG_HIADDR16","R_METAG_LOADDR16","R_METAG_ADDR32","R_METAG_NONE","R_METAG_RELBRANCH","R_METAG_GETSETOFF","R_METAG_REG32OP1","R_METAG_REG32OP2","R_METAG_REG32OP3","R_METAG_REG16OP1","R_METAG_REG16OP2","R_METAG_REG16OP3","R_METAG_REG32OP4","R_METAG_HIOG","R_METAG_LOOG","R_METAG_REL8","R_METAG_REL16","R_METAG_GNU_VTINHERIT","R_METAG_GNU_VTENTRY","R_METAG_HI16_GOTOFF","R_METAG_LO16_GOTOFF","R_METAG_GETSET_GOTOFF","R_METAG_GETSET_GOT","R_METAG_HI16_GOTPC","R_METAG_LO16_GOTPC","R_METAG_HI16_PLT","R_METAG_LO16_PLT","R_METAG_RELBRANCH_PLT","R_METAG_GOTOFF","R_METAG_PLT","R_METAG_COPY","R_METAG_JMP_SLOT","R_METAG_RELATIVE","R_METAG_GLOB_DAT","R_METAG_TLS_GD","R_METAG_TLS_LDM","R_METAG_TLS_LDO_HI16","R_METAG_TLS_LDO_LO16","R_METAG_TLS_LDO","R_METAG_TLS_IE","R_METAG_TLS_IENONPIC","R_METAG_TLS_IENONPIC_HI16","R_METAG_TLS_IENONPIC_LO16","R_METAG_TLS_TPOFF","R_METAG_TLS_DTPMOD","R_METAG_TLS_DTPOFF","R_METAG_TLS_LE","R_METAG_TLS_LE_HI16","R_METAG_TLS_LE_LO16","R_NDS32_NONE","R_NDS32_32_RELA","R_NDS32_COPY","R_NDS32_GLOB_DAT","R_NDS32_JMP_SLOT","R_NDS32_RELATIVE","R_NDS32_TLS_TPOFF","R_NDS32_TLS_DESC","macho","CPU_ARCH_MASK","CPU_ARCH_ABI64","CPU_ARCH_ABI64_32","CPU_TYPE_ANY","CPU_TYPE_VAX","CPU_TYPE_MC680X0","CPU_TYPE_X86","CPU_TYPE_X86_64","CPU_TYPE_MIPS","CPU_TYPE_MC98000","CPU_TYPE_HPPA","CPU_TYPE_ARM","CPU_TYPE_ARM64","CPU_TYPE_ARM64_32","CPU_TYPE_MC88000","CPU_TYPE_SPARC","CPU_TYPE_I860","CPU_TYPE_ALPHA","CPU_TYPE_POWERPC","CPU_TYPE_POWERPC64","CPU_SUBTYPE_MASK","CPU_SUBTYPE_LIB64","CPU_SUBTYPE_MULTIPLE","CPU_SUBTYPE_LITTLE_ENDIAN","CPU_SUBTYPE_BIG_ENDIAN","CPU_SUBTYPE_VAX_ALL","CPU_SUBTYPE_VAX780","CPU_SUBTYPE_VAX785","CPU_SUBTYPE_VAX750","CPU_SUBTYPE_VAX730","CPU_SUBTYPE_UVAXI","CPU_SUBTYPE_UVAXII","CPU_SUBTYPE_VAX8200","CPU_SUBTYPE_VAX8500","CPU_SUBTYPE_VAX8600","CPU_SUBTYPE_VAX8650","CPU_SUBTYPE_VAX8800","CPU_SUBTYPE_UVAXIII","CPU_SUBTYPE_MC680X0_ALL","CPU_SUBTYPE_MC68030","CPU_SUBTYPE_MC68040","CPU_SUBTYPE_MC68030_ONLY","cpu_subtype_intel","CPU_SUBTYPE_I386_ALL","CPU_SUBTYPE_386","CPU_SUBTYPE_486","CPU_SUBTYPE_486SX","CPU_SUBTYPE_586","CPU_SUBTYPE_PENT","CPU_SUBTYPE_PENTPRO","CPU_SUBTYPE_PENTII_M3","CPU_SUBTYPE_PENTII_M5","CPU_SUBTYPE_CELERON","CPU_SUBTYPE_CELERON_MOBILE","CPU_SUBTYPE_PENTIUM_3","CPU_SUBTYPE_PENTIUM_3_M","CPU_SUBTYPE_PENTIUM_3_XEON","CPU_SUBTYPE_PENTIUM_M","CPU_SUBTYPE_PENTIUM_4","CPU_SUBTYPE_PENTIUM_4_M","CPU_SUBTYPE_ITANIUM","CPU_SUBTYPE_ITANIUM_2","CPU_SUBTYPE_XEON","CPU_SUBTYPE_XEON_MP","cpu_subtype_intel_family","CPU_SUBTYPE_INTEL_FAMILY_MAX","cpu_subtype_intel_model","CPU_SUBTYPE_INTEL_MODEL_ALL","CPU_SUBTYPE_X86_ALL","CPU_SUBTYPE_X86_64_ALL","CPU_SUBTYPE_X86_ARCH1","CPU_SUBTYPE_X86_64_H","CPU_SUBTYPE_MIPS_ALL","CPU_SUBTYPE_MIPS_R2300","CPU_SUBTYPE_MIPS_R2600","CPU_SUBTYPE_MIPS_R2800","CPU_SUBTYPE_MIPS_R2000A","CPU_SUBTYPE_MIPS_R2000","CPU_SUBTYPE_MIPS_R3000A","CPU_SUBTYPE_MIPS_R3000","CPU_SUBTYPE_MC98000_ALL","CPU_SUBTYPE_MC98601","CPU_SUBTYPE_HPPA_ALL","CPU_SUBTYPE_HPPA_7100LC","CPU_SUBTYPE_MC88000_ALL","CPU_SUBTYPE_MC88100","CPU_SUBTYPE_MC88110","CPU_SUBTYPE_SPARC_ALL","CPU_SUBTYPE_I860_ALL","CPU_SUBTYPE_I860_860","CPU_SUBTYPE_POWERPC_ALL","CPU_SUBTYPE_POWERPC_601","CPU_SUBTYPE_POWERPC_602","CPU_SUBTYPE_POWERPC_603","CPU_SUBTYPE_POWERPC_603E","CPU_SUBTYPE_POWERPC_603EV","CPU_SUBTYPE_POWERPC_604","CPU_SUBTYPE_POWERPC_604E","CPU_SUBTYPE_POWERPC_620","CPU_SUBTYPE_POWERPC_750","CPU_SUBTYPE_POWERPC_7400","CPU_SUBTYPE_POWERPC_7450","CPU_SUBTYPE_POWERPC_970","CPU_SUBTYPE_ARM_ALL","CPU_SUBTYPE_ARM_V4T","CPU_SUBTYPE_ARM_V6","CPU_SUBTYPE_ARM_V5TEJ","CPU_SUBTYPE_ARM_XSCALE","CPU_SUBTYPE_ARM_V7","CPU_SUBTYPE_ARM_V7F","CPU_SUBTYPE_ARM_V7S","CPU_SUBTYPE_ARM_V7K","CPU_SUBTYPE_ARM_V6M","CPU_SUBTYPE_ARM_V7M","CPU_SUBTYPE_ARM_V7EM","CPU_SUBTYPE_ARM_V8","CPU_SUBTYPE_ARM64_ALL","CPU_SUBTYPE_ARM64_V8","CPU_SUBTYPE_ARM64E","CPU_SUBTYPE_ARM64_32_ALL","CPU_SUBTYPE_ARM64_32_V8","VM_PROT_READ","VM_PROT_WRITE","VM_PROT_EXECUTE","FAT_MAGIC","FAT_CIGAM","FatHeader","magic","nfat_arch","FatArch32","cputype","cpusubtype","offset","size","align","FAT_MAGIC_64","FAT_CIGAM_64","FatArch64","cputype","cpusubtype","offset","size","align","reserved","MachHeader32","magic","cputype","cpusubtype","filetype","ncmds","sizeofcmds","flags","MH_MAGIC","MH_CIGAM","MachHeader64","magic","cputype","cpusubtype","filetype","ncmds","sizeofcmds","flags","reserved","MH_MAGIC_64","MH_CIGAM_64","MH_OBJECT","MH_EXECUTE","MH_FVMLIB","MH_CORE","MH_PRELOAD","MH_DYLIB","MH_DYLINKER","MH_BUNDLE","MH_DYLIB_STUB","MH_DSYM","MH_KEXT_BUNDLE","MH_NOUNDEFS","MH_INCRLINK","MH_DYLDLINK","MH_BINDATLOAD","MH_PREBOUND","MH_SPLIT_SEGS","MH_LAZY_INIT","MH_TWOLEVEL","MH_FORCE_FLAT","MH_NOMULTIDEFS","MH_NOFIXPREBINDING","MH_PREBINDABLE","MH_ALLMODSBOUND","MH_SUBSECTIONS_VIA_SYMBOLS","MH_CANONICAL","MH_WEAK_DEFINES","MH_BINDS_TO_WEAK","MH_ALLOW_STACK_EXECUTION","MH_ROOT_SAFE","MH_SETUID_SAFE","MH_NO_REEXPORTED_DYLIBS","MH_PIE","MH_DEAD_STRIPPABLE_DYLIB","MH_HAS_TLV_DESCRIPTORS","MH_NO_HEAP_EXECUTION","MH_APP_EXTENSION_SAFE","MH_NLIST_OUTOFSYNC_WITH_DYLDINFO","MH_SIM_SUPPORT","LoadCommand","cmd","cmdsize","LC_REQ_DYLD","LC_SEGMENT","LC_SYMTAB","LC_SYMSEG","LC_THREAD","LC_UNIXTHREAD","LC_LOADFVMLIB","LC_IDFVMLIB","LC_IDENT","LC_FVMFILE","LC_PREPAGE","LC_DYSYMTAB","LC_LOAD_DYLIB","LC_ID_DYLIB","LC_LOAD_DYLINKER","LC_ID_DYLINKER","LC_PREBOUND_DYLIB","LC_ROUTINES","LC_SUB_FRAMEWORK","LC_SUB_UMBRELLA","LC_SUB_CLIENT","LC_SUB_LIBRARY","LC_TWOLEVEL_HINTS","LC_PREBIND_CKSUM","LC_LOAD_WEAK_DYLIB","LC_SEGMENT_64","LC_ROUTINES_64","LC_UUID","LC_RPATH","LC_CODE_SIGNATURE","LC_SEGMENT_SPLIT_INFO","LC_REEXPORT_DYLIB","LC_LAZY_LOAD_DYLIB","LC_ENCRYPTION_INFO","LC_DYLD_INFO","LC_DYLD_INFO_ONLY","LC_LOAD_UPWARD_DYLIB","LC_VERSION_MIN_MACOSX","LC_VERSION_MIN_IPHONEOS","LC_FUNCTION_STARTS","LC_DYLD_ENVIRONMENT","LC_MAIN","LC_DATA_IN_CODE","LC_SOURCE_VERSION","LC_DYLIB_CODE_SIGN_DRS","LC_ENCRYPTION_INFO_64","LC_LINKER_OPTION","LC_LINKER_OPTIMIZATION_HINT","LC_VERSION_MIN_TVOS","LC_VERSION_MIN_WATCHOS","LC_NOTE","LC_BUILD_VERSION","LC_DYLD_EXPORTS_TRIE","LC_DYLD_CHAINED_FIXUPS","LcStr","offset","SegmentCommand32","cmd","cmdsize","segname","vmaddr","vmsize","fileoff","filesize","maxprot","initprot","nsects","flags","SegmentCommand64","cmd","cmdsize","segname","vmaddr","vmsize","fileoff","filesize","maxprot","initprot","nsects","flags","SG_HIGHVM","SG_FVMLIB","SG_NORELOC","SG_PROTECTED_VERSION_1","SG_READ_ONLY","Section32","sectname","segname","addr","size","offset","align","reloff","nreloc","flags","reserved1","reserved2","Section64","sectname","segname","addr","size","offset","align","reloff","nreloc","flags","reserved1","reserved2","reserved3","SECTION_TYPE","SECTION_ATTRIBUTES","S_REGULAR","S_ZEROFILL","S_CSTRING_LITERALS","S_4BYTE_LITERALS","S_8BYTE_LITERALS","S_LITERAL_POINTERS","S_NON_LAZY_SYMBOL_POINTERS","S_LAZY_SYMBOL_POINTERS","S_SYMBOL_STUBS","S_MOD_INIT_FUNC_POINTERS","S_MOD_TERM_FUNC_POINTERS","S_COALESCED","S_GB_ZEROFILL","S_INTERPOSING","S_16BYTE_LITERALS","S_DTRACE_DOF","S_LAZY_DYLIB_SYMBOL_POINTERS","S_THREAD_LOCAL_REGULAR","S_THREAD_LOCAL_ZEROFILL","S_THREAD_LOCAL_VARIABLES","S_THREAD_LOCAL_VARIABLE_POINTERS","S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","S_INIT_FUNC_OFFSETS","SECTION_ATTRIBUTES_USR","S_ATTR_PURE_INSTRUCTIONS","S_ATTR_NO_TOC","S_ATTR_STRIP_STATIC_SYMS","S_ATTR_NO_DEAD_STRIP","S_ATTR_LIVE_SUPPORT","S_ATTR_SELF_MODIFYING_CODE","S_ATTR_DEBUG","SECTION_ATTRIBUTES_SYS","S_ATTR_SOME_INSTRUCTIONS","S_ATTR_EXT_RELOC","S_ATTR_LOC_RELOC","SEG_PAGEZERO","SEG_TEXT","SECT_TEXT","SECT_FVMLIB_INIT0","SECT_FVMLIB_INIT1","SEG_DATA","SECT_DATA","SECT_BSS","SECT_COMMON","SEG_OBJC","SECT_OBJC_SYMBOLS","SECT_OBJC_MODULES","SECT_OBJC_STRINGS","SECT_OBJC_REFS","SEG_ICON","SECT_ICON_HEADER","SECT_ICON_TIFF","SEG_LINKEDIT","SEG_UNIXSTACK","SEG_IMPORT","Fvmlib","name","minor_version","header_addr","FvmlibCommand","cmd","cmdsize","fvmlib","Dylib","name","timestamp","current_version","compatibility_version","DylibCommand","cmd","cmdsize","dylib","SubFrameworkCommand","cmd","cmdsize","umbrella","SubClientCommand","cmd","cmdsize","client","SubUmbrellaCommand","cmd","cmdsize","sub_umbrella","SubLibraryCommand","cmd","cmdsize","sub_library","PreboundDylibCommand","cmd","cmdsize","name","nmodules","linked_modules","DylinkerCommand","cmd","cmdsize","name","ThreadCommand","cmd","cmdsize","RoutinesCommand","cmd","cmdsize","init_address","init_module","reserved1","reserved2","reserved3","reserved4","reserved5","reserved6","RoutinesCommand_64","cmd","cmdsize","init_address","init_module","reserved1","reserved2","reserved3","reserved4","reserved5","reserved6","SymtabCommand","cmd","cmdsize","symoff","nsyms","stroff","strsize","DysymtabCommand","cmd","cmdsize","ilocalsym","nlocalsym","iextdefsym","nextdefsym","iundefsym","nundefsym","tocoff","ntoc","modtaboff","nmodtab","extrefsymoff","nextrefsyms","indirectsymoff","nindirectsyms","extreloff","nextrel","locreloff","nlocrel","INDIRECT_SYMBOL_LOCAL","INDIRECT_SYMBOL_ABS","DylibTableOfContents","symbol_index","module_index","DylibModule32","module_name","iextdefsym","nextdefsym","irefsym","nrefsym","ilocalsym","nlocalsym","iextrel","nextrel","iinit_iterm","ninit_nterm","objc_module_info_addr","objc_module_info_size","DylibModule64","module_name","iextdefsym","nextdefsym","irefsym","nrefsym","ilocalsym","nlocalsym","iextrel","nextrel","iinit_iterm","ninit_nterm","objc_module_info_size","objc_module_info_addr","DylibReference","bitfield","TwolevelHintsCommand","cmd","cmdsize","offset","nhints","TwolevelHint","bitfield","PrebindCksumCommand","cmd","cmdsize","cksum","UuidCommand","cmd","cmdsize","uuid","RpathCommand","cmd","cmdsize","path","LinkeditDataCommand","cmd","cmdsize","dataoff","datasize","EncryptionInfoCommand","cmd","cmdsize","cryptoff","cryptsize","cryptid","EncryptionInfoCommand64","cmd","cmdsize","cryptoff","cryptsize","cryptid","pad","VersionMinCommand","cmd","cmdsize","version","sdk","BuildVersionCommand","cmd","cmdsize","platform","minos","sdk","ntools","BuildToolVersion","tool","version","PLATFORM_MACOS","PLATFORM_IOS","PLATFORM_TVOS","PLATFORM_WATCHOS","PLATFORM_BRIDGEOS","PLATFORM_IOSMAC","PLATFORM_IOSSIMULATOR","PLATFORM_TVOSSIMULATOR","PLATFORM_WATCHOSSIMULATOR","TOOL_CLANG","TOOL_SWIFT","TOOL_LD","DyldInfoCommand","cmd","cmdsize","rebase_off","rebase_size","bind_off","bind_size","weak_bind_off","weak_bind_size","lazy_bind_off","lazy_bind_size","export_off","export_size","REBASE_TYPE_POINTER","REBASE_TYPE_TEXT_ABSOLUTE32","REBASE_TYPE_TEXT_PCREL32","REBASE_OPCODE_MASK","REBASE_IMMEDIATE_MASK","REBASE_OPCODE_DONE","REBASE_OPCODE_SET_TYPE_IMM","REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","REBASE_OPCODE_ADD_ADDR_ULEB","REBASE_OPCODE_ADD_ADDR_IMM_SCALED","REBASE_OPCODE_DO_REBASE_IMM_TIMES","REBASE_OPCODE_DO_REBASE_ULEB_TIMES","REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","BIND_TYPE_POINTER","BIND_TYPE_TEXT_ABSOLUTE32","BIND_TYPE_TEXT_PCREL32","BIND_SPECIAL_DYLIB_SELF","BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","BIND_SPECIAL_DYLIB_FLAT_LOOKUP","BIND_SPECIAL_DYLIB_WEAK_LOOKUP","BIND_SYMBOL_FLAGS_WEAK_IMPORT","BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","BIND_OPCODE_MASK","BIND_IMMEDIATE_MASK","BIND_OPCODE_DONE","BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","BIND_OPCODE_SET_TYPE_IMM","BIND_OPCODE_SET_ADDEND_SLEB","BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","BIND_OPCODE_ADD_ADDR_ULEB","BIND_OPCODE_DO_BIND","BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","BIND_OPCODE_THREADED","BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB","BIND_SUBOPCODE_THREADED_APPLY","EXPORT_SYMBOL_FLAGS_KIND_MASK","EXPORT_SYMBOL_FLAGS_KIND_REGULAR","EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","EXPORT_SYMBOL_FLAGS_REEXPORT","EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","LinkerOptionCommand","cmd","cmdsize","count","SymSegCommand","cmd","cmdsize","offset","size","IdentCommand","cmd","cmdsize","FvmfileCommand","cmd","cmdsize","name","header_addr","EntryPointCommand","cmd","cmdsize","entryoff","stacksize","SourceVersionCommand","cmd","cmdsize","version","DataInCodeEntry","offset","length","kind","DICE_KIND_DATA","DICE_KIND_JUMP_TABLE8","DICE_KIND_JUMP_TABLE16","DICE_KIND_JUMP_TABLE32","DICE_KIND_ABS_JUMP_TABLE32","NoteCommand","cmd","cmdsize","data_owner","offset","size","Nlist32","n_strx","n_type","n_sect","n_desc","n_value","Nlist64","n_strx","n_type","n_sect","n_desc","n_value","N_STAB","N_PEXT","N_TYPE","N_EXT","N_UNDF","N_ABS","N_SECT","N_PBUD","N_INDR","NO_SECT","MAX_SECT","REFERENCE_TYPE","REFERENCE_FLAG_UNDEFINED_NON_LAZY","REFERENCE_FLAG_UNDEFINED_LAZY","REFERENCE_FLAG_DEFINED","REFERENCE_FLAG_PRIVATE_DEFINED","REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","REFERENCED_DYNAMICALLY","SELF_LIBRARY_ORDINAL","MAX_LIBRARY_ORDINAL","DYNAMIC_LOOKUP_ORDINAL","EXECUTABLE_ORDINAL","N_NO_DEAD_STRIP","N_DESC_DISCARDED","N_WEAK_REF","N_WEAK_DEF","N_REF_TO_WEAK","N_ARM_THUMB_DEF","N_SYMBOL_RESOLVER","N_ALT_ENTRY","N_GSYM","N_FNAME","N_FUN","N_STSYM","N_LCSYM","N_BNSYM","N_AST","N_OPT","N_RSYM","N_SLINE","N_ENSYM","N_SSYM","N_SO","N_OSO","N_LSYM","N_BINCL","N_SOL","N_PARAMS","N_VERSION","N_OLEVEL","N_PSYM","N_EINCL","N_ENTRY","N_LBRAC","N_EXCL","N_RBRAC","N_BCOMM","N_ECOMM","N_ECOML","N_LENG","N_PC","Relocation","r_word0","r_word1","r_scattered","info","scattered_info","RelocationInfo","r_address","r_symbolnum","r_pcrel","r_length","r_extern","r_type","relocation","R_ABS","R_SCATTERED","ScatteredRelocationInfo","r_address","r_type","r_length","r_pcrel","r_value","relocation","GENERIC_RELOC_VANILLA","GENERIC_RELOC_PAIR","GENERIC_RELOC_SECTDIFF","GENERIC_RELOC_PB_LA_PTR","GENERIC_RELOC_LOCAL_SECTDIFF","GENERIC_RELOC_TLV","ARM_RELOC_VANILLA","ARM_RELOC_PAIR","ARM_RELOC_SECTDIFF","ARM_RELOC_LOCAL_SECTDIFF","ARM_RELOC_PB_LA_PTR","ARM_RELOC_BR24","ARM_THUMB_RELOC_BR22","ARM_THUMB_32BIT_BRANCH","ARM_RELOC_HALF","ARM_RELOC_HALF_SECTDIFF","ARM64_RELOC_UNSIGNED","ARM64_RELOC_SUBTRACTOR","ARM64_RELOC_BRANCH26","ARM64_RELOC_PAGE21","ARM64_RELOC_PAGEOFF12","ARM64_RELOC_GOT_LOAD_PAGE21","ARM64_RELOC_GOT_LOAD_PAGEOFF12","ARM64_RELOC_POINTER_TO_GOT","ARM64_RELOC_TLVP_LOAD_PAGE21","ARM64_RELOC_TLVP_LOAD_PAGEOFF12","ARM64_RELOC_ADDEND","ARM64_RELOC_AUTHENTICATED_POINTER","PPC_RELOC_VANILLA","PPC_RELOC_PAIR","PPC_RELOC_BR14","PPC_RELOC_BR24","PPC_RELOC_HI16","PPC_RELOC_LO16","PPC_RELOC_HA16","PPC_RELOC_LO14","PPC_RELOC_SECTDIFF","PPC_RELOC_PB_LA_PTR","PPC_RELOC_HI16_SECTDIFF","PPC_RELOC_LO16_SECTDIFF","PPC_RELOC_HA16_SECTDIFF","PPC_RELOC_JBSR","PPC_RELOC_LO14_SECTDIFF","PPC_RELOC_LOCAL_SECTDIFF","X86_64_RELOC_UNSIGNED","X86_64_RELOC_SIGNED","X86_64_RELOC_BRANCH","X86_64_RELOC_GOT_LOAD","X86_64_RELOC_GOT","X86_64_RELOC_SUBTRACTOR","X86_64_RELOC_SIGNED_1","X86_64_RELOC_SIGNED_2","X86_64_RELOC_SIGNED_4","X86_64_RELOC_TLV","pe","IMAGE_DOS_SIGNATURE","IMAGE_OS2_SIGNATURE","IMAGE_OS2_SIGNATURE_LE","IMAGE_VXD_SIGNATURE","IMAGE_NT_SIGNATURE","ImageDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","ImageOs2Header","ne_magic","ne_ver","ne_rev","ne_enttab","ne_cbenttab","ne_crc","ne_flags","ne_autodata","ne_heap","ne_stack","ne_csip","ne_sssp","ne_cseg","ne_cmod","ne_cbnrestab","ne_segtab","ne_rsrctab","ne_restab","ne_modtab","ne_imptab","ne_nrestab","ne_cmovent","ne_align","ne_cres","ne_exetyp","ne_flagsothers","ne_pretthunks","ne_psegrefbytes","ne_swaparea","ne_expver","ImageVxdHeader","e32_magic","e32_border","e32_worder","e32_level","e32_cpu","e32_os","e32_ver","e32_mflags","e32_mpages","e32_startobj","e32_eip","e32_stackobj","e32_esp","e32_pagesize","e32_lastpagesize","e32_fixupsize","e32_fixupsum","e32_ldrsize","e32_ldrsum","e32_objtab","e32_objcnt","e32_objmap","e32_itermap","e32_rsrctab","e32_rsrccnt","e32_restab","e32_enttab","e32_dirtab","e32_dircnt","e32_fpagetab","e32_frectab","e32_impmod","e32_impmodcnt","e32_impproc","e32_pagesum","e32_datapage","e32_preload","e32_nrestab","e32_cbnrestab","e32_nressum","e32_autodata","e32_debuginfo","e32_debuglen","e32_instpreload","e32_instdemand","e32_heapsize","e32_res3","e32_winresoff","e32_winreslen","e32_devid","e32_ddkver","ImageFileHeader","machine","number_of_sections","time_date_stamp","pointer_to_symbol_table","number_of_symbols","size_of_optional_header","characteristics","IMAGE_SIZEOF_FILE_HEADER","IMAGE_FILE_RELOCS_STRIPPED","IMAGE_FILE_EXECUTABLE_IMAGE","IMAGE_FILE_LINE_NUMS_STRIPPED","IMAGE_FILE_LOCAL_SYMS_STRIPPED","IMAGE_FILE_AGGRESIVE_WS_TRIM","IMAGE_FILE_LARGE_ADDRESS_AWARE","IMAGE_FILE_BYTES_REVERSED_LO","IMAGE_FILE_32BIT_MACHINE","IMAGE_FILE_DEBUG_STRIPPED","IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","IMAGE_FILE_NET_RUN_FROM_SWAP","IMAGE_FILE_SYSTEM","IMAGE_FILE_DLL","IMAGE_FILE_UP_SYSTEM_ONLY","IMAGE_FILE_BYTES_REVERSED_HI","IMAGE_FILE_MACHINE_UNKNOWN","IMAGE_FILE_MACHINE_TARGET_HOST","IMAGE_FILE_MACHINE_I386","IMAGE_FILE_MACHINE_R3000","IMAGE_FILE_MACHINE_R4000","IMAGE_FILE_MACHINE_R10000","IMAGE_FILE_MACHINE_WCEMIPSV2","IMAGE_FILE_MACHINE_ALPHA","IMAGE_FILE_MACHINE_SH3","IMAGE_FILE_MACHINE_SH3DSP","IMAGE_FILE_MACHINE_SH3E","IMAGE_FILE_MACHINE_SH4","IMAGE_FILE_MACHINE_SH5","IMAGE_FILE_MACHINE_ARM","IMAGE_FILE_MACHINE_THUMB","IMAGE_FILE_MACHINE_ARMNT","IMAGE_FILE_MACHINE_AM33","IMAGE_FILE_MACHINE_POWERPC","IMAGE_FILE_MACHINE_POWERPCFP","IMAGE_FILE_MACHINE_IA64","IMAGE_FILE_MACHINE_MIPS16","IMAGE_FILE_MACHINE_ALPHA64","IMAGE_FILE_MACHINE_MIPSFPU","IMAGE_FILE_MACHINE_MIPSFPU16","IMAGE_FILE_MACHINE_AXP64","IMAGE_FILE_MACHINE_TRICORE","IMAGE_FILE_MACHINE_CEF","IMAGE_FILE_MACHINE_EBC","IMAGE_FILE_MACHINE_AMD64","IMAGE_FILE_MACHINE_M32R","IMAGE_FILE_MACHINE_ARM64","IMAGE_FILE_MACHINE_CEE","ImageDataDirectory","virtual_address","size","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageOptionalHeader32","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","base_of_data","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","ImageRomOptionalHeader","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","base_of_data","base_of_bss","gpr_mask","cpr_mask","gp_value","ImageOptionalHeader64","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","IMAGE_ROM_OPTIONAL_HDR_MAGIC","ImageNtHeaders64","signature","file_header","optional_header","ImageNtHeaders32","signature","file_header","optional_header","ImageRomHeaders","file_header","optional_header","IMAGE_SUBSYSTEM_UNKNOWN","IMAGE_SUBSYSTEM_NATIVE","IMAGE_SUBSYSTEM_WINDOWS_GUI","IMAGE_SUBSYSTEM_WINDOWS_CUI","IMAGE_SUBSYSTEM_OS2_CUI","IMAGE_SUBSYSTEM_POSIX_CUI","IMAGE_SUBSYSTEM_NATIVE_WINDOWS","IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","IMAGE_SUBSYSTEM_EFI_APPLICATION","IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","IMAGE_SUBSYSTEM_EFI_ROM","IMAGE_SUBSYSTEM_XBOX","IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","IMAGE_DLLCHARACTERISTICS_NX_COMPAT","IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","IMAGE_DLLCHARACTERISTICS_NO_SEH","IMAGE_DLLCHARACTERISTICS_NO_BIND","IMAGE_DLLCHARACTERISTICS_APPCONTAINER","IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","IMAGE_DLLCHARACTERISTICS_GUARD_CF","IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","IMAGE_DIRECTORY_ENTRY_EXPORT","IMAGE_DIRECTORY_ENTRY_IMPORT","IMAGE_DIRECTORY_ENTRY_RESOURCE","IMAGE_DIRECTORY_ENTRY_EXCEPTION","IMAGE_DIRECTORY_ENTRY_SECURITY","IMAGE_DIRECTORY_ENTRY_BASERELOC","IMAGE_DIRECTORY_ENTRY_DEBUG","IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","IMAGE_DIRECTORY_ENTRY_GLOBALPTR","IMAGE_DIRECTORY_ENTRY_TLS","IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","IMAGE_DIRECTORY_ENTRY_IAT","IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","Guid","data1","data2","data3","data4","ClsId","AnonObjectHeader","sig1","sig2","version","machine","time_date_stamp","class_id","size_of_data","AnonObjectHeaderV2","sig1","sig2","version","machine","time_date_stamp","class_id","size_of_data","flags","meta_data_size","meta_data_offset","AnonObjectHeaderBigobj","sig1","sig2","version","machine","time_date_stamp","class_id","size_of_data","flags","meta_data_size","meta_data_offset","number_of_sections","pointer_to_symbol_table","number_of_symbols","IMAGE_SIZEOF_SHORT_NAME","ImageSectionHeader","name","virtual_size","virtual_address","size_of_raw_data","pointer_to_raw_data","pointer_to_relocations","pointer_to_linenumbers","number_of_relocations","number_of_linenumbers","characteristics","IMAGE_SIZEOF_SECTION_HEADER","IMAGE_SCN_TYPE_NO_PAD","IMAGE_SCN_CNT_CODE","IMAGE_SCN_CNT_INITIALIZED_DATA","IMAGE_SCN_CNT_UNINITIALIZED_DATA","IMAGE_SCN_LNK_OTHER","IMAGE_SCN_LNK_INFO","IMAGE_SCN_LNK_REMOVE","IMAGE_SCN_LNK_COMDAT","IMAGE_SCN_NO_DEFER_SPEC_EXC","IMAGE_SCN_GPREL","IMAGE_SCN_MEM_FARDATA","IMAGE_SCN_MEM_PURGEABLE","IMAGE_SCN_MEM_16BIT","IMAGE_SCN_MEM_LOCKED","IMAGE_SCN_MEM_PRELOAD","IMAGE_SCN_ALIGN_1BYTES","IMAGE_SCN_ALIGN_2BYTES","IMAGE_SCN_ALIGN_4BYTES","IMAGE_SCN_ALIGN_8BYTES","IMAGE_SCN_ALIGN_16BYTES","IMAGE_SCN_ALIGN_32BYTES","IMAGE_SCN_ALIGN_64BYTES","IMAGE_SCN_ALIGN_128BYTES","IMAGE_SCN_ALIGN_256BYTES","IMAGE_SCN_ALIGN_512BYTES","IMAGE_SCN_ALIGN_1024BYTES","IMAGE_SCN_ALIGN_2048BYTES","IMAGE_SCN_ALIGN_4096BYTES","IMAGE_SCN_ALIGN_8192BYTES","IMAGE_SCN_ALIGN_MASK","IMAGE_SCN_LNK_NRELOC_OVFL","IMAGE_SCN_MEM_DISCARDABLE","IMAGE_SCN_MEM_NOT_CACHED","IMAGE_SCN_MEM_NOT_PAGED","IMAGE_SCN_MEM_SHARED","IMAGE_SCN_MEM_EXECUTE","IMAGE_SCN_MEM_READ","IMAGE_SCN_MEM_WRITE","IMAGE_SCN_SCALE_INDEX","ImageSymbol","name","value","section_number","typ","storage_class","number_of_aux_symbols","IMAGE_SIZEOF_SYMBOL","ImageSymbolBytes","0","ImageSymbolEx","name","value","section_number","typ","storage_class","number_of_aux_symbols","IMAGE_SIZEOF_SYMBOL_EX","ImageSymbolExBytes","0","IMAGE_SYM_UNDEFINED","IMAGE_SYM_ABSOLUTE","IMAGE_SYM_DEBUG","IMAGE_SYM_SECTION_MAX","IMAGE_SYM_SECTION_MAX_EX","IMAGE_SYM_TYPE_NULL","IMAGE_SYM_TYPE_VOID","IMAGE_SYM_TYPE_CHAR","IMAGE_SYM_TYPE_SHORT","IMAGE_SYM_TYPE_INT","IMAGE_SYM_TYPE_LONG","IMAGE_SYM_TYPE_FLOAT","IMAGE_SYM_TYPE_DOUBLE","IMAGE_SYM_TYPE_STRUCT","IMAGE_SYM_TYPE_UNION","IMAGE_SYM_TYPE_ENUM","IMAGE_SYM_TYPE_MOE","IMAGE_SYM_TYPE_BYTE","IMAGE_SYM_TYPE_WORD","IMAGE_SYM_TYPE_UINT","IMAGE_SYM_TYPE_DWORD","IMAGE_SYM_TYPE_PCODE","IMAGE_SYM_DTYPE_NULL","IMAGE_SYM_DTYPE_POINTER","IMAGE_SYM_DTYPE_FUNCTION","IMAGE_SYM_DTYPE_ARRAY","IMAGE_SYM_CLASS_END_OF_FUNCTION","IMAGE_SYM_CLASS_NULL","IMAGE_SYM_CLASS_AUTOMATIC","IMAGE_SYM_CLASS_EXTERNAL","IMAGE_SYM_CLASS_STATIC","IMAGE_SYM_CLASS_REGISTER","IMAGE_SYM_CLASS_EXTERNAL_DEF","IMAGE_SYM_CLASS_LABEL","IMAGE_SYM_CLASS_UNDEFINED_LABEL","IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","IMAGE_SYM_CLASS_ARGUMENT","IMAGE_SYM_CLASS_STRUCT_TAG","IMAGE_SYM_CLASS_MEMBER_OF_UNION","IMAGE_SYM_CLASS_UNION_TAG","IMAGE_SYM_CLASS_TYPE_DEFINITION","IMAGE_SYM_CLASS_UNDEFINED_STATIC","IMAGE_SYM_CLASS_ENUM_TAG","IMAGE_SYM_CLASS_MEMBER_OF_ENUM","IMAGE_SYM_CLASS_REGISTER_PARAM","IMAGE_SYM_CLASS_BIT_FIELD","IMAGE_SYM_CLASS_FAR_EXTERNAL","IMAGE_SYM_CLASS_BLOCK","IMAGE_SYM_CLASS_FUNCTION","IMAGE_SYM_CLASS_END_OF_STRUCT","IMAGE_SYM_CLASS_FILE","IMAGE_SYM_CLASS_SECTION","IMAGE_SYM_CLASS_WEAK_EXTERNAL","IMAGE_SYM_CLASS_CLR_TOKEN","N_BTMASK","N_TMASK","N_TMASK1","N_TMASK2","N_BTSHFT","N_TSHIFT","IMAGE_SYM_DTYPE_SHIFT","base_type","derived_type","base_type","derived_type","ImageAuxSymbolTokenDef","aux_type","reserved1","symbol_table_index","reserved2","IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","ImageAuxSymbolFunction","tag_index","total_size","pointer_to_linenumber","pointer_to_next_function","unused","ImageAuxSymbolFunctionBeginEnd","unused1","linenumber","unused2","pointer_to_next_function","unused3","ImageAuxSymbolWeak","weak_default_sym_index","weak_search_type","ImageAuxSymbolSection","length","number_of_relocations","number_of_linenumbers","check_sum","number","selection","reserved","high_number","ImageAuxSymbolCrc","crc","IMAGE_COMDAT_SELECT_NODUPLICATES","IMAGE_COMDAT_SELECT_ANY","IMAGE_COMDAT_SELECT_SAME_SIZE","IMAGE_COMDAT_SELECT_EXACT_MATCH","IMAGE_COMDAT_SELECT_ASSOCIATIVE","IMAGE_COMDAT_SELECT_LARGEST","IMAGE_COMDAT_SELECT_NEWEST","IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","IMAGE_WEAK_EXTERN_SEARCH_ALIAS","IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY","ImageRelocation","virtual_address","symbol_table_index","typ","IMAGE_REL_I386_ABSOLUTE","IMAGE_REL_I386_DIR16","IMAGE_REL_I386_REL16","IMAGE_REL_I386_DIR32","IMAGE_REL_I386_DIR32NB","IMAGE_REL_I386_SEG12","IMAGE_REL_I386_SECTION","IMAGE_REL_I386_SECREL","IMAGE_REL_I386_TOKEN","IMAGE_REL_I386_SECREL7","IMAGE_REL_I386_REL32","IMAGE_REL_MIPS_ABSOLUTE","IMAGE_REL_MIPS_REFHALF","IMAGE_REL_MIPS_REFWORD","IMAGE_REL_MIPS_JMPADDR","IMAGE_REL_MIPS_REFHI","IMAGE_REL_MIPS_REFLO","IMAGE_REL_MIPS_GPREL","IMAGE_REL_MIPS_LITERAL","IMAGE_REL_MIPS_SECTION","IMAGE_REL_MIPS_SECREL","IMAGE_REL_MIPS_SECRELLO","IMAGE_REL_MIPS_SECRELHI","IMAGE_REL_MIPS_TOKEN","IMAGE_REL_MIPS_JMPADDR16","IMAGE_REL_MIPS_REFWORDNB","IMAGE_REL_MIPS_PAIR","IMAGE_REL_ALPHA_ABSOLUTE","IMAGE_REL_ALPHA_REFLONG","IMAGE_REL_ALPHA_REFQUAD","IMAGE_REL_ALPHA_GPREL32","IMAGE_REL_ALPHA_LITERAL","IMAGE_REL_ALPHA_LITUSE","IMAGE_REL_ALPHA_GPDISP","IMAGE_REL_ALPHA_BRADDR","IMAGE_REL_ALPHA_HINT","IMAGE_REL_ALPHA_INLINE_REFLONG","IMAGE_REL_ALPHA_REFHI","IMAGE_REL_ALPHA_REFLO","IMAGE_REL_ALPHA_PAIR","IMAGE_REL_ALPHA_MATCH","IMAGE_REL_ALPHA_SECTION","IMAGE_REL_ALPHA_SECREL","IMAGE_REL_ALPHA_REFLONGNB","IMAGE_REL_ALPHA_SECRELLO","IMAGE_REL_ALPHA_SECRELHI","IMAGE_REL_ALPHA_REFQ3","IMAGE_REL_ALPHA_REFQ2","IMAGE_REL_ALPHA_REFQ1","IMAGE_REL_ALPHA_GPRELLO","IMAGE_REL_ALPHA_GPRELHI","IMAGE_REL_PPC_ABSOLUTE","IMAGE_REL_PPC_ADDR64","IMAGE_REL_PPC_ADDR32","IMAGE_REL_PPC_ADDR24","IMAGE_REL_PPC_ADDR16","IMAGE_REL_PPC_ADDR14","IMAGE_REL_PPC_REL24","IMAGE_REL_PPC_REL14","IMAGE_REL_PPC_TOCREL16","IMAGE_REL_PPC_TOCREL14","IMAGE_REL_PPC_ADDR32NB","IMAGE_REL_PPC_SECREL","IMAGE_REL_PPC_SECTION","IMAGE_REL_PPC_IFGLUE","IMAGE_REL_PPC_IMGLUE","IMAGE_REL_PPC_SECREL16","IMAGE_REL_PPC_REFHI","IMAGE_REL_PPC_REFLO","IMAGE_REL_PPC_PAIR","IMAGE_REL_PPC_SECRELLO","IMAGE_REL_PPC_SECRELHI","IMAGE_REL_PPC_GPREL","IMAGE_REL_PPC_TOKEN","IMAGE_REL_PPC_TYPEMASK","IMAGE_REL_PPC_NEG","IMAGE_REL_PPC_BRTAKEN","IMAGE_REL_PPC_BRNTAKEN","IMAGE_REL_PPC_TOCDEFN","IMAGE_REL_SH3_ABSOLUTE","IMAGE_REL_SH3_DIRECT16","IMAGE_REL_SH3_DIRECT32","IMAGE_REL_SH3_DIRECT8","IMAGE_REL_SH3_DIRECT8_WORD","IMAGE_REL_SH3_DIRECT8_LONG","IMAGE_REL_SH3_DIRECT4","IMAGE_REL_SH3_DIRECT4_WORD","IMAGE_REL_SH3_DIRECT4_LONG","IMAGE_REL_SH3_PCREL8_WORD","IMAGE_REL_SH3_PCREL8_LONG","IMAGE_REL_SH3_PCREL12_WORD","IMAGE_REL_SH3_STARTOF_SECTION","IMAGE_REL_SH3_SIZEOF_SECTION","IMAGE_REL_SH3_SECTION","IMAGE_REL_SH3_SECREL","IMAGE_REL_SH3_DIRECT32_NB","IMAGE_REL_SH3_GPREL4_LONG","IMAGE_REL_SH3_TOKEN","IMAGE_REL_SHM_PCRELPT","IMAGE_REL_SHM_REFLO","IMAGE_REL_SHM_REFHALF","IMAGE_REL_SHM_RELLO","IMAGE_REL_SHM_RELHALF","IMAGE_REL_SHM_PAIR","IMAGE_REL_SH_NOMODE","IMAGE_REL_ARM_ABSOLUTE","IMAGE_REL_ARM_ADDR32","IMAGE_REL_ARM_ADDR32NB","IMAGE_REL_ARM_BRANCH24","IMAGE_REL_ARM_BRANCH11","IMAGE_REL_ARM_TOKEN","IMAGE_REL_ARM_GPREL12","IMAGE_REL_ARM_GPREL7","IMAGE_REL_ARM_BLX24","IMAGE_REL_ARM_BLX11","IMAGE_REL_ARM_SECTION","IMAGE_REL_ARM_SECREL","IMAGE_REL_ARM_MOV32A","IMAGE_REL_ARM_MOV32","IMAGE_REL_ARM_MOV32T","IMAGE_REL_THUMB_MOV32","IMAGE_REL_ARM_BRANCH20T","IMAGE_REL_THUMB_BRANCH20","IMAGE_REL_ARM_BRANCH24T","IMAGE_REL_THUMB_BRANCH24","IMAGE_REL_ARM_BLX23T","IMAGE_REL_THUMB_BLX23","IMAGE_REL_AM_ABSOLUTE","IMAGE_REL_AM_ADDR32","IMAGE_REL_AM_ADDR32NB","IMAGE_REL_AM_CALL32","IMAGE_REL_AM_FUNCINFO","IMAGE_REL_AM_REL32_1","IMAGE_REL_AM_REL32_2","IMAGE_REL_AM_SECREL","IMAGE_REL_AM_SECTION","IMAGE_REL_AM_TOKEN","IMAGE_REL_ARM64_ABSOLUTE","IMAGE_REL_ARM64_ADDR32","IMAGE_REL_ARM64_ADDR32NB","IMAGE_REL_ARM64_BRANCH26","IMAGE_REL_ARM64_PAGEBASE_REL21","IMAGE_REL_ARM64_REL21","IMAGE_REL_ARM64_PAGEOFFSET_12A","IMAGE_REL_ARM64_PAGEOFFSET_12L","IMAGE_REL_ARM64_SECREL","IMAGE_REL_ARM64_SECREL_LOW12A","IMAGE_REL_ARM64_SECREL_HIGH12A","IMAGE_REL_ARM64_SECREL_LOW12L","IMAGE_REL_ARM64_TOKEN","IMAGE_REL_ARM64_SECTION","IMAGE_REL_ARM64_ADDR64","IMAGE_REL_ARM64_BRANCH19","IMAGE_REL_AMD64_ABSOLUTE","IMAGE_REL_AMD64_ADDR64","IMAGE_REL_AMD64_ADDR32","IMAGE_REL_AMD64_ADDR32NB","IMAGE_REL_AMD64_REL32","IMAGE_REL_AMD64_REL32_1","IMAGE_REL_AMD64_REL32_2","IMAGE_REL_AMD64_REL32_3","IMAGE_REL_AMD64_REL32_4","IMAGE_REL_AMD64_REL32_5","IMAGE_REL_AMD64_SECTION","IMAGE_REL_AMD64_SECREL","IMAGE_REL_AMD64_SECREL7","IMAGE_REL_AMD64_TOKEN","IMAGE_REL_AMD64_SREL32","IMAGE_REL_AMD64_PAIR","IMAGE_REL_AMD64_SSPAN32","IMAGE_REL_AMD64_EHANDLER","IMAGE_REL_AMD64_IMPORT_BR","IMAGE_REL_AMD64_IMPORT_CALL","IMAGE_REL_AMD64_CFG_BR","IMAGE_REL_AMD64_CFG_BR_REX","IMAGE_REL_AMD64_CFG_CALL","IMAGE_REL_AMD64_INDIR_BR","IMAGE_REL_AMD64_INDIR_BR_REX","IMAGE_REL_AMD64_INDIR_CALL","IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST","IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST","IMAGE_REL_IA64_ABSOLUTE","IMAGE_REL_IA64_IMM14","IMAGE_REL_IA64_IMM22","IMAGE_REL_IA64_IMM64","IMAGE_REL_IA64_DIR32","IMAGE_REL_IA64_DIR64","IMAGE_REL_IA64_PCREL21B","IMAGE_REL_IA64_PCREL21M","IMAGE_REL_IA64_PCREL21F","IMAGE_REL_IA64_GPREL22","IMAGE_REL_IA64_LTOFF22","IMAGE_REL_IA64_SECTION","IMAGE_REL_IA64_SECREL22","IMAGE_REL_IA64_SECREL64I","IMAGE_REL_IA64_SECREL32","IMAGE_REL_IA64_DIR32NB","IMAGE_REL_IA64_SREL14","IMAGE_REL_IA64_SREL22","IMAGE_REL_IA64_SREL32","IMAGE_REL_IA64_UREL32","IMAGE_REL_IA64_PCREL60X","IMAGE_REL_IA64_PCREL60B","IMAGE_REL_IA64_PCREL60F","IMAGE_REL_IA64_PCREL60I","IMAGE_REL_IA64_PCREL60M","IMAGE_REL_IA64_IMMGPREL64","IMAGE_REL_IA64_TOKEN","IMAGE_REL_IA64_GPREL32","IMAGE_REL_IA64_ADDEND","IMAGE_REL_CEF_ABSOLUTE","IMAGE_REL_CEF_ADDR32","IMAGE_REL_CEF_ADDR64","IMAGE_REL_CEF_ADDR32NB","IMAGE_REL_CEF_SECTION","IMAGE_REL_CEF_SECREL","IMAGE_REL_CEF_TOKEN","IMAGE_REL_CEE_ABSOLUTE","IMAGE_REL_CEE_ADDR32","IMAGE_REL_CEE_ADDR64","IMAGE_REL_CEE_ADDR32NB","IMAGE_REL_CEE_SECTION","IMAGE_REL_CEE_SECREL","IMAGE_REL_CEE_TOKEN","IMAGE_REL_M32R_ABSOLUTE","IMAGE_REL_M32R_ADDR32","IMAGE_REL_M32R_ADDR32NB","IMAGE_REL_M32R_ADDR24","IMAGE_REL_M32R_GPREL16","IMAGE_REL_M32R_PCREL24","IMAGE_REL_M32R_PCREL16","IMAGE_REL_M32R_PCREL8","IMAGE_REL_M32R_REFHALF","IMAGE_REL_M32R_REFHI","IMAGE_REL_M32R_REFLO","IMAGE_REL_M32R_PAIR","IMAGE_REL_M32R_SECTION","IMAGE_REL_M32R_SECREL32","IMAGE_REL_M32R_TOKEN","IMAGE_REL_EBC_ABSOLUTE","IMAGE_REL_EBC_ADDR32NB","IMAGE_REL_EBC_REL32","IMAGE_REL_EBC_SECTION","IMAGE_REL_EBC_SECREL","EMARCH_ENC_I17_IMM7B_INST_WORD_X","EMARCH_ENC_I17_IMM7B_SIZE_X","EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X","EMARCH_ENC_I17_IMM7B_VAL_POS_X","EMARCH_ENC_I17_IMM9D_INST_WORD_X","EMARCH_ENC_I17_IMM9D_SIZE_X","EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X","EMARCH_ENC_I17_IMM9D_VAL_POS_X","EMARCH_ENC_I17_IMM5C_INST_WORD_X","EMARCH_ENC_I17_IMM5C_SIZE_X","EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X","EMARCH_ENC_I17_IMM5C_VAL_POS_X","EMARCH_ENC_I17_IC_INST_WORD_X","EMARCH_ENC_I17_IC_SIZE_X","EMARCH_ENC_I17_IC_INST_WORD_POS_X","EMARCH_ENC_I17_IC_VAL_POS_X","EMARCH_ENC_I17_IMM41A_INST_WORD_X","EMARCH_ENC_I17_IMM41A_SIZE_X","EMARCH_ENC_I17_IMM41A_INST_WORD_POS_X","EMARCH_ENC_I17_IMM41A_VAL_POS_X","EMARCH_ENC_I17_IMM41B_INST_WORD_X","EMARCH_ENC_I17_IMM41B_SIZE_X","EMARCH_ENC_I17_IMM41B_INST_WORD_POS_X","EMARCH_ENC_I17_IMM41B_VAL_POS_X","EMARCH_ENC_I17_IMM41C_INST_WORD_X","EMARCH_ENC_I17_IMM41C_SIZE_X","EMARCH_ENC_I17_IMM41C_INST_WORD_POS_X","EMARCH_ENC_I17_IMM41C_VAL_POS_X","EMARCH_ENC_I17_SIGN_INST_WORD_X","EMARCH_ENC_I17_SIGN_SIZE_X","EMARCH_ENC_I17_SIGN_INST_WORD_POS_X","EMARCH_ENC_I17_SIGN_VAL_POS_X","X3_OPCODE_INST_WORD_X","X3_OPCODE_SIZE_X","X3_OPCODE_INST_WORD_POS_X","X3_OPCODE_SIGN_VAL_POS_X","X3_I_INST_WORD_X","X3_I_SIZE_X","X3_I_INST_WORD_POS_X","X3_I_SIGN_VAL_POS_X","X3_D_WH_INST_WORD_X","X3_D_WH_SIZE_X","X3_D_WH_INST_WORD_POS_X","X3_D_WH_SIGN_VAL_POS_X","X3_IMM20_INST_WORD_X","X3_IMM20_SIZE_X","X3_IMM20_INST_WORD_POS_X","X3_IMM20_SIGN_VAL_POS_X","X3_IMM39_1_INST_WORD_X","X3_IMM39_1_SIZE_X","X3_IMM39_1_INST_WORD_POS_X","X3_IMM39_1_SIGN_VAL_POS_X","X3_IMM39_2_INST_WORD_X","X3_IMM39_2_SIZE_X","X3_IMM39_2_INST_WORD_POS_X","X3_IMM39_2_SIGN_VAL_POS_X","X3_P_INST_WORD_X","X3_P_SIZE_X","X3_P_INST_WORD_POS_X","X3_P_SIGN_VAL_POS_X","X3_TMPLT_INST_WORD_X","X3_TMPLT_SIZE_X","X3_TMPLT_INST_WORD_POS_X","X3_TMPLT_SIGN_VAL_POS_X","X3_BTYPE_QP_INST_WORD_X","X3_BTYPE_QP_SIZE_X","X3_BTYPE_QP_INST_WORD_POS_X","X3_BTYPE_QP_INST_VAL_POS_X","X3_EMPTY_INST_WORD_X","X3_EMPTY_SIZE_X","X3_EMPTY_INST_WORD_POS_X","X3_EMPTY_INST_VAL_POS_X","ImageLinenumber","symbol_table_index_or_virtual_address","linenumber","ImageBaseRelocation","virtual_address","size_of_block","IMAGE_REL_BASED_ABSOLUTE","IMAGE_REL_BASED_HIGH","IMAGE_REL_BASED_LOW","IMAGE_REL_BASED_HIGHLOW","IMAGE_REL_BASED_HIGHADJ","IMAGE_REL_BASED_MACHINE_SPECIFIC_5","IMAGE_REL_BASED_RESERVED","IMAGE_REL_BASED_MACHINE_SPECIFIC_7","IMAGE_REL_BASED_MACHINE_SPECIFIC_8","IMAGE_REL_BASED_MACHINE_SPECIFIC_9","IMAGE_REL_BASED_DIR64","IMAGE_REL_BASED_IA64_IMM64","IMAGE_REL_BASED_MIPS_JMPADDR","IMAGE_REL_BASED_MIPS_JMPADDR16","IMAGE_REL_BASED_ARM_MOV32","IMAGE_REL_BASED_THUMB_MOV32","IMAGE_ARCHIVE_START_SIZE","IMAGE_ARCHIVE_START","IMAGE_ARCHIVE_END","IMAGE_ARCHIVE_PAD","IMAGE_ARCHIVE_LINKER_MEMBER","IMAGE_ARCHIVE_LONGNAMES_MEMBER","IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","ImageArchiveMemberHeader","name","date","user_id","group_id","mode","size","end_header","IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","ImageExportDirectory","characteristics","time_date_stamp","major_version","minor_version","name","base","number_of_functions","number_of_names","address_of_functions","address_of_names","address_of_name_ordinals","ImageImportByName","hint","IMAGE_ORDINAL_FLAG64","IMAGE_ORDINAL_FLAG32","ImageTlsDirectory64","start_address_of_raw_data","end_address_of_raw_data","address_of_index","address_of_call_backs","size_of_zero_fill","characteristics","ImageTlsDirectory32","start_address_of_raw_data","end_address_of_raw_data","address_of_index","address_of_call_backs","size_of_zero_fill","characteristics","ImageImportDescriptor","original_first_thunk","time_date_stamp","forwarder_chain","name","first_thunk","ImageBoundImportDescriptor","time_date_stamp","offset_module_name","number_of_module_forwarder_refs","ImageBoundForwarderRef","time_date_stamp","offset_module_name","reserved","ImageDelayloadDescriptor","attributes","dll_name_rva","module_handle_rva","import_address_table_rva","import_name_table_rva","bound_import_address_table_rva","unload_information_table_rva","time_date_stamp","IMAGE_DELAYLOAD_RVA_BASED","ImageResourceDirectory","characteristics","time_date_stamp","major_version","minor_version","number_of_named_entries","number_of_id_entries","IMAGE_RESOURCE_NAME_IS_STRING","IMAGE_RESOURCE_DATA_IS_DIRECTORY","ImageResourceDirectoryEntry","name_or_id","offset_to_data_or_directory","ImageResourceDirectoryString","length","ImageResourceDirStringU","length","ImageResourceDataEntry","offset_to_data","size","code_page","reserved","ImageLoadConfigCodeIntegrity","flags","catalog","catalog_offset","reserved","ImageDynamicRelocationTable","version","size","ImageDynamicRelocation32","symbol","base_reloc_size","ImageDynamicRelocation64","symbol","base_reloc_size","ImageDynamicRelocation32V2","header_size","fixup_info_size","symbol","symbol_group","flags","ImageDynamicRelocation64V2","header_size","fixup_info_size","symbol","symbol_group","flags","IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER","IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER","IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH","ImagePrologueDynamicRelocationHeader","prologue_byte_count","ImageEpilogueDynamicRelocationHeader","epilogue_count","epilogue_byte_count","branch_descriptor_element_size","branch_descriptor_count","ImageLoadConfigDirectory32","size","time_date_stamp","major_version","minor_version","global_flags_clear","global_flags_set","critical_section_default_timeout","de_commit_free_block_threshold","de_commit_total_free_threshold","lock_prefix_table","maximum_allocation_size","virtual_memory_threshold","process_heap_flags","process_affinity_mask","csd_version","dependent_load_flags","edit_list","security_cookie","sehandler_table","sehandler_count","guard_cf_check_function_pointer","guard_cf_dispatch_function_pointer","guard_cf_function_table","guard_cf_function_count","guard_flags","code_integrity","guard_address_taken_iat_entry_table","guard_address_taken_iat_entry_count","guard_long_jump_target_table","guard_long_jump_target_count","dynamic_value_reloc_table","chpe_metadata_pointer","guard_rf_failure_routine","guard_rf_failure_routine_function_pointer","dynamic_value_reloc_table_offset","dynamic_value_reloc_table_section","reserved2","guard_rf_verify_stack_pointer_function_pointer","hot_patch_table_offset","reserved3","enclave_configuration_pointer","volatile_metadata_pointer","ImageLoadConfigDirectory64","size","time_date_stamp","major_version","minor_version","global_flags_clear","global_flags_set","critical_section_default_timeout","de_commit_free_block_threshold","de_commit_total_free_threshold","lock_prefix_table","maximum_allocation_size","virtual_memory_threshold","process_affinity_mask","process_heap_flags","csd_version","dependent_load_flags","edit_list","security_cookie","sehandler_table","sehandler_count","guard_cf_check_function_pointer","guard_cf_dispatch_function_pointer","guard_cf_function_table","guard_cf_function_count","guard_flags","code_integrity","guard_address_taken_iat_entry_table","guard_address_taken_iat_entry_count","guard_long_jump_target_table","guard_long_jump_target_count","dynamic_value_reloc_table","chpe_metadata_pointer","guard_rf_failure_routine","guard_rf_failure_routine_function_pointer","dynamic_value_reloc_table_offset","dynamic_value_reloc_table_section","reserved2","guard_rf_verify_stack_pointer_function_pointer","hot_patch_table_offset","reserved3","enclave_configuration_pointer","volatile_metadata_pointer","ImageHotPatchInfo","version","size","sequence_number","base_image_list","base_image_count","buffer_offset","extra_patch_size","ImageHotPatchBase","sequence_number","flags","original_time_date_stamp","original_check_sum","code_integrity_info","code_integrity_size","patch_table","buffer_offset","ImageHotPatchHashes","sha256","sha1","IMAGE_HOT_PATCH_BASE_OBLIGATORY","IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK","IMAGE_HOT_PATCH_CHUNK_INVERSE","IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","IMAGE_HOT_PATCH_CHUNK_RESERVED","IMAGE_HOT_PATCH_CHUNK_TYPE","IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","IMAGE_HOT_PATCH_CHUNK_SIZE","IMAGE_HOT_PATCH_NONE","IMAGE_HOT_PATCH_FUNCTION","IMAGE_HOT_PATCH_ABSOLUTE","IMAGE_HOT_PATCH_REL32","IMAGE_HOT_PATCH_CALL_TARGET","IMAGE_HOT_PATCH_INDIRECT","IMAGE_HOT_PATCH_NO_CALL_TARGET","IMAGE_HOT_PATCH_DYNAMIC_VALUE","IMAGE_GUARD_CF_INSTRUMENTED","IMAGE_GUARD_CFW_INSTRUMENTED","IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","IMAGE_GUARD_SECURITY_COOKIE_UNUSED","IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","IMAGE_GUARD_RF_INSTRUMENTED","IMAGE_GUARD_RF_ENABLE","IMAGE_GUARD_RF_STRICT","IMAGE_GUARD_RETPOLINE_PRESENT","IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","IMAGE_GUARD_FLAG_FID_SUPPRESSED","IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","ImageArmRuntimeFunctionEntry","begin_address","unwind_data","ImageArm64RuntimeFunctionEntry","begin_address","unwind_data","ImageAlpha64RuntimeFunctionEntry","begin_address","end_address","exception_handler","handler_data","prolog_end_address","ImageAlphaRuntimeFunctionEntry","begin_address","end_address","exception_handler","handler_data","prolog_end_address","ImageRuntimeFunctionEntry","begin_address","end_address","unwind_info_address_or_data","IMAGE_ENCLAVE_LONG_ID_LENGTH","IMAGE_ENCLAVE_SHORT_ID_LENGTH","ImageEnclaveConfig32","size","minimum_required_config_size","policy_flags","number_of_imports","import_list","import_entry_size","family_id","image_id","image_version","security_version","enclave_size","number_of_threads","enclave_flags","ImageEnclaveConfig64","size","minimum_required_config_size","policy_flags","number_of_imports","import_list","import_entry_size","family_id","image_id","image_version","security_version","enclave_size","number_of_threads","enclave_flags","IMAGE_ENCLAVE_POLICY_DEBUGGABLE","IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE","ImageEnclaveImport","match_type","minimum_security_version","unique_or_author_id","family_id","image_id","import_name","reserved","IMAGE_ENCLAVE_IMPORT_MATCH_NONE","IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID","IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID","IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID","IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID","ImageDebugDirectory","characteristics","time_date_stamp","major_version","minor_version","typ","size_of_data","address_of_raw_data","pointer_to_raw_data","IMAGE_DEBUG_TYPE_UNKNOWN","IMAGE_DEBUG_TYPE_COFF","IMAGE_DEBUG_TYPE_CODEVIEW","IMAGE_DEBUG_TYPE_FPO","IMAGE_DEBUG_TYPE_MISC","IMAGE_DEBUG_TYPE_EXCEPTION","IMAGE_DEBUG_TYPE_FIXUP","IMAGE_DEBUG_TYPE_OMAP_TO_SRC","IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","IMAGE_DEBUG_TYPE_BORLAND","IMAGE_DEBUG_TYPE_RESERVED10","IMAGE_DEBUG_TYPE_CLSID","IMAGE_DEBUG_TYPE_VC_FEATURE","IMAGE_DEBUG_TYPE_POGO","IMAGE_DEBUG_TYPE_ILTCG","IMAGE_DEBUG_TYPE_MPX","IMAGE_DEBUG_TYPE_REPRO","ImageCoffSymbolsHeader","number_of_symbols","lva_to_first_symbol","number_of_linenumbers","lva_to_first_linenumber","rva_to_first_byte_of_code","rva_to_last_byte_of_code","rva_to_first_byte_of_data","rva_to_last_byte_of_data","FRAME_FPO","FRAME_TRAP","FRAME_TSS","FRAME_NONFPO","IMAGE_DEBUG_MISC_EXENAME","ImageDebugMisc","data_type","length","unicode","reserved","ImageFunctionEntry","starting_address","ending_address","end_of_prologue","ImageFunctionEntry64","starting_address","ending_address","end_of_prologue_or_unwind_info_address","ImageSeparateDebugHeader","signature","flags","machine","characteristics","time_date_stamp","check_sum","image_base","size_of_image","number_of_sections","exported_names_size","debug_directory_size","section_alignment","reserved","NonPagedDebugInfo","signature","flags","size","machine","characteristics","time_date_stamp","check_sum","size_of_image","image_base","IMAGE_SEPARATE_DEBUG_SIGNATURE","NON_PAGED_DEBUG_SIGNATURE","IMAGE_SEPARATE_DEBUG_FLAGS_MASK","IMAGE_SEPARATE_DEBUG_MISMATCH","ImageArchitectureEntry","fixup_inst_rva","new_inst","IMPORT_OBJECT_HDR_SIG2","ImportObjectHeader","sig1","sig2","version","machine","time_date_stamp","size_of_data","ordinal_or_hint","name_type","IMPORT_OBJECT_CODE","IMPORT_OBJECT_DATA","IMPORT_OBJECT_CONST","IMPORT_OBJECT_ORDINAL","IMPORT_OBJECT_NAME","IMPORT_OBJECT_NAME_NO_PREFIX","IMPORT_OBJECT_NAME_UNDECORATE","IMPORT_OBJECT_NAME_EXPORTAS","COMIMAGE_FLAGS_ILONLY","COMIMAGE_FLAGS_32BITREQUIRED","COMIMAGE_FLAGS_IL_LIBRARY","COMIMAGE_FLAGS_STRONGNAMESIGNED","COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","COMIMAGE_FLAGS_TRACKDEBUGDATA","COMIMAGE_FLAGS_32BITPREFERRED","COR_VERSION_MAJOR_V2","COR_VERSION_MAJOR","COR_VERSION_MINOR","COR_DELETED_NAME_LENGTH","COR_VTABLEGAP_NAME_LENGTH","NATIVE_TYPE_MAX_CB","COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","IMAGE_COR_MIH_METHODRVA","IMAGE_COR_MIH_EHRVA","IMAGE_COR_MIH_BASICBLOCK","COR_VTABLE_32BIT","COR_VTABLE_64BIT","COR_VTABLE_FROM_UNMANAGED","COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","COR_VTABLE_CALL_MOST_DERIVED","IMAGE_COR_EATJ_THUNK_SIZE","MAX_CLASS_NAME","MAX_PACKAGE_NAME","ImageCor20Header","cb","major_runtime_version","minor_runtime_version","meta_data","flags","entry_point_token_or_rva","resources","strong_name_signature","code_manager_table","vtable_fixups","export_address_table_jumps","managed_native_header","Architecture","Unknown","Aarch64","Arm","I386","Mips","S390x","Wasm32","X86_64","AddressSize","U32","U64","BinaryFormat","Coff","Elf","MachO","Pe","Wasm","SectionKind","Unknown","Text","Data","ReadOnlyData","ReadOnlyString","UninitializedData","Common","Tls","UninitializedTls","TlsVariables","OtherString","Other","Debug","Linker","Note","Metadata","Elf","ComdatKind","Unknown","Any","NoDuplicates","SameSize","ExactMatch","Largest","Newest","SymbolKind","Unknown","Null","Text","Data","Section","File","Label","Tls","SymbolScope","Unknown","Compilation","Linkage","Dynamic","RelocationKind","Absolute","Relative","Got","GotRelative","GotBaseRelative","GotBaseOffset","PltRelative","ImageOffset","SectionOffset","SectionIndex","Elf","MachO","value","relative","Coff","RelocationEncoding","Generic","X86Signed","X86RipRelative","X86RipRelativeMovq","X86Branch","S390xDbl","FileFlags","None","Elf","e_flags","MachO","flags","Coff","characteristics","SectionFlags","None","Elf","sh_flags","MachO","flags","Coff","characteristics","SymbolFlags","None","Elf","st_info","st_other","MachO","n_desc","CoffSection","selection","associative_section","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","from_big_endian","is_big_endian","from_big_endian","is_big_endian","from_big_endian","is_big_endian","is_type_64","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","is_type_64","e_ident","e_type","e_machine","e_version","e_entry","e_phoff","e_shoff","e_flags","e_ehsize","e_phentsize","e_phnum","e_shentsize","e_shnum","e_shstrndx","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","p_type","p_flags","p_offset","p_vaddr","p_paddr","p_filesz","p_memsz","p_align","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","sh_name","sh_type","sh_flags","sh_addr","sh_offset","sh_size","sh_link","sh_info","sh_addralign","sh_entsize","st_name","st_info","st_bind","st_type","st_other","st_visibility","st_shndx","st_value","st_size","st_name","st_info","st_bind","st_type","st_other","st_visibility","st_shndx","st_value","st_size","r_offset","r_info","r_sym","r_type","r_offset","r_info","r_sym","r_type","r_offset","r_info","r_addend","r_sym","r_type","r_offset","r_info","r_addend","r_sym","r_type","d_tag","d_val","d_tag","d_val","ch_type","ch_size","ch_addralign","ch_type","ch_size","ch_addralign","n_namesz","n_descsz","n_type","n_namesz","n_descsz","n_type","cputype","cpusubtype","offset","size","align","cputype","cpusubtype","offset","size","align","is_type_64","is_big_endian","is_little_endian","magic","cputype","cpusubtype","filetype","ncmds","sizeofcmds","flags","is_type_64","is_big_endian","is_little_endian","magic","cputype","cpusubtype","filetype","ncmds","sizeofcmds","flags","from_command","cmd","cmdsize","segname","vmaddr","vmsize","fileoff","filesize","maxprot","initprot","nsects","flags","from_command","cmd","cmdsize","segname","vmaddr","vmsize","fileoff","filesize","maxprot","initprot","nsects","flags","sectname","segname","addr","size","offset","align","reloff","nreloc","flags","sectname","segname","addr","size","offset","align","reloff","nreloc","flags","n_strx","n_type","n_sect","n_desc","n_value","n_strx","n_type","n_sect","n_desc","n_value","is_type_64","is_valid_optional_magic","signature","file_header","optional_header","is_type_64","is_valid_optional_magic","signature","file_header","optional_header","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","architecture","is_little_endian","is_64","segments","section_by_name","section_by_index","sections","comdats","symbol_by_index","symbols","symbol_table","dynamic_symbols","dynamic_symbol_table","dynamic_relocations","symbol_map","object_map","imports","exports","has_debug_symbols","mach_uuid","build_id","gnu_debuglink","entry","flags","architecture","is_little_endian","is_64","segments","section_by_name","section_by_index","sections","comdats","symbol_by_index","symbols","symbol_table","dynamic_symbols","dynamic_symbol_table","dynamic_relocations","imports","exports","has_debug_symbols","entry","flags","architecture","is_little_endian","is_64","segments","section_by_name","section_by_index","sections","comdats","symbol_by_index","symbols","symbol_table","dynamic_symbols","dynamic_symbol_table","dynamic_relocations","imports","exports","has_debug_symbols","build_id","gnu_debuglink","entry","flags","architecture","is_little_endian","is_64","segments","section_by_name","section_by_index","sections","comdats","symbol_by_index","symbols","symbol_table","dynamic_symbols","dynamic_symbol_table","object_map","imports","exports","dynamic_relocations","has_debug_symbols","mach_uuid","entry","flags","architecture","is_little_endian","is_64","segments","section_by_name","section_by_index","sections","comdats","symbol_by_index","symbols","symbol_table","dynamic_symbols","dynamic_symbol_table","dynamic_relocations","imports","exports","has_debug_symbols","entry","flags","address","size","align","file_range","data","data_range","name","address","size","align","file_range","data","data_range","name","address","size","align","file_range","data","data_range","name","address","size","align","file_range","data","data_range","name","address","size","align","file_range","data","data_range","name","index","address","size","align","file_range","data","data_range","compressed_data","name","segment_name","kind","relocations","flags","index","address","size","align","file_range","data","data_range","compressed_data","name","segment_name","kind","relocations","flags","index","address","size","align","file_range","data","data_range","compressed_data","name","segment_name","kind","relocations","flags","index","address","size","align","file_range","data","data_range","compressed_data","name","segment_name","kind","relocations","flags","index","address","size","align","file_range","data","data_range","compressed_data","name","segment_name","kind","relocations","flags","kind","symbol","name","sections","kind","symbol","name","sections","kind","symbol","name","sections","kind","symbol","name","sections","kind","symbol","name","sections","symbols","symbol_by_index","symbols","symbol_by_index","symbols","symbol_by_index","symbols","symbol_by_index","index","name","address","size","kind","section","is_undefined","is_definition","is_common","is_weak","scope","is_global","is_local","flags","index","name","address","size","kind","section","is_undefined","is_definition","is_common","is_weak","scope","is_global","is_local","flags","index","name","address","size","kind","section","is_undefined","is_definition","is_common","is_weak","scope","is_global","is_local","flags","index","name","address","size","kind","section","is_undefined","is_definition","is_common","is_weak","scope","is_global","is_local","flags","address","address","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","ne","eq","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","address_size","bytes","is_bss","new","get","parse","format","parse","parse","parse","iter","is_empty","len","section","section_by_name","parse","strings","is_empty","len","symbol","get","map","name","address","is_definition","parse","parse","is_supported","is_class_32","is_class_64","is_little_endian","is_big_endian","endian","section_0","phnum","shnum","shstrndx","program_headers","section_headers","section_strings","sections","file_range","data","data_as_array","data_range","dynamic","notes","new","iter","is_empty","len","section","section_by_name","section_name","symbols","symbol_table_by_index","relocation_sections","name","file_range","data","data_as_array","symbols","rel","rela","relocation_symbols","notes","group","parse","section","strings","iter","is_empty","len","symbol","shndx","symbol_name","map","name","is_undefined","is_definition","parse","get","next","n_type","n_namesz","n_descsz","name","desc","parse_arch32","parse_arch64","architecture","data","parse","parse","is_supported","endian","load_commands","uuid","symbols","name","file_range","data","sections","name","segment_name","file_range","data","relocations","strings","iter","is_empty","len","symbol","map","object_map","name","is_definition","library_ordinal","optional_header_magic","parse","parse","nt_headers","parse","sections","symbols","pe_data","pe_data_at","endianness","symbol_map","object_map","mach_uuid","build_id","gnu_debuglink","uncompressed_data","section_index"],"q":["object","object::endian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object","object::pod","","","","","","","","","","","","","","","","","","","","","","","object","object::read","object::read::archive","","","","","","","","","","","","","","","","","","object::read","object::read::coff","","","","","","","","","","","","","","object::read","object::read::elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read","object::read::macho","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read","object::read::pe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::readobject","object::archive","","","","","","","","","","","object","object::elfobject","object::machoobject","object::peobject","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::RelocationKind","","object","","","","","","","","","","","object::FileFlags","object","object::FileFlags","object","object::FileFlags","object","","","object::SectionFlags","object","object::SectionFlags","object","object::SectionFlags","object","","","object::SymbolFlags","","object","object::SymbolFlags","object","object::SymbolFlags","","object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::endian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::pod","","","","","","","","","object::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read::archive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read::coff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read::elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read::macho","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read::pe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::archive","","","","","","","","","object::elfobject::machoobject::peobject::endian","","","","","","object::elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::macho","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::pe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read","","","","","","","","","","","","","","","","","","","","","","","","object::read::coff","","","","","","","","","","","","","","","","","","","object::read::elf","","","","","","","","","","","","","","","","","","","","","object::read::macho","","","","","","","","","","","","","","","","","","","","","object::read::pe","","","","","","","","","","","","","","","","","","","object::read","","","","","","","object::read::coff","","","","","","","object::read::elf","","","","","","","object::read::macho","","","","","","","object::read::pe","","","","","","","object::read","","","","","","","","","","","","","object::read::coff","","","","","","","","","","","","","object::read::elf","","","","","","","","","","","","","object::read::macho","","","","","","","","","","","","","object::read::pe","","","","","","","","","","","","","object::read","","","","object::read::coff","","","","object::read::elf","","","","object::read::macho","","","","object::read::pe","","","","object::read","","object::read::coff","","object::read::elf","","object::read::macho","","object::read","","","","","","","","","","","","","","object::read::coff","","","","","","","","","","","","","","object::read::elf","","","","","","","","","","","","","","object::read::macho","","","","","","","","","","","","","","object::read","","object","","","","","","","","","","","","object::endian","","","","","","","","","object::pod","object::read","","","","","","","","","","","","","","object::read::archive","","","","object::read::coff","","","","","","","","","","","","","","object::read::elf","","","","","","","","","","","","","","","","","","object::read::macho","","","","","","","","","","","","","object::read::pe","","","","","","","","","object::read","","","","","","","","","","","","","","","","object::archive","object::elf","","","","","","","","","","","","","","","","","","","","","object::macho","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::pe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::read","object","","","","","","","","","","","","","","","","","object::endian","","","","","","","","","","","","","","","object::pod","","object::read::archive","object::read","","","","","","","","","","","","","","","","","","","","","object::endian","","","","","","","","","","","","object","","","object::endian","","","","","","","","","object::read::archive","object::read","","","","","","","","","","","","","","","object::read::archive","object::read::coff","","","","","","object::read::elf","","","","","","","object::read::macho","","","","","","object::read::pe","","","","","object::read","object::elf","","object","","","","","","","","","","","","object::endian","","","","","","","","","object::pod","object::read","object::read::archive","object::read::coff","","","object::read::elf","","","","object::read::macho","","","object::read","","","","","","","","","","","","","object::archive","object::elf","","","","","","","","","","","","","","","","","","","","","object::macho","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::pe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::endian","","","","","","","","","object::pod","object::read","object::read::coff","object::read::elf","","object::read::macho","object::read::pe","object::read","","","object::elf","","object","","","object::read","","","","object::read::coff","object::pe","object::read::coff","","","","","","","","","","","","","object::pe","","","object::read::elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object::macho","","object::read::macho","","","","","","","","object::macho","object::read::macho","","","","","","","","","","","","","","","","","","","object::read::pe","","object::pe","","object::read::pe","","","object::pe","","object::read","","","","","","",""],"d":["Types for compile-time and run-time endianness.","A trait for using an endianness specification.","Construct a specification for the endianness of some …","Construct a specification for the endianness of some …","Return true for big endian byte order.","Return true for little endian byte order.","Converts an unsigned 16 bit integer to native endian.","Converts an unsigned 32 bit integer to native endian.","Converts an unsigned 64 bit integer to native endian.","Converts a signed 16 bit integer to native endian.","Converts a signed 32 bit integer to native endian.","Converts a signed 64 bit integer to native endian.","Converts an unaligned unsigned 16 bit integer to native …","Converts an unaligned unsigned 32 bit integer to native …","Converts an unaligned unsigned 64 bit integer to native …","Converts an unaligned signed 16 bit integer to native …","Converts an unaligned signed 32 bit integer to native …","Converts an unaligned signed 64 bit integer to native …","Converts an unsigned 16 bit integer from native endian.","Converts an unsigned 32 bit integer from native endian.","Converts an unsigned 64 bit integer from native endian.","Converts a signed 16 bit integer from native endian.","Converts a signed 32 bit integer from native endian.","Converts a signed 64 bit integer from native endian.","Converts an unaligned unsigned 16 bit integer from native …","Converts an unaligned unsigned 32 bit integer from native …","Converts an unaligned unsigned 64 bit integer from native …","Converts an unaligned signed 16 bit integer from native …","Converts an unaligned signed 32 bit integer from native …","Converts an unaligned signed 64 bit integer from native …","An endianness that is selectable at run-time.","Little endian byte order.","Big endian byte order.","Compile-time little endian byte order.","Compile-time big endian byte order.","The native endianness for the target platform.","A <code>u16</code> value with an externally specified endianness of …","A <code>u32</code> value with an externally specified endianness of …","A <code>u64</code> value with an externally specified endianness of …","An <code>i16</code> value with an externally specified endianness of …","An <code>i32</code> value with an externally specified endianness of …","An <code>i64</code> value with an externally specified endianness of …","An unaligned <code>u16</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","An unaligned <code>u32</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","An unaligned <code>u64</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","An unaligned <code>i16</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","An unaligned <code>i32</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","An unaligned <code>i64</code> value with an externally specified …","Construct a new value given a native endian value.","Return the value as a native endian value.","Set the value given a native endian value.","Tools for converting file format structures to and from …","A trait for types that can safely be converted from and …","Cast a byte slice to a <code>Pod</code> type.","Cast a byte slice to a slice of a <code>Pod</code> type.","Cast a <code>Pod</code> type to a byte slice.","A newtype for byte slices.","","Return the length of the byte slice.","Return true if the byte slice is empty.","Skip over the given number of bytes at the start of the …","Return a reference to the given number of bytes at the …","Return a reference to the given number of bytes at the …","Return a reference to a <code>Pod</code> struct at the start of the …","Return a reference to a <code>Pod</code> struct at the given offset of …","Return a reference to a slice of <code>Pod</code> structs at the start …","Return a reference to a slice of <code>Pod</code> structs at the given …","Read a null terminated string.","Read a null terminated string at an offset.","Trait for writable buffer.","Returns position/offset for data to be written at.","Returns true if buffer contains no data.","Reserves specified number of bytes in the buffer.","Resizes buffer to the specified length, fills new items …","Extends buffer with the specified slice of bytes.","Interface for reading object files.","Support for archive files.","The kind of archive format.","There are no special files that indicate the archive …","The GNU (or System V) archive format.","The BSD archive format.","The Windows COFF archive format.","A partially parsed archive file.","Parse the archive header and special members.","Return the archive format.","Iterate over the members of the archive.","An iterator over the members of an archive.","A partially parsed archive member.","Return the raw header.","Return the parsed file name.","Parse the file modification timestamp from the header.","Parse the user ID from the header.","Parse the group ID from the header.","Parse the file mode from the header.","Return the file data.","Support for reading Windows COFF files.","A COFF object file.","The table of section headers in a COFF or PE file.","An iterator over the loadable sections of a <code>CoffFile</code>.","A loadable section of a <code>CoffFile</code>.","An iterator over the sections of a <code>CoffFile</code>.","A section of a <code>CoffFile</code>.","A table of symbol entries in a COFF or PE file.","A symbol table of a <code>CoffFile</code>.","An iterator over the symbols of a <code>CoffFile</code>.","A symbol of a <code>CoffFile</code>.","An iterator over the relocations in a <code>CoffSection</code>.","An iterator over the COMDAT section groups of a <code>CoffFile</code>.","A COMDAT section group of a <code>CoffFile</code>.","An iterator over the sections in a COMDAT section group …","Support for reading ELF files.","A 32-bit ELF object file.","A 64-bit ELF object file.","A partially parsed ELF file.","A trait for generic access to <code>FileHeader32</code> and …","","","","","","","","","","","","Return true if this type is a 64-bit header.","","","","","","","","","","","","","","","Read the file header.","Check that the ident field in the file header is a …","","","","","","Return the first section header, if present.","Return the <code>e_phnum</code> field of the header. Handles extended …","Return the <code>e_shnum</code> field of the header. Handles extended …","Return the <code>e_shstrndx</code> field of the header. Handles …","Return the slice of program headers.","Return the slice of section headers.","Return the string table for the section headers.","Return the section table.","An iterator over the segments of an <code>ElfFile32</code>.","An iterator over the segments of an <code>ElfFile64</code>.","An iterator over the segments of an <code>ElfFile</code>.","A segment of an <code>ElfFile32</code>.","A segment of an <code>ElfFile64</code>.","A segment of an <code>ElfFile</code>.","A trait for generic access to <code>ProgramHeader32</code> and …","","","","","","","","","","","","Return the offset and size of the segment in the file.","Return the segment data.","Return the segment data as a slice of the given type.","Return the segment data in the given virtual address range","Return entries in a dynamic segment.","Return a note iterator for the segment data.","The table of section headers in an ELF file.","An iterator over the sections of an <code>ElfFile32</code>.","An iterator over the sections of an <code>ElfFile64</code>.","An iterator over the sections of an <code>ElfFile</code>.","A section of an <code>ElfFile32</code>.","A section of an <code>ElfFile64</code>.","A section of an <code>ElfFile</code>.","A trait for generic access to <code>SectionHeader32</code> and …","","","","","","","","","","","","","","Parse the section name from the string table.","Return the offset and size of the section in the file.","Return the section data.","Return the section data as a slice of the given type.","Return the symbols in the section.","Return the <code>Elf::Rel</code> entries in the section.","Return the <code>Elf::Rela</code> entries in the section.","Return the symbol table for a relocation section.","Return a note iterator for the section data.","Return the contents of a group section.","A table of symbol entries in an ELF file.","A symbol table of an <code>ElfFile32</code>.","A symbol table of an <code>ElfFile32</code>.","A symbol table of an <code>ElfFile</code>.","An iterator over the symbols of an <code>ElfFile32</code>.","An iterator over the symbols of an <code>ElfFile64</code>.","An iterator over the symbols of an <code>ElfFile</code>.","A symbol of an <code>ElfFile32</code>.","A symbol of an <code>ElfFile64</code>.","A symbol of an <code>ElfFile</code>.","A trait for generic access to <code>Sym32</code> and <code>Sym64</code>.","","","","","","","","","","","","Parse the symbol name from the string table.","Return true if the symbol is undefined.","Return true if the symbol is a definition of a function …","A mapping from section index to associated relocation …","An iterator over the dynamic relocations for an <code>ElfFile32</code>.","An iterator over the dynamic relocations for an <code>ElfFile64</code>.","An iterator over the dynamic relocations for an <code>ElfFile</code>.","An iterator over the relocations for an <code>ElfSection32</code>.","An iterator over the relocations for an <code>ElfSection64</code>.","An iterator over the relocations for an <code>ElfSection</code>.","A trait for generic access to <code>Rel32</code> and <code>Rel64</code>.","","","","","","","","A trait for generic access to <code>Rela32</code> and <code>Rela64</code>.","","","","","","","","","An iterator over the COMDAT section groups of an <code>ElfFile32</code>…","An iterator over the COMDAT section groups of an <code>ElfFile64</code>…","An iterator over the COMDAT section groups of an <code>ElfFile</code>.","A COMDAT section group of an <code>ElfFile32</code>.","A COMDAT section group of an <code>ElfFile64</code>.","A COMDAT section group of an <code>ElfFile</code>.","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","A trait for generic access to <code>Dyn32</code> and <code>Dyn64</code>.","","","","","A trait for generic access to <code>CompressionHeader32</code> and …","","","","","","An iterator over the notes in an ELF section or segment.","A parsed <code>NoteHeader</code>.","A trait for generic access to <code>NoteHeader32</code> and …","","","","","Support for reading Mach-O files.","A trait for generic access to <code>FatArch32</code> and <code>FatArch64</code>.","","","","","","","","","A 32-bit Mach-O object file.","A 64-bit Mach-O object file.","A partially parsed Mach-O file.","An iterator over the COMDAT section groups of a …","An iterator over the COMDAT section groups of a …","An iterator over the COMDAT section groups of a <code>MachOFile</code>.","A COMDAT section group of a <code>MachOFile32</code>.","A COMDAT section group of a <code>MachOFile64</code>.","A COMDAT section group of a <code>MachOFile</code>.","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","A trait for generic access to <code>MachHeader32</code> and …","","","","","","Return true if this type is a 64-bit header.","Return true if the <code>magic</code> field signifies big-endian.","Return true if the <code>magic</code> field signifies little-endian.","","","","","","","","Read the file header.","","","","Return the UUID from the <code>LC_UUID</code> load command, if one is …","An iterator over the segments of a <code>MachOFile32</code>.","An iterator over the segments of a <code>MachOFile64</code>.","An iterator over the segments of a <code>MachOFile</code>.","A segment of a <code>MachOFile32</code>.","A segment of a <code>MachOFile64</code>.","A segment of a <code>MachOFile</code>.","A trait for generic access to <code>SegmentCommand32</code> and …","","","","","","","","","","","","","","","","Return the <code>segname</code> bytes up until the null terminator.","Return the offset and size of the segment in the file.","Get the segment data from the file data.","Get the array of sections from the data following the …","An iterator over the sections of a <code>MachOFile32</code>.","An iterator over the sections of a <code>MachOFile64</code>.","An iterator over the sections of a <code>MachOFile</code>.","A section of a <code>MachOFile32</code>.","A section of a <code>MachOFile64</code>.","A section of a <code>MachOFile</code>.","A trait for generic access to <code>Section32</code> and <code>Section64</code>.","","","","","","","","","","","","Return the <code>sectname</code> bytes up until the null terminator.","Return the <code>segname</code> bytes up until the null terminator.","Return the offset and size of the section in the file.","Return the section data.","Return the relocation array.","A table of symbol entries in a Mach-O file.","An iterator over the symbols of a <code>MachOFile32</code>.","An iterator over the symbols of a <code>MachOFile64</code>.","A symbol table of a <code>MachOFile</code>.","An iterator over the symbols of a <code>MachOFile32</code>.","An iterator over the symbols of a <code>MachOFile64</code>.","An iterator over the symbols of a <code>MachOFile</code>.","A symbol of a <code>MachOFile32</code>.","A symbol of a <code>MachOFile64</code>.","A symbol of a <code>MachOFile</code>.","A trait for generic access to <code>Nlist32</code> and <code>Nlist64</code>.","","","","","","","","","Return true if the symbol is a definition of a function …","Return the library ordinal.","An iterator over the relocations in a <code>MachOSection32</code>.","An iterator over the relocations in a <code>MachOSection64</code>.","An iterator over the relocations in a <code>MachOSection</code>.","Support for reading ELF files.","A PE32 (32-bit) image file.","A PE32+ (64-bit) image file.","A PE object file.","An iterator over the COMDAT section groups of a <code>PeFile32</code>.","An iterator over the COMDAT section groups of a <code>PeFile64</code>.","An iterator over the COMDAT section groups of a <code>PeFile</code>.","A COMDAT section group of a <code>PeFile32</code>.","A COMDAT section group of a <code>PeFile64</code>.","A COMDAT section group of a <code>PeFile</code>.","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","An iterator over the sections in a COMDAT section group …","A trait for generic access to <code>ImageNtHeaders32</code> and …","","Return true if this type is a 64-bit header.","Return true if the magic field in the optional header is …","Return the signature","Return the file header.","Return the optional header.","Read the NT headers, including the data directories.","Read the section table.","Read the symbol table and string table.","A trait for generic access to <code>ImageOptionalHeader32</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the loadable sections of a <code>PeFile32</code>.","An iterator over the loadable sections of a <code>PeFile64</code>.","An iterator over the loadable sections of a <code>PeFile</code>.","A loadable section of a <code>PeFile32</code>.","A loadable section of a <code>PeFile64</code>.","A loadable section of a <code>PeFile</code>.","An iterator over the sections of a <code>PeFile32</code>.","An iterator over the sections of a <code>PeFile64</code>.","An iterator over the sections of a <code>PeFile</code>.","A section of a <code>PeFile32</code>.","A section of a <code>PeFile64</code>.","A section of a <code>PeFile</code>.","An iterator over the relocations in an <code>PeSection</code>.","The table of section headers in a COFF or PE file.","A table of symbol entries in a COFF or PE file.","A table of zero-terminated strings.","An object file.","An iterator over the segments of a <code>File</code>.","A segment of a <code>File</code>.","An iterator of the sections of a <code>File</code>.","A Section of a File","An iterator of the COMDAT section groups of a <code>File</code>.","A COMDAT section group of a <code>File</code>.","An iterator over COMDAT section entries.","A symbol table.","An iterator over symbol table entries.","A symbol table entry.","An iterator over dynamic relocation entries.","An iterator over section relocation entries.","An object file.","A segment in the object file.","An iterator over the segments in the object file.","A section in the object file.","An iterator over the sections in the object file.","A COMDAT section group in the object file.","An iterator over the COMDAT section groups in the object …","A symbol in the object file.","An iterator over symbols in the object file.","A symbol table in the object file.","An iterator over dynamic relocations in the file.","Get the architecture type of the file.","Get the endianness of the file.","Return true if the file is little endian, false if it is …","Return true if the file can contain 64-bit addresses.","Get an iterator over the segments in the file.","Get the entry point address of the binary","Get the section named <code>section_name</code>, if such a section …","Get the section at the given index.","Get an iterator over the sections in the file.","Get an iterator over the COMDAT section groups in the …","Get the symbol table, if any.","Get the debugging symbol at the given index.","Get an iterator over the debugging symbols in the file.","Get the dynamic linking symbol table, if any.","Get an iterator over the dynamic linking symbols in the …","Get the dynamic relocations for this file.","Construct a map from addresses to symbol names.","Construct a map from addresses to symbol names and object …","Get the imported symbols.","Get the exported symbols.","Return true if the file contains debug information …","The UUID from a Mach-O <code>LC_UUID</code> load command.","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.","The filename and CRC from a <code>.gnu_debuglink</code> section.","File flags that are specific to each file format.","A loadable segment defined in an object file.","Returns the virtual address of the segment.","Returns the size of the segment in memory.","Returns the alignment of the segment in memory.","Returns the offset and size of the segment in the file.","Returns a reference to the file contents of the segment.","Return the segment data in the given range.","Returns the name of the segment.","A section defined in an object file.","An iterator over the relocations for a section.","Returns the section index.","Returns the address of the section.","Returns the size of the section in memory.","Returns the alignment of the section in memory.","Returns offset and size of on-disk segment (if any).","Returns the raw contents of the section.","Return the raw contents of the section data in the given …","Returns the potentially compressed contents of the …","Returns the uncompressed contents of the section.","Returns the name of the section.","Returns the name of the segment for this section.","Return the kind of this section.","Get the relocations for this section.","Section flags that are specific to each file format.","A COMDAT section group defined in an object file.","An iterator over the sections in the object file.","Returns the COMDAT selection kind.","Returns the index of the symbol used for the name of …","Returns the name of the COMDAT section group.","Get the sections in this section group.","A symbol table.","A symbol table entry.","An iterator over the symbols in a symbol table.","Get an iterator over the symbols in the table.","Get the symbol at the given index.","A symbol table entry.","The index of the symbol.","The name of the symbol.","The address of the symbol. May be zero if the address is …","The size of the symbol. May be zero if the size is …","Return the kind of this symbol.","Returns the section where the symbol is defined.","Returns the section index for the section containing this …","Return true if the symbol is undefined.","Return true if the symbol is a definition of a function …","Return true if the symbol is common data.","Return true if the symbol is weak.","Returns the symbol scope.","Return true if the symbol visible outside of the …","Return true if the symbol is only visible within the …","Symbol flags that are specific to each file format.","An iterator for files that don’t have dynamic …","The error type used within the read module.","The result type used within the read module.","The native executable file for the target platform.","An object file kind.","A Unix archive.","A COFF object file.","A 32-bit ELF file.","A 64-bit ELF file.","A 32-bit Mach-O file.","A 64-bit Mach-O file.","A 32-bit Mach-O fat binary.","A 64-bit Mach-O fat binary.","A 32-bit PE file.","A 64-bit PE file.","Determine a file kind by parsing the start of the file.","The index used to identify a section of a file.","","The index used to identify a symbol of a file.","","The section where a symbol is defined.","The section is unknown.","The section is not applicable for this symbol (such as …","The symbol is undefined.","The symbol has an absolute value.","The symbol is a zero-initialized symbol that will be …","The symbol is defined in the given section.","Returns the section index for the section where the …","An entry in a <code>SymbolMap</code>.","The symbol address.","A map from addresses to symbols.","Construct a new symbol map.","Get the symbol before the given address.","Get all symbols in the map.","A <code>SymbolMap</code> entry for symbol names.","Construct a <code>SymbolMapName</code>.","The symbol address.","The symbol name.","A map from addresses to symbol names and object files.","Get the entry containing the given address.","Get all symbols in the map.","Get all objects in the map.","A <code>ObjectMap</code> entry.","Get the symbol address.","Get the symbol size.","Get the symbol name.","Get the index of the object file name.","Get the object file name.","An imported symbol.","The symbol name.","The name of the library to import the symbol from.","An exported symbol.","The symbol name.","The symbol address.","The target referenced by a relocation.","The target is a symbol.","The target is a section.","The offset is an absolute address.","A relocation entry.","The operation used to calculate the result of the …","Information about how the result of the relocation …","The size in bits of the place of the relocation.","The target of the relocation.","The addend to use in the relocation calculation.","Set the addend to use in the relocation calculation.","Returns true if there is an implicit addend stored in the …","Data that may be compressed.","The data compression format.","The compressed data.","The uncompressed data size.","A data compression format.","The data is uncompressed.","The data is compressed, but the compression format is …","ZLIB/DEFLATE.","Data that is uncompressed.","Return the uncompressed data.","Archive definitions.","File identification bytes stored at the beginning of the …","File identification bytes stored at the beginning of a …","The terminator for each archive member header.","The header at the start of an archive member.","The file name.","File modification timestamp in decimal.","User ID in decimal.","Group ID in decimal.","File mode in octal.","File size in decimal.","Must be equal to <code>TERMINATOR</code>.","ELF definitions.","The header at the start of every 32-bit ELF file.","Magic number and other information.","Object file type. One of the <code>ET_*</code> constants.","Architecture. One of the <code>EM_*</code> constants.","Object file version. Must be <code>EV_CURRENT</code>.","Entry point virtual address.","Program header table file offset.","Section header table file offset.","Processor-specific flags.","Size in bytes of this header.","Program header table entry size.","Program header table entry count.","Section header table entry size.","Section header table entry count.","Section header string table index.","The header at the start of every 64-bit ELF file.","Magic number and other information.","Object file type. One of the <code>ET_*</code> constants.","Architecture. One of the <code>EM_*</code> constants.","Object file version. Must be <code>EV_CURRENT</code>.","Entry point virtual address.","Program header table file offset.","Section header table file offset.","Processor-specific flags.","Size in bytes of this header.","Program header table entry size.","Program header table entry count.","Section header table entry size.","Section header table entry count.","Section header string table index.","Magic number and other information.","Magic number. Must be <code>ELFMAG</code>.","File class. One of the <code>ELFCLASS*</code> constants.","Data encoding. One of the <code>ELFDATA*</code> constants.","ELF version. Must be <code>EV_CURRENT</code>.","OS ABI identification. One of the <code>ELFOSABI*</code> constants.","ABI version.","Padding bytes.","File identification bytes stored in <code>Ident::magic</code>.","Invalid class.","32-bit object.","64-bit object.","Invalid data encoding.","2’s complement, little endian.","2’s complement, big endian.","UNIX System V ABI.","UNIX System V ABI.","HP-UX.","NetBSD.","Object uses GNU ELF extensions.","Object uses GNU ELF extensions.","Sun Solaris.","IBM AIX.","SGI Irix.","FreeBSD.","Compaq TRU64 UNIX.","Novell Modesto.","OpenBSD.","ARM EABI.","ARM.","Standalone (embedded) application.","No file type.","Relocatable file.","Executable file.","Shared object file.","Core file.","OS-specific range start.","OS-specific range end.","Processor-specific range start.","Processor-specific range end.","No machine","AT&T WE 32100","SUN SPARC","Intel 80386","Motorola m68k family","Motorola m88k family","Intel MCU","Intel 80860","MIPS R3000 big-endian","IBM System/370","MIPS R3000 little-endian","HPPA","Fujitsu VPP500","Sun’s “v8plus”","Intel 80960","PowerPC","PowerPC 64-bit","IBM S390","IBM SPU/SPC","NEC V800 series","Fujitsu FR20","TRW RH-32","Motorola RCE","ARM","Digital Alpha","Hitachi SH","SPARC v9 64-bit","Siemens Tricore","Argonaut RISC Core","Hitachi H8/300","Hitachi H8/300H","Hitachi H8S","Hitachi H8/500","Intel Merced","Stanford MIPS-X","Motorola Coldfire","Motorola M68HC12","Fujitsu MMA Multimedia Accelerator","Siemens PCP","Sony nCPU embeeded RISC","Denso NDR1 microprocessor","Motorola Start*Core processor","Toyota ME16 processor","STMicroelectronic ST100 processor","Advanced Logic Corp. Tinyj emb.fam","AMD x86-64 architecture","Sony DSP Processor","Digital PDP-10","Digital PDP-11","Siemens FX66 microcontroller","STMicroelectronics ST9+ 8/16 mc","STmicroelectronics ST7 8 bit mc","Motorola MC68HC16 microcontroller","Motorola MC68HC11 microcontroller","Motorola MC68HC08 microcontroller","Motorola MC68HC05 microcontroller","Silicon Graphics SVx","STMicroelectronics ST19 8 bit mc","Digital VAX","Axis Communications 32-bit emb.proc","Infineon Technologies 32-bit emb.proc","Element 14 64-bit DSP Processor","LSI Logic 16-bit DSP Processor","Donald Knuth’s educational 64-bit proc","Harvard University machine-independent object files","SiTera Prism","Atmel AVR 8-bit microcontroller","Fujitsu FR30","Mitsubishi D10V","Mitsubishi D30V","NEC v850","Mitsubishi M32R","Matsushita MN10300","Matsushita MN10200","picoJava","OpenRISC 32-bit embedded processor","ARC International ARCompact","Tensilica Xtensa Architecture","Alphamosaic VideoCore","Thompson Multimedia General Purpose Proc","National Semi. 32000","Tenor Network TPC","Trebia SNP 1000","STMicroelectronics ST200","Ubicom IP2xxx","MAX processor","National Semi. CompactRISC","Fujitsu F2MC16","Texas Instruments msp430","Analog Devices Blackfin DSP","Seiko Epson S1C33 family","Sharp embedded microprocessor","Arca RISC","PKU-Unity & MPRC Peking Uni. mc series","eXcess configurable cpu","Icera Semi. Deep Execution Processor","Altera Nios II","National Semi. CompactRISC CRX","Motorola XGATE","Infineon C16x/XC16x","Renesas M16C","Microchip Technology dsPIC30F","Freescale Communication Engine RISC","Renesas M32C","Altium TSK3000","Freescale RS08","Analog Devices SHARC family","Cyan Technology eCOG2","Sunplus S+core7 RISC","New Japan Radio (NJR) 24-bit DSP","Broadcom VideoCore III","RISC for Lattice FPGA","Seiko Epson C17","Texas Instruments TMS320C6000 DSP","Texas Instruments TMS320C2000 DSP","Texas Instruments TMS320C55x DSP","Texas Instruments App. Specific RISC","Texas Instruments Prog. Realtime Unit","STMicroelectronics 64bit VLIW DSP","Cypress M8C","Renesas R32C","NXP Semi. TriMedia","QUALCOMM DSP6","Intel 8051 and variants","STMicroelectronics STxP7x","Andes Tech. compact code emb. RISC","Cyan Technology eCOG1X","Dallas Semi. MAXQ30 mc","New Japan Radio (NJR) 16-bit DSP","M2000 Reconfigurable RISC","Cray NV2 vector architecture","Renesas RX","Imagination Tech. META","MCST Elbrus","Cyan Technology eCOG16","National Semi. CompactRISC CR16","Freescale Extended Time Processing Unit","Infineon Tech. SLE9X","Intel L10M","Intel K10M","ARM AARCH64","Amtel 32-bit microprocessor","STMicroelectronics STM8","Tileta TILE64","Tilera TILEPro","Xilinx MicroBlaze","NVIDIA CUDA","Tilera TILE-Gx","CloudShield","KIPO-KAIST Core-A 1st gen.","KIPO-KAIST Core-A 2nd gen.","Synopsys ARCompact V2","Open8 RISC","Renesas RL78","Broadcom VideoCore V","Renesas 78KOR","Freescale 56800EX DSC","Beyond BA1","Beyond BA2","XMOS xCORE","Microchip 8-bit PIC(r)","KM211 KM32","KM211 KMX32","KM211 KMX16","KM211 KMX8","KM211 KVARC","Paneve CDP","Cognitive Smart Memory Processor","Bluechip CoolEngine","Nanoradio Optimized RISC","CSR Kalimba","Zilog Z80","Controls and Data Services VISIUMcore","FTDI Chip FT32","Moxie processor","AMD GPU","RISC-V","Linux BPF – in-kernel virtual machine","C-SKY","Digital Alpha","Invalid ELF version.","Current ELF version.","Section header.","Section name.","Section type. One of the <code>SHT_*</code> constants.","Section flags. A combination of the <code>SHF_*</code> constants.","Section virtual address at execution.","Section file offset.","Section size in bytes.","Link to another section.","Additional section information.","Section alignment.","Entry size if the section holds a table.","Section header.","Section name.","Section type. One of the <code>SHT_*</code> constants.","Section flags. A combination of the <code>SHF_*</code> constants.","Section virtual address at execution.","Section file offset.","Section size in bytes.","Link to another section.","Additional section information.","Section alignment.","Entry size if the section holds a table.","Undefined section.","OS-specific range start. Start of reserved section …","Start of processor-specific section indices.","End of processor-specific section indices.","Start of OS-specific section indices.","End of OS-specific section indices.","Associated symbol is absolute.","Associated symbol is common.","Section index is in the <code>SHT_SYMTAB_SHNDX</code> section.","End of reserved section indices.","Section header table entry is unused.","Program data.","Symbol table.","String table.","Relocation entries with explicit addends.","Symbol hash table.","Dynamic linking information.","Notes.","Program space with no data (bss).","Relocation entries without explicit addends.","Reserved section type.","Dynamic linker symbol table.","Array of constructors.","Array of destructors.","Array of pre-constructors.","Section group.","Extended section indices for a symbol table.","Start of OS-specific section types.","End of OS-specific section types.","Start of processor-specific section types.","End of processor-specific section types.","Start of application-specific section types.","End of application-specific section types.","Section is writable.","Section occupies memory during execution.","Section is executable.","Section may be be merged to eliminate duplication.","Section contains nul-terminated strings.","The <code>sh_info</code> field contains a section header table index.","Section has special ordering requirements when combining …","Section requires special OS-specific handling.","Section is a member of a group.","Section holds thread-local storage.","Section is compressed.","OS-specific section flags.","Processor-specific section flags.","Section compression header.","Compression format. One of the <code>ELFCOMPRESS_*</code> values.","Uncompressed data size.","Uncompressed data alignment.","Section compression header.","Compression format. One of the <code>ELFCOMPRESS_*</code> values.","Reserved.","Uncompressed data size.","Uncompressed data alignment.","ZLIB/DEFLATE algorithm.","Start of OS-specific compression types.","End of OS-specific compression types.","Start of processor-specific compression types.","End of processor-specific compression types.","Mark group as COMDAT.","Symbol table entry.","Symbol name.","Symbol value.","Symbol size.","Symbol type and binding.","Symbol visibility.","Section index or one of the <code>SHN_*</code> values.","Get the <code>st_bind</code> component of the <code>st_info</code> field.","Get the <code>st_type</code> component of the <code>st_info</code> field.","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …","Get the <code>st_visibility</code> component of the <code>st_info</code> field.","Symbol table entry.","Symbol name.","Symbol type and binding.","Symbol visibility.","Section index or one of the <code>SHN_*</code> values.","Symbol value.","Symbol size.","Get the <code>st_bind</code> component of the <code>st_info</code> field.","Get the <code>st_type</code> component of the <code>st_info</code> field.","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …","Get the <code>st_visibility</code> component of the <code>st_info</code> field.","Additional information about a <code>Sym32</code>.","Direct bindings, symbol bound to.","Per symbol flags.","Additional information about a <code>Sym64</code>.","Direct bindings, symbol bound to.","Per symbol flags.","Symbol bound to self","Symbol bound to parent","Beginning of reserved entries","Direct bound symbol","Pass-thru symbol for translator","Symbol is a copy-reloc","Symbol bound to object to be lazy loaded","","","","Local symbol.","Global symbol.","Weak symbol.","Start of OS-specific symbol binding.","Unique symbol.","End of OS-specific symbol binding.","Start of processor-specific symbol binding.","End of processor-specific symbol binding.","Symbol type is unspecified.","Symbol is a data object.","Symbol is a code object.","Symbol is associated with a section.","Symbol’s name is a file name.","Symbol is a common data object.","Symbol is a thread-local storage object.","Start of OS-specific symbol types.","Symbol is an indirect code object.","End of OS-specific symbol types.","Start of processor-specific symbol types.","End of processor-specific symbol types.","Default symbol visibility rules.","Processor specific hidden class.","Symbol is not visible to other components.","Symbol is visible to other components, but is not …","Relocation table entry without explicit addend.","Relocation address.","Relocation type and symbol index.","Get the <code>r_sym</code> component of the <code>r_info</code> field.","Get the <code>r_type</code> component of the <code>r_info</code> field.","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Relocation table entry with explicit addend.","Relocation address.","Relocation type and symbol index.","Explicit addend.","Get the <code>r_sym</code> component of the <code>r_info</code> field.","Get the <code>r_type</code> component of the <code>r_info</code> field.","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Relocation table entry without explicit addend.","Relocation address.","Relocation type and symbol index.","Get the <code>r_sym</code> component of the <code>r_info</code> field.","Get the <code>r_type</code> component of the <code>r_info</code> field.","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Relocation table entry with explicit addend.","Relocation address.","Relocation type and symbol index.","Explicit addend.","Get the <code>r_sym</code> component of the <code>r_info</code> field.","Get the <code>r_type</code> component of the <code>r_info</code> field.","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Program segment header.","Segment type. One of the <code>PT_*</code> constants.","Segment file offset.","Segment virtual address.","Segment physical address.","Segment size in the file.","Segment size in memory.","Segment flags. A combination of the <code>PF_*</code> constants.","Segment alignment.","Program segment header.","Segment type. One of the <code>PT_*</code> constants.","Segment flags. A combination of the <code>PF_*</code> constants.","Segment file offset.","Segment virtual address.","Segment physical address.","Segment size in the file.","Segment size in memory.","Segment alignment.","Special value for <code>FileHeader*::e_phnum</code>.","Program header table entry is unused.","Loadable program segment.","Dynamic linking information.","Program interpreter.","Auxiliary information.","Reserved.","Segment contains the program header table.","Thread-local storage segment.","Start of OS-specific segment types.","GCC <code>.eh_frame_hdr</code> segment.","Indicates stack executability.","Read-only after relocation.","End of OS-specific segment types.","Start of processor-specific segment types.","End of processor-specific segment types.","Segment is executable.","Segment is writable.","Segment is readable.","OS-specific segment flags.","Processor-specific segment flags.","Note name for core files.","Note name for linux core files.","Contains copy of prstatus struct.","Contains copy of fpregset struct.","Contains copy of fpregset struct.","Contains copy of prpsinfo struct.","Contains copy of prxregset struct.","Contains copy of task structure.","String from sysinfo(SI_PLATFORM).","Contains copy of auxv array.","Contains copy of gwindows struct.","Contains copy of asrset struct.","Contains copy of pstatus struct.","Contains copy of psinfo struct.","Contains copy of prcred struct.","Contains copy of utsname struct.","Contains copy of lwpstatus struct.","Contains copy of lwpinfo struct.","Contains copy of fprxregset struct.","Contains copy of siginfo_t, size might increase.","Contains information about mapped files.","Contains copy of user_fxsr_struct.","PowerPC Altivec/VMX registers.","PowerPC SPE/EVR registers.","PowerPC VSX registers.","Target Address Register.","Program Priority Register.","Data Stream Control Register.","Event Based Branch Registers.","Performance Monitor Registers.","TM checkpointed GPR Registers.","TM checkpointed FPR Registers.","TM checkpointed VMX Registers.","TM checkpointed VSX Registers.","TM Special Purpose Registers.","TM checkpointed Target Address Register.","TM checkpointed Program Priority Register.","TM checkpointed Data Stream Control Register.","Memory Protection Keys registers.","i386 TLS slots (struct user_desc).","x86 io permission bitmap (1=deny).","x86 extended state using xsave.","s390 upper register halves.","s390 timer register.","s390 TOD clock comparator register.","s390 TOD programmable register.","s390 control registers.","s390 prefix register.","s390 breaking event address.","s390 system call restart data.","s390 transaction diagnostic block.","s390 vector registers 0-15 upper half.","s390 vector registers 16-31.","s390 guarded storage registers.","s390 guarded storage broadcast control block.","s390 runtime instrumentation.","ARM VFP/NEON registers.","ARM TLS register.","ARM hardware breakpoint registers.","ARM hardware watchpoint registers.","ARM system call number.","ARM Scalable Vector Extension registers.","Vmcore Device Dump Note.","MIPS DSP ASE registers.","MIPS floating-point mode.","Note type for version string.","Dynamic section entry.","Dynamic entry type.","Value (integer or address).","Dynamic section entry.","Dynamic entry type.","Value (integer or address).","Marks end of dynamic section","Name of needed library","Size in bytes of PLT relocs","Processor defined value","Address of symbol hash table","Address of string table","Address of symbol table","Address of Rela relocs","Total size of Rela relocs","Size of one Rela reloc","Size of string table","Size of one symbol table entry","Address of init function","Address of termination function","Name of shared object","Library search path (deprecated)","Start symbol search here","Address of Rel relocs","Total size of Rel relocs","Size of one Rel reloc","Type of reloc in PLT","For debugging; unspecified","Reloc might modify .text","Address of PLT relocs","Process relocations of object","Array with addresses of init fct","Array with addresses of fini fct","Size in bytes of DT_INIT_ARRAY","Size in bytes of DT_FINI_ARRAY","Library search path","Flags for the object being loaded","Start of encoded range","Array with addresses of preinit fct","size in bytes of DT_PREINIT_ARRAY","Address of SYMTAB_SHNDX section","Start of OS-specific","End of OS-specific","Start of processor-specific","End of processor-specific","","Prelinking timestamp","Size of conflict section","Size of library list","","","","","Feature selection (DTF_*).","Flags for DT_* entries, affecting the following DT_* …","Size of syminfo table (in bytes)","Entry size of syminfo","","","GNU-style hash table.","","","Start of conflict section","Library list","Configuration information.","Dependency auditing.","Object auditing.","PLT padding.","Move table.","Syminfo table.","","","","","State flags, see DF_1_* below.","Address of version definition table","Number of version definitions","Address of table with needed versions","Number of needed versions","Shared object to load before self","Shared object to get values from","Object may use DF_ORIGIN","Symbol resolutions starts here","Object contains text relocations","No lazy binding for this object","Module uses the static TLS model","Set RTLD_NOW for this object.","Set RTLD_GLOBAL for this object.","Set RTLD_GROUP for this object.","Set RTLD_NODELETE for this object.","Trigger filtee loading at runtime.","Set RTLD_INITFIRST for this object.","Set RTLD_NOOPEN for this object.","$ORIGIN must be handled.","Direct binding enabled.","","Object is used to interpose.","Ignore default lib search path.","Object can’t be dldump’ed.","Configuration alternative created.","Filtee terminates filters search.","Disp reloc applied at build time.","Disp reloc applied at run-time.","Object has no-direct binding.","","","","Object is modified after built.","","Object has individual interposers.","Global auditing required.","Singleton symbols are used.","","","Note section entry header.","Length of the note’s name.","Length of the note’s descriptor.","Type of the note.","Note section entry header.","Length of the note’s name.","Length of the note’s descriptor.","Type of the note.","Solaris entries in the note section have this name.","Desired pagesize for the binary.","GNU entries in the note section have this name.","ABI information.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","Synthetic hwcap information.","Build ID bits as generated by <code>ld --build-id</code>.","Version note generated by GNU gold containing a version …","Program property.","No reloc","Direct 32 bit","Direct 16 bit","Direct 8 bit","PC relative 32 bit","PC relative 16 bit","PC relative 8 bit","32 bit PC relative GOT entry","16 bit PC relative GOT entry","8 bit PC relative GOT entry","32 bit GOT offset","16 bit GOT offset","8 bit GOT offset","32 bit PC relative PLT address","16 bit PC relative PLT address","8 bit PC relative PLT address","32 bit PLT offset","16 bit PLT offset","8 bit PLT offset","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","32 bit GOT offset for GD","16 bit GOT offset for GD","8 bit GOT offset for GD","32 bit GOT offset for LDM","16 bit GOT offset for LDM","8 bit GOT offset for LDM","32 bit module-relative offset","16 bit module-relative offset","8 bit module-relative offset","32 bit GOT offset for IE","16 bit GOT offset for IE","8 bit GOT offset for IE","32 bit offset relative to static TLS block","16 bit offset relative to static TLS block","8 bit offset relative to static TLS block","32 bit module number","32 bit module-relative offset","32 bit TP-relative offset","No reloc","Direct 32 bit","PC relative 32 bit","32 bit GOT entry","32 bit PLT address","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","32 bit offset to GOT","32 bit PC relative offset to GOT","Direct 32 bit PLT address","Offset in static TLS block","Address of GOT entry for static TLS block offset","GOT entry for static TLS block offset","Offset relative to static TLS block","Direct 32 bit for GNU version of general dynamic thread …","Direct 32 bit for GNU version of local dynamic thread …","Direct 16 bit","PC relative 16 bit","Direct 8 bit","PC relative 8 bit","Direct 32 bit for general dynamic thread local data","Tag for pushl in GD TLS code","Relocation for call to __tls_get_addr()","Tag for popl in GD TLS code","Direct 32 bit for local dynamic thread local data in LE …","Tag for pushl in LDM TLS code","Relocation for call to __tls_get_addr() in LDM code","Tag for popl in LDM TLS code","Offset relative to TLS block","GOT entry for negated static TLS block offset","Negated offset relative to static TLS block","ID of module containing symbol","Offset in TLS block","Negated offset in static TLS block","32-bit symbol size","GOT offset for TLS descriptor.","Marker of call through TLS descriptor for relaxation.","TLS descriptor containing pointer to code and to …","Adjust indirectly by program base","Load from 32 bit GOT entry, relaxable.","Global register reserved to app.","","","","","little endian data","","generic V8+ features","Sun UltraSPARC1 extensions","HAL R1 extensions","Sun UltraSPARCIII extensions","No reloc","Direct 8 bit","Direct 16 bit","Direct 32 bit","PC relative 8 bit","PC relative 16 bit","PC relative 32 bit","PC relative 30 bit shifted","PC relative 22 bit shifted","High 22 bit","Direct 22 bit","Direct 13 bit","Truncated 10 bit","Truncated 10 bit GOT entry","13 bit GOT entry","22 bit GOT entry shifted","PC relative 10 bit truncated","PC relative 22 bit shifted","30 bit PC relative PLT address","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","Direct 32 bit unaligned","Direct 32 bit ref to PLT entry","High 22 bit PLT entry","Truncated 10 bit PLT entry","PC rel 32 bit ref to PLT entry","PC rel high 22 bit PLT entry","PC rel trunc 10 bit PLT entry","Direct 10 bit","Direct 11 bit","Direct 64 bit","10bit with secondary 13bit addend","Top 22 bits of direct 64 bit","High middle 10 bits of …","Low middle 22 bits of …","Top 22 bits of pc rel 64 bit","High middle 10 bit of …","Low miggle 22 bits of …","PC relative 16 bit shifted","PC relative 19 bit shifted","was part of v9 ABI but was removed","Direct 7 bit","Direct 5 bit","Direct 6 bit","PC relative 64 bit","Direct 64 bit ref to PLT entry","High 22 bit complemented","Truncated 11 bit complemented","Direct high 12 of 44 bit","Direct mid 22 of 44 bit","Direct low 10 of 44 bit","Global register usage","Direct 64 bit unaligned","Direct 16 bit unaligned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A .noreorder directive was used.","Contains PIC code.","Uses PIC calling sequence.","","","","","Uses FP64 (12 callee-saved).","Uses IEEE 754-2008 NaN encoding.","MIPS architecture level.","-mips1 code.","-mips2 code.","-mips3 code.","-mips4 code.","-mips5 code.","MIPS32 code.","MIPS64 code.","MIPS32r2 code.","MIPS64r2 code.","Allocated common symbols.","Allocated test symbols.","Allocated data symbols.","Small common symbols.","Small undefined symbols.","Shared objects used in link.","","Conflicting symbols.","Global data area sizes.","Reserved for SGI/MIPS compilers","MIPS ECOFF debugging info.","Register usage information.","","","","","","Miscellaneous options.","","","","","","","","","","","","","","","DWARF debugging information.","","","Event section.","","","","","","","","","Must be in global data area.","","","","","","","","","Only valid for <code>STB_MIPS_SPLIT_COMMON</code>.","","Undefined.","Register usage information.","Exception processing options.","Section padding options.","Hardware workarounds performed","record the fill value used by the linker.","reserve space for desktop tools to write.","HW workarounds.  ‘AND’ bits when merging.","HW workarounds.  ‘OR’ bits when merging.","FPE’s which MUST be enabled.","FPE’s which MAY be enabled.","page zero must be mapped.","Force sequential memory mode?","Force floating point debug mode?","","Dismiss invalid address faults?","","","","","","R4000 end-of-page patch.","may need R8000 prefetch patch.","R5000 end-of-page patch.","R5000 cvt.[ds].l bug.  clean=1.","","","","","","No reloc","Direct 16 bit","Direct 32 bit","PC relative 32 bit","Direct 26 bit shifted","High 16 bit","Low 16 bit","GP relative 16 bit","16 bit literal entry","16 bit GOT entry","PC relative 16 bit","16 bit GOT entry for function","GP relative 32 bit","","","","","","","","","","","","","","","","","","","","","","","Module number 32 bit","Module-relative offset 32 bit","Module number 64 bit","Module-relative offset 64 bit","16 bit GOT offset for GD","16 bit GOT offset for LDM","Module-relative offset, high 16 bits","Module-relative offset, low 16 bits","16 bit GOT offset for IE","TP-relative offset, 32 bit","TP-relative offset, 64 bit","TP-relative offset, high 16 bits","TP-relative offset, low 16 bits","","","","Register usage information.","Runtime procedure table.","","FP mode requirement.","","Runtime linker interface version","Timestamp","Checksum","Version string (string tbl index)","Flags","Base address","","Address of CONFLICT section","Address of LIBLIST section","Number of local GOT entries","Number of CONFLICT entries","Number of LIBLIST entries","Number of DYNSYM entries","First external DYNSYM","First GOT entry in DYNSYM","Number of GOT page table entries","Address of run time loader map.","Delta C++ class definition.","Number of entries in DT_MIPS_DELTA_CLASS.","Delta C++ class instances.","Number of entries in DT_MIPS_DELTA_INSTANCE.","Delta relocations.","Number of entries in DT_MIPS_DELTA_RELOC.","Delta symbols that Delta relocations refer to.","Number of entries in DT_MIPS_DELTA_SYM.","Delta symbols that hold the class declaration.","Number of entries in DT_MIPS_DELTA_CLASSSYM.","Flags indicating for C++ flavor.","","","","","","","Address of .options.","Address of .interface.","","Size of the .interface section.","Address of rld_text_rsolve function stored in GOT.","Default suffix of dso to be added by rld on dlopen() …","(O32)Size of compact rel section.","GP value for aux GOTs.","Address of aux .dynamic.","The address of .got.plt in an executable using the new …","The base of the PLT in an executable using the new …","An alternative description of the classic MIPS RLD_MAP …","No flags","Use quickstart","Hash size not power of 2","Ignore LD_LIBRARY_PATH","","","","","","","","","","","","","","Require exact match","Ignore interface version","","","","","Trap nil pointer dereference.","Program uses arch. extensions.","Program expects little endian.","Program expects wide mode.","No kernel assisted branch prediction.","Allow lazy swapping.","Architecture version.","PA-RISC 1.0 big-endian.","PA-RISC 1.1 big-endian.","PA-RISC 2.0 big-endian.","Section for tenatively declared symbols in ANSI C.","Common blocks in huge model.","Contains product specific ext.","Unwind information.","Debug info for optimized code.","Section with short addressing.","Section far from gp.","Static branch prediction code.","Millicode function entry point.","","","No reloc.","Direct 32-bit reference.","Left 21 bits of eff. address.","Right 17 bits of eff. address.","17 bits of eff. address.","Right 14 bits of eff. address.","32-bit rel. address.","Left 21 bits of rel. address.","Right 17 bits of rel. address.","17 bits of rel. address.","Right 14 bits of rel. address.","Left 21 bits of rel. address.","Right 14 bits of rel. address.","GP-relative, left 21 bits.","GP-relative, right 14 bits.","LT-relative, left 21 bits.","LT-relative, right 14 bits.","32 bits section rel. address.","No relocation, set segment base.","32 bits segment rel. address.","PLT rel. address, left 21 bits.","PLT rel. address, right 14 bits.","32 bits LT-rel. function pointer.","LT-rel. fct ptr, left 21 bits.","LT-rel. fct ptr, right 14 bits.","64 bits function address.","32 bits function address.","Left 21 bits of fdesc address.","Right 14 bits of fdesc address.","64 bits PC-rel. address.","22 bits PC-rel. address.","PC-rel. address, right 14 bits.","PC rel. address, right 14 bits.","16 bits PC-rel. address.","16 bits PC-rel. address.","16 bits PC-rel. address.","64 bits of eff. address.","14 bits of eff. address.","14 bits of eff. address.","16 bits of eff. address.","16 bits of eff. address.","16 bits of eff. address.","64 bits of GP-rel. address.","GP-rel. address, right 14 bits.","GP-rel. address, right 14 bits.","16 bits GP-rel. address.","16 bits GP-rel. address.","16 bits GP-rel. address.","64 bits LT-rel. address.","LT-rel. address, right 14 bits.","LT-rel. address, right 14 bits.","16 bits LT-rel. address.","16 bits LT-rel. address.","16 bits LT-rel. address.","64 bits section rel. address.","64 bits segment rel. address.","PLT-rel. address, right 14 bits.","PLT-rel. address, right 14 bits.","16 bits LT-rel. address.","16 bits PLT-rel. address.","16 bits PLT-rel. address.","64 bits LT-rel. function ptr.","LT-rel. fct. ptr., right 14 bits.","LT-rel. fct. ptr., right 14 bits.","16 bits LT-rel. function ptr.","16 bits LT-rel. function ptr.","16 bits LT-rel. function ptr.","","Copy relocation.","Dynamic reloc, imported PLT","Dynamic reloc, exported PLT","32 bits TP-rel. address.","TP-rel. address, left 21 bits.","TP-rel. address, right 14 bits.","LT-TP-rel. address, left 21 bits.","LT-TP-rel. address, right 14 bits.","14 bits LT-TP-rel. address.","64 bits TP-rel. address.","TP-rel. address, right 14 bits.","TP-rel. address, right 14 bits.","16 bits TP-rel. address.","16 bits TP-rel. address.","16 bits TP-rel. address.","64 bits LT-TP-rel. address.","LT-TP-rel. address, right 14 bits.","LT-TP-rel. address, right 14 bits.","16 bits LT-TP-rel. address.","16 bits LT-TP-rel. address.","16 bits LT-TP-rel. address.","","","GD 21-bit left.","GD 14-bit right.","GD call to __t_g_a.","LD module 21-bit left.","LD module 14-bit right.","LD module call to __t_g_a.","LD offset 21-bit left.","LD offset 14-bit right.","DTP module 32-bit.","DTP module 64-bit.","DTP offset 32-bit.","DTP offset 32-bit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All addresses must be < 2GB.","Relocations for relaxing exist.","","","","No PV required.","PV only used for initial ldgp.","No reloc","Direct 32 bit","Direct 64 bit","GP relative 32 bit","GP relative 16 bit w/optimization","Optimization hint for LITERAL","Add displacement to GP","PC+4 relative 23 bit shifted","PC+4 relative 16 bit shifted","PC relative 16 bit","PC relative 32 bit","PC relative 64 bit","GP relative 32 bit, high 16 bits","GP relative 32 bit, low 16 bits","GP relative 16 bit","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","","","","","","","","","","","","","","","","","","","","","","PowerPC embedded flag","PowerPC -mrelocatable flag","PowerPC -mrelocatable-lib flag","","32bit absolute address","26bit address, 2 bits ignored.","16bit absolute address","lower 16bit of absolute address","high 16bit of absolute address","adjusted high 16bit","16bit address, 2 bits ignored","","","PC relative 26 bit","PC relative 16 bit","","","","","","","","","","","","","","","","","","","","","","","","","","none    (sym+add)@tls","word32  (sym+add)@dtpmod","half16* (sym+add)@tprel","half16  (sym+add)@tprel@l","half16  (sym+add)@tprel@h","half16  (sym+add)@tprel@ha","word32  (sym+add)@tprel","half16*(sym+add)@dtprel","half16  (sym+add)@dtprel@l","half16  (sym+add)@dtprel@h","half16  (sym+add)@dtprel@ha","word32  (sym+add)@dtprel","half16* (sym+add)@got@tlsgd","half16  (sym+add)@got@tlsgd@l","half16  (sym+add)@got@tlsgd@h","half16  (sym+add)@got@tlsgd@ha","half16* (sym+add)@got@tlsld","half16  (sym+add)@got@tlsld@l","half16  (sym+add)@got@tlsld@h","half16  (sym+add)@got@tlsld@ha","half16* (sym+add)@got@tprel","half16  (sym+add)@got@tprel@l","half16  (sym+add)@got@tprel@h","half16  (sym+add)@got@tprel@ha","half16* (sym+add)@got@dtprel","half16* (sym+add)@got@dtprel@l","half16* (sym+add)@got@dtprel@h","half16* (sym+add)@got@dtprel@ha","none    (sym+add)@tlsgd","none    (sym+add)@tlsld","","","","","","","","","16 bit offset in SDA","","","","","","","16 bit relative offset in SDA","like EMB_SDA21, but lower 16 bit","like EMB_SDA21, but high 16 bit","like EMB_SDA21, adjusted high 16","like EMB_RELSDA, but lower 16 bit","like EMB_RELSDA, but high 16 bit","like EMB_RELSDA, adjusted high 16","GNU extension to support local ifunc.","half16   (sym+add-.)","half16   (sym+add-.)@l","half16   (sym+add-.)@h","half16   (sym+add-.)@ha","This is a phony reloc to handle any old fashioned TOC16 …","","","","","32bit absolute address","26bit address, word aligned","16bit absolute address","lower 16bits of address","high 16bits of address.","adjusted high 16bits.","16bit address, word aligned","","","PC-rel. 26 bit, word aligned","PC relative 16 bit","","","","","","","","","","","","","","","","","","","","","","","word30 (S + A - P) >> 2","doubleword64 S + A","half16 #higher(S + A)","half16 #highera(S + A)","half16 #highest(S + A)","half16 #highesta(S + A)","doubleword64 S + A","doubleword64 S + A - P","doubleword64 L + A","doubleword64 L + A - P","half16* S + A - .TOC","half16 #lo(S + A - .TOC.)","half16 #hi(S + A - .TOC.)","half16 #ha(S + A - .TOC.)","doubleword64 .TOC","half16* M + A","half16 #lo(M + A)","half16 #hi(M + A)","half16 #ha(M + A)","half16ds* (S + A) >> 2","half16ds  #lo(S + A) >> 2","half16ds* (G + A) >> 2","half16ds  #lo(G + A) >> 2","half16ds  #lo(L + A) >> 2","half16ds* (R + A) >> 2","half16ds  #lo(R + A) >> 2","half16ds* (S + A - .TOC.) >> 2","half16ds  #lo(S + A - .TOC.) >> 2","half16ds* (M + A) >> 2","half16ds  #lo(M + A) >> 2","none    (sym+add)@tls","doubleword64 (sym+add)@dtpmod","half16* (sym+add)@tprel","half16  (sym+add)@tprel@l","half16  (sym+add)@tprel@h","half16  (sym+add)@tprel@ha","doubleword64 (sym+add)@tprel","half16* (sym+add)@dtprel","half16  (sym+add)@dtprel@l","half16  (sym+add)@dtprel@h","half16  (sym+add)@dtprel@ha","doubleword64 (sym+add)@dtprel","half16* (sym+add)@got@tlsgd","half16  (sym+add)@got@tlsgd@l","half16  (sym+add)@got@tlsgd@h","half16  (sym+add)@got@tlsgd@ha","half16* (sym+add)@got@tlsld","half16  (sym+add)@got@tlsld@l","half16  (sym+add)@got@tlsld@h","half16  (sym+add)@got@tlsld@ha","half16ds* (sym+add)@got@tprel","half16ds (sym+add)@got@tprel@l","half16  (sym+add)@got@tprel@h","half16  (sym+add)@got@tprel@ha","half16ds* (sym+add)@got@dtprel","half16ds (sym+add)@got@dtprel@l","half16  (sym+add)@got@dtprel@h","half16  (sym+add)@got@dtprel@ha","half16ds* (sym+add)@tprel","half16ds (sym+add)@tprel@l","half16  (sym+add)@tprel@higher","half16  (sym+add)@tprel@highera","half16  (sym+add)@tprel@highest","half16  (sym+add)@tprel@highesta","half16ds* (sym+add)@dtprel","half16ds (sym+add)@dtprel@l","half16  (sym+add)@dtprel@higher","half16  (sym+add)@dtprel@highera","half16  (sym+add)@dtprel@highest","half16  (sym+add)@dtprel@highesta","none    (sym+add)@tlsgd","none    (sym+add)@tlsld","none","","","","","","","GNU extension to support local ifunc.","GNU extension to support local ifunc.","half16   (sym+add-.)","half16   (sym+add-.)@l","half16   (sym+add-.)@h","half16   (sym+add-.)@ha","PowerPC64 bits specifying ABI.","","","","","","","","","","","","","","","","8-bit structure alignment is in use","","","","","","NB conflicts with EF_ARM_SOFT_FLOAT","NB conflicts with EF_ARM_VFP_FLOAT","","","","","","","","","","","","","A Thumb function.","A Thumb label.","Section contains an entry point","Section may be multiply defined in the input to a link …","Segment contains the location addressed by the static …","Position-independent segment.","Absolute segment.","ARM unwind segment.","ARM unwind section.","Preemption details.","ARM attributes section.","No relocation.","Direct 32 bit.","Copy symbol at runtime.","Create GOT entry.","Create PLT entry.","Adjust by program base.","Module number, 32 bit.","Module-relative offset, 32 bit.","TP-relative offset, 32 bit.","TLS Descriptor.","STT_GNU_IFUNC relocation.","Direct 64 bit.","Direct 32 bit.","Direct 16-bit.","PC-relative 64-bit.","PC-relative 32-bit.","PC-relative 16-bit.","Dir. MOVZ imm. from bits 15:0.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 31:16.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 47:32.","Likewise for MOVK; no check.","Dir. MOV{K,Z} imm. from 63:48.","Dir. MOV{N,Z} imm. from 15:0.","Dir. MOV{N,Z} imm. from 31:16.","Dir. MOV{N,Z} imm. from 47:32.","PC-rel. LD imm. from bits 20:2.","PC-rel. ADR imm. from bits 20:0.","Page-rel. ADRP imm. from 32:12.","Likewise; no overflow check.","Dir. ADD imm. from bits 11:0.","Likewise for LD/ST; no check.","PC-rel. TBZ/TBNZ imm. from 15:2.","PC-rel. cond. br. imm. from 20:2.","PC-rel. B imm. from bits 27:2.","Likewise for CALL.","Dir. ADD imm. from bits 11:1.","Likewise for bits 11:2.","Likewise for bits 11:3.","PC-rel. MOV{N,Z} imm. from 15:0.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 31:16.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 47:32.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 63:48.","Dir. ADD imm. from bits 11:4.","GOT-rel. off. MOV{N,Z} imm. 15:0.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 31:16.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 47:32.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 63:48.","GOT-relative 64-bit.","GOT-relative 32-bit.","PC-rel. GOT off. load imm. 20:2.","GOT-rel. off. LD/ST imm. 14:3.","P-page-rel. GOT off. ADRP 32:12.","Dir. GOT off. LD/ST imm. 11:3.","GOT-page-rel. GOT off. LD/ST 14:3","PC-relative ADR imm. 20:0.","page-rel. ADRP imm. 32:12.","direct ADD imm. from 11:0.","GOT-rel. MOV{N,Z} 31:16.","GOT-rel. MOVK imm. 15:0.","Like 512; local dynamic model.","Like 513; local dynamic model.","Like 514; local dynamic model.","Like 515; local dynamic model.","Like 516; local dynamic model.","TLS PC-rel. load imm. 20:2.","TLS DTP-rel. MOV{N,Z} 47:32.","TLS DTP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS DTP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","DTP-rel. ADD imm. from 23:12.","DTP-rel. ADD imm. from 11:0.","Likewise; no ovfl. check.","DTP-rel. LD/ST imm. 11:0.","Likewise; no check.","DTP-rel. LD/ST imm. 11:1.","Likewise; no check.","DTP-rel. LD/ST imm. 11:2.","Likewise; no check.","DTP-rel. LD/ST imm. 11:3.","Likewise; no check.","GOT-rel. MOV{N,Z} 31:16.","GOT-rel. MOVK 15:0.","Page-rel. ADRP 32:12.","Direct LD off. 11:3.","PC-rel. load imm. 20:2.","TLS TP-rel. MOV{N,Z} 47:32.","TLS TP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS TP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","TP-rel. ADD imm. 23:12.","TP-rel. ADD imm. 11:0.","Likewise; no ovfl. check.","TP-rel. LD/ST off. 11:0.","Likewise; no ovfl. check.","TP-rel. LD/ST off. 11:1.","Likewise; no check.","TP-rel. LD/ST off. 11:2.","Likewise; no check.","TP-rel. LD/ST off. 11:3.","Likewise; no check.","PC-rel. load immediate 20:2.","PC-rel. ADR immediate 20:0.","Page-rel. ADRP imm. 32:12.","Direct LD off. from 11:3.","Direct ADD imm. from 11:0.","GOT-rel. MOV{N,Z} imm. 31:16.","GOT-rel. MOVK imm. 15:0; no ck.","Relax LDR.","Relax ADD.","Relax BLR.","TP-rel. LD/ST off. 11:4.","Likewise; no check.","DTP-rel. LD/ST imm. 11:4.","Likewise; no check.","Copy symbol at runtime.","Create GOT entry.","Create PLT entry.","Adjust by program base.","Module number, 64 bit.","Module-relative offset, 64 bit.","TP-relative offset, 64 bit.","TLS Descriptor.","STT_GNU_IFUNC relocation.","No reloc","Deprecated PC relative 26 bit branch.","Direct 32 bit","PC relative 32 bit","","Direct 16 bit","Direct 12 bit","Direct & 0x7C (LDR, STR).","Direct 8 bit","","PC relative 24 bit (Thumb32 BL).","PC relative & 0x3FC (Thumb16 LDR, ADD, ADR).","","Obsolete static relocation.","Dynamic relocation.","Reserved.","Reserved.","Reserved.","ID of module containing symbol","Offset in TLS block","Offset in static TLS block","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","32 bit offset to GOT","32 bit PC relative offset to GOT","32 bit GOT entry","Deprecated, 32 bit PLT address.","PC relative 24 bit (BL, BLX).","PC relative 24 bit (B, BL).","PC relative 24 bit (Thumb32 B.W).","Adjust by program base.","Obsolete.","Obsolete.","Obsolete.","Deprecated, prog. base relative.","Deprecated, prog. base relative.","Deprecated, prog. base relative.","","Program base relative.","","","32 bit PC relative.","Direct 16-bit (MOVW).","Direct high 16-bit (MOVT).","PC relative 16-bit (MOVW).","PC relative (MOVT).","Direct 16 bit (Thumb32 MOVW).","Direct high 16 bit (Thumb32 MOVT).","PC relative 16 bit (Thumb32 MOVW).","PC relative high 16 bit (Thumb32 MOVT).","PC relative 20 bit (Thumb32 B.W).","PC relative X & 0x7E (Thumb16 CBZ, CBNZ).","PC relative 12 bit (Thumb32 ADR.W).","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).","Direct 32-bit.","PC relative 32-bit.","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (LDR,STR,LDRB,STRB).","PC relative (LDR,STR,LDRB,STRB).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","PC relative (LDC, STC).","PC relative (LDC, STC).","PC relative (LDC, STC).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDC,STC).","Program base relative (LDC,STC).","Program base relative (LDC,STC).","Program base relative 16 bit (MOVW).","Program base relative high 16 bit (MOVT).","Program base relative 16 bit (MOVW).","Program base relative 16 bit (Thumb32 MOVW).","Program base relative high 16 bit (Thumb32 MOVT).","Program base relative 16 bit (Thumb32 MOVW).","","","TLS relaxation.","","","GOT entry.","PC relative GOT entry.","GOT entry relative to GOT origin (LDR).","12 bit, GOT entry relative to GOT origin (LDR, STR).","","","","PC relative & 0xFFE (Thumb16 B).","PC relative & 0x1FE (Thumb16 B/B).","PC-rel 32 bit for global dynamic thread local data","PC-rel 32 bit for local dynamic thread local data","32 bit offset relative to TLS block","PC-rel 32 bit for GOT entry of static TLS block offset","32 bit offset relative to static TLS block","12 bit relative to TLS block (LDR, STR).","12 bit relative to static TLS block (LDR, STR).","12 bit GOT entry relative to GOT origin (LDR).","Obsolete.","","","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).","","","","","","","","","no reloc","direct 32 bit (S + A)","disp ((S + A - P) >> 2) & 0xff","disp ((S + A - P) >> 1) & 0x7ff","32-bit rel (S + A - P)","disp ((S + A - P) >>1) & 0x7ff","32 bit adjust program base(B + A)","32 bit adjust by program base","off between got and sym (S)","PLT entry (S)","offset to GOT (S + A - GOT)","PC offset to GOT (GOT + A - P)","32 bit GOT entry (G)","32 bit PLT entry (G)","GOT entry in GLOB_DAT (GOT + G)","PLT entry in GLOB_DAT (GOT + G)","((S + A - P) >> 1) & 0x3ff_ffff","disp ((S + A - P) >> 1) & 0xffff","disp ((S + A - P) >> 2) & 0xffff","disp ((S + A - P) >> 1) & 0x3ff","disp ((S + A - P) >> 2) & 0x3ff","high & low 16 bit ADDR, ((S + A) >> 16) & 0xffff","(S + A) & 0xffff","high & low 16 bit GOTPC, ((GOT + A - P) >> 16) & 0xffff","(GOT + A - P) & 0xffff","high & low 16 bit GOTOFF, ((S + A - GOT) >> 16) & 0xffff","(S + A - GOT) & 0xffff","12 bit disp GOT entry (G)","high & low 16 bit GOT, (G >> 16) & 0xffff","(G & 0xffff)","12 bit disp PLT entry (G)","high & low 16 bit PLT, (G >> 16) & 0xffff","G & 0xffff","high & low 16 bit ADDRGOT, (GOT + G * 4) & 0xffff","(GOT + G * 4) & 0xffff","high & low 16 bit ADDRPLT, ((GOT + G * 4) >> 16) & 0xFFFF","(GOT+G*4) & 0xffff","disp ((S+A-P) >>1) & x3ff_ffff","(S+A-BTEXT) & 0xffff","(S+A-BTEXT) & 0xffff","disp ((S+A-P) >>1) & 0x3ffff","disp (S+A-BDATA) & 0x3ffff","disp ((S+A-BDATA)>>1) & 0x3ffff","disp ((S+A-BDATA)>>2) & 0x3ffff","disp (G >> 2)","disp (G >> 2)","disp ((S+A-P) >>2) & 0x7f","32 bit offset to TLS block","","","","","","","","","","","","","C-SKY attributes section.","os-specific flags","64-bit ABI","arch. version mask","arch extension bits","ia64 unwind bits","","","","spec insns w/o recovery","extension bits","unwind bits","section near gp","spec insns w/o recovery","","none","symbol + addend, add imm14","symbol + addend, add imm22","symbol + addend, mov imm64","symbol + addend, data4 MSB","symbol + addend, data4 LSB","symbol + addend, data8 MSB","symbol + addend, data8 LSB","@gprel(sym + add), add imm22","@gprel(sym + add), mov imm64","@gprel(sym + add), data4 MSB","@gprel(sym + add), data4 LSB","@gprel(sym + add), data8 MSB","@gprel(sym + add), data8 LSB","@ltoff(sym + add), add imm22","@ltoff(sym + add), mov imm64","@pltoff(sym + add), add imm22","@pltoff(sym + add), mov imm64","@pltoff(sym + add), data8 MSB","@pltoff(sym + add), data8 LSB","@fptr(sym + add), mov imm64","@fptr(sym + add), data4 MSB","@fptr(sym + add), data4 LSB","@fptr(sym + add), data8 MSB","@fptr(sym + add), data8 LSB","@pcrel(sym + add), brl","@pcrel(sym + add), ptb, call","@pcrel(sym + add), chk.s","@pcrel(sym + add), fchkf","@pcrel(sym + add), data4 MSB","@pcrel(sym + add), data4 LSB","@pcrel(sym + add), data8 MSB","@pcrel(sym + add), data8 LSB","@ltoff(@fptr(s+a)), imm22","@ltoff(@fptr(s+a)), imm64","@ltoff(@fptr(s+a)), data4 MSB","@ltoff(@fptr(s+a)), data4 LSB","@ltoff(@fptr(s+a)), data8 MSB","@ltoff(@fptr(s+a)), data8 LSB","@segrel(sym + add), data4 MSB","@segrel(sym + add), data4 LSB","@segrel(sym + add), data8 MSB","@segrel(sym + add), data8 LSB","@secrel(sym + add), data4 MSB","@secrel(sym + add), data4 LSB","@secrel(sym + add), data8 MSB","@secrel(sym + add), data8 LSB","data 4 + REL","data 4 + REL","data 8 + REL","data 8 + REL","symbol + addend, data4 MSB","symbol + addend, data4 LSB","symbol + addend, data8 MSB","symbol + addend, data8 LSB","@pcrel(sym + add), 21bit inst","@pcrel(sym + add), 22bit inst","@pcrel(sym + add), 64bit inst","dynamic reloc, imported PLT, MSB","dynamic reloc, imported PLT, LSB","copy relocation","Addend and symbol difference","LTOFF22, relaxable.","Use of LTOFF22X.","@tprel(sym + add), imm14","@tprel(sym + add), imm22","@tprel(sym + add), imm64","@tprel(sym + add), data8 MSB","@tprel(sym + add), data8 LSB","@ltoff(@tprel(s+a)), imm2","@dtpmod(sym + add), data8 MSB","@dtpmod(sym + add), data8 LSB","@ltoff(@dtpmod(sym + add)), imm22","@dtprel(sym + add), imm14","@dtprel(sym + add), imm22","@dtprel(sym + add), imm64","@dtprel(sym + add), data4 MSB","@dtprel(sym + add), data4 LSB","@dtprel(sym + add), data8 MSB","@dtprel(sym + add), data8 LSB","@ltoff(@dtprel(s+a)), imm22","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","High GPRs kernel facility needed.","No reloc.","Direct 8 bit.","Direct 12 bit.","Direct 16 bit.","Direct 32 bit.","PC relative 32 bit.","12 bit GOT offset.","32 bit GOT offset.","32 bit PC relative PLT address.","Copy symbol at runtime.","Create GOT entry.","Create PLT entry.","Adjust by program base.","32 bit offset to GOT.","32 bit PC relative offset to GOT.","16 bit GOT offset.","PC relative 16 bit.","PC relative 16 bit shifted by 1.","16 bit PC rel. PLT shifted by 1.","PC relative 32 bit shifted by 1.","32 bit PC rel. PLT shifted by 1.","32 bit PC rel. GOT shifted by 1.","Direct 64 bit.","PC relative 64 bit.","64 bit GOT offset.","64 bit PC relative PLT address.","32 bit PC rel. to GOT entry >> 1.","16 bit offset to GOT.","64 bit offset to GOT.","12 bit offset to jump slot.","16 bit offset to jump slot.","32 bit offset to jump slot.","64 bit offset to jump slot.","32 bit rel. offset to jump slot.","16 bit offset from GOT to PLT.","32 bit offset from GOT to PLT.","16 bit offset from GOT to PLT.","Tag for load insn in TLS code.","Tag for function call in general dynamic TLS code.","Tag for function call in local dynamic TLS code.","Direct 32 bit for general dynamic thread local data.","Direct 64 bit for general dynamic thread local data.","12 bit GOT offset for static TLS block offset.","32 bit GOT offset for static TLS block offset.","64 bit GOT offset for static TLS block offset.","Direct 32 bit for local dynamic thread local data in LE …","Direct 64 bit for local dynamic thread local data in LE …","32 bit address of GOT entry for negated static TLS block …","64 bit address of GOT entry for negated static TLS block …","32 bit rel. offset to GOT entry for negated static TLS …","32 bit negated offset relative to static TLS block.","64 bit negated offset relative to static TLS block.","32 bit offset relative to TLS block.","64 bit offset relative to TLS block.","ID of module containing symbol.","Offset in TLS block.","Negated offset in static TLS block.","Direct 20 bit.","20 bit GOT offset.","20 bit offset to jump slot.","20 bit GOT offset for static TLS block offset.","STT_GNU_IFUNC relocation.","","","","","","","","","","","","","","","","","","","","","No reloc","Direct 64 bit","PC relative 32 bit signed","32 bit GOT entry","32 bit PLT address","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","32 bit signed PC relative offset to GOT","Direct 32 bit zero extended","Direct 32 bit sign extended","Direct 16 bit zero extended","16 bit sign extended pc relative","Direct 8 bit sign extended","8 bit sign extended pc relative","ID of module containing symbol","Offset in module’s TLS block","Offset in initial TLS block","32 bit signed PC relative offset to two GOT entries for …","32 bit signed PC relative offset to two GOT entries for …","Offset in TLS block","32 bit signed PC relative offset to GOT entry for IE …","Offset in initial TLS block","PC relative 64 bit","64 bit offset to GOT","32 bit signed pc relative offset to GOT","64-bit GOT entry offset","64-bit PC relative offset to GOT entry","64-bit PC relative offset to GOT","like GOT64, says PLT entry needed","64-bit GOT relative offset to PLT entry","Size of symbol plus 32-bit addend","Size of symbol plus 64-bit addend","GOT offset for TLS descriptor.","Marker for call through TLS descriptor.","TLS descriptor.","Adjust indirectly by program base","64-bit adjust by program base","Load from 32 bit signed pc relative offset to GOT entry …","Load from 32 bit signed pc relative offset to GOT entry …","Unwind information.","No reloc.","Direct 32 bit.","Direct 16 bit.","Direct 8 bit.","PC-relative 32-bit.","PC-relative 16-bit signed.","PC-relative 8-bit signed.","Ancient C++ vtable garbage…","… collection annotation.","Direct 24 bit.","32-bit PCrel offset to GOT.","16-bit PCrel offset to GOT.","32-bit offset from GOT.","24-bit offset from GOT.","16-bit offset from GOT.","32-bit PCrel to PLT entry.","16-bit PCrel to PLT entry.","32-bit offset to GOT entry.","24-bit offset to GOT entry.","16-bit offset to GOT entry.","Copy symbol at runtime.","Create GOT entry.","Create PLT entry.","Adjust by program base.","32-bit offset for global dynamic.","32-bit offset for local dynamic.","Module-relative offset.","GOT offset for static TLS block offset.","GOT address for static TLS block offset.","Offset relative to static TLS block.","ID of module containing symbol.","Offset in module TLS block.","Offset in static TLS block.","Adjustment for next reloc as needed by linker relaxation.","Alignment requirement for linker relaxation.","No reloc.","Direct 16 bit.","Direct 32 bit.","Direct 24 bit.","PC relative 10 bit shifted.","PC relative 18 bit shifted.","PC relative 26 bit shifted.","High 16 bit with unsigned low.","High 16 bit with signed low.","Low 16 bit.","16 bit offset in SDA.","","","Direct 16 bit.","Direct 32 bit.","Direct 24 bit.","PC relative 10 bit shifted.","PC relative 18 bit shifted.","PC relative 26 bit shifted.","High 16 bit with unsigned low","High 16 bit with signed low","Low 16 bit","16 bit offset in SDA","","","PC relative 32 bit.","24 bit GOT entry","26 bit PC relative to PLT shifted","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","24 bit offset to GOT","24 bit PC relative offset to GOT","High 16 bit GOT entry with unsigned low","High 16 bit GOT entry with signed low","Low 16 bit GOT entry","High 16 bit PC relative offset to GOT with unsigned low","High 16 bit PC relative offset to GOT with signed low","Low 16 bit PC relative offset to GOT","High 16 bit offset to GOT with unsigned low","High 16 bit offset to GOT with signed low","Low 16 bit offset to GOT","Keep this the last entry.","No reloc.","Direct 32 bit.","PC relative 32 bit.","PC relative 64 bit.","Low 16 bits of PCREL32.","Direct 64 bit.","Low 16 bit.","Read-only small data area.","Read-write small data area.","No reloc.","Symbol Op Symbol relocation.","GNU C++ vtable hierarchy.","GNU C++ vtable member usage.","PC-relative GOT offset.","GOT entry offset.","PLT offset (PC-relative).","Adjust by program base.","Create PLT entry.","Create GOT entry.","64 bit offset to GOT.","32 bit offset to GOT.","Runtime copy.","TLS Reloc.","TLS General Dynamic.","TLS Local Dynamic.","TLS Module ID.","TLS Offset Within TLS Block.","TLS Offset Within TLS Block.","TLS Offset From Thread Pointer.","TLS Offset From Thread Pointer.","Address of _gp.","No reloc.","Direct signed 16 bit.","Direct unsigned 16 bit.","PC relative 16 bit.","Direct call.","5 bit constant expression.","5 bit expression, shift 22.","6 bit constant expression.","8 bit constant expression.","High 16 bit.","Low 16 bit.","High 16 bit, adjusted.","32 bit symbol value + addend.","16 bit symbol value + addend.","8 bit symbol value + addend.","16 bit GP pointer offset.","GNU C++ vtable hierarchy.","GNU C++ vtable member usage.","Unconditional branch.","Conditional branch.","Indirect call through register.","Alignment requirement for linker relaxation.","16 bit GOT entry.","16 bit GOT entry for function.","%lo of offset to GOT pointer.","%hiadj of offset to GOT pointer.","%lo of PC relative offset.","%hiadj of PC relative offset.","16 bit GOT offset for TLS GD.","16 bit GOT offset for TLS LDM.","16 bit module relative offset.","16 bit GOT offset for TLS IE.","16 bit LE TP-relative offset.","Module number.","Module-relative offset.","TP-relative offset.","Copy symbol at runtime.","Create GOT entry.","Create PLT entry.","Adjust by program base.","16 bit offset to GOT pointer.","Direct call in .noat section.","%lo() of GOT entry.","%hiadj() of GOT entry.","%lo() of function GOT entry.","%hiadj() of function GOT entry.","No reloc","Direct 32 bit","Direct 16 bit","Direct 8 bit","PC relative 32 bit","PC relative 16 bit","PC relative 8 bit","Low 16 bit","High 16 bit","High 16 bit, adjusted","Copy relocation","Create GOT entry","Create PLT entry","Adjust by program base","X1 pipe branch offset","X1 pipe jump offset","X1 pipe jump offset to PLT","X0 pipe 8-bit","Y0 pipe 8-bit","X1 pipe 8-bit","Y1 pipe 8-bit","X1 pipe mtspr","X1 pipe mfspr","X0 pipe 16-bit","X1 pipe 16-bit","X0 pipe low 16-bit","X1 pipe low 16-bit","X0 pipe high 16-bit","X1 pipe high 16-bit","X0 pipe high 16-bit, adjusted","X1 pipe high 16-bit, adjusted","X0 pipe PC relative 16 bit","X1 pipe PC relative 16 bit","X0 pipe PC relative low 16 bit","X1 pipe PC relative low 16 bit","X0 pipe PC relative high 16 bit","X1 pipe PC relative high 16 bit","X0 pipe PC relative ha() 16 bit","X1 pipe PC relative ha() 16 bit","X0 pipe 16-bit GOT offset","X1 pipe 16-bit GOT offset","X0 pipe low 16-bit GOT offset","X1 pipe low 16-bit GOT offset","X0 pipe high 16-bit GOT offset","X1 pipe high 16-bit GOT offset","X0 pipe ha() 16-bit GOT offset","X1 pipe ha() 16-bit GOT offset","X0 pipe mm “start”","X0 pipe mm “end”","X1 pipe mm “start”","X1 pipe mm “end”","X0 pipe shift amount","X1 pipe shift amount","Y0 pipe shift amount","Y1 pipe shift amount","X1 pipe destination 8-bit","“jal” for TLS GD","X0 pipe “addi” for TLS GD","X1 pipe “addi” for TLS GD","Y0 pipe “addi” for TLS GD","Y1 pipe “addi” for TLS GD","“lw_tls” for TLS IE","X0 pipe 16-bit TLS GD offset","X1 pipe 16-bit TLS GD offset","X0 pipe low 16-bit TLS GD offset","X1 pipe low 16-bit TLS GD offset","X0 pipe high 16-bit TLS GD offset","X1 pipe high 16-bit TLS GD offset","X0 pipe ha() 16-bit TLS GD offset","X1 pipe ha() 16-bit TLS GD offset","X0 pipe 16-bit TLS IE offset","X1 pipe 16-bit TLS IE offset","X0 pipe low 16-bit TLS IE offset","X1 pipe low 16-bit TLS IE offset","X0 pipe high 16-bit TLS IE offset","X1 pipe high 16-bit TLS IE offset","X0 pipe ha() 16-bit TLS IE offset","X1 pipe ha() 16-bit TLS IE offset","ID of module containing symbol","Offset in TLS block","Offset in static TLS block","X0 pipe 16-bit TLS LE offset","X1 pipe 16-bit TLS LE offset","X0 pipe low 16-bit TLS LE offset","X1 pipe low 16-bit TLS LE offset","X0 pipe high 16-bit TLS LE offset","X1 pipe high 16-bit TLS LE offset","X0 pipe ha() 16-bit TLS LE offset","X1 pipe ha() 16-bit TLS LE offset","GNU C++ vtable hierarchy","GNU C++ vtable member usage","No reloc","Direct 64 bit","Direct 32 bit","Direct 16 bit","Direct 8 bit","PC relative 64 bit","PC relative 32 bit","PC relative 16 bit","PC relative 8 bit","hword 0 16-bit","hword 1 16-bit","hword 2 16-bit","hword 3 16-bit","last hword 0 16-bit","last hword 1 16-bit","last hword 2 16-bit","Copy relocation","Create GOT entry","Create PLT entry","Adjust by program base","X1 pipe branch offset","X1 pipe jump offset","X1 pipe jump offset to PLT","X0 pipe 8-bit","Y0 pipe 8-bit","X1 pipe 8-bit","Y1 pipe 8-bit","X1 pipe destination 8-bit","X1 pipe mtspr","X1 pipe mfspr","X0 pipe mm “start”","X0 pipe mm “end”","X0 pipe shift amount","X1 pipe shift amount","Y0 pipe shift amount","Y1 pipe shift amount","X0 pipe hword 0","X1 pipe hword 0","X0 pipe hword 1","X1 pipe hword 1","X0 pipe hword 2","X1 pipe hword 2","X0 pipe hword 3","X1 pipe hword 3","X0 pipe last hword 0","X1 pipe last hword 0","X0 pipe last hword 1","X1 pipe last hword 1","X0 pipe last hword 2","X1 pipe last hword 2","X0 pipe PC relative hword 0","X1 pipe PC relative hword 0","X0 pipe PC relative hword 1","X1 pipe PC relative hword 1","X0 pipe PC relative hword 2","X1 pipe PC relative hword 2","X0 pipe PC relative hword 3","X1 pipe PC relative hword 3","X0 pipe PC-rel last hword 0","X1 pipe PC-rel last hword 0","X0 pipe PC-rel last hword 1","X1 pipe PC-rel last hword 1","X0 pipe PC-rel last hword 2","X1 pipe PC-rel last hword 2","X0 pipe hword 0 GOT offset","X1 pipe hword 0 GOT offset","X0 pipe PC-rel PLT hword 0","X1 pipe PC-rel PLT hword 0","X0 pipe PC-rel PLT hword 1","X1 pipe PC-rel PLT hword 1","X0 pipe PC-rel PLT hword 2","X1 pipe PC-rel PLT hword 2","X0 pipe last hword 0 GOT offset","X1 pipe last hword 0 GOT offset","X0 pipe last hword 1 GOT offset","X1 pipe last hword 1 GOT offset","X0 pipe PC-rel PLT hword 3","X1 pipe PC-rel PLT hword 3","X0 pipe hword 0 TLS GD offset","X1 pipe hword 0 TLS GD offset","X0 pipe hword 0 TLS LE offset","X1 pipe hword 0 TLS LE offset","X0 pipe last hword 0 LE off","X1 pipe last hword 0 LE off","X0 pipe last hword 1 LE off","X1 pipe last hword 1 LE off","X0 pipe last hword 0 GD off","X1 pipe last hword 0 GD off","X0 pipe last hword 1 GD off","X1 pipe last hword 1 GD off","X0 pipe hword 0 TLS IE offset","X1 pipe hword 0 TLS IE offset","X0 pipe PC-rel PLT last hword 0","X1 pipe PC-rel PLT last hword 0","X0 pipe PC-rel PLT last hword 1","X1 pipe PC-rel PLT last hword 1","X0 pipe PC-rel PLT last hword 2","X1 pipe PC-rel PLT last hword 2","X0 pipe last hword 0 IE off","X1 pipe last hword 0 IE off","X0 pipe last hword 1 IE off","X1 pipe last hword 1 IE off","64-bit ID of symbol’s module","64-bit offset in TLS block","64-bit offset in static TLS block","32-bit ID of symbol’s module","32-bit offset in TLS block","32-bit offset in static TLS block","“jal” for TLS GD","X0 pipe “addi” for TLS GD","X1 pipe “addi” for TLS GD","Y0 pipe “addi” for TLS GD","Y1 pipe “addi” for TLS GD","“ld_tls” for TLS IE","X0 pipe “addi” for TLS GD/IE","X1 pipe “addi” for TLS GD/IE","Y0 pipe “addi” for TLS GD/IE","Y1 pipe “addi” for TLS GD/IE","GNU C++ vtable hierarchy","GNU C++ vtable member usage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No reloc","","","","","32bit absolute address","No reloc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mach-O definitions.","mask for architecture bits","64 bit ABI","ABI for 64-bit hardware with 32-bit types; LP32","","","","","","","","","","","","","","","","","","mask for feature flags","64 bit libraries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Haswell feature subset","","","","","pmax","","3max","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cortex A9","Swift","","Not meant to be run under xnu","Not meant to be run under xnu","Not meant to be run under xnu","","","","","","","read permission","write permission","execute permission","","NXSwapLong(FAT_MAGIC)","","FAT_MAGIC or FAT_MAGIC_64","number of structs that follow","","cpu specifier (int)","machine specifier (int)","file offset to this object file","size of this object file","alignment as a power of 2","","NXSwapLong(FAT_MAGIC_64)","","cpu specifier (int)","machine specifier (int)","file offset to this object file","size of this object file","alignment as a power of 2","reserved","The 32-bit mach header.","mach magic number identifier","cpu specifier","machine specifier","type of file","number of load commands","the size of all the load commands","flags","the mach magic number","NXSwapInt(MH_MAGIC)","The 64-bit mach header.","mach magic number identifier","cpu specifier","machine specifier","type of file","number of load commands","the size of all the load commands","flags","reserved","the 64-bit mach magic number","NXSwapInt(MH_MAGIC_64)","relocatable object file","demand paged executable file","fixed VM shared library file","core file","preloaded executable file","dynamically bound shared library","dynamic link editor","dynamically bound bundle file","shared library stub for static linking only, no section …","companion file with only debug sections","x86_64 kexts","the object file has no undefined references","the object file is the output of an incremental link …","the object file is input for the dynamic linker and can’…","the object file’s undefined references are bound by the …","the file has its dynamic undefined references prebound.","the file has its read-only and read-write segments split","the shared library init routine is to be run lazily via …","the image is using two-level name space bindings","the executable is forcing all images to use flat name …","this umbrella guarantees no multiple defintions of …","do not have dyld notify the prebinding agent about this …","the binary is not prebound but can have its prebinding …","indicates that this binary binds to all two-level …","safe to divide up the sections into sub-sections via …","the binary has been canonicalized via the unprebind …","the final linked image contains external weak symbols","the final linked image uses weak symbols","When this bit is set, all stacks in the task will be …","When this bit is set, the binary declares it is safe for …","When this bit is set, the binary declares it is safe for …","When this bit is set on a dylib, the static linker does …","When this bit is set, the OS will load the main …","Only for use on dylibs.  When linking against a dylib …","Contains a section of type S_THREAD_LOCAL_VARIABLES","When this bit is set, the OS will run the main executable …","The code was linked for use in an application extension.","","The external symbols listed in the nlist symbol table do …","Common fields at the start of every load command.","Type of load command.","Total size of command in bytes.","","segment of this file to be mapped","link-edit stab symbol table info","link-edit gdb symbol table info (obsolete)","thread","unix thread (includes a stack)","load a specified fixed VM shared library","fixed VM shared library identification","object identification info (obsolete)","fixed VM file inclusion (internal use)","prepage command (internal use)","dynamic link-edit symbol table info","load a dynamically linked shared library","dynamically linked shared lib ident","load a dynamic linker","dynamic linker identification","modules prebound for a dynamically linked shared library","image routines","sub framework","sub umbrella","sub client","sub library","two-level namespace lookup hints","prebind checksum","load a dynamically linked shared library that is allowed …","64-bit segment of this file to be mapped","64-bit image routines","the uuid","runpath additions","local of code signature","local of info to split segments","load and re-export dylib","delay load of dylib until first use","encrypted segment information","compressed dyld information","compressed dyld information only","load upward dylib","build for MacOSX min OS version","build for iPhoneOS min OS version","compressed table of function start addresses","string for dyld to treat like environment variable","replacement for LC_UNIXTHREAD","table of non-instructions in __text","source version used to build binary","Code signing DRs copied from linked dylibs","64-bit encrypted segment information","linker options in MH_OBJECT files","optimization hints in MH_OBJECT files","build for AppleTV min OS version","build for Watch min OS version","arbitrary data included within a Mach-O file","build for platform min OS version","used with <code>LinkeditDataCommand</code>, payload is trie","used with <code>LinkeditDataCommand</code>","A variable length string in a load command.","offset to the string","32-bit segment load command.","LC_SEGMENT","includes sizeof section structs","segment name","memory address of this segment","memory size of this segment","file offset of this segment","amount to map from the file","maximum VM protection","initial VM protection","number of sections in segment","flags","64-bit segment load command.","LC_SEGMENT_64","includes sizeof section_64 structs","segment name","memory address of this segment","memory size of this segment","file offset of this segment","amount to map from the file","maximum VM protection","initial VM protection","number of sections in segment","flags","the file contents for this segment is for the high part …","this segment is the VM that is allocated by a fixed VM …","this segment has nothing that was relocated in it and …","This segment is protected.  If the segment starts at file …","This segment is made read-only after fixups","32-bit section.","name of this section","segment this section goes in","memory address of this section","size in bytes of this section","file offset of this section","section alignment (power of 2)","file offset of relocation entries","number of relocation entries","flags (section type and attributes)","reserved (for offset or index)","reserved (for count or sizeof)","64-bit section.","name of this section","segment this section goes in","memory address of this section","size in bytes of this section","file offset of this section","section alignment (power of 2)","file offset of relocation entries","number of relocation entries","flags (section type and attributes)","reserved (for offset or index)","reserved (for count or sizeof)","reserved","256 section types","24 section attributes","regular section","zero fill on demand section","section with only literal C strings","section with only 4 byte literals","section with only 8 byte literals","section with only pointers to literals","section with only non-lazy symbol pointers","section with only lazy symbol pointers","section with only symbol stubs, byte size of stub in the …","section with only function pointers for initialization","section with only function pointers for termination","section contains symbols that are to be coalesced","zero fill on demand section (that can be larger than 4 …","section with only pairs of function pointers for …","section with only 16 byte literals","section contains DTrace Object Format","section with only lazy symbol pointers to lazy loaded …","template of initial values for TLVs","template of initial values for TLVs","TLV descriptors","pointers to TLV descriptors","functions to call to initialize TLV values","32-bit offsets to initializers","User setable attributes","section contains only true machine instructions","section contains coalesced symbols that are not to be in …","ok to strip static symbols in this section in files with …","no dead stripping","blocks are live if they reference live blocks","Used with i386 code stubs written on by dyld","a debug section","system setable attributes","section contains some machine instructions","section has external relocation entries","section has local relocation entries","the pagezero segment which has no protections and catches …","the tradition UNIX text segment","the real text part of the text section no headers, and no …","the fvmlib initialization section","the section following the fvmlib initialization section","the tradition UNIX data segment","the real initialized data section no padding, no bss …","the real uninitialized data section no padding","the section common symbols are allocated in by the link …","objective-C runtime segment","symbol table","module information","string table","string table","the icon segment","the icon headers","the icons in tiff format","the segment containing all structs created and maintained …","the unix stack segment","the segment for the self (dyld) modifing code stubs that …","","library’s target pathname","library’s minor version number","library’s header address","","LC_IDFVMLIB or LC_LOADFVMLIB","includes pathname string","the library identification","","library’s path name","library’s build time stamp","library’s current version number","library’s compatibility vers number","","LC_ID_DYLIB, LC_LOAD_{,WEAK_}DYLIB, LC_REEXPORT_DYLIB","includes pathname string","the library identification","","LC_SUB_FRAMEWORK","includes umbrella string","the umbrella framework name","","LC_SUB_CLIENT","includes client string","the client name","","LC_SUB_UMBRELLA","includes sub_umbrella string","the sub_umbrella framework name","","LC_SUB_LIBRARY","includes sub_library string","the sub_library name","","LC_PREBOUND_DYLIB","includes strings","library’s path name","number of modules in library","bit vector of linked modules","","LC_ID_DYLINKER, LC_LOAD_DYLINKER or LC_DYLD_ENVIRONMENT","includes pathname string","dynamic linker’s path name","","LC_THREAD or  LC_UNIXTHREAD","total size of this command","","LC_ROUTINES","total size of this command","address of initialization routine","index into the module table that the init routine is …","","","","","","","","LC_ROUTINES_64","total size of this command","address of initialization routine","index into the module table that the init routine is …","","","","","","","","LC_SYMTAB","sizeof(struct SymtabCommand)","symbol table offset","number of symbol table entries","string table offset","string table size in bytes","","LC_DYSYMTAB","sizeof(struct DysymtabCommand)","index to local symbols","number of local symbols","index to externally defined symbols","number of externally defined symbols","index to undefined symbols","number of undefined symbols","file offset to table of contents","number of entries in table of contents","file offset to module table","number of module table entries","offset to referenced symbol table","number of referenced symbol table entries","file offset to the indirect symbol table","number of indirect symbol table entries","offset to external relocation entries","number of external relocation entries","offset to local relocation entries","number of local relocation entries","","","","the defined external symbol (index into the symbol table)","index into the module table this symbol is defined in","","the module name (index into string table)","index into externally defined symbols","number of externally defined symbols","index into reference symbol table","number of reference symbol table entries","index into symbols for local symbols","number of local symbols","index into external relocation entries","number of external relocation entries","low 16 bits are the index into the init section, high 16 …","low 16 bits are the number of init section entries, high …","for this module address of the start of the (__OBJC,__…","for this module size of the (__OBJC,__module_info) section","","the module name (index into string table)","index into externally defined symbols","number of externally defined symbols","index into reference symbol table","number of reference symbol table entries","index into symbols for local symbols","number of local symbols","index into external relocation entries","number of external relocation entries","low 16 bits are the index into the init section, high 16 …","low 16 bits are the number of init section entries, high …","for this module size of the (__OBJC,__module_info) section","for this module address of the start of the (__OBJC,__…","","","","LC_TWOLEVEL_HINTS","sizeof(struct TwolevelHintsCommand)","offset to the hint table","number of hints in the hint table","","","","LC_PREBIND_CKSUM","sizeof(struct PrebindCksumCommand)","the check sum or zero","","LC_UUID","sizeof(struct UuidCommand)","the 128-bit uuid","","LC_RPATH","includes string","path to add to run path","","LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO, …","sizeof(struct LinkeditDataCommand)","file offset of data in __LINKEDIT segment","file size of data in __LINKEDIT segment","","LC_ENCRYPTION_INFO","sizeof(struct EncryptionInfoCommand)","file offset of encrypted range","file size of encrypted range","which enryption system, 0 means not-encrypted yet","","LC_ENCRYPTION_INFO_64","sizeof(struct EncryptionInfoCommand64)","file offset of encrypted range","file size of encrypted range","which enryption system, 0 means not-encrypted yet","padding to make this struct’s size a multiple of 8 bytes","","LC_VERSION_MIN_MACOSX or LC_VERSION_MIN_IPHONEOS or …","sizeof(struct VersionMinCommand)","X.Y.Z is encoded in nibbles xxxx.yy.zz","X.Y.Z is encoded in nibbles xxxx.yy.zz","","LC_BUILD_VERSION","sizeof(struct BuildVersionCommand) plus ntools * …","platform","X.Y.Z is encoded in nibbles xxxx.yy.zz","X.Y.Z is encoded in nibbles xxxx.yy.zz","number of tool entries following this","","enum for the tool","version number of the tool","","","","","","","","","","","","","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY","sizeof(struct DyldInfoCommand)","file offset to rebase info","size of rebase info","file offset to binding info","size of binding info","file offset to weak binding info","size of weak binding info","file offset to lazy binding info","size of lazy binding infs","file offset to lazy binding info","size of lazy binding infs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","LC_LINKER_OPTION only used in MH_OBJECT filetypes","","number of strings","","LC_SYMSEG","sizeof(struct SymSegCommand)","symbol segment offset","symbol segment size in bytes","","LC_IDENT","strings that follow this command","","LC_FVMFILE","includes pathname string","files pathname","files virtual address","","LC_MAIN only used in MH_EXECUTE filetypes","24","file (__TEXT) offset of main()","if not zero, initial stack size","","LC_SOURCE_VERSION","16","A.B.C.D.E packed as a24.b10.c10.d10.e10","","from mach_header to start of data range","number of bytes in data range","a DICE_KIND_* value","","","","","","","LC_NOTE","sizeof(struct NoteCommand)","owner name for this LC_NOTE","file offset of this data","length of data region","","index into the string table","type flag, see below","section number or NO_SECT","see <mach-o/stab.h>","value of this symbol (or stab offset)","","index into the string table","type flag, see below","section number or NO_SECT","see <mach-o/stab.h>","value of this symbol (or stab offset)","if any of these bits set, a symbolic debugging entry","private external symbol bit","mask for the type bits","external symbol bit, set for external symbols","undefined, n_sect == NO_SECT","absolute, n_sect == NO_SECT","defined in section number n_sect","prebound undefined (defined in a dylib)","indirect","symbol is not in any section","1 thru 255 inclusive","","","","","","","","","","","","","symbol is not to be dead stripped","symbol is discarded","symbol is weak referenced","coalesed symbol is a weak definition","reference to a weak symbol","symbol is a Thumb function (ARM)","","","global symbol: name,,NO_SECT,type,0","procedure name (f77 kludge): name,,NO_SECT,0,0","procedure: name,,n_sect,linenumber,address","static symbol: name,,n_sect,type,address",".lcomm symbol: name,,n_sect,type,address","begin nsect sym: 0,,n_sect,0,address","AST file path: name,,NO_SECT,0,0","emitted with gcc2_compiled and in gcc source","register sym: name,,NO_SECT,type,register","src line: 0,,n_sect,linenumber,address","end nsect sym: 0,,n_sect,0,address","structure elt: name,,NO_SECT,type,struct_offset","source file name: name,,n_sect,0,address","object file name: name,,0,0,st_mtime","local sym: name,,NO_SECT,type,offset","include file beginning: name,,NO_SECT,0,sum","#included file name: name,,n_sect,0,address","compiler parameters: name,,NO_SECT,0,0","compiler version: name,,NO_SECT,0,0","compiler -O level: name,,NO_SECT,0,0","parameter: name,,NO_SECT,type,offset","include file end: name,,NO_SECT,0,0","alternate entry: name,,n_sect,linenumber,address","left bracket: 0,,NO_SECT,nesting level,address","deleted include file: name,,NO_SECT,0,sum","right bracket: 0,,NO_SECT,nesting level,address","begin common: name,,NO_SECT,0,0","end common: name,,n_sect,0,0","end common (local name): 0,,n_sect,0,address","second stab entry with length information","global pascal symbol: name,,NO_SECT,subtype,line","A relocation entry.","","","Determine whether this is a scattered relocation.","Return the fields of a plain relocation.","Return the fields of a scattered relocation.","","offset in the section to what is being relocated","symbol index if r_extern == 1 or section ordinal if …","was relocated pc relative already","0=byte, 1=word, 2=long, 3=quad","does not include value of sym referenced","if not 0, machine specific relocation type","Combine the fields into a <code>Relocation</code>.","absolute relocation type for Mach-O files","Bit set in <code>Relocation::r_word0</code> for scattered relocations.","","offset in the section to what is being relocated","if not 0, machine specific relocation type","0=byte, 1=word, 2=long, 3=quad","was relocated pc relative already","the value the item to be relocated is refering to …","Combine the fields into a <code>Relocation</code>.","generic relocation as discribed above","Only follows a GENERIC_RELOC_SECTDIFF","","prebound lazy pointer","","thread local variables","generic relocation as discribed above","the second relocation entry of a pair","a PAIR follows with subtract symbol value","like ARM_RELOC_SECTDIFF, but the symbol referenced was …","prebound lazy pointer","24 bit branch displacement (to a word address)","22 bit branch displacement (to a half-word address)","obsolete - a thumb 32-bit branch instruction possibly …","","","for pointers","must be followed by a ARM64_RELOC_UNSIGNED","a B/BL instruction with 26-bit displacement","pc-rel distance to page of target","offset within page, scaled by r_length","pc-rel distance to page of GOT slot","offset within page of GOT slot, scaled by r_length","for pointers to GOT slots","pc-rel distance to page of TLVP slot","offset within page of TLVP slot, scaled by r_length","must be followed by PAGE21 or PAGEOFF12","","generic relocation as discribed above","the second relocation entry of a pair","14 bit branch displacement (to a word address)","24 bit branch displacement (to a word address)","a PAIR follows with the low half","a PAIR follows with the high half","Same as the RELOC_HI16 except the low 16 bits and the …","Same as the LO16 except that the low 2 bits are not …","a PAIR follows with subtract symbol value","prebound lazy pointer","section difference forms of above.  a PAIR","follows these with subtract symbol value","","","","like PPC_RELOC_SECTDIFF, but the symbol referenced was …","for absolute addresses","for signed 32-bit displacement","a CALL/JMP instruction with 32-bit displacement","a MOVQ load of a GOT entry","other GOT references","must be followed by a X86_64_RELOC_UNSIGNED","for signed 32-bit displacement with a -1 addend","for signed 32-bit displacement with a -2 addend","for signed 32-bit displacement with a -4 addend","for thread local variables","PE/COFF definitions.","MZ","NE","LE","LE","PE00","DOS .EXE header","Magic number","Bytes on last page of file","Pages in file","Relocations","Size of header in paragraphs","Minimum extra paragraphs needed","Maximum extra paragraphs needed","Initial (relative) SS value","Initial SP value","Checksum","Initial IP value","Initial (relative) CS value","File address of relocation table","Overlay number","Reserved words","OEM identifier (for e_oeminfo)","OEM information; e_oemid specific","Reserved words","File address of new exe header","OS/2 .EXE header","Magic number","Version number","Revision number","Offset of Entry Table","Number of bytes in Entry Table","Checksum of whole file","Flag word","Automatic data segment number","Initial heap allocation","Initial stack allocation","Initial CS:IP setting","Initial SS:SP setting","Count of file segments","Entries in Module Reference Table","Size of non-resident name table","Offset of Segment Table","Offset of Resource Table","Offset of resident name table","Offset of Module Reference Table","Offset of Imported Names Table","Offset of Non-resident Names Table","Count of movable entries","Segment alignment shift count","Count of resource segments","Target Operating system","Other .EXE flags","offset to return thunks","offset to segment ref. bytes","Minimum code swap area size","Expected Windows version number","Windows VXD header","Magic number","The byte ordering for the VXD","The word ordering for the VXD","The EXE format level for now = 0","The CPU type","The OS type","Module version","Module flags","Module # pages","Object # for instruction pointer","Extended instruction pointer","Object # for stack pointer","Extended stack pointer","VXD page size","Last page size in VXD","Fixup section size","Fixup section checksum","Loader section size","Loader section checksum","Object table offset","Number of objects in module","Object page map offset","Object iterated data map offset","Offset of Resource Table","Number of resource entries","Offset of resident name table","Offset of Entry Table","Offset of Module Directive Table","Number of module directives","Offset of Fixup Page Table","Offset of Fixup Record Table","Offset of Import Module Name Table","Number of entries in Import Module Name Table","Offset of Import Procedure Name Table","Offset of Per-Page Checksum Table","Offset of Enumerated Data Pages","Number of preload pages","Offset of Non-resident Names Table","Size of Non-resident Name Table","Non-resident Name Table Checksum","Object # for automatic data object","Offset of the debugging information","The length of the debugging info. in bytes","Number of instance pages in preload section of VXD file","Number of instance pages in demand load section of VXD …","Size of heap - for 16-bit apps","Reserved words","","","Device ID for VxD","DDK version for VxD","","","","","","","","","","Relocation info stripped from file.","File is executable  (i.e. no unresolved external …","Line nunbers stripped from file.","Local symbols stripped from file.","Aggressively trim working set","App can handle >2gb addresses","Bytes of machine word are reversed.","32 bit word machine.","Debugging info stripped from file in .DBG file","If Image is on removable media, copy and run from the …","If Image is on Net, copy and run from the swap file.","System File.","File is a DLL.","File should only be run on a UP machine","Bytes of machine word are reversed.","","Useful for indicating we want to interact with the host …","Intel 386.","MIPS little-endian, 0x160 big-endian","MIPS little-endian","MIPS little-endian","MIPS little-endian WCE v2","Alpha_AXP","SH3 little-endian","","SH3E little-endian","SH4 little-endian","SH5","ARM Little-Endian","ARM Thumb/Thumb-2 Little-Endian","ARM Thumb-2 Little-Endian","","IBM PowerPC Little-Endian","","Intel 64","MIPS","ALPHA64","MIPS","MIPS","","Infineon","","EFI Byte Code","AMD64 (K8)","M32R little-endian","ARM64 Little-Endian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unknown subsystem.","Image doesn’t require a subsystem.","Image runs in the Windows GUI subsystem.","Image runs in the Windows character subsystem.","image runs in the OS/2 character subsystem.","image runs in the Posix character subsystem.","image is a native Win9x driver.","Image runs in the Windows CE subsystem.","","","","","","","","Image can handle a high entropy 64-bit virtual address …","DLL can move.","Code Integrity Image","Image is NX compatible","Image understands isolation and doesn’t want it","Image does not use SEH.  No SE handler may reside in this …","Do not bind this image.","Image should execute in an AppContainer","Driver uses WDM model","Image supports Control Flow Guard.","","Export Directory","Import Directory","Resource Directory","Exception Directory","Security Directory","Base Relocation Table","Debug Directory","Architecture Specific Data","RVA of GP","TLS Directory","Load Configuration Directory","Bound Import Directory in headers","Import Address Table","Delay Load Import Descriptors","COM Runtime descriptor","","","","","","","Non-COFF Object file header","Must be IMAGE_FILE_MACHINE_UNKNOWN","Must be 0xffff","= 1 (implies the ClsId field is present)","","","Used to invoke CoCreateInstance","Size of data that follows the header","","Must be IMAGE_FILE_MACHINE_UNKNOWN","Must be 0xffff","= 2 (implies the Flags field is present - otherwise V1)","","","Used to invoke CoCreateInstance","Size of data that follows the header","0x1 -> contains metadata","Size of CLR metadata","Offset of CLR metadata","","Must be IMAGE_FILE_MACHINE_UNKNOWN","Must be 0xffff","= 2 (implies the Flags field is present)","Actual machine - IMAGE_FILE_MACHINE_xxx","","{D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}","Size of data that follows the header","0x1 -> contains metadata","Size of CLR metadata","Offset of CLR metadata","extended from WORD","","","","","","","","","","","","","","","","Reserved.","Section contains code.","Section contains initialized data.","Section contains uninitialized data.","Reserved.","Section contains comments or some other type of …","Section contents will not become part of image.","Section contents comdat.","Reset speculative exceptions handling bits in the TLB …","Section content can be accessed relative to GP","","","","","","","","","","Default alignment if no others are specified.","","","","","","","","","","","Section contains extended relocations.","Section can be discarded.","Section is not cachable.","Section is not pageable.","Section is shareable.","Section is executable.","Section is readable.","Section is writeable.","Tls index is scaled","","If first 4 bytes are 0, then second 4 bytes are offset …","","","","","","","","","","If first 4 bytes are 0, then second 4 bytes are offset …","","","","","","","","","Symbol is undefined or is common.","Symbol is an absolute value.","Symbol is a special debug item.","Values 0xFF00-0xFFFF are special","","no type.","","type character.","type short integer.","","","","","","","enumeration.","member of enumeration.","","","","","","no derived type.","pointer.","function.","array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","IMAGE_AUX_SYMBOL_TYPE","Must be 0","","Must be 0","","Auxiliary symbol format 1: function definitions.","","","","","","Auxiliary symbol format 2: .bf and .ef symbols.","","declaration line number","","","","Auxiliary symbol format 3: weak externals.","the weak extern default symbol index","","Auxiliary symbol format 5: sections.","section length","number of relocation entries","number of line numbers","checksum for communal","section number to associate with","communal selection type","","high bits of the section number","","","","","","","","","","","","","","","Also <code>RelocCount</code> when IMAGE_SCN_LNK_NRELOC_OVFL is set","","","Reference is absolute, no relocation is necessary","Direct 16-bit reference to the symbols virtual address","PC-relative 16-bit reference to the symbols virtual …","Direct 32-bit reference to the symbols virtual address","Direct 32-bit reference to the symbols virtual address, …","Direct 16-bit reference to the segment-selector bits of a …","","","clr token","7 bit offset from base of section containing target","PC-relative 32-bit reference to the symbols virtual …","Reference is absolute, no relocation is necessary","","","","","","","","","","Low 16-bit section relative referemce (used for >32k TLS)","High 16-bit section relative reference (used for >32k TLS)","clr token","","","","","","","","","","","","","","","","","","","","","Low 16-bit section relative reference","High 16-bit section relative reference","High 16 bits of 48 bit reference","Middle 16 bits of 48 bit reference","Low 16 bits of 48 bit reference","Low 16-bit GP relative reference","High 16-bit GP relative reference","NOP","64-bit address","32-bit address","26-bit address, shifted left 2 (branch absolute)","16-bit address","16-bit address, shifted left 2 (load doubleword)","26-bit PC-relative offset, shifted left 2 (branch …","16-bit PC-relative offset, shifted left 2 (br cond …","16-bit offset from TOC base","16-bit offset from TOC base, shifted left 2 (load …","32-bit addr w/o image base","va of containing section (as in an image sectionhdr)","sectionheader number","substitute TOC restore instruction iff symbol is glue code","symbol is glue code; virtual address is TOC restore …","va of containing section (limited to 16 bits)","","","","Low 16-bit section relative reference (used for >32k TLS)","High 16-bit section relative reference (used for >32k TLS)","","clr token","mask to isolate above values in IMAGE_RELOCATION.Type","subtract reloc value rather than adding it","fix branch prediction bit to predict branch taken","fix branch prediction bit to predict branch not taken","toc slot defined in file (or, data in toc)","No relocation","16 bit direct","32 bit direct","8 bit direct, -128..255","8 bit direct .W (0 ext.)","8 bit direct .L (0 ext.)","4 bit direct (0 ext.)","4 bit direct .W (0 ext.)","4 bit direct .L (0 ext.)","8 bit PC relative .W","8 bit PC relative .L","12 LSB PC relative .W","Start of EXE section","Size of EXE section","Section table index","Offset within section","32 bit direct not based","GP-relative addressing","clr token","Offset from current instruction in longwords if not …","Low bits of 32-bit address","High bits of 32-bit address","Low bits of relative reference","High bits of relative reference","offset operand for relocation","relocation ignores section mode","No relocation required","32 bit address","32 bit address w/o image base","24 bit offset << 2 & sign ext.","Thumb: 2 11 bit offsets","clr token","GP-relative addressing (ARM)","GP-relative addressing (Thumb)","","","Section table index","Offset within section","ARM: MOVW/MOVT","ARM: MOVW/MOVT (deprecated)","Thumb: MOVW/MOVT","Thumb: MOVW/MOVT (deprecated)","Thumb: 32-bit conditional B","Thumb: 32-bit conditional B (deprecated)","Thumb: 32-bit B or BL","Thumb: 32-bit B or BL (deprecated)","Thumb: BLX immediate","Thumb: BLX immediate (deprecated)","","","","","","","","","","","No relocation required","32 bit address. Review! do we need it?","32 bit address w/o image base (RVA: for Data/PData/XData)","26 bit offset << 2 & sign ext. for B & BL","ADRP","ADR","ADD/ADDS (immediate) with zero shift, for page offset","LDR (indexed, unsigned immediate), for page offset","Offset within section","ADD/ADDS (immediate) with zero shift, for bit 0:11 of …","ADD/ADDS (immediate) with zero shift, for bit 12:23 of …","LDR (indexed, unsigned immediate), for bit 0:11 of …","","Section table index","64 bit address","19 bit offset << 2 & sign ext. for conditional B","Reference is absolute, no relocation is necessary","64-bit address (VA).","32-bit address (VA).","32-bit address w/o image base (RVA).","32-bit relative address from byte following reloc","32-bit relative address from byte distance 1 from reloc","32-bit relative address from byte distance 2 from reloc","32-bit relative address from byte distance 3 from reloc","32-bit relative address from byte distance 4 from reloc","32-bit relative address from byte distance 5 from reloc","Section index","32 bit offset from base of section containing target","7 bit unsigned offset from base of section containing …","32 bit metadata token","32 bit signed span-dependent value emitted into object","","32 bit signed span-dependent value applied at link time","","Indirect branch to an import","Indirect call to an import","Indirect branch to a CFG check","Indirect branch to a CFG check, with REX.W prefix","Indirect call to a CFG check","Indirect branch to a target in RAX (no CFG)","Indirect branch to a target in RAX, with REX.W prefix (no …","Indirect call to a target in RAX (no CFG)","Indirect branch for a switch table using Reg 0 (RAX)","Indirect branch for a switch table using Reg 15 (R15)","","","","","","","","","","","","","","","","","","","","","This is always a BRL and never converted","If possible, convert to MBB bundle with NOP.B in slot 1","If possible, convert to MFB bundle with NOP.F in slot 1","If possible, convert to MIB bundle with NOP.I in slot 1","If possible, convert to MMB bundle with NOP.M in slot 1","","clr token","","","Reference is absolute, no relocation is necessary","32-bit address (VA).","64-bit address (VA).","32-bit address w/o image base (RVA).","Section index","32 bit offset from base of section containing target","32 bit metadata token","Reference is absolute, no relocation is necessary","32-bit address (VA).","64-bit address (VA).","32-bit address w/o image base (RVA).","Section index","32 bit offset from base of section containing target","32 bit metadata token","No relocation required","32 bit address","32 bit address w/o image base","24 bit address","GP relative addressing","24 bit offset << 2 & sign ext.","16 bit offset << 2 & sign ext.","8 bit offset << 2 & sign ext.","16 MSBs","16 MSBs; adj for LSB sign ext.","16 LSBs","Link HI and LO","Section table index","32 bit section relative reference","clr token","No relocation required","32 bit address w/o image base","32-bit relative address from byte following reloc","Section table index","Offset within section","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","Intel-IA64-Filler","","Symbol table index of function name if Linenumber is 0. …","Line number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","File member name - `/’ terminated.","File member date - decimal.","File member user id - decimal.","File member group id - decimal.","File member mode - octal.","File member size - decimal.","String to end header.","","","","","","","","","","","RVA from base of image","RVA from base of image","RVA from base of image","","","","","","","","PDWORD","PIMAGE_TLS_CALLBACK *;","","","","","","PDWORD","PIMAGE_TLS_CALLBACK *","","","","RVA to original unbound IAT (<code>ImageThunkData32</code>/…","0 if not bound, -1 if bound, and real date\\\\time stamp in …","-1 if no forwarders","","RVA to IAT (if bound this IAT has actual addresses)","","","","","","","","","","","RVA to the name of the target library (NULL-terminate …","RVA to the HMODULE caching location (PHMODULE)","RVA to the start of the IAT (PIMAGE_THUNK_DATA)","RVA to the start of the name table …","RVA to an optional bound IAT","RVA to an optional unload info table","0 if not bound, otherwise, date/time of the target DLL","Delay load version 2 flag for …","","","","","","","","","","","","","","","","","","","","","","","Flags to indicate if CI information is available, etc.","0xFFFF means not available","","Additional bitmask to be defined later","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VA","","","","","","","VA","VA","VA","","VA","VA","VA","","","","VA","","VA","","VA","","VA","VA","","","","VA","","","VA","VA","","","","","","","","","","","VA","","","","","","","VA","VA","VA","","VA","VA","VA","","","","VA","","VA","","VA","VA","VA","VA","","","","VA","","","VA","VA","","","","","","","Version 2 and later","Version 3 and later","","","","","","","","","Version 2 and later","","","","","","","","","","","","","","","","","","","","","Module performs control flow integrity checks using …","Module performs control flow and write integrity checks","Module contains valid control flow target metadata","Module does not make use of the /GS security cookie","Module supports read only delay load IAT","Delayload import table in its own .didat section (with …","Module contains suppressed export information.","Module enables suppression of exports","Module contains longjmp target information","Module contains return flow instrumentation and metadata","Module requests that the OS enable return flow protection","Module requests that the OS enable return flow protection …","Module was built with retpoline support","Stride of Guard CF function table encoded in these bits …","Shift to right-justify Guard CF function table stride","The containing GFID entry is suppressed","The containing GFID entry is export suppressed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type of misc data, see defines","total length of record, rounded to four byte multiple.","TRUE if data is unicode string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","when DBG was updated, the old checksum didn’t match.","","RVA of instruction to fixup","fixup instruction (see alphaops.h)","","","Must be IMAGE_FILE_MACHINE_UNKNOWN","Must be IMPORT_OBJECT_HDR_SIG2.","","","Time/date stamp","particularly useful for incremental links","if grf & IMPORT_OBJECT_ORDINAL","","","","","Import by ordinal","Import name == public symbol name.","Import name == public symbol name skipping leading ?, @, …","Import name == public symbol name skipping leading ?, @, …","Import name == a name is explicitly provided after the …","","","","","","","","","","","","","","","","","","V-table slots are 32-bits in size.","V-table slots are 64-bits in size.","If set, transition from unmanaged.","If set, transition from unmanaged with keeping the …","Call most derived method described by","Size of a jump thunk reserved range.","","","","","","","","","","","","","","","","A CPU architecture.","","","","","","","","","The size of an address value for an architecture.","","","A binary file format.","","","","","","The kind of a section.","The section kind is unknown.","An executable code section.","A data section.","A read only data section.","A loadable string section.","An uninitialized data section.","An uninitialized common data section.","A TLS data section.","An uninitialized TLS data section.","A TLS variables section.","A non-loadable string section.","Some other non-loadable section.","Debug information.","Information for the linker.","ELF note section.","Metadata such as symbols or relocations.","Some other ELF section type.","The selection kind for a COMDAT section group.","The selection kind is unknown.","Multiple definitions are allowed.","Multiple definitions are not allowed.","Multiple definitions must have the same size.","Multiple definitions must match exactly.","Multiple definitions are allowed, and the largest is …","Multiple definitions are allowed, and the newest is …","The kind of a symbol.","The symbol kind is unknown.","The symbol is a null placeholder.","The symbol is for executable code.","The symbol is for a data object.","The symbol is for a section.","The symbol is the name of a file. It precedes symbols …","The symbol is for a code label.","The symbol is for a thread local storage entity.","A symbol scope.","Unknown scope.","Symbol is visible to the compilation unit.","Symbol is visible to the static linkage unit.","Symbol is visible to dynamically linked objects.","The operation used to calculate the result of the …","S + A","S + A - P","G + A - GotBase","G + A - P","GotBase + A - P","S + A - GotBase","L + A - P","S + A - Image","S + A - Section","The index of the section containing the symbol.","Some other ELF relocation. The value is dependent on the …","Some other Mach-O relocation. The value is dependent on …","The relocation type.","Whether the relocation is relative to the place.","Some other COFF relocation. The value is dependent on the …","Information about how the result of the relocation …","Generic encoding.","x86 sign extension at runtime.","x86 rip-relative addressing.","x86 rip-relative addressing in movq instruction.","x86 branch instruction.","s390x PC-relative offset shifted right by one bit.","File flags that are specific to each file format.","No file flags.","ELF file flags.","<code>e_flags</code> field in the ELF file header.","Mach-O file flags.","<code>flags</code> field in the Mach-O file header.","COFF file flags.","<code>Characteristics</code> field in the COFF file header.","Section flags that are specific to each file format.","No section flags.","ELF section flags.","<code>sh_flags</code> field in the section header.","Mach-O section flags.","<code>flags</code> field in the section header.","COFF section flags.","<code>Characteristics</code> field in the section header.","Symbol flags that are specific to each file format.","No symbol flags.","ELF symbol flags.","<code>st_info</code> field in the ELF symbol.","<code>st_other</code> field in the ELF symbol.","Mach-O symbol flags.","<code>n_desc</code> field in the Mach-O symbol.","COFF flags for a section symbol.","<code>Selection</code> field in the auxiliary symbol for the section.","<code>Number</code> field in the auxiliary symbol for the sectionet the imported symbols.","Get the exported symbols.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of an address value for this architecture.","The size in bytes of an address value.","Return true if this section contains zerofill data.","Interpret the given data as a string table.","Return the string at the given offset.","Parse the raw file data.","Return the file format.","Parse the raw COFF file data.","Read the DOS header.","Parse the section table.","Iterate over the section headers.","Return true if the section table is empty.","The number of section headers.","Return the section header at the given index.","Return the section header with the given name.","Read the symbol table.","Return the string table used for the symbol names.","Return true if the symbol table is empty.","The number of symbols.","Return the symbol table entry at the given index.","Return the symbol table entry or auxiliary record at the …","Construct a map from addresses to a user-defined map …","Parse a COFF symbol name.","Return the symbol address.","Return true if the symbol is a definition of a function …","Parse the raw ELF file data.","Read the file header.","Check that the ident field in the file header is a …","","","","","","Return the first section header, if present.","Return the <code>e_phnum</code> field of the header. Handles extended …","Return the <code>e_shnum</code> field of the header. Handles extended …","Return the <code>e_shstrndx</code> field of the header. Handles …","Return the slice of program headers.","Return the slice of section headers.","Return the string table for the section headers.","Return the section table.","Return the offset and size of the segment in the file.","Return the segment data.","Return the segment data as a slice of the given type.","Return the segment data in the given virtual address range","Return entries in a dynamic segment.","Return a note iterator for the segment data.","Create a new section table.","Iterate over the section headers.","Return true if the section table is empty.","The number of section headers.","Return the section header at the given index.","Return the section header with the given name.","Return the section name for the given section header.","Return the symbol table of the given section type.","Return the symbol table at the given section index.","Create a mapping from section index to associated …","Parse the section name from the string table.","Return the offset and size of the section in the file.","Return the section data.","Return the section data as a slice of the given type.","Return the symbols in the section.","Return the <code>Elf::Rel</code> entries in the section.","Return the <code>Elf::Rela</code> entries in the section.","Return the symbol table for a relocation section.","Return a note iterator for the section data.","Return the contents of a group section.","Parse the given symbol table section.","Return the section index of this symbol table.","Return the string table used for the symbol names.","Iterate over the symbols.","Return true if the symbol table is empty.","The number of symbols.","Return the symbol at the given index.","Return the extended section index for the given symbol if …","Return the symbol name for the given symbol.","Construct a map from addresses to a user-defined map …","Parse the symbol name from the string table.","Return true if the symbol is undefined.","Return true if the symbol is a definition of a function …","Create a new mapping using the section table.","Given a section index, return the section index of the …","Returns the next note.","Return the <code>n_type</code> field of the <code>NoteHeader</code>.","Return the <code>n_namesz</code> field of the <code>NoteHeader</code>.","Return the <code>n_descsz</code> field of the <code>NoteHeader</code>.","Return the bytes for the name field following the …","Return the bytes for the desc field following the …","Attempt to parse a 32-bit fat header.","Attempt to parse a 64-bit fat header.","","","Parse the raw Mach-O file data.","Read the file header.","","","","Return the UUID from the <code>LC_UUID</code> load command, if one is …","Return the symbol table that this command references.","Return the <code>segname</code> bytes up until the null terminator.","Return the offset and size of the segment in the file.","Get the segment data from the file data.","Get the array of sections from the data following the …","Return the <code>sectname</code> bytes up until the null terminator.","Return the <code>segname</code> bytes up until the null terminator.","Return the offset and size of the section in the file.","Return the section data.","Return the relocation array.","Return the string table used for the symbol names.","Iterate over the symbols.","Return true if the symbol table is empty.","The number of symbols.","Return the symbol at the given index.","Construct a map from addresses to a user-defined map …","Construct a map from addresses to symbol names and object …","","Return true if the symbol is a definition of a function …","Return the library ordinal.","Find the optional header and read the …","Parse the raw PE file data.","Read the DOS header.","Read the NT headers, including the data directories.","Read the NT headers, including the data directories.","Read the section table.","Read the symbol table and string table.","Return the data for a PE section.","Return the data at the given virtual address if this …","Get the endianness of the file.","Construct a map from addresses to symbol names.","Construct a map from addresses to symbol names and object …","The UUID from a Mach-O <code>LC_UUID</code> load command.","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.","The filename and CRC from a <code>.gnu_debuglink</code> section.","Returns the uncompressed contents of the section.","Returns the section index for the section containing this …"],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,3,3,3,0,4,4,4,0,5,5,5,0,6,6,6,0,7,7,7,0,8,8,8,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,0,0,0,11,11,11,11,0,12,12,12,0,0,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,20,20,20,20,0,21,21,21,21,21,0,0,0,22,22,22,22,0,0,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,33,33,33,33,33,0,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,0,37,0,38,0,39,39,39,39,39,39,39,0,40,0,41,41,41,0,42,42,42,0,43,43,43,0,44,44,44,44,44,0,45,45,0,46,46,0,47,47,47,0,48,48,48,48,48,48,48,0,49,49,49,0,50,50,50,49,49,0,0,0,0,0,51,51,51,51,51,51,51,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,57,0,58,58,58,58,0,0,0,0,0,0,0,59,59,59,59,59,59,59,59,59,59,0,60,60,60,60,60,60,60,60,60,60,0,61,61,0,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,63,63,63,63,63,0,64,64,64,64,64,64,64,0,65,65,65,65,65,65,0,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,0,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,71,71,0,72,72,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,0,74,74,74,74,74,0,0,0,75,75,75,75,75,75,0,76,76,76,76,76,76,76,0,0,0,77,77,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,0,80,80,80,80,80,80,80,80,80,80,80,0,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,84,0,85,85,85,0,86,86,86,86,0,87,87,87,0,88,88,88,0,89,89,89,0,90,90,90,0,91,91,91,0,92,92,92,92,92,0,93,93,93,0,94,94,0,95,95,95,95,95,95,95,95,95,95,0,96,96,96,96,96,96,96,96,96,96,0,97,97,97,97,97,97,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,0,99,99,0,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,0,103,103,103,103,0,104,0,105,105,105,0,106,106,106,0,107,107,107,0,108,108,108,108,0,109,109,109,109,109,0,110,110,110,110,110,110,0,111,111,111,111,0,112,112,112,112,112,112,0,113,113,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,115,115,0,116,116,116,116,0,117,117,0,118,118,118,118,0,119,119,119,119,0,120,120,120,0,121,121,121,0,0,0,0,0,0,122,122,122,122,122,0,123,123,123,123,123,0,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,125,125,125,0,126,126,126,126,126,126,126,0,0,0,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,131,131,131,131,131,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,132,0,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,134,134,134,134,134,134,134,134,134,134,134,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,136,136,136,0,137,137,137,0,138,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,139,139,139,0,0,140,140,140,140,140,140,140,0,141,141,141,141,141,141,141,141,141,141,0,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,143,143,143,143,143,143,143,143,143,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,144,144,144,0,0,145,0,146,146,146,146,146,146,0,0,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,146,146,0,148,148,148,148,0,0,149,149,149,149,149,0,150,150,150,150,150,0,151,151,0,152,152,152,152,152,152,152,152,0,153,0,0,0,0,0,0,0,0,0,0,0,0,154,154,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,155,0,156,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,157,157,157,157,157,157,0,0,158,158,158,158,158,158,158,158,158,158,158,0,159,0,0,0,160,160,160,160,160,160,0,161,161,161,161,161,161,0,162,162,162,162,162,0,163,163,163,0,164,164,164,0,165,165,165,165,165,165,165,165,0,0,166,166,166,166,166,166,0,0,0,167,167,0,168,0,169,0,170,170,170,170,0,171,171,171,171,0,172,172,0,173,173,0,174,174,0,175,175,175,175,175,0,176,176,176,176,176,0,0,0,0,0,0,177,0,178,178,178,178,0,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,181,181,181,181,181,181,181,0,182,182,182,182,182,182,182,182,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,184,0,185,185,0,186,186,186,186,186,0,187,187,187,187,187,0,188,188,188,0,0,0,189,189,189,189,189,189,189,189,189,189,189,189,189,0,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,0,191,191,191,191,191,191,191,0,0,0,0,0,0,192,192,192,192,192,192,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,193,193,193,193,193,193,193,0,0,0,0,0,0,194,194,194,194,0,195,195,195,0,196,196,196,0,197,197,197,197,197,197,197,197,197,197,197,197,197,0,198,198,198,198,198,198,198,198,198,0,0,0,0,0,199,199,0,0,200,200,200,200,200,200,200,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,201,201,201,201,201,201,201,201,201,201,201,201,0,202,202,202,202,202,202,202,202,0,203,203,0,204,204,204,204,204,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,206,206,206,206,206,206,206,0,207,207,207,207,207,207,207,207,0,208,208,208,208,0,209,209,209,209,209,209,209,209,209,209,209,209,210,210,209,0,211,211,211,211,211,211,0,212,212,213,212,214,212,215,0,216,216,217,216,218,216,219,0,220,220,221,221,220,222,220,223,223,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,216,216,216,216,216,216,216,216,216,220,220,220,220,220,220,220,220,220,2,2,2,2,2,2,2,2,2,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,240,240,240,240,240,240,240,240,13,13,13,13,13,13,13,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,271,271,271,271,271,271,271,272,272,272,272,272,272,272,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,292,292,292,292,292,292,292,292,293,293,293,293,293,293,293,294,294,294,294,294,294,294,294,295,295,295,295,295,295,295,295,296,296,296,296,296,296,296,296,296,296,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,2,2,224,224,225,225,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,63,63,63,63,65,65,65,65,64,64,64,64,64,66,66,66,66,66,69,69,70,70,57,57,57,58,58,58,71,71,71,72,72,72,74,74,74,74,74,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,123,123,123,123,123,124,124,124,124,124,137,137,137,137,137,136,136,136,136,136,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,229,229,229,229,229,229,229,244,244,244,244,244,244,244,257,257,257,257,257,257,257,278,278,278,278,278,278,278,291,291,291,291,291,291,291,231,231,231,231,231,231,231,231,231,231,231,231,231,246,246,246,246,246,246,246,246,246,246,246,246,246,260,260,260,260,260,260,260,260,260,260,260,260,260,280,280,280,280,280,280,280,280,280,280,280,280,280,293,293,293,293,293,293,293,293,293,293,293,293,293,233,233,233,233,253,253,253,253,269,269,269,269,275,275,275,275,288,288,288,288,235,235,248,248,262,262,282,282,237,237,237,237,237,237,237,237,237,237,237,237,237,237,250,250,250,250,250,250,250,250,250,250,250,250,250,250,264,264,264,264,264,264,264,264,264,264,264,264,264,264,284,284,284,284,284,284,284,284,284,284,284,284,284,284,42,44,202,203,204,205,206,207,208,209,211,212,216,220,2,224,225,3,4,5,6,7,8,9,226,227,228,229,230,231,232,233,234,235,236,237,238,239,11,12,240,13,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,296,202,203,204,205,205,206,207,208,209,209,211,212,212,216,216,220,220,2,224,225,3,3,4,4,5,5,6,6,7,7,8,8,9,9,11,296,296,37,37,38,38,39,39,42,42,44,44,45,45,46,46,47,47,49,49,50,3,4,5,6,7,8,3,4,5,6,7,8,202,203,204,2,224,225,3,4,5,6,7,8,11,37,38,39,42,44,47,49,50,228,230,232,234,236,238,239,240,243,245,249,251,252,254,256,259,263,266,267,268,270,274,276,277,279,283,285,287,289,290,292,294,295,64,66,202,203,204,205,206,207,208,209,211,212,216,220,2,224,225,3,4,5,6,7,8,9,226,11,242,248,250,258,261,262,264,281,282,284,296,37,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,2,224,225,3,4,5,6,7,8,9,226,242,258,261,281,294,41,43,44,57,58,202,203,205,226,226,227,227,241,131,242,242,242,242,242,242,247,247,247,247,247,247,247,144,144,144,255,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,258,258,258,258,258,258,258,258,258,258,16,16,16,16,16,16,16,16,16,16,261,261,261,261,261,261,261,261,261,261,17,17,17,265,265,271,272,272,272,272,272,73,73,23,23,273,24,24,24,24,24,97,25,25,25,25,26,26,26,26,26,281,281,281,281,281,281,281,27,27,27,286,286,128,128,28,28,28,143,143,30,30,30,30,30,30,32,35],"f":[null,null,[[["bool",15]],["option",4]],[[["bool",15]],["option",4]],[[],["bool",15]],[[],["bool",15]],[[["u16",15]],["u16",15]],[[["u32",15]],["u32",15]],[[["u64",15]],["u64",15]],[[["i16",15]],["i16",15]],[[["i32",15]],["i32",15]],[[["i64",15]],["i64",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[["u16",15]],["u16",15]],[[["u32",15]],["u32",15]],[[["u64",15]],["u64",15]],[[["i16",15]],["i16",15]],[[["i32",15]],["i32",15]],[[["i64",15]],["i64",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["i16",15]]],[[["i32",15]]],[[["i64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]]],[[],["u16",15]],[[["u16",15]]],null,[[["u32",15]]],[[],["u32",15]],[[["u32",15]]],null,[[["u64",15]]],[[],["u64",15]],[[["u64",15]]],null,[[["i16",15]]],[[],["i16",15]],[[["i16",15]]],null,[[["i32",15]]],[[],["i32",15]],[[["i32",15]]],null,[[["i64",15]]],[[],["i64",15]],[[["i64",15]]],null,null,[[],["result",4]],[[["usize",15]],["result",4]],[[]],null,null,[[],["usize",15]],[[],["bool",15]],[[["usize",15]],["result",4]],[[["usize",15]],[["result",4],["bytes",3]]],[[["usize",15]],[["result",4],["bytes",3]]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],null,[[],["usize",15]],[[],["bool",15]],[[["usize",15]],["result",4]],[[["usize",15],["u8",15]]],[[]],null,null,null,null,null,null,null,null,[[],["result",6]],[[],["archivekind",4]],[[],["archivememberiterator",3]],null,null,[[],["header",3]],[[]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["ident",3]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[["bytes",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",6]],[[["bytes",3]],[["result",6],["option",4]]],[[["bytes",3]],[["usize",15],["result",6]]],[[["bytes",3]],[["usize",15],["result",6]]],[[["bytes",3]],[["result",6],["u32",15]]],[[["bytes",3]],["result",6]],[[["bytes",3]],["result",6]],[[["bytes",3]],[["stringtable",3],["result",6]]],[[["bytes",3]],[["result",6],["sectiontable",3]]],null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bytes",3]],[["bytes",3],["result",4]]],[[["bytes",3]],["result",4]],[[["u64",15],["bytes",3]],[["option",4],["result",4]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[["stringtable",3]],["result",6]],[[],["option",4]],[[["bytes",3]],[["bytes",3],["result",4]]],[[["bytes",3]],["result",4]],[[["usize",15],["sectiontable",3],["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],[[["sectiontable",3],["bytes",3]],[["result",6],["symboltable",3]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[]],[[["stringtable",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,null,[[],["u32",15]],[[]],[[]],null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["architecture",4]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["bytes",3]],["result",6]],[[],["bool",15]],[[],["result",6]],[[["bytes",3]],[["result",6],["macholoadcommanditerator",3]]],[[["bytes",3]],[["result",6],["option",4]]],null,null,null,null,null,null,null,null,null,null,[[["macholoadcommand",3]],[["result",6],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[["bytes",3]],[["result",4],["bytes",3]]],[[["bytes",3]],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["option",4]],[[["bytes",3]],[["result",4],["bytes",3]]],[[["bytes",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[["stringtable",3]],["result",6]],[[],["bool",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["imagefileheader",3]],[[]],[[["imagedosheader",3],["bytes",3]],["result",6]],[[["bytes",3]],[["sectiontable",3],["result",6]]],[[["bytes",3]],[["symboltable",3],["result",6]]],null,[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["architecture",4]],[[],["endianness",4]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["u64",15]],[[["str",15]],["option",4]],[[["sectionindex",3]],["result",6]],[[]],[[]],[[],["option",4]],[[["symbolindex",3]],["result",6]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],[["symbolmapname",3],["symbolmap",3]]],[[],["objectmap",3]],[[],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[],["bool",15]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],["fileflags",4]],null,[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],null,null,[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["compresseddata",3],["result",6]]],[[],[["result",6],["cow",4]]],[[],[["result",6],["str",15]]],[[],[["option",4],["result",6]]],[[],["sectionkind",4]],[[]],[[],["sectionflags",4]],null,null,[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[]],null,null,null,[[]],[[["symbolindex",3]],["result",6]],null,[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[],["u64",15]],[[],["u64",15]],[[],["symbolkind",4]],[[],["symbolsection",4]],[[],[["option",4],["sectionindex",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["symbolscope",4]],[[],["bool",15]],[[],["bool",15]],[[],[["symbolflags",4],["sectionindex",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6],["filekind",4]]],null,null,null,null,null,null,null,null,null,null,null,[[],[["option",4],["sectionindex",3]]],null,[[],["u64",15]],null,[[["vec",3]]],[[["u64",15]],["option",4]],[[]],null,[[["str",15],["u64",15]]],[[],["u64",15]],[[],["str",15]],null,[[["u64",15]],[["objectmapentry",3],["option",4]]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[]],[[],["usize",15]],[[["objectmap",3]]],null,[[]],[[]],null,[[]],[[],["u64",15]],null,null,null,null,null,[[],["relocationkind",4]],[[],["relocationencoding",4]],[[],["u8",15]],[[],["relocationtarget",4]],[[],["i64",15]],[[["i64",15]]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[],[["result",6],["cow",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],null,null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[["u8",15]]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15],["u8",15]],["u32",6]],[[["u32",15],["u8",15]]],null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15],["u8",15]],["u32",6]],[[["u32",15],["u8",15]]],null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["u64",6]],[[["u32",15]]],null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["u64",6]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["u32",15]],null,[[["u32",15]],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["bool",15]],[[],["relocationinfo",3]],[[],["scatteredrelocationinfo",3]],null,null,null,null,null,null,null,[[["endian",8]],[["endian",8],["relocation",3]]],null,null,null,null,null,null,null,null,[[["endian",8]],[["endian",8],["relocation",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["bool",15]],["option",4]],[[],["bool",15]],[[["bool",15]],["option",4]],[[],["bool",15]],[[["bool",15]],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["ident",3]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["bool",15]],[[],["ident",3]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["macholoadcommand",3]],[["result",6],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["macholoadcommand",3]],[["result",6],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["u16",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["imagefileheader",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[],["imagefileheader",3]],[[]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u16",15]],[[],["u16",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["architecture",4]],[[],["bool",15]],[[],["bool",15]],[[],["segmentiterator",3]],[[["str",15]],[["option",4],["section",3]]],[[["sectionindex",3]],[["section",3],["result",6]]],[[],["sectioniterator",3]],[[],["comdatiterator",3]],[[["symbolindex",3]],[["result",6],["symbol",3]]],[[],["symboliterator",3]],[[],[["symboltable",3],["option",4]]],[[],["symboliterator",3]],[[],[["symboltable",3],["option",4]]],[[],[["dynamicrelocationiterator",3],["option",4]]],[[],[["symbolmapname",3],["symbolmap",3]]],[[],["objectmap",3]],[[],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[],["bool",15]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],["u64",15]],[[],["fileflags",4]],[[],["architecture",4]],[[],["bool",15]],[[],["bool",15]],[[],["coffsegmentiterator",3]],[[["str",15]],[["coffsection",3],["option",4]]],[[["sectionindex",3]],[["coffsection",3],["result",6]]],[[],["coffsectioniterator",3]],[[],["coffcomdatiterator",3]],[[["symbolindex",3]],[["result",6],["coffsymbol",3]]],[[],["coffsymboliterator",3]],[[],[["coffsymboltable",3],["option",4]]],[[],["coffsymboliterator",3]],[[],[["coffsymboltable",3],["option",4]]],[[],[["nodynamicrelocationiterator",3],["option",4]]],[[],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[],["bool",15]],[[],["u64",15]],[[],["fileflags",4]],[[],["architecture",4]],[[],["bool",15]],[[],["bool",15]],[[],["elfsegmentiterator",3]],[[["str",15]],[["elfsection",3],["option",4]]],[[["sectionindex",3]],[["result",6],["elfsection",3]]],[[],["elfsectioniterator",3]],[[],["elfcomdatiterator",3]],[[["symbolindex",3]],[["elfsymbol",3],["result",6]]],[[],["elfsymboliterator",3]],[[],[["option",4],["elfsymboltable",3]]],[[],["elfsymboliterator",3]],[[],[["option",4],["elfsymboltable",3]]],[[],[["elfdynamicrelocationiterator",3],["option",4]]],[[],[["result",6],["vec",3]]],[[],[["vec",3],["result",6]]],[[],["bool",15]],[[],[["option",4],["result",6]]],[[],[["result",6],["option",4]]],[[],["u64",15]],[[],["fileflags",4]],[[],["architecture",4]],[[],["bool",15]],[[],["bool",15]],[[],["machosegmentiterator",3]],[[["str",15]],[["machosection",3],["option",4]]],[[["sectionindex",3]],[["machosection",3],["result",6]]],[[],["machosectioniterator",3]],[[],["machocomdatiterator",3]],[[["symbolindex",3]],[["result",6],["machosymbol",3]]],[[],["machosymboliterator",3]],[[],[["option",4],["machosymboltable",3]]],[[],["machosymboliterator",3]],[[],[["option",4],["machosymboltable",3]]],[[],["objectmap",3]],[[],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[],[["nodynamicrelocationiterator",3],["option",4]]],[[],["bool",15]],[[],[["result",6],["option",4]]],[[],["u64",15]],[[],["fileflags",4]],[[],["architecture",4]],[[],["bool",15]],[[],["bool",15]],[[],["pesegmentiterator",3]],[[["str",15]],[["option",4],["pesection",3]]],[[["sectionindex",3]],[["result",6],["pesection",3]]],[[],["pesectioniterator",3]],[[],["pecomdatiterator",3]],[[["symbolindex",3]],[["result",6],["coffsymbol",3]]],[[],["coffsymboliterator",3]],[[],[["coffsymboltable",3],["option",4]]],[[],["coffsymboliterator",3]],[[],[["coffsymboltable",3],["option",4]]],[[],[["nodynamicrelocationiterator",3],["option",4]]],[[],[["vec",3],["result",6]]],[[],[["vec",3],["result",6]]],[[],["bool",15]],[[],["u64",15]],[[],["fileflags",4]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["option",4],["result",6]]],[[],[["result",6],["option",4]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["option",4],["result",6]]],[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["compresseddata",3],["result",6]]],[[],[["result",6],["str",15]]],[[],[["option",4],["result",6]]],[[],["sectionkind",4]],[[],["sectionrelocationiterator",3]],[[],["sectionflags",4]],[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["compresseddata",3],["result",6]]],[[],[["result",6],["str",15]]],[[],[["option",4],["result",6]]],[[],["sectionkind",4]],[[],["coffrelocationiterator",3]],[[],["sectionflags",4]],[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["option",4],["result",6]]],[[],[["compresseddata",3],["result",6]]],[[],[["str",15],["result",6]]],[[],[["result",6],["option",4]]],[[],["sectionkind",4]],[[],["elfsectionrelocationiterator",3]],[[],["sectionflags",4]],[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["compresseddata",3],["result",6]]],[[],[["result",6],["str",15]]],[[],[["option",4],["result",6]]],[[],["sectionkind",4]],[[],["machorelocationiterator",3]],[[],["sectionflags",4]],[[],["sectionindex",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["option",4]],[[],["result",6]],[[["u64",15]],[["result",6],["option",4]]],[[],[["compresseddata",3],["result",6]]],[[],[["result",6],["str",15]]],[[],[["option",4],["result",6]]],[[],["sectionkind",4]],[[],["perelocationiterator",3]],[[],["sectionflags",4]],[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[],["comdatsectioniterator",3]],[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[]],[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["str",15],["result",6]]],[[]],[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[]],[[],["comdatkind",4]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[]],[[]],[[["symbolindex",3]],["result",6]],[[]],[[["symbolindex",3]],["result",6]],[[]],[[["symbolindex",3]],["result",6]],[[]],[[["symbolindex",3]],["result",6]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[],["u64",15]],[[],["u64",15]],[[],["symbolkind",4]],[[],["symbolsection",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["symbolscope",4]],[[],["bool",15]],[[],["bool",15]],[[],[["symbolflags",4],["sectionindex",3]]],[[],["symbolindex",3]],[[],[["str",15],["result",6]]],[[],["u64",15]],[[],["u64",15]],[[],["symbolkind",4]],[[],["symbolsection",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["symbolscope",4]],[[],["bool",15]],[[],["bool",15]],[[],[["symbolflags",4],["sectionindex",3]]],[[],["symbolindex",3]],[[],[["str",15],["result",6]]],[[],["u64",15]],[[],["u64",15]],[[],["symbolkind",4]],[[],["symbolsection",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["symbolscope",4]],[[],["bool",15]],[[],["bool",15]],[[],[["symbolflags",4],["sectionindex",3]]],[[],["symbolindex",3]],[[],[["result",6],["str",15]]],[[],["u64",15]],[[],["u64",15]],[[],["symbolkind",4]],[[],["symbolsection",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["symbolscope",4]],[[],["bool",15]],[[],["bool",15]],[[],[["symbolflags",4],["sectionindex",3]]],[[],["u64",15]],[[],["u64",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["architecture",4]],["bool",15]],[[["addresssize",4]],["bool",15]],[[["binaryformat",4]],["bool",15]],[[["sectionkind",4]],["bool",15]],[[["sectionkind",4]],["bool",15]],[[["comdatkind",4]],["bool",15]],[[["symbolkind",4]],["bool",15]],[[["symbolscope",4]],["bool",15]],[[["relocationkind",4]],["bool",15]],[[["relocationkind",4]],["bool",15]],[[["relocationencoding",4]],["bool",15]],[[["fileflags",4]],["bool",15]],[[["fileflags",4]],["bool",15]],[[["sectionflags",4]],["bool",15]],[[["sectionflags",4]],["bool",15]],[[["symbolflags",4]],["bool",15]],[[["symbolflags",4]],["bool",15]],[[["endianness",4]],["bool",15]],[[["littleendian",3]],["bool",15]],[[["bigendian",3]],["bool",15]],[[["u16bytes",3]],["bool",15]],[[["u16bytes",3]],["bool",15]],[[["u32bytes",3]],["bool",15]],[[["u32bytes",3]],["bool",15]],[[["u64bytes",3]],["bool",15]],[[["u64bytes",3]],["bool",15]],[[["i16bytes",3]],["bool",15]],[[["i16bytes",3]],["bool",15]],[[["i32bytes",3]],["bool",15]],[[["i32bytes",3]],["bool",15]],[[["i64bytes",3]],["bool",15]],[[["i64bytes",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[["bytes",3]],["bool",15]],[[["archivekind",4]],["bool",15]],[[["error",3]],["bool",15]],[[["error",3]],["bool",15]],[[["sectionindex",3]],["bool",15]],[[["sectionindex",3]],["bool",15]],[[["symbolindex",3]],["bool",15]],[[["symbolindex",3]],["bool",15]],[[["symbolsection",4]],["bool",15]],[[["symbolsection",4]],["bool",15]],[[["symbolmapname",3]],["bool",15]],[[["symbolmapname",3]],["bool",15]],[[["objectmapentry",3]],["bool",15]],[[["objectmapentry",3]],["bool",15]],[[["import",3]],["bool",15]],[[["import",3]],["bool",15]],[[["export",3]],["bool",15]],[[["export",3]],["bool",15]],[[["relocationtarget",4]],["bool",15]],[[["relocationtarget",4]],["bool",15]],[[["compresseddata",3]],["bool",15]],[[["compresseddata",3]],["bool",15]],[[["compressionformat",4]],["bool",15]],[[["u16bytes",3]],["ordering",4]],[[["u32bytes",3]],["ordering",4]],[[["u64bytes",3]],["ordering",4]],[[["i16bytes",3]],["ordering",4]],[[["i32bytes",3]],["ordering",4]],[[["i64bytes",3]],["ordering",4]],[[["u16bytes",3]],[["ordering",4],["option",4]]],[[["u32bytes",3]],[["ordering",4],["option",4]]],[[["u64bytes",3]],[["ordering",4],["option",4]]],[[["i16bytes",3]],[["ordering",4],["option",4]]],[[["i32bytes",3]],[["ordering",4],["option",4]]],[[["i64bytes",3]],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["rel32",3]]],[[["rel64",3]]],[[],["architecture",4]],[[],["addresssize",4]],[[],["binaryformat",4]],[[],["sectionkind",4]],[[],["comdatkind",4]],[[],["symbolkind",4]],[[],["symbolscope",4]],[[],["relocationkind",4]],[[],["relocationencoding",4]],[[],["fileflags",4]],[[],["sectionflags",4]],[[],["symbolflags",4]],[[],["endianness",4]],[[],["littleendian",3]],[[],["bigendian",3]],[[],["u16bytes",3]],[[],["u32bytes",3]],[[],["u64bytes",3]],[[],["i16bytes",3]],[[],["i32bytes",3]],[[],["i64bytes",3]],[[],["bytes",3]],[[],["stringtable",3]],[[],["archivekind",4]],[[],["sectiontable",3]],[[],["coffsymboltable",3]],[[],["coffsymbol",3]],[[],["sectiontable",3]],[[],["symboltable",3]],[[],["elfsymboltable",3]],[[],["elfsymbol",3]],[[],["symboltable",3]],[[],["machosymboltable",3]],[[],["machosymbol",3]],[[],["error",3]],[[],["sectionindex",3]],[[],["symbolindex",3]],[[],["symbolsection",4]],[[],["symbolmap",3]],[[],["symbolmapname",3]],[[],["objectmap",3]],[[],["objectmapentry",3]],[[],["import",3]],[[],["export",3]],[[],["relocationtarget",4]],[[],["compresseddata",3]],[[],["compressionformat",4]],[[],["header",3]],[[],["fileheader32",3]],[[],["fileheader64",3]],[[],["ident",3]],[[],["sectionheader32",3]],[[],["sectionheader64",3]],[[],["compressionheader32",3]],[[],["compressionheader64",3]],[[],["sym32",3]],[[],["sym64",3]],[[],["syminfo32",3]],[[],["syminfo64",3]],[[],["rel32",3]],[[],["rela32",3]],[[],["rel64",3]],[[],["rela64",3]],[[],["programheader32",3]],[[],["programheader64",3]],[[],["dyn32",3]],[[],["dyn64",3]],[[],["noteheader32",3]],[[],["noteheader64",3]],[[],["fatheader",3]],[[],["fatarch32",3]],[[],["fatarch64",3]],[[],["machheader32",3]],[[],["machheader64",3]],[[],["loadcommand",3]],[[],["lcstr",3]],[[],["segmentcommand32",3]],[[],["segmentcommand64",3]],[[],["section32",3]],[[],["section64",3]],[[],["fvmlib",3]],[[],["fvmlibcommand",3]],[[],["dylib",3]],[[],["dylibcommand",3]],[[],["subframeworkcommand",3]],[[],["subclientcommand",3]],[[],["subumbrellacommand",3]],[[],["sublibrarycommand",3]],[[],["prebounddylibcommand",3]],[[],["dylinkercommand",3]],[[],["threadcommand",3]],[[],["routinescommand",3]],[[],["routinescommand_64",3]],[[],["symtabcommand",3]],[[],["dysymtabcommand",3]],[[],["dylibtableofcontents",3]],[[],["dylibmodule32",3]],[[],["dylibmodule64",3]],[[],["dylibreference",3]],[[],["twolevelhintscommand",3]],[[],["twolevelhint",3]],[[],["prebindcksumcommand",3]],[[],["uuidcommand",3]],[[],["rpathcommand",3]],[[],["linkeditdatacommand",3]],[[],["encryptioninfocommand",3]],[[],["encryptioninfocommand64",3]],[[],["versionmincommand",3]],[[],["buildversioncommand",3]],[[],["buildtoolversion",3]],[[],["dyldinfocommand",3]],[[],["linkeroptioncommand",3]],[[],["symsegcommand",3]],[[],["identcommand",3]],[[],["fvmfilecommand",3]],[[],["entrypointcommand",3]],[[],["sourceversioncommand",3]],[[],["dataincodeentry",3]],[[],["notecommand",3]],[[],["nlist32",3]],[[],["nlist64",3]],[[],["relocation",3]],[[],["relocationinfo",3]],[[],["scatteredrelocationinfo",3]],[[],["imagedosheader",3]],[[],["imageos2header",3]],[[],["imagevxdheader",3]],[[],["imagefileheader",3]],[[],["imagedatadirectory",3]],[[],["imageoptionalheader32",3]],[[],["imageromoptionalheader",3]],[[],["imageoptionalheader64",3]],[[],["imagentheaders64",3]],[[],["imagentheaders32",3]],[[],["imageromheaders",3]],[[],["guid",3]],[[],["anonobjectheader",3]],[[],["anonobjectheaderv2",3]],[[],["anonobjectheaderbigobj",3]],[[],["imagesectionheader",3]],[[],["imagesymbol",3]],[[],["imagesymbolbytes",3]],[[],["imagesymbolex",3]],[[],["imagesymbolexbytes",3]],[[],["imageauxsymboltokendef",3]],[[],["imageauxsymbolfunction",3]],[[],["imageauxsymbolfunctionbeginend",3]],[[],["imageauxsymbolweak",3]],[[],["imageauxsymbolsection",3]],[[],["imageauxsymbolcrc",3]],[[],["imagerelocation",3]],[[],["imagelinenumber",3]],[[],["imagebaserelocation",3]],[[],["imagearchivememberheader",3]],[[],["imageexportdirectory",3]],[[],["imageimportbyname",3]],[[],["imagetlsdirectory64",3]],[[],["imagetlsdirectory32",3]],[[],["imageimportdescriptor",3]],[[],["imageboundimportdescriptor",3]],[[],["imageboundforwarderref",3]],[[],["imagedelayloaddescriptor",3]],[[],["imageresourcedirectory",3]],[[],["imageresourcedirectoryentry",3]],[[],["imageresourcedirectorystring",3]],[[],["imageresourcedirstringu",3]],[[],["imageresourcedataentry",3]],[[],["imageloadconfigcodeintegrity",3]],[[],["imagedynamicrelocationtable",3]],[[],["imagedynamicrelocation32",3]],[[],["imagedynamicrelocation64",3]],[[],["imagedynamicrelocation32v2",3]],[[],["imagedynamicrelocation64v2",3]],[[],["imageprologuedynamicrelocationheader",3]],[[],["imageepiloguedynamicrelocationheader",3]],[[],["imageloadconfigdirectory32",3]],[[],["imageloadconfigdirectory64",3]],[[],["imagehotpatchinfo",3]],[[],["imagehotpatchbase",3]],[[],["imagehotpatchhashes",3]],[[],["imagearmruntimefunctionentry",3]],[[],["imagearm64runtimefunctionentry",3]],[[],["imagealpha64runtimefunctionentry",3]],[[],["imagealpharuntimefunctionentry",3]],[[],["imageruntimefunctionentry",3]],[[],["imageenclaveconfig32",3]],[[],["imageenclaveconfig64",3]],[[],["imageenclaveimport",3]],[[],["imagedebugdirectory",3]],[[],["imagecoffsymbolsheader",3]],[[],["imagedebugmisc",3]],[[],["imagefunctionentry",3]],[[],["imagefunctionentry64",3]],[[],["imageseparatedebugheader",3]],[[],["nonpageddebuginfo",3]],[[],["imagearchitectureentry",3]],[[],["importobjectheader",3]],[[],["imagecor20header",3]],[[],["endianness",4]],[[],["littleendian",3]],[[],["bigendian",3]],[[],["u16bytes",3]],[[],["u32bytes",3]],[[],["u64bytes",3]],[[],["i16bytes",3]],[[],["i32bytes",3]],[[],["i64bytes",3]],[[],["bytes",3]],[[],["stringtable",3]],[[],["sectiontable",3]],[[],["sectiontable",3]],[[]],[[]],[[],["perelocationiterator",3]],[[],["symbolmap",3]],[[],["objectmap",3]],[[],["objectmapentry",3]],[[],["compressionheader32",3]],[[],["compressionheader64",3]],[[],[["addresssize",4],["option",4]]],[[],["u8",15]],[[],["bool",15]],[[["bytes",3]]],[[["u32",15]],["result",4]],[[],["result",6]],[[],["binaryformat",4]],[[],["result",6]],[[["bytes",3]],["result",6]],[[["imagefileheader",3],["bytes",3]],["result",6]],[[],[["iter",3],["imagesectionheader",3]]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],[["result",6],["imagesectionheader",3]]],[[["stringtable",3]],["option",4]],[[["imagefileheader",3],["bytes",3]],["result",6]],[[],["stringtable",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],[["result",6],["imagesymbol",3]]],[[["usize",15]],["result",6]],[[["fn",8]],[["symbolmap",3],["symbolmapentry",8]]],[[["stringtable",3]],["result",6]],[[["sectiontable",3],["u64",15]],[["result",6],["u64",15]]],[[],["bool",15]],[[],["result",6]],[[["bytes",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",6]],[[["bytes",3]],[["result",6],["option",4]]],[[["bytes",3]],[["usize",15],["result",6]]],[[["bytes",3]],[["usize",15],["result",6]]],[[["bytes",3]],[["result",6],["u32",15]]],[[["bytes",3]],["result",6]],[[["bytes",3]],["result",6]],[[["bytes",3]],[["stringtable",3],["result",6]]],[[["bytes",3]],[["result",6],["sectiontable",3]]],[[]],[[["bytes",3]],[["bytes",3],["result",4]]],[[["bytes",3]],["result",4]],[[["u64",15],["bytes",3]],[["option",4],["result",4]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],[[["stringtable",3]]],[[],["iter",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],["result",6]],[[],["option",4]],[[],["result",6]],[[["u32",15],["bytes",3]],[["result",6],["symboltable",3]]],[[["usize",15],["bytes",3]],[["result",6],["symboltable",3]]],[[["usize",15]],[["relocationsections",3],["result",6]]],[[["stringtable",3]],["result",6]],[[],["option",4]],[[["bytes",3]],[["bytes",3],["result",4]]],[[["bytes",3]],["result",4]],[[["usize",15],["sectiontable",3],["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],[[["sectiontable",3],["bytes",3]],[["result",6],["symboltable",3]]],[[["bytes",3]],[["option",4],["result",6]]],[[["bytes",3]],[["result",6],["option",4]]],[[["usize",15],["sectiontable",3],["bytes",3]],[["result",6],["symboltable",3]]],[[],["usize",15]],[[],["stringtable",3]],[[],["iter",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],["result",6]],[[["usize",15]],[["u32",15],["option",4]]],[[],["result",6]],[[["fn",8]],[["symbolmap",3],["symbolmapentry",8]]],[[["stringtable",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["usize",15],["sectiontable",3]],["result",6]],[[["usize",15]],[["usize",15],["option",4]]],[[],[["result",6],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["architecture",4]],[[],["result",6]],[[],["result",6]],[[["bytes",3]],["result",6]],[[],["bool",15]],[[],["result",6]],[[["bytes",3]],[["result",6],["macholoadcommanditerator",3]]],[[["bytes",3]],[["result",6],["option",4]]],[[["bytes",3]],[["result",6],["symboltable",3]]],[[]],[[]],[[["bytes",3]],[["result",4],["bytes",3]]],[[["bytes",3]],["result",6]],[[]],[[]],[[],["option",4]],[[["bytes",3]],[["result",4],["bytes",3]]],[[["bytes",3]],["result",6]],[[],["stringtable",3]],[[],["iter",3]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],["result",6]],[[["fn",8]],[["symbolmap",3],["symbolmapentry",8]]],[[],["objectmap",3]],[[["stringtable",3]],["result",6]],[[],["bool",15]],[[],["u8",15]],[[],[["u16",15],["result",6]]],[[],["result",6]],[[["bytes",3]],["result",6]],[[["bytes",3]],["result",6]],[[["imagedosheader",3],["bytes",3]],["result",6]],[[["bytes",3]],[["sectiontable",3],["result",6]]],[[["bytes",3]],[["symboltable",3],["result",6]]],[[["bytes",3]],[["result",4],["bytes",3]]],[[["u32",15],["bytes",3]],[["bytes",3],["option",4]]],[[],["endianness",4]],[[],[["symbolmapname",3],["symbolmap",3]]],[[],["objectmap",3]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],[["result",6],["cow",4]]],[[],[["option",4],["sectionindex",3]]]],"p":[[8,"Endian"],[4,"Endianness"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"I16Bytes"],[3,"I32Bytes"],[3,"I64Bytes"],[3,"Bytes"],[8,"WritableBuffer"],[4,"ArchiveKind"],[3,"ArchiveFile"],[3,"ArchiveMember"],[8,"FileHeader"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rel"],[8,"Rela"],[8,"Dyn"],[8,"CompressionHeader"],[8,"NoteHeader"],[8,"FatArch"],[8,"MachHeader"],[8,"Segment"],[8,"Section"],[8,"Nlist"],[8,"ImageNtHeaders"],[8,"ImageOptionalHeader"],[8,"Object"],[8,"ObjectSegment"],[8,"ObjectSection"],[8,"ObjectComdat"],[8,"ObjectSymbolTable"],[8,"ObjectSymbol"],[4,"FileKind"],[3,"SectionIndex"],[3,"SymbolIndex"],[4,"SymbolSection"],[8,"SymbolMapEntry"],[3,"SymbolMap"],[3,"SymbolMapName"],[3,"ObjectMap"],[3,"ObjectMapEntry"],[3,"Import"],[3,"Export"],[4,"RelocationTarget"],[3,"Relocation"],[3,"CompressedData"],[4,"CompressionFormat"],[3,"Header"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Dyn32"],[3,"Dyn64"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"FatHeader"],[3,"FatArch32"],[3,"FatArch64"],[3,"MachHeader32"],[3,"MachHeader64"],[3,"LoadCommand"],[3,"LcStr"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Section32"],[3,"Section64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand"],[3,"RoutinesCommand_64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule32"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"EncryptionInfoCommand"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"BuildVersionCommand"],[3,"BuildToolVersion"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymSegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"NoteCommand"],[3,"Nlist32"],[3,"Nlist64"],[3,"Relocation"],[3,"RelocationInfo"],[3,"ScatteredRelocationInfo"],[3,"ImageDosHeader"],[3,"ImageOs2Header"],[3,"ImageVxdHeader"],[3,"ImageFileHeader"],[3,"ImageDataDirectory"],[3,"ImageOptionalHeader32"],[3,"ImageRomOptionalHeader"],[3,"ImageOptionalHeader64"],[3,"ImageNtHeaders64"],[3,"ImageNtHeaders32"],[3,"ImageRomHeaders"],[3,"Guid"],[3,"AnonObjectHeader"],[3,"AnonObjectHeaderV2"],[3,"AnonObjectHeaderBigobj"],[3,"ImageSectionHeader"],[3,"ImageSymbol"],[3,"ImageSymbolBytes"],[3,"ImageSymbolEx"],[3,"ImageSymbolExBytes"],[3,"ImageAuxSymbolTokenDef"],[3,"ImageAuxSymbolFunction"],[3,"ImageAuxSymbolFunctionBeginEnd"],[3,"ImageAuxSymbolWeak"],[3,"ImageAuxSymbolSection"],[3,"ImageAuxSymbolCrc"],[3,"ImageRelocation"],[3,"ImageLinenumber"],[3,"ImageBaseRelocation"],[3,"ImageArchiveMemberHeader"],[3,"ImageExportDirectory"],[3,"ImageImportByName"],[3,"ImageTlsDirectory64"],[3,"ImageTlsDirectory32"],[3,"ImageImportDescriptor"],[3,"ImageBoundImportDescriptor"],[3,"ImageBoundForwarderRef"],[3,"ImageDelayloadDescriptor"],[3,"ImageResourceDirectory"],[3,"ImageResourceDirectoryEntry"],[3,"ImageResourceDirectoryString"],[3,"ImageResourceDirStringU"],[3,"ImageResourceDataEntry"],[3,"ImageLoadConfigCodeIntegrity"],[3,"ImageDynamicRelocationTable"],[3,"ImageDynamicRelocation32"],[3,"ImageDynamicRelocation64"],[3,"ImageDynamicRelocation32V2"],[3,"ImageDynamicRelocation64V2"],[3,"ImagePrologueDynamicRelocationHeader"],[3,"ImageEpilogueDynamicRelocationHeader"],[3,"ImageLoadConfigDirectory32"],[3,"ImageLoadConfigDirectory64"],[3,"ImageHotPatchInfo"],[3,"ImageHotPatchBase"],[3,"ImageHotPatchHashes"],[3,"ImageArmRuntimeFunctionEntry"],[3,"ImageArm64RuntimeFunctionEntry"],[3,"ImageAlpha64RuntimeFunctionEntry"],[3,"ImageAlphaRuntimeFunctionEntry"],[3,"ImageRuntimeFunctionEntry"],[3,"ImageEnclaveConfig32"],[3,"ImageEnclaveConfig64"],[3,"ImageEnclaveImport"],[3,"ImageDebugDirectory"],[3,"ImageCoffSymbolsHeader"],[3,"ImageDebugMisc"],[3,"ImageFunctionEntry"],[3,"ImageFunctionEntry64"],[3,"ImageSeparateDebugHeader"],[3,"NonPagedDebugInfo"],[3,"ImageArchitectureEntry"],[3,"ImportObjectHeader"],[3,"ImageCor20Header"],[4,"Architecture"],[4,"AddressSize"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"ComdatKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[13,"MachO"],[4,"RelocationEncoding"],[4,"FileFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SectionFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SymbolFlags"],[13,"Elf"],[13,"MachO"],[13,"CoffSection"],[3,"LittleEndian"],[3,"BigEndian"],[3,"StringTable"],[3,"File"],[3,"SegmentIterator"],[3,"Segment"],[3,"SectionIterator"],[3,"Section"],[3,"ComdatIterator"],[3,"Comdat"],[3,"ComdatSectionIterator"],[3,"SymbolTable"],[3,"SymbolIterator"],[3,"Symbol"],[3,"DynamicRelocationIterator"],[3,"SectionRelocationIterator"],[3,"ArchiveMemberIterator"],[3,"CoffFile"],[3,"SectionTable"],[3,"CoffSegmentIterator"],[3,"CoffSegment"],[3,"CoffSectionIterator"],[3,"CoffSection"],[3,"SymbolTable"],[3,"CoffSymbolTable"],[3,"CoffSymbolIterator"],[3,"CoffSymbol"],[3,"CoffRelocationIterator"],[3,"CoffComdatIterator"],[3,"CoffComdat"],[3,"CoffComdatSectionIterator"],[3,"ElfFile"],[3,"ElfSegmentIterator"],[3,"ElfSegment"],[3,"SectionTable"],[3,"ElfSectionIterator"],[3,"ElfSection"],[3,"SymbolTable"],[3,"ElfSymbolTable"],[3,"ElfSymbolIterator"],[3,"ElfSymbol"],[3,"RelocationSections"],[3,"ElfDynamicRelocationIterator"],[3,"ElfSectionRelocationIterator"],[3,"ElfComdatIterator"],[3,"ElfComdat"],[3,"ElfComdatSectionIterator"],[3,"NoteIterator"],[3,"Note"],[3,"MachOFile"],[3,"MachOComdatIterator"],[3,"MachOComdat"],[3,"MachOComdatSectionIterator"],[3,"MachOSegmentIterator"],[3,"MachOSegment"],[3,"MachOSectionIterator"],[3,"MachOSection"],[3,"SymbolTable"],[3,"MachOSymbolTable"],[3,"MachOSymbolIterator"],[3,"MachOSymbol"],[3,"MachORelocationIterator"],[3,"PeFile"],[3,"PeComdatIterator"],[3,"PeComdat"],[3,"PeComdatSectionIterator"],[3,"PeSegmentIterator"],[3,"PeSegment"],[3,"PeSectionIterator"],[3,"PeSection"],[3,"PeRelocationIterator"],[3,"NoDynamicRelocationIterator"],[3,"Error"]]},\
"ogg":{"doc":"Ogg container decoder and encoder","t":[0,4,13,13,13,13,13,3,3,11,11,11,3,11,11,11,11,3,11,11,11,11,11,11,11,0,3,4,13,13,13,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["reading","OggReadError","NoCapturePatternFound","InvalidStreamStructVer","HashMismatch","ReadError","InvalidData","OggPage","PageParser","new","parse_segments","parse_packet_data","BasePacketReader","new","read_packet","push_page","update_after_seek","PacketReader","new","into_inner","read_packet","read_packet_expected","seek_bytes","seek_absgp","delete_unread_packets","writing","PacketWriter","PacketWriteEndInfo","NormalPacket","EndPage","EndStream","new","into_inner","inner","inner_mut","write_packet","get_current_offs","Packet","data","first_in_page","first_in_stream","last_in_page","last_in_stream","absgp_page","stream_serial","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","eq","fmt","fmt","description","cause"],"q":["ogg","ogg::reading","","","","","","","","","","","","","","","","","","","","","","","","ogg","ogg::writing","","","","","","","","","","","ogg","","","","","","","","ogg::reading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ogg::writing","","","","","","","","","","","","","","","","ogg","","","","","","","ogg::reading","ogg::writing","","ogg::reading","","",""],"d":["Reading logic","Error that can be raised when decoding an Ogg transport.","The capture pattern for a new page was not found where …","Invalid stream structure version, with the given one …","Mismatch of the hash value with (expected, calculated) …","I/O error occured.","Some constraint required by the spec was not met.","Contains a fully parsed OGG page.","Helper struct for parsing pages","Creates a new Page parser","Parses the segments buffer, and returns the requested size…","Parses the packets data and verifies the checksum.","Low level struct for reading from an Ogg stream.","Constructs a new blank <code>BasePacketReader</code>.","Extracts a packet from the cache, if the cache contains …","Pushes a given Ogg page, updating the internal structures …","Reset the internal state after a seek","Reader for packets from an Ogg stream.","Constructs a new <code>PacketReader</code> with a given <code>Read</code>.","Returns the wrapped reader, consuming the <code>PacketReader</code>.","Reads a packet, and returns it on success.","Reads a packet, and returns it on success.","Seeks the underlying reader","Seeks to absolute granule pos","Resets the internal state by deleting all unread packets.","Writing logic","Writer for packets into an Ogg stream.","Specifies whether to end something with the write of the …","No ends here, just a normal packet","Force-end the current page","End the whole logical stream.","","","Access the interior writer","Access the interior writer mutably","Write a packet","","Ogg packet representation.","The data the <code>Packet</code> contains","Returns whether the packet is the first one starting in …","Returns whether the packet is the first one of the entire …","Returns whether the packet is the last one starting in …","Returns whether the packet is the last one of the entire …","Returns the absolute granule position of the page the …","Returns the serial number that uniquely identifies the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,0,0,2,2,2,0,3,3,3,3,0,4,4,4,4,4,4,4,0,0,0,5,5,5,6,6,6,6,6,6,0,7,7,7,7,7,7,7,1,1,1,1,1,1,1,1,8,8,8,8,8,8,8,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,1,5,5,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,[[],[["result",4],["oggreaderror",4]]],[[["vec",3],["u8",15]],["usize",15]],[[["vec",3],["u8",15]],[["result",4],["oggreaderror",4],["oggpage",3]]],null,[[]],[[],[["option",4],["packet",3]]],[[["oggpage",3]],[["result",4],["oggreaderror",4]]],[[]],null,[[],["packetreader",3]],[[]],[[],[["option",4],["result",4],["oggreaderror",4]]],[[],[["oggreaderror",4],["result",4],["packet",3]]],[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]],[[["u32",15],["u64",15],["option",4]],[["bool",15],["result",4],["oggreaderror",4]]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["u32",15],["u64",15],["box",3],["packetwriteendinfo",4]],[["error",3],["result",4]]],[[],[["u64",15],["error",3],["result",4]]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u64",15]],[[],["u32",15]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["error",3]],["oggreaderror",4]],[[],["packetwriteendinfo",4]],[[["packetwriteendinfo",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["fmterror",3],["result",4]]],[[],["str",15]],[[],[["option",4],["error",8]]]],"p":[[4,"OggReadError"],[3,"PageParser"],[3,"BasePacketReader"],[3,"PacketReader"],[4,"PacketWriteEndInfo"],[3,"PacketWriter"],[3,"Packet"],[3,"OggPage"]]},\
"once_cell":{"doc":"Overview","t":[0,3,11,11,11,11,11,11,11,11,3,11,11,11,0,3,11,11,11,11,11,11,11,11,11,3,11,11,11,0,3,11,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["unsync","OnceCell","new","get","get_mut","set","get_or_init","get_or_try_init","take","into_inner","Lazy","new","into_value","force","sync","OnceCell","new","get","get_mut","get_unchecked","set","get_or_init","get_or_try_init","take","into_inner","Lazy","new","into_value","force","race","OnceNonZeroUsize","new","get","set","get_or_init","get_or_try_init","OnceBool","new","get","set","get_or_init","get_or_try_init","OnceBox","from","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","from","from","clone","clone","default","default","default","default","default","default","default","eq","eq","deref","deref","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","new","get","set","get_or_init","get_or_try_init"],"q":["once_cell","once_cell::unsync","","","","","","","","","","","","","once_cell","once_cell::sync","","","","","","","","","","","","","","once_cell","once_cell::race","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","once_cell::sync","","","","","","","","","","","","","","","","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","once_cell::sync","once_cell::unsync","once_cell::sync","once_cell::unsync","","once_cell::sync","","once_cell::race","","","once_cell::unsync","once_cell::sync","once_cell::unsync","once_cell::sync","once_cell::unsync","once_cell::sync","once_cell::unsync","","once_cell::sync","","once_cell::race","","","","","","",""],"d":["","A cell which can be written to only once. It is not …","Creates a new empty cell.","Gets a reference to the underlying value.","Gets a mutable reference to the underlying value.","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Takes the value out of this <code>OnceCell</code>, moving it back to …","Consumes the <code>OnceCell</code>, returning the wrapped value.","A value which is initialized on the first access.","Creates a new lazy value with the given initializing …","Consumes this <code>Lazy</code> returning the stored value.","Forces the evaluation of this lazy value and returns a …","","A thread-safe cell which can be written to only once.","Creates a new empty cell.","Gets the reference to the underlying value.","Gets the mutable reference to the underlying value.","Get the reference to the underlying value, without …","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Takes the value out of this <code>OnceCell</code>, moving it back to …","Consumes the <code>OnceCell</code>, returning the wrapped value. …","A value which is initialized on the first access.","Creates a new lazy value with the given initializing …","Consumes this <code>Lazy</code> returning the stored value.","Forces the evaluation of this lazy value and returns a …","“First one wins” flavor of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","Creates a new empty cell.","Gets the underlying value.","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","A thread-safe cell which can be written to only once.","Creates a new empty cell.","Gets the underlying value.","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new lazy value using <code>Default</code> as the …","","Creates a new lazy value using <code>Default</code> as the …","","","","","","","","","","","","","","","","","Creates a new empty cell.","Gets a reference to the underlying value.","Sets the contents of this cell to <code>value</code>.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …"],"i":[0,0,1,1,1,1,1,1,1,1,0,2,2,2,0,0,3,3,3,3,3,3,3,3,3,0,4,4,4,0,0,5,5,5,5,5,0,6,6,6,6,6,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,7,7,7,7,7,7,7,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,1,3,1,3,1,2,3,4,5,6,7,1,3,2,4,2,4,1,2,3,4,5,6,7,7,7,7,7,7],"f":[null,null,[[],["oncecell",3]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["option",4]],[[],["option",4]],null,[[],["lazy",3]],[[["lazy",3]],["result",4]],[[["lazy",3]]],null,null,[[],["oncecell",3]],[[],["option",4]],[[],["option",4]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["option",4]],[[],["option",4]],null,[[],["lazy",3]],[[["lazy",3]],["result",4]],[[["lazy",3]]],null,null,[[],["oncenonzerousize",3]],[[],[["option",4],["nonzerousize",3]]],[[["nonzerousize",3]],["result",4]],[[],["nonzerousize",3]],[[],[["result",4],["nonzerousize",3]]],null,[[],["oncebool",3]],[[],[["bool",15],["option",4]]],[[["bool",15]],["result",4]],[[],["bool",15]],[[],[["bool",15],["result",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["oncecell",3]],[[],["oncecell",3]],[[]],[[],["lazy",3]],[[],["oncecell",3]],[[],["lazy",3]],[[],["oncenonzerousize",3]],[[],["oncebool",3]],[[]],[[],["bool",15]],[[["oncecell",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["oncebox",3]],[[],["option",4]],[[["box",3]],[["result",4],["box",3]]],[[]],[[],["result",4]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"OnceBox"]]},\
"os_str_bytes":{"doc":"This crate allows interacting with the data stored …","t":[0,5,5,3,8,10,10,8,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11],"n":["raw","ends_with","starts_with","EncodingError","OsStrBytes","from_bytes","to_bytes","OsStringBytes","from_bytes","from_cow","from_vec","into_vec","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","eq","ne","fmt","fmt"],"q":["os_str_bytes","os_str_bytes::raw","","os_str_bytes","","","","","","","","","","","","","","","","","","","",""],"d":["Functions that cannot be implemented outside of this …","Returns <code>true</code> if and only if the encoded bytes end with …","Returns <code>true</code> if and only if the encoded bytes start with …","The error that occurs when a byte sequence is not …","A platform agnostic variant of <code>OsStrExt</code>.","Converts a byte slice into an equivalent platform-native …","Converts a platform-native string into an equivalent byte …","A platform agnostic variant of <code>OsStringExt</code>.","Copies a byte slice into an equivalent platform-native …","A convenience method to call either <code>from_bytes</code> or <code>from_vec</code>…","Converts a byte vector into an equivalent platform-native …","Converts a platform-native string into an equivalent byte …","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,[[],["bool",15]],[[],["bool",15]],null,null,[[],[["cow",4],["encodingerror",3],["result",4]]],[[],["cow",4]],null,[[],[["encodingerror",3],["result",4]]],[[["cow",4]],[["encodingerror",3],["result",4]]],[[["vec",3],["u8",15]],[["encodingerror",3],["result",4]]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["encodingerror",3]],["bool",15]],[[["encodingerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"OsStrBytes"],[8,"OsStringBytes"],[3,"EncodingError"]]},\
"owo_colors":{"doc":"This crate provides <code>OwoColorize</code>, an extension trait for …","tn":["colors","xterm","UserBlack","UserRed","UserGreen","UserYellow","UserBlue","UserMagenta","UserCyan","UserWhite","UserBrightBlack","UserBrightRed","UserBrightGreen","UserBrightYellow","UserBrightBlue","UserBrightMagenta","UserBrightCyan","UserBrightWhite","Black","StratosBlue","NavyBlue","MidnightBlue","DarkBlue","Blue","CamaroneGreen","BlueStone","OrientBlue","EndeavourBlue","ScienceBlue","BlueRibbon","JapaneseLaurel","DeepSeaGreen","Teal","DeepCerulean","LochmaraBlue","AzureRadiance","LightJapaneseLaurel","Jade","PersianGreen","BondiBlue","Cerulean","LightAzureRadiance","DarkGreen","Malachite","CaribbeanGreen","LightCaribbeanGreen","RobinEggBlue","Aqua","Green","DarkSpringGreen","SpringGreen","LightSpringGreen","BrightTurquoise","Cyan","Rosewood","PompadourMagenta","PigmentIndigo","DarkPurple","ElectricIndigo","ElectricPurple","VerdunGreen","ScorpionOlive","Lilac","ScampiIndigo","Indigo","DarkCornflowerBlue","DarkLimeade","GladeGreen","JuniperGreen","HippieBlue","HavelockBlue","CornflowerBlue","Limeade","FernGreen","SilverTree","Tradewind","ShakespeareBlue","DarkMalibuBlue","DarkBrightGreen","DarkPastelGreen","PastelGreen","DownyTeal","Viking","MalibuBlue","BrightGreen","DarkScreaminGreen","ScreaminGreen","DarkAquamarine","Aquamarine","LightAquamarine","Maroon","DarkFreshEggplant","LightFreshEggplant","Purple","ElectricViolet","LightElectricViolet","Brown","CopperRose","StrikemasterPurple","DelugePurple","DarkMediumPurple","DarkHeliotropePurple","Olive","ClayCreekOlive","DarkGray","WildBlueYonder","ChetwodeBlue","SlateBlue","LightLimeade","ChelseaCucumber","BayLeaf","GulfStream","PoloBlue","LightMalibuBlue","Pistachio","LightPastelGreen","DarkFeijoaGreen","VistaBlue","Bermuda","DarkAnakiwaBlue","ChartreuseGreen","LightScreaminGreen","DarkMintGreen","MintGreen","LighterAquamarine","AnakiwaBlue","BrightRed","DarkFlirt","Flirt","LightFlirt","DarkViolet","BrightElectricViolet","RoseofSharonOrange","MatrixPink","TapestryPink","FuchsiaPink","MediumPurple","Heliotrope","PirateGold","MuesliOrange","PharlapPink","Bouquet","Lavender","LightHeliotrope","BuddhaGold","OliveGreen","HillaryOlive","SilverChalice","WistfulLilac","MelroseLilac","RioGrandeGreen","ConiferGreen","Feijoa","PixieGreen","JungleMist","LightAnakiwaBlue","Lime","GreenYellow","LightMintGreen","Celadon","AeroBlue","FrenchPassLightBlue","GuardsmanRed","RazzmatazzCerise","MediumVioletRed","HollywoodCerise","DarkPurplePizzazz","BrighterElectricViolet","TennOrange","RomanOrange","CranberryPink","HopbushPink","Orchid","LighterHeliotrope","MangoTango","Copperfield","SeaPink","CanCanPink","LightOrchid","BrightHeliotrope","DarkCorn","DarkTachaOrange","TanBeige","ClamShell","ThistlePink","Mauve","Corn","TachaOrange","DecoOrange","PaleGoldenrod","AltoBeige","FogPink","ChartreuseYellow","Canary","Honeysuckle","ReefPaleYellow","SnowyMint","OysterBay","Red","DarkRose","Rose","LightHollywoodCerise","PurplePizzazz","Fuchsia","BlazeOrange","BittersweetOrange","WildWatermelon","DarkHotPink","HotPink","PinkFlamingo","FlushOrange","Salmon","VividTangerine","PinkSalmon","DarkLavenderRose","BlushPink","YellowSea","TexasRose","Tacao","Sundown","CottonCandy","LavenderRose","Gold","Dandelion","GrandisCaramel","Caramel","CosmosSalmon","PinkLace","Yellow","LaserLemon","DollyYellow","PortafinoYellow","Cumulus","White","DarkCodGray","CodGray","LightCodGray","DarkMineShaft","MineShaft","LightMineShaft","DarkTundora","Tundora","ScorpionGray","DarkDoveGray","DoveGray","Boulder","Gray","LightGray","DustyGray","NobelGray","DarkSilverChalice","LightSilverChalice","DarkSilver","Silver","DarkAlto","Alto","Mercury","GalleryGray","Black","Red","Green","Yellow","Blue","Magenta","Cyan","White","BrightBlack","BrightRed","BrightGreen","BrightYellow","BrightBlue","BrightMagenta","BrightCyan","BrightWhite","styles","BoldDisplay","0","DimDisplay","0","ItalicDisplay","0","UnderlineDisplay","0","BlinkDisplay","0","BlinkFastDisplay","0","ReversedDisplay","0","HiddenDisplay","0","StrikeThroughDisplay","0","colored","Color","Black","Red","Green","Yellow","Blue","Magenta","Cyan","White","BrightBlack","BrightRed","BrightGreen","BrightYellow","BrightBlue","BrightMagenta","BrightCyan","BrightWhite","Color","ANSI_FG","ANSI_BG","DynColor","fmt_ansi_fg","fmt_ansi_bg","FgColorDisplay","BgColorDisplay","FgDynColorDisplay","BgDynColorDisplay","OwoColorize","fg","bg","black","on_black","red","on_red","green","on_green","yellow","on_yellow","blue","on_blue","magenta","on_magenta","purple","on_purple","cyan","on_cyan","white","on_white","bright_black","on_bright_black","bright_red","on_bright_red","bright_green","on_bright_green","bright_yellow","on_bright_yellow","bright_blue","on_bright_blue","bright_magenta","on_bright_magenta","bright_purple","on_bright_purple","bright_cyan","on_bright_cyan","bright_white","on_bright_white","bold","dimmed","italic","underline","blink","blink_fast","reversed","hidden","strikethrough","color","on_color","truecolor","on_truecolor","style","AnsiColors","Black","Red","Green","Yellow","Blue","Magenta","Cyan","White","BrightBlack","BrightRed","BrightGreen","BrightYellow","BrightBlue","BrightMagenta","BrightCyan","BrightWhite","Rgb","0","1","2","XtermColors","UserBlack","UserRed","UserGreen","UserYellow","UserBlue","UserMagenta","UserCyan","UserWhite","UserBrightBlack","UserBrightRed","UserBrightGreen","UserBrightYellow","UserBrightBlue","UserBrightMagenta","UserBrightCyan","UserBrightWhite","Black","StratosBlue","NavyBlue","MidnightBlue","DarkBlue","Blue","CamaroneGreen","BlueStone","OrientBlue","EndeavourBlue","ScienceBlue","BlueRibbon","JapaneseLaurel","DeepSeaGreen","Teal","DeepCerulean","LochmaraBlue","AzureRadiance","LightJapaneseLaurel","Jade","PersianGreen","BondiBlue","Cerulean","LightAzureRadiance","DarkGreen","Malachite","CaribbeanGreen","LightCaribbeanGreen","RobinEggBlue","Aqua","Green","DarkSpringGreen","SpringGreen","LightSpringGreen","BrightTurquoise","Cyan","Rosewood","PompadourMagenta","PigmentIndigo","DarkPurple","ElectricIndigo","ElectricPurple","VerdunGreen","ScorpionOlive","Lilac","ScampiIndigo","Indigo","DarkCornflowerBlue","DarkLimeade","GladeGreen","JuniperGreen","HippieBlue","HavelockBlue","CornflowerBlue","Limeade","FernGreen","SilverTree","Tradewind","ShakespeareBlue","DarkMalibuBlue","DarkBrightGreen","DarkPastelGreen","PastelGreen","DownyTeal","Viking","MalibuBlue","BrightGreen","DarkScreaminGreen","ScreaminGreen","DarkAquamarine","Aquamarine","LightAquamarine","Maroon","DarkFreshEggplant","LightFreshEggplant","Purple","ElectricViolet","LightElectricViolet","Brown","CopperRose","StrikemasterPurple","DelugePurple","DarkMediumPurple","DarkHeliotropePurple","Olive","ClayCreekOlive","DarkGray","WildBlueYonder","ChetwodeBlue","SlateBlue","LightLimeade","ChelseaCucumber","BayLeaf","GulfStream","PoloBlue","LightMalibuBlue","Pistachio","LightPastelGreen","DarkFeijoaGreen","VistaBlue","Bermuda","DarkAnakiwaBlue","ChartreuseGreen","LightScreaminGreen","DarkMintGreen","MintGreen","LighterAquamarine","AnakiwaBlue","BrightRed","DarkFlirt","Flirt","LightFlirt","DarkViolet","BrightElectricViolet","RoseofSharonOrange","MatrixPink","TapestryPink","FuchsiaPink","MediumPurple","Heliotrope","PirateGold","MuesliOrange","PharlapPink","Bouquet","Lavender","LightHeliotrope","BuddhaGold","OliveGreen","HillaryOlive","SilverChalice","WistfulLilac","MelroseLilac","RioGrandeGreen","ConiferGreen","Feijoa","PixieGreen","JungleMist","LightAnakiwaBlue","Lime","GreenYellow","LightMintGreen","Celadon","AeroBlue","FrenchPassLightBlue","GuardsmanRed","RazzmatazzCerise","MediumVioletRed","HollywoodCerise","DarkPurplePizzazz","BrighterElectricViolet","TennOrange","RomanOrange","CranberryPink","HopbushPink","Orchid","LighterHeliotrope","MangoTango","Copperfield","SeaPink","CanCanPink","LightOrchid","BrightHeliotrope","DarkCorn","DarkTachaOrange","TanBeige","ClamShell","ThistlePink","Mauve","Corn","TachaOrange","DecoOrange","PaleGoldenrod","AltoBeige","FogPink","ChartreuseYellow","Canary","Honeysuckle","ReefPaleYellow","SnowyMint","OysterBay","Red","DarkRose","Rose","LightHollywoodCerise","PurplePizzazz","Fuchsia","BlazeOrange","BittersweetOrange","WildWatermelon","DarkHotPink","HotPink","PinkFlamingo","FlushOrange","Salmon","VividTangerine","PinkSalmon","DarkLavenderRose","BlushPink","YellowSea","TexasRose","Tacao","Sundown","CottonCandy","LavenderRose","Gold","Dandelion","GrandisCaramel","Caramel","CosmosSalmon","PinkLace","Yellow","LaserLemon","DollyYellow","PortafinoYellow","Cumulus","White","DarkCodGray","CodGray","LightCodGray","DarkMineShaft","MineShaft","LightMineShaft","DarkTundora","Tundora","ScorpionGray","DarkDoveGray","DoveGray","Boulder","Gray","LightGray","DustyGray","NobelGray","DarkSilverChalice","LightSilverChalice","DarkSilver","Silver","DarkAlto","Alto","Mercury","GalleryGray","DynColors","Ansi","Xterm","Rgb","ParseColorError","Effect","Bold","Dimmed","Italic","Underline","Blink","BlinkFast","Reversed","Hidden","Strikethrough","Styled","Style","style","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt_ansi_fg","fmt_ansi_bg","fmt_ansi_fg","fmt_ansi_bg","fmt_ansi_fg","fmt_ansi_bg","fmt_ansi_fg","fmt_ansi_bg","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","ne","eq","eq","eq","ne","from_str","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","clone","clone","clone","clone","clone","clone","default","new","style","fg","bg","black","on_black","red","on_red","green","on_green","yellow","on_yellow","blue","on_blue","magenta","on_magenta","purple","on_purple","cyan","on_cyan","white","on_white","bright_black","on_bright_black","bright_red","on_bright_red","bright_green","on_bright_green","bright_yellow","on_bright_yellow","bright_blue","on_bright_blue","bright_magenta","on_bright_magenta","bright_purple","on_bright_purple","bright_cyan","on_bright_cyan","bright_white","on_bright_white","bold","dimmed","italic","underline","blink","blink_fast","reversed","hidden","strikethrough","effect","remove_effect","effects","remove_effects","remove_all_effects","color","on_color","truecolor","on_truecolor"],"q":["owo_colors","owo_colors::colors","owo_colors::colors::xtermowo_colors::colors","","","","","","","","","","","","","","","","owo_colors","owo_colors::styles","","","","","","","","","","","","","","","","","","owo_colors","owo_colors::colored","","","","","","","","","","","","","","","","","owo_colorsowo_colors::colored","","","","","","","owo_colors","","","","","","","owo_colors::colors::xtermowo_colors","","","","","","","owo_colors::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owo_colors::styles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owo_colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","owo_colors::colored","","owo_colors","","","","","","","","","owo_colors::colored","owo_colors","","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","owo_colors::colored","owo_colors","","","","","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors","","","","","owo_colors::styles","","","","","","","","","owo_colors::colored","owo_colors","","","owo_colors::colored","owo_colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Color types for used for being generic over the color","XTerm 256-bit colors. Not as widely supported as standard …color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","A color for use with <code>OwoColorize</code>’s <code>fg</code> and <code>bg</code> methods.","Different display styles (strikethrough, bold, etc.)","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Transparent wrapper around a type which implements all …","","Module for drop-in <code>colored</code> support to aid in porting code …","Available standard ANSI colors for use with …","","","","","","","","","","","","","","","","","A trait for describing a type which can be used with …","","","A trait describing a runtime-configurable color which can …","","","Transparent wrapper around a type which implements all …","Transparent wrapper around a type which implements all …","Wrapper around a type which implements all the formatters …","Wrapper around a type which implements all the formatters …","Extension trait for colorizing a type which implements …","Set the foreground color generically","Set the background color generically.","Change the foreground color to black","Change the foreground color to black","Change the foreground color to red","Change the foreground color to red","Change the foreground color to green","Change the foreground color to green","Change the foreground color to yellow","Change the foreground color to yellow","Change the foreground color to blue","Change the foreground color to blue","Change the foreground color to magenta","Change the foreground color to magenta","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to cyan","Change the foreground color to cyan","Change the foreground color to white","Change the foreground color to white","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright yellow","Change the foreground color to bright yellow","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright white","Change the foreground color to bright white","Make the text bold","Make the text dim","Make the text italicized","Make the text italicized","Make the text blink","Make the text blink (but fast!)","Swap the foreground and background colors","Hide the text","Cross out the text","Set the foreground color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Sets the foreground color to an RGB value.","Sets the background color to an RGB value.","Apply a runtime-determined style","Available standard ANSI colors for use with …","","","","","","","","","","","","","","","","","Available RGB colors for use with <code>OwoColorize::color</code> or …","","","","Available Xterm colors for use with <code>OwoColorize::color</code> or …n enum describing runtime-configurable colors which can …","","","","","","","","","","","","","","","","","Helper to create [<code>Style</code>]s more ergonomicallyet the foreground color generically","Set the background color generically.","Change the foreground color to black","Change the foreground color to black","Change the foreground color to red","Change the foreground color to red","Change the foreground color to green","Change the foreground color to green","Change the foreground color to yellow","Change the foreground color to yellow","Change the foreground color to blue","Change the foreground color to blue","Change the foreground color to magenta","Change the foreground color to magenta","Change the foreground color to purple","Change the foreground color to purple","Change the foreground color to cyan","Change the foreground color to cyan","Change the foreground color to white","Change the foreground color to white","Change the foreground color to bright black","Change the foreground color to bright black","Change the foreground color to bright red","Change the foreground color to bright red","Change the foreground color to bright green","Change the foreground color to bright green","Change the foreground color to bright yellow","Change the foreground color to bright yellow","Change the foreground color to bright blue","Change the foreground color to bright blue","Change the foreground color to bright magenta","Change the foreground color to bright magenta","Change the foreground color to bright purple","Change the foreground color to bright purple","Change the foreground color to bright cyan","Change the foreground color to bright cyan","Change the foreground color to bright white","Change the foreground color to bright white","Make the text bold","Make the text dim","Make the text italicized","Make the text italicized","Make the text blink","Make the text blink (but fast!)","Swap the foreground and background colors","Hide the text","Cross out the text","","","","","","Set the foreground color at runtime. Only use if you do …","Set the background color at runtime. Only use if you do …","Sets the foreground color to an RGB value.","Sets the background color to an RGB value."],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,[[],[["fgcolordisplay",3],["color",8]]],[[],[["color",8],["bgcolordisplay",3]]],[[],[["fgcolordisplay",3],["black",3]]],[[],[["bgcolordisplay",3],["black",3]]],[[],[["fgcolordisplay",3],["red",3]]],[[],[["red",3],["bgcolordisplay",3]]],[[],[["fgcolordisplay",3],["green",3]]],[[],[["green",3],["bgcolordisplay",3]]],[[],[["yellow",3],["fgcolordisplay",3]]],[[],[["yellow",3],["bgcolordisplay",3]]],[[],[["fgcolordisplay",3],["blue",3]]],[[],[["blue",3],["bgcolordisplay",3]]],[[],[["fgcolordisplay",3],["magenta",3]]],[[],[["bgcolordisplay",3],["magenta",3]]],[[],[["fgcolordisplay",3],["magenta",3]]],[[],[["bgcolordisplay",3],["magenta",3]]],[[],[["fgcolordisplay",3],["cyan",3]]],[[],[["cyan",3],["bgcolordisplay",3]]],[[],[["white",3],["fgcolordisplay",3]]],[[],[["white",3],["bgcolordisplay",3]]],[[],[["brightblack",3],["fgcolordisplay",3]]],[[],[["bgcolordisplay",3],["brightblack",3]]],[[],[["brightred",3],["fgcolordisplay",3]]],[[],[["brightred",3],["bgcolordisplay",3]]],[[],[["brightgreen",3],["fgcolordisplay",3]]],[[],[["brightgreen",3],["bgcolordisplay",3]]],[[],[["brightyellow",3],["fgcolordisplay",3]]],[[],[["bgcolordisplay",3],["brightyellow",3]]],[[],[["brightblue",3],["fgcolordisplay",3]]],[[],[["brightblue",3],["bgcolordisplay",3]]],[[],[["brightmagenta",3],["fgcolordisplay",3]]],[[],[["bgcolordisplay",3],["brightmagenta",3]]],[[],[["brightmagenta",3],["fgcolordisplay",3]]],[[],[["bgcolordisplay",3],["brightmagenta",3]]],[[],[["fgcolordisplay",3],["brightcyan",3]]],[[],[["bgcolordisplay",3],["brightcyan",3]]],[[],[["fgcolordisplay",3],["brightwhite",3]]],[[],[["brightwhite",3],["bgcolordisplay",3]]],[[],["bolddisplay",3]],[[],["dimdisplay",3]],[[],["italicdisplay",3]],[[],["underlinedisplay",3]],[[],["blinkdisplay",3]],[[],["blinkfastdisplay",3]],[[],["reverseddisplay",3]],[[],["hiddendisplay",3]],[[],["strikethroughdisplay",3]],[[["dyncolor",8]],[["fgdyncolordisplay",3],["dyncolor",8]]],[[["dyncolor",8]],[["bgdyncolordisplay",3],["dyncolor",8]]],[[["u8",15]],[["fgdyncolordisplay",3],["rgb",3]]],[[["u8",15]],[["bgdyncolordisplay",3],["rgb",3]]],[[["style",3]],["styled",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["style",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["dyncolors",4]],["bool",15]],[[["dyncolors",4]],["bool",15]],[[["ansicolors",4]],["bool",15]],[[["xtermcolors",4]],["bool",15]],[[["rgb",3]],["bool",15]],[[["rgb",3]],["bool",15]],[[["str",15]],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]]],[[],["dyncolors",4]],[[],["effect",4]],[[],["style",3]],[[],["ansicolors",4]],[[],["xtermcolors",4]],[[],["rgb",3]],[[],["style",3]],[[]],[[],["styled",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["effect",4]]],[[["effect",4]]],[[]],[[]],[[]],[[["dyncolor",8]]],[[["dyncolor",8]]],[[["u8",15]]],[[["u8",15]]]],"p":[[3,"BoldDisplay"],[3,"DimDisplay"],[3,"ItalicDisplay"],[3,"UnderlineDisplay"],[3,"BlinkDisplay"],[3,"BlinkFastDisplay"],[3,"ReversedDisplay"],[3,"HiddenDisplay"],[3,"StrikeThroughDisplay"],[4,"Color"],[8,"Color"],[8,"DynColor"],[8,"OwoColorize"],[3,"Rgb"],[4,"XtermColors"],[4,"DynColors"],[4,"Effect"],[3,"ParseColorError"],[3,"Styled"],[3,"Style"],[3,"UserBlack"],[3,"UserRed"],[3,"UserGreen"],[3,"UserYellow"],[3,"UserBlue"],[3,"UserMagenta"],[3,"UserCyan"],[3,"UserWhite"],[3,"UserBrightBlack"],[3,"UserBrightRed"],[3,"UserBrightGreen"],[3,"UserBrightYellow"],[3,"UserBrightBlue"],[3,"UserBrightMagenta"],[3,"UserBrightCyan"],[3,"UserBrightWhite"],[3,"Black"],[3,"StratosBlue"],[3,"NavyBlue"],[3,"MidnightBlue"],[3,"DarkBlue"],[3,"Blue"],[3,"CamaroneGreen"],[3,"BlueStone"],[3,"OrientBlue"],[3,"EndeavourBlue"],[3,"ScienceBlue"],[3,"BlueRibbon"],[3,"JapaneseLaurel"],[3,"DeepSeaGreen"],[3,"Teal"],[3,"DeepCerulean"],[3,"LochmaraBlue"],[3,"AzureRadiance"],[3,"LightJapaneseLaurel"],[3,"Jade"],[3,"PersianGreen"],[3,"BondiBlue"],[3,"Cerulean"],[3,"LightAzureRadiance"],[3,"DarkGreen"],[3,"Malachite"],[3,"CaribbeanGreen"],[3,"LightCaribbeanGreen"],[3,"RobinEggBlue"],[3,"Aqua"],[3,"Green"],[3,"DarkSpringGreen"],[3,"SpringGreen"],[3,"LightSpringGreen"],[3,"BrightTurquoise"],[3,"Cyan"],[3,"Rosewood"],[3,"PompadourMagenta"],[3,"PigmentIndigo"],[3,"DarkPurple"],[3,"ElectricIndigo"],[3,"ElectricPurple"],[3,"VerdunGreen"],[3,"ScorpionOlive"],[3,"Lilac"],[3,"ScampiIndigo"],[3,"Indigo"],[3,"DarkCornflowerBlue"],[3,"DarkLimeade"],[3,"GladeGreen"],[3,"JuniperGreen"],[3,"HippieBlue"],[3,"HavelockBlue"],[3,"CornflowerBlue"],[3,"Limeade"],[3,"FernGreen"],[3,"SilverTree"],[3,"Tradewind"],[3,"ShakespeareBlue"],[3,"DarkMalibuBlue"],[3,"DarkBrightGreen"],[3,"DarkPastelGreen"],[3,"PastelGreen"],[3,"DownyTeal"],[3,"Viking"],[3,"MalibuBlue"],[3,"BrightGreen"],[3,"DarkScreaminGreen"],[3,"ScreaminGreen"],[3,"DarkAquamarine"],[3,"Aquamarine"],[3,"LightAquamarine"],[3,"Maroon"],[3,"DarkFreshEggplant"],[3,"LightFreshEggplant"],[3,"Purple"],[3,"ElectricViolet"],[3,"LightElectricViolet"],[3,"Brown"],[3,"CopperRose"],[3,"StrikemasterPurple"],[3,"DelugePurple"],[3,"DarkMediumPurple"],[3,"DarkHeliotropePurple"],[3,"Olive"],[3,"ClayCreekOlive"],[3,"DarkGray"],[3,"WildBlueYonder"],[3,"ChetwodeBlue"],[3,"SlateBlue"],[3,"LightLimeade"],[3,"ChelseaCucumber"],[3,"BayLeaf"],[3,"GulfStream"],[3,"PoloBlue"],[3,"LightMalibuBlue"],[3,"Pistachio"],[3,"LightPastelGreen"],[3,"DarkFeijoaGreen"],[3,"VistaBlue"],[3,"Bermuda"],[3,"DarkAnakiwaBlue"],[3,"ChartreuseGreen"],[3,"LightScreaminGreen"],[3,"DarkMintGreen"],[3,"MintGreen"],[3,"LighterAquamarine"],[3,"AnakiwaBlue"],[3,"BrightRed"],[3,"DarkFlirt"],[3,"Flirt"],[3,"LightFlirt"],[3,"DarkViolet"],[3,"BrightElectricViolet"],[3,"RoseofSharonOrange"],[3,"MatrixPink"],[3,"TapestryPink"],[3,"FuchsiaPink"],[3,"MediumPurple"],[3,"Heliotrope"],[3,"PirateGold"],[3,"MuesliOrange"],[3,"PharlapPink"],[3,"Bouquet"],[3,"Lavender"],[3,"LightHeliotrope"],[3,"BuddhaGold"],[3,"OliveGreen"],[3,"HillaryOlive"],[3,"SilverChalice"],[3,"WistfulLilac"],[3,"MelroseLilac"],[3,"RioGrandeGreen"],[3,"ConiferGreen"],[3,"Feijoa"],[3,"PixieGreen"],[3,"JungleMist"],[3,"LightAnakiwaBlue"],[3,"Lime"],[3,"GreenYellow"],[3,"LightMintGreen"],[3,"Celadon"],[3,"AeroBlue"],[3,"FrenchPassLightBlue"],[3,"GuardsmanRed"],[3,"RazzmatazzCerise"],[3,"MediumVioletRed"],[3,"HollywoodCerise"],[3,"DarkPurplePizzazz"],[3,"BrighterElectricViolet"],[3,"TennOrange"],[3,"RomanOrange"],[3,"CranberryPink"],[3,"HopbushPink"],[3,"Orchid"],[3,"LighterHeliotrope"],[3,"MangoTango"],[3,"Copperfield"],[3,"SeaPink"],[3,"CanCanPink"],[3,"LightOrchid"],[3,"BrightHeliotrope"],[3,"DarkCorn"],[3,"DarkTachaOrange"],[3,"TanBeige"],[3,"ClamShell"],[3,"ThistlePink"],[3,"Mauve"],[3,"Corn"],[3,"TachaOrange"],[3,"DecoOrange"],[3,"PaleGoldenrod"],[3,"AltoBeige"],[3,"FogPink"],[3,"ChartreuseYellow"],[3,"Canary"],[3,"Honeysuckle"],[3,"ReefPaleYellow"],[3,"SnowyMint"],[3,"OysterBay"],[3,"Red"],[3,"DarkRose"],[3,"Rose"],[3,"LightHollywoodCerise"],[3,"PurplePizzazz"],[3,"Fuchsia"],[3,"BlazeOrange"],[3,"BittersweetOrange"],[3,"WildWatermelon"],[3,"DarkHotPink"],[3,"HotPink"],[3,"PinkFlamingo"],[3,"FlushOrange"],[3,"Salmon"],[3,"VividTangerine"],[3,"PinkSalmon"],[3,"DarkLavenderRose"],[3,"BlushPink"],[3,"YellowSea"],[3,"TexasRose"],[3,"Tacao"],[3,"Sundown"],[3,"CottonCandy"],[3,"LavenderRose"],[3,"Gold"],[3,"Dandelion"],[3,"GrandisCaramel"],[3,"Caramel"],[3,"CosmosSalmon"],[3,"PinkLace"],[3,"Yellow"],[3,"LaserLemon"],[3,"DollyYellow"],[3,"PortafinoYellow"],[3,"Cumulus"],[3,"White"],[3,"DarkCodGray"],[3,"CodGray"],[3,"LightCodGray"],[3,"DarkMineShaft"],[3,"MineShaft"],[3,"LightMineShaft"],[3,"DarkTundora"],[3,"Tundora"],[3,"ScorpionGray"],[3,"DarkDoveGray"],[3,"DoveGray"],[3,"Boulder"],[3,"Gray"],[3,"LightGray"],[3,"DustyGray"],[3,"NobelGray"],[3,"DarkSilverChalice"],[3,"LightSilverChalice"],[3,"DarkSilver"],[3,"Silver"],[3,"DarkAlto"],[3,"Alto"],[3,"Mercury"],[3,"GalleryGray"],[3,"Black"],[3,"Red"],[3,"Green"],[3,"Yellow"],[3,"Blue"],[3,"Magenta"],[3,"Cyan"],[3,"White"],[3,"BrightBlack"],[3,"BrightRed"],[3,"BrightGreen"],[3,"BrightYellow"],[3,"BrightBlue"],[3,"BrightMagenta"],[3,"BrightCyan"],[3,"BrightWhite"],[3,"FgColorDisplay"],[3,"BgColorDisplay"],[3,"FgDynColorDisplay"],[3,"BgDynColorDisplay"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":[3,3,5,6,6,6,5,6,6,6,3,4,13,13,13,13,3,3,3,5,6,3,6,6,5,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Condvar","WaitTimeoutResult","const_fair_mutex","FairMutex","FairMutexGuard","MappedFairMutexGuard","const_mutex","MappedMutexGuard","Mutex","MutexGuard","Once","OnceState","New","Poisoned","InProgress","Done","RawFairMutex","RawMutex","RawRwLock","const_reentrant_mutex","MappedReentrantMutexGuard","RawThreadId","ReentrantMutex","ReentrantMutexGuard","const_rwlock","MappedRwLockReadGuard","MappedRwLockWriteGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","default","default","eq","ne","eq","fmt","fmt","fmt","fmt","lock","try_lock","unlock","is_locked","lock","try_lock","unlock","is_locked","unlock_fair","bump","unlock_fair","bump","try_lock_until","try_lock_for","try_lock_until","try_lock_for","nonzero_thread_id","lock_exclusive","try_lock_exclusive","unlock_exclusive","lock_shared","try_lock_shared","unlock_shared","is_locked","unlock_shared_fair","unlock_exclusive_fair","bump_shared","bump_exclusive","downgrade","try_lock_shared_for","try_lock_shared_until","try_lock_exclusive_for","try_lock_exclusive_until","lock_shared_recursive","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","lock_upgradable","try_lock_upgradable","unlock_upgradable","upgrade","try_upgrade","unlock_upgradable_fair","bump_upgradable","downgrade_upgradable","downgrade_to_upgradable","try_lock_upgradable_until","try_lock_upgradable_for","try_upgrade_until","try_upgrade_for","timed_out","new","notify_one","notify_all","wait","wait_until","wait_for","poisoned","done","new","state","call_once","call_once_force"],"q":["parking_lot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Condition Variable","A type indicating whether a timed wait on a condition …","Creates a new fair mutex in an unlocked state ready for …","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, …","Creates a new mutex in an unlocked state ready for use.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which …","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure has not been executed yet","A closure was executed but panicked.","A thread is currently executing a closure.","A closure has completed successfully.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Creates a new reentrant mutex in an unlocked state ready …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single …","An RAII implementation of a “scoped lock” of a …","Creates a new instance of an <code>RwLock<T></code> which is unlocked.","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A reader-writer lock","RAII structure used to release the shared read access of …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the wait was known to have timed out.","Creates a new condition variable which is ready to be …","Wakes up one blocked thread on this condvar.","Wakes up all blocked threads on this condvar.","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Returns whether the associated <code>Once</code> has been poisoned.","Returns whether the associated <code>Once</code> has successfully …","Creates a new <code>Once</code> value.","Returns the current state of this <code>Once</code>.","Performs an initialization routine once and only once. …","Performs the same function as <code>call_once</code> except ignores …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,2,1,3,4,2,2,1,2,3,1,4,5,5,5,5,6,6,6,6,5,5,6,6,5,5,6,6,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,3,3,3,3,3,3,1,1,4,4,4,4],"f":[null,null,[[],["fairmutex",6]],null,null,null,[[],["mutex",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["reentrantmutex",6]],null,null,null,null,[[],["rwlock",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["waittimeoutresult",3]],[[],["oncestate",4]],[[],["condvar",3]],[[],["once",3]],[[["waittimeoutresult",3]],["bool",15]],[[["waittimeoutresult",3]],["bool",15]],[[["oncestate",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["instant",6]],["bool",15]],[[["duration",3]],["bool",15]],[[],["nonzerousize",3]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["duration",3]],["bool",15]],[[["instant",6]],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["instant",6]],["bool",15]],[[["duration",3]],["bool",15]],[[["instant",6]],["bool",15]],[[["duration",3]],["bool",15]],[[],["bool",15]],[[],["condvar",3]],[[],["bool",15]],[[],["usize",15]],[[["mutexguard",6]]],[[["mutexguard",6],["instant",6]],["waittimeoutresult",3]],[[["mutexguard",6],["duration",3]],["waittimeoutresult",3]],[[],["bool",15]],[[],["bool",15]],[[],["once",3]],[[],["oncestate",4]],[[]],[[]]],"p":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your …","t":[0,5,5,5,5,5,5,5,4,13,13,13,4,13,13,13,3,12,4,13,13,13,13,13,3,12,12,12,12,3,12,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["deadlock","acquire_resource","release_resource","park","unpark_all","unpark_filter","unpark_one","unpark_requeue","FilterOp","Unpark","Skip","Stop","ParkResult","Unparked","Invalid","TimedOut","ParkToken","0","RequeueOp","Abort","UnparkOneRequeueRest","RequeueAll","UnparkOne","RequeueOne","UnparkResult","unparked_threads","requeued_threads","have_more_threads","be_fair","UnparkToken","0","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","SpinWait","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","clone","clone","default","default","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","is_unparked","new","reset","spin","spin_no_yield"],"q":["parking_lot_core","parking_lot_core::deadlock","","parking_lot_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["[Experimental] Deadlock detection","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …","Parks the current thread in the queue associated with the …","Unparks all threads in the queue associated with the …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with …","Operation that <code>unpark_filter</code> should perform for each …","Unpark the thread and continue scanning the list of …","Don’t unpark the thread and continue scanning the list …","Don’t unpark the thread and stop scanning the list of …","Result of a park operation.","We were unparked by another thread with the given token.","The validation callback returned false.","The timeout expired.","A value associated with a parked thread which can be used …","","Operation that <code>unpark_requeue</code> should perform.","Abort the operation without doing anything.","Unpark one thread and requeue the rest onto the target …","Requeue all threads onto the target queue.","Unpark one thread and leave the rest parked. No requeuing …","Requeue one thread and leave the rest parked on the …","Result of an unpark operation.","The number of threads that were unparked.","The number of threads that were requeued.","Whether there are any threads remaining in the queue. …","This is set to true on average once every 0.5ms for any …","A value which is passed from an unparker to a parked …","","A default park token to use.","A default unpark token to use.","A counter used to perform exponential backoff in spin …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if we were unparked by another thread.","Creates a new <code>SpinWait</code>.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS."],"i":[0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,2,0,3,0,4,4,4,4,4,0,5,5,5,5,0,6,0,0,0,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,7,2,5,4,1,6,3,5,7,2,2,5,5,4,1,6,6,3,3,2,5,4,1,6,3,2,7,7,7,7],"f":[null,[[["usize",15]]],[[["usize",15]]],[[["usize",15],["parktoken",3],["option",4],["instant",6]],["parkresult",4]],[[["usize",15],["unparktoken",3]],["usize",15]],[[["usize",15]],["unparkresult",3]],[[["usize",15]],["unparkresult",3]],[[["usize",15]],["unparkresult",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["parkresult",4]],[[],["unparkresult",3]],[[],["requeueop",4]],[[],["filterop",4]],[[],["unparktoken",3]],[[],["parktoken",3]],[[],["unparkresult",3]],[[],["spinwait",3]],[[["parkresult",4]],["bool",15]],[[["parkresult",4]],["bool",15]],[[["unparkresult",3]],["bool",15]],[[["unparkresult",3]],["bool",15]],[[["requeueop",4]],["bool",15]],[[["filterop",4]],["bool",15]],[[["unparktoken",3]],["bool",15]],[[["unparktoken",3]],["bool",15]],[[["parktoken",3]],["bool",15]],[[["parktoken",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]]],"p":[[4,"FilterOp"],[4,"ParkResult"],[3,"ParkToken"],[4,"RequeueOp"],[3,"UnparkResult"],[3,"UnparkToken"],[3,"SpinWait"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":[14],"n":["pin_project"],"q":["pin_project_lite"],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[null],"p":[]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the compiler…","t":[0,3,3,3,11,11,11,3,12,12,3,11,11,11,11,11,11,11,11,4,13,13,13,13,11,11,3,4,13,13,13,13,11,11,11,11,11,11,11,3,4,13,13,11,11,11,11,11,3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["token_stream","IntoIter","TokenStream","LexError","new","is_empty","span","LineColumn","line","column","Span","call_site","mixed_site","resolved_at","located_at","unwrap","start","end","join","TokenTree","Group","Ident","Punct","Literal","span","set_span","Group","Delimiter","Parenthesis","Brace","Bracket","None","new","delimiter","stream","span","span_open","span_close","set_span","Punct","Spacing","Alone","Joint","new","as_char","spacing","span","set_span","Ident","new","span","set_span","Literal","u8_suffixed","u16_suffixed","u32_suffixed","u64_suffixed","u128_suffixed","usize_suffixed","i8_suffixed","i16_suffixed","i32_suffixed","i64_suffixed","i128_suffixed","isize_suffixed","u8_unsuffixed","u16_unsuffixed","u32_unsuffixed","u64_unsuffixed","u128_unsuffixed","usize_unsuffixed","i8_unsuffixed","i16_unsuffixed","i32_unsuffixed","i64_unsuffixed","i128_unsuffixed","isize_unsuffixed","f64_unsuffixed","f64_suffixed","f32_unsuffixed","f32_suffixed","string","character","byte_string","span","set_span","subspan","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","from","from","from","from","extend","extend","into_iter","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","eq","ne","eq","eq","eq","eq","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","from_str","from_iter","from_iter"],"q":["proc_macro2","proc_macro2::token_stream","proc_macro2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro2::token_stream","","","","","","","","","","proc_macro2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro2::token_stream","proc_macro2","","","","","","","","","","proc_macro2::token_stream","proc_macro2","","","","","","","","","","","","","","","","","","","","","","proc_macro2::token_stream","proc_macro2","","","","","","","","","",""],"d":["Public implementation details for the <code>TokenStream</code> type, …","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","An abstract stream of tokens, or more concretely a …","Error returned from <code>TokenStream::from_str</code>.","Returns an empty <code>TokenStream</code> containing no token trees.","Checks if this <code>TokenStream</code> is empty.","","A line-column pair representing the start or end of a <code>Span</code>…","The 1-indexed line in the source file on which the span …","The 0-indexed column (in UTF-8 characters) in the source …","A region of source code, along with macro expansion …","The span of the invocation of the current procedural …","The span located at the invocation of the procedural …","Creates a new span with the same line/column information …","Creates a new span with the same name resolution behavior …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Get the starting line/column in the source file for this …","Get the ending line/column in the source file for this …","Create a new span encompassing <code>self</code> and <code>other</code>.","A single token or a delimited sequence of token trees …","A token stream surrounded by bracket delimiters.","An identifier.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…","Returns the span of this tree, delegating to the <code>span</code> …","Configures the span for <em>only this token</em>.","A delimited token stream.","Describes how a sequence of token trees is delimited.","<code>( ... )</code>","<code>{ ... }</code>","<code>[ ... ]</code>","<code>Ø ... Ø</code>","Creates a new <code>Group</code> with the given delimiter and token …","Returns the delimiter of this <code>Group</code>","Returns the <code>TokenStream</code> of tokens that are delimited in …","Returns the span for the delimiters of this token stream, …","Returns the span pointing to the opening delimiter of …","Returns the span pointing to the closing delimiter of …","Configures the span for this <code>Group</code>’s delimiters, but …","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.","Creates a new <code>Punct</code> from the given character and spacing.","Returns the value of this punctuation character as <code>char</code>.","Returns the spacing of this punctuation character, …","Returns the span for this punctuation character.","Configure the span for this punctuation character.","A word of Rust code, which may be a keyword or legal …","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Returns the span of this <code>Ident</code>.","Configures the span of this <code>Ident</code>, possibly changing its …","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed integer literal with the …","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","String literal.","Character literal.","Byte string literal.","Returns the span encompassing this literal.","Configures the span associated for this literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …i":[0,0,0,0,1,1,2,0,3,3,0,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,0,0,6,6,6,6,7,7,7,7,7,7,7,0,0,8,8,9,9,9,9,9,0,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,4,1,1,5,5,5,5,1,1,1,12,1,3,4,5,7,6,9,8,10,11,12,1,3,10,3,3,6,8,10,10,3,10,1,2,3,4,5,6,7,8,9,10,11,12,1,2,5,7,9,10,11,10,1,1,1],"f":[null,null,null,null,[[],["tokenstream",3]],[[],["bool",15]],[[],["span",3]],null,null,null,null,[[],["span",3]],[[],["span",3]],[[["span",3]],["span",3]],[[["span",3]],["span",3]],[[],["span",3]],[[],["linecolumn",3]],[[],["linecolumn",3]],[[["span",3]],[["span",3],["option",4]]],null,null,null,null,null,[[],["span",3]],[[["span",3]]],null,null,null,null,null,null,[[["delimiter",4],["tokenstream",3]],["group",3]],[[],["delimiter",4]],[[],["tokenstream",3]],[[],["span",3]],[[],["span",3]],[[],["span",3]],[[["span",3]]],null,null,null,null,[[["char",15],["spacing",4]],["punct",3]],[[],["char",15]],[[],["spacing",4]],[[],["span",3]],[[["span",3]]],null,[[["span",3],["str",15]],["ident",3]],[[],["span",3]],[[["span",3]]],null,[[["u8",15]],["literal",3]],[[["u16",15]],["literal",3]],[[["u32",15]],["literal",3]],[[["u64",15]],["literal",3]],[[["u128",15]],["literal",3]],[[["usize",15]],["literal",3]],[[["i8",15]],["literal",3]],[[["i16",15]],["literal",3]],[[["i32",15]],["literal",3]],[[["i64",15]],["literal",3]],[[["i128",15]],["literal",3]],[[["isize",15]],["literal",3]],[[["u8",15]],["literal",3]],[[["u16",15]],["literal",3]],[[["u32",15]],["literal",3]],[[["u64",15]],["literal",3]],[[["u128",15]],["literal",3]],[[["usize",15]],["literal",3]],[[["i8",15]],["literal",3]],[[["i16",15]],["literal",3]],[[["i32",15]],["literal",3]],[[["i64",15]],["literal",3]],[[["i128",15]],["literal",3]],[[["isize",15]],["literal",3]],[[["f64",15]],["literal",3]],[[["f64",15]],["literal",3]],[[["f32",15]],["literal",3]],[[["f32",15]],["literal",3]],[[["str",15]],["literal",3]],[[["char",15]],["literal",3]],[[],["literal",3]],[[],["span",3]],[[["span",3]]],[[["usize",15],["rangebounds",8]],[["span",3],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["span",3]],["span",3]],[[["tokenstream",3]],["tokenstream",3]],[[["tokentree",4]]],[[["group",3]],["tokentree",4]],[[["ident",3]],["tokentree",4]],[[["punct",3]],["tokentree",4]],[[["literal",3]],["tokentree",4]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["intoiter",3]],[[],[["tokentree",4],["option",4]]],[[],["tokenstream",3]],[[],["linecolumn",3]],[[],["span",3]],[[],["tokentree",4]],[[],["group",3]],[[],["delimiter",4]],[[],["punct",3]],[[],["spacing",4]],[[],["ident",3]],[[],["literal",3]],[[],["intoiter",3]],[[]],[[],["ordering",4]],[[["ident",3]],["ordering",4]],[[["linecolumn",3]],["bool",15]],[[["linecolumn",3]],["bool",15]],[[["delimiter",4]],["bool",15]],[[["spacing",4]],["bool",15]],[[["ident",3]],["bool",15]],[[],["bool",15]],[[],[["option",4],["ordering",4]]],[[["ident",3]],[["option",4],["ordering",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],[["result",4],["tokenstream",3],["lexerror",3]]],[[["intoiterator",8]]],[[["intoiterator",8]]]],"p":[[3,"TokenStream"],[3,"LexError"],[3,"LineColumn"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"proc_macro_error":{"doc":"proc-macro-error","t":[0,5,5,3,8,10,10,10,10,4,13,13,23,3,12,12,11,11,11,11,11,8,16,10,10,8,16,10,5,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["dummy","set_dummy","append_dummy","Diagnostic","DiagnosticExt","spanned_range","span_range_error","span_range_help","span_range_note","Level","Error","Warning","proc_macro_error","SpanRange","first","last","single_span","call_site","from_tokens","join_range","collapse","ResultExt","Ok","unwrap_or_abort","expect_or_abort","OptionExt","Some","expect_or_abort","abort_if_dirty","diagnostic","abort","abort_call_site","emit_error","emit_call_site_error","emit_warning","emit_call_site_warning","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","spanned_range","span_range_error","span_range_help","span_range_note","from","clone","eq","fmt","fmt","fmt","to_tokens","new","spanned","span_error","span_help","help","span_note","note","message","abort","emit"],"q":["proc_macro_error","proc_macro_error::dummy","","proc_macro_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Facility to emit dummy implementations (or whatever) in …","Sets dummy token stream which will be appended to …","Same as [<code>set_dummy</code>] but, instead of resetting, appends …","Represents a single diagnostic message","A collection of methods that do not exist in …","Create a new diagnostic message that points to the …","Add another error message to self such that it will be …","Attach a “help” note to your main message, the note …","Attach a note to your main message, the note will have it…","Represents a diagnostic level","","","","","","","Create a range with the <code>first</code> and <code>last</code> spans being the …","Create a <code>SpanRange</code> resolving at call site.","Construct span range from a <code>TokenStream</code>. This method …","Join two span ranges. The resulting range will start at …","Collapse the range into single span, preserving as much …","This traits expands <code>Result<T, Into<Diagnostic>></code> with some …","","Behaves like <code>Result::unwrap</code>: if self is <code>Ok</code> yield the …","Behaves like <code>Result::expect</code>: if self is <code>Ok</code> yield the …","This traits expands <code>Option</code> with some handy shortcuts.","","Behaves like <code>Option::expect</code>: if self is <code>Some</code> yield the …","Abort macro execution and display all the emitted errors, …","Build <code>Diagnostic</code> instance from provided arguments.","Abort proc-macro execution right now and display the …","Shortcut for <code>abort!(Span::call_site(), msg...)</code>. This macro…","Emit an error while not aborting the proc-macro right …","Shortcut for <code>emit_error!(Span::call_site(), ...)</code>. This …","Emit a warning. Warnings are not errors and compilation …","Shortcut for <code>emit_warning!(Span::call_site(), ...)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new diagnostic message that points to …","Create a new diagnostic message that points to the <code>span</code>","Add another error message to self such that it will be …","Attach a “help” note to your main message, the note …","Attach a “help” note to your main message.","Attach a note to your main message, the note will have it…","Attach a note to your main message","The message of main warning/error (no notes attached)","Abort the proc-macro’s execution and display the …","Display the diagnostic while not aborting macro execution."],"i":[0,0,0,0,0,1,1,1,1,0,2,2,0,0,3,3,3,3,3,3,3,0,4,4,4,0,5,5,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,6,6,6,6,6,6,6,6,3,3,3,3,3,3,3,3,3,6,6,6,6,6,3,2,2,6,3,6,6,6,6,6,6,6,6,6,6,6],"f":[null,[[["tokenstream",3]],[["option",4],["tokenstream",3]]],[[["tokenstream",3]]],null,null,[[["spanrange",3],["string",3],["level",4]]],[[["spanrange",3],["string",3]]],[[["spanrange",3],["string",3]]],[[["spanrange",3],["string",3]]],null,null,null,null,null,null,null,[[["span",3]]],[[]],[[["totokens",8]]],[[["spanrange",3]]],[[],["span",3]],null,null,[[]],[[["str",15]]],null,null,[[["str",15]]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["spanrange",3],["string",3],["level",4]]],[[["spanrange",3],["string",3]]],[[["spanrange",3],["string",3]]],[[["spanrange",3],["string",3]]],[[["error",3]]],[[],["spanrange",3]],[[["level",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["tokenstream",3]]],[[["string",3],["level",4]]],[[["span",3],["string",3],["level",4]]],[[["span",3],["string",3]]],[[["span",3],["string",3]]],[[["string",3]]],[[["span",3],["string",3]]],[[["string",3]]],[[],["str",15]],[[]],[[]]],"p":[[8,"DiagnosticExt"],[4,"Level"],[3,"SpanRange"],[8,"ResultExt"],[8,"OptionExt"],[3,"Diagnostic"]]},\
"proc_macro_error_attr":{"doc":"This is <code>#[proc_macro_error]</code> attribute to be used with …","t":[23],"n":["proc_macro_error"],"q":["proc_macro_error_attr"],"d":[""],"i":[0],"f":[null],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,10,10,10,10,8,10,11,8,10,11,11,14,14,14,11,11,11],"n":["TokenStreamExt","append","append_all","append_separated","append_terminated","IdentFragment","fmt","span","ToTokens","to_tokens","to_token_stream","into_token_stream","format_ident","quote","quote_spanned","span","to_token_stream","into_token_stream"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Specialized formatting trait used by <code>format_ident!</code>.","Format this value as an identifier fragment.","Span associated with this <code>IdentFragment</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","Write <code>self</code> to the given <code>TokenStream</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Formatting macro for constructing <code>Ident</code>s.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object."],"i":[0,1,1,1,1,0,2,2,0,3,3,3,0,0,0,2,3,3],"f":[null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[],[["span",3],["option",4]]],null,[[["tokenstream",3]]],[[],["tokenstream",3]],[[],["tokenstream",3]],null,null,null,[[],[["span",3],["option",4]]],[[],["tokenstream",3]],[[],["tokenstream",3]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rodio":{"doc":"Audio playback library.","t":[0,3,11,0,3,3,11,11,11,11,11,11,4,13,0,5,3,11,3,0,5,3,11,11,11,3,0,3,3,3,3,6,3,3,3,3,5,3,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,8,16,16,16,10,10,10,10,10,11,11,10,10,3,3,4,13,12,6,6,3,8,10,10,10,10,3,3,3,3,4,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["buffer","SamplesBuffer","new","decoder","Decoder","LoopedDecoder","new","new_looped","new_wav","new_flac","new_vorbis","new_mp3","DecoderError","UnrecognizedFormat","dynamic_mixer","mixer","DynamicMixerController","add","DynamicMixer","queue","queue","SourcesQueueInput","append","append_with_signal","set_keep_alive_if_empty","SourcesQueueOutput","source","Amplify","BltFilter","Buffered","ChannelVolume","Crossfade","Delay","Done","Empty","FadeIn","from_factory","FromFactoryIter","from_iter","FromIter","Mix","Pausable","PeriodicAccess","Repeat","SamplesConverter","SineWave","SkipDuration","Spatial","Speed","Stoppable","TakeDuration","UniformSourceIterator","Zero","Source","current_frame_len","channels","sample_rate","total_duration","buffered","mix","repeat_infinite","take_duration","delay","skip_duration","amplify","take_crossfade_with","fade_in","periodic_access","speed","reverb","convert_samples","pausable","stoppable","low_pass","static_buffer","StaticSamplesBuffer","new","DeviceTrait","SupportedInputConfigs","SupportedOutputConfigs","Stream","name","supported_input_configs","supported_output_configs","default_input_config","default_output_config","build_input_stream","build_output_stream","build_input_stream_raw","build_output_stream_raw","Device","Devices","DevicesError","BackendSpecific","err","InputDevices","OutputDevices","SupportedStreamConfig","Sample","lerp","amplify","saturating_add","zero_value","Sink","SpatialSink","OutputStream","OutputStreamHandle","PlayError","DecoderError","NoDevice","StreamError","PlayStreamError","NoDevice","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","fmt","fmt","from","from","from","from","from","from","eq","ne","fmt","next","size_hint","name","supported_input_configs","supported_output_configs","default_input_config","default_output_config","build_input_stream_raw","build_output_stream_raw","source","clone","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","current_frame_len","channels","sample_rate","total_duration","drop","from","from","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","next","size_hint","next","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","source","source","description","try_new","new_idle","append","volume","set_volume","play","pause","is_paused","stop","detach","sleep_until_end","empty","len","try_new","set_emitter_position","set_left_ear_position","set_right_ear_position","append","volume","set_volume","play","pause","is_paused","stop","detach","sleep_until_end","empty","try_from_device","try_default","play_raw","play_once","set_factor","inner","inner_mut","into_inner","to_low_pass","inner","inner_mut","into_inner","new","set_volume","inner","inner_mut","into_inner","inner","inner_mut","into_inner","new","inner","inner_mut","into_inner","new","inner","inner_mut","into_inner","set_paused","inner","inner_mut","into_inner","inner","inner_mut","into_inner","new","inner","inner_mut","into_inner","new","inner","inner_mut","into_inner","new","set_positions","inner","inner_mut","into_inner","stop","inner","inner_mut","into_inner","inner","inner_mut","into_inner","set_filter_fadeout","clear_filter","new","new","channels","sample_rate","buffer_size","sample_format","config"],"q":["rodio","rodio::buffer","","rodio","rodio::decoder","","","","","","","","","","rodio","rodio::dynamic_mixer","","","","rodio","rodio::queue","","","","","","rodio","rodio::source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio","rodio::static_buffer","","rodio","","","","","","","","","","","","","","","","","rodio::DevicesError","rodio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::buffer","","","","","","","","rodio::decoder","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::dynamic_mixer","","","","","","","","","","","","","","","rodio::queue","","","","","","","","","","","","","","","rodio::sourcerodio::static_buffer","","","","","","","","","","rodio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::buffer","","","","rodio::decoder","","","","","","","","rodio::dynamic_mixer","","","","rodio::queue","","","","rodio::source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::static_buffer","","","","rodio","","","rodio::buffer","","rodio::decoder","","","","rodio::dynamic_mixer","","rodio::queue","","rodio::source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::static_buffer","","rodio","rodio::decoder","rodio::source","","","","","","","","","","","","","","","","","","","","","","rodio::static_buffer","rodio::source","rodio","","rodio::decoder","rodio::source","","","","","","","","","","","","","","","","rodio","","rodio::decoder","rodio","","rodio::decoder","rodio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio::source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rodio","","","",""],"d":["A simple source of samples coming from a buffer.","A buffer of samples treated as a source.","Builds a new <code>SamplesBuffer</code>.","Decodes samples from an audio file.","Source of audio samples from decoding a file.","","Builds a new decoder.","","Builds a new decoder from wav data.","Builds a new decoder from flac data.","Builds a new decoder from vorbis data.","Builds a new decoder from mp3 data.","Error that can happen when creating a decoder.","The format of the data has not been recognized.","Mixer that plays multiple sounds at the same time.","Builds a new mixer.","The input of the mixer.","Adds a new source to mix to the existing ones.","The output of the mixer. Implements <code>Source</code>.","Queue that plays sounds one after the other.","Builds a new queue. It consists of an input and an output.","The input of the queue.","Adds a new source to the end of the queue.","Adds a new source to the end of the queue.","Sets whether the queue stays alive if there’s no more …","The output of the queue. Implements <code>Source</code>.","Sources of sound and various filters.","Filter that modifies each sample by a given value.","","Iterator that at the same time extracts data from the …","Combines channels in input into a single mono source, …","","A source that delays the given source by a certain amount.","When the inner source is empty this decrements an …","An empty source.","Filter that modifies raises the volume from silence over …","Builds a source that chains sources built from a factory.","Internal type used by <code>from_factory</code>.","Builds a source that chains sources provided by an …","A source that chains sources provided by an iterator.","Filter that modifies each sample by a given value.","","Calls a function on a source every time a period elapsed.","A source that repeats the given source.","An iterator that reads from a <code>Source</code> and converts the …","An infinite source that produces a sine.","A source that skips specified duration of the given …","Combines channels in input into a single mono source, …","Filter that modifies each sample by a given value.","","A source that truncates the given source to a certain …","An iterator that reads from a <code>Source</code> and converts the …","An infinite source that produces zero.","A source of samples.","Returns the number of samples before the current frame …","Returns the number of channels. Channels are always …","Returns the rate at which the source should be played. In …","Returns the total duration of this source, if known.","Stores the source in a buffer in addition to returning …","Mixes this source with another one.","Repeats this source forever.","Takes a certain duration of this source and then stops.","Delays the sound by a certain duration.","Immediately skips a certain duration of this source.","Amplifies the sound by the given value.","Mixes this sound fading out with another sound fading in …","Fades in the sound.","Calls the <code>access</code> closure on <code>Self</code> the first time the …","Changes the play speed of the sound. Does not adjust the …","Adds a basic reverb effect.","Converts the samples of this source to another type.","Makes the sound pausable.","Makes the sound stoppable.","Applies a low-pass filter to the source. <strong>Warning</strong>: …","A simple source of samples coming from a static buffer.","A buffer of samples treated as a source.","Builds a new <code>StaticSamplesBuffer</code>.","A device that is capable of audio input and/or output.","The iterator type yielding supported input stream formats.","The iterator type yielding supported output stream …","The stream type created by <code>build_input_stream_raw</code> and …","The human-readable name of the device.","An iterator yielding formats that are supported by the …","An iterator yielding output stream formats that are …","The default input stream format for the device.","The default output stream format for the device.","Create an input stream.","Create an output stream.","Create a dynamically typed input stream.","Create a dynamically typed output stream.","The <strong>Device</strong> implementation associated with the platform’…","The <strong>Devices</strong> iterator associated with the platform’s …","An error that might occur while attempting to enumerate …","See the <code>BackendSpecificError</code> docs for more information …","","A host’s device iterator yielding only <em>input</em> devices.","A host’s device iterator yielding only <em>output</em> devices.","Describes a single supported stream configuration, …","Represents a value of a single sample.","Linear interpolation between two samples.","Multiplies the value of this sample by the given amount.","Calls <code>saturating_add</code> on the sample.","Returns the value corresponding to the absence of sound.","Handle to an device that outputs sounds.","","<code>cpal::Stream</code> container. Also see the more useful …","More flexible handle to a <code>OutputStream</code> that provides …","An error occurred while attemping to play a sound.","Attempting to decode the audio failed.","The output device was lostuilds a new <code>Sink</code>, beginning playback on a stream.","Builds a new <code>Sink</code>.","Appends a sound to the queue of sounds to play.","Gets the volume of the sound.","Changes the volume of the sound.","Resumes playback of a paused sink.","Pauses playback of this sink.","Gets if a sink is paused","Stops the sink by emptying the queue.","Destroys the sink without stopping the sounds that are …","Sleeps the current thread until the sound ends.","Returns true if this sink has no more sounds to play.","Returns the number of sounds currently in the queue.","Builds a new <code>SpatialSink</code>.","Sets the position of the sound emitter in 3 dimensional …","Sets the position of the left ear in 3 dimensional space.","Sets the position of the right ear in 3 dimensional space.","Appends a sound to the queue of sounds to play.","The value <code>1.0</code> is the “normal” volume (unfiltered …","Changes the volume of the sound.","Resumes playback of a paused sound.","Pauses playback of this sink.","Gets if a sound is paused","Stops the sink by emptying the queue.","Destroys the sink without stopping the sounds that are …","Sleeps the current thread until the sound ends.","Returns true if this sink has no more sounds to play.","Returns a new stream & handle using the given output …","Return a new stream & handle using the default output …","Plays a source with a device until it ends.","Plays a sound once. Returns a <code>Sink</code> that can be used to …","Modifies the amplification factor.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Modifies this filter so that it becomes a low-pass filter.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","Sets the volume for a given channel number.  Will panic …","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Sets whether the filter applies.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","The frequency of the sine.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","Sets the position of the emitter and ears in the 3D world.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Stops the sound.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","Returns a reference to the inner source.","Returns a mutable reference to the inner source.","Returns the inner source.","","","","","","","","",""],"i":[0,0,1,0,0,0,2,2,2,2,2,2,0,3,0,0,0,4,0,0,0,0,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,9,10,0,0,0,0,11,11,11,11,0,0,0,0,0,12,12,0,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,18,18,18,18,18,18,18,18,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,19,19,19,19,19,19,19,19,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,7,7,7,7,7,7,7,7,7,7,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,9,9,9,9,9,9,9,9,46,46,46,46,46,46,46,46,46,46,9,9,45,44,45,9,44,46,46,9,45,45,44,44,44,44,44,44,44,9,46,1,1,1,1,2,2,2,2,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,7,7,7,7,14,12,13,1,1,2,2,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,40,41,42,42,43,7,7,17,3,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,7,27,12,13,3,21,22,24,25,26,27,28,32,33,36,37,38,39,40,41,43,12,13,3,12,13,3,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,17,17,21,21,21,21,22,22,22,22,24,24,24,24,24,25,25,25,26,26,26,26,27,28,28,28,32,32,32,32,33,33,33,35,35,35,35,36,37,37,37,38,38,39,39,39,40,40,40,40,41,41,41,41,41,42,43,46,46,46,46,46],"f":[null,null,[[["u32",15],["u16",15]],["samplesbuffer",3]],null,null,null,[[],[["result",4],["decoder",3],["decodererror",4]]],[[],[["loopeddecoder",3],["decodererror",4],["result",4]]],[[],[["result",4],["decoder",3],["decodererror",4]]],[[],[["result",4],["decoder",3],["decodererror",4]]],[[],[["result",4],["decoder",3],["decodererror",4]]],[[],[["result",4],["decoder",3],["decodererror",4]]],null,null,null,[[["u32",15],["u16",15]]],null,[[]],null,null,[[["bool",15]]],null,[[]],[[],["receiver",3]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,[[],[["fromfactoryiter",3],["fromiter",3]]],null,[[],["fromiter",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],["buffered",3]],[[],["mix",3]],[[],["repeat",3]],[[["duration",3]],["takeduration",3]],[[["duration",3]],["delay",3]],[[["duration",3]],["skipduration",3]],[[["f32",15]],["amplify",3]],[[["source",8],["duration",3]],[["crossfade",6],["source",8]]],[[["duration",3]],["fadein",3]],[[["duration",3]],["periodicaccess",3]],[[["f32",15]],["speed",3]],[[["f32",15],["duration",3]],[["delay",3],["mix",3]]],[[],["samplesconverter",3]],[[["bool",15]],["pausable",3]],[[],["stoppable",3]],[[["u32",15]],["bltfilter",3]],null,null,[[["u32",15],["u16",15]],["staticsamplesbuffer",3]],null,null,null,null,[[],[["result",4],["string",3],["devicenameerror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[["streamconfig",3]],[["buildstreamerror",4],["result",4]]],[[["streamconfig",3]],[["buildstreamerror",4],["result",4]]],[[["sampleformat",4],["streamconfig",3]],[["buildstreamerror",4],["result",4]]],[[["sampleformat",4],["streamconfig",3]],[["buildstreamerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,[[["u32",15]]],[[["f32",15]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["error",3]],["deviceserror",4]],[[["devicesinner",4]],["devices",3]],[[["deviceinner",4]],["device",3]],[[["devices",3]],["devices",3]],[[["backendspecificerror",3]],["deviceserror",4]],[[["device",3]],["device",3]],[[["supportedstreamconfig",3]],["bool",15]],[[["supportedstreamconfig",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],["option",4]],[[]],[[],[["result",4],["string",3],["devicenameerror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfigserror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[],[["result",4],["supportedstreamconfig",3],["defaultstreamconfigerror",4]]],[[["sampleformat",4],["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[["sampleformat",4],["streamconfig",3]],[["result",4],["buildstreamerror",4]]],[[],[["error",8],["option",4]]],[[],["supportedstreamconfig",3]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[],[["usize",15],["option",4]]],[[],["u16",15]],[[],["u32",15]],[[],[["option",4],["duration",3]]],[[]],[[["decodererror",4]]],[[["playstreamerror",4]]],[[],["option",4]],[[]],[[],[["option",4],["i16",15]]],[[]],[[],[["option",4],["i16",15]]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],[["option",4],["f32",15]]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],[["option",4],["f32",15]]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[],["outputstreamhandle",3]],[[],["decodererror",4]],[[],["amplify",3]],[[],["bltfilter",3]],[[],["buffered",3]],[[],["channelvolume",3]],[[],["delay",3]],[[],["done",3]],[[],["empty",3]],[[],["fadein",3]],[[],["fromiter",3]],[[],["mix",3]],[[],["pausable",3]],[[],["periodicaccess",3]],[[],["repeat",3]],[[],["samplesconverter",3]],[[],["sinewave",3]],[[],["skipduration",3]],[[],["spatial",3]],[[],["speed",3]],[[],["stoppable",3]],[[],["takeduration",3]],[[],["uniformsourceiterator",3]],[[],["zero",3]],[[],["staticsamplesbuffer",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],["str",15]],[[["outputstreamhandle",3]],[["playerror",4],["result",4],["sink",3]]],[[]],[[]],[[],["f32",15]],[[["f32",15]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[["outputstreamhandle",3]],[["playerror",4],["result",4],["spatialsink",3]]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[["f32",15]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[["device",3]],[["streamerror",4],["result",4]]],[[],[["streamerror",4],["result",4]]],[[],[["playerror",4],["result",4]]],[[],[["playerror",4],["result",4],["sink",3]]],[[["f32",15]]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[["vec",3],["f32",15]],["channelvolume",3]],[[["usize",15],["f32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["arc",3],["atomicusize",3]],["done",3]],[[]],[[]],[[]],[[],["empty",3]],[[]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["samplesconverter",3]],[[]],[[]],[[]],[[["u32",15]],["sinewave",3]],[[]],[[]],[[]],[[],["spatial",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["u16",15]],["uniformsourceiterator",3]],[[["u32",15],["u16",15]],["zero",3]],[[],["u16",15]],[[],["samplerate",3]],[[],["supportedbuffersize",4]],[[],["sampleformat",4]],[[],["streamconfig",3]]],"p":[[3,"SamplesBuffer"],[3,"Decoder"],[4,"DecoderError"],[3,"DynamicMixerController"],[3,"SourcesQueueInput"],[8,"Source"],[3,"StaticSamplesBuffer"],[8,"DeviceTrait"],[4,"DevicesError"],[13,"BackendSpecific"],[8,"Sample"],[4,"PlayError"],[4,"StreamError"],[3,"Sink"],[3,"SpatialSink"],[3,"OutputStream"],[3,"OutputStreamHandle"],[3,"LoopedDecoder"],[3,"DynamicMixer"],[3,"SourcesQueueOutput"],[3,"Amplify"],[3,"BltFilter"],[3,"Buffered"],[3,"ChannelVolume"],[3,"Delay"],[3,"Done"],[3,"Empty"],[3,"FadeIn"],[3,"FromFactoryIter"],[3,"FromIter"],[3,"Mix"],[3,"Pausable"],[3,"PeriodicAccess"],[3,"Repeat"],[3,"SamplesConverter"],[3,"SineWave"],[3,"SkipDuration"],[3,"Spatial"],[3,"Speed"],[3,"Stoppable"],[3,"TakeDuration"],[3,"UniformSourceIterator"],[3,"Zero"],[3,"Device"],[3,"Devices"],[3,"SupportedStreamConfig"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","t":[3,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Demangle","demangle","TryDemangleError","try_demangle","as_str","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","fmt","clone"],"q":["rustc_demangle","","","","","","","","","","","","","","","","","","","","","",""],"d":["Representation of a demangled symbol name.","De-mangles a Rust symbol into a more readable version","Error returned from the <code>try_demangle</code> function below when …","The same as <code>demangle</code>, except return an <code>Err</code> if the string …","Returns the underlying string that’s being demangled.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,2],"f":[null,[[["str",15]],["demangle",3]],null,[[["str",15]],[["result",4],["trydemangleerror",3],["demangle",3]]],[[],["str",15]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["trydemangleerror",3]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"sampitor":{"doc":"","t":[0,3,11,11,11,11,11,11,0,0,3,12,12,12,11,0,0,5,0,5,5,5,5,0,6,5,5,0,0,3,11,11,11,0,5,0,0,3,11,0,3,11,0,3,11,0,3,11,11,11,8,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["app","App","try_new","key_event","play","render","process","run","dsp","buffer","Samples","data","channels","sample_rate","new","io","event","handler","path","name","read_samples","sorted_names","write_samples","terminal","CrossTerm","leave","take","ui","axes","Axes","new","axes","key_event","util","centered_rectangle","view","chart","Signal","new","file","File","try_new","filters","Filters","new","menu","Menu","new","get_state","next","View","key_event","process","render","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","key_event","process","render","key_event","process","render","key_event","process","render","key_event","process","render","eq","ne","fmt"],"q":["sampitor","sampitor::app","","","","","","","sampitor","sampitor::dsp","sampitor::dsp::buffer","","","","","sampitor","sampitor::io","sampitor::io::event","sampitor::io","sampitor::io::path","","","","sampitor::io","sampitor::io::terminal","","","sampitor","sampitor::ui","sampitor::ui::axes","","","","sampitor::ui","sampitor::ui::util","sampitor","sampitor::view","sampitor::view::chart","","sampitor::view","sampitor::view::file","","sampitor::view","sampitor::view::filters","","sampitor::view","sampitor::view::menu","","","","sampitor::view","","","","sampitor::app","","","","","","","sampitor::dsp::buffer","","","","","","","sampitor::ui::axes","","","","","","","sampitor::view::chart","","","","","","","sampitor::view::file","","","","","","","sampitor::view::filters","","","","","","","sampitor::view::menu","","","","","","","sampitor::view::chart","","","sampitor::view::file","","","sampitor::view::filters","","","sampitor::view::menu","","","sampitor::dsp::buffer","",""],"d":["","Main runner for Sampitor application.","Attempt to generate a new App.","Pass keyboard input to current view.","Play currently loaded signal.","Render all UI views in terminal screen.","Update internal signal state.","Loop and wait for user keyboard input.","","","A wrapper around Rodio’s Samples to allow for repeated …","","","","Create a new Samples from a signal an audio metadata.","","","Spawn a thread to offload polling for keyboard events.","","Get path file name or descriptive error.","Read audio metdata and samples from a file.","Read inodes from a directory and sort them with …","Write audio metdata and samples to a file.","","","Return control of current terminal window from alternate …","Take control of current terminal window as an alternate …","","","Chart axes with shift and zoom features..","Create an Axes from viewport dimensions.","Generate a TUI Axis pair.","Update axes state based on keyboard input.","","Create a centered interior rectangle to a given rectangle.","","","UI view for plotting audio signal with shift and zoom …","Create a new Signal from a title and audio metadata.","","A UI view for navigating the file system, reading audio …","Attempt to create a File view.","","A UI view for navigating the file system, reading audio …","Attempt to crate a File view","","UI view bar for selecting other UI views.","Create a new Menu from a title and options.","Get the interior menu state for rendering.","Modular move menu state to next option.","Base requirements for a UI view.","Update view state based on keyboard input.","Get or set the current signal state.","Draw UI view in area of given frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,0,4,0,0,5,0,0,6,0,0,7,7,7,0,8,8,8,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,4,4,4,5,5,5,6,6,6,7,7,7,2,2,2],"f":[null,null,[[["path",3]],["result",6]],[[["sink",3],["keyevent",3]]],[[["sink",3]]],[[["terminal",3]],["result",6]],[[]],[[["sink",3],["terminal",3]],["result",6]],null,null,null,null,null,null,[[["u32",15],["u16",15],["vec",3],["f32",15]]],null,null,[[["sender",3],["option",4]],["joinhandle",3]],null,[[["path",3]],[["result",6],["str",15]]],[[["path",3]],[["result",6],["samples",3]]],[[["path",3]],[["result",6],["vec",3]]],[[["path",3],["samples",3]],["result",6]],null,null,[[["crossterm",6]],["result",6]],[[],[["crossterm",6],["result",6]]],null,null,null,[[["f64",15]]],[[]],[[["keyevent",3]]],null,[[["u16",15],["rect",3]],["rect",3]],null,null,null,[[["string",3],["usize",15]]],null,null,[[["pathbuf",3]],["result",6]],null,null,[[["string",3],["vec",3]]],null,null,[[["string",3],["vec",3]]],[[],["usize",15]],[[]],null,[[["keyevent",3]]],[[["samples",3]]],[[["frame",3],["rect",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["keyevent",3]]],[[["samples",3]]],[[["frame",3],["rect",3]]],[[["keyevent",3]]],[[["samples",3]]],[[["frame",3],["rect",3]]],[[["keyevent",3]]],[[["samples",3]]],[[["frame",3],["rect",3]]],[[["keyevent",3]]],[[["samples",3]]],[[["frame",3],["rect",3]]],[[["samples",3]],["bool",15]],[[["samples",3]],["bool",15]],[[["formatter",3]],["result",6]]],"p":[[3,"App"],[3,"Samples"],[3,"Axes"],[3,"Signal"],[3,"File"],[3,"Filters"],[3,"Menu"],[8,"View"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","t":[8,10,4,3,11,11,5,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Strategy","should_run","Always","ScopeGuard","with_strategy","into_inner","guard","defer","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","should_run","deref","deref_mut","fmt","fmt","drop"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Controls in which cases the associated code should be run","Return <code>true</code> if the guard’s associated code should run …","Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected …","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …","“Defuse” the guard and extract the value without …","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,2,2,0,0,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,2,2,3,2,2],"f":[null,[[],["bool",15]],null,null,[[],["scopeguard",3]],[[]],[[],[["always",4],["scopeguard",3]]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"serde":{"doc":"Serde","tn":["de","value","Error","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","BorrowedStrDeserializer","new","StringDeserializer","CowStrDeserializer","BytesDeserializer","new","BorrowedBytesDeserializer","new","SeqDeserializer","new","end","SeqAccessDeserializer","new","MapDeserializer","new","end","MapAccessDeserializer","new","IgnoredAny","Error","custom","invalid_type","invalid_value","invalid_length","unknown_variant","unknown_field","missing_field","duplicate_field","Unexpected","Bool","Unsigned","Signed","Float","Char","Str","Bytes","Unit","Option","NewtypeStruct","Seq","Map","Enum","UnitVariant","NewtypeVariant","TupleVariant","StructVariant","Other","Expected","fmt","Deserialize","deserialize","DeserializeOwned","DeserializeSeed","Value","deserialize","Deserializer","Error","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","is_human_readable","Visitor","Value","expecting","visit_bool","visit_i8","visit_i16","visit_i32","visit_i64","visit_i128","visit_u8","visit_u16","visit_u32","visit_u64","visit_u128","visit_f32","visit_f64","visit_char","visit_str","visit_borrowed_str","visit_string","visit_bytes","visit_borrowed_bytes","visit_byte_buf","visit_none","visit_some","visit_unit","visit_newtype_struct","visit_seq","visit_map","visit_enum","SeqAccess","Error","next_element_seed","next_element","size_hint","MapAccess","Error","next_key_seed","next_value_seed","next_entry_seed","next_key","next_value","next_entry","size_hint","EnumAccess","Error","Variant","variant_seed","variant","VariantAccess","Error","unit_variant","newtype_variant_seed","newtype_variant","tuple_variant","struct_variant","IntoDeserializer","Deserializer","into_deserializer","ser","Impossible","Error","custom","Serialize","serialize","Serializer","Ok","Error","SerializeSeq","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","SerializeMap","SerializeStruct","SerializeStructVariant","serialize_bool","serialize_i8","serialize_i16","serialize_i32","serialize_i64","serialize_i128","serialize_u8","serialize_u16","serialize_u32","serialize_u64","serialize_u128","serialize_f32","serialize_f64","serialize_char","serialize_str","serialize_bytes","serialize_none","serialize_some","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_newtype_struct","serialize_newtype_variant","serialize_seq","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_map","serialize_struct","serialize_struct_variant","collect_seq","collect_map","collect_str","is_human_readable","SerializeSeq","Ok","Error","serialize_element","end","SerializeTuple","Ok","Error","serialize_element","end","SerializeTupleStruct","Ok","Error","serialize_field","end","SerializeTupleVariant","Ok","Error","serialize_field","end","SerializeMap","Ok","Error","serialize_key","serialize_value","serialize_entry","end","SerializeStruct","Ok","Error","serialize_field","skip_field","end","SerializeStructVariant","Ok","Error","serialize_field","skip_field","end","Deserialize","deserialize","Deserializer","Error","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","is_human_readable","Serialize","serialize","Serializer","Ok","Error","SerializeSeq","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","SerializeMap","SerializeStruct","SerializeStructVariant","serialize_bool","serialize_i8","serialize_i16","serialize_i32","serialize_i64","serialize_i128","serialize_u8","serialize_u16","serialize_u32","serialize_u64","serialize_u128","serialize_f32","serialize_f64","serialize_char","serialize_str","serialize_bytes","serialize_none","serialize_some","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_newtype_struct","serialize_newtype_variant","serialize_seq","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_map","serialize_struct","serialize_struct_variant","collect_seq","collect_map","collect_str","is_human_readable","forward_to_deserialize_any","serde_if_integer128","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","fmt","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","deserialize","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_option","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_seq","deserialize_tuple","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_enum","deserialize_identifier","deserialize_ignored_any","deserialize_any","deserialize_enum","deserialize_bool","deserialize_i8","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i128","deserialize_u8","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u128","deserialize_f32","deserialize_f64","deserialize_char","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","deserialize_unit","deserialize_unit_struct","deserialize_newtype_struct","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","deserialize_map","deserialize_struct","deserialize_identifier","deserialize_ignored_any","expecting","visit_bool","visit_i64","visit_i128","visit_u64","visit_u128","visit_f64","visit_str","visit_none","visit_some","visit_newtype_struct","visit_unit","visit_seq","visit_map","visit_bytes","visit_enum","next_element_seed","size_hint","next_element_seed","size_hint","next_key_seed","next_value_seed","next_entry_seed","size_hint","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","serialize_element","end","serialize_element","end","serialize_field","end","serialize_field","end","serialize_key","serialize_value","end","serialize_field","end","serialize_field","end","custom","custom","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","description"],"q":["serde","serde::de","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde","serde::ser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de::valueserde::de","","","","","","","","","","","","","","","","","","","","serde::ser","","","","","","","serde::de","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","","","","","","","","","","","","","","","serde::de::value","","","","","","","","","","","","","","serde::ser","","","","","","","","","","","","","","","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","","serde::de::value","","serde::de","","serde::de::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","serde::de","","serde::de::value","serde::de","","serde::de::value"],"d":["Generic data structure deserialization framework.","Building blocks for deserializing basic values using the …","A minimal representation of all possible errors that can …","A deserializer holding a <code>()</code>.","A deserializer holding a <code>bool</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>usize</code>.","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding a <code>char</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>&str</code>.","A deserializer holding a <code>&str</code> with a lifetime tied to …","Create a new borrowed deserializer from the given string.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>Cow<str></code>.","A deserializer holding a <code>&[u8]</code>. Always calls […","Create a new deserializer from the given bytes.","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …","Create a new borrowed deserializer from the given …","A deserializer that iterates over a sequence.","Construct a new <code>SeqDeserializer<I, E></code>.","Check for remaining elements after passing a …","A deserializer holding a <code>SeqAccess</code>.","Construct a new <code>SeqAccessDeserializer<A></code>.","A deserializer that iterates over a map.","Construct a new <code>MapDeserializer<I, E></code>.","Check for remaining elements after passing a …","A deserializer holding a <code>MapAccess</code>.","Construct a new <code>MapAccessDeserializer<A></code>.","An efficient way of discarding data from a deserializer.","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","Raised when there is general error when deserializing a …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> enum type received a variant …","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> struct type expected to receive …","Raised when a <code>Deserialize</code> struct type received more than …","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a boolean value that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","The input contained a <code>char</code> that was not expected.","The input contained a <code>&str</code> or <code>String</code> that was not …","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …","The input contained a unit <code>()</code> that was not expected.","The input contained an <code>Option<T></code> that was not expected.","The input contained a newtype struct that was not …","The input contained a sequence that was not expected.","The input contained a map that was not expected.","The input contained an enum that was not expected.","The input contained a unit variant that was not expected.","The input contained a newtype variant that was not …","The input contained a tuple variant that was not expected.","The input contained a struct variant that was not …","A message stating what uncategorized thing the input …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","Format an explanation of what data was being expected. …","A <strong>data structure</strong> that can be deserialized from any data …","Deserialize this value from the given Serde deserializer.","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","The type produced by using this seed.","Equivalent to the more common <code>Deserialize::deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Determine whether <code>Deserialize</code> implementations should …","This trait represents a visitor that walks through a …","The value produced by this visitor.","Format a message stating what data this Visitor expects …","The input contains a boolean.","The input contains an <code>i8</code>.","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","The input contains a <code>i128</code>.","The input contains a <code>u8</code>.","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","The input contains a <code>u128</code>.","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","The input contains a <code>char</code>.","The input contains a string. The lifetime of the string …","The input contains a string that lives at least as long …","The input contains a string and ownership of the string …","The input contains a byte array. The lifetime of the byte …","The input contains a byte array that lives at least as …","The input contains a byte array and ownership of the byte …","The input contains an optional that is absent.","The input contains an optional that is present.","The input contains a unit <code>()</code>.","The input contains a newtype struct.","The input contains a sequence of elements.","The input contains a key-value map.","The input contains an enum.","Provides a <code>Visitor</code> access to each element of a sequence …","The error type that can be returned if some error occurs …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","Returns the number of elements remaining in the sequence, …","Provides a <code>Visitor</code> access to each entry of a map in the …","The error type that can be returned if some error occurs …","This returns <code>Ok(Some(key))</code> for the next key in the map, …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns <code>Ok(Some((key, value)))</code> for the next …","Returns the number of entries remaining in the map, if …","Provides a <code>Visitor</code> access to the data of an enum in the …","The error type that can be returned if some error occurs …","The <code>Visitor</code> that will be used to deserialize the content …","<code>variant</code> is called to identify which variant to …","<code>variant</code> is called to identify which variant to …","<code>VariantAccess</code> is a visitor that is created by the …","The error type that can be returned if some error occurs …","Called when deserializing a variant with no values.","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","Called when deserializing a tuple-like variant.","Called when deserializing a struct-like variant.","Converts an existing value into a <code>Deserializer</code> from which …","The type of the deserializer being converted into.","Convert this value into a deserializer.","Generic data structure serialization framework.","Helper type for implementing a <code>Serializer</code> that does not …","Trait used by <code>Serialize</code> implementations to generically …","Used when a <code>Serialize</code> implementation encounters any error …","A <strong>data structure</strong> that can be serialized into any data …","Serialize this value into the given Serde serializer.","A <strong>data format</strong> that can serialize any data structure …","The output type produced by this <code>Serializer</code> during …","The error type when some error occurs during …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Serialize a <code>bool</code> value.","Serialize an <code>i8</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i128</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u128</code> value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a character.","Serialize a <code>&str</code>.","Serialize a chunk of raw byte data.","Serialize a <code>None</code> value.","Serialize a <code>Some(T)</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Begin to serialize a variably sized sequence. This call …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Begin to serialize a map. This call must be followed by …","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Collect an iterator as a sequence.","Collect an iterator as a map.","Serialize a string produced by an implementation of …","Determine whether <code>Serialize</code> implementations should …","Returned from <code>Serializer::serialize_seq</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a sequence element.","Finish serializing a sequence.","Returned from <code>Serializer::serialize_tuple</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple element.","Finish serializing a tuple.","Returned from <code>Serializer::serialize_tuple_struct</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple struct field.","Finish serializing a tuple struct.","Returned from <code>Serializer::serialize_tuple_variant</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a tuple variant field.","Finish serializing a tuple variant.","Returned from <code>Serializer::serialize_map</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a map key.","Serialize a map value.","Serialize a map entry consisting of a key and a value.","Finish serializing a map.","Returned from <code>Serializer::serialize_struct</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a struct field.","Indicate that a struct field has been skipped.","Finish serializing a struct.","Returned from <code>Serializer::serialize_struct_variant</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Serialize a struct variant field.","Indicate that a struct variant field has been skipped.","Finish serializing a struct variant.","A <strong>data structure</strong> that can be deserialized from any data …","Deserialize this value from the given Serde deserializer.","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a string …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Determine whether <code>Deserialize</code> implementations should …","A <strong>data structure</strong> that can be serialized into any data …","Serialize this value into the given Serde serializer.","A <strong>data format</strong> that can serialize any data structure …","The output type produced by this <code>Serializer</code> during …","The error type when some error occurs during …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Serialize a <code>bool</code> value.","Serialize an <code>i8</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i128</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u128</code> value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a character.","Serialize a <code>&str</code>.","Serialize a chunk of raw byte data.","Serialize a <code>None</code> value.","Serialize a <code>Some(T)</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Begin to serialize a variably sized sequence. This call …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Begin to serialize a map. This call must be followed by …","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Collect an iterator as a sequence.","Collect an iterator as a map.","Serialize a string produced by an implementation of …","Determine whether <code>Serialize</code> implementations should …","Helper macro when implementing the <code>Deserializer</code> part of a …","Conditional compilation depending on whether Serde is …i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,3,0,4,4,0,5,0,6,6,0,7,0,0,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,0,11,0,0,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,15,15,15,15,0,16,16,16,16,16,16,16,16,0,17,17,17,17,0,18,18,18,18,18,18,0,19,19,0,0,0,20,0,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,0,24,24,24,24,0,25,25,25,25,0,26,26,26,26,0,27,27,27,27,27,27,0,28,28,28,28,28,0,29,29,29,29,29,0,11,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,1,1,1,1,1,1,1,1,1,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,51,51,51,51,51,51,51,51,51,51,9,9,9,9,9,9,9,9,9,9,52,52,52,52,52,52,52,51,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,4,4,6,6,6,6,6,6,47,48,1,49,50,7,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,30,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,1,49,50,2,3,4,5,6,7,51,9,51,30,30,9,9,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,1,49,50,2,3,4,5,6,7,51,9,30,9,10,30],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["borrowedstrdeserializer",3]],null,null,null,[[]],null,[[]],null,[[]],[[],["result",4]],null,[[]],null,[[]],[[],["result",4]],null,[[]],null,null,[[]],[[["expected",8],["unexpected",4]]],[[["expected",8],["unexpected",4]]],[[["usize",15],["expected",8]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],null,[[],["result",4]],null,null,null,[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["string",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],[["result",4],["option",4]]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],null,null,[[],[["result",4],["option",4]]],[[],["result",4]],[[],[["result",4],["option",4]]],[[],[["option",4],["result",4]]],[[],["result",4]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],null,null,[[]],null,null,null,[[]],null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],null,null,null,[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],null,[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["result",4]],[[["i8",15]],["result",4]],[[["i16",15]],["result",4]],[[["i32",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u32",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f32",15]],["result",4]],[[["f64",15]],["result",4]],[[["char",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["str",15]],["result",4]],[[["u32",15],["str",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[["usize",15],["option",4]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[["u32",15],["str",15],["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["ignoredany",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[["usize",15],["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["bool",15]],["result",4]],[[["i64",15]],["result",4]],[[["i128",15]],["result",4]],[[["u64",15]],["result",4]],[[["u128",15]],["result",4]],[[["f64",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["result",4]]],[[],[["usize",15],["option",4]]],[[],[["result",4],["option",4]]],[[],[["usize",15],["option",4]]],[[],[["result",4],["option",4]]],[[],["result",4]],[[],[["option",4],["result",4]]],[[],[["usize",15],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[]],[[]],[[],["error",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["seqdeserializer",3]],[[],["seqaccessdeserializer",3]],[[]],[[],["mapaccessdeserializer",3]],[[],["ignoredany",3]],[[],["unexpected",4]],[[],["ignoredany",3]],[[["error",3]],["bool",15]],[[["error",3]],["bool",15]],[[["unexpected",4]],["bool",15]],[[["unexpected",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":[24,24],"n":["Serialize","Deserialize"],"q":["serde_derive",""],"d":["",""],"i":[0,0],"f":[null,null],"p":[]},\
"sharded_slab":{"doc":"A lock-free concurrent slab.","t":[0,0,3,3,3,3,3,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,8,18,18,18,18,3,8,10,3,3,3,3,3,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18],"n":["implementation","pool","Pool","Ref","RefMut","OwnedRef","OwnedRefMut","new","new_with_config","USED_BITS","create","create_owned","create_with","get","get_owned","clear","key","key","downgrade","key","key","downgrade","Config","MAX_THREADS","MAX_PAGES","INITIAL_PAGE_SIZE","RESERVED_BITS","DefaultConfig","Clear","clear","Pool","Slab","Entry","VacantEntry","OwnedEntry","new","new_with_config","USED_BITS","insert","vacant_entry","remove","take","get","get_owned","contains","unique_iter","key","insert","key","key","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","drop","drop","drop","drop","clone","default","default","eq","eq","eq","eq","eq","eq","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","MAX_THREADS","MAX_PAGES","INITIAL_PAGE_SIZE","RESERVED_BITS"],"q":["sharded_slab","","sharded_slab::pool","","","","","","","","","","","","","","","","","","","","sharded_slab","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sharded_slab::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","sharded_slab","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sharded_slab::pool","","","","sharded_slab","","","","","sharded_slab::pool","","","","sharded_slab","","sharded_slab::pool","","","","sharded_slab","","sharded_slab::pool","","sharded_slab","sharded_slab::pool","","","","sharded_slab","","","","","","","",""],"d":["Notes on <code>sharded-slab</code>’s implementation and design.","A lock-free concurrent object pool.","A lock-free concurrent object pool.","A guard that allows access to an object in a pool.","A guard that allows exclusive mutable access to an object …","An owned guard that allows shared immutable access to an …","An owned guard that allows exclusive, mutable access to …","Returns a new <code>Pool</code> with the default configuration …","Returns a new <code>Pool</code> with the provided configuration …","The number of bits in each index which are used by the …","Creates a new object in the pool, returning an <code>RefMut</code> …","Creates a new object in the pool, returning an <code>OwnedRefMut</code>…","Creates a new object in the pool with the provided …","Return a borrowed reference to the value associated with …","Return an owned reference to the value associated with …","Remove the value using the storage associated with the …","Returns the key used to access this guard","Returns the key used to access the guard.","Downgrades the mutable guard to an immutable guard, …","Returns the key used to access this guard","Returns the key used to access this guard","Downgrades the owned mutable guard to an owned immutable …","Configuration parameters which can be overridden to tune …","The maximum number of threads which can access the slab.","The maximum number of pages in each shard in the slab.","The size of the first page in each shard.","Sets a number of high-order bits in each index which are …","Default slab configuration values.","Trait implemented by types which can be cleared in place, …","Clear all data in <code>self</code>, retaining the allocated capacithy.","A lock-free concurrent object pool.","A sharded slab.","A handle that allows access to an object in a slab.","A handle to a vacant entry in a <code>Slab</code>.","An owned guard that allows access to an object in a <code>S.ab</code>.","Returns a new slab with the default configuration …","Returns a new slab with the provided configuration …","The number of bits in each index which are used by the …","Inserts a value into the slab, returning a key that can …","Return a handle to a vacant entry allowing for further …","Remove the value associated with the given key from the …","Removes the value associated with the given key from the …","Return a reference to the value associated with the given …","Return an owned reference to the value associated with …","Returns <code>true</code> if the slab contains a value for the given …","Returns an iterator over all the items in the slab.","Returns the key used to access the guard.","Insert a value in the entry.","Return the key associated with this entry.","Returns the key used to access this guard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum number of threads which can access the slab.","The maximum number of pages in each shard in the slab.","The size of the first page in each shard.","Sets a number of high-order bits in each index which are …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,3,3,4,5,5,0,6,6,6,6,0,0,7,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,9,10,10,11,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,2,3,4,5,9,11,12,1,8,2,3,4,5,9,11,2,3,4,5,9,11,3,5,1,2,3,4,5,12,10,8,9,11,6,6,6,6],"f":[null,null,null,null,null,null,null,[[]],[[],[["pool",3],["config",8]]],null,[[],[["option",4],["refmut",3]]],[[["arc",3]],[["option",4],["ownedrefmut",3]]],[[],[["usize",15],["option",4]]],[[["usize",15]],[["option",4],["ref",3]]],[[["usize",15],["arc",3]],[["option",4],["ownedref",3]]],[[["usize",15]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["ref",3]],[[],["usize",15]],[[],["usize",15]],[[],["ownedref",3]],null,null,null,null,null,null,null,[[]],null,null,null,null,null,[[]],[[],[["slab",3],["config",8]]],null,[[],[["usize",15],["option",4]]],[[],[["option",4],["vacantentry",3]]],[[["usize",15]],["bool",15]],[[["usize",15]],["option",4]],[[["usize",15]],[["option",4],["entry",3]]],[[["usize",15],["arc",3]],[["ownedentry",3],["option",4]]],[[["usize",15]],["bool",15]],[[],["uniqueiter",3]],[[],["usize",15]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["defaultconfig",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null],"p":[[3,"Pool"],[3,"Ref"],[3,"RefMut"],[3,"OwnedRef"],[3,"OwnedRefMut"],[8,"Config"],[8,"Clear"],[3,"Slab"],[3,"Entry"],[3,"VacantEntry"],[3,"OwnedEntry"],[3,"DefaultConfig"]]},\
"signal_hook":{"doc":"Library for easier and safe Unix signal handling","t":[0,5,5,5,0,5,5,0,3,11,11,11,11,11,11,11,3,3,0,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["cleanup","cleanup_raw","cleanup_signal","register","flag","register","register_usize","iterator","Signals","new","add_signal","pending","wait","forever","is_closed","close","Pending","Forever","pipe","register_raw","register","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGUSR1","SIGUSR2","SIGWINCH","register","unregister","SigId","FORBIDDEN","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","cmp","clone","hash","partial_cmp","eq","ne","fmt","next","next","clone","fmt","register","reregister","deregister"],"q":["signal_hook","signal_hook::cleanup","","","signal_hook","signal_hook::flag","","signal_hook","signal_hook::iterator","","","","","","","","","","signal_hook","signal_hook::pipe","","signal_hook","","","","","","","","","","","","","","","","","","","","","","","","","","signal_hook::iterator","","","","","","","","","","","","","","","","","","","","","","","","","signal_hook","","","","","","","","","","","","","","","","signal_hook::iterator","","","","","",""],"d":["Cleaning up signals.","Resets the signal handler to the default one.","Resets the signal handler to the default one and removes …","Register a cleanup after receiving a signal.","Module for actions setting flags.","Registers an action to set the flag to <code>true</code> whenever the …","Registers an action to set the flag to the given value …","An iterator over incoming signals.","The main structure of the module, representing interest …","Creates the <code>Signals</code> structure.","Registers another signal to the set watched by this […","Returns an iterator of already received signals.","Waits for some signals to be available and returns an …","Returns an infinite iterator over arriving signals.","Is it closed?","Closes the instance.","The iterator of one batch of signals.","The infinite iterator of signals.","Module with the self-pipe pattern.","Registers a write to a self-pipe whenever there’s the …","Registers a write to a self-pipe whenever there’s the …","","","","","","","","","","","","","","","","","","","","","","","Registers an arbitrary action for the given signal.","Removes a previously installed action.","An ID of registered action.","List of forbidden signals.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,3,1,1,1,1,1],"f":[null,[[["c_int",6]],["sighandler_t",6]],[[["c_int",6]],[["error",3],["result",4]]],[[["vec",3],["c_int",6]],[["error",3],["result",4],["sigid",3]]],null,[[["arc",3],["atomicbool",3],["c_int",6]],[["error",3],["result",4],["sigid",3]]],[[["atomicusize",3],["usize",15],["arc",3],["c_int",6]],[["error",3],["result",4],["sigid",3]]],null,null,[[],[["error",3],["result",4]]],[[["c_int",6]],[["error",3],["result",4]]],[[],["pending",3]],[[],["pending",3]],[[],["forever",3]],[[],["bool",15]],[[]],null,null,null,[[["rawfd",6],["c_int",6]],[["error",3],["result",4],["sigid",3]]],[[["c_int",6]],[["error",3],["result",4],["sigid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],[["error",3],["result",4],["sigid",3]]],[[["sigid",3]],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["sigid",3]],["ordering",4]],[[],["sigid",3]],[[]],[[["sigid",3]],[["ordering",4],["option",4]]],[[["sigid",3]],["bool",15]],[[["sigid",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["option",4],["c_int",6]]],[[],[["option",4],["c_int",6]]],[[],["signals",3]],[[["formatter",3]],["result",6]],[[["interest",3],["token",3],["registry",3]],[["error",3],["result",4]]],[[["interest",3],["token",3],["registry",3]],[["error",3],["result",4]]],[[["registry",3]],[["error",3],["result",4]]]],"p":[[3,"Signals"],[3,"Pending"],[3,"Forever"],[3,"SigId"]]},\
"signal_hook_registry":{"doc":"Backend of the signal-hook crate.","t":[3,17,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SigId","FORBIDDEN","register","register_sigaction","register_signal_unchecked","register_unchecked","unregister","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","cmp","eq","ne","partial_cmp","fmt","hash"],"q":["signal_hook_registry","","","","","","","","","","","","","","","","","","","","","",""],"d":["An ID of registered action.","List of forbidden signals.","Registers an arbitrary action for the given signal.","Register a signal action.","Register a signal action without checking for forbidden …","Register a signal action without checking for forbidden …","Removes a previously installed action.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[["c_int",6]],[["result",4],["sigid",3],["error",3]]],[[["c_int",6]],[["result",4],["sigid",3],["error",3]]],[[["c_int",6]],[["result",4],["sigid",3],["error",3]]],[[["c_int",6]],[["result",4],["sigid",3],["error",3]]],[[["sigid",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["sigid",3]],[[["sigid",3]],["ordering",4]],[[["sigid",3]],["bool",15]],[[["sigid",3]],["bool",15]],[[["sigid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[]]],"p":[[3,"SigId"]]},\
"slice_deque":{"doc":"A double-ended queue that <code>Deref</code>s into a slice.","t":[4,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,3,3,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocError","Oom","Other","Buffer","SliceDeque","new","from_raw_parts","with_capacity","capacity","len","is_full","as_slice","as_mut_slice","as_slices","as_mut_slices","tail_head_slice","try_reserve","reserve","reserve_exact","move_head_unchecked","move_head","move_tail_unchecked","move_tail","steal_from_slice","append","front","front_mut","back","back_mut","try_push_front","push_front","try_push_back","push_back","pop_front","pop_back","shrink_to_fit","truncate_back","truncate","truncate_front","drain","clear","swap_remove_back","swap_remove_front","insert","remove","split_off","retain","dedup_by_key","dedup_by","splice","drain_filter","extend_from_slice","resize","resize_default","dedup","remove_item","Drain","IntoIter","as_slice","as_mut_slice","Splice","DrainFilter","sdeq","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","drop","drop","drop","drop","as_mut","as_ref","from","from","next_back","next_back","next_back","extend","extend","into_iter","next","size_hint","next","size_hint","count","next","size_hint","next","size_hint","clone","clone","clone_from","clone","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","partial_cmp","partial_cmp","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","hash","from_iter","len","is_empty","ptr","as_slice","as_mut_slice","get","get_mut","new","from_raw_parts","size_in_bytes","uninitialized"],"q":["slice_dequed":["Allocation error.","The system is Out-of-memory.","Other allocation errors (not out-of-memory).","Mirrored memory buffer of length <code>len</code>.","A double-ended queue that derefs into a slice.","Creates a new empty deque.","Creates a SliceDeque from its raw components.","Create an empty deque with capacity to hold <code>n</code> elements.","Returns the number of elements that the deque can hold …","Number of elements in the ring buffer.","Is the ring buffer full ?","Extracts a slice containing the entire deque.","Extracts a mutable slice containing the entire deque.","Returns a pair of slices, where the first slice contains …","Returns a pair of slices, where the first slice contains …","Returns the slice of uninitialized memory between the <code>tail</code>…","Attempts to reserve capacity for inserting at least …","Reserves capacity for inserting at least <code>additional</code> …","Reserves the minimum capacity for exactly <code>additional</code> more …","Moves the deque head by <code>x</code>.","Moves the deque head by <code>x</code>.","Moves the deque tail by <code>x</code>.","Moves the deque tail by <code>x</code>.","Steal the elements from the slice <code>s</code>. You should …","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …","Provides a reference to the first element, or <code>None</code> if the …","Provides a mutable reference to the first element, or <code>None</code>…","Provides a reference to the last element, or <code>None</code> if the …","Provides a mutable reference to the last element, or <code>None</code> …","Attempts to prepend <code>value</code> to the deque.","Prepends <code>value</code> to the deque.","Attempts to appends <code>value</code> to the deque.","Appends <code>value</code> to the deque.","Removes the first element and returns it, or <code>None</code> if the …","Removes the last element from the deque and returns it, …","Shrinks the capacity of the deque as much as possible.","Shortens the deque by removing excess elements from the …","Shortens the deque by removing excess elements from the …","Shortens the deque by removing excess elements from the …","Creates a draining iterator that removes the specified …","Removes all values from the deque.","Removes the element at <code>index</code> and return it in <code>O(1)</code> by …","Removes the element at <code>index</code> and returns it in <code>O(1)</code> by …","Inserts an <code>element</code> at <code>index</code> within the deque, shifting …","Removes and returns the element at position <code>index</code> within …","Splits the collection into two at the given index.","Retains only the elements specified by the predicate.","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates a splicing iterator that replaces the specified …","Creates an iterator which uses a closure to determine if …","Clones and appends all elements in a slice to the …","Modifies the <code>SliceDeque</code> in-place so that <code>len()</code> is equal to…","Resizes the <code>SliceDeque</code> in-place so that <code>len</code> is equal to …","Removes consecutive repeated elements in the deque.","Removes the first instance of <code>item</code> from the deque if the …","A draining iterator for <code>SliceDeque<T></code>.","An iterator that moves out of a deque.","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a mutable …","A splicing iterator for <code>SliceDeque</code>.","An iterator produced by calling <code>drain_filter</code> on <code>SliceDeque</code>…","Creates a <code>SliceDeque</code> containing the arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a consuming iterator, that is, one that moves …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of elements in the buffer.","Is the buffer empty?","Pointer to the first element in the buffer.","Interprets contents as a slice.","Interprets contents as a mut slice.","Interprets content as a slice and access the <code>i</code>-th element.","Interprets content as a mut slice and access the <code>i</code>-th …","Creates a new empty <code>Buffer</code>.","Creates a new empty <code>Buffer</code> from a <code>ptr</code> and a <code>len</code>.","Total number of bytes in the buffer.","Create a mirrored buffer containing <code>len</code> <code>T</code>s where the …"],"i":[0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,0,0,0,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,3,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,4,2,5,3,6,7,2,2,2,2,5,3,6,2,2,2,5,5,3,3,3,6,6,7,7,4,2,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,5,3,6,7,2,2,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,null,[[]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["allocerror",4],["result",4]]],[[["usize",15]]],[[["usize",15]]],[[["isize",15]]],[[["isize",15]]],[[["isize",15]]],[[["isize",15]]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[]],[[],["result",4]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["drain",3]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["splice",3]],[[],["drainfilter",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["option",4]],null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["intoiter",3]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["slicedeque",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["vec",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["ordering",4]]],[[],[["option",4],["ordering",4]]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["intoiterator",8]]],[[],["usize",15]],[[],["bool",15]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]],["usize",15]],[[["usize",15]],[["allocerror",4],["result",4]]]],"p":[[4,"AllocError"],[3,"SliceDeque"],[3,"IntoIter"],[3,"Buffer"],[3,"Drain"],[3,"Splice"],[3,"DrainFilter"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":[4,13,13,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,8,16,10,8,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CollectionAllocErr","CapacityOverflow","AllocErr","layout","Drain","SmallVec","new","with_capacity","from_vec","from_buf","from_buf_and_len","from_buf_and_len_unchecked","set_len","inline_size","len","is_empty","capacity","spilled","drain","push","pop","append","grow","try_grow","reserve","try_reserve","reserve_exact","try_reserve_exact","shrink_to_fit","truncate","as_slice","as_mut_slice","swap_remove","clear","remove","insert","insert_many","into_vec","into_boxed_slice","into_inner","retain","dedup","dedup_by","dedup_by_key","resize_with","from_raw_parts","as_ptr","as_mut_ptr","from_slice","insert_from_slice","extend_from_slice","resize","from_elem","IntoIter","as_slice","as_mut_slice","Array","Item","size","ToSmallVec","to_smallvec","smallvec","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_string","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","to_owned","clone_into","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","eq","cmp","partial_cmp","drop","drop","drop","index","index_mut","hash","len","borrow","borrow_mut","from_iter","next_back","next_back","next","size_hint","next","size_hint","into_iter","extend","from","from","from","from","as_ref","as_mut","clone","clone","default"],"q":["smallvec","","","smallvec::CollectionAllocErr","smallvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error type for APIs with fallible heap allocation","Overflow <code>usize::MAX</code> or other error during size computation","The allocator return an error","The layout that was passed to the allocator","An iterator that removes the items from a <code>SmallVec</code> and …","A <code>Vec</code>-like container that can store a small number of …","Construct an empty vector","Construct an empty vector with enough capacity …","Construct a new <code>SmallVec</code> from a <code>Vec<A::Item></code>.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Sets the length of a vector.","The maximum number of elements this vector can hold inline","The number of elements stored in the vector","Returns <code>true</code> if the vector is empty","The number of items the vector can hold without …","Returns <code>true</code> if the data has spilled into a separate …","Creates a draining iterator that removes the specified …","Append an item to the vector.","Remove an item from the end of the vector and return it, …","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","Re-allocate to set the capacity to …","Re-allocate to set the capacity to …","Reserve capacity for <code>additional</code> more elements to be …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Reserve the minimum capacity for <code>additional</code> more elements …","Shrink the capacity of the vector as much as possible.","Shorten the vector, keeping the first <code>len</code> elements and …","Extracts a slice containing the entire vector.","Extracts a mutable slice of the entire vector.","Remove the element at position <code>index</code>, replacing it with …","Remove all elements from the vector.","Remove and return the element at position <code>index</code>, shifting …","Insert an element at position <code>index</code>, shifting all …","Insert multiple elements at position <code>index</code>, shifting all …","Convert a SmallVec to a Vec, without reallocating if the …","Converts a <code>SmallVec</code> into a <code>Box<[T]></code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","Retains only the elements specified by the predicate.","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Creates a <code>SmallVec</code> directly from the raw components of …","Returns a raw pointer to the vector’s buffer.","Returns a raw mutable pointer to the vector’s buffer.","Copy the elements from a slice into a new <code>SmallVec</code>.","Copy elements from a slice into the vector at position …","Copy elements from a slice and append them to the vector.","Resizes the vector so that its length is equal to <code>len</code>.","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","An iterator that consumes a <code>SmallVec</code> and yields its items …","Returns the remaining items of this iterator as a slice.","Returns the remaining items of this iterator as a mutable …","Types that can be used as the backing store for a SmallVec","The type of the array’s elements.","Returns the number of items the array can hold.","Convenience trait for constructing a <code>SmallVec</code>","Construct a new <code>SmallVec</code> from a slice.","Creates a [<code>SmallVec</code>] containing the arguments.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,4,4,0,5,5,0,6,0,1,1,1,1,1,1,1,1,7,7,7,7,7,7,7,7,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,3,3,1,7,3,4,1,3,3,3,7,3,4,3,3,3,7,3,3,3,7,4,7,7,4,4,3,3,1,3,3,3,3,3,3,4,3],"f":[null,null,null,null,null,null,[[],["smallvec",3]],[[["usize",15]]],[[["vec",3]],["smallvec",3]],[[],["smallvec",3]],[[["usize",15]],["smallvec",3]],[[["usize",15],["maybeuninit",19]],["smallvec",3]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["bool",15]],[[],["usize",15]],[[],["bool",15]],[[],["drain",3]],[[]],[[],["option",4]],[[["smallvec",3]]],[[["usize",15]]],[[["usize",15]],[["collectionallocerr",4],["result",4]]],[[["usize",15]]],[[["usize",15]],[["collectionallocerr",4],["result",4]]],[[["usize",15]]],[[["usize",15]],[["collectionallocerr",4],["result",4]]],[[]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15],["intoiterator",8]]],[[],["vec",3]],[[],["box",3]],[[],["result",4]],[[["fnmut",8]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]],["smallvec",3]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],null,null,[[],["usize",15]],null,[[],["smallvec",3]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["smallvec",3]],["bool",15]],[[["smallvec",3]],["ordering",4]],[[["smallvec",3]],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[["intoiterator",8]],["smallvec",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[["intoiterator",8]]],[[["layouterr",6]]],[[],["smallvec",3]],[[["vec",3]],["smallvec",3]],[[],["smallvec",3]],[[]],[[]],[[],["smallvec",3]],[[],["intoiter",3]],[[],["smallvec",3]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[3,"SmallVec"],[3,"IntoIter"],[8,"Array"],[8,"ToSmallVec"],[3,"Drain"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","t":[4,13,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11],"n":["StrSimError","DifferentLengthArgs","HammingResult","generic_hamming","hamming","generic_jaro","jaro","generic_jaro_winkler","jaro_winkler","generic_levenshtein","levenshtein","normalized_levenshtein","osa_distance","generic_damerau_levenshtein","damerau_levenshtein","normalized_damerau_levenshtein","sorensen_dice","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","eq","fmt","fmt"],"q":["strsim","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Calculates the number of positions in the two sequences …","Calculates the number of positions in the two strings …","Calculates the Jaro similarity between two sequences. The …","Calculates the Jaro similarity between two strings. The …","Like Jaro but gives a boost to sequences that have a …","Like Jaro but gives a boost to strings that have a common …","Calculates the minimum number of insertions, deletions, …","Calculates the minimum number of insertions, deletions, …","Calculates a normalized score of the Levenshtein …","Like Levenshtein but allows for adjacent transpositions. …","Like optimal string alignment, but substrings can be …","Like optimal string alignment, but substrings can be …","Calculates a normalized score of the …","Calculates a Sørensen-Dice similarity distance using …","","","","","","","","","","",""],"i":[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,[[],["hammingresult",6]],[[["str",15]],["hammingresult",6]],[[],["f64",15]],[[["str",15]],["f64",15]],[[],["f64",15]],[[["str",15]],["f64",15]],[[],["usize",15]],[[["str",15]],["usize",15]],[[["str",15]],["f64",15]],[[["str",15]],["usize",15]],[[],["usize",15]],[[["str",15]],["usize",15]],[[["str",15]],["f64",15]],[[["str",15]],["f64",15]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["strsimerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]]],"p":[[4,"StrSimError"]]},\
"syn":{"doc":"github crates-io docs-rs","t":[0,8,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,11,3,12,11,3,12,11,3,12,11,0,3,11,11,11,3,11,11,11,11,11,11,11,11,11,11,0,8,10,18,10,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,4,13,13,11,11,11,11,11,11,0,8,10,0,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,8,10,3,6,3,8,8,10,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,10,11,11,3,11,11,11,11,11,11,3,4,13,13,3,12,12,12,12,12,6,4,13,13,13,3,12,12,12,3,12,12,12,4,13,13,3,12,12,12,12,12,4,13,13,13,3,12,12,3,12,12,3,12,12,12,12,3,12,3,12,3,12,12,12,12,4,13,13,13,13,3,12,12,12,12,12,12,3,12,12,12,12,4,13,13,3,12,12,3,12,12,12,12,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,4,13,13,3,12,12,12,12,3,12,12,12,12,12,12,12,4,13,13,13,3,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,4,13,13,3,12,12,12,12,12,12,4,13,13,3,12,12,4,13,13,13,3,3,3,4,13,13,4,13,13,13,13,13,3,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,4,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,3,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,3,12,12,3,12,3,12,12,12,3,12,12,12,4,13,13,13,13,13,3,12,12,12,3,12,12,4,13,13,13,13,13,13,13,13,3,12,12,3,3,3,3,3,3,4,13,13,3,12,12,12,12,4,13,13,13,4,13,13,13,3,12,12,12,3,12,12,12,3,12,12,3,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,12,12,3,12,12,12,12,12,4,13,13,13,13,3,12,12,3,12,12,12,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,3,12,12,3,12,3,12,3,12,3,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,3,12,12,3,12,12,3,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,3,12,12,12,12,12,3,12,12,3,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,3,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,4,13,13,13,13,13,3,12,12,12,3,12,12,4,13,13,13,3,12,12,3,12,12,12,12,12,3,6,5,5,5,5,14,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["token","Token","Underscore","spans","Abstract","span","As","span","Async","span","Auto","span","Await","span","Become","span","Box","span","Break","span","Const","span","Continue","span","Crate","span","Default","span","Do","span","Dyn","span","Else","span","Enum","span","Extern","span","Final","span","Fn","span","For","span","If","span","Impl","span","In","span","Let","span","Loop","span","Macro","span","Match","span","Mod","span","Move","span","Mut","span","Override","span","Priv","span","Pub","span","Ref","span","Return","span","SelfType","span","SelfValue","span","Static","span","Struct","span","Super","span","Trait","span","Try","span","Type","span","Typeof","span","Union","span","Unsafe","span","Unsized","span","Use","span","Virtual","span","Where","span","While","span","Yield","span","Add","spans","AddEq","spans","And","spans","AndAnd","spans","AndEq","spans","At","spans","Bang","spans","Caret","spans","CaretEq","spans","Colon","spans","Colon2","spans","Comma","spans","Div","spans","DivEq","spans","Dollar","spans","Dot","spans","Dot2","spans","Dot3","spans","DotDotEq","spans","Eq","spans","EqEq","spans","Ge","spans","Gt","spans","Le","spans","Lt","spans","MulEq","spans","Ne","spans","Or","spans","OrEq","spans","OrOr","spans","Pound","spans","Question","spans","RArrow","spans","LArrow","spans","Rem","spans","RemEq","spans","FatArrow","spans","Semi","spans","Shl","spans","ShlEq","spans","Shr","spans","ShrEq","spans","Star","spans","Sub","spans","SubEq","spans","Tilde","spans","Brace","span","surround","Bracket","span","surround","Paren","span","surround","Group","span","surround","buffer","TokenBuffer","new","new2","begin","Cursor","empty","eof","group","ident","punct","literal","lifetime","token_stream","token_tree","span","ext","IdentExt","parse_any","peek_any","unraw","punctuated","Punctuated","new","is_empty","len","first","first_mut","last","last_mut","iter","iter_mut","pairs","pairs_mut","into_pairs","push_value","push_punct","pop","trailing_punct","empty_or_trailing","push","insert","clear","parse_terminated","parse_terminated_with","parse_separated_nonempty","parse_separated_nonempty_with","Pairs","PairsMut","IntoPairs","IntoIter","Iter","IterMut","Pair","Punctuated","End","into_value","value","value_mut","punct","new","into_tuple","spanned","Spanned","span","visit","Visit","visit_abi","visit_angle_bracketed_generic_arguments","visit_arm","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bin_op","visit_binding","visit_block","visit_bound_lifetimes","visit_const_param","visit_constraint","visit_data","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","visit_expr","visit_expr_array","visit_expr_assign","visit_expr_assign_op","visit_expr_async","visit_expr_await","visit_expr_binary","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_call","visit_expr_cast","visit_expr_closure","visit_expr_continue","visit_expr_field","visit_expr_for_loop","visit_expr_group","visit_expr_if","visit_expr_index","visit_expr_let","visit_expr_lit","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","visit_expr_paren","visit_expr_path","visit_expr_range","visit_expr_reference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","visit_expr_tuple","visit_expr_type","visit_expr_unary","visit_expr_unsafe","visit_expr_while","visit_expr_yield","visit_field","visit_field_pat","visit_field_value","visit_fields","visit_fields_named","visit_fields_unnamed","visit_file","visit_fn_arg","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_type","visit_generic_argument","visit_generic_method_argument","visit_generic_param","visit_generics","visit_ident","visit_impl_item","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_type","visit_index","visit_item","visit_item_const","visit_item_enum","visit_item_extern_crate","visit_item_fn","visit_item_foreign_mod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","visit_item_type","visit_item_union","visit_item_use","visit_label","visit_lifetime","visit_lifetime_def","visit_lit","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_local","visit_macro","visit_macro_delimiter","visit_member","visit_meta","visit_meta_list","visit_meta_name_value","visit_method_turbofish","visit_nested_meta","visit_parenthesized_generic_arguments","visit_pat","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_or","visit_pat_path","visit_pat_range","visit_pat_reference","visit_pat_rest","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_type","visit_pat_wild","visit_path","visit_path_arguments","visit_path_segment","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_type","visit_qself","visit_range_limits","visit_receiver","visit_return_type","visit_signature","visit_span","visit_stmt","visit_trait_bound","visit_trait_bound_modifier","visit_trait_item","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_type","visit_type","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","visit_type_slice","visit_type_trait_object","visit_type_tuple","visit_un_op","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","visit_variadic","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visit_visibility","visit_where_clause","visit_where_predicate","visit_abi","visit_angle_bracketed_generic_arguments","visit_arm","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bin_op","visit_binding","visit_block","visit_bound_lifetimes","visit_const_param","visit_constraint","visit_data","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","visit_expr","visit_expr_array","visit_expr_assign","visit_expr_assign_op","visit_expr_async","visit_expr_await","visit_expr_binary","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_call","visit_expr_cast","visit_expr_closure","visit_expr_continue","visit_expr_field","visit_expr_for_loop","visit_expr_group","visit_expr_if","visit_expr_index","visit_expr_let","visit_expr_lit","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","visit_expr_paren","visit_expr_path","visit_expr_range","visit_expr_reference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","visit_expr_tuple","visit_expr_type","visit_expr_unary","visit_expr_unsafe","visit_expr_while","visit_expr_yield","visit_field","visit_field_pat","visit_field_value","visit_fields","visit_fields_named","visit_fields_unnamed","visit_file","visit_fn_arg","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_type","visit_generic_argument","visit_generic_method_argument","visit_generic_param","visit_generics","visit_ident","visit_impl_item","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_type","visit_index","visit_item","visit_item_const","visit_item_enum","visit_item_extern_crate","visit_item_fn","visit_item_foreign_mod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","visit_item_type","visit_item_union","visit_item_use","visit_label","visit_lifetime","visit_lifetime_def","visit_lit","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_local","visit_macro","visit_macro_delimiter","visit_member","visit_meta","visit_meta_list","visit_meta_name_value","visit_method_turbofish","visit_nested_meta","visit_parenthesized_generic_arguments","visit_pat","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_or","visit_pat_path","visit_pat_range","visit_pat_reference","visit_pat_rest","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_type","visit_pat_wild","visit_path","visit_path_arguments","visit_path_segment","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_type","visit_qself","visit_range_limits","visit_receiver","visit_return_type","visit_signature","visit_span","visit_stmt","visit_trait_bound","visit_trait_bound_modifier","visit_trait_item","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_type","visit_type","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","visit_type_slice","visit_type_trait_object","visit_type_tuple","visit_un_op","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","visit_variadic","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visit_visibility","visit_where_clause","visit_where_predicate","visit_mut","VisitMut","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_attr_style_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bin_op_mut","visit_binding_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_constraint_mut","visit_data_mut","visit_data_enum_mut","visit_data_struct_mut","visit_data_union_mut","visit_derive_input_mut","visit_expr_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_op_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_box_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_try_mut","visit_expr_try_block_mut","visit_expr_tuple_mut","visit_expr_type_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_field_mut","visit_field_pat_mut","visit_field_value_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_file_mut","visit_fn_arg_mut","visit_foreign_item_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_method_argument_mut","visit_generic_param_mut","visit_generics_mut","visit_ident_mut","visit_impl_item_mut","visit_impl_item_const_mut","visit_impl_item_macro_mut","visit_impl_item_method_mut","visit_impl_item_type_mut","visit_index_mut","visit_item_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_macro_mut","visit_item_macro2_mut","visit_item_mod_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_trait_mut","visit_item_trait_alias_mut","visit_item_type_mut","visit_item_union_mut","visit_item_use_mut","visit_label_mut","visit_lifetime_mut","visit_lifetime_def_mut","visit_lit_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_str_mut","visit_local_mut","visit_macro_mut","visit_macro_delimiter_mut","visit_member_mut","visit_meta_mut","visit_meta_list_mut","visit_meta_name_value_mut","visit_method_turbofish_mut","visit_nested_meta_mut","visit_parenthesized_generic_arguments_mut","visit_pat_mut","visit_pat_box_mut","visit_pat_ident_mut","visit_pat_lit_mut","visit_pat_macro_mut","visit_pat_or_mut","visit_pat_path_mut","visit_pat_range_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_path_mut","visit_path_arguments_mut","visit_path_segment_mut","visit_predicate_eq_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_qself_mut","visit_range_limits_mut","visit_receiver_mut","visit_return_type_mut","visit_signature_mut","visit_span_mut","visit_stmt_mut","visit_trait_bound_mut","visit_trait_bound_modifier_mut","visit_trait_item_mut","visit_trait_item_const_mut","visit_trait_item_macro_mut","visit_trait_item_method_mut","visit_trait_item_type_mut","visit_type_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_never_mut","visit_type_param_mut","visit_type_param_bound_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_name_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_tree_mut","visit_variadic_mut","visit_variant_mut","visit_vis_crate_mut","visit_vis_public_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_predicate_mut","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_attr_style_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bin_op_mut","visit_binding_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_constraint_mut","visit_data_mut","visit_data_enum_mut","visit_data_struct_mut","visit_data_union_mut","visit_derive_input_mut","visit_expr_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_op_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_box_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_try_mut","visit_expr_try_block_mut","visit_expr_tuple_mut","visit_expr_type_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_field_mut","visit_field_pat_mut","visit_field_value_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_file_mut","visit_fn_arg_mut","visit_foreign_item_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_method_argument_mut","visit_generic_param_mut","visit_generics_mut","visit_ident_mut","visit_impl_item_mut","visit_impl_item_const_mut","visit_impl_item_macro_mut","visit_impl_item_method_mut","visit_impl_item_type_mut","visit_index_mut","visit_item_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_macro_mut","visit_item_macro2_mut","visit_item_mod_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_trait_mut","visit_item_trait_alias_mut","visit_item_type_mut","visit_item_union_mut","visit_item_use_mut","visit_label_mut","visit_lifetime_mut","visit_lifetime_def_mut","visit_lit_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_str_mut","visit_local_mut","visit_macro_mut","visit_macro_delimiter_mut","visit_member_mut","visit_meta_mut","visit_meta_list_mut","visit_meta_name_value_mut","visit_method_turbofish_mut","visit_nested_meta_mut","visit_parenthesized_generic_arguments_mut","visit_pat_mut","visit_pat_box_mut","visit_pat_ident_mut","visit_pat_lit_mut","visit_pat_macro_mut","visit_pat_or_mut","visit_pat_path_mut","visit_pat_range_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_path_mut","visit_path_arguments_mut","visit_path_segment_mut","visit_predicate_eq_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_qself_mut","visit_range_limits_mut","visit_receiver_mut","visit_return_type_mut","visit_signature_mut","visit_span_mut","visit_stmt_mut","visit_trait_bound_mut","visit_trait_bound_modifier_mut","visit_trait_item_mut","visit_trait_item_const_mut","visit_trait_item_macro_mut","visit_trait_item_method_mut","visit_trait_item_type_mut","visit_type_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_never_mut","visit_type_param_mut","visit_type_param_bound_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_name_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_tree_mut","visit_variadic_mut","visit_variant_mut","visit_vis_crate_mut","visit_vis_public_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_predicate_mut","parse","discouraged","Speculative","advance_to","Error","Result","Lookahead1","Peek","Parse","parse","ParseStream","ParseBuffer","StepCursor","error","parse","call","peek","peek2","peek3","parse_terminated","is_empty","lookahead1","fork","error","step","span","cursor","Parser","Output","parse2","parse","parse_str","Nothing","new","new_spanned","span","to_compile_error","into_compile_error","combine","Ident","AttrStyle","Outer","Inner","Attribute","pound_token","style","bracket_token","path","tokens","AttributeArgs","Meta","Path","List","NameValue","MetaList","path","paren_token","nested","MetaNameValue","path","eq_token","lit","NestedMeta","Meta","Lit","Field","attrs","vis","ident","colon_token","ty","Fields","Named","Unnamed","Unit","FieldsNamed","brace_token","named","FieldsUnnamed","paren_token","unnamed","Variant","attrs","ident","fields","discriminant","VisCrate","crate_token","VisPublic","pub_token","VisRestricted","pub_token","paren_token","in_token","path","Visibility","Public","Crate","Restricted","Inherited","Arm","attrs","pat","guard","fat_arrow_token","body","comma","FieldValue","attrs","member","colon_token","expr","GenericMethodArgument","Type","Const","Label","name","colon_token","MethodTurbofish","colon2_token","lt_token","args","gt_token","RangeLimits","HalfOpen","Closed","Expr","Array","Assign","AssignOp","Async","Await","Binary","Block","Box","Break","Call","Cast","Closure","Continue","Field","ForLoop","Group","If","Index","Let","Lit","Loop","Macro","Match","MethodCall","Paren","Path","Range","Reference","Repeat","Return","Struct","Try","TryBlock","Tuple","Type","Unary","Unsafe","Verbatim","While","Yield","ExprArray","attrs","bracket_token","elems","ExprAssign","attrs","left","eq_token","right","ExprAssignOp","attrs","left","op","right","ExprAsync","attrs","async_token","capture","block","ExprAwait","attrs","base","dot_token","await_token","ExprBinary","attrs","left","op","right","ExprBlock","attrs","label","block","ExprBox","attrs","box_token","expr","ExprBreak","attrs","break_token","label","expr","ExprCall","attrs","func","paren_token","args","ExprCast","attrs","expr","as_token","ty","ExprClosure","attrs","asyncness","movability","capture","or1_token","inputs","or2_token","output","body","ExprContinue","attrs","continue_token","label","ExprField","attrs","base","dot_token","member","ExprForLoop","attrs","label","for_token","pat","in_token","expr","body","ExprGroup","attrs","group_token","expr","ExprIf","attrs","if_token","cond","then_branch","else_branch","ExprIndex","attrs","expr","bracket_token","index","ExprLet","attrs","let_token","pat","eq_token","expr","ExprLit","attrs","lit","ExprLoop","attrs","label","loop_token","body","ExprMacro","attrs","mac","ExprMatch","attrs","match_token","expr","brace_token","arms","ExprMethodCall","attrs","receiver","dot_token","method","turbofish","paren_token","args","ExprParen","attrs","paren_token","expr","ExprPath","attrs","qself","path","ExprRange","attrs","from","limits","to","ExprReference","attrs","and_token","raw","mutability","expr","ExprRepeat","attrs","bracket_token","expr","semi_token","len","ExprReturn","attrs","return_token","expr","ExprStruct","attrs","path","brace_token","fields","dot2_token","rest","ExprTry","attrs","expr","question_token","ExprTryBlock","attrs","try_token","block","ExprTuple","attrs","paren_token","elems","ExprType","attrs","expr","colon_token","ty","ExprUnary","attrs","op","expr","ExprUnsafe","attrs","unsafe_token","block","ExprWhile","attrs","label","while_token","cond","body","ExprYield","attrs","yield_token","expr","Index","index","span","Member","Named","Unnamed","BoundLifetimes","for_token","lt_token","lifetimes","gt_token","ConstParam","attrs","const_token","ident","colon_token","ty","eq_token","default","GenericParam","Type","Lifetime","Const","Generics","lt_token","params","gt_token","where_clause","LifetimeDef","attrs","lifetime","colon_token","bounds","PredicateEq","lhs_ty","eq_token","rhs_ty","PredicateLifetime","lifetime","colon_token","bounds","PredicateType","lifetimes","bounded_ty","colon_token","bounds","TraitBound","paren_token","modifier","lifetimes","path","TraitBoundModifier","None","Maybe","TypeParam","attrs","ident","colon_token","bounds","eq_token","default","TypeParamBound","Trait","Lifetime","WhereClause","where_token","predicates","WherePredicate","Type","Lifetime","Eq","ImplGenerics","Turbofish","TypeGenerics","FnArg","Receiver","Typed","ForeignItem","Fn","Static","Type","Macro","Verbatim","ForeignItemFn","attrs","vis","sig","semi_token","ForeignItemMacro","attrs","mac","semi_token","ForeignItemStatic","attrs","vis","static_token","mutability","ident","colon_token","ty","semi_token","ForeignItemType","attrs","vis","type_token","ident","semi_token","ImplItem","Const","Method","Type","Macro","Verbatim","ImplItemConst","attrs","vis","defaultness","const_token","ident","colon_token","ty","eq_token","expr","semi_token","ImplItemMacro","attrs","mac","semi_token","ImplItemMethod","attrs","vis","defaultness","sig","block","ImplItemType","attrs","vis","defaultness","type_token","ident","generics","eq_token","ty","semi_token","Item","Const","Enum","ExternCrate","Fn","ForeignMod","Impl","Macro","Macro2","Mod","Static","Struct","Trait","TraitAlias","Type","Union","Use","Verbatim","ItemConst","attrs","vis","const_token","ident","colon_token","ty","eq_token","expr","semi_token","ItemEnum","attrs","vis","enum_token","ident","generics","brace_token","variants","ItemExternCrate","attrs","vis","extern_token","crate_token","ident","rename","semi_token","ItemFn","attrs","vis","sig","block","ItemForeignMod","attrs","abi","brace_token","items","ItemImpl","attrs","defaultness","unsafety","impl_token","generics","trait_","self_ty","brace_token","items","ItemMacro","attrs","ident","mac","semi_token","ItemMacro2","attrs","vis","macro_token","ident","rules","ItemMod","attrs","vis","mod_token","ident","content","semi","ItemStatic","attrs","vis","static_token","mutability","ident","colon_token","ty","eq_token","expr","semi_token","ItemStruct","attrs","vis","struct_token","ident","generics","fields","semi_token","ItemTrait","attrs","vis","unsafety","auto_token","trait_token","ident","generics","colon_token","supertraits","brace_token","items","ItemTraitAlias","attrs","vis","trait_token","ident","generics","eq_token","bounds","semi_token","ItemType","attrs","vis","type_token","ident","generics","eq_token","ty","semi_token","ItemUnion","attrs","vis","union_token","ident","generics","fields","ItemUse","attrs","vis","use_token","leading_colon","tree","semi_token","Receiver","attrs","reference","mutability","self_token","Signature","constness","asyncness","unsafety","abi","fn_token","ident","generics","paren_token","inputs","variadic","output","TraitItem","Const","Method","Type","Macro","Verbatim","TraitItemConst","attrs","const_token","ident","colon_token","ty","default","semi_token","TraitItemMacro","attrs","mac","semi_token","TraitItemMethod","attrs","sig","default","semi_token","TraitItemType","attrs","type_token","ident","generics","colon_token","bounds","default","semi_token","UseGlob","star_token","UseGroup","brace_token","items","UseName","ident","UsePath","ident","colon2_token","tree","UseRename","ident","as_token","rename","UseTree","Path","Name","Rename","Glob","Group","File","shebang","attrs","items","Lifetime","apostrophe","ident","Lit","Str","ByteStr","Byte","Char","Int","Float","Bool","Verbatim","LitBool","value","span","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","StrStyle","Cooked","Raw","Macro","path","bang_token","delimiter","tokens","MacroDelimiter","Paren","Brace","Bracket","Data","Struct","Enum","Union","DataEnum","enum_token","brace_token","variants","DataStruct","struct_token","fields","semi_token","DataUnion","union_token","fields","DeriveInput","attrs","vis","ident","generics","data","BinOp","Add","Sub","Mul","Div","Rem","And","Or","BitXor","BitAnd","BitOr","Shl","Shr","Eq","Lt","Le","Ne","Ge","Gt","AddEq","SubEq","MulEq","DivEq","RemEq","BitXorEq","BitAndEq","BitOrEq","ShlEq","ShrEq","UnOp","Deref","Not","Neg","Block","brace_token","stmts","Local","attrs","let_token","pat","init","semi_token","Stmt","Local","Item","Expr","Semi","Abi","extern_token","name","BareFnArg","attrs","name","ty","ReturnType","Default","Type","Type","Array","BareFn","Group","ImplTrait","Infer","Macro","Never","Paren","Path","Ptr","Reference","Slice","TraitObject","Tuple","Verbatim","TypeArray","bracket_token","elem","semi_token","len","TypeBareFn","lifetimes","unsafety","abi","fn_token","paren_token","inputs","variadic","output","TypeGroup","group_token","elem","TypeImplTrait","impl_token","bounds","TypeInfer","underscore_token","TypeMacro","mac","TypeNever","bang_token","TypeParen","paren_token","elem","TypePath","qself","path","TypePtr","star_token","const_token","mutability","elem","TypeReference","and_token","lifetime","mutability","elem","TypeSlice","bracket_token","elem","TypeTraitObject","dyn_token","bounds","TypeTuple","paren_token","elems","Variadic","attrs","dots","FieldPat","attrs","member","colon_token","pat","Pat","Box","Ident","Lit","Macro","Or","Path","Range","Reference","Rest","Slice","Struct","Tuple","TupleStruct","Type","Verbatim","Wild","PatBox","attrs","box_token","pat","PatIdent","attrs","by_ref","mutability","ident","subpat","PatLit","attrs","expr","PatMacro","attrs","mac","PatOr","attrs","leading_vert","cases","PatPath","attrs","qself","path","PatRange","attrs","lo","limits","hi","PatReference","attrs","and_token","mutability","pat","PatRest","attrs","dot2_token","PatSlice","attrs","bracket_token","elems","PatStruct","attrs","path","brace_token","fields","dot2_token","PatTuple","attrs","paren_token","elems","PatTupleStruct","attrs","path","pat","PatType","attrs","pat","colon_token","ty","PatWild","attrs","underscore_token","AngleBracketedGenericArguments","colon2_token","lt_token","args","gt_token","Binding","ident","eq_token","ty","Constraint","ident","colon_token","bounds","GenericArgument","Lifetime","Type","Binding","Constraint","Const","ParenthesizedGenericArguments","paren_token","inputs","output","Path","leading_colon","segments","PathArguments","None","AngleBracketed","Parenthesized","PathSegment","ident","arguments","QSelf","lt_token","ty","position","as_token","gt_token","Error","Result","parse","parse2","parse_str","parse_file","parenthesized","braced","bracketed","Token","parse_quote","parse_macro_input","custom_keyword","custom_punctuation","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","span","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","eq","eq","hash","cmp","fmt","clone","partial_cmp","fmt","span","fmt","to_tokens","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","peek","display","parse_any","unraw","advance_to","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next_back","next_back","next_back","next_back","next_back","next_back","len","len","len","len","len","len","extend","extend","extend","into_iter","into_iter","into_iter","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","partial_cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","fmt","span","fmt","span","new","span","set_span","parse_meta","parse_args","parse_args_with","parse_outer","parse_inner","path","parse_named","parse_unnamed","iter","iter_mut","len","is_empty","parse_without_eager_brace","type_params","type_params_mut","lifetimes","lifetimes_mut","const_params","const_params_mut","make_where_clause","split_for_impl","as_turbofish","new","receiver","lifetime","new","span","set_span","new","suffix","span","set_span","new","value","parse","parse_with","span","set_span","suffix","new","value","span","set_span","suffix","new","value","span","set_span","suffix","new","value","span","set_span","suffix","new","base10_digits","base10_parse","suffix","span","set_span","new","base10_digits","base10_parse","suffix","span","set_span","new","value","span","set_span","parse_body","parse_body_with","parse_within","without_plus","without_plus","without_plus","parse_mod_style","is_ident","get_ident","is_empty","visit_abi","visit_angle_bracketed_generic_arguments","visit_arm","visit_attr_style","visit_attribute","visit_bare_fn_arg","visit_bin_op","visit_binding","visit_block","visit_bound_lifetimes","visit_const_param","visit_constraint","visit_data","visit_data_enum","visit_data_struct","visit_data_union","visit_derive_input","visit_expr","visit_expr_array","visit_expr_assign","visit_expr_assign_op","visit_expr_async","visit_expr_await","visit_expr_binary","visit_expr_block","visit_expr_box","visit_expr_break","visit_expr_call","visit_expr_cast","visit_expr_closure","visit_expr_continue","visit_expr_field","visit_expr_for_loop","visit_expr_group","visit_expr_if","visit_expr_index","visit_expr_let","visit_expr_lit","visit_expr_loop","visit_expr_macro","visit_expr_match","visit_expr_method_call","visit_expr_paren","visit_expr_path","visit_expr_range","visit_expr_reference","visit_expr_repeat","visit_expr_return","visit_expr_struct","visit_expr_try","visit_expr_try_block","visit_expr_tuple","visit_expr_type","visit_expr_unary","visit_expr_unsafe","visit_expr_while","visit_expr_yield","visit_field","visit_field_pat","visit_field_value","visit_fields","visit_fields_named","visit_fields_unnamed","visit_file","visit_fn_arg","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_type","visit_generic_argument","visit_generic_method_argument","visit_generic_param","visit_generics","visit_ident","visit_impl_item","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_type","visit_index","visit_item","visit_item_const","visit_item_enum","visit_item_extern_crate","visit_item_fn","visit_item_foreign_mod","visit_item_impl","visit_item_macro","visit_item_macro2","visit_item_mod","visit_item_static","visit_item_struct","visit_item_trait","visit_item_trait_alias","visit_item_type","visit_item_union","visit_item_use","visit_label","visit_lifetime","visit_lifetime_def","visit_lit","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_local","visit_macro","visit_macro_delimiter","visit_member","visit_meta","visit_meta_list","visit_meta_name_value","visit_method_turbofish","visit_nested_meta","visit_parenthesized_generic_arguments","visit_pat","visit_pat_box","visit_pat_ident","visit_pat_lit","visit_pat_macro","visit_pat_or","visit_pat_path","visit_pat_range","visit_pat_reference","visit_pat_rest","visit_pat_slice","visit_pat_struct","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_type","visit_pat_wild","visit_path","visit_path_arguments","visit_path_segment","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_type","visit_qself","visit_range_limits","visit_receiver","visit_return_type","visit_signature","visit_span","visit_stmt","visit_trait_bound","visit_trait_bound_modifier","visit_trait_item","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_type","visit_type","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","visit_type_slice","visit_type_trait_object","visit_type_tuple","visit_un_op","visit_use_glob","visit_use_group","visit_use_name","visit_use_path","visit_use_rename","visit_use_tree","visit_variadic","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visit_visibility","visit_where_clause","visit_where_predicate","visit_abi_mut","visit_angle_bracketed_generic_arguments_mut","visit_arm_mut","visit_attr_style_mut","visit_attribute_mut","visit_bare_fn_arg_mut","visit_bin_op_mut","visit_binding_mut","visit_block_mut","visit_bound_lifetimes_mut","visit_const_param_mut","visit_constraint_mut","visit_data_mut","visit_data_enum_mut","visit_data_struct_mut","visit_data_union_mut","visit_derive_input_mut","visit_expr_mut","visit_expr_array_mut","visit_expr_assign_mut","visit_expr_assign_op_mut","visit_expr_async_mut","visit_expr_await_mut","visit_expr_binary_mut","visit_expr_block_mut","visit_expr_box_mut","visit_expr_break_mut","visit_expr_call_mut","visit_expr_cast_mut","visit_expr_closure_mut","visit_expr_continue_mut","visit_expr_field_mut","visit_expr_for_loop_mut","visit_expr_group_mut","visit_expr_if_mut","visit_expr_index_mut","visit_expr_let_mut","visit_expr_lit_mut","visit_expr_loop_mut","visit_expr_macro_mut","visit_expr_match_mut","visit_expr_method_call_mut","visit_expr_paren_mut","visit_expr_path_mut","visit_expr_range_mut","visit_expr_reference_mut","visit_expr_repeat_mut","visit_expr_return_mut","visit_expr_struct_mut","visit_expr_try_mut","visit_expr_try_block_mut","visit_expr_tuple_mut","visit_expr_type_mut","visit_expr_unary_mut","visit_expr_unsafe_mut","visit_expr_while_mut","visit_expr_yield_mut","visit_field_mut","visit_field_pat_mut","visit_field_value_mut","visit_fields_mut","visit_fields_named_mut","visit_fields_unnamed_mut","visit_file_mut","visit_fn_arg_mut","visit_foreign_item_mut","visit_foreign_item_fn_mut","visit_foreign_item_macro_mut","visit_foreign_item_static_mut","visit_foreign_item_type_mut","visit_generic_argument_mut","visit_generic_method_argument_mut","visit_generic_param_mut","visit_generics_mut","visit_ident_mut","visit_impl_item_mut","visit_impl_item_const_mut","visit_impl_item_macro_mut","visit_impl_item_method_mut","visit_impl_item_type_mut","visit_index_mut","visit_item_mut","visit_item_const_mut","visit_item_enum_mut","visit_item_extern_crate_mut","visit_item_fn_mut","visit_item_foreign_mod_mut","visit_item_impl_mut","visit_item_macro_mut","visit_item_macro2_mut","visit_item_mod_mut","visit_item_static_mut","visit_item_struct_mut","visit_item_trait_mut","visit_item_trait_alias_mut","visit_item_type_mut","visit_item_union_mut","visit_item_use_mut","visit_label_mut","visit_lifetime_mut","visit_lifetime_def_mut","visit_lit_mut","visit_lit_bool_mut","visit_lit_byte_mut","visit_lit_byte_str_mut","visit_lit_char_mut","visit_lit_float_mut","visit_lit_int_mut","visit_lit_str_mut","visit_local_mut","visit_macro_mut","visit_macro_delimiter_mut","visit_member_mut","visit_meta_mut","visit_meta_list_mut","visit_meta_name_value_mut","visit_method_turbofish_mut","visit_nested_meta_mut","visit_parenthesized_generic_arguments_mut","visit_pat_mut","visit_pat_box_mut","visit_pat_ident_mut","visit_pat_lit_mut","visit_pat_macro_mut","visit_pat_or_mut","visit_pat_path_mut","visit_pat_range_mut","visit_pat_reference_mut","visit_pat_rest_mut","visit_pat_slice_mut","visit_pat_struct_mut","visit_pat_tuple_mut","visit_pat_tuple_struct_mut","visit_pat_type_mut","visit_pat_wild_mut","visit_path_mut","visit_path_arguments_mut","visit_path_segment_mut","visit_predicate_eq_mut","visit_predicate_lifetime_mut","visit_predicate_type_mut","visit_qself_mut","visit_range_limits_mut","visit_receiver_mut","visit_return_type_mut","visit_signature_mut","visit_span_mut","visit_stmt_mut","visit_trait_bound_mut","visit_trait_bound_modifier_mut","visit_trait_item_mut","visit_trait_item_const_mut","visit_trait_item_macro_mut","visit_trait_item_method_mut","visit_trait_item_type_mut","visit_type_mut","visit_type_array_mut","visit_type_bare_fn_mut","visit_type_group_mut","visit_type_impl_trait_mut","visit_type_infer_mut","visit_type_macro_mut","visit_type_never_mut","visit_type_param_mut","visit_type_param_bound_mut","visit_type_paren_mut","visit_type_path_mut","visit_type_ptr_mut","visit_type_reference_mut","visit_type_slice_mut","visit_type_trait_object_mut","visit_type_tuple_mut","visit_un_op_mut","visit_use_glob_mut","visit_use_group_mut","visit_use_name_mut","visit_use_path_mut","visit_use_rename_mut","visit_use_tree_mut","visit_variadic_mut","visit_variant_mut","visit_vis_crate_mut","visit_vis_public_mut","visit_vis_restricted_mut","visit_visibility_mut","visit_where_clause_mut","visit_where_predicate_mut","peek","error"],"q":["syn","syn::tokensyn","syn::buffer","","","","","","","","","","","","","","","syn","syn::ext","","","","syn","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","syn::spanned","","syn","syn::visitsyn","syn::visit_mutsyn","syn::parse","syn::parse::discouraged","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synsyn::tokensynsyn::buffer","","","","","","","","","","","","","","","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::tokensyn","","","","syn::parse","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse","","syn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse","syn::punctuated","","","","","","","","","","","","","","syn::parse","syn","syn::punctuated","syn::parse","syn::punctuated","","","","","","","","","","","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","syn::buffer","syn::punctuated","","","","","","synsyn::parse","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","syn::punctuated","syn","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","","","syn::buffer","syn::punctuated","synsyn::token","","","","","","","","","","","","","","","","","","","","","","syn::parse","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","syn::punctuated","synsyn::parse","","syn","","","syn::parse","","syn::punctuated","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn","","","","","","","","","","","","syn::punctuated","synsyn::punctuated","","syn::token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synsyn::punctuated","","syn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::visitsyn::visit_mutsyn::parse",""],"d":["Tokens representing Rust punctuation, keywords, and …","Marker trait for types that represent single tokens.","<code>_</code>","","<code>abstract</code>","","<code>as</code>","","<code>async</code>","","<code>auto</code>","","<code>await</code>","","<code>become</code>","","<code>box</code>","","<code>break</code>","","<code>const</code>","","<code>continue</code>","","<code>crate</code>","","<code>default</code>","","<code>do</code>","","<code>dyn</code>","","<code>else</code>","","<code>enum</code>","","<code>extern</code>","","<code>final</code>","","<code>fn</code>","","<code>for</code>","","<code>if</code>","","<code>impl</code>","","<code>in</code>","","<code>let</code>","","<code>loop</code>","","<code>macro</code>","","<code>match</code>","","<code>mod</code>","","<code>move</code>","","<code>mut</code>","","<code>override</code>","","<code>priv</code>","","<code>pub</code>","","<code>ref</code>","","<code>return</code>","","<code>Self</code>","","<code>self</code>","","<code>static</code>","","<code>struct</code>","","<code>super</code>","","<code>trait</code>","","<code>try</code>","","<code>type</code>","","<code>typeof</code>","","<code>union</code>","","<code>unsafe</code>","","<code>unsized</code>","","<code>use</code>","","<code>virtual</code>","","<code>where</code>","","<code>while</code>","","<code>yield</code>","","<code>+</code>","","<code>+=</code>","","<code>&</code>","","<code>&&</code>","","<code>&=</code>","","<code>@</code>","","<code>!</code>","","<code>^</code>","","<code>^=</code>","","<code>:</code>","","<code>::</code>","","<code>,</code>","","<code>/</code>","","<code>/=</code>","","<code>$</code>","","<code>.</code>","","<code>..</code>","","<code>...</code>","","<code>..=</code>","","<code>=</code>","","<code>==</code>","","<code>>=</code>","","<code>></code>","","<code><=</code>","","<code><</code>","","<code>*=</code>","","<code>!=</code>","","<code>|</code>","","<code>|=</code>","","<code>||</code>","","<code>#</code>","","<code>?</code>","","<code>-></code>","","<code><-</code>","","<code>%</code>","","<code>%=</code>","","<code>=></code>","","<code>;</code>","","<code><<</code>","","<code><<=</code>","","<code>>></code>","","<code>>>=</code>","","<code>*</code>","","<code>-</code>","","<code>-=</code>","","<code>~</code>","","<code>{...}</code>","","","<code>[...]</code>","","","<code>(...)</code>","","","None-delimited group","","","A stably addressed token buffer supporting efficient …","A buffer that can be efficiently traversed multiple …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a cursor referencing the first token in the …","A cheaply copyable cursor into a <code>TokenBuffer</code>.","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the …","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","If the cursor is pointing at an <code>Punct</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","Copies all remaining tokens visible from this cursor into …","If the cursor is pointing at a <code>TokenTree</code>, returns it …","Returns the <code>Span</code> of the current token, or …","Extension traits to provide parsing methods on foreign …","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of …","A punctuated sequence of syntax tree nodes separated by …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","Creates an empty punctuated sequence.","Determines whether this punctuated sequence is empty, …","Returns the number of syntax tree nodes in this …","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Appends a syntax tree node onto the end of this …","Appends a trailing punctuation onto the end of this …","Removes the last punctuated pair from this sequence, or …","Determines whether this punctuated sequence ends with a …","Returns true if either this <code>Punctuated</code> is empty, or it …","Appends a syntax tree node onto the end of this …","Inserts an element at position <code>index</code>.","Clears the sequence of all values and punctuation, making …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.","An iterator over mutably borrowed pairs of type …","An iterator over owned pairs of type <code>Pair<T, P></code>.","An iterator over owned values of type <code>T</code>.","An iterator over borrowed values of type <code>&T</code>.","An iterator over mutably borrowed values of type <code>&mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","","","Extracts the syntax tree node from this punctuated pair, …","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","Borrows the punctuation from this punctuated pair, unless …","Creates a punctuated pair out of a syntax tree node and …","Produces this punctuated pair as a tuple of syntax tree …","A trait that can provide the <code>Span</code> of the complete …","A trait that can provide the <code>Span</code> of the complete …","Returns a <code>Span</code> covering the complete contents of this …","Syntax tree traversal to walk a shared borrow of a syntax …","Syntax tree traversal to walk a shared borrow of a syntax …yntax tree traversal to mutate an exclusive borrow of a …","Syntax tree traversal to mutate an exclusive borrow of a …arsing interface for parsing a token stream into a …","Extensions to the parsing API with niche applicability.","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","Error returned when a Syn parser cannot parse the input …","The result of a Syn parser.","Support for checking the next token in a stream to decide …","Types that can be parsed by looking at just one token.","Parsing interface implemented by all types that can be …","","Input to a Syn parser function.","Cursor position within a buffered token stream.","Cursor state associated with speculative parsing.","Triggers an error at the current position of the parse …","Parses a syntax tree node of type <code>T</code>, advancing the …","Calls the given parser function to parse a syntax tree …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","Parses zero or more occurrences of <code>T</code> separated by …","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Forks a parse stream so that parsing tokens out of either …","Triggers an error at the current position of the parse …","Speculatively parses tokens from this parse stream, …","Returns the <code>Span</code> of the next token in the parse stream, or…","Provides low-level access to the token representation …","Parser that can parse Rust tokens into a particular …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse tokens of source code into the chosen syntax tree …","Parse a string of Rust code into the chosen syntax tree …","An empty syntax tree node that consumes no tokens when …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","The source location of the error.","Render the error as an invocation of <code>compile_error!</code>.","Render the error as an invocation of <code>compile_error!</code>.","Add another error message to self such that when …","A word of Rust code, which may be a keyword or legal …","Distinguishes between attributes that decorate an item …","","","An attribute like <code>#[repr(transparent)]</code>.","","","","","","Conventional argument type associated with an invocation …","Content of a compile-time structured attribute.","","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A structured list within an attribute, like …","","","","A name-value pair within an attribute, like …","","","","Element of a compile-time attribute list.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A Rust literal, like the <code>\\\"new_name\\\"</code> in …","A field of a struct or enum variant.","Attributes tagged on the field.","Visibility of the field.","Name of the field, if any.","","Type of the field.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","Unit struct or unit variant such as <code>None</code>.","Named fields of a struct or struct variant such as …","","","Unnamed fields of a tuple struct or tuple variant such as …","","","An enum variant.","Attributes tagged on the variant.","Name of the variant.","Content stored in the variant.","Explicit discriminant: <code>Variant = 1</code>","A crate-level visibility: <code>crate</code>.","","A public visibility level: <code>pub</code>.","","A visibility level restricted to some path: <code>pub(self)</code> or …","","","","","The visibility level of an item: inherited or <code>pub</code> or …","A public visibility level: <code>pub</code>.","A crate-level visibility: <code>crate</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","An inherited visibility, which usually means private.","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.","","","","","","","A field-value pair in a struct literal.","Attributes tagged on the field.","Name or index of the field.","The colon in <code>Struct { x: x }</code>. If written in shorthand like…","Value of the field.","An individual generic argument to a method, like <code>T</code>.","A type argument.","A const expression. Must be inside of a block.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","","","The <code>::<></code> explicit type parameters passed to a method call:…","","","","","Limit types of a range, inclusive or exclusive.","Inclusive at the beginning, exclusive at the end.","Inclusive at the beginning and end.","A Rust expression.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.","A method call expression: <code>x.foo::<T>(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&a</code> or <code>&mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","Tokens in expression position not interpreted by Syn.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","","","","An assignment expression: <code>a = compute()</code>.","","","","","A compound assignment expression: <code>counter += 1</code>.","","","","","An async block: <code>async { ... }</code>.","","","","","An await expression: <code>fut.await</code>.","","","","","A binary operation: <code>a + b</code>, <code>a * b</code>.","","","","","A blocked scope: <code>{ ... }</code>.","","","","A box expression: <code>box f</code>.","","","","A <code>break</code>, with an optional label to break and an optional …","","","","","A function call expression: <code>invoke(a, b)</code>.","","","","","A cast expression: <code>foo as f64</code>.","","","","","A closure expression: <code>|a, b| a + b</code>.","","","","","","","","","","A <code>continue</code>, with an optional label.","","","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","","","","","A for loop: <code>for pat in expr { ... }</code>.","","","","","","","","An expression contained within invisible delimiters.","","","","An <code>if</code> expression with an optional <code>else</code> block: …","","","","","","A square bracketed indexing expression: <code>vector[2]</code>.","","","","","A <code>let</code> guard: <code>let Some(x) = opt</code>.","","","","","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.","","","Conditionless loop: <code>loop { ... }</code>.","","","","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.","","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.","","","","","","A method call expression: <code>x.foo::<T>(a, b)</code>.","","","","","","","","A parenthesized expression: <code>(a + b)</code>.","","","","A path like <code>std::mem::replace</code> possibly containing generic …","","","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","","","","","A referencing operation: <code>&a</code> or <code>&mut a</code>.","","","","","","An array literal constructed from one repeated element: …","","","","","","A <code>return</code>, with an optional value to be returned.","","","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","","","","","","","A try-expression: <code>expr?</code>.","","","","A try block: <code>try { ... }</code>.","","","","A tuple expression: <code>(a, b, c, d)</code>.","","","","A type ascription expression: <code>foo: f64</code>.","","","","","A unary operation: <code>!x</code>, <code>*x</code>.","","","","An unsafe block: <code>unsafe { ... }</code>.","","","","A while loop: <code>while expr { ... }</code>.","","","","","","A yield expression: <code>yield expr</code>.","","","","The index of an unnamed tuple struct field.","","","A struct or tuple struct field accessed in a struct …","A named field like <code>self.x</code>.","An unnamed field like <code>self.0</code>.","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.","","","","","A const generic parameter: <code>const LENGTH: usize</code>.","","","","","","","","A generic type parameter, lifetime, or const generic: …","A generic type parameter: <code>T: Into<String></code>.","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.","A const generic parameter: <code>const LENGTH: usize</code>.","Lifetimes and type parameters attached to a declaration …","","","","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.","","","","","An equality predicate in a <code>where</code> clause (unsupported).","","","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.","","","","A type predicate in a <code>where</code> clause: …","Any lifetimes from a <code>for</code> binding","The type being bounded","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)","A trait used as a bound on a type parameter.","","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>","A modifier on a trait bound, currently only used for the <code>?</code>…","","","A generic type parameter: <code>T: Into<String></code>.","","","","","","","A trait or lifetime used as a bound on a type parameter.","","","A <code>where</code> clause in a definition: …","","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.","A type predicate in a <code>where</code> clause: …","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.","An equality predicate in a <code>where</code> clause (unsupported).","Returned by <code>Generics::split_for_impl</code>.","Returned by <code>TypeGenerics::as_turbofish</code>.","Returned by <code>Generics::split_for_impl</code>.","An argument in a function signature: the <code>n: usize</code> in …","The <code>self</code> argument of an associated method, whether taken …","A function argument accepted by pattern and type.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A macro invocation within an extern block.","Tokens in an <code>extern</code> block not interpreted by Syn.","A foreign function in an <code>extern</code> block.","","","","","A macro invocation within an extern block.","","","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","","","","","","","","","A foreign type in an <code>extern</code> block: <code>type void</code>.","","","","","","An item within an impl block.","An associated constant within an impl block.","A method within an impl block.","An associated type within an impl block.","A macro invocation within an impl block.","Tokens within an impl block not interpreted by Syn.","An associated constant within an impl block.","","","","","","","","","","","A macro invocation within an impl block.","","","","A method within an impl block.","","","","","","An associated type within an impl block.","","","","","","","","","","Things that can appear directly inside of a module or …","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo<A> { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: …","A type alias: …","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","Tokens forming an item not interpreted by Syn.","A constant item: <code>const MAX: u16 = 65535</code>.","","","","","","","","","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.","","","","","","","","An <code>extern crate</code> item: <code>extern crate serde</code>.","","","","","","","","A free-standing function: …","","","","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.","","","","","An impl block providing trait or associated items: …","","","","","","Trait this impl implements.","The Self type of the impl.","","","A macro invocation, which includes <code>macro_rules!</code> …","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","A 2.0-style declarative macro introduced by the <code>macro</code> …","","","","","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","","","","","","","A static item: <code>static BIKE: Shed = Shed(42)</code>.","","","","","","","","","","","A struct definition: <code>struct Foo<A> { x: A }</code>.","","","","","","","","A trait definition: <code>pub trait Iterator { ... }</code>.","","","","","","","","","","","","A trait alias: …","","","","","","","","","A type alias: …","","","","","","","","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.","","","","","","","A use declaration: <code>use std::collections::HashMap</code>.","","","","","","","The <code>self</code> argument of an associated method, whether taken …","","","","","A function signature in a trait or implementation: …","","","","","","","","","","","","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A macro invocation within the definition of a trait.","Tokens within the definition of a trait not interpreted …","An associated constant within the definition of a trait.","","","","","","","","A macro invocation within the definition of a trait.","","","","A trait method within the definition of a trait.","","","","","An associated type within the definition of a trait.","","","","","","","","","A glob import in a <code>use</code> item: <code>*</code>.","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","","","","An renamed identifier imported by a <code>use</code> item: …","","","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","An renamed identifier imported by a <code>use</code> item: …","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A complete file of Rust source code.","","","","A Rust lifetime: <code>\'a</code>.","","","A Rust literal such as a string or integer or boolean.","A UTF-8 string literal: <code>\\\"foo\\\"</code>.","A byte string literal: <code>b\\\"foo\\\"</code>.","A byte literal: <code>b\'f\'</code>.","A character literal: <code>\'a\'</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A raw token literal not interpreted by Syn.","A boolean literal: <code>true</code> or <code>false</code>.","","","A byte literal: <code>b\'f\'</code>.","A byte string literal: <code>b\\\"foo\\\"</code>.","A character literal: <code>\'a\'</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>\\\"foo\\\"</code>.","The style of a string literal, either plain quoted or a …","An ordinary string like <code>\\\"data\\\"</code>.","A raw string like <code>r##\\\"data\\\"##</code>.","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.","","","","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","","","","The storage of a struct, enum or union data structure.","A struct input to a <code>proc_macro_derive</code> macro.","An enum input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","An enum input to a <code>proc_macro_derive</code> macro.","","","","A struct input to a <code>proc_macro_derive</code> macro.","","","","An untagged union input to a <code>proc_macro_derive</code> macro.","","","Data structure sent to a <code>proc_macro_derive</code> macro.","Attributes tagged on the whole struct or enum.","Visibility of the struct or enum.","Name of the struct or enum.","Generics required to complete the definition.","Data within the struct or enum.","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.","The <code>+</code> operator (addition)","The <code>-</code> operator (subtraction)","The <code>*</code> operator (multiplication)","The <code>/</code> operator (division)","The <code>%</code> operator (modulus)","The <code>&&</code> operator (logical and)","The <code>||</code> operator (logical or)","The <code>^</code> operator (bitwise xor)","The <code>&</code> operator (bitwise and)","The <code>|</code> operator (bitwise or)","The <code><<</code> operator (shift left)","The <code>>></code> operator (shift right)","The <code>==</code> operator (equality)","The <code><</code> operator (less than)","The <code><=</code> operator (less than or equal to)","The <code>!=</code> operator (not equal to)","The <code>>=</code> operator (greater than or equal to)","The <code>></code> operator (greater than)","The <code>+=</code> operator","The <code>-=</code> operator","The <code>*=</code> operator","The <code>/=</code> operator","The <code>%=</code> operator","The <code>^=</code> operator","The <code>&=</code> operator","The <code>|=</code> operator","The <code><<=</code> operator","The <code>>>=</code> operator","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","The <code>*</code> operator for dereferencing","The <code>!</code> operator for logical inversion","The <code>-</code> operator for negation","A braced block containing Rust statements.","","Statements in a block","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","","","","","","A statement, usually ending in a semicolon.","A local (let) binding.","An item definition.","Expr without trailing semicolon.","Expression with trailing semicolon.","The binary interface of a function: <code>extern \\\"C\\\"</code>.","","","An argument in a function type: the <code>usize</code> in …","","","","Return type of a function signature.","Return type is not specified.","A particular type is returned.","The possible types that a Rust value could have.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -> bool</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the …","A macro in the type position.","The never type: <code>!</code>.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","A tuple type: <code>(A, B, C, String)</code>.","Tokens in type position not interpreted by Syn.","A fixed size array type: <code>[T; n]</code>.","","","","","A bare function type: <code>fn(usize) -> bool</code>.","","","","","","","","","A type contained within invisible delimiters.","","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","","","Indication that a type should be inferred by the …","","A macro in the type position.","","The never type: <code>!</code>.","","A parenthesized type equivalent to the inner type.","","","A path like <code>std::slice::Iter</code>, optionally qualified with a …","","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","","","","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.","","","","","A dynamically sized slice type: <code>[T]</code>.","","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …","","","A tuple type: <code>(A, B, C, String)</code>.","","","The variadic argument of a foreign function.","","","A single field in a struct pattern.","","","","","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with …","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: …","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","Tokens in pattern position not interpreted by Syn.","A pattern that matches any value: <code>_</code>.","A box pattern: <code>box v</code>.","","","","A pattern that binds a new variable: …","","","","","","A literal pattern: <code>0</code>.","","","A macro in pattern position.","","","A pattern that matches any one of a set of cases.","","","","A path pattern like <code>Color::Red</code>, optionally qualified with …","","","","A range pattern: <code>1..=2</code>.","","","","","A reference pattern: <code>&mut var</code>.","","","","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","","","A dynamically sized slice pattern: …","","","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","","","","","","A tuple pattern: <code>(a, b)</code>.","","","","A tuple struct or tuple variant pattern: …","","","","A type ascription pattern: <code>foo: f64</code>.","","","","","A pattern that matches any value: <code>_</code>.","","","Angle bracketed arguments of a path segment: the <code><K, V></code> …","","","","","A binding (equality constraint) on an associated type: …","","","","An associated type bound: <code>Iterator<Item: Display></code>.","","","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.","A lifetime argument.","A type argument.","A binding (equality constraint) on an associated type: …","An associated type bound: <code>Iterator<Item: Display></code>.","A const expression. Must be inside of a block.","Arguments of a function path segment: the <code>(A, B) -> C</code> in …","","<code>(A, B)</code>","<code>C</code>","A path at which a named item is exported (e.g. …","","","Angle bracketed or parenthesized arguments of a path …","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.","A segment of a path together with any path arguments on …","","","The explicit Self type in a qualified path: the <code>T</code> in …","","","","","","Error returned when a Syn parser cannot parse the input …","The result of a Syn parser.","Parse tokens of source code into the chosen syntax tree …","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parse the content of a file of Rust code.","Parse a set of parentheses and expose their content to …","Parse a set of curly braces and expose their content to …","Parse a set of square brackets and expose their content …","A type-macro that expands to the name of the Rust type …","Quasi-quotation macro that accepts input like the <code>quote!</code> …","Parse the input TokenStream of a macro, triggering a …","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …reates a new <code>Ident</code> with the given <code>string</code> as well as the …","Returns the span of this <code>Ident</code>.","Configures the span of this <code>Ident</code>, possibly changing its …","Parses the content of the attribute, consisting of the …","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parses zero or more outer attributes from the stream.","Parses zero or more inner attributes from the stream.","Returns the identifier that begins this structured meta …","Parses a named (braced struct) field.","Parses an unnamed (tuple struct) field.","Get an iterator over the borrowed [<code>Field</code>] items in this …","Get an iterator over the mutably borrowed [<code>Field</code>] items …","Returns the number of fields.","Returns <code>true</code> if there are zero fields.","An alternative to the primary <code>Expr::parse</code> parser (from the…","Returns an Iterator<Item = &TypeParam> over the type …","Returns an Iterator<Item = &mut TypeParam> over the type …","Returns an Iterator<Item = &LifetimeDef> over the …","Returns an Iterator<Item = &mut LifetimeDef> over the …","Returns an Iterator<Item = &ConstParam> over the constant …","Returns an Iterator<Item = &mut ConstParam> over the …","Initializes an empty <code>where</code>-clause if there is not one …","Split a type’s generics into the pieces required for …","Turn a type’s generics like <code><X, Y></code> into a turbofish …","","A method’s <code>self</code> receiver, such as <code>&self</code> or …","","Panics","","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","Parse a syntax tree node from the content of this string …","Invoke parser on the content of this string literal.","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number type.","","","","","","","","","","","","","","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the body of a block as zero or more statements, …","In some positions, types may not contain the <code>+</code> character, …","","","Parse a <code>Path</code> containing no path arguments on any of its …","Determines whether this is a path of length 1 equal to …","If this path consists of a single ident, returns the …ooks at the next token in the parse stream to determine …","Triggers an error at the current position of the parse …"],"i":[0,0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,23,0,24,0,25,0,26,0,27,0,28,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,36,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,44,0,45,0,46,0,47,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,58,0,59,0,60,0,61,0,62,0,63,0,64,0,65,0,66,0,67,0,68,0,69,0,70,0,71,0,72,0,73,0,74,0,75,0,76,0,77,0,78,0,79,0,80,0,81,0,82,0,83,0,84,0,85,0,86,0,87,0,88,0,89,0,90,0,91,0,92,0,93,0,94,0,95,0,96,0,97,0,98,0,99,0,100,100,0,101,101,0,102,102,0,103,103,0,0,104,104,104,0,105,105,105,105,105,105,105,105,105,105,0,0,106,106,106,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,0,0,108,108,108,108,108,108,108,108,0,0,109,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,0,0,113,0,0,0,114,115,115,115,115,115,115,115,115,115,115,115,115,115,0,116,116,116,116,0,117,117,117,117,117,117,0,0,118,118,0,119,119,119,119,119,0,0,120,120,120,0,121,121,121,0,122,122,122,0,123,123,0,124,124,124,124,124,0,125,125,125,0,126,126,0,127,127,0,128,128,128,128,0,129,0,130,0,131,131,131,131,0,132,132,132,132,0,133,133,133,133,133,133,0,134,134,134,134,0,135,135,0,136,136,0,137,137,137,137,0,138,138,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,140,140,140,0,141,141,141,141,0,142,142,142,142,0,143,143,143,143,0,144,144,144,144,0,145,145,145,145,0,146,146,146,0,147,147,147,0,148,148,148,148,0,149,149,149,149,0,150,150,150,150,0,151,151,151,151,151,151,151,151,151,0,152,152,152,0,153,153,153,153,0,154,154,154,154,154,154,154,0,155,155,155,0,156,156,156,156,156,0,157,157,157,157,0,158,158,158,158,158,0,159,159,0,160,160,160,160,0,161,161,0,162,162,162,162,162,0,163,163,163,163,163,163,163,0,164,164,164,0,165,165,165,0,166,166,166,166,0,167,167,167,167,167,0,168,168,168,168,168,0,169,169,169,0,170,170,170,170,170,170,0,171,171,171,0,172,172,172,0,173,173,173,0,174,174,174,174,0,175,175,175,0,176,176,176,0,177,177,177,177,177,0,178,178,178,0,179,179,0,180,180,0,181,181,181,181,0,182,182,182,182,182,182,182,0,183,183,183,0,184,184,184,184,0,185,185,185,185,0,186,186,186,0,187,187,187,0,188,188,188,188,0,189,189,189,189,0,190,190,0,191,191,191,191,191,191,0,192,192,0,193,193,0,194,194,194,0,0,0,0,195,195,0,196,196,196,196,196,0,197,197,197,197,0,198,198,198,0,199,199,199,199,199,199,199,199,0,200,200,200,200,200,0,201,201,201,201,201,0,202,202,202,202,202,202,202,202,202,202,0,203,203,203,0,204,204,204,204,204,0,205,205,205,205,205,205,205,205,205,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,207,207,207,207,207,207,207,207,207,0,208,208,208,208,208,208,208,0,209,209,209,209,209,209,209,0,210,210,210,210,0,211,211,211,211,0,212,212,212,212,212,212,212,212,212,0,213,213,213,213,0,214,214,214,214,214,0,215,215,215,215,215,215,0,216,216,216,216,216,216,216,216,216,216,0,217,217,217,217,217,217,217,0,218,218,218,218,218,218,218,218,218,218,218,0,219,219,219,219,219,219,219,219,0,220,220,220,220,220,220,220,220,0,221,221,221,221,221,221,0,222,222,222,222,222,222,0,223,223,223,223,0,224,224,224,224,224,224,224,224,224,224,224,0,225,225,225,225,225,0,226,226,226,226,226,226,226,0,227,227,227,0,228,228,228,228,0,229,229,229,229,229,229,229,229,0,230,0,231,231,0,232,0,233,233,233,0,234,234,234,0,235,235,235,235,235,0,236,236,236,0,237,237,0,238,238,238,238,238,238,238,238,0,239,239,0,0,0,0,0,0,0,240,240,0,241,241,241,241,0,242,242,242,0,243,243,243,0,244,244,244,0,245,245,245,0,246,246,0,247,247,247,247,247,0,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,0,249,249,249,0,250,250,0,251,251,251,251,251,0,252,252,252,252,0,253,253,0,254,254,254,0,255,255,0,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,0,257,257,257,257,0,258,258,258,258,258,258,258,258,0,259,259,0,260,260,0,261,0,262,0,263,0,264,264,0,265,265,0,266,266,266,266,0,267,267,267,267,0,268,268,0,269,269,0,270,270,0,271,271,0,272,272,272,272,0,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,0,274,274,274,0,275,275,275,275,275,0,276,276,0,277,277,0,278,278,278,0,279,279,279,0,280,280,280,280,0,281,281,281,281,0,282,282,0,283,283,283,0,284,284,284,284,284,0,285,285,285,0,286,286,286,0,287,287,287,287,0,288,288,0,289,289,289,289,0,290,290,290,0,291,291,291,0,292,292,292,292,292,0,293,293,293,0,294,294,0,295,295,295,0,296,296,0,297,297,297,297,297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,298,298,298,298,298,298,298,298,298,298,298,119,119,119,119,119,119,119,119,119,119,118,118,118,118,118,118,118,118,118,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,128,128,128,128,128,128,128,128,128,128,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,124,124,124,124,124,124,124,124,124,124,132,132,132,132,132,132,132,132,132,132,130,130,130,130,130,130,130,130,130,130,129,129,129,129,129,129,129,129,129,129,131,131,131,131,131,131,131,131,131,131,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,180,180,180,180,180,180,180,180,180,180,179,179,179,179,179,179,179,179,179,179,137,137,137,137,137,137,137,137,137,137,135,135,135,135,135,135,135,135,135,135,134,134,134,134,134,134,134,134,134,134,136,136,136,136,136,136,136,136,136,136,133,133,133,133,133,133,133,133,133,133,138,138,138,138,138,138,138,138,138,184,184,184,184,184,184,184,184,184,184,183,183,183,183,183,183,183,183,183,183,191,191,191,191,191,191,191,191,191,191,185,185,185,185,185,185,185,185,185,185,182,182,182,182,182,182,182,182,182,182,299,299,299,299,299,299,299,299,299,299,300,300,300,300,300,300,300,300,300,300,301,301,301,301,301,301,301,301,301,301,181,181,181,181,181,181,181,181,181,181,192,192,192,192,192,192,192,192,192,192,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,188,188,188,188,188,188,188,188,188,188,187,187,187,187,187,187,187,187,187,187,186,186,186,186,186,186,186,186,186,186,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,235,235,235,235,235,235,235,235,235,235,233,233,233,233,233,233,233,233,233,233,232,232,232,232,232,232,232,232,232,232,234,234,234,234,234,234,234,234,234,234,230,230,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,231,231,231,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,198,198,198,198,198,198,198,198,198,198,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,227,227,227,227,227,227,227,227,227,227,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,203,203,203,203,203,203,203,203,203,203,224,224,224,224,224,224,224,224,224,224,195,195,195,195,195,195,195,195,195,195,223,223,223,223,223,223,223,223,223,223,236,236,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,238,302,302,302,302,302,302,302,302,302,302,303,303,303,303,303,303,303,303,303,303,304,304,304,304,304,304,304,304,304,304,305,305,305,305,305,305,305,305,305,305,306,306,306,306,306,306,306,306,306,306,306,307,307,307,307,307,307,307,307,307,307,307,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,247,247,247,247,247,247,247,247,247,247,243,243,243,243,243,243,243,243,243,245,245,245,245,245,245,245,245,245,244,244,244,244,244,244,244,244,244,246,246,246,246,246,246,246,246,246,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,252,252,252,252,252,252,252,252,252,252,251,251,251,251,251,251,251,251,251,251,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,270,270,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,271,271,271,271,271,271,271,271,271,271,255,255,255,255,255,255,255,255,255,255,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,288,288,288,272,272,272,272,272,272,272,272,272,272,294,294,294,294,294,294,294,294,294,294,296,296,296,296,296,296,296,296,296,296,295,295,295,295,295,295,295,295,295,295,292,292,292,292,292,292,292,292,292,292,289,289,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,291,291,293,293,293,293,293,293,293,293,293,293,297,297,297,297,297,297,297,297,297,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,107,107,107,107,107,107,107,107,107,107,308,308,308,308,308,308,308,308,308,308,309,309,309,309,309,309,309,309,310,310,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,311,311,312,312,312,312,312,312,312,312,312,312,313,313,313,313,313,313,313,313,108,108,108,108,108,108,108,108,108,108,314,314,314,314,314,314,314,117,117,117,117,117,117,117,117,117,117,115,115,115,115,115,115,115,115,114,114,114,114,114,114,114,114,114,315,315,315,315,315,315,315,298,298,298,298,298,298,298,298,298,298,298,237,237,238,238,302,302,303,303,304,304,305,305,306,306,307,307,239,239,1,1,102,102,100,100,101,101,103,103,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,298,298,298,298,115,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,298,120,121,122,123,128,126,127,132,139,161,140,168,159,164,156,154,160,162,147,149,163,173,145,175,150,174,158,151,141,142,153,157,166,167,148,152,169,171,178,172,143,177,136,134,170,176,146,138,165,180,133,179,184,183,185,181,191,192,189,190,182,193,194,206,213,214,209,222,235,216,207,224,210,195,223,215,211,196,197,199,200,198,220,217,208,221,218,219,225,226,228,229,227,212,201,202,204,205,203,236,237,238,302,303,304,305,306,307,239,241,247,248,249,250,252,256,268,257,266,267,258,263,261,270,262,265,255,269,260,259,264,254,253,273,294,292,289,293,296,290,291,315,115,298,298,298,298,298,298,120,120,120,123,123,125,125,132,132,132,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,179,183,183,183,191,192,192,194,194,194,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,247,247,247,235,235,235,235,235,196,196,196,196,225,225,225,225,201,201,201,201,195,195,238,238,238,238,238,238,238,306,307,243,243,243,256,256,256,256,256,256,256,256,256,256,256,256,256,256,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,294,296,117,308,309,310,311,312,313,308,309,310,311,312,313,107,107,117,125,107,117,308,308,309,309,310,310,311,311,312,312,313,313,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,299,300,301,237,302,303,304,305,306,307,105,107,308,310,311,312,108,253,289,133,118,119,254,248,290,250,181,182,291,243,244,245,246,247,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,124,272,134,125,126,127,236,195,196,197,198,199,200,292,135,183,184,201,202,203,204,205,179,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,136,185,238,239,251,241,242,180,120,121,122,137,123,293,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,294,295,296,186,187,188,297,138,223,255,224,252,189,190,225,226,227,228,229,256,257,258,259,260,261,262,263,191,192,264,265,266,267,268,269,270,249,230,231,232,233,234,235,271,128,129,130,131,132,193,194,114,117,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,184,181,295,107,237,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,180,179,299,300,301,237,302,303,304,305,306,307,105,107,253,289,133,118,119,254,248,290,250,181,182,291,243,244,245,246,247,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,124,272,134,125,126,127,236,195,196,197,198,199,200,292,135,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,136,185,238,239,251,241,242,120,121,122,137,123,293,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,294,295,296,186,187,188,297,138,223,255,224,252,189,190,225,226,227,228,229,256,257,258,259,260,261,262,263,191,192,264,265,266,267,268,269,270,249,230,231,232,233,234,235,271,128,129,130,131,132,193,194,237,1,54,56,59,60,61,63,65,66,68,69,73,76,78,81,84,85,88,91,96,97,99,114,1,54,56,59,60,61,63,65,66,68,69,73,76,78,81,84,85,88,91,96,97,99,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,299,300,301,302,303,304,305,306,307,239,107,253,289,133,118,119,254,248,290,250,181,182,291,243,244,245,246,247,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,124,272,134,125,126,127,236,195,196,197,198,199,200,292,135,183,184,201,202,203,204,205,179,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,136,237,185,238,251,241,242,180,120,121,122,137,123,293,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,294,295,296,186,187,188,297,138,223,255,224,252,189,190,225,226,227,228,229,256,257,258,259,260,261,262,263,191,192,264,265,266,267,268,269,270,249,230,231,232,233,234,235,271,128,129,130,131,132,193,194,115,117,237,306,307,115,117,107,107,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,180,179,299,300,301,237,302,303,304,305,306,307,107,253,289,133,118,119,254,248,290,250,181,182,291,243,244,245,246,247,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,124,272,134,125,126,127,236,195,196,197,198,199,200,292,135,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,136,185,238,239,251,241,242,120,121,122,137,123,293,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,294,295,296,186,187,188,297,138,223,255,224,252,189,190,225,226,227,228,229,256,257,258,259,260,261,262,263,191,192,264,265,266,267,268,269,270,249,230,231,232,233,234,235,271,128,129,130,131,132,193,194,107,107,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,120,123,119,121,122,125,132,128,126,127,124,130,129,131,139,147,140,149,163,137,135,173,145,175,159,150,174,158,156,177,154,160,162,143,144,172,178,151,176,146,141,142,153,180,179,157,166,165,167,148,152,169,161,170,168,155,164,171,136,134,133,183,192,194,184,299,300,301,181,185,191,189,190,182,193,188,187,186,206,235,196,225,201,195,209,222,216,207,210,215,211,220,208,217,221,218,219,212,213,214,233,232,234,230,231,226,228,229,227,202,204,205,203,197,199,200,198,224,223,236,237,238,302,303,304,305,306,307,239,241,247,248,249,250,252,251,256,268,257,266,267,258,263,270,265,269,260,259,264,261,262,255,254,271,253,273,288,275,284,286,287,279,285,274,281,282,276,280,283,277,278,272,294,296,295,292,289,290,291,293,107,108,180,180,179,179,298,298,298,119,119,119,119,119,120,124,124,125,125,125,125,139,184,184,184,184,184,184,184,184,300,185,224,223,237,237,237,238,238,238,238,302,302,302,302,302,302,302,303,303,303,303,303,304,304,304,304,304,305,305,305,305,305,306,306,306,306,306,306,307,307,307,307,307,307,239,239,239,239,241,241,250,256,255,269,294,294,294,295,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,314,314],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]]],null,null,[[["tokenstream",3]]],null,null,[[["tokenstream",3]]],null,null,[[["tokenstream",3]]],null,null,[[["tokenstream",3]],["tokenbuffer",3]],[[["tokenstream",3]],["tokenbuffer",3]],[[],["cursor",3]],null,[[]],[[],["bool",15]],[[["delimiter",4]],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["tokenstream",3]],[[],["option",4]],[[],["span",3]],null,null,[[["parsestream",6]],["result",6]],null,[[],["ident",3]],null,null,[[]],[[],["bool",15]],[[],["usize",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["iter",3]],[[],["itermut",3]],[[],["pairs",3]],[[],["pairsmut",3]],[[],["intopairs",3]],[[]],[[]],[[],[["pair",4],["option",4]]],[[],["bool",15]],[[],["bool",15]],[[]],[[["usize",15]]],[[]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["option",4]],[[["option",4]]],[[]],null,null,[[],["span",3]],null,null,[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],null,null,[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],null,null,null,[[]],null,null,null,null,null,[[["parsestream",6]],["result",6]],null,null,null,[[["display",8]],["error",3]],[[],[["result",6],["parse",8]]],[[],["result",6]],[[["peek",8]],["bool",15]],[[["peek",8]],["bool",15]],[[["peek",8]],["bool",15]],[[],[["result",6],["punctuated",3]]],[[],["bool",15]],[[],["lookahead1",3]],[[]],[[["display",8]],["error",3]],[[],["result",6]],[[],["span",3]],[[],["cursor",3]],null,null,[[["tokenstream",3]],["result",6]],[[["tokenstream",3]],["result",6]],[[["str",15]],["result",6]],null,[[["span",3],["display",8]]],[[["display",8],["totokens",8]]],[[],["span",3]],[[],["tokenstream",3]],[[],["tokenstream",3]],[[["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenstream",3]],[["result",6],["parse",8]]],[[["tokenstream",3]],[["result",6],["parse",8]]],[[["str",15]],[["result",6],["parse",8]]],[[["str",15]],[["file",3],["result",6]]],null,null,null,null,null,null,null,null,[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["span",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["ident",3]],["bool",15]],[[],["bool",15]],[[]],[[["ident",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[],["ident",3]],[[["ident",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["option",4],["span",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["tokenstream",3]]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["cursor",3]],["bool",15]],[[],["str",15]],[[["parsestream",6]],["result",6]],[[],["ident",3]],[[]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],[["result",6],["arm",3]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],[["usetree",4],["result",6]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[]],[[["selfvalue",3]],["ident",3]],[[["selftype",3]],["ident",3]],[[["super",3]],["ident",3]],[[["crate",3]],["ident",3]],[[["extern",3]],["ident",3]],[[["underscore",3]],["ident",3]],[[["path",3]],["meta",4]],[[["metalist",3]],["meta",4]],[[["metanamevalue",3]],["meta",4]],[[["meta",4]],["nestedmeta",4]],[[["lit",4]],["nestedmeta",4]],[[["fieldsnamed",3]],["fields",4]],[[["fieldsunnamed",3]],["fields",4]],[[["vispublic",3]],["visibility",4]],[[["viscrate",3]],["visibility",4]],[[["visrestricted",3]],["visibility",4]],[[["exprarray",3]],["expr",4]],[[["exprassign",3]],["expr",4]],[[["exprassignop",3]],["expr",4]],[[["exprasync",3]],["expr",4]],[[["exprawait",3]],["expr",4]],[[["exprbinary",3]],["expr",4]],[[["exprblock",3]],["expr",4]],[[["exprbox",3]],["expr",4]],[[["exprbreak",3]],["expr",4]],[[["exprcall",3]],["expr",4]],[[["exprcast",3]],["expr",4]],[[["exprclosure",3]],["expr",4]],[[["exprcontinue",3]],["expr",4]],[[["exprfield",3]],["expr",4]],[[["exprforloop",3]],["expr",4]],[[["exprgroup",3]],["expr",4]],[[["exprif",3]],["expr",4]],[[["exprindex",3]],["expr",4]],[[["exprlet",3]],["expr",4]],[[["exprlit",3]],["expr",4]],[[["exprloop",3]],["expr",4]],[[["exprmacro",3]],["expr",4]],[[["exprmatch",3]],["expr",4]],[[["exprmethodcall",3]],["expr",4]],[[["exprparen",3]],["expr",4]],[[["exprpath",3]],["expr",4]],[[["exprrange",3]],["expr",4]],[[["exprreference",3]],["expr",4]],[[["exprrepeat",3]],["expr",4]],[[["exprreturn",3]],["expr",4]],[[["exprstruct",3]],["expr",4]],[[["exprtry",3]],["expr",4]],[[["exprtryblock",3]],["expr",4]],[[["exprtuple",3]],["expr",4]],[[["exprtype",3]],["expr",4]],[[["exprunary",3]],["expr",4]],[[["exprunsafe",3]],["expr",4]],[[["exprwhile",3]],["expr",4]],[[["expryield",3]],["expr",4]],[[["usize",15]],["index",3]],[[["typeparam",3]],["genericparam",4]],[[["lifetimedef",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[["ident",3]]],[[["traitbound",3]],["typeparambound",4]],[[["lifetime",3]],["typeparambound",4]],[[["predicatetype",3]],["wherepredicate",4]],[[["predicatelifetime",3]],["wherepredicate",4]],[[["predicateeq",3]],["wherepredicate",4]],[[["itemconst",3]],["item",4]],[[["itemenum",3]],["item",4]],[[["itemexterncrate",3]],["item",4]],[[["itemfn",3]],["item",4]],[[["itemforeignmod",3]],["item",4]],[[["itemimpl",3]],["item",4]],[[["itemmacro",3]],["item",4]],[[["itemmacro2",3]],["item",4]],[[["itemmod",3]],["item",4]],[[["itemstatic",3]],["item",4]],[[["itemstruct",3]],["item",4]],[[["itemtrait",3]],["item",4]],[[["itemtraitalias",3]],["item",4]],[[["itemtype",3]],["item",4]],[[["itemunion",3]],["item",4]],[[["itemuse",3]],["item",4]],[[["deriveinput",3]],["item",4]],[[["itemstruct",3]],["deriveinput",3]],[[["itemenum",3]],["deriveinput",3]],[[["itemunion",3]],["deriveinput",3]],[[["usepath",3]],["usetree",4]],[[["usename",3]],["usetree",4]],[[["userename",3]],["usetree",4]],[[["useglob",3]],["usetree",4]],[[["usegroup",3]],["usetree",4]],[[["foreignitemfn",3]],["foreignitem",4]],[[["foreignitemstatic",3]],["foreignitem",4]],[[["foreignitemtype",3]],["foreignitem",4]],[[["foreignitemmacro",3]],["foreignitem",4]],[[["traititemconst",3]],["traititem",4]],[[["traititemmethod",3]],["traititem",4]],[[["traititemtype",3]],["traititem",4]],[[["traititemmacro",3]],["traititem",4]],[[["implitemconst",3]],["implitem",4]],[[["implitemmethod",3]],["implitem",4]],[[["implitemtype",3]],["implitem",4]],[[["implitemmacro",3]],["implitem",4]],[[["receiver",3]],["fnarg",4]],[[["pattype",3]],["fnarg",4]],[[["litstr",3]],["lit",4]],[[["litbytestr",3]],["lit",4]],[[["litbyte",3]],["lit",4]],[[["litchar",3]],["lit",4]],[[["litint",3]],["lit",4]],[[["litfloat",3]],["lit",4]],[[["litbool",3]],["lit",4]],[[["literal",3]]],[[["literal",3]]],[[["datastruct",3]],["data",4]],[[["dataenum",3]],["data",4]],[[["dataunion",3]],["data",4]],[[["typearray",3]],["type",4]],[[["typebarefn",3]],["type",4]],[[["typegroup",3]],["type",4]],[[["typeimpltrait",3]],["type",4]],[[["typeinfer",3]],["type",4]],[[["typemacro",3]],["type",4]],[[["typenever",3]],["type",4]],[[["typeparen",3]],["type",4]],[[["typepath",3]],["type",4]],[[["typeptr",3]],["type",4]],[[["typereference",3]],["type",4]],[[["typeslice",3]],["type",4]],[[["typetraitobject",3]],["type",4]],[[["typetuple",3]],["type",4]],[[["patbox",3]],["pat",4]],[[["patident",3]],["pat",4]],[[["patlit",3]],["pat",4]],[[["patmacro",3]],["pat",4]],[[["pator",3]],["pat",4]],[[["patpath",3]],["pat",4]],[[["patrange",3]],["pat",4]],[[["patreference",3]],["pat",4]],[[["patrest",3]],["pat",4]],[[["patslice",3]],["pat",4]],[[["patstruct",3]],["pat",4]],[[["pattuple",3]],["pat",4]],[[["pattuplestruct",3]],["pat",4]],[[["pattype",3]],["pat",4]],[[["patwild",3]],["pat",4]],[[]],[[]],[[["lexerror",3]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["optionlifetime",3]],["ordering",4]],[[["underscore",3]],["bool",15]],[[["abstract",3]],["bool",15]],[[["as",3]],["bool",15]],[[["async",3]],["bool",15]],[[["auto",3]],["bool",15]],[[["await",3]],["bool",15]],[[["become",3]],["bool",15]],[[["box",3]],["bool",15]],[[["break",3]],["bool",15]],[[["const",3]],["bool",15]],[[["continue",3]],["bool",15]],[[["crate",3]],["bool",15]],[[["default",3]],["bool",15]],[[["do",3]],["bool",15]],[[["dyn",3]],["bool",15]],[[["else",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["extern",3]],["bool",15]],[[["final",3]],["bool",15]],[[["fn",3]],["bool",15]],[[["for",3]],["bool",15]],[[["if",3]],["bool",15]],[[["impl",3]],["bool",15]],[[["in",3]],["bool",15]],[[["let",3]],["bool",15]],[[["loop",3]],["bool",15]],[[["macro",3]],["bool",15]],[[["match",3]],["bool",15]],[[["mod",3]],["bool",15]],[[["move",3]],["bool",15]],[[["mut",3]],["bool",15]],[[["override",3]],["bool",15]],[[["priv",3]],["bool",15]],[[["pub",3]],["bool",15]],[[["ref",3]],["bool",15]],[[["return",3]],["bool",15]],[[["selftype",3]],["bool",15]],[[["selfvalue",3]],["bool",15]],[[["static",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["super",3]],["bool",15]],[[["trait",3]],["bool",15]],[[["try",3]],["bool",15]],[[["type",3]],["bool",15]],[[["typeof",3]],["bool",15]],[[["union",3]],["bool",15]],[[["unsafe",3]],["bool",15]],[[["unsized",3]],["bool",15]],[[["use",3]],["bool",15]],[[["virtual",3]],["bool",15]],[[["where",3]],["bool",15]],[[["while",3]],["bool",15]],[[["yield",3]],["bool",15]],[[["add",3]],["bool",15]],[[["addeq",3]],["bool",15]],[[["and",3]],["bool",15]],[[["andand",3]],["bool",15]],[[["andeq",3]],["bool",15]],[[["at",3]],["bool",15]],[[["bang",3]],["bool",15]],[[["caret",3]],["bool",15]],[[["careteq",3]],["bool",15]],[[["colon",3]],["bool",15]],[[["colon2",3]],["bool",15]],[[["comma",3]],["bool",15]],[[["div",3]],["bool",15]],[[["diveq",3]],["bool",15]],[[["dollar",3]],["bool",15]],[[["dot",3]],["bool",15]],[[["dot2",3]],["bool",15]],[[["dot3",3]],["bool",15]],[[["dotdoteq",3]],["bool",15]],[[["eq",3]],["bool",15]],[[["eqeq",3]],["bool",15]],[[["ge",3]],["bool",15]],[[["gt",3]],["bool",15]],[[["le",3]],["bool",15]],[[["lt",3]],["bool",15]],[[["muleq",3]],["bool",15]],[[["ne",3]],["bool",15]],[[["or",3]],["bool",15]],[[["oreq",3]],["bool",15]],[[["oror",3]],["bool",15]],[[["pound",3]],["bool",15]],[[["question",3]],["bool",15]],[[["rarrow",3]],["bool",15]],[[["larrow",3]],["bool",15]],[[["rem",3]],["bool",15]],[[["remeq",3]],["bool",15]],[[["fatarrow",3]],["bool",15]],[[["semi",3]],["bool",15]],[[["shl",3]],["bool",15]],[[["shleq",3]],["bool",15]],[[["shr",3]],["bool",15]],[[["shreq",3]],["bool",15]],[[["star",3]],["bool",15]],[[["sub",3]],["bool",15]],[[["subeq",3]],["bool",15]],[[["tilde",3]],["bool",15]],[[["brace",3]],["bool",15]],[[["bracket",3]],["bool",15]],[[["paren",3]],["bool",15]],[[["group",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["lifetime",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["lifetime",3]],[["option",4],["ordering",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["usize",15]]],[[["usizeintoiterator",8]]],[[["intoiterator",8]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["tokenstream",3]]],[[["formatter",3]],["result",6]],[[],[["span",3],["option",4]]],[[["formatter",3]],["result",6]],[[],[["span",3],["option",4]]],[[["span",3],["str",15]],["ident",3]],[[],["span",3]],[[["span",3]]],[[],[["meta",4],["result",6]]],[[],[["result",6],["parse",8]]],[[["parser",8]],["result",6]],[[["parsestream",6]],[["vec",3],["result",6]]],[[["parsestream",6]],[["vec",3],["result",6]]],[[],["path",3]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[],[["field",3],["iter",3]]],[[],[["itermut",3],["field",3]]],[[],["usize",15]],[[],["bool",15]],[[["parsestream",6]],[["result",6],["expr",4]]],[[],["typeparams",3]],[[],["typeparamsmut",3]],[[],["lifetimes",3]],[[],["lifetimesmut",3]],[[],["constparams",3]],[[],["constparamsmut",3]],[[],["whereclause",3]],[[]],[[],["turbofish",3]],[[["lifetime",3]]],[[],[["fnarg",4],["option",4]]],[[],[["lifetime",3],["option",4]]],[[["span",3],["str",15]]],[[],["span",3]],[[["span",3]]],[[["literal",3]]],[[],["str",15]],[[],["span",3]],[[["span",3]]],[[["span",3],["str",15]]],[[],["string",3]],[[],[["result",6],["parse",8]]],[[["parser",8]],["result",6]],[[],["span",3]],[[["span",3]]],[[],["str",15]],[[["span",3]]],[[],[["vec",3],["u8",15]]],[[],["span",3]],[[["span",3]]],[[],["str",15]],[[["span",3],["u8",15]]],[[],["u8",15]],[[],["span",3]],[[["span",3]]],[[],["str",15]],[[["span",3],["char",15]]],[[],["char",15]],[[],["span",3]],[[["span",3]]],[[],["str",15]],[[["span",3],["str",15]]],[[],["str",15]],[[],["result",6]],[[],["str",15]],[[],["span",3]],[[["span",3]]],[[["span",3],["str",15]]],[[],["str",15]],[[],["result",6]],[[],["str",15]],[[],["span",3]],[[["span",3]]],[[["bool",15],["span",3]]],[[],["bool",15]],[[],["span",3]],[[["span",3]]],[[],[["result",6],["parse",8]]],[[["parser",8]],["result",6]],[[["parsestream",6]],[["vec",3],["result",6]]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[["parsestream",6]],["result",6]],[[],["bool",15]],[[],[["option",4],["ident",3]]],[[],["bool",15]],[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],[[["abi",3]]],[[["anglebracketedgenericarguments",3]]],[[["arm",3]]],[[["attrstyle",4]]],[[["attribute",3]]],[[["barefnarg",3]]],[[["binop",4]]],[[["binding",3]]],[[["block",3]]],[[["boundlifetimes",3]]],[[["constparam",3]]],[[["constraint",3]]],[[["data",4]]],[[["dataenum",3]]],[[["datastruct",3]]],[[["dataunion",3]]],[[["deriveinput",3]]],[[["expr",4]]],[[["exprarray",3]]],[[["exprassign",3]]],[[["exprassignop",3]]],[[["exprasync",3]]],[[["exprawait",3]]],[[["exprbinary",3]]],[[["exprblock",3]]],[[["exprbox",3]]],[[["exprbreak",3]]],[[["exprcall",3]]],[[["exprcast",3]]],[[["exprclosure",3]]],[[["exprcontinue",3]]],[[["exprfield",3]]],[[["exprforloop",3]]],[[["exprgroup",3]]],[[["exprif",3]]],[[["exprindex",3]]],[[["exprlet",3]]],[[["exprlit",3]]],[[["exprloop",3]]],[[["exprmacro",3]]],[[["exprmatch",3]]],[[["exprmethodcall",3]]],[[["exprparen",3]]],[[["exprpath",3]]],[[["exprrange",3]]],[[["exprreference",3]]],[[["exprrepeat",3]]],[[["exprreturn",3]]],[[["exprstruct",3]]],[[["exprtry",3]]],[[["exprtryblock",3]]],[[["exprtuple",3]]],[[["exprtype",3]]],[[["exprunary",3]]],[[["exprunsafe",3]]],[[["exprwhile",3]]],[[["expryield",3]]],[[["field",3]]],[[["fieldpat",3]]],[[["fieldvalue",3]]],[[["fields",4]]],[[["fieldsnamed",3]]],[[["fieldsunnamed",3]]],[[["file",3]]],[[["fnarg",4]]],[[["foreignitem",4]]],[[["foreignitemfn",3]]],[[["foreignitemmacro",3]]],[[["foreignitemstatic",3]]],[[["foreignitemtype",3]]],[[["genericargument",4]]],[[["genericmethodargument",4]]],[[["genericparam",4]]],[[["generics",3]]],[[["ident",3]]],[[["implitem",4]]],[[["implitemconst",3]]],[[["implitemmacro",3]]],[[["implitemmethod",3]]],[[["implitemtype",3]]],[[["index",3]]],[[["item",4]]],[[["itemconst",3]]],[[["itemenum",3]]],[[["itemexterncrate",3]]],[[["itemfn",3]]],[[["itemforeignmod",3]]],[[["itemimpl",3]]],[[["itemmacro",3]]],[[["itemmacro2",3]]],[[["itemmod",3]]],[[["itemstatic",3]]],[[["itemstruct",3]]],[[["itemtrait",3]]],[[["itemtraitalias",3]]],[[["itemtype",3]]],[[["itemunion",3]]],[[["itemuse",3]]],[[["label",3]]],[[["lifetime",3]]],[[["lifetimedef",3]]],[[["lit",4]]],[[["litbool",3]]],[[["litbyte",3]]],[[["litbytestr",3]]],[[["litchar",3]]],[[["litfloat",3]]],[[["litint",3]]],[[["litstr",3]]],[[["local",3]]],[[["macro",3]]],[[["macrodelimiter",4]]],[[["member",4]]],[[["meta",4]]],[[["metalist",3]]],[[["metanamevalue",3]]],[[["methodturbofish",3]]],[[["nestedmeta",4]]],[[["parenthesizedgenericarguments",3]]],[[["pat",4]]],[[["patbox",3]]],[[["patident",3]]],[[["patlit",3]]],[[["patmacro",3]]],[[["pator",3]]],[[["patpath",3]]],[[["patrange",3]]],[[["patreference",3]]],[[["patrest",3]]],[[["patslice",3]]],[[["patstruct",3]]],[[["pattuple",3]]],[[["pattuplestruct",3]]],[[["pattype",3]]],[[["patwild",3]]],[[["path",3]]],[[["patharguments",4]]],[[["pathsegment",3]]],[[["predicateeq",3]]],[[["predicatelifetime",3]]],[[["predicatetype",3]]],[[["qself",3]]],[[["rangelimits",4]]],[[["receiver",3]]],[[["returntype",4]]],[[["signature",3]]],[[["span",3]]],[[["stmt",4]]],[[["traitbound",3]]],[[["traitboundmodifier",4]]],[[["traititem",4]]],[[["traititemconst",3]]],[[["traititemmacro",3]]],[[["traititemmethod",3]]],[[["traititemtype",3]]],[[["type",4]]],[[["typearray",3]]],[[["typebarefn",3]]],[[["typegroup",3]]],[[["typeimpltrait",3]]],[[["typeinfer",3]]],[[["typemacro",3]]],[[["typenever",3]]],[[["typeparam",3]]],[[["typeparambound",4]]],[[["typeparen",3]]],[[["typepath",3]]],[[["typeptr",3]]],[[["typereference",3]]],[[["typeslice",3]]],[[["typetraitobject",3]]],[[["typetuple",3]]],[[["unop",4]]],[[["useglob",3]]],[[["usegroup",3]]],[[["usename",3]]],[[["usepath",3]]],[[["userename",3]]],[[["usetree",4]]],[[["variadic",3]]],[[["variant",3]]],[[["viscrate",3]]],[[["vispublic",3]]],[[["visrestricted",3]]],[[["visibility",4]]],[[["whereclause",3]]],[[["wherepredicate",4]]],[[["peek",8]],["bool",15]],[[],["error",3]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for …","t":[8,10,10,10,11,4,13,13,13,13,3,3,3,11,11,11,11,11,3,11,11,11,11,11,3,11,11,11,11,11,11,11,11,3,11,11,11,11,3,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["WriteColor","supports_color","set_color","reset","is_synchronous","ColorChoice","Always","AlwaysAnsi","Auto","Never","StandardStream","StandardStreamLock","BufferedStandardStream","stdout","stderr","lock","stdout","stderr","BufferWriter","stdout","stderr","separator","buffer","print","Buffer","no_color","ansi","is_empty","len","clear","into_inner","as_slice","as_mut_slice","NoColor","new","into_inner","get_ref","get_mut","Ansi","new","into_inner","get_ref","get_mut","ColorSpec","new","fg","set_fg","bg","set_bg","bold","set_bold","dimmed","set_dimmed","italic","set_italic","underline","set_underline","reset","set_reset","intense","set_intense","is_none","clear","Color","Black","Blue","Green","Red","Cyan","Magenta","Yellow","White","Ansi256","Rgb","ParseColorError","invalid","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","supports_color","set_color","reset","is_synchronous","supports_color","set_color","reset","is_synchronous","supports_color","set_color","reset","is_synchronous","supports_color","set_color","reset","is_synchronous","supports_color","set_color","reset","is_synchronous","supports_color","set_color","reset","is_synchronous","clone","clone","clone","clone","default","eq","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","from_str","description","write","flush","write","flush","write","flush","write","flush","write","flush","write","flush"],"q":["termcolord":["This trait describes the behavior of writers that support …","Returns true if and only if the underlying writer …","Set the color settings of the writer.","Reset the current color settings to their original …","Returns true if and only if the underlying writer must …","ColorChoice represents the color preferences of an end …","Try very hard to emit colors. This includes emitting ANSI …","AlwaysAnsi is like Always, except it never tries to use …","Try to use colors, but don’t force the issue. If the …","Never emit colors.","Satisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional …","<code>StandardStreamLock</code> is a locked reference to a …","Like <code>StandardStream</code>, but does buffered writing.","Create a new <code>StandardStream</code> with the given color …","Create a new <code>StandardStream</code> with the given color …","Lock the underlying writer.","Create a new <code>BufferedStandardStream</code> with the given color …","Create a new <code>BufferedStandardStream</code> with the given color …","Writes colored buffers to stdout or stderr.","Create a new <code>BufferWriter</code> that writes to stdout with the …","Create a new <code>BufferWriter</code> that writes to stderr with the …","If set, the separator given is printed between buffers. …","Creates a new <code>Buffer</code> with the current color preferences.","Prints the contents of the given buffer.","Write colored text to memory.","Create a buffer that drops all color information.","Create a buffer that uses ANSI escape sequences.","Returns true if and only if this buffer is empty.","Returns the length of this buffer in bytes.","Clears this buffer.","Consume this buffer and return the underlying raw data.","Return the underlying data of the buffer.","Return the underlying data of the buffer as a mutable …","Satisfies <code>WriteColor</code> but ignores all color options.","Create a new writer that satisfies <code>WriteColor</code> but drops …","Consume this <code>NoColor</code> value and return the inner writer.","Return a reference to the inner writer.","Return a mutable reference to the inner writer.","Satisfies <code>WriteColor</code> using standard ANSI escape sequences.","Create a new writer that satisfies <code>WriteColor</code> using …","Consume this <code>Ansi</code> value and return the inner writer.","Return a reference to the inner writer.","Return a mutable reference to the inner writer.","A color specification.","Create a new color specification that has no colors or …","Get the foreground color.","Set the foreground color.","Get the background color.","Set the background color.","Get whether this is bold or not.","Set whether the text is bolded or not.","Get whether this is dimmed or not.","Set whether the text is dimmed or not.","Get whether this is italic or not.","Set whether the text is italicized or not.","Get whether this is underline or not.","Set whether the text is underlined or not.","Get whether reset is enabled or not.","Set whether to reset the terminal whenever color settings …","Get whether this is intense or not.","Set whether the text is intense or not.","Returns true if this color specification has no colors or …","Clears this color specification so that it has no …","The set of available colors for the terminal …","","","","","","","","","","","An error from parsing an invalid color specification.","Return the string that couldn’t be parsed as a valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,2,2,2,2,0,0,0,3,3,3,4,4,0,5,5,5,5,5,0,6,6,6,6,6,6,6,6,0,7,7,7,7,0,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,0,11,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,12,12,12,12,12,12,12,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,12,12,4,4,4,4,6,6,6,6,7,7,7,7,8,8,8,8,2,9,10,11,9,2,9,9,10,10,11,11,2,9,10,11,11,10,11,3,3,12,12,4,4,6,6,7,7,8,8],"f":[null,[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[["colorchoice",4]],["standardstream",3]],[[["colorchoice",4]],["standardstream",3]],[[],["standardstreamlock",3]],[[["colorchoice",4]],["bufferedstandardstream",3]],[[["colorchoice",4]],["bufferedstandardstream",3]],null,[[["colorchoice",4]],["bufferwriter",3]],[[["colorchoice",4]],["bufferwriter",3]],[[["vec",3],["option",4]]],[[],["buffer",3]],[[["buffer",3]],["result",6]],null,[[],["buffer",3]],[[],["buffer",3]],[[],["bool",15]],[[],["usize",15]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],null,[[],["nocolor",3]],[[]],[[]],[[]],null,[[],["ansi",3]],[[]],[[]],[[]],null,[[],["colorspec",3]],[[],[["color",4],["option",4]]],[[["color",4],["option",4]],["colorspec",3]],[[],[["color",4],["option",4]]],[[["color",4],["option",4]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[["bool",15]],["colorspec",3]],[[],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["colorspec",3]],["result",6]],[[],["result",6]],[[],["bool",15]],[[],["colorchoice",4]],[[],["colorspec",3]],[[],["color",4]],[[],["parsecolorerror",3]],[[],["colorspec",3]],[[["colorchoice",4]],["bool",15]],[[["colorspec",3]],["bool",15]],[[["colorspec",3]],["bool",15]],[[["color",4]],["bool",15]],[[["color",4]],["bool",15]],[[["parsecolorerror",3]],["bool",15]],[[["parsecolorerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["str",15]],[["parsecolorerror",3],["color",4],["result",4]]],[[],["str",15]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]]],"p":[[8,"WriteColor"],[4,"ColorChoice"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[4,"Color"],[3,"ParseColorError"],[3,"StandardStreamLock"]]},\
"textwrap":{"doc":"<code>textwrap</code> provides functions for word wrapping and filling …","t":[5,5,3,3,8,10,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,3,3,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["dedent","indent","HyphenSplitter","NoHyphenation","WordSplitter","split","Wrapper","width","initial_indent","subsequent_indent","break_words","splitter","new","with_splitter","initial_indent","subsequent_indent","break_words","fill","wrap","wrap_iter","into_wrap_iter","IntoWrapIter","WrapIter","fill","wrap","wrap_iter","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","split","split","next","next","clone","clone","clone","fmt","fmt","fmt","fmt","fmt"],"q":["textwrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Removes common leading whitespace from each line.","Add prefix to each non-empty line.","Simple and default way to split words: splitting on …","Use this as a <code>Wrapper.splitter</code> to avoid any kind of …","An interface for splitting words.","Return all possible splits of word. Each split is a triple…","A Wrapper holds settings for wrapping and filling text. …","The width in columns at which the text will be wrapped.","Indentation used for the first line of output.","Indentation used for subsequent lines of output.","Allow long words to be broken if they cannot fit on a …","The method for splitting words. If the <code>hyphenation</code> feature…","Create a new Wrapper for wrapping at the specified width. …","Use the given <code>WordSplitter</code> to create a new Wrapper for …","Change <code>self.initial_indent</code>. The initial indentation is …","Change <code>self.subsequent_indent</code>. The subsequent indentation …","Change <code>self.break_words</code>. This controls if words longer …","Fill a line of text at <code>self.width</code> characters.","Wrap a line of text at <code>self.width</code> characters.","Lazily wrap a line of text at <code>self.width</code> characters.","Lazily wrap a line of text at <code>self.width</code> characters.","An iterator over the lines of the input string which owns …","An iterator over the lines of the input string which …","Fill a line of text at <code>width</code> characters.","Wrap a line of text at <code>width</code> characters.","Lazily wrap a line of text at <code>width</code> characters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,3,4,5,6,3,4,2,3,4,2,5,6],"f":[[[["str",15]],["string",3]],[[["str",15]],["string",3]],null,null,null,[[["str",15]],["vec",3]],null,null,null,null,null,null,[[["usize",15]],[["hyphensplitter",3],["wrapper",3]]],[[["usize",15]],["wrapper",3]],[[["str",15]],["wrapper",3]],[[["str",15]],["wrapper",3]],[[["bool",15]],["wrapper",3]],[[["str",15]],["string",3]],[[["str",15]],[["cow",4],["vec",3]]],[[["str",15]],["wrapiter",3]],[[["str",15]],["intowrapiter",3]],null,null,[[["usize",15],["str",15]],["string",3]],[[["usize",15],["str",15]],[["vec",3],["cow",4]]],[[["usize",15],["str",15]],[["hyphensplitter",3],["intowrapiter",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["vec",3]],[[["str",15]],["vec",3]],[[],[["cow",4],["option",4]]],[[],[["cow",4],["option",4]]],[[],["nohyphenation",3]],[[],["hyphensplitter",3]],[[],["wrapper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"WordSplitter"],[3,"Wrapper"],[3,"NoHyphenation"],[3,"HyphenSplitter"],[3,"IntoWrapIter"],[3,"WrapIter"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":[24],"n":["Error"],"q":["thiserror"],"d":[""],"i":[0],"f":[null],"p":[]},\
"thiserror_impl":{"doc":"","t":[24],"n":["Error"],"q":["thiserror_impl"],"d":[""],"i":[0],"f":[null],"p":[]},\
"thread_local":{"doc":"Per-object thread-local storage","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CachedIntoIter","CachedIterMut","CachedThreadLocal","ThreadLocal","new","with_capacity","get","get_or","get_or_try","iter","iter_mut","clear","get_or_default","Iter","IterMut","IntoIter","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","drop","into_iter","into_iter","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","default","default","fmt","fmt","fmt","fmt","fmt","new","get","get_or","get_or_try","iter_mut","clear","get_or_default"],"q":["thread_local","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator that moves out of a <code>CachedThreadLocal</code>.","Mutable iterator over the contents of a <code>CachedThreadLocal</code>.","Wrapper around [<code>ThreadLocal</code>].","Thread-local variable wrapper","Creates a new empty <code>ThreadLocal</code>.","Creates a new <code>ThreadLocal</code> with an initial capacity. If …","Returns the element for the current thread, if it exists.","Returns the element for the current thread, or creates it …","Returns the element for the current thread, or creates it …","Returns an iterator over the local values of all threads …","Returns a mutable iterator over the local values of all …","Removes all thread-specific values from the <code>ThreadLocal</code>, …","Returns the element for the current thread, or creates a …","Iterator over the contents of a <code>ThreadLocal</code>.","Mutable iterator over the contents of a <code>ThreadLocal</code>.","An iterator that moves out of a <code>ThreadLocal</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new empty <code>CachedThreadLocal</code>.","Returns the element for the current thread, if it exists.","Returns the element for the current thread, or creates it …","Returns the element for the current thread, or creates it …","Returns a mutable iterator over the local values of all …","Removes all thread-specific values from the <code>ThreadLocal</code>, …","Returns the element for the current thread, or creates a …"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,1,2,1,3,3,4,4,5,5,6,6,7,7,2,1,2,1,5,6,7,2,2,2,2,2,2,2],"f":[null,null,null,null,[[],["threadlocal",3]],[[["usize",15]],["threadlocal",3]],[[],["option",4]],[[]],[[],["result",4]],[[],["iter",3]],[[],["itermut",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["cachedintoiter",3]],[[],["intoiter",3]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["cachedthreadlocal",3]],[[],["threadlocal",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["cachedthreadlocal",3]],[[],["option",4]],[[]],[[],["result",4]],[[],["cacheditermut",3]],[[]],[[]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"]]},\
"tinyvec":{"doc":"<code>tinyvec</code> provides 100% safe vec-like data structures.","t":[8,16,18,10,10,10,3,3,3,3,3,3,4,13,13,4,13,13,3,4,13,13,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Array","Item","CAPACITY","as_slice","as_slice_mut","default","ArrayVec","ArrayVecSplice","ArrayVecIterator","ArrayVecDrain","SliceVec","SliceVecDrain","TinyVec","Inline","Heap","TinyVecDrain","Inline","Heap","TinyVecSplice","TinyVecIterator","Inline","Heap","array_vec","tiny_vec","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_string","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","from","into","try_into","type_id","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","deref","deref","deref","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","eq","eq","eq","eq","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","drop","drop","drop","index","index","index","index_mut","index_mut","index_mut","hash","hash","hash","len","len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","next_back","next_back","next_back","next_back","next_back","next","size_hint","next","size_hint","count","last","nth","next","size_hint","nth","last","for_each","next","next","nth","size_hint","last","count","for_each","next","size_hint","next","size_hint","count","last","nth","into_iter","into_iter","into_iter","extend","extend","extend","from","from","from","from","from","from","from","as_ref","as_ref","as_ref","as_mut","as_mut","as_mut","clone","clone","default","default","default","CAPACITY","append","try_append","as_mut_ptr","as_mut_slice","as_ptr","as_slice","capacity","clear","drain","into_inner","extend_from_slice","fill","from_array_len","insert","try_insert","is_empty","len","new","pop","push","try_push","remove","resize","resize_with","retain","set_len","split_off","splice","swap_remove","truncate","try_from_array_len","as_slice","drain_to_vec_and_reserve","drain_to_vec","append","as_mut_ptr","as_mut_slice","as_ptr","as_slice","capacity","clear","drain","extend_from_slice","fill","from_slice_len","insert","is_empty","len","pop","push","remove","resize","resize_with","retain","set_len","split_off","swap_remove","truncate","try_from_slice_len","is_heap","is_inline","shrink_to_fit","move_to_the_heap","move_to_the_heap_and_reserve","reserve","reserve_exact","with_capacity","append","swap_remove","pop","remove","len","capacity","truncate","as_mut_ptr","as_ptr","retain","as_mut_slice","as_slice","clear","drain","extend_from_slice","from_array_len","insert","is_empty","new","push","resize","resize_with","split_off","splice","try_from_array_len","as_slice"],"q":["tinyvecd":["A trait for types that are an array.","The type of the items in the thing.","The number of slots in the thing.","Gives a shared slice over the whole thing.","Gives a unique slice over the whole thing.","Create a default-initialized instance of ourself, similar …","An array-backed, vector-like data structure.","Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>","Iterator for consuming an <code>ArrayVec</code> and returning owned …","Draining iterator for [<code>ArrayVec</code>]","A slice-backed vector-like data structure.","Draining iterator for [<code>SliceVec</code>]","A vector that starts inline, but can automatically move …","","","Draining iterator for <code>TinyVecDrain</code>","","","Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>","Iterator for consuming an <code>TinyVec</code> and returning owned …","","","Helper to make an <code>ArrayVec</code>.","Helper to make a <code>TinyVec</codehe output has a length equal to the full array.","Uses the full slice as the initial length.","Calls <code>AsRef::as_mut</code> then uses the full slice as the …","","","","","","","","","","","","","","","","The number of slots in the thing.","Move all values from <code>other</code> into this vec.","Move all values from <code>other</code> into this vec. If appending …","A <code>*mut</code> pointer to the backing array.","Performs a <code>deref_mut</code>, into unique slice form.","A <code>*const</code> pointer to the backing array.","Performs a <code>deref</code>, into shared slice form.","The capacity of the <code>ArrayVec</code>.","Truncates the <code>ArrayVec</code> down to length 0.","Creates a draining iterator that removes the specified …","Returns the inner array of the <code>ArrayVec</code>.","Clone each element of the slice into this <code>ArrayVec</code>.","Fill the vector until its capacity has been reached.","Wraps up an array and uses the given length as the …","Inserts an item at the position given, moving all …","Tries to insert an item at the position given, moving all …","Checks if the length is 0.","The length of the <code>ArrayVec</code> (in elements).","Makes a new, empty <code>ArrayVec</code>.","Remove and return the last element of the vec, if there …","Place an element onto the end of the vec.","Tries to place an element onto the end of the vec. …","Removes the item at <code>index</code>, shifting all others down by …","As <code>resize_with</code> and it clones the value as the closure.","Resize the vec to the new length.","Walk the vec and keep only the elements that pass the …","Forces the length of the vector to <code>new_len</code>.","Splits the collection at the point given.","Creates a splicing iterator that removes the specified …","Remove an element, swapping the end of the vec into its …","Reduces the vec’s length to the given value.","Wraps an array, using the given length as the starting …","Returns the remaining items of this iterator as a slice.","Drains all elements to a Vec, but reserves additional …","Drains all elements to a Vec","","A <code>*mut</code> pointer to the backing slice.","Performs a <code>deref_mut</code>, into unique slice form.","A <code>*const</code> pointer to the backing slice.","Performs a <code>deref</code>, into shared slice form.","The capacity of the <code>SliceVec</code>.","Truncates the <code>SliceVec</code> down to length 0.","Creates a draining iterator that removes the specified …","","Fill the vector until its capacity has been reached.","Wraps up a slice and uses the given length as the initial …","Inserts an item at the position given, moving all …","Checks if the length is 0.","The length of the <code>SliceVec</code> (in elements).","Remove and return the last element of the vec, if there …","Place an element onto the end of the vec.","Removes the item at <code>index</code>, shifting all others down by …","As <code>resize_with</code> and it clones the value as the closure.","Resize the vec to the new length.","Walk the vec and keep only the elements that pass the …","Forces the length of the vector to <code>new_len</code>.","Splits the collection at the point given.","Remove an element, swapping the end of the vec into its …","Reduces the vec’s length to the given value.","Wraps a slice, using the given length as the starting …","Returns whether elements are on heap","Returns whether elements are on stack","Shrinks the capacity of the vector as much as possible. …","Moves the content of the TinyVec to the heap, if it’s …","If TinyVec is inline, moves the content of it to the heap.…","Reserves additional space. Moves to the heap if array can…","Reserves additional space. Moves to the heap if array can…","Makes a new TinyVec with <em>at least</em> the given capacity.","Move all values from <code>other</code> into this vec.","Remove an element, swapping the end of the vec into its …","Remove and return the last element of the vec, if there …","Removes the item at <code>index</code>, shifting all others down by …","The length of the vec (in elements).","The capacity of the <code>TinyVec</code>.","Reduces the vec’s length to the given value.","A mutable pointer to the backing array.","A const pointer to the backing array.","Walk the vec and keep only the elements that pass the …","Helper for getting the mut slice.","Helper for getting the shared slice.","Removes all elements from the vec.","Creates a draining iterator that removes the specified …","Clone each element of the slice into this vec.","Wraps up an array and uses the given length as the …","Inserts an item at the position given, moving all …","If the vec is empty.","Makes a new, empty vec.","Place an element onto the end of the vec.","Resize the vec to the new length.","Resize the vec to the new length.","Splits the collection at the point given.","Creates a splicing iterator that removes the specified …","Wraps an array, using the given length as the starting …","Returns the remaining items of this iterator as a slice."],"i":[0,1,1,1,1,1,0,0,0,0,0,0,0,2,2,0,3,3,0,0,4,4,0,0,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,4,4,4,4,4,4,4,4,5,9,2,5,9,2,7,5,9,4,2,5,9,2,5,9,2,5,9,2,5,5,5,9,9,2,2,2,5,9,2,5,9,2,6,10,11,5,9,2,5,9,2,5,9,2,6,11,5,9,2,5,9,2,5,2,5,9,2,5,9,2,5,9,2,5,9,2,5,9,2,6,7,8,3,11,6,6,7,7,7,7,7,8,8,8,8,8,10,3,3,3,3,3,3,11,11,4,4,4,4,4,5,9,2,5,9,2,5,9,9,2,2,2,2,5,9,2,5,9,2,5,2,5,9,2,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,5,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4],"f":[null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[],[["ordering",4],["option",4]]],[[],[["ordering",4],["option",4]]],[[],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[["usize",15]],["option",4]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[],["usize",15]],[[["fnmut",8]]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["usize",15]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[]],[[]],[[["arrayvec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["arrayvec",3]],[[],["tinyvec",4]],[[]],[[]],[[]],null,[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["arrayvecdrain",3]],[[]],[[]],[[["intoiterator",8]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["option",4]],[[],["bool",15]],[[],["usize",15]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15],["fnmut",8]]],[[["fnmut",8]]],[[["usize",15]]],[[["usize",15]]],[[],[["fuse",3],["arrayvecsplice",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["result",4]],[[]],[[["usize",15]],["vec",3]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[["usize",15],["rangebounds",8]],["slicevecdrain",3]],[[]],[[["intoiterator",8]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[],["usize",15]],[[],["option",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15],["fnmut",8]]],[[["fnmut",8]]],[[["usize",15]]],[[["usize",15]],["slicevec",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["option",4]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[],["option",4]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[]],[[]],[[["fnmut",8]]],[[]],[[]],[[]],[[["usize",15],["rangebounds",8]],["tinyvecdrain",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[]],[[]],[[["usize",15]]],[[["usize",15],["fnmut",8]]],[[["usize",15]]],[[],[["fuse",3],["tinyvecsplice",3]]],[[["usize",15]],["result",4]],[[]]],"p":[[8,"Array"],[4,"TinyVec"],[4,"TinyVecDrain"],[4,"TinyVecIterator"],[3,"ArrayVec"],[3,"ArrayVecSplice"],[3,"ArrayVecIterator"],[3,"ArrayVecDrain"],[3,"SliceVec"],[3,"SliceVecDrain"],[3,"TinyVecSplice"]]},\
"tinyvec_macros":{"doc":"","t":[14],"n":["impl_mirrored"],"q":["tinyvec_macros"],"d":[""],"i":[0],"f":[null],"p":[]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","t":[0,5,5,3,5,5,3,3,0,3,3,3,3,3,8,11,11,11,11,11,10,8,10,3,3,5,5,8,10,0,8,11,11,8,11,11,3,3,11,11,11,11,11,11,11,0,3,3,17,0,3,3,3,8,10,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,11,10,11,10,10,10,10,10,10,11,11,11,11,11,3,3,5,5,5,3,8,11,11,3,3,8,10,8,11,10,11,10,10,10,10,10,10,11,11,11,11,11,0,3,3,3,3,23,14,14,14,14,14,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11],"n":["dispatcher","set_default","with_default","DefaultGuard","get_default","set_global_default","Dispatch","SetGlobalDefaultError","field","Field","Empty","FieldSet","ValueSet","Iter","Visit","record_i64","record_u64","record_bool","record_str","record_error","record_debug","Value","record","DisplayValue","DebugValue","display","debug","AsField","as_field","instrument","Instrument","instrument","in_current_span","WithSubscriber","with_subscriber","with_current_subscriber","WithDispatch","Instrumented","span","span_mut","inner","inner_mut","inner_pin_ref","inner_pin_mut","into_inner","level_filters","ParseLevelFilterError","LevelFilter","STATIC_MAX_LEVEL","span","Attributes","Id","Record","AsId","as_id","Span","Entered","EnteredSpan","new","new_root","child_of","new_disabled","none","current","enter","entered","in_scope","field","has_field","record","record_all","is_disabled","is_none","follows_from","id","metadata","with_subscriber","exit","subscriber","Subscriber","register_callsite","enabled","max_level_hint","new_span","record","record_follows_from","event","enter","exit","clone_span","drop_span","try_close","current_span","downcast_raw","Interest","DefaultGuard","with_default","set_global_default","set_default","SetGlobalDefaultError","Instrument","instrument","in_current_span","Dispatch","Event","Value","record","Subscriber","register_callsite","enabled","max_level_hint","new_span","record","record_follows_from","event","enter","exit","clone_span","drop_span","try_close","current_span","downcast_raw","event","Event","Level","Metadata","Span","instrument","span","trace_span","debug_span","info_span","warn_span","error_span","event","trace","debug","info","warn","error","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_future","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","into","as_ref","hash","hash","from","from","from","eq","eq","ne","eq","ne","eq","eq","eq","eq","ne","cmp","cmp","from_str","from_str","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","record","record","record","default","drop","clone","clone","clone","clone","clone","clone","clone","clone","clone","next","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","as_field","drop","drop","drop","into","clone","clone","clone","eq","deref","fmt","fmt","fmt","fmt","fmt","hash","poll","none","new","register_callsite","new_span","record","record_follows_from","enabled","event","enter","exit","clone_span","drop_span","try_close","current_span","is","downcast_ref","callsite","name","new","field","contains","iter","len","is_empty","callsite","OFF","ERROR","WARN","INFO","DEBUG","TRACE","from_level","into_level","current","new","new_root","child_of","metadata","values","is_root","is_contextual","parent","record","contains","is_empty","from_u64","from_non_zero_u64","into_u64","into_non_zero_u64","new","record","contains","is_empty","is","downcast_ref","never","sometimes","always","is_never","is_sometimes","is_always","dispatch","new","new_child_of","child_of","record","fields","metadata","is_root","is_contextual","parent","ERROR","WARN","INFO","DEBUG","TRACE","new","fields","level","name","target","module_path","file","line","callsite","is_event","is_span"],"q":["tracing","tracing::dispatcher","","","","","","","tracing","tracing::field","","","","","","","","","","","","","","","","","","","","tracing","tracing::instrument","","","","","","","","","","","","","","","tracing","tracing::level_filters","","","tracing","tracing::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing","tracing::subscriber","","","","","","","","","","","","","","","","","","","","","tracing","","","","","","","","","","","","","","","","","","","","","","","tracing::event","tracing","","","","","","","","","","","","","","","","tracing::subscriber","","","","","","","tracing","","","","","","","","","tracing::subscriber","","","","","","","","tracing::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing::instrument","","","","","","","","","","","","","","","","","","","tracing::level_filters","","","","","","","","","","","","","","","","","","","","tracing::span","","","","","","","","","","","","","","","","","","","","","","","tracing","","","","","","","","","tracing::span","","","","","","","","","","","","","","tracing::subscriber","","","","","","","","","tracing::event","","","","","","","tracing","","","","","","","","","","","","","","","","","tracing::level_filters","tracing::field","tracing::span","tracing::field","tracing","tracing::level_filters","","tracing::field","tracing::span","","tracing::level_filters","","tracing","tracing::level_filters","tracing::field","tracing","","","tracing::level_filters","","tracing","tracing::subscriber","tracing::field","","tracing","tracing::field","tracing::level_filters","","tracing","tracing::field","","","","tracing","tracing::subscriber","tracing::field","","","tracing","","tracing::level_filters","","tracing::span","tracing::subscriber","tracing::field","tracing::level_filters","","","","","tracing","","","","","tracing::level_filters","","","","","tracing","","","","","tracing::field","tracing::level_filters","tracing::field","tracing","tracing::field","tracing","tracing::event","tracing::field","tracing::subscriber","tracing","tracing::field","tracing::subscriber","tracing::field","tracing::span","tracing::level_filters","tracing::field","tracing","tracing::span","","tracing::subscriber","tracing::field","tracing","tracing::span","","tracing","tracing::instrument","","tracing","","tracing::span","tracing::instrument","","tracing::span","","tracing","","tracing::instrument","tracing","","","","","","","","","","","","","","","","tracing::field","","","","","","","","","tracing::level_filters","","","","","","","","","tracing::span","","","","","","","","","","","","","","","","","","","tracing","","tracing::subscriber","","","","","","tracing::event","","","","","","","","","","tracing","","","","","","","","","","","","","","",""],"d":["Dispatches trace events to <code>Subscriber</code>s.","Sets the dispatch as the default dispatch for the …","Sets this dispatch as the default for the duration of a …","A guard that resets the current default dispatcher to the …","Executes a closure with a reference to this thread’s …","Sets this dispatch as the global default for the duration …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","Returned if setting the global dispatcher fails.","Structured data associated with <code>Span</code>s and <code>Event</code>s.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","An empty field.","Describes the fields present on a span.","A set of fields and values for a span.","An iterator over a set of fields.","Visits typed values.","Visit a signed 64-bit integer value.","Visit an unsigned 64-bit integer value.","Visit a boolean value.","Visit a string value.","Records a type implementing <code>Error</code>.","Visit a value implementing <code>fmt::Debug</code>.","A field value of an erased type.","Visits this value with the given <code>Visitor</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …","Trait implemented to allow a type to be used as a field …","Attempts to convert <code>&self</code> into a <code>Field</code> with the specified …","Attach a span to a <code>std::future::Future</code>.","Attaches spans to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an…","Instruments this type with the current <code>Span</code>, returning an …","Extension trait allowing futures to be instrumented with …","Attaches the provided <code>Subscriber</code> to this type, returning a…","Attaches the current default <code>Subscriber</code> to this type, …","A future that has been instrumented with a <code>tracing</code> …","A future that has been instrumented with a <code>tracing</code> span.","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented …","Borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned reference to the wrapped type.","Get a pinned mutable reference to the wrapped type.","Consumes the <code>Instrumented</code>, returning the wrapped type.","Trace verbosity level filtering.","Indicates that a string could not be parsed to a valid …","A filter comparable to a verbosity <code>Level</code>.","The statically configured maximum trace level.","Spans represent periods of time in which a program was …","Attributes provided to a <code>Subscriber</code> describing a new span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","Trait implemented by types which have a span <code>Id</code>.","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","A handle representing a span, with the capability to …","A guard representing a span which has been entered and is …","An owned version of [<code>Entered</code>], a guard representing a …","Constructs a new <code>Span</code> with the given metadata and set of …","Constructs a new <code>Span</code> as the root of its own trace tree, …","Constructs a new <code>Span</code> as child of the given parent span, …","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new span that is <em>completely disabled</em>.","Returns a handle to the span considered by the <code>Subscriber</code> …","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a [guard][…","Executes the given function in the context of this span.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","Records that the field described by <code>field</code> has the value …","Records all the fields in the provided <code>ValueSet</code>.","Returns <code>true</code> if this span was disabled by the subscriber …","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Indicates that the span with the given ID has an indirect …","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Metadata</code>, if it is enabled.","Invokes a function with a reference to this span’s ID …","Exits this span, returning the underlying [<code>Span</code>].","Collects and records trace data.","Trait representing the functions required to collect …","Registers a new callsite with this subscriber, returning …","Returns true if a span or event with the specified …","Returns the highest verbosity level that this <code>Subscriber</code> …","Visit the construction of a new span, returning a new …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Records that an <code>Event</code> has occurred.","Records that a span has been entered.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","<strong>This method is deprecated.</strong>","Notifies the subscriber that a [<code>span ID</code>] has been …","Returns a type representing this subscriber’s view of …","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Indicates a <code>Subscriber</code>’s interest in a particular …","A guard that resets the current default dispatcher to the …","Sets this subscriber as the default for the duration of a …","Sets this subscriber as the global default for the …","Sets the subscriber as the default for the duration of …","Returned if setting the global dispatcher fails.","Attaches spans to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an…","Instruments this type with the current <code>Span</code>, returning an …","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","<code>Event</code>s represent single points in time where something …","A field value of an erased type.","Visits this value with the given <code>Visitor</code>.","Trait representing the functions required to collect …","Registers a new callsite with this subscriber, returning …","Returns true if a span or event with the specified …","Returns the highest verbosity level that this <code>Subscriber</code> …","Visit the construction of a new span, returning a new …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Records that an <code>Event</code> has occurred.","Records that a span has been entered.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","<strong>This method is deprecated.</strong>","Notifies the subscriber that a [<code>span ID</code>] has been …","Returns a type representing this subscriber’s view of …","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Events represent single points in time during the …","<code>Event</code>s represent single points in time where something …","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to …","Instruments a function to create and enter a <code>tracing</code> span …","Constructs a new span.","Constructs a span at the trace level.","Constructs a span at the debug level.","Constructs a span at the info level.","Constructs a span at the warn level.","Constructs a span at the error level.","Constructs a new <code>Event</code>.","Constructs an event at the trace level.","Constructs an event at the debug level.","Constructs an event at the info level.","Constructs an event at the warn level.","Constructs an event at the error leveleturns the current default dispatcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new <code>Dispatch</code> that discards events and spans.","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Registers a new callsite with this subscriber, returning …","Record the construction of a new span, returning a new ID …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Returns true if a span with the specified metadata would …","Records that an <code>Event</code> has occurred.","Records that a span has been can_enter.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been dropped.","Notifies the subscriber that a span ID has been dropped, …","Returns a type representing this subscriber’s view of …","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Returns an <code>Identifier</code> that uniquely identifies the …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns whether or not this <code>FieldSet</code> has fields.","Returns an <code>Identifier</code> that uniquely identifies the …","The “off” level.","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns a <code>LevelFilter</code> that enables spans and events with …","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","Returns <code>Attributes</code> describing a new child span of the …","Returns <code>Attributes</code> describing a new span at the root of …","Returns <code>Attributes</code> describing a new child span of the …","Returns a reference to the new span’s metadata.","Returns a reference to a <code>ValueSet</code> containing any values …","Returns true if the new span should be a root.","Returns true if the new span’s parent should be …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Constructs a new span ID from the given <code>u64</code>.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Records all the fields in this <code>Record</code> with the provided …","Returns <code>true</code> if this <code>Record</code> contains a value for the …","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns some reference to this <code>Subscriber</code> value if it is …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns an <code>Interest</code> indicating the subscriber is …","Returns an <code>Interest</code> indicating the subscriber is always …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns <code>true</code> if the subscriber is always interested in …","Constructs a new <code>Event</code> with the specified metadata and …","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, …","Constructs a new <code>Event</code> with the specified metadata and …","Visits all the fields on this <code>Event</code> with the specified …","Returns an iterator over the set of values on this <code>Event</code>.","Returns metadata describing this <code>Event</code>.","Returns true if the new event should be a root.","Returns true if the new event’s parent should be …","Returns the new event’s explicitly-specified parent, if …","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Construct new metadata for a span or event, with a name, …","Returns the names of the fields on the described span or …","Returns the level of verbosity of the described span or …","Returns the name of the span.","Returns a string describing the part of the system where …","Returns the path to the Rust module where the span …","Returns the name of the source code file where the span …","Returns the line number in the source code file where the …","Returns an opaque <code>Identifier</code> that uniquely identifies the …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,2,0,0,0,0,0,3,0,0,4,4,0,5,5,0,0,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,7,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,4,4,0,0,0,2,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,6,6,6,6,6,6,6,6,6,6,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,8,8,8,8,8,8,8,8,8,27,27,27,27,27,27,27,9,9,9,9,9,9,9,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,23,14,25,14,12,23,23,15,25,25,23,23,30,23,14,30,30,30,23,23,30,13,14,16,2,19,23,22,30,17,15,19,20,12,11,14,19,20,30,12,23,22,25,28,18,23,23,23,23,23,30,30,30,30,30,23,23,23,23,23,30,30,30,30,30,15,23,20,31,16,30,29,14,28,12,17,11,19,25,22,18,2,24,26,13,14,8,27,9,8,21,6,8,8,9,21,6,27,9,8,8,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,14,16,16,16,16,16,16,17,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,26,26,26,26,10,10,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31],"f":[null,[[["dispatch",3]],["defaultguard",3]],[[["dispatch",3]]],null,[[]],[[["dispatch",3]],[["setglobaldefaulterror",3],["result",4]]],null,null,null,null,null,null,null,null,null,[[["field",3],["i64",15]]],[[["field",3],["u64",15]]],[[["field",3],["bool",15]]],[[["field",3],["str",15]]],[[["field",3],["error",8]]],[[["field",3],["debug",8]]],null,[[["field",3],["visit",8]]],null,null,[[],["displayvalue",3]],[[],["debugvalue",3]],null,[[["metadata",3]],[["field",3],["option",4]]],null,null,[[["span",3]],["instrumented",3]],[[],["instrumented",3]],null,[[],["withdispatch",3]],[[],["withdispatch",3]],null,null,[[],["span",3]],[[],["span",3]],[[]],[[]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[]],null,null,null,null,null,null,null,null,null,[[],[["option",4],["id",3]]],null,null,null,[[["valueset",3],["metadata",3]],["span",3]],[[["valueset",3],["metadata",3]],["span",3]],[[["valueset",3],["metadata",3]],["span",3]],[[["metadata",3]],["span",3]],[[],["span",3]],[[],["span",3]],[[],["entered",3]],[[],["enteredspan",3]],[[["fnonce",8]]],[[],[["option",4],["field",3]]],[[],["bool",15]],[[]],[[["valueset",3]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["id",3],["option",4]]],[[],[["option",4],["metadata",3]]],[[],["option",4]],[[],["span",3]],null,null,[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[],[["option",4],["levelfilter",3]]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[["typeid",3]],["option",4]],null,null,[[]],[[],[["result",4],["setglobaldefaulterror",3]]],[[],["defaultguard",3]],null,null,[[["span",3]],["instrumented",3]],[[],["instrumented",3]],null,null,null,[[["field",3],["visit",8]]],null,[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[],[["option",4],["levelfilter",3]]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[["typeid",3]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["level",3],["option",4]]],[[],["str",15]],[[]],[[]],[[],["dispatch",3]],[[["level",3],["option",4]],["levelfilter",3]],[[["level",3]],["levelfilter",3]],[[["empty",3]],["bool",15]],[[["id",3]],["bool",15]],[[["id",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],["bool",15]],[[["field",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["ordering",4]],[[["levelfilter",3]],["ordering",4]],[[["str",15]],[["levelfilter",3],["result",4]]],[[["str",15]],[["result",4],["level",3],["parselevelerror",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["field",3],["visit",8]]],[[["field",3],["visit",8]]],[[["field",3],["visit",8]]],[[],["dispatch",3]],[[]],[[],["field",3]],[[],["displayvalue",3]],[[],["debugvalue",3]],[[],["level",3]],[[],["dispatch",3]],[[],["levelfilter",3]],[[],["parselevelfiltererror",3]],[[],["id",3]],[[],["interest",3]],[[],[["field",3],["option",4]]],[[["levelfilter",3]],[["ordering",4],["option",4]]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],[["ordering",4],["option",4]]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],[["ordering",4],["option",4]]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],[["ordering",4],["option",4]]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["metadata",3]],[["field",3],["option",4]]],[[]],[[]],[[]],[[],[["id",3],["option",4]]],[[],["withdispatch",3]],[[],["instrumented",3]],[[],["span",3]],[[],["bool",15]],[[],["span",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["pin",3],["context",3]],["poll",4]],[[],["dispatch",3]],[[],["dispatch",3]],[[["metadata",3]],["interest",3]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["metadata",3]],["bool",15]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[],["bool",15]],[[],["option",4]],[[],["identifier",3]],[[],["str",15]],[[["identifier",3]],["fieldset",3]],[[],[["field",3],["option",4]]],[[["field",3]],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[],["bool",15]],[[],["identifier",3]],null,null,null,null,null,null,[[["level",3]],["levelfilter",3]],[[],[["level",3],["option",4]]],[[],["levelfilter",3]],[[["metadata",3],["valueset",3]],["attributes",3]],[[["metadata",3],["valueset",3]],["attributes",3]],[[["id",3],["metadata",3],["valueset",3]],["attributes",3]],[[],["metadata",3]],[[],["valueset",3]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["id",3]]],[[["visit",8]]],[[["field",3]],["bool",15]],[[],["bool",15]],[[["u64",15]],["id",3]],[[["nonzerou64",3]],["id",3]],[[],["u64",15]],[[],["nonzerou64",3]],[[["valueset",3]],["record",3]],[[["visit",8]]],[[["field",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["interest",3]],[[],["interest",3]],[[],["interest",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["metadata",3],["valueset",3]]],[[["metadata",3],["valueset",3]],["event",3]],[[["metadata",3],["valueset",3]],["event",3]],[[["metadata",3],["valueset",3]]],[[["visit",8]]],[[],["iter",3]],[[],["metadata",3]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["id",3]]],null,null,null,null,null,[[["u32",15],["level",3],["kind",3],["str",15],["str",15],["option",4],["fieldset",3],["option",4]],["metadata",3]],[[],["fieldset",3]],[[],["level",3]],[[],["str",15]],[[],["str",15]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["option",4],["u32",15]]],[[],["identifier",3]],[[],["bool",15]],[[],["bool",15]]],"p":[[8,"Visit"],[8,"Value"],[8,"AsField"],[8,"Instrument"],[8,"WithSubscriber"],[3,"Instrumented"],[8,"AsId"],[3,"Span"],[3,"EnteredSpan"],[8,"Subscriber"],[3,"DefaultGuard"],[3,"Dispatch"],[3,"SetGlobalDefaultError"],[3,"Field"],[3,"Empty"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"WithDispatch"],[3,"ParseLevelFilterError"],[3,"LevelFilter"],[3,"Attributes"],[3,"Id"],[3,"Record"],[3,"Entered"],[3,"Interest"],[3,"Event"],[3,"Level"],[3,"Metadata"]]},\
"tracing_attributes":{"doc":"A procedural macro attribute for instrumenting functions …","t":[23],"n":["instrument"],"q":["tracing_attributes"],"d":["Instruments a function to create and enter a <code>tracing</code> span …"],"i":[0],"f":[null],"p":[]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","t":[0,8,10,10,3,5,5,0,3,3,5,5,5,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,0,3,3,3,3,3,8,11,11,11,11,11,10,8,10,3,3,5,5,11,11,11,11,11,11,11,11,11,0,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,18,18,18,18,18,18,18,18,18,18,18,11,11,11,3,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,11,10,11,10,10,10,10,10,10,11,11,11,11,11,11,11,3,11,11,11,11,11,11,3,8,10,10,3,3,3,3,3,3,8,11,10,11,10,10,10,10,10,10,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["callsite","Callsite","set_interest","metadata","Identifier","rebuild_interest_cache","register","dispatcher","Dispatch","DefaultGuard","with_default","set_default","set_global_default","SetGlobalDefaultError","get_default","none","new","register_callsite","new_span","record","record_follows_from","enabled","event","enter","exit","clone_span","drop_span","try_close","current_span","is","downcast_ref","event","Event","dispatch","new","new_child_of","child_of","record","fields","metadata","is_root","is_contextual","parent","field","Field","Empty","FieldSet","ValueSet","Iter","Visit","record_i64","record_u64","record_bool","record_str","record_error","record_debug","Value","record","DisplayValue","DebugValue","display","debug","callsite","name","new","field","contains","iter","len","is_empty","callsite","metadata","Metadata","Kind","Level","LevelFilter","ParseLevelFilterError","new","fields","level","name","target","module_path","file","line","callsite","is_event","is_span","EVENT","SPAN","is_span","is_event","ERROR","WARN","INFO","DEBUG","TRACE","OFF","ERROR","WARN","INFO","DEBUG","TRACE","from_level","into_level","current","ParseLevelError","span","Id","Attributes","Record","Current","from_u64","from_non_zero_u64","into_u64","into_non_zero_u64","new","new_root","child_of","metadata","values","is_root","is_contextual","parent","record","contains","is_empty","new","record","contains","is_empty","new","none","is_known","into_inner","id","metadata","subscriber","Subscriber","register_callsite","enabled","max_level_hint","new_span","record","record_follows_from","event","enter","exit","clone_span","drop_span","try_close","current_span","downcast_raw","is","downcast_ref","Interest","never","sometimes","always","is_never","is_sometimes","is_always","Once","Callsite","set_interest","metadata","Dispatch","Event","Field","Level","LevelFilter","Metadata","Subscriber","register_callsite","enabled","max_level_hint","new_span","record","record_follows_from","event","enter","exit","clone_span","drop_span","try_close","current_span","downcast_raw","identify_callsite","metadata","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","record","record","record","drop","as_ref","from","from","from","into","into","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","from_str","from_str","new","call_once","call_once_force","is_completed"],"q":["tracing_core","tracing_core::callsite","","","","","","tracing_core","tracing_core::dispatcher","","","","","","","","","","","","","","","","","","","","","","","tracing_core","tracing_core::event","","","","","","","","","","","tracing_core","tracing_core::field","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core","tracing_core::metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core","tracing_core::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core","tracing_core::subscriber","","","","","","","","","","","","","","","","","","","","","","","","tracing_core","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::callsite","","","","","","","","","tracing_core","","","","","","","","","tracing_core::dispatcher","","","","","","","","","","","","","","","tracing_core","","","","","","","","","","","","","","","","","tracing_core::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core","","","","","","","tracing_core::metadata","","","","","","","","","tracing_core","","","","","","","","","","","","","","","","","","","","tracing_core::metadata","","","","","","","","","","","","","","","","","","tracing_core::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_core::subscriber","","","","","","","","","tracing_core","","","","","","","","tracing_core::field","","","tracing_core::dispatcher","tracing_core","","","","","tracing_core::span","tracing_core::field","tracing_core::callsite","tracing_core","tracing_core::field","","tracing_core","tracing_core::metadata","tracing_core","","tracing_core::metadata","tracing_core::span","tracing_core::subscriber","tracing_core","","","tracing_core::callsite","tracing_core::field","tracing_core","tracing_core::metadata","","tracing_core","","","","","","tracing_core::span","","tracing_core","","","","","","","","","","","","","","","","","","","","tracing_core::callsite","tracing_core::dispatcher","","tracing_core","","","tracing_core::field","","","","","","","tracing_core::metadata","tracing_core","tracing_core::metadata","tracing_core","","tracing_core::metadata","tracing_core::span","","","","tracing_core::subscriber","tracing_core::dispatcher","tracing_core::field","","tracing_core","tracing_core::field","","tracing_core","","tracing_core::metadata","","tracing_core::callsite","tracing_core","tracing_core::span","tracing_core","","","","",""],"d":["Callsites represent the source locations from which spans …","Trait implemented by callsites.","Sets the <code>Interest</code> for this callsite.","Returns the metadata associated with the callsite.","Uniquely identifies a <code>Callsite</code>","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Dispatches trace events to <code>Subscriber</code>s.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","A guard that resets the current default dispatcher to the …","Sets this dispatch as the default for the duration of a …","Sets the dispatch as the default dispatch for the …","Sets this dispatch as the global default for the duration …","Returned if setting the global dispatcher fails.","Executes a closure with a reference to this thread’s …","Returns a new <code>Dispatch</code> that discards events and spans.","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.","Registers a new callsite with this subscriber, returning …","Record the construction of a new span, returning a new ID …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Returns true if a span with the specified metadata would …","Records that an <code>Event</code> has occurred.","Records that a span has been can_enter.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","Notifies the subscriber that a span ID has been dropped.","Notifies the subscriber that a span ID has been dropped, …","Returns a type representing this subscriber’s view of …","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …","Events represent single points in time during the …","<code>Event</code>s represent single points in time where something …","Constructs a new <code>Event</code> with the specified metadata and …","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, …","Constructs a new <code>Event</code> with the specified metadata and …","Visits all the fields on this <code>Event</code> with the specified …","Returns an iterator over the set of values on this <code>Event</code>.","Returns metadata describing this <code>Event</code>.","Returns true if the new event should be a root.","Returns true if the new event’s parent should be …","Returns the new event’s explicitly-specified parent, if …","Span and <code>Event</code> key-value data.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","An empty field.","Describes the fields present on a span.","A set of fields and values for a span.","An iterator over a set of fields.","Visits typed values.","Visit a signed 64-bit integer value.","Visit an unsigned 64-bit integer value.","Visit a boolean value.","Visit a string value.","Records a type implementing <code>Error</code>.","Visit a value implementing <code>fmt::Debug</code>.","A field value of an erased type.","Visits this value with the given <code>Visitor</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …","Returns an <code>Identifier</code> that uniquely identifies the …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns whether or not this <code>FieldSet</code> has fields.","Returns an <code>Identifier</code> that uniquely identifies the …","Metadata describing trace data.","Metadata describing a span or event.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Indicates that a string could not be parsed to a valid …","Construct new metadata for a span or event, with a name, …","Returns the names of the fields on the described span or …","Returns the level of verbosity of the described span or …","Returns the name of the span.","Returns a string describing the part of the system where …","Returns the path to the Rust module where the span …","Returns the name of the source code file where the span …","Returns the line number in the source code file where the …","Returns an opaque <code>Identifier</code> that uniquely identifies the …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>.","<code>Event</code> callsite","<code>Span</code> callsite","Return true if the callsite kind is <code>Span</code>","Return true if the callsite kind is <code>Event</code>","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","The “off” level.","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns a <code>LevelFilter</code> that enables spans and events with …","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","Returned if parsing a <code>Level</code> fails.","Spans represent periods of time in the execution of a …","Identifies a span within the context of a subscriber.","Attributes provided to a <code>Subscriber</code> describing a new span …","A set of fields recorded by a span.","Indicates what the <code>Subscriber</code> considers the “current” …","Constructs a new span ID from the given <code>u64</code>.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns <code>Attributes</code> describing a new child span of the …","Returns <code>Attributes</code> describing a new span at the root of …","Returns <code>Attributes</code> describing a new child span of the …","Returns a reference to the new span’s metadata.","Returns a reference to a <code>ValueSet</code> containing any values …","Returns true if the new span should be a root.","Returns true if the new span’s parent should be …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Records all the fields in this <code>Record</code> with the provided …","Returns <code>true</code> if this <code>Record</code> contains a value for the …","Returns true if this <code>Record</code> contains <em>no</em> values.","Constructs a new <code>Current</code> that indicates the current …","Constructs a new <code>Current</code> that indicates the current …","Returns <code>true</code> if the <code>Subscriber</code> that constructed this …","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …","Borrows the <code>Id</code> of the current span, if one exists and is …","Borrows the <code>Metadata</code> of the current span, if one exists …","Subscribers collect and record trace data.","Trait representing the functions required to collect …","Registers a new callsite with this subscriber, returning …","Returns true if a span or event with the specified …","Returns the highest verbosity level that this <code>Subscriber</code> …","Visit the construction of a new span, returning a new …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Records that an <code>Event</code> has occurred.","Records that a span has been entered.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","<strong>This method is deprecated.</strong>","Notifies the subscriber that a [<code>span ID</code>] has been …","Returns a type representing this subscriber’s view of …","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.","Returns some reference to this <code>Subscriber</code> value if it is …","Indicates a <code>Subscriber</code>’s interest in a particular …","Returns an <code>Interest</code> indicating that the subscriber is …","Returns an <code>Interest</code> indicating the subscriber is …","Returns an <code>Interest</code> indicating the subscriber is always …","Returns <code>true</code> if the subscriber is never interested in …","Returns <code>true</code> if the subscriber is sometimes interested in …","Returns <code>true</code> if the subscriber is always interested in …","A synchronization primitive which can be used to run a …","Trait implemented by callsites.","Sets the <code>Interest</code> for this callsite.","Returns the metadata associated with the callsite.","<code>Dispatch</code> trace data to a <code>Subscriber</code>.","<code>Event</code>s represent single points in time where something …","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","Trait representing the functions required to collect …","Registers a new callsite with this subscriber, returning …","Returns true if a span or event with the specified …","Returns the highest verbosity level that this <code>Subscriber</code> …","Visit the construction of a new span, returning a new …","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Records that an <code>Event</code> has occurred.","Records that a span has been entered.","Records that a span has been exited.","Notifies the subscriber that a span ID has been cloned.","<strong>This method is deprecated.</strong>","Notifies the subscriber that a [<code>span ID</code>] has been …","Returns a type representing this subscriber’s view of …","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Statically constructs an <code>Identifier</code> for the provided …","Statically constructs new span metadataeturns the current default dispatcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Once</code> value.","Performs an initialization routine once and only once. …","Performs the same function as <code>call_once()</code> except ignores …","Returns <code>true</code> if some <code>call_once()</code> call has completed …"],"i":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,4,4,4,4,4,4,0,5,0,0,0,0,6,6,7,7,7,7,7,7,8,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,16,16,16,16,16,16,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,0,0,1,1,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,19,19,19,19,19,19,19,19,19,2,2,2,2,2,2,2,2,2,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,6,22,22,22,22,22,22,22,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,18,18,18,18,18,18,18,18,18,28,28,28,28,28,28,28,28,24,25,22,20,6,2,12,12,12,16,23,19,2,24,25,6,10,11,12,26,13,18,2,11,12,19,22,6,10,10,11,11,12,12,11,12,13,13,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,19,20,21,2,3,6,22,23,5,24,25,7,8,10,11,26,9,12,27,13,14,15,16,18,21,5,24,6,7,8,11,12,27,26,19,6,13,11,12,28,28,28,28],"f":[null,null,[[["interest",3]]],[[],["metadata",3]],null,[[]],[[["callsite",8]]],null,null,null,[[["dispatch",3]]],[[["dispatch",3]],["defaultguard",3]],[[["dispatch",3]],[["setglobaldefaulterror",3],["result",4]]],null,[[]],[[]],[[]],[[["metadata",3]],["interest",3]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["metadata",3]],["bool",15]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[],["bool",15]],[[],["option",4]],null,null,[[["valueset",3],["metadata",3]]],[[["valueset",3],["metadata",3]]],[[["valueset",3],["metadata",3]]],[[["valueset",3],["metadata",3]]],[[["visit",8]]],[[],["iter",3]],[[],["metadata",3]],[[],["bool",15]],[[],["bool",15]],[[],[["id",3],["option",4]]],null,null,null,null,null,null,null,[[["field",3],["i64",15]]],[[["field",3],["u64",15]]],[[["field",3],["bool",15]]],[[["field",3],["str",15]]],[[["field",3],["error",8]]],[[["field",3],["debug",8]]],null,[[["field",3],["visit",8]]],null,null,[[],["displayvalue",3]],[[],["debugvalue",3]],[[],["identifier",3]],[[],["str",15]],[[["identifier",3]]],[[],[["field",3],["option",4]]],[[["field",3]],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[],["bool",15]],[[],["identifier",3]],null,null,null,null,null,null,[[["str",15],["option",4],["u32",15],["str",15],["fieldset",3],["level",3],["option",4],["kind",3]]],[[],["fieldset",3]],[[],["level",3]],[[],["str",15]],[[],["str",15]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],["identifier",3]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["level",3]]],[[],[["option",4],["level",3]]],[[]],null,null,null,null,null,null,[[["u64",15]]],[[["nonzerou64",3]]],[[],["u64",15]],[[],["nonzerou64",3]],[[["valueset",3],["metadata",3]]],[[["valueset",3],["metadata",3]]],[[["id",3],["valueset",3],["metadata",3]]],[[],["metadata",3]],[[],["valueset",3]],[[],["bool",15]],[[],["bool",15]],[[],[["id",3],["option",4]]],[[["visit",8]]],[[["field",3]],["bool",15]],[[],["bool",15]],[[["valueset",3]]],[[["visit",8]]],[[["field",3]],["bool",15]],[[],["bool",15]],[[["id",3],["metadata",3]]],[[]],[[],["bool",15]],[[],["option",4]],[[],[["id",3],["option",4]]],[[],[["option",4],["metadata",3]]],null,null,[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[],[["levelfilter",3],["option",4]]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[["typeid",3]],["option",4]],[[],["bool",15]],[[],["option",4]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["interest",3]]],[[],["metadata",3]],null,null,null,null,null,null,null,[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[],[["levelfilter",3],["option",4]]],[[["attributes",3]],["id",3]],[[["id",3],["record",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[["typeid",3]],["option",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["field",3],["visit",8]]],[[["field",3],["visit",8]]],[[["field",3],["visit",8]]],[[]],[[],["str",15]],[[]],[[["level",3]]],[[["option",4],["level",3]]],[[],[["option",4],["level",3]]],[[],[["id",3],["option",4]]],[[],[["field",3],["option",4]]],[[],["identifier",3]],[[],["dispatch",3]],[[],["displayvalue",3]],[[],["debugvalue",3]],[[]],[[],["kind",3]],[[],["level",3]],[[],["levelfilter",3]],[[],["parselevelfiltererror",3]],[[],["id",3]],[[],["interest",3]],[[]],[[],["ordering",4]],[[],["ordering",4]],[[["identifier",3]],["bool",15]],[[["empty",3]],["bool",15]],[[],["bool",15]],[[["kind",3]],["bool",15]],[[["kind",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],["bool",15]],[[["id",3]],["bool",15]],[[["id",3]],["bool",15]],[[["level",3]],[["option",4],["ordering",4]]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["levelfilter",3]],[["option",4],["ordering",4]]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],[["option",4],["ordering",4]]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],[["option",4],["ordering",4]]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],[["result",4],["parselevelerror",3]]],[[["str",15]],["result",4]],[[],["once",3]],[[]],[[]],[[],["bool",15]]],"p":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[3,"Attributes"],[3,"Record"],[3,"Current"],[8,"Subscriber"],[3,"Interest"],[3,"Identifier"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Empty"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"ParseLevelFilterError"],[3,"ParseLevelError"],[3,"Once"]]},\
"tracing_error":{"doc":"Utilities for enriching error handling with <code>tracing</code> …","t":[0,8,10,8,16,10,8,16,10,3,3,8,10,8,16,10,8,16,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,11],"n":["prelude","_","span_trace","_","Instrumented","in_current_span","_","Instrumented","in_current_span","SpanTrace","SpanTraceStatus","ExtractSpanTrace","span_trace","InstrumentError","Instrumented","in_current_span","InstrumentResult","Instrumented","in_current_span","TracedError","ErrorLayer","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","clone","default","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","source","new_span","downcast_raw","capture","with_spans","status","UNSUPPORTED","EMPTY","CAPTURED","new"],"q":["tracing_error","tracing_error::prelude","","","","","","","","tracing_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The <code>tracing-error</code> prelude.","A trait for extracting SpanTraces created by …","Attempts to downcast to a <code>TracedError</code> and return a …","Extension trait for instrumenting errors with <code>SpanTrace</code>s","The type of the wrapped error after instrumentation","Instrument an Error by bundling it with a SpanTrace","Extension trait for instrumenting errors in <code>Result</code>s with …","The type of the wrapped error after instrumentation","Instrument an Error by bundling it with a SpanTrace","A captured trace of <code>tracing</code> spans.","The current status of a SpanTrace, indicating whether it …","A trait for extracting SpanTraces created by …","Attempts to downcast to a <code>TracedError</code> and return a …","Extension trait for instrumenting errors with <code>SpanTrace</code>s","The type of the wrapped error after instrumentation","Instrument an Error by bundling it with a SpanTrace","Extension trait for instrumenting errors in <code>Result</code>s with …","The type of the wrapped error after instrumentation","Instrument an Error by bundling it with a SpanTrace","A wrapper type for <code>Error</code>s that bundles a <code>SpanTrace</code> with …","A subscriber <code>Layer</code> that enables capturing <code>SpanTrace</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notifies this layer that a new span was constructed with …","","Capture the current span trace.","Apply a function to all captured spans in the trace until …","Returns the status of this <code>SpanTrace</code>.","Formatting a SpanTrace is not supported, likely because …","The SpanTrace is empty, likely because it was captured …","A span trace has been captured and the <code>SpanTrace</code> should …","Returns a new <code>ErrorLayer</code> with the provided field formatter…"],"i":[0,0,1,0,2,2,0,3,3,0,0,0,1,0,2,2,0,3,3,0,0,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,6,4,7,5,5,5,4,6,7,4,6,6,7,7,4,4,4,5,5,5,7],"f":[null,null,[[],[["option",4],["spantrace",3]]],null,null,[[]],null,null,[[],["result",4]],null,null,null,[[],[["option",4],["spantrace",3]]],null,null,[[]],null,null,[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["spantrace",3]],[[]],[[["spantracestatus",3]],["bool",15]],[[["spantracestatus",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["error",8],["option",4]]],[[["attributes",3],["context",3],["id",3]]],[[["typeid",3]],["option",4]],[[]],[[]],[[],["spantracestatus",3]],null,null,null,[[]]],"p":[[8,"_"],[8,"_"],[8,"_"],[3,"SpanTrace"],[3,"SpanTraceStatus"],[3,"TracedError"],[3,"ErrorLayer"]]},\
"tracing_subscriber":{"doc":"Utilities for implementing and composing <code>tracing</code> …","t":[0,0,3,11,0,3,3,11,11,0,3,11,8,11,11,11,11,11,10,8,16,10,8,10,11,8,10,8,11,8,10,8,10,8,11,11,11,0,3,3,0,0,8,10,8,10,11,5,5,3,3,3,3,3,11,11,11,11,11,11,11,11,3,3,11,11,3,18,18,18,18,18,18,18,0,8,10,5,5,3,3,0,8,16,10,3,11,3,11,6,3,3,12,3,5,8,10,8,10,11,5,8,16,10,3,3,6,3,5,5,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,8,11,11,11,11,11,11,11,11,11,11,11,11,8,11,3,3,3,3,11,11,11,11,11,11,11,11,11,0,0,3,3,3,3,8,16,10,11,8,10,10,10,10,10,3,3,3,11,11,11,11,11,11,11,11,11,11,0,3,3,3,11,11,11,11,11,11,11,11,0,8,11,11,11,3,3,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["field","debug","Alt","new","delimited","Delimited","VisitDelimited","new","new","display","Messages","new","Visit","record_i64","record_u64","record_bool","record_str","record_error","record_debug","MakeVisitor","Visitor","make_visitor","VisitOutput","finish","visit","RecordFields","record","MakeOutput","visit_with","VisitWrite","writer","VisitFmt","writer","MakeExt","debug_alt","display_messages","delimited","filter","LevelFilter","LevelParseError","fmt","format","FormatEvent","format_event","FormatFields","format_fields","add_fields","format","debug_fn","FieldFn","FieldFnVisitor","Compact","Full","Format","compact","with_timer","without_time","with_ansi","with_target","with_level","with_thread_ids","with_thread_names","DefaultFields","DefaultVisitor","new","new","FmtSpan","NEW","ENTER","EXIT","CLOSE","NONE","ACTIVE","FULL","time","FormatTime","format_time","time","uptime","SystemTime","Uptime","writer","MakeWriter","Writer","make_writer","TestWriter","new","BoxMakeWriter","new","LayerBuilder","FmtContext","FormattedFields","fields","Layer","format","FormatEvent","format_event","FormatFields","format_fields","add_fields","time","MakeWriter","Writer","make_writer","TestWriter","Subscriber","Formatter","SubscriberBuilder","fmt","layer","DEFAULT_MAX_LEVEL","builder","new","finish","try_init","init","with_timer","without_time","with_span_events","with_target","with_level","with_thread_names","with_thread_ids","compact","fmt_fields","with_max_level","event_format","inherit_fields","on_event","with_writer","with_test_writer","try_init","init","layer","Layer","register_callsite","enabled","new_span","on_record","on_follows_from","on_event","on_enter","on_exit","on_close","on_id_change","and_then","with_subscriber","SubscriberExt","with","Context","Layered","Identity","Scope","current_span","enabled","event","metadata","span","exists","lookup_current","scope","new","prelude","registry","Extensions","ExtensionsMut","Data","Registry","LookupSpan","Data","span_data","span","SpanData","id","metadata","parent","extensions","extensions_mut","SpanRef","Parents","FromRoot","id","metadata","name","fields","parent_id","parent","parents","from_root","extensions","extensions_mut","reload","Layer","Handle","Error","new","handle","reload","modify","clone_current","with_current","is_poisoned","is_dropped","util","SubscriberInitExt","set_default","try_init","init","TryInitError","Registry","registry","CurrentSpan","new","id","enter","exit","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","into","from","from","eq","ne","eq","cmp","from_str","fmt","fmt","clone","clone","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","fmt","fmt","make_visitor","make_visitor","make_visitor","make_visitor","make_visitor","finish","finish","finish","finish","finish","writer","writer","writer","writer","writer","writer","writer","format_event","format_event","format_fields","format_time","format_time","make_writer","make_writer","register_callsite","enabled","max_level_hint","new_span","on_record","on_enter","on_exit","on_close","on_event","downcast_raw","register_callsite","enabled","new_span","on_record","on_follows_from","on_event","on_enter","on_exit","on_close","on_id_change","register_callsite","enabled","new_span","on_record","on_follows_from","on_event","on_enter","on_exit","on_close","on_id_change","span_data","span_data","span_data","id","metadata","parent","extensions","extensions_mut","from","into","next","next","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","eq","eq","eq","ne","eq","eq","ne","partial_cmp","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","bitand","bitor","bitxor","bitand_assign","bitor_assign","bitxor_assign","source","write","flush","record_i64","record_u64","record_bool","record_str","record_debug","record_i64","record_u64","record_bool","record_str","record_debug","record_i64","record_u64","record_bool","record_str","record_debug","record_str","record_error","record_debug","record_debug","register_callsite","enabled","new_span","record","record_follows_from","event","enter","exit","current_span","clone_span","try_close","max_level_hint","downcast_raw","register_callsite","enabled","max_level_hint","new_span","record","record_follows_from","event","enter","exit","clone_span","drop_span","try_close","current_span","register_callsite","enabled","new_span","record","record_follows_from","event","enter","exit","clone_span","current_span","try_close","OFF","ERROR","WARN","INFO","DEBUG","TRACE","from_level","into_level","current","builder","new","event_format","with_writer","with_test_writer","with_timer","without_time","with_span_events","with_target","with_level","with_thread_ids","with_thread_names","compact","fmt_fields","finish","finish","new","visit_spans","metadata","span","exists","lookup_current","scope","current_span","field_format","get","insert","replace","get_mut","remove"],"q":["tracing_subscriber","tracing_subscriber::field","tracing_subscriber::field::debug","","tracing_subscriber::field","tracing_subscriber::field::delimited","","","","tracing_subscriber::field","tracing_subscriber::field::display","","tracing_subscriber::field","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber","tracing_subscriber::filter","","tracing_subscriber","tracing_subscriber::fmt","tracing_subscriber::fmt::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::fmt","tracing_subscriber::fmt::time","","","","","","tracing_subscriber::fmt","tracing_subscriber::fmt::writer","","","","","","","tracing_subscriber::fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber","tracing_subscriber::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber","","tracing_subscriber::registry","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber","tracing_subscriber::reload","","","","","","","","","","","tracing_subscriber","tracing_subscriber::util","","","","","tracing_subscriber","","","","","","","tracing_subscriber::field::debug","","","","","","","","","tracing_subscriber::field::delimited","","","","","","","","","","","","","","","","tracing_subscriber::field::display","","","","","","","","","tracing_subscriber::filter","","","","","","","","","","","","","","","","","","","","tracing_subscriber::fmt","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::fmt::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::fmt::time","","","","","","","","","","","","","","","","","","tracing_subscriber::fmt","","","","","","","tracing_subscriber::fmt::writer","","","","","","","tracing_subscriber::fmt","","","","","","","","","","","","","","tracing_subscriber::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::reload","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::util","","","","","","","","tracing_subscriber","","","","","","","tracing_subscriber::filter","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::field::debug","tracing_subscriber::field::delimited","tracing_subscriber::field::display","tracing_subscriber::fmt::format","","tracing_subscriber::field::debug","tracing_subscriber::field::delimited","tracing_subscriber::field::display","tracing_subscriber::fmt::format","","tracing_subscriber::field::debug","tracing_subscriber::field::display","tracing_subscriber::field::debug","tracing_subscriber::field::delimited","tracing_subscriber::field::display","tracing_subscriber::fmt::format","","","","tracing_subscriber::fmt","tracing_subscriber::fmt::time","","tracing_subscriber::fmt","tracing_subscriber::fmt::writer","tracing_subscriber::filter","","","tracing_subscriber::fmt","","","","","","","tracing_subscriber::layer","","","","","","","","","","tracing_subscriber::reload","","","","","","","","","","tracing_subscriber::fmt","tracing_subscriber::layer","tracing_subscriber::registry","","","","","","tracing_subscriber::fmt::time","tracing_subscriber::fmt","tracing_subscriber::layer","tracing_subscriber::registry","","","tracing_subscriber::field::debug","tracing_subscriber::field::delimited","tracing_subscriber::field::display","tracing_subscriber::fmt::format","","","","","tracing_subscriber::fmt::time","","tracing_subscriber::layer","","","tracing_subscriber::reload","tracing_subscriber::fmt","","tracing_subscriber::fmt::format","","","","tracing_subscriber::fmt::time","","tracing_subscriber::fmt","","","tracing_subscriber::layer","tracing_subscriber::registry","tracing_subscriber","tracing_subscriber::fmt::format","","","","","tracing_subscriber::fmt::time","","","tracing_subscriber::fmt::format","tracing_subscriber::fmt","tracing_subscriber::field::debug","tracing_subscriber::field::delimited","","tracing_subscriber::field::display","tracing_subscriber::fmt","","","tracing_subscriber::fmt::format","","","","","","","","tracing_subscriber::fmt::time","","tracing_subscriber::fmt","tracing_subscriber::fmt::writer","tracing_subscriber::fmt","","tracing_subscriber::layer","","","","tracing_subscriber::registry","","","","","","","tracing_subscriber::reload","","","tracing_subscriber::util","tracing_subscriber","tracing_subscriber::fmt","tracing_subscriber::reload","tracing_subscriber::util","tracing_subscriber::fmt::format","","","","","","tracing_subscriber::util","tracing_subscriber::fmt","","tracing_subscriber::field::debug","","","","","tracing_subscriber::field::delimited","","","","","tracing_subscriber::field::display","","","","","tracing_subscriber::fmt::format","","","","tracing_subscriber::fmt","","","","","","","","","","","","","tracing_subscriber::layer","","","","","","","","","","","","","tracing_subscriber::registry","","","","","","","","","","","tracing_subscriber::filter","","","","","","","","","tracing_subscriber::fmt","","","","","","","","","","","","","","","","","","","","","","","","","tracing_subscriber::registry","","","",""],"d":["Utilities for working with fields and field visitors.","<code>MakeVisitor</code> wrappers for working with <code>fmt::Debug</code> fields.","A visitor wrapper that ensures any <code>fmt::Debug</code> fields are …","Wraps the provided visitor so that any <code>fmt::Debug</code> fields …","A <code>MakeVisitor</code> wrapper that separates formatted fields …","A <code>MakeVisitor</code> wrapper that wraps a visitor that writes …","A visitor wrapper that inserts a delimiter after the …","Returns a new <code>MakeVisitor</code> implementation that wraps <code>inner</code> …","Returns a new <code>Visit</code> implementation that wraps <code>inner</code> so …","<code>MakeVisitor</code> wrappers for working with <code>fmt::Display</code> fields.","A visitor wrapper that ensures any strings named “…","Returns a new <code>MakeVisitor</code> implementation that will wrap …","Visits typed values.","Visit a signed 64-bit integer value.","Visit an unsigned 64-bit integer value.","Visit a boolean value.","Visit a string value.","Records a type implementing <code>Error</code>.","Visit a value implementing <code>fmt::Debug</code>.","Creates new visitors.","The visitor type produced by this <code>MakeVisitor</code>.","Make a new visitor for the provided <code>target</code>.","A visitor that produces output once it has visited a set …","Completes the visitor, returning any output.","Visit a set of fields, and return the output of finishing …","Extension trait implemented by types which can be …","Record all the fields in <code>self</code> with the provided <code>visitor</code>.","Extension trait implemented for all <code>MakeVisitor</code> …","Visits all fields in <code>fields</code> with a new visitor …","Extension trait implemented by visitors to indicate that …","Returns the writer that this visitor writes to.","Extension trait implemented by visitors to indicate that …","Returns the formatter that this visitor writes to.","Extension trait providing <code>MakeVisitor</code> combinators.","Wraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …","Wraps <code>self</code> so that any string fields named “message” …","Wraps <code>self</code> so that when fields are formatted to a writer, …","<code>Layer</code>s that control which spans and events are enabled by …","A filter comparable to a verbosity <code>Level</code>.","Indicates that a string could not be parsed to a valid …","A <code>Subscriber</code> for formatting and logging <code>tracing</code> data.","Formatters for logging <code>tracing</code> events.","A type that can format a tracing <code>Event</code> for a <code>fmt::Write</code>.","Write a log message for <code>Event</code> in <code>Context</code> to the given …","A type that can format a set of fields to a <code>fmt::Write</code>.","Format the provided <code>fields</code> to the provided <code>writer</code>, …","Record additional field(s) on an existing span.","Returns the default configuration for an [event formatter]…","Returns a <code>FormatFields</code> implementation that formats fields …","A <code>FormatFields</code> implementation that formats fields by …","The visitor produced by <code>FieldFn</code>’s <code>MakeVisitor</code> …","Marker for <code>Format</code> that indicates that the compact log …","Marker for <code>Format</code> that indicates that the verbose log …","A pre-configured event formatter.","Use a less verbose output format.","Use the given <code>timer</code> for log message timestamps.","Do not emit timestamps with log messages.","Enable ANSI terminal colors for formatted output.","Sets whether or not an event’s target is displayed.","Sets whether or not an event’s level is displayed.","Sets whether or not the thread ID of the current thread …","Sets whether or not the name of the current thread is …","The default <code>FormatFields</code> implementation.","The visitor produced by <code>DefaultFields</code>’s <code>MakeVisitor</code> …","Returns a new default <code>FormatFields</code> implementation.","Returns a new default visitor that formats to the …","Configures what points in the span lifecycle are logged …","one event when span is created","one event per enter of a span","one event per exit of a span","one event when the span is dropped","spans are ignored (this is the default)","one event per enter/exit of a span","events at all points (new, enter, exit, drop)","Formatters for event timestamps.","A type that can measure and format the current time.","Measure and write out the current time.","Returns a new <code>SystemTime</code> timestamp provider.","Returns a new <code>Uptime</code> timestamp provider.","Retrieve and print the current wall-clock time.","Retrieve and print the relative elapsed wall-clock time …","Abstractions for creating <code>io::Write</code> instances.","A type that can create <code>io::Write</code> instances.","The concrete <code>io::Write</code> implementation returned by …","Returns an instance of <code>Writer</code>.","A writer intended to support <code>libtest</code>’s output capturing …","Returns a new <code>TestWriter</code> with the default configuration.","A writer that erases the specific <code>io::Write</code> and <code>Makewriter</code>…","Constructs a <code>BoxMakeWriter</code> wrapping a type implementing …","A builder for <code>Layer</code> that logs formatted representations …","Provides the current span context to a formatter.","A formatted representation of a span’s fields stored in …","The formatted fields of a span.","A <code>Layer</code> that logs formatted representations of <code>tracing</code> …","Returns the default configuration for an [event formatter]…","A type that can format a tracing <code>Event</code> for a <code>fmt::Write</code>.","Write a log message for <code>Event</code> in <code>Context</code> to the given …","A type that can format a set of fields to a <code>fmt::Write</code>.","Format the provided <code>fields</code> to the provided <code>writer</code>, …","Record additional field(s) on an existing span.","Returns a new <code>SystemTime</code> timestamp provider.","A type that can create <code>io::Write</code> instances.","The concrete <code>io::Write</code> implementation returned by …","Returns an instance of <code>Writer</code>.","A writer intended to support <code>libtest</code>’s output capturing …","A <code>Subscriber</code> that logs formatted representations of …","A <code>Subscriber</code> that logs formatted representations of …","Configures and constructs <code>Subscriber</code>s.","Returns a new <code>SubscriberBuilder</code> for configuring a …","Returns a new formatting layer that can be composed with …","The maximum verbosity level that is enabled by a …","Returns a new <code>SubscriberBuilder</code> for configuring a format …","Returns a new format subscriber with the default …","Finish the builder, returning a new <code>FmtSubscriber</code>.","Install this Subscriber as the global default if one is …","Install this Subscriber as the global default.","Use the given <code>timer</code> for log message timestamps.","Do not emit timestamps with log messages.","Configures how synthesized events are emitted at points …","Sets whether or not an event’s target is displayed.","Sets whether or not an event’s level is displayed.","Sets whether or not the name of the current thread is …","Sets whether or not the thread ID of the current thread …","Sets the subscriber being built to use a less verbose …","Sets the Visitor that the subscriber being built will use …","Sets the maximum verbosity level that will be enabled by …","Sets the function that the subscriber being built should …","Sets whether or not spans inherit their parents’ field …","Sets the function that the subscriber being built should …","Sets the <code>MakeWriter</code> that the subscriber being built will …","Configures the subscriber to support <code>libtest</code>’s output …","Install a global tracing subscriber that listens for …","Install a global tracing subscriber that listens for …","A composable abstraction for building <code>Subscriber</code>s.","A composable handler for <code>tracing</code> events.","Registers a new callsite with this layer, returning …","Returns <code>true</code> if this layer is interested in a span or …","Notifies this layer that a new span was constructed with …","Notifies this layer that a span with the given <code>Id</code> …","Notifies this layer that a span with the ID <code>span</code> recorded …","Notifies this layer that an event has occurred.","Notifies this layer that a span with the given ID was …","Notifies this layer that the span with the given ID was …","Notifies this layer that the span with the given ID has …","Notifies this layer that a span ID has been cloned, and …","Composes this layer around the given <code>Layer</code>, returning a …","Composes this <code>Layer</code> with the given <code>Subscriber</code>, returning a…","Extension trait adding a <code>with(Layer)</code> combinator to …","Wraps <code>self</code> with the provided <code>layer</code>.","Represents information about the current context provided …","A <code>Subscriber</code> composed of a <code>Subscriber</code> wrapped by one or …","A layer that does nothing.","An iterator over the stored data for all the spans in the …","Returns the wrapped subscriber’s view of the current …","Returns whether the wrapped subscriber would enable the …","Records the provided <code>event</code> with the wrapped subscriber.","Returns metadata for the span with the given <code>id</code>, if it …","Returns stored data for the span with the given <code>id</code>, if it …","Returns <code>true</code> if an active span exists for the given <code>Id</code>.","Returns stored data for the span that the wrapped …","Returns an iterator over the stored data for all the …","Returns a new <code>Identity</code> layer.","The <code>tracing-subscriber</code> prelude.","Storage for span data shared by multiple <code>Layer</code>s.","An immutable, read-only reference to a Span’s …","An mutable reference to a Span’s extensions.","Span data stored in a <code>Registry</code>.","A shared, reusable store for spans.","Provides access to stored span data.","The type of span data stored in this registry.","Returns the <code>SpanData</code> for a given <code>Id</code>, if it exists.","Returns a <code>SpanRef</code> for the span with the given <code>Id</code>, if it …","A stored representation of data associated with a span.","Returns this span’s ID.","Returns a reference to the span’s <code>Metadata</code>.","Returns a reference to the ID","Returns a reference to this span’s <code>Extensions</code>.","Returns a mutable reference to this span’s <code>Extensions</code>.","A reference to span data and the associated registry.","An iterator over the parents of a span.","An iterator over a span’s parents, starting with the …","Returns this span’s ID.","Returns a static reference to the span’s metadata.","Returns the span’s name,","Returns a list of fields defined by the span.","Returns the ID of this span’s parent, or <code>None</code> if this …","Returns a <code>SpanRef</code> describing this span’s parent, or <code>None</code>…","Returns an iterator over all parents of this span, …","Returns an iterator over all parents of this span, …","Returns a reference to this span’s <code>Extensions</code>.","Returns a mutable reference to this span’s <code>Extensions</code>.","Wrapper for a <code>Layer</code> to allow it to be dynamically …","Wraps a <code>Layer</code>, allowing it to be reloaded dynamically at …","Allows reloading the state of an associated <code>Layer</code>.","Indicates that an error occurred when reloading a layer.","Wraps the given <code>Layer</code>, returning a <code>Layer</code> and a <code>Handle</code> …","Returns a <code>Handle</code> that can be used to reload the wrapped …","Replace the current layer with the provided <code>new_layer</code>.","Invokes a closure with a mutable reference to the current …","Returns a clone of the layer’s current value if it …","Invokes a closure with a borrowed reference to the …","Returns <code>true</code> if this error occurred because the layer was …","Returns <code>true</code> if this error occurred because the <code>Subscriber</code>…","Extension traits and other utilities to make working with …","Extension trait adding utility methods for subscriber …","Sets <code>self</code> as the default subscriber in the current scope, …","Attempts to set <code>self</code> as the global default subscriber in …","Attempts to set <code>self</code> as the global default subscriber in …","Error returned by <code>try_init</code> if a global default subscriber …","A shared, reusable store for spans.","","Tracks the currently executing span on a per-thread basis.","Returns a new <code>CurrentSpan</code>.","Returns the <code>Id</code> of the span in which the current thread is …","Records that the current thread has entered the span with …","Records that the current thread has exited a span.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit a string value.","","","","","","","","","","Visit a string value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is intentionally not implemented, as recording fields…","","This is intentionally not implemented, as recording events…","","","","","Decrements the reference count of the span with the given …","The “off” level.","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns a <code>LevelFilter</code> that enables spans and events with …","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","Returns a new <code>LayerBuilder</code> for configuring a <code>Layer</code>.","Returns a new <code>Layer</code> with the default configuration.","Sets the event formatter that the layer will use to …","Sets the <code>MakeWriter</code> that the <code>Layer</code> being built will use …","Configures the subscriber to support <code>libtest</code>’s output …","Use the given <code>timer</code> for span and event timestamps.","Do not emit timestamps with spans and event.","Configures how synthesized events are emitted at points …","Sets whether or not an event’s target is displayed.","Sets whether or not an event’s level is displayed.","Sets whether or not the thread ID of the current thread …","Sets whether or not the name of the current thread is …","Sets the layer being built to use a less verbose formatter…","Sets the field formatter that the layer being built will …","Builds a <code>Layer</code> with the provided configuration.","Builds a <code>Layer</code> with the provided configuration.","Returns a new <code>FormattedFields</code>.","Visits every span in the current context with a closure.","Returns metadata for the span with the given <code>id</code>, if it …","Returns stored data for the span with the given <code>id</code>, if it …","Returns <code>true</code> if an active span exists for the given <code>Id</code>.","Returns stored data for the span that the wrapped …","Returns an iterator over the stored data for all the …","Returns the current span for this formatter.","Returns the field formatter configured by the subscriber …","Immutably borrows a type previously inserted into this …","Insert a type into this <code>Extensions</code>.","Replaces an existing <code>T</code> into this extensions.","Get a mutable reference to a type previously inserted on …","Remove a type from this <code>Extensions</code>."],"i":[0,0,0,1,0,0,0,2,3,0,0,4,0,5,5,5,5,5,5,0,6,6,0,7,7,0,8,0,9,0,10,0,11,0,12,12,12,0,0,0,0,0,0,13,0,14,14,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,0,0,16,17,0,18,18,18,18,18,18,18,0,0,19,0,0,0,0,0,0,20,20,0,21,0,22,0,0,0,23,0,0,0,13,0,14,14,0,0,20,20,0,0,0,0,0,0,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,0,27,0,0,0,0,28,28,28,28,28,28,28,28,29,0,0,0,0,0,0,0,30,30,30,0,31,31,31,31,31,0,0,0,32,32,32,32,32,32,32,32,32,32,0,0,0,0,33,33,34,34,34,34,35,35,0,0,36,36,36,0,0,0,0,37,37,37,37,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,23,23,23,23,23,23,23,23,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,21,21,21,21,21,21,21,22,22,22,22,22,22,22,24,24,24,24,24,24,24,25,25,25,25,25,25,25,28,28,28,28,28,28,28,28,28,48,48,48,48,48,48,48,48,48,29,29,29,29,29,29,29,29,29,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,32,32,32,32,32,32,32,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,56,56,56,56,56,56,56,56,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,38,39,38,38,38,38,38,38,38,38,38,38,38,39,1,2,4,16,42,1,3,4,17,43,1,4,1,3,4,17,43,15,15,41,46,47,21,22,38,38,38,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,33,33,33,33,33,33,33,33,33,33,24,48,52,53,53,53,53,53,47,25,49,54,55,55,1,2,4,42,44,45,15,18,46,47,48,29,28,34,40,23,44,45,15,16,46,47,21,24,25,29,52,37,18,44,45,18,18,46,47,47,18,23,1,2,3,4,40,23,41,42,44,45,15,16,17,43,18,46,47,21,22,24,25,28,48,29,49,50,51,52,53,32,54,55,33,34,35,56,37,23,35,56,18,18,18,18,18,18,56,21,21,1,1,1,1,1,3,3,3,3,3,4,4,4,4,4,17,17,17,43,24,24,24,24,24,24,24,24,24,24,24,24,24,48,48,48,48,48,48,48,48,48,48,48,48,48,52,52,52,52,52,52,52,52,52,52,52,38,38,38,38,38,38,38,38,38,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,57,23,41,41,41,41,41,41,41,41,50,51,51,51,51],"f":[null,null,null,[[]],null,null,null,[[]],[[]],null,null,[[]],null,[[["i64",15],["field",3]]],[[["u64",15],["field",3]]],[[["bool",15],["field",3]]],[[["str",15],["field",3]]],[[["error",8],["field",3]]],[[["debug",8],["field",3]]],null,null,[[]],null,[[]],[[]],null,[[["visit",8]]],null,[[]],null,[[],["write",8]],null,[[],["write",8]],null,[[],["alt",3]],[[],["messages",3]],[[],["delimited",3]],null,null,null,null,null,null,[[["event",3],["fmtcontext",3],["write",8]],["result",6]],null,[[["recordfields",8],["write",8]],["result",6]],[[["record",3],["string",3]],["result",6]],[[],["format",3]],[[],["fieldfn",3]],null,null,null,null,null,[[],[["format",3],["compact",3]]],[[],["format",3]],[[],["format",3]],[[["bool",15]],["format",3]],[[["bool",15]],["format",3]],[[["bool",15]],["format",3]],[[["bool",15]],["format",3]],[[["bool",15]],["format",3]],null,null,[[]],[[["bool",15],["write",8]]],null,null,null,null,null,null,null,null,null,null,[[["write",8]],["result",6]],[[],["systemtime",3]],[[],["uptime",3]],null,null,null,null,null,[[]],null,[[]],null,[[]],null,null,null,null,null,[[],["format",3]],null,[[["event",3],["fmtcontext",3],["write",8]],["result",6]],null,[[["recordfields",8],["write",8]],["result",6]],[[["record",3],["string",3]],["result",6]],[[],["systemtime",3]],null,null,[[]],null,null,null,null,[[],["subscriberbuilder",3]],[[],["layer",3]],null,[[],["subscriberbuilder",3]],[[]],[[],["subscriber",3]],[[],[["result",4],["box",3]]],[[]],[[],[["format",3],["subscriberbuilder",3]]],[[],[["format",3],["subscriberbuilder",3]]],[[["fmtspan",3]]],[[["bool",15]],[["format",3],["subscriberbuilder",3]]],[[["bool",15]],[["format",3],["subscriberbuilder",3]]],[[["bool",15]],[["format",3],["subscriberbuilder",3]]],[[["bool",15]],[["format",3],["subscriberbuilder",3]]],[[],[["subscriberbuilder",3],["format",3]]],[[],["subscriberbuilder",3]],[[],[["subscriberbuilder",3],["levelfilter",3]]],[[],["subscriberbuilder",3]],[[["bool",15]]],[[],["subscriberbuilder",3]],[[],["subscriberbuilder",3]],[[],[["subscriberbuilder",3],["testwriter",3]]],[[],[["result",4],["box",3]]],[[]],null,null,[[["metadata",3]],["interest",3]],[[["metadata",3],["context",3]],["bool",15]],[[["context",3],["attributes",3],["id",3]]],[[["context",3],["record",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["event",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[],["layered",3]],[[],["layered",3]],null,[[],["layered",3]],null,null,null,null,[[],["current",3]],[[["metadata",3]],["bool",15]],[[["event",3]]],[[["id",3]],[["metadata",3],["option",4]]],[[["id",3]],[["option",4],["spanref",3]]],[[["id",3]],["bool",15]],[[],[["option",4],["spanref",3]]],[[],["scope",3]],[[]],null,null,null,null,null,null,null,null,[[["id",3]],["option",4]],[[["id",3]],[["spanref",3],["option",4]]],null,[[],["id",3]],[[],["metadata",3]],[[],[["option",4],["id",3]]],[[],["extensions",3]],[[],["extensionsmut",3]],null,null,null,[[],["id",3]],[[],["metadata",3]],[[],["str",15]],[[],["fieldset",3]],[[],[["option",4],["id",3]]],[[],["option",4]],[[],["parents",3]],[[],["fromroot",3]],[[],["extensions",3]],[[],["extensionsmut",3]],null,null,null,null,[[]],[[],["handle",3]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],["option",4]],[[],[["error",3],["result",4]]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["defaultguard",3]],[[],[["result",4],["tryiniterror",3]]],[[]],null,null,[[],["registry",3]],null,[[]],[[],[["id",3],["option",4]]],[[["id",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["level",3],["option",4]]],[[["level",3],["option",4]],["levelfilter",3]],[[["level",3]],["levelfilter",3]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],["bool",15]],[[["levelfilter",3]],["ordering",4]],[[["str",15]],[["result",4],["levelfilter",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["levelfilter",3]],[[],["parselevelfiltererror",3]],[[["levelfilter",3]],[["ordering",4],["option",4]]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["levelfilter",3]],["bool",15]],[[["level",3]],[["ordering",4],["option",4]]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[["write",8]]],[[["write",8]]],[[]],[[],["result",6]],[[]],[[],["result",6]],[[],["result",6]],[[],["write",8]],[[],["write",8]],[[],["write",8]],[[],["write",8]],[[],["write",8]],[[],["write",8]],[[],["write",8]],[[["event",3],["fmtcontext",3],["write",8]],["result",6]],[[["event",3],["fmtcontext",3],["write",8]],["result",6]],[[["recordfields",8],["write",8]],["result",6]],[[["write",8]],["result",6]],[[["write",8]],["result",6]],[[]],[[]],[[["metadata",3]],["interest",3]],[[["metadata",3],["context",3]],["bool",15]],[[],[["levelfilter",3],["option",4]]],[[["id",3],["context",3],["attributes",3]]],[[["id",3],["context",3],["record",3]]],[[["id",3],["context",3]]],[[["id",3],["context",3]]],[[["id",3],["context",3]]],[[["context",3],["event",3]]],[[["typeid",3]],["option",4]],[[["metadata",3]],["interest",3]],[[["metadata",3],["context",3]],["bool",15]],[[["context",3],["attributes",3],["id",3]]],[[["context",3],["record",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["event",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["metadata",3]],["interest",3]],[[["metadata",3],["context",3]],["bool",15]],[[["context",3],["attributes",3],["id",3]]],[[["context",3],["record",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["event",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["context",3],["id",3]]],[[["id",3]],["option",4]],[[["id",3]],["option",4]],[[["id",3]],["option",4]],[[],["id",3]],[[],["metadata",3]],[[],[["option",4],["id",3]]],[[],["extensions",3]],[[],["extensionsmut",3]],[[["instant",3]]],[[],["dispatch",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[],["alt",3]],[[],["delimited",3]],[[],["messages",3]],[[],["fieldfn",3]],[[],["compact",3]],[[],["full",3]],[[],["format",3]],[[],["fmtspan",3]],[[],["systemtime",3]],[[],["uptime",3]],[[],["layered",3]],[[],["identity",3]],[[]],[[]],[[]],[[],["formattedfields",3]],[[],["compact",3]],[[],["full",3]],[[]],[[]],[[],["systemtime",3]],[[]],[[],["testwriter",3]],[[]],[[]],[[],["identity",3]],[[]],[[]],[[["fmtspan",3]],["ordering",4]],[[["compact",3]],["bool",15]],[[["full",3]],["bool",15]],[[["fmtspan",3]],["bool",15]],[[["fmtspan",3]],["bool",15]],[[["systemtime",3]],["bool",15]],[[["uptime",3]],["bool",15]],[[["uptime",3]],["bool",15]],[[["fmtspan",3]],[["ordering",4],["option",4]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4],["error",8]]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[["field",3],["i64",15]]],[[["field",3],["u64",15]]],[[["field",3],["bool",15]]],[[["field",3],["str",15]]],[[["field",3],["debug",8]]],[[["field",3],["i64",15]]],[[["field",3],["u64",15]]],[[["field",3],["bool",15]]],[[["field",3],["str",15]]],[[["field",3],["debug",8]]],[[["field",3],["i64",15]]],[[["field",3],["u64",15]]],[[["field",3],["bool",15]]],[[["field",3],["str",15]]],[[["field",3],["debug",8]]],[[["field",3],["str",15]]],[[["field",3],["error",8]]],[[["field",3],["debug",8]]],[[["field",3],["debug",8]]],[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[["attributes",3]],["id",3]],[[["record",3],["id",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[],["current",3]],[[["id",3]],["id",3]],[[["id",3]],["bool",15]],[[],[["option",4],["levelfilter",3]]],[[["typeid",3]],["option",4]],[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[],[["levelfilter",3],["option",4]]],[[["attributes",3]],["id",3]],[[["record",3],["id",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[["id",3]]],[[["id",3]],["bool",15]],[[],["current",3]],[[["metadata",3]],["interest",3]],[[["metadata",3]],["bool",15]],[[["attributes",3]],["id",3]],[[["record",3],["id",3]]],[[["id",3]]],[[["event",3]]],[[["id",3]]],[[["id",3]]],[[["id",3]],["id",3]],[[],["current",3]],[[["id",3]],["bool",15]],null,null,null,null,null,null,[[["level",3]],["levelfilter",3]],[[],[["level",3],["option",4]]],[[],["levelfilter",3]],[[],["layerbuilder",6]],[[]],[[],["layer",3]],[[],["layer",3]],[[],[["layer",3],["testwriter",3]]],[[],[["format",3],["layer",3]]],[[],[["layer",3],["format",3]]],[[["fmtspan",3]]],[[["bool",15]],[["format",3],["layer",3]]],[[["bool",15]],[["format",3],["layer",3]]],[[["bool",15]],[["format",3],["layer",3]]],[[["bool",15]],[["format",3],["layer",3]]],[[],[["layer",3],["format",3]]],[[],["layer",3]],[[],["layer",3]],[[],["layer",3]],[[["string",3]]],[[],["result",4]],[[["id",3]],[["metadata",3],["option",4]]],[[["id",3]],[["option",4],["spanref",3]]],[[["id",3]],["bool",15]],[[],[["option",4],["spanref",3]]],[[],["scope",3]],[[],["current",3]],[[]],[[],["option",4]],[[["sync",8],["send",8]]],[[["sync",8],["send",8]],[["option",4],["send",8],["sync",8]]],[[],["option",4]],[[],[["option",4],["send",8],["sync",8]]]],"p":[[3,"Alt"],[3,"Delimited"],[3,"VisitDelimited"],[3,"Messages"],[8,"Visit"],[8,"MakeVisitor"],[8,"VisitOutput"],[8,"RecordFields"],[8,"MakeOutput"],[8,"VisitWrite"],[8,"VisitFmt"],[8,"MakeExt"],[8,"FormatEvent"],[8,"FormatFields"],[3,"Format"],[3,"DefaultFields"],[3,"DefaultVisitor"],[3,"FmtSpan"],[8,"FormatTime"],[8,"MakeWriter"],[3,"TestWriter"],[3,"BoxMakeWriter"],[3,"FormattedFields"],[3,"Subscriber"],[3,"SubscriberBuilder"],[8,"Layer"],[8,"SubscriberExt"],[3,"Context"],[3,"Identity"],[8,"LookupSpan"],[8,"SpanData"],[3,"SpanRef"],[3,"Layer"],[3,"Handle"],[3,"Error"],[8,"SubscriberInitExt"],[3,"CurrentSpan"],[3,"LevelFilter"],[3,"LevelParseError"],[3,"Layer"],[3,"FmtContext"],[3,"FieldFn"],[3,"FieldFnVisitor"],[3,"Compact"],[3,"Full"],[3,"SystemTime"],[3,"Uptime"],[3,"Layered"],[3,"Scope"],[3,"Extensions"],[3,"ExtensionsMut"],[3,"Registry"],[3,"Data"],[3,"Parents"],[3,"FromRoot"],[3,"TryInitError"],[6,"LayerBuilder"]]},\
"tui":{"doc":"tui is a library used to build rich terminal users …","t":[0,3,3,8,10,10,10,10,10,10,10,10,0,3,12,12,12,12,11,11,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,13,4,13,13,4,13,13,13,13,13,11,3,12,12,4,13,13,13,3,11,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,0,0,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,17,17,0,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,0,17,17,17,4,13,13,13,0,3,11,3,12,3,3,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,3,12,12,11,11,11,11,3,12,11,3,12,11,11,11,11,11,0,0,3,12,12,12,12,12,3,12,12,4,13,13,3,12,12,3,12,12,12,12,12,8,10,3,12,12,12,12,3,11,11,3,11,11,11,11,3,11,11,11,11,11,11,3,3,4,13,13,13,13,3,3,3,4,13,13,3,3,3,3,3,3,3,3,12,3,3,3,3,3,3,3,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["backend","CrosstermBackend","TestBackend","Backend","draw","hide_cursor","show_cursor","get_cursor","set_cursor","clear","size","flush","buffer","Cell","symbol","fg","bg","modifier","set_symbol","set_char","set_fg","set_bg","set_style","style","reset","Buffer","area","content","empty","filled","with_lines","content","area","get","get_mut","index_of","pos_of","set_string","set_stringn","set_spans","set_span","set_background","set_style","resize","reset","merge","diff","layout","Corner","TopLeft","TopRight","BottomRight","BottomLeft","Direction","Horizontal","Vertical","Constraint","Percentage","Ratio","Length","Max","Min","apply","Margin","vertical","horizontal","Alignment","Left","Center","Right","Layout","constraints","margin","horizontal_margin","vertical_margin","direction","split","Rect","x","y","width","height","new","area","left","right","top","bottom","inner","union","intersection","intersects","style","Color","Reset","Black","Red","Green","Yellow","Blue","Magenta","Cyan","Gray","DarkGray","LightRed","LightGreen","LightYellow","LightBlue","LightMagenta","LightCyan","White","Rgb","Indexed","Modifier","BOLD","DIM","ITALIC","UNDERLINED","SLOW_BLINK","RAPID_BLINK","REVERSED","HIDDEN","CROSSED_OUT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Style","fg","bg","add_modifier","sub_modifier","reset","fg","bg","add_modifier","remove_modifier","patch","symbols","block","FULL","SEVEN_EIGHTHS","THREE_QUARTERS","FIVE_EIGHTHS","HALF","THREE_EIGHTHS","ONE_QUARTER","ONE_EIGHTH","Set","full","seven_eighths","three_quarters","five_eighths","half","three_eighths","one_quarter","one_eighth","empty","THREE_LEVELS","NINE_LEVELS","bar","FULL","SEVEN_EIGHTHS","THREE_QUARTERS","FIVE_EIGHTHS","HALF","THREE_EIGHTHS","ONE_QUARTER","ONE_EIGHTH","Set","full","seven_eighths","three_quarters","five_eighths","half","three_eighths","one_quarter","one_eighth","empty","THREE_LEVELS","NINE_LEVELS","line","VERTICAL","DOUBLE_VERTICAL","THICK_VERTICAL","HORIZONTAL","DOUBLE_HORIZONTAL","THICK_HORIZONTAL","TOP_RIGHT","ROUNDED_TOP_RIGHT","DOUBLE_TOP_RIGHT","THICK_TOP_RIGHT","TOP_LEFT","ROUNDED_TOP_LEFT","DOUBLE_TOP_LEFT","THICK_TOP_LEFT","BOTTOM_RIGHT","ROUNDED_BOTTOM_RIGHT","DOUBLE_BOTTOM_RIGHT","THICK_BOTTOM_RIGHT","BOTTOM_LEFT","ROUNDED_BOTTOM_LEFT","DOUBLE_BOTTOM_LEFT","THICK_BOTTOM_LEFT","VERTICAL_LEFT","DOUBLE_VERTICAL_LEFT","THICK_VERTICAL_LEFT","VERTICAL_RIGHT","DOUBLE_VERTICAL_RIGHT","THICK_VERTICAL_RIGHT","HORIZONTAL_DOWN","DOUBLE_HORIZONTAL_DOWN","THICK_HORIZONTAL_DOWN","HORIZONTAL_UP","DOUBLE_HORIZONTAL_UP","THICK_HORIZONTAL_UP","CROSS","DOUBLE_CROSS","THICK_CROSS","Set","vertical","horizontal","top_right","top_left","bottom_right","bottom_left","vertical_left","vertical_right","horizontal_down","horizontal_up","cross","NORMAL","ROUNDED","DOUBLE","THICK","braille","BLANK","DOTS","DOT","Marker","Dot","Block","Braille","terminal","Viewport","fixed","TerminalOptions","viewport","Terminal","Frame","size","render_widget","render_stateful_widget","set_cursor","CompletedFrame","buffer","area","new","with_options","get_frame","current_buffer_mut","backend","backend_mut","flush","resize","autoresize","draw","hide_cursor","show_cursor","get_cursor","set_cursor","clear","size","text","StyledGrapheme","symbol","style","Span","content","style","raw","styled","width","styled_graphemes","Spans","0","width","Text","lines","raw","styled","width","height","patch_style","widgets","canvas","Line","x1","y1","x2","y2","color","Map","resolution","color","MapResolution","Low","High","Points","coords","color","Rectangle","x","y","width","height","color","Shape","draw","Label","x","y","text","color","Painter","get_point","paint","Context","new","draw","layer","print","Canvas","block","x_bounds","y_bounds","paint","background_color","marker","BarChart","Block","BorderType","Plain","Rounded","Double","Thick","Axis","Chart","Dataset","GraphType","Scatter","Line","Clear","Gauge","LineGauge","List","ListItem","ListState","Paragraph","Wrap","trim","Sparkline","Cell","Row","Table","TableState","Tabs","Borders","NONE","TOP","RIGHT","BOTTOM","LEFT","ALL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","Widget","render","StatefulWidget","State","render","from","into","borrow","borrow_mut","try_from","try_into","type_id","queue","execute","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","draw","hide_cursor","show_cursor","get_cursor","set_cursor","clear","size","flush","draw","hide_cursor","show_cursor","get_cursor","set_cursor","clear","size","flush","draw","draw","draw","draw","render","render","render","render","render","render","render","render","render","render","render","render","render","render","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","extend","extend","extend","into_iter","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","cmp","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub_assign","sub_assign","not","not","bitand","bitand","bitor","bitor","bitxor","bitxor","bitand_assign","bitand_assign","bitor_assign","bitor_assign","bitxor_assign","bitxor_assign","hash","hash","hash","hash","hash","hash","hash","hash","from_iter","from_iter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","write","flush","new","new","buffer","resize","assert_buffer","data","block","max","bar_style","bar_width","bar_gap","bar_set","value_style","label_style","style","line_symbols","title","title_style","border_style","style","borders","border_type","inner","title","title_style","bounds","labels","style","name","data","marker","graph_type","style","new","block","style","x_axis","y_axis","hidden_legend_constraints","block","percent","ratio","label","style","gauge_style","use_unicode","block","ratio","line_set","label","style","gauge_style","selected","select","new","style","height","new","block","style","highlight_symbol","highlight_style","start_corner","new","block","style","wrap","scroll","alignment","block","style","data","max","bar_set","style","new","height","style","bottom_margin","new","block","header","widths","style","highlight_symbol","highlight_style","column_spacing","selected","select","new","block","select","style","highlight_style","divider"],"q":["tui","tui::backend","","","","","","","","","","","tui","tui::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui","tui::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui","tui::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui","tui::symbols","tui::symbols::block","","","","","","","","","","","","","","","","","","","","tui::symbols","tui::symbols::bar","","","","","","","","","","","","","","","","","","","","tui::symbols","tui::symbols::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::symbols","tui::symbols::braille","","tui::symbols","","","","","tui","tui::terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui","tui::text","","","","","","","","","","","","","","","","","","","","tui","tui::widgets","tui::widgets::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::backend","","","","","","","","","","","","","","","","tui::buffer","","","","","","","","","","","","","","","","","","tui::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::style","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::symbols::block","","","","","","","","","tui::symbols::bar","","","","","","","","","tui::symbols::line","","","","","","","","","tui::symbols","","","","","","","","","tui::terminal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::widgets::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tui::widgetstui::backend","","","","","","","","","","","","","","","","tui::widgets::canvas","","","","tui::widgets","","tui::widgets::canvas","tui::widgets","","","","","","","","","","","tui::terminal","tui::text","","","","","","","","","","","tui::widgets::canvas","tui::widgets","tui::style","tui::text","tui::widgets","tui::text","tui::buffer","","tui::layout","","","","","","","tui::style","","","tui::symbols::block","tui::symbols::bar","tui::symbols::line","tui::symbols","tui::terminal","","tui::text","","","","tui::widgets","","","tui::widgets::canvas","","","","","","tui::widgets","","","","","","","","","","","","","","","","","","tui::buffer","","tui::layout","","tui::style","tui::text","","tui::widgets","","tui::widgets::canvas","","","tui::widgets","","","","","","","","","tui::style","tui::widgets","tui::buffer","","","","tui::layout","","","","","","","","","","","tui::style","","","","","","tui::terminal","","","","tui::text","","","","","","","","tui::widgets","","","","","","","","","","","","","tui::style","tui::widgets","tui::backend","tui::buffer","","tui::layout","","","","","","","tui::style","","","tui::symbols::block","tui::symbols::bar","tui::symbols::line","tui::symbols","tui::terminal","","","tui::text","","","","tui::widgets","","","tui::widgets::canvas","","","","","","","","tui::widgets","","","","","","","","","","","","","","","","","","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::layout","","","","","","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::style","tui::widgets","tui::backend","","","","","","","tui::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A backend used for the integration tests.","","","","","","","","","","","A buffer cell","","","","","","","","","","","","A buffer that maps to the desired content of the terminal …","The area represented by this buffer","The content of the buffer. The length of this Vec should …","Returns a Buffer with all cells set to the default one","Returns a Buffer with all cells initialized with the …","Returns a Buffer containing the given lines","Returns the content of the buffer as a slice","Returns the area covered by this buffer","Returns a reference to Cell at the given coordinates","Returns a mutable reference to Cell at the given …","Returns the index in the Vec for the given global (x, y) …","Returns the (global) coordinates of a cell given its index","Print a string, starting at the position (x, y)","Print at most the first n characters of a string if …","","","","","Resize the buffer so that the mapped area matches the …","Reset all cells in the buffer","Merge an other buffer into this one","Builds a minimal sequence of coordinates and Cells …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper function around the cassowary-rs solver to be …","A simple rectangle used in the computation of the layout …","","","","","Creates a new rect, with width and height limited to keep …","","","","","","","","","","<code>style</code> contains the primitives used to control how your …","","","","","","","","","","","","","","","","","","","","","Modifier changes the way a piece of text is displayed.","","","","","","","","","","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Style let you control the main characteristics of the …","","","","","Returns a <code>Style</code> resetting all properties.","Changes the foreground color.","Changes the background color.","Changes the text emphasis.","Changes the text emphasis.","Results in a combined style that is equivalent to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marker to use when plotting data points","One point per cell in shape of dot","One point per cell in shape of a block","Up to 8 points per cell","","UNSTABLE","UNSTABLE","Options to pass to [<code>Terminal::with_options</code>]","Viewport used to draw to the terminal","Interface to the terminal backed by Termion","Represents a consistent terminal interface for rendering.","Terminal size, guaranteed not to change when rendering.","Render a [<code>Widget</code>] to the current buffer using […","Render a [<code>StatefulWidget</code>] to the current buffer using […","After drawing this frame, make the cursor visible and put …","CompletedFrame represents the state of the terminal after …","","","Wrapper around Terminal initialization. Each buffer is …","UNSTABLE","Get a Frame object which provides a consistent view into …","","","","Obtains a difference between the previous and the current …","Updates the Terminal so that internal buffers match the …","Queries the backend for size and resizes if it doesn’t …","Synchronizes terminal size, calls the rendering closure, …","","","","","Clear the terminal and force a full redraw on the next …","Queries the real size of the backend.","Primitives for styled text.","A grapheme associated to a style.","","","A string where all graphemes have the same style.","","","Create a span with no style.","Create a span with a style.","Returns the width of the content held by this span.","Returns an iterator over the graphemes held by this span.","A string composed of clusters of graphemes, each with …","","Returns the width of the underlying string.","A string split over multiple lines where each line is …","","Create some text (potentially multiple lines) with no …","Create some text (potentially multiple lines) with a …","Returns the max width of all the lines.","Returns the height.","Apply a new style to existing text.","<code>widgets</code> is a collection of types that implement [<code>Widget</code>] …","","Shape to draw a line from (x1, y1) to (x2, y2) with the …","","","","","","Shape to draw a world map with the given resolution and …","","","","","","A shape to draw a group of points with the given color","","","Shape to draw a rectangle from a <code>Rect</code> with the given color","","","","","","Interface for all shapes that may be drawn on a Canvas …","","Label to draw some text on the canvas","","","","","","Convert the (x, y) coordinates to location of a point on …","Paint a point of the grid","Holds the state of the Canvas when painting to it.","","Draw any object that may implement the Shape trait","Go one layer above in the canvas.","Print a string on the canvas at the given position","The Canvas widget may be used to draw more detailed …","","","","Store the closure that will be used to draw to the Canvas","","Change the type of points used to draw the shapes. By …","Display multiple bars in a single widgets","Base widget to be used with all upper level ones. It may …","","","","","","An X or Y axis for the chart widget","A widget to plot one or more dataset in a cartesian …","A group of data points","Used to determine which style of graphing to use","Draw each point","Draw each point and lines between each point using the …","A widget to to clear/reset a certain area to allow …","A widget to display a task progress.","A compact widget to display a task progress over a single …","A widget to display several items among which one can be …","","","A widget to display some text.","Describes how to wrap text across lines.","Should leading whitespace be trimmed","Widget to render a sparkline over one or more lines.","A [<code>Cell</code>] contains the [<code>Text</code>] to be displayed in a [<code>Row</code>] …","Holds data to be displayed in a [<code>Table</code>] widget.","A widget to display data in formatted columns.","","A widget to display available tabs in a multiple panels …","Bitflags that can be composed to set the visible borders …","Show no border (default)","Show the top border","Show the right border","Show the bottom border","Show the left border","Show all borders","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Base requirements for a Widget","Draws the current state of the widget in the given …","A <code>StatefulWidget</code> is a widget that can take advantage of …","","","","","","","","","","Queues the given command for further execution.","Executes the given command directlyeturns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Adds the set of flags.","Adds the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the inner area of a block based on its border …","","","","","","","","","","","","","","","","Set the constraints used to determine whether the legend …","","","Sets ratio ([0.0, 1.0]) directly.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>Style</code> of this cell.","Creates a new [<code>Row</code>] from an iterator where items can be …","Set the fixed height of the [<code>Row</code>]. Any [<code>Cell</code>] whose …","Set the [<code>Style</code>] of the entire row. This [<code>Style</code>] can be …","Set the bottom margin. By default, the bottom margin is <code>0</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,0,5,5,0,6,6,6,6,6,6,0,7,7,0,8,8,8,0,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,17,17,17,0,0,18,0,19,0,0,20,20,20,20,0,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,23,23,0,24,24,24,24,24,24,0,25,25,0,26,26,26,26,26,26,0,0,0,27,27,27,27,27,0,28,28,0,29,29,0,30,30,0,31,31,31,31,31,0,32,0,33,33,33,33,0,34,34,0,35,35,35,35,0,36,36,36,36,36,36,0,0,0,37,37,37,37,0,0,0,0,38,38,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,0,42,42,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,22,22,22,22,22,22,22,20,20,20,20,20,20,20,21,21,21,21,21,21,21,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,45,45,45,45,45,45,45,45,45,37,37,37,37,37,37,37,37,37,46,46,46,46,46,46,46,46,46,27,27,27,27,27,27,27,27,27,29,29,29,29,29,29,29,29,29,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,35,36,36,36,36,36,36,36,47,47,47,47,47,47,47,47,47,38,38,38,38,38,38,38,38,38,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,39,39,39,39,39,39,39,39,39,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,40,40,40,40,40,40,40,40,40,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,27,28,30,31,45,46,36,49,50,51,52,55,56,57,60,62,55,60,22,24,24,25,25,25,25,26,26,26,26,26,34,58,12,26,40,26,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,24,25,26,45,37,46,27,29,28,30,31,33,47,38,48,49,50,51,53,54,55,56,39,57,58,59,60,61,62,40,2,3,9,10,13,25,26,45,46,28,30,36,47,48,51,52,53,57,58,59,61,12,40,2,2,3,3,4,5,6,6,7,7,8,9,9,10,10,11,11,12,12,13,13,18,18,19,19,23,23,24,24,25,25,26,26,37,46,46,54,54,58,58,59,59,60,60,40,40,12,40,44,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,45,37,46,27,29,28,30,31,33,34,35,47,38,48,49,50,51,53,54,55,56,39,57,58,59,60,61,62,40,12,40,12,40,12,40,12,40,12,40,12,40,12,40,12,40,12,40,4,5,6,7,9,10,12,40,12,40,12,40,12,40,12,40,12,40,43,43,43,44,44,44,44,45,45,45,45,45,45,45,45,45,45,37,46,46,46,46,46,46,46,47,47,47,47,47,48,48,48,48,48,49,49,49,49,49,49,51,51,51,51,51,51,51,52,52,52,52,52,52,53,53,54,54,54,55,55,55,55,55,55,56,56,56,56,56,56,57,57,57,57,57,58,59,59,59,59,60,60,60,60,60,60,60,60,61,61,62,62,62,62,62,62],"f":[null,null,null,null,[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["u16",15]],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["rect",3],["result",4]]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,[[["str",15]],["cell",3]],[[["char",15]],["cell",3]],[[["color",4]],["cell",3]],[[["color",4]],["cell",3]],[[["style",3]],["cell",3]],[[],["style",3]],[[]],null,null,null,[[["rect",3]],["buffer",3]],[[["rect",3],["cell",3]],["buffer",3]],[[["vec",3]],["buffer",3]],[[]],[[],["rect",3]],[[["u16",15]],["cell",3]],[[["u16",15]],["cell",3]],[[["u16",15]],["usize",15]],[[["usize",15]]],[[["style",3],["u16",15]]],[[["usize",15],["style",3],["u16",15]]],[[["spans",3],["u16",15]]],[[["span",3],["u16",15]]],[[["rect",3],["color",4]]],[[["style",3],["rect",3]]],[[["rect",3]]],[[]],[[["buffer",3]]],[[["buffer",3]],["vec",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u16",15]],["u16",15]],null,null,null,null,null,null,null,null,[[],["layout",3]],[[["u16",15]],["layout",3]],[[["u16",15]],["layout",3]],[[["u16",15]],["layout",3]],[[["direction",4]],["layout",3]],[[["rect",3]],[["rect",3],["vec",3]]],null,null,null,null,null,[[["u16",15]],["rect",3]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[],["u16",15]],[[["margin",3]],["rect",3]],[[["rect",3]],["rect",3]],[[["rect",3]],["rect",3]],[[["rect",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["modifier",3]],[[],["modifier",3]],[[],["u16",15]],[[["u16",15]],[["option",4],["modifier",3]]],[[["u16",15]],["modifier",3]],[[["u16",15]],["modifier",3]],[[],["bool",15]],[[],["bool",15]],[[["modifier",3]],["bool",15]],[[["modifier",3]],["bool",15]],[[["modifier",3]]],[[["modifier",3]]],[[["modifier",3]]],[[["bool",15],["modifier",3]]],null,null,null,null,null,[[],["style",3]],[[["color",4]],["style",3]],[[["color",4]],["style",3]],[[["modifier",3]],["style",3]],[[["modifier",3]],["style",3]],[[["style",3]],["style",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rect",3]],["viewport",3]],null,null,null,null,[[],["rect",3]],[[["rect",3]]],[[["rect",3]]],[[["u16",15]]],null,null,null,[[],[["result",6],["terminal",3]]],[[["terminaloptions",3]],[["result",6],["terminal",3]]],[[],["frame",3]],[[],["buffer",3]],[[]],[[]],[[],["result",6]],[[["rect",3]],["result",6]],[[],["result",6]],[[],[["result",6],["completedframe",3]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["u16",15]],["result",6]],[[],["result",6]],[[],[["rect",3],["result",6]]],null,null,null,null,null,null,null,[[],["span",3]],[[["style",3]],["span",3]],[[],["usize",15]],[[["style",3]]],null,null,[[],["usize",15]],null,null,[[],["text",3]],[[["style",3]],["text",3]],[[],["usize",15]],[[],["usize",15]],[[["style",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["painter",3]]],null,null,null,null,null,null,[[["f64",15]],["option",4]],[[["usize",15],["color",4]]],null,[[["marker",4],["u16",15]],["context",3]],[[]],[[]],[[["f64",15],["str",15],["color",4]]],null,[[["block",3]],["canvas",3]],[[],["canvas",3]],[[],["canvas",3]],[[],["canvas",3]],[[["color",4]],["canvas",3]],[[["marker",4]],["canvas",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["borders",3]],[[],["borders",3]],[[],["u32",15]],[[["u32",15]],[["borders",3],["option",4]]],[[["u32",15]],["borders",3]],[[["u32",15]],["borders",3]],[[],["bool",15]],[[],["bool",15]],[[["borders",3]],["bool",15]],[[["borders",3]],["bool",15]],[[["borders",3]]],[[["borders",3]]],[[["borders",3]]],[[["bool",15],["borders",3]]],null,[[["rect",3],["buffer",3]]],null,null,[[["rect",3],["buffer",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],[["result",4],["errorkind",4]]],[[],[["result",4],["errorkind",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["u16",15]],["result",6]],[[],["result",6]],[[],[["rect",3],["result",6]]],[[],["result",6]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["u16",15]],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["error",3],["rect",3],["result",4]]],[[],[["error",3],["result",4]]],[[["painter",3]]],[[["painter",3]]],[[["painter",3]]],[[["painter",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[["rect",3],["buffer",3]]],[[]],[[["string",3]],["span",3]],[[["str",15]],["span",3]],[[["string",3]],["spans",3]],[[["str",15]],["spans",3]],[[["vec",3],["span",3]],["spans",3]],[[["span",3]],["spans",3]],[[["string",3]],["text",3]],[[["str",15]],["text",3]],[[["span",3]],["text",3]],[[["spans",3]],["text",3]],[[["vec",3],["spans",3]],["text",3]],[[["context",3]],["painter",3]],[[],["cell",3]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[]],[[],["cell",3]],[[],["buffer",3]],[[],["corner",4]],[[],["direction",4]],[[],["constraint",4]],[[],["margin",3]],[[],["alignment",4]],[[],["layout",3]],[[],["rect",3]],[[],["color",4]],[[],["modifier",3]],[[],["style",3]],[[],["set",3]],[[],["set",3]],[[],["set",3]],[[],["marker",4]],[[],["viewport",3]],[[],["terminaloptions",3]],[[],["styledgrapheme",3]],[[],["span",3]],[[],["spans",3]],[[],["text",3]],[[],["barchart",3]],[[],["bordertype",4]],[[],["block",3]],[[],["line",3]],[[],["mapresolution",4]],[[],["map",3]],[[],["points",3]],[[],["rectangle",3]],[[],["label",3]],[[],["axis",3]],[[],["graphtype",4]],[[],["dataset",3]],[[],["chart",3]],[[],["clear",3]],[[],["gauge",3]],[[],["liststate",3]],[[],["listitem",3]],[[],["list",3]],[[],["paragraph",3]],[[],["wrap",3]],[[],["sparkline",3]],[[],["cell",3]],[[],["row",3]],[[],["table",3]],[[],["tablestate",3]],[[],["tabs",3]],[[],["borders",3]],[[],["cell",3]],[[],["buffer",3]],[[],["layout",3]],[[],["rect",3]],[[],["style",3]],[[],["spans",3]],[[],["text",3]],[[],["barchart",3]],[[],["block",3]],[[],["map",3]],[[],["points",3]],[[],["canvas",3]],[[],["axis",3]],[[],["dataset",3]],[[],["gauge",3]],[[]],[[],["liststate",3]],[[],["sparkline",3]],[[],["cell",3]],[[],["row",3]],[[],["tablestate",3]],[[["modifier",3]],["ordering",4]],[[["borders",3]],["ordering",4]],[[["cell",3]],["bool",15]],[[["cell",3]],["bool",15]],[[["buffer",3]],["bool",15]],[[["buffer",3]],["bool",15]],[[["corner",4]],["bool",15]],[[["direction",4]],["bool",15]],[[["constraint",4]],["bool",15]],[[["constraint",4]],["bool",15]],[[["margin",3]],["bool",15]],[[["margin",3]],["bool",15]],[[["alignment",4]],["bool",15]],[[["layout",3]],["bool",15]],[[["layout",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["color",4]],["bool",15]],[[["color",4]],["bool",15]],[[["modifier",3]],["bool",15]],[[["modifier",3]],["bool",15]],[[["style",3]],["bool",15]],[[["style",3]],["bool",15]],[[["viewport",3]],["bool",15]],[[["viewport",3]],["bool",15]],[[["terminaloptions",3]],["bool",15]],[[["terminaloptions",3]],["bool",15]],[[["styledgrapheme",3]],["bool",15]],[[["styledgrapheme",3]],["bool",15]],[[["span",3]],["bool",15]],[[["span",3]],["bool",15]],[[["spans",3]],["bool",15]],[[["spans",3]],["bool",15]],[[["text",3]],["bool",15]],[[["text",3]],["bool",15]],[[["bordertype",4]],["bool",15]],[[["block",3]],["bool",15]],[[["block",3]],["bool",15]],[[["listitem",3]],["bool",15]],[[["listitem",3]],["bool",15]],[[["cell",3]],["bool",15]],[[["cell",3]],["bool",15]],[[["row",3]],["bool",15]],[[["row",3]],["bool",15]],[[["table",3]],["bool",15]],[[["table",3]],["bool",15]],[[["borders",3]],["bool",15]],[[["borders",3]],["bool",15]],[[["modifier",3]],[["ordering",4],["option",4]]],[[["borders",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["modifier",3]],["modifier",3]],[[["borders",3]],["borders",3]],[[["modifier",3]]],[[["borders",3]]],[[],["modifier",3]],[[],["borders",3]],[[["modifier",3]],["modifier",3]],[[["borders",3]],["borders",3]],[[["modifier",3]],["modifier",3]],[[["borders",3]],["borders",3]],[[["modifier",3]],["modifier",3]],[[["borders",3]],["borders",3]],[[["modifier",3]]],[[["borders",3]]],[[["modifier",3]]],[[["borders",3]]],[[["modifier",3]]],[[["borders",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["intoiterator",8]],["modifier",3]],[[["intoiterator",8]],["borders",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["usize",15],["result",6]]],[[],["result",6]],[[],["crosstermbackend",3]],[[["u16",15]],["testbackend",3]],[[],["buffer",3]],[[["u16",15]]],[[["buffer",3]]],[[],["barchart",3]],[[["block",3]],["barchart",3]],[[["u64",15]],["barchart",3]],[[["style",3]],["barchart",3]],[[["u16",15]],["barchart",3]],[[["u16",15]],["barchart",3]],[[["set",3]],["barchart",3]],[[["style",3]],["barchart",3]],[[["style",3]],["barchart",3]],[[["style",3]],["barchart",3]],[[["bordertype",4]],["set",3]],[[],["block",3]],[[["style",3]],["block",3]],[[["style",3]],["block",3]],[[["style",3]],["block",3]],[[["borders",3]],["block",3]],[[["bordertype",4]],["block",3]],[[["rect",3]],["rect",3]],[[],["axis",3]],[[["style",3]],["axis",3]],[[],["axis",3]],[[["vec",3],["span",3]],["axis",3]],[[["style",3]],["axis",3]],[[],["dataset",3]],[[],["dataset",3]],[[["marker",4]],["dataset",3]],[[["graphtype",4]],["dataset",3]],[[["style",3]],["dataset",3]],[[["dataset",3],["vec",3]],["chart",3]],[[["block",3]],["chart",3]],[[["style",3]],["chart",3]],[[["axis",3]],["chart",3]],[[["axis",3]],["chart",3]],[[],["chart",3]],[[["block",3]],["gauge",3]],[[["u16",15]],["gauge",3]],[[["f64",15]],["gauge",3]],[[],["gauge",3]],[[["style",3]],["gauge",3]],[[["style",3]],["gauge",3]],[[["bool",15]],["gauge",3]],[[["block",3]]],[[["f64",15]]],[[["set",3]]],[[]],[[["style",3]]],[[["style",3]]],[[],[["usize",15],["option",4]]],[[["usize",15],["option",4]]],[[],["listitem",3]],[[["style",3]],["listitem",3]],[[],["usize",15]],[[],["list",3]],[[["block",3]],["list",3]],[[["style",3]],["list",3]],[[["str",15]],["list",3]],[[["style",3]],["list",3]],[[["corner",4]],["list",3]],[[],["paragraph",3]],[[["block",3]],["paragraph",3]],[[["style",3]],["paragraph",3]],[[["wrap",3]],["paragraph",3]],[[],["paragraph",3]],[[["alignment",4]],["paragraph",3]],[[["block",3]],["sparkline",3]],[[["style",3]],["sparkline",3]],[[],["sparkline",3]],[[["u64",15]],["sparkline",3]],[[["set",3]],["sparkline",3]],[[["style",3]]],[[]],[[["u16",15]]],[[["style",3]]],[[["u16",15]]],[[]],[[["block",3]]],[[["row",3]]],[[]],[[["style",3]]],[[["str",15]]],[[["style",3]]],[[["u16",15]]],[[],[["usize",15],["option",4]]],[[["usize",15],["option",4]]],[[["vec",3],["spans",3]],["tabs",3]],[[["block",3]],["tabs",3]],[[["usize",15]],["tabs",3]],[[["style",3]],["tabs",3]],[[["style",3]],["tabs",3]],[[],["tabs",3]]],"p":[[8,"Backend"],[3,"Cell"],[3,"Buffer"],[4,"Corner"],[4,"Direction"],[4,"Constraint"],[3,"Margin"],[4,"Alignment"],[3,"Layout"],[3,"Rect"],[4,"Color"],[3,"Modifier"],[3,"Style"],[3,"Set"],[3,"Set"],[3,"Set"],[4,"Marker"],[3,"Viewport"],[3,"TerminalOptions"],[3,"Frame"],[3,"CompletedFrame"],[3,"Terminal"],[3,"StyledGrapheme"],[3,"Span"],[3,"Spans"],[3,"Text"],[3,"Line"],[3,"Map"],[4,"MapResolution"],[3,"Points"],[3,"Rectangle"],[8,"Shape"],[3,"Label"],[3,"Painter"],[3,"Context"],[3,"Canvas"],[4,"BorderType"],[4,"GraphType"],[3,"Wrap"],[3,"Borders"],[8,"Widget"],[8,"StatefulWidget"],[3,"CrosstermBackend"],[3,"TestBackend"],[3,"BarChart"],[3,"Block"],[3,"Axis"],[3,"Dataset"],[3,"Chart"],[3,"Clear"],[3,"Gauge"],[3,"LineGauge"],[3,"ListState"],[3,"ListItem"],[3,"List"],[3,"Paragraph"],[3,"Sparkline"],[3,"Cell"],[3,"Row"],[3,"Table"],[3,"TableState"],[3,"Tabs"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word …","t":[3,3,3,4,13,13,13,13,17,3,3,3,3,3,3,8,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Graphemes","GraphemeIndices","GraphemeCursor","GraphemeIncomplete","PreContext","PrevChunk","NextChunk","InvalidOffset","UNICODE_VERSION","UWordBounds","UWordBoundIndices","UnicodeWords","USentenceBounds","USentenceBoundIndices","UnicodeSentences","UnicodeSegmentation","graphemes","grapheme_indices","unicode_words","split_word_bounds","split_word_bound_indices","unicode_sentences","split_sentence_bounds","split_sentence_bound_indices","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","fmt","eq","ne","next_back","next_back","next_back","next_back","next_back","next","size_hint","size_hint","next","next","next","size_hint","size_hint","next","next","size_hint","next","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","as_str","as_str","new","set_cursor","cur_cursor","provide_context","is_boundary","next_boundary","prev_boundary","as_str","as_str"],"q":["unicode_segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["External iterator for a string’s grapheme clusters.","External iterator for grapheme clusters and byte offsets.","Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","When requesting <code>next_boundary</code>, the cursor is moving past …","An error returned when the chunk given does not contain …","The version of Unicode that this version of …","External iterator for a string’s word boundaries.","External iterator for word boundaries and byte offsets.","An iterator over the substrings of a string which, after …","External iterator for a string’s sentence boundaries.","External iterator for sentence boundaries and byte …","An iterator over the substrings of a string which, after …","Methods for segmenting strings according to Unicode …","Returns an iterator over the grapheme clusters of <code>self</code>.","Returns an iterator over the grapheme clusters of <code>self</code> …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","Create a new cursor. The string and initial offset are …","Set the cursor to a new location in the same string.","The current offset of the cursor. Equal to the last value …","Provide additional pre-context when it is needed to …","Determine whether the current cursor location is a …","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …"],"i":[0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,1,1,1,3,4,6,8,7,3,3,4,4,6,8,8,7,7,9,10,10,11,11,3,4,5,7,8,9,10,11,3,4,5,5,5,5,5,5,5,8,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["graphemes",3]],[[["bool",15]],["graphemeindices",3]],[[],["unicodewords",3]],[[],["uwordbounds",3]],[[],["uwordboundindices",3]],[[],["unicodesentences",3]],[[],["usentencebounds",3]],[[],["usentenceboundindices",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["graphemeincomplete",4]],["bool",15]],[[["graphemeincomplete",4]],["bool",15]],[[],["option",4]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],["option",4]],[[],[["str",15],["option",4]]],[[],["option",4]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],["option",4]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[]],[[],[["str",15],["option",4]]],[[],["option",4]],[[]],[[],["graphemeindices",3]],[[],["graphemes",3]],[[],["graphemecursor",3]],[[],["uwordbounds",3]],[[],["uwordboundindices",3]],[[],["unicodesentences",3]],[[],["usentencebounds",3]],[[],["usentenceboundindices",3]],[[],["str",15]],[[],["str",15]],[[["usize",15],["bool",15]],["graphemecursor",3]],[[["usize",15]]],[[],["usize",15]],[[["usize",15],["str",15]]],[[["usize",15],["str",15]],[["bool",15],["graphemeincomplete",4],["result",4]]],[[["usize",15],["str",15]],[["result",4],["graphemeincomplete",4],["option",4]]],[[["usize",15],["str",15]],[["result",4],["graphemeincomplete",4],["option",4]]],[[],["str",15]],[[],["str",15]]],"p":[[4,"GraphemeIncomplete"],[8,"UnicodeSegmentation"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UnicodeWords"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"]]},\
"unicode_width":{"doc":"Determine displayed width of <code>char</code> and <code>str</code> types according …","t":[17,8,10,10,8,10,10],"n":["UNICODE_VERSION","UnicodeWidthChar","width","width_cjk","UnicodeWidthStr","width","width_cjk"],"q":["unicode_width","","","","","",""],"d":["The version of Unicode that this version of unicode-width …","Methods for determining displayed width of Unicode …","Returns the character’s displayed width in columns, or …","Returns the character’s displayed width in columns, or …","Methods for determining displayed width of Unicode …","Returns the string’s displayed width in columns.","Returns the string’s displayed width in columns."],"i":[0,0,1,1,0,2,2],"f":[null,null,[[],[["usize",15],["option",4]]],[[],[["usize",15],["option",4]]],null,[[],["usize",15]],[[],["usize",15]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","t":[17,8,10,10],"n":["UNICODE_VERSION","UnicodeXID","is_xid_start","is_xid_continue"],"q":["unicode_xid","","",""],"d":["The version of Unicode that this version of unicode-xid …","Methods for determining if a character is a valid …","Returns whether the specified character satisfies the ‘…","Returns whether the specified <code>char</code> satisfies the ‘…"],"i":[0,0,1,1],"f":[null,null,[[],["bool",15]],[[],["bool",15]]],"p":[[8,"UnicodeXID"]]},\
"vec_map":{"doc":"A simple map based on a vector for small integer keys. …","tn":["VecMap","Entry","Vacant","Occupied","VacantEntry","OccupiedEntry","new","with_capacity","capacity","reserve_len","reserve_len_exact","shrink_to_fit","keys","values","values_mut","iter","iter_mut","append","split_off","drain","len","is_empty","clear","get","contains_key","get_mut","insert","remove","entry","retain","or_insert","or_insert_with","insert","get","get_mut","into_mut","insert","remove","Iter","IterMut","Keys","Values","ValuesMut","IntoIter","Drain","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","next_back","next_back","next_back","next_back","next_back","next_back","next_back","extend","extend","into_iter","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","next","size_hint","clone","clone_from","clone","clone","clone","default","cmp","eq","partial_cmp","fmt","index","index","index_mut","index_mut","hash","from_iter"],"q":["vec_mapd":["A map optimized for small integer keys.","A view into a single entry in a map, which may either be …","A vacant Entry","An occupied Entry","A vacant Entry.","An occupied Entry.","Creates an empty <code>VecMap</code>.","Creates an empty <code>VecMap</code> with space for at least <code>capacity</code> …","Returns the number of elements the <code>VecMap</code> can hold without…","Reserves capacity for the given <code>VecMap</code> to contain <code>len</code> …","Reserves the minimum capacity for the given <code>VecMap</code> to …","Trims the <code>VecMap</code> of any excess capacity.","Returns an iterator visiting all keys in ascending order …","Returns an iterator visiting all values in ascending …","Returns an iterator visiting all values in ascending …","Returns an iterator visiting all key-value pairs in …","Returns an iterator visiting all key-value pairs in …","Moves all elements from <code>other</code> into the map while …","Splits the collection into two at the given key.","Returns an iterator visiting all key-value pairs in …","Returns the number of elements in the map.","Returns true if the map contains no elements.","Clears the map, removing all key-value pairs.","Returns a reference to the value corresponding to the key.","Returns true if the map contains a value for the …","Returns a mutable reference to the value corresponding to …","Inserts a key-value pair into the map. If the key already …","Removes a key from the map, returning the value at the …","Gets the given key’s corresponding entry in the map for …","Retains only the elements specified by the predicate.","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result …","Sets the value of the entry with the VacantEntry’s key, …","Gets a reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Converts the entry into a mutable reference to its value.","Sets the value of the entry with the OccupiedEntry’s …","Takes the value of the entry out of the map, and returns …","An iterator over the key-value pairs of a map.","An iterator over the key-value pairs of a map, with the …","An iterator over the keys of a map.","An iterator over the values of a map.","An iterator over the values of a map.","A consuming iterator over the key-value pairs of a map.","A draining iterator over the key-value pairs of a map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator visiting all key-value pairs in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,3,4,4,4,4,4,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,5,6,11,7,8,9,10,2,2,2,5,5,6,6,11,11,7,7,8,8,9,9,10,10,2,2,5,7,8,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,null,null,[[]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["keys",3]],[[],["values",3]],[[],["valuesmut",3]],[[],["iter",3]],[[],["itermut",3]],[[]],[[["usize",15]]],[[],["drain",3]],[[],["usize",15]],[[],["bool",15]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["bool",15]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["entry",4]],[[]],[[]],[[["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["usize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[],["intoiter",3]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],[["usize",15],["option",4]]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["iter",3]],[[],["keys",3]],[[],["values",3]],[[]],[[],["ordering",4]],[[],["bool",15]],[[],[["option",4],["ordering",4]]],[[["formatter",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["intoiterator",8]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]}\
}');
initSearch(searchIndex);