initSidebarItems({"constant":[["ALL_HOSTS","All hosts supported by CPAL on this platform."]],"enum":[["BufferSize","The buffer size used by the device."],["BuildStreamError","Error that can happen when creating a `Stream`."],["DefaultStreamConfigError","May occur when attempting to request the default input or output stream format from a `Device`."],["DeviceNameError","An error that may occur while attempting to retrieve a device name."],["DevicesError","An error that might occur while attempting to enumerate the available devices on a system."],["HostId","Unique identifier for available hosts on the platform."],["PauseStreamError","Errors that might occur when calling `pause_stream`."],["PlayStreamError","Errors that might occur when calling `play_stream`."],["SampleFormat","Format that each sample has."],["StreamError","Errors that might occur while a stream is running."],["SupportedBufferSize","Describes the minimum and maximum supported buffer size for the device"],["SupportedStreamConfigsError","Error that can happen when enumerating the list of supported formats."]],"fn":[["available_hosts","Produces a list of hosts that are currently available on the system."],["default_host","The default host for the current compilation target platform."],["host_from_id","Given a unique host identifier, initialise and produce the host if it is available."]],"mod":[["platform","Platform-specific items."],["traits","The suite of traits allowing CPAL to abstract over hosts, devices, event loops and stream IDs."]],"struct":[["BackendSpecificError","Some error has occurred that is specific to the backend from which it was produced."],["Data","A buffer of dynamically typed audio data, passed to raw stream callbacks."],["Device","The Device implementation associated with the platform's dynamically dispatched Host type."],["Devices","The Devices iterator associated with the platform's dynamically dispatched Host type."],["Host","The platform's dynamically dispatched Host type."],["HostUnavailable","The requested host, although supported on this platform, is unavailable."],["InputCallbackInfo","Information relevant to a single call to the user's input stream data callback."],["InputStreamTimestamp","A timestamp associated with a call to an input stream's data callback."],["OutputCallbackInfo","Information relevant to a single call to the user's output stream data callback."],["OutputStreamTimestamp","A timestamp associated with a call to an output stream's data callback."],["SampleRate","The number of samples processed per second for a single channel of audio."],["Stream","The Stream implementation associated with the platform's dynamically dispatched Host type."],["StreamConfig","The set of parameters used to describe how to open a stream."],["StreamInstant","A monotonic time instance associated with a stream, retrieved from either:"],["SupportedInputConfigs","The SupportedInputConfigs iterator associated with the platform's dynamically dispatched Host type."],["SupportedOutputConfigs","The SupportedOutputConfigs iterator associated with the platform's dynamically dispatched Host type."],["SupportedStreamConfig","Describes a single supported stream configuration, retrieved via either a `SupportedStreamConfigRange` instance or one of the `Device::default_input/output_config` methods."],["SupportedStreamConfigRange","Describes a range of supported stream configurations, retrieved via the `Device::supported_input/output_configs` method."]],"trait":[["Sample","Trait for containers that contain PCM data."]],"type":[["ChannelCount","Number of channels."],["FrameCount","The desired number of frames for the hardware buffer."],["InputDevices","A host's device iterator yielding only input devices."],["OutputDevices","A host's device iterator yielding only output devices."]]});